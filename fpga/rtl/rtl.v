// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.50 Production Release
//  HLS Date:       Sun Jul  3 15:07:11 PDT 2011
// 
//  Generated by:   wodonnell@soc1
//  Generated date: Thu Nov 21 22:42:21 2013
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    InitDecode_core_fsm
//  FSM Module
// ------------------------------------------------------------------


module InitDecode_core_fsm (
  clk, rst, core_wen, fsm_output, st_INIT_TRELLIS_LOOP_1_tr0, st_main_3_tr0, st_BUTTERFLY_LOOP_6_tr0,
      st_MAIN_LOOP_1_tr0, st_main_4_tr0, st_UPDATE_MATRIX_LOOP_2_tr0
);
  input clk;
  input rst;
  input core_wen;
  output [33:0] fsm_output;
  reg [33:0] fsm_output;
  input st_INIT_TRELLIS_LOOP_1_tr0;
  input st_main_3_tr0;
  input st_BUTTERFLY_LOOP_6_tr0;
  input st_MAIN_LOOP_1_tr0;
  input st_main_4_tr0;
  input st_UPDATE_MATRIX_LOOP_2_tr0;


  // FSM State Type Declaration for InitDecode_core_fsm_1
  parameter
    st_main = 6'd0,
    st_main_1 = 6'd1,
    st_main_2 = 6'd2,
    st_INIT_TRELLIS_LOOP = 6'd3,
    st_INIT_TRELLIS_LOOP_1 = 6'd4,
    st_main_3 = 6'd5,
    st_MAIN_LOOP = 6'd6,
    st_BUTTERFLY_LOOP = 6'd7,
    st_BUTTERFLY_LOOP_1 = 6'd8,
    st_BUTTERFLY_LOOP_2 = 6'd9,
    st_BUTTERFLY_LOOP_3 = 6'd10,
    st_BUTTERFLY_LOOP_4 = 6'd11,
    st_BUTTERFLY_LOOP_5 = 6'd12,
    st_BUTTERFLY_LOOP_6 = 6'd13,
    st_MAIN_LOOP_1 = 6'd14,
    st_main_4 = 6'd15,
    st_UPDATE_MATRIX_LOOP = 6'd16,
    st_UPDATE_MATRIX_LOOP_1 = 6'd17,
    st_UPDATE_MATRIX_LOOP_2 = 6'd18,
    st_main_5 = 6'd19,
    st_main_6 = 6'd20,
    st_main_7 = 6'd21,
    st_main_8 = 6'd22,
    st_main_9 = 6'd23,
    st_main_10 = 6'd24,
    st_main_11 = 6'd25,
    st_main_12 = 6'd26,
    st_main_13 = 6'd27,
    st_main_14 = 6'd28,
    st_main_15 = 6'd29,
    st_main_16 = 6'd30,
    st_main_17 = 6'd31,
    st_main_18 = 6'd32,
    st_main_19 = 6'd33,
    state_x = 6'b000000;

  reg [5:0] state_var;
  reg [5:0] state_var_NS;

  always @(st_INIT_TRELLIS_LOOP_1_tr0 or st_main_3_tr0 or st_BUTTERFLY_LOOP_6_tr0
      or st_MAIN_LOOP_1_tr0 or st_main_4_tr0 or st_UPDATE_MATRIX_LOOP_2_tr0 or state_var)
  begin : InitDecode_core_fsm_1
    case (state_var)
      st_main : begin
        fsm_output = 34'b1;
        state_var_NS = st_main_1;
      end
      st_main_1 : begin
        fsm_output = 34'b10;
        state_var_NS = st_main_2;
      end
      st_main_2 : begin
        fsm_output = 34'b100;
        state_var_NS = st_INIT_TRELLIS_LOOP;
      end
      st_INIT_TRELLIS_LOOP : begin
        fsm_output = 34'b1000;
        state_var_NS = st_INIT_TRELLIS_LOOP_1;
      end
      st_INIT_TRELLIS_LOOP_1 : begin
        fsm_output = 34'b10000;
        if ( st_INIT_TRELLIS_LOOP_1_tr0 ) begin
          state_var_NS = st_main_3;
        end
        else begin
          state_var_NS = st_INIT_TRELLIS_LOOP;
        end
      end
      st_main_3 : begin
        fsm_output = 34'b100000;
        if ( st_main_3_tr0 ) begin
          state_var_NS = st_main_4;
        end
        else begin
          state_var_NS = st_MAIN_LOOP;
        end
      end
      st_MAIN_LOOP : begin
        fsm_output = 34'b1000000;
        state_var_NS = st_BUTTERFLY_LOOP;
      end
      st_BUTTERFLY_LOOP : begin
        fsm_output = 34'b10000000;
        state_var_NS = st_BUTTERFLY_LOOP_1;
      end
      st_BUTTERFLY_LOOP_1 : begin
        fsm_output = 34'b100000000;
        state_var_NS = st_BUTTERFLY_LOOP_2;
      end
      st_BUTTERFLY_LOOP_2 : begin
        fsm_output = 34'b1000000000;
        state_var_NS = st_BUTTERFLY_LOOP_3;
      end
      st_BUTTERFLY_LOOP_3 : begin
        fsm_output = 34'b10000000000;
        state_var_NS = st_BUTTERFLY_LOOP_4;
      end
      st_BUTTERFLY_LOOP_4 : begin
        fsm_output = 34'b100000000000;
        state_var_NS = st_BUTTERFLY_LOOP_5;
      end
      st_BUTTERFLY_LOOP_5 : begin
        fsm_output = 34'b1000000000000;
        state_var_NS = st_BUTTERFLY_LOOP_6;
      end
      st_BUTTERFLY_LOOP_6 : begin
        fsm_output = 34'b10000000000000;
        if ( st_BUTTERFLY_LOOP_6_tr0 ) begin
          state_var_NS = st_MAIN_LOOP_1;
        end
        else begin
          state_var_NS = st_BUTTERFLY_LOOP;
        end
      end
      st_MAIN_LOOP_1 : begin
        fsm_output = 34'b100000000000000;
        if ( st_MAIN_LOOP_1_tr0 ) begin
          state_var_NS = st_main_4;
        end
        else begin
          state_var_NS = st_MAIN_LOOP;
        end
      end
      st_main_4 : begin
        fsm_output = 34'b1000000000000000;
        if ( st_main_4_tr0 ) begin
          state_var_NS = st_main_5;
        end
        else begin
          state_var_NS = st_UPDATE_MATRIX_LOOP;
        end
      end
      st_UPDATE_MATRIX_LOOP : begin
        fsm_output = 34'b10000000000000000;
        state_var_NS = st_UPDATE_MATRIX_LOOP_1;
      end
      st_UPDATE_MATRIX_LOOP_1 : begin
        fsm_output = 34'b100000000000000000;
        state_var_NS = st_UPDATE_MATRIX_LOOP_2;
      end
      st_UPDATE_MATRIX_LOOP_2 : begin
        fsm_output = 34'b1000000000000000000;
        if ( st_UPDATE_MATRIX_LOOP_2_tr0 ) begin
          state_var_NS = st_main_5;
        end
        else begin
          state_var_NS = st_UPDATE_MATRIX_LOOP;
        end
      end
      st_main_5 : begin
        fsm_output = 34'b10000000000000000000;
        state_var_NS = st_main_6;
      end
      st_main_6 : begin
        fsm_output = 34'b100000000000000000000;
        state_var_NS = st_main_7;
      end
      st_main_7 : begin
        fsm_output = 34'b1000000000000000000000;
        state_var_NS = st_main_8;
      end
      st_main_8 : begin
        fsm_output = 34'b10000000000000000000000;
        state_var_NS = st_main_9;
      end
      st_main_9 : begin
        fsm_output = 34'b100000000000000000000000;
        state_var_NS = st_main_10;
      end
      st_main_10 : begin
        fsm_output = 34'b1000000000000000000000000;
        state_var_NS = st_main_11;
      end
      st_main_11 : begin
        fsm_output = 34'b10000000000000000000000000;
        state_var_NS = st_main_12;
      end
      st_main_12 : begin
        fsm_output = 34'b100000000000000000000000000;
        state_var_NS = st_main_13;
      end
      st_main_13 : begin
        fsm_output = 34'b1000000000000000000000000000;
        state_var_NS = st_main_14;
      end
      st_main_14 : begin
        fsm_output = 34'b10000000000000000000000000000;
        state_var_NS = st_main_15;
      end
      st_main_15 : begin
        fsm_output = 34'b100000000000000000000000000000;
        state_var_NS = st_main_16;
      end
      st_main_16 : begin
        fsm_output = 34'b1000000000000000000000000000000;
        state_var_NS = st_main_17;
      end
      st_main_17 : begin
        fsm_output = 34'b10000000000000000000000000000000;
        state_var_NS = st_main_18;
      end
      st_main_18 : begin
        fsm_output = 34'b100000000000000000000000000000000;
        state_var_NS = st_main_19;
      end
      st_main_19 : begin
        fsm_output = 34'b1000000000000000000000000000000000;
        state_var_NS = st_main;
      end
      default : begin
        fsm_output = 34'b0000000000000000000000000000000000;
        state_var_NS = st_main;
      end
    endcase
  end

  always @(posedge clk) begin
    if ( rst ) begin
      state_var <= st_main;
    end
    else if ( core_wen ) begin
      state_var <= state_var_NS;
    end
  end

endmodule

// ------------------------------------------------------------------
//  Design Unit:    InitDecode_core_wait_ctrl
// ------------------------------------------------------------------


module InitDecode_core_wait_ctrl (
  clk, rst, core_wen, vecNewDistance_rTow0_rsc_dualport_re_core_sct, vecNewDistance_rTow1_rsc_dualport_re_core_sct,
      vecOutputBits_rsc_dualport_we_core_sct, mgc_start_sync_mgc_bsync_rv_rd_core_sct,
      mgc_start_sync_mgc_bsync_rv_vd, mgc_done_sync_mgc_bsync_rdy_rd_core_sct, InitDecode_return_triosy_mgc_io_sync_ld_core_sct,
      vecOutputBits_triosy_mgc_io_sync_ld_core_sct, vecNewDistance_rTow1_triosy_mgc_io_sync_ld_core_sct,
      vecNewDistance_rTow0_triosy_mgc_io_sync_ld_core_sct, iLevel_triosy_mgc_io_sync_ld_core_sct,
      iPunctPatPartB_triosy_mgc_io_sync_ld_core_sct, iPunctPatPartA_triosy_mgc_io_sync_ld_core_sct,
      iNewNumOutBitsPartB_triosy_mgc_io_sync_ld_core_sct, iNewNumOutBitsPartA_triosy_mgc_io_sync_ld_core_sct,
      iN2_triosy_mgc_io_sync_ld_core_sct, iN1_triosy_mgc_io_sync_ld_core_sct, eNewChannelType_triosy_mgc_io_sync_ld_core_sct,
      eNewCodingScheme_triosy_mgc_io_sync_ld_core_sct, vecNewDistance_rTow0_rsc_dualport_oswt_1,
      vecNewDistance_rTow0_rsc_dualport_bcwt_1, vecNewDistance_rTow0_rsc_dualport_re_core_psct,
      vecNewDistance_rTow1_rsc_dualport_bcwt_1, vecNewDistance_rTow1_rsc_dualport_re_core_psct,
      vecOutputBits_rsc_dualport_oswt, vecOutputBits_rsc_dualport_we_core_psct, mgc_start_sync_mgc_bsync_rv_rd_core_psct,
      mgc_done_sync_mgc_bsync_rdy_rd_core_psct, vecOutputBits_triosy_mgc_io_sync_ld_core_psct,
      vecNewDistance_rTow0_rsc_dualport_oswt_1_pff, vecOutputBits_rsc_dualport_oswt_pff
);
  input clk;
  input rst;
  output core_wen;
  output [1:0] vecNewDistance_rTow0_rsc_dualport_re_core_sct;
  output [1:0] vecNewDistance_rTow1_rsc_dualport_re_core_sct;
  output [1:0] vecOutputBits_rsc_dualport_we_core_sct;
  output mgc_start_sync_mgc_bsync_rv_rd_core_sct;
  input mgc_start_sync_mgc_bsync_rv_vd;
  output mgc_done_sync_mgc_bsync_rdy_rd_core_sct;
  output InitDecode_return_triosy_mgc_io_sync_ld_core_sct;
  output vecOutputBits_triosy_mgc_io_sync_ld_core_sct;
  output vecNewDistance_rTow1_triosy_mgc_io_sync_ld_core_sct;
  output vecNewDistance_rTow0_triosy_mgc_io_sync_ld_core_sct;
  output iLevel_triosy_mgc_io_sync_ld_core_sct;
  output iPunctPatPartB_triosy_mgc_io_sync_ld_core_sct;
  output iPunctPatPartA_triosy_mgc_io_sync_ld_core_sct;
  output iNewNumOutBitsPartB_triosy_mgc_io_sync_ld_core_sct;
  output iNewNumOutBitsPartA_triosy_mgc_io_sync_ld_core_sct;
  output iN2_triosy_mgc_io_sync_ld_core_sct;
  output iN1_triosy_mgc_io_sync_ld_core_sct;
  output eNewChannelType_triosy_mgc_io_sync_ld_core_sct;
  output eNewCodingScheme_triosy_mgc_io_sync_ld_core_sct;
  input vecNewDistance_rTow0_rsc_dualport_oswt_1;
  output vecNewDistance_rTow0_rsc_dualport_bcwt_1;
  reg vecNewDistance_rTow0_rsc_dualport_bcwt_1;
  input [1:0] vecNewDistance_rTow0_rsc_dualport_re_core_psct;
  output vecNewDistance_rTow1_rsc_dualport_bcwt_1;
  reg vecNewDistance_rTow1_rsc_dualport_bcwt_1;
  input [1:0] vecNewDistance_rTow1_rsc_dualport_re_core_psct;
  input vecOutputBits_rsc_dualport_oswt;
  input [1:0] vecOutputBits_rsc_dualport_we_core_psct;
  input mgc_start_sync_mgc_bsync_rv_rd_core_psct;
  input mgc_done_sync_mgc_bsync_rdy_rd_core_psct;
  input vecOutputBits_triosy_mgc_io_sync_ld_core_psct;
  input vecNewDistance_rTow0_rsc_dualport_oswt_1_pff;
  input vecOutputBits_rsc_dualport_oswt_pff;


  // Interconnect Declarations
  wire vecNewDistance_rTow0_rsc_dualport_tiswt0_1;
  wire vecNewDistance_rTow0_rsc_dualport_biwt_1;
  reg vecNewDistance_rTow0_rsc_dualport_icwt_1;
  reg core_wten;
  wire vecNewDistance_rTow1_rsc_dualport_biwt_1;
  reg vecNewDistance_rTow1_rsc_dualport_icwt_1;
  wire vecOutputBits_rsc_dualport_tiswt0;
  wire vecOutputBits_rsc_dualport_biwt;
  reg vecOutputBits_rsc_dualport_icwt;
  reg vecOutputBits_rsc_dualport_bcwt;
  wire mgc_start_sync_mgc_bsync_rv_ogwt;
  wire mgc_start_sync_mgc_bsync_rv_pdswt0;
  wire mgc_start_sync_mgc_bsync_rv_biwt;
  reg mgc_start_sync_mgc_bsync_rv_icwt;
  reg mgc_start_sync_mgc_bsync_rv_bcwt;
  wire mgc_done_sync_mgc_bsync_rdy_ogwt;
  wire mgc_done_sync_mgc_bsync_rdy_pdswt0;
  reg mgc_done_sync_mgc_bsync_rdy_icwt;
  reg mgc_done_sync_mgc_bsync_rdy_bcwt;
  wire InitDecode_return_triosy_mgc_io_sync_ogwt;
  reg InitDecode_return_triosy_mgc_io_sync_icwt;
  reg InitDecode_return_triosy_mgc_io_sync_bcwt;
  wire vecOutputBits_triosy_mgc_io_sync_ogwt;
  wire vecOutputBits_triosy_mgc_io_sync_pdswt0;
  reg vecOutputBits_triosy_mgc_io_sync_icwt;
  reg vecOutputBits_triosy_mgc_io_sync_bcwt;
  wire vecNewDistance_rTow1_triosy_mgc_io_sync_ogwt;
  reg vecNewDistance_rTow1_triosy_mgc_io_sync_icwt;
  reg vecNewDistance_rTow1_triosy_mgc_io_sync_bcwt;
  wire vecNewDistance_rTow0_triosy_mgc_io_sync_ogwt;
  reg vecNewDistance_rTow0_triosy_mgc_io_sync_icwt;
  reg vecNewDistance_rTow0_triosy_mgc_io_sync_bcwt;
  wire iLevel_triosy_mgc_io_sync_ogwt;
  reg iLevel_triosy_mgc_io_sync_icwt;
  reg iLevel_triosy_mgc_io_sync_bcwt;
  wire iPunctPatPartB_triosy_mgc_io_sync_ogwt;
  reg iPunctPatPartB_triosy_mgc_io_sync_icwt;
  reg iPunctPatPartB_triosy_mgc_io_sync_bcwt;
  wire iPunctPatPartA_triosy_mgc_io_sync_ogwt;
  reg iPunctPatPartA_triosy_mgc_io_sync_icwt;
  reg iPunctPatPartA_triosy_mgc_io_sync_bcwt;
  wire iNewNumOutBitsPartB_triosy_mgc_io_sync_ogwt;
  reg iNewNumOutBitsPartB_triosy_mgc_io_sync_icwt;
  reg iNewNumOutBitsPartB_triosy_mgc_io_sync_bcwt;
  wire iNewNumOutBitsPartA_triosy_mgc_io_sync_ogwt;
  reg iNewNumOutBitsPartA_triosy_mgc_io_sync_icwt;
  reg iNewNumOutBitsPartA_triosy_mgc_io_sync_bcwt;
  wire iN2_triosy_mgc_io_sync_ogwt;
  reg iN2_triosy_mgc_io_sync_icwt;
  reg iN2_triosy_mgc_io_sync_bcwt;
  wire iN1_triosy_mgc_io_sync_ogwt;
  reg iN1_triosy_mgc_io_sync_icwt;
  reg iN1_triosy_mgc_io_sync_bcwt;
  wire eNewChannelType_triosy_mgc_io_sync_ogwt;
  reg eNewChannelType_triosy_mgc_io_sync_icwt;
  reg eNewChannelType_triosy_mgc_io_sync_bcwt;
  wire eNewCodingScheme_triosy_mgc_io_sync_ogwt;
  reg eNewCodingScheme_triosy_mgc_io_sync_icwt;
  reg eNewCodingScheme_triosy_mgc_io_sync_bcwt;
  wire and_4_cse;
  wire and_38_cse;
  wire and_46_cse;
  wire vecNewDistance_rTow0_rsc_dualport_tiswt0_1_pff;

  assign vecNewDistance_rTow0_rsc_dualport_tiswt0_1 = (~ core_wten) & vecNewDistance_rTow0_rsc_dualport_oswt_1;
  assign vecNewDistance_rTow0_rsc_dualport_biwt_1 = vecNewDistance_rTow0_rsc_dualport_tiswt0_1
      | vecNewDistance_rTow0_rsc_dualport_icwt_1;
  assign and_4_cse = vecNewDistance_rTow0_rsc_dualport_oswt_1 & core_wen;
  assign vecNewDistance_rTow1_rsc_dualport_biwt_1 = vecNewDistance_rTow0_rsc_dualport_tiswt0_1
      | vecNewDistance_rTow1_rsc_dualport_icwt_1;
  assign vecOutputBits_rsc_dualport_tiswt0 = (~ core_wten) & vecOutputBits_rsc_dualport_oswt;
  assign vecOutputBits_rsc_dualport_biwt = vecOutputBits_rsc_dualport_tiswt0 | vecOutputBits_rsc_dualport_icwt;
  assign mgc_start_sync_mgc_bsync_rv_pdswt0 = (~ core_wten) & mgc_start_sync_mgc_bsync_rv_rd_core_psct;
  assign mgc_start_sync_mgc_bsync_rv_biwt = mgc_start_sync_mgc_bsync_rv_ogwt & mgc_start_sync_mgc_bsync_rv_vd;
  assign mgc_start_sync_mgc_bsync_rv_ogwt = mgc_start_sync_mgc_bsync_rv_pdswt0 |
      mgc_start_sync_mgc_bsync_rv_icwt;
  assign mgc_start_sync_mgc_bsync_rv_rd_core_sct = mgc_start_sync_mgc_bsync_rv_rd_core_psct
      & mgc_start_sync_mgc_bsync_rv_ogwt;
  assign mgc_done_sync_mgc_bsync_rdy_pdswt0 = (~ core_wten) & mgc_done_sync_mgc_bsync_rdy_rd_core_psct;
  assign mgc_done_sync_mgc_bsync_rdy_ogwt = mgc_done_sync_mgc_bsync_rdy_pdswt0 |
      mgc_done_sync_mgc_bsync_rdy_icwt;
  assign and_38_cse = mgc_done_sync_mgc_bsync_rdy_rd_core_psct & core_wen;
  assign mgc_done_sync_mgc_bsync_rdy_rd_core_sct = mgc_done_sync_mgc_bsync_rdy_rd_core_psct
      & mgc_done_sync_mgc_bsync_rdy_ogwt;
  assign InitDecode_return_triosy_mgc_io_sync_ogwt = mgc_done_sync_mgc_bsync_rdy_pdswt0
      | InitDecode_return_triosy_mgc_io_sync_icwt;
  assign InitDecode_return_triosy_mgc_io_sync_ld_core_sct = mgc_done_sync_mgc_bsync_rdy_rd_core_psct
      & InitDecode_return_triosy_mgc_io_sync_ogwt;
  assign vecOutputBits_triosy_mgc_io_sync_pdswt0 = (~ core_wten) & vecOutputBits_triosy_mgc_io_sync_ld_core_psct;
  assign vecOutputBits_triosy_mgc_io_sync_ogwt = vecOutputBits_triosy_mgc_io_sync_pdswt0
      | vecOutputBits_triosy_mgc_io_sync_icwt;
  assign and_46_cse = vecOutputBits_triosy_mgc_io_sync_ld_core_psct & core_wen;
  assign vecOutputBits_triosy_mgc_io_sync_ld_core_sct = vecOutputBits_triosy_mgc_io_sync_ld_core_psct
      & vecOutputBits_triosy_mgc_io_sync_ogwt;
  assign vecNewDistance_rTow1_triosy_mgc_io_sync_ogwt = vecOutputBits_triosy_mgc_io_sync_pdswt0
      | vecNewDistance_rTow1_triosy_mgc_io_sync_icwt;
  assign vecNewDistance_rTow1_triosy_mgc_io_sync_ld_core_sct = vecOutputBits_triosy_mgc_io_sync_ld_core_psct
      & vecNewDistance_rTow1_triosy_mgc_io_sync_ogwt;
  assign vecNewDistance_rTow0_triosy_mgc_io_sync_ogwt = vecOutputBits_triosy_mgc_io_sync_pdswt0
      | vecNewDistance_rTow0_triosy_mgc_io_sync_icwt;
  assign vecNewDistance_rTow0_triosy_mgc_io_sync_ld_core_sct = vecOutputBits_triosy_mgc_io_sync_ld_core_psct
      & vecNewDistance_rTow0_triosy_mgc_io_sync_ogwt;
  assign iLevel_triosy_mgc_io_sync_ogwt = vecOutputBits_triosy_mgc_io_sync_pdswt0
      | iLevel_triosy_mgc_io_sync_icwt;
  assign iLevel_triosy_mgc_io_sync_ld_core_sct = vecOutputBits_triosy_mgc_io_sync_ld_core_psct
      & iLevel_triosy_mgc_io_sync_ogwt;
  assign iPunctPatPartB_triosy_mgc_io_sync_ogwt = vecOutputBits_triosy_mgc_io_sync_pdswt0
      | iPunctPatPartB_triosy_mgc_io_sync_icwt;
  assign iPunctPatPartB_triosy_mgc_io_sync_ld_core_sct = vecOutputBits_triosy_mgc_io_sync_ld_core_psct
      & iPunctPatPartB_triosy_mgc_io_sync_ogwt;
  assign iPunctPatPartA_triosy_mgc_io_sync_ogwt = vecOutputBits_triosy_mgc_io_sync_pdswt0
      | iPunctPatPartA_triosy_mgc_io_sync_icwt;
  assign iPunctPatPartA_triosy_mgc_io_sync_ld_core_sct = vecOutputBits_triosy_mgc_io_sync_ld_core_psct
      & iPunctPatPartA_triosy_mgc_io_sync_ogwt;
  assign iNewNumOutBitsPartB_triosy_mgc_io_sync_ogwt = vecOutputBits_triosy_mgc_io_sync_pdswt0
      | iNewNumOutBitsPartB_triosy_mgc_io_sync_icwt;
  assign iNewNumOutBitsPartB_triosy_mgc_io_sync_ld_core_sct = vecOutputBits_triosy_mgc_io_sync_ld_core_psct
      & iNewNumOutBitsPartB_triosy_mgc_io_sync_ogwt;
  assign iNewNumOutBitsPartA_triosy_mgc_io_sync_ogwt = vecOutputBits_triosy_mgc_io_sync_pdswt0
      | iNewNumOutBitsPartA_triosy_mgc_io_sync_icwt;
  assign iNewNumOutBitsPartA_triosy_mgc_io_sync_ld_core_sct = vecOutputBits_triosy_mgc_io_sync_ld_core_psct
      & iNewNumOutBitsPartA_triosy_mgc_io_sync_ogwt;
  assign iN2_triosy_mgc_io_sync_ogwt = vecOutputBits_triosy_mgc_io_sync_pdswt0 |
      iN2_triosy_mgc_io_sync_icwt;
  assign iN2_triosy_mgc_io_sync_ld_core_sct = vecOutputBits_triosy_mgc_io_sync_ld_core_psct
      & iN2_triosy_mgc_io_sync_ogwt;
  assign iN1_triosy_mgc_io_sync_ogwt = vecOutputBits_triosy_mgc_io_sync_pdswt0 |
      iN1_triosy_mgc_io_sync_icwt;
  assign iN1_triosy_mgc_io_sync_ld_core_sct = vecOutputBits_triosy_mgc_io_sync_ld_core_psct
      & iN1_triosy_mgc_io_sync_ogwt;
  assign eNewChannelType_triosy_mgc_io_sync_ogwt = vecOutputBits_triosy_mgc_io_sync_pdswt0
      | eNewChannelType_triosy_mgc_io_sync_icwt;
  assign eNewChannelType_triosy_mgc_io_sync_ld_core_sct = vecOutputBits_triosy_mgc_io_sync_ld_core_psct
      & eNewChannelType_triosy_mgc_io_sync_ogwt;
  assign eNewCodingScheme_triosy_mgc_io_sync_ogwt = vecOutputBits_triosy_mgc_io_sync_pdswt0
      | eNewCodingScheme_triosy_mgc_io_sync_icwt;
  assign eNewCodingScheme_triosy_mgc_io_sync_ld_core_sct = vecOutputBits_triosy_mgc_io_sync_ld_core_psct
      & eNewCodingScheme_triosy_mgc_io_sync_ogwt;
  assign core_wen = ((~ vecNewDistance_rTow0_rsc_dualport_oswt_1) | vecNewDistance_rTow0_rsc_dualport_biwt_1
      | vecNewDistance_rTow0_rsc_dualport_bcwt_1) & ((~ vecNewDistance_rTow0_rsc_dualport_oswt_1)
      | vecNewDistance_rTow1_rsc_dualport_biwt_1 | vecNewDistance_rTow1_rsc_dualport_bcwt_1)
      & ((~ vecOutputBits_rsc_dualport_oswt) | vecOutputBits_rsc_dualport_biwt |
      vecOutputBits_rsc_dualport_bcwt) & ((~ mgc_start_sync_mgc_bsync_rv_rd_core_psct)
      | mgc_start_sync_mgc_bsync_rv_biwt | mgc_start_sync_mgc_bsync_rv_bcwt) & ((~
      mgc_done_sync_mgc_bsync_rdy_rd_core_psct) | mgc_done_sync_mgc_bsync_rdy_ogwt
      | mgc_done_sync_mgc_bsync_rdy_bcwt) & ((~ mgc_done_sync_mgc_bsync_rdy_rd_core_psct)
      | InitDecode_return_triosy_mgc_io_sync_ogwt | InitDecode_return_triosy_mgc_io_sync_bcwt)
      & ((~ vecOutputBits_triosy_mgc_io_sync_ld_core_psct) | vecOutputBits_triosy_mgc_io_sync_ogwt
      | vecOutputBits_triosy_mgc_io_sync_bcwt) & ((~ vecOutputBits_triosy_mgc_io_sync_ld_core_psct)
      | vecNewDistance_rTow1_triosy_mgc_io_sync_ogwt | vecNewDistance_rTow1_triosy_mgc_io_sync_bcwt)
      & ((~ vecOutputBits_triosy_mgc_io_sync_ld_core_psct) | vecNewDistance_rTow0_triosy_mgc_io_sync_ogwt
      | vecNewDistance_rTow0_triosy_mgc_io_sync_bcwt) & ((~ vecOutputBits_triosy_mgc_io_sync_ld_core_psct)
      | iLevel_triosy_mgc_io_sync_ogwt | iLevel_triosy_mgc_io_sync_bcwt) & ((~ vecOutputBits_triosy_mgc_io_sync_ld_core_psct)
      | iPunctPatPartB_triosy_mgc_io_sync_ogwt | iPunctPatPartB_triosy_mgc_io_sync_bcwt)
      & ((~ vecOutputBits_triosy_mgc_io_sync_ld_core_psct) | iPunctPatPartA_triosy_mgc_io_sync_ogwt
      | iPunctPatPartA_triosy_mgc_io_sync_bcwt) & ((~ vecOutputBits_triosy_mgc_io_sync_ld_core_psct)
      | iNewNumOutBitsPartB_triosy_mgc_io_sync_ogwt | iNewNumOutBitsPartB_triosy_mgc_io_sync_bcwt)
      & ((~ vecOutputBits_triosy_mgc_io_sync_ld_core_psct) | iNewNumOutBitsPartA_triosy_mgc_io_sync_ogwt
      | iNewNumOutBitsPartA_triosy_mgc_io_sync_bcwt) & ((~ vecOutputBits_triosy_mgc_io_sync_ld_core_psct)
      | iN2_triosy_mgc_io_sync_ogwt | iN2_triosy_mgc_io_sync_bcwt) & ((~ vecOutputBits_triosy_mgc_io_sync_ld_core_psct)
      | iN1_triosy_mgc_io_sync_ogwt | iN1_triosy_mgc_io_sync_bcwt) & ((~ vecOutputBits_triosy_mgc_io_sync_ld_core_psct)
      | eNewChannelType_triosy_mgc_io_sync_ogwt | eNewChannelType_triosy_mgc_io_sync_bcwt)
      & ((~ vecOutputBits_triosy_mgc_io_sync_ld_core_psct) | eNewCodingScheme_triosy_mgc_io_sync_ogwt
      | eNewCodingScheme_triosy_mgc_io_sync_bcwt);
  assign vecNewDistance_rTow0_rsc_dualport_re_core_sct = {1'b0 , ((vecNewDistance_rTow0_rsc_dualport_re_core_psct[0])
      & vecNewDistance_rTow0_rsc_dualport_tiswt0_1_pff)};
  assign vecNewDistance_rTow0_rsc_dualport_tiswt0_1_pff = core_wen & vecNewDistance_rTow0_rsc_dualport_oswt_1_pff;
  assign vecNewDistance_rTow1_rsc_dualport_re_core_sct = {1'b0 , ((vecNewDistance_rTow1_rsc_dualport_re_core_psct[0])
      & vecNewDistance_rTow0_rsc_dualport_tiswt0_1_pff)};
  assign vecOutputBits_rsc_dualport_we_core_sct = {1'b0 , ((vecOutputBits_rsc_dualport_we_core_psct[0])
      & core_wen & vecOutputBits_rsc_dualport_oswt_pff)};
  always @(posedge clk) begin
    if ( rst ) begin
      vecNewDistance_rTow0_rsc_dualport_icwt_1 <= 1'b0;
      vecNewDistance_rTow0_rsc_dualport_bcwt_1 <= 1'b0;
      vecNewDistance_rTow1_rsc_dualport_icwt_1 <= 1'b0;
      vecNewDistance_rTow1_rsc_dualport_bcwt_1 <= 1'b0;
      vecOutputBits_rsc_dualport_icwt <= 1'b0;
      vecOutputBits_rsc_dualport_bcwt <= 1'b0;
      mgc_start_sync_mgc_bsync_rv_icwt <= 1'b0;
      mgc_start_sync_mgc_bsync_rv_bcwt <= 1'b0;
      mgc_done_sync_mgc_bsync_rdy_icwt <= 1'b0;
      mgc_done_sync_mgc_bsync_rdy_bcwt <= 1'b0;
      InitDecode_return_triosy_mgc_io_sync_icwt <= 1'b0;
      InitDecode_return_triosy_mgc_io_sync_bcwt <= 1'b0;
      vecOutputBits_triosy_mgc_io_sync_icwt <= 1'b0;
      vecOutputBits_triosy_mgc_io_sync_bcwt <= 1'b0;
      vecNewDistance_rTow1_triosy_mgc_io_sync_icwt <= 1'b0;
      vecNewDistance_rTow1_triosy_mgc_io_sync_bcwt <= 1'b0;
      vecNewDistance_rTow0_triosy_mgc_io_sync_icwt <= 1'b0;
      vecNewDistance_rTow0_triosy_mgc_io_sync_bcwt <= 1'b0;
      iLevel_triosy_mgc_io_sync_icwt <= 1'b0;
      iLevel_triosy_mgc_io_sync_bcwt <= 1'b0;
      iPunctPatPartB_triosy_mgc_io_sync_icwt <= 1'b0;
      iPunctPatPartB_triosy_mgc_io_sync_bcwt <= 1'b0;
      iPunctPatPartA_triosy_mgc_io_sync_icwt <= 1'b0;
      iPunctPatPartA_triosy_mgc_io_sync_bcwt <= 1'b0;
      iNewNumOutBitsPartB_triosy_mgc_io_sync_icwt <= 1'b0;
      iNewNumOutBitsPartB_triosy_mgc_io_sync_bcwt <= 1'b0;
      iNewNumOutBitsPartA_triosy_mgc_io_sync_icwt <= 1'b0;
      iNewNumOutBitsPartA_triosy_mgc_io_sync_bcwt <= 1'b0;
      iN2_triosy_mgc_io_sync_icwt <= 1'b0;
      iN2_triosy_mgc_io_sync_bcwt <= 1'b0;
      iN1_triosy_mgc_io_sync_icwt <= 1'b0;
      iN1_triosy_mgc_io_sync_bcwt <= 1'b0;
      eNewChannelType_triosy_mgc_io_sync_icwt <= 1'b0;
      eNewChannelType_triosy_mgc_io_sync_bcwt <= 1'b0;
      eNewCodingScheme_triosy_mgc_io_sync_icwt <= 1'b0;
      eNewCodingScheme_triosy_mgc_io_sync_bcwt <= 1'b0;
      core_wten <= 1'b0;
    end
    else begin
      vecNewDistance_rTow0_rsc_dualport_icwt_1 <= vecNewDistance_rTow0_rsc_dualport_icwt_1
          ^ vecNewDistance_rTow0_rsc_dualport_tiswt0_1 ^ vecNewDistance_rTow0_rsc_dualport_biwt_1;
      vecNewDistance_rTow0_rsc_dualport_bcwt_1 <= vecNewDistance_rTow0_rsc_dualport_bcwt_1
          ^ vecNewDistance_rTow0_rsc_dualport_biwt_1 ^ and_4_cse;
      vecNewDistance_rTow1_rsc_dualport_icwt_1 <= vecNewDistance_rTow1_rsc_dualport_icwt_1
          ^ vecNewDistance_rTow0_rsc_dualport_tiswt0_1 ^ vecNewDistance_rTow1_rsc_dualport_biwt_1;
      vecNewDistance_rTow1_rsc_dualport_bcwt_1 <= vecNewDistance_rTow1_rsc_dualport_bcwt_1
          ^ vecNewDistance_rTow1_rsc_dualport_biwt_1 ^ and_4_cse;
      vecOutputBits_rsc_dualport_icwt <= vecOutputBits_rsc_dualport_icwt ^ vecOutputBits_rsc_dualport_tiswt0
          ^ vecOutputBits_rsc_dualport_biwt;
      vecOutputBits_rsc_dualport_bcwt <= vecOutputBits_rsc_dualport_bcwt ^ vecOutputBits_rsc_dualport_biwt
          ^ (vecOutputBits_rsc_dualport_oswt & core_wen);
      mgc_start_sync_mgc_bsync_rv_icwt <= mgc_start_sync_mgc_bsync_rv_icwt ^ mgc_start_sync_mgc_bsync_rv_pdswt0
          ^ mgc_start_sync_mgc_bsync_rv_biwt;
      mgc_start_sync_mgc_bsync_rv_bcwt <= mgc_start_sync_mgc_bsync_rv_bcwt ^ mgc_start_sync_mgc_bsync_rv_biwt
          ^ (mgc_start_sync_mgc_bsync_rv_rd_core_psct & core_wen);
      mgc_done_sync_mgc_bsync_rdy_icwt <= mgc_done_sync_mgc_bsync_rdy_icwt ^ mgc_done_sync_mgc_bsync_rdy_pdswt0
          ^ mgc_done_sync_mgc_bsync_rdy_ogwt;
      mgc_done_sync_mgc_bsync_rdy_bcwt <= mgc_done_sync_mgc_bsync_rdy_bcwt ^ mgc_done_sync_mgc_bsync_rdy_ogwt
          ^ and_38_cse;
      InitDecode_return_triosy_mgc_io_sync_icwt <= InitDecode_return_triosy_mgc_io_sync_icwt
          ^ mgc_done_sync_mgc_bsync_rdy_pdswt0 ^ InitDecode_return_triosy_mgc_io_sync_ogwt;
      InitDecode_return_triosy_mgc_io_sync_bcwt <= InitDecode_return_triosy_mgc_io_sync_bcwt
          ^ InitDecode_return_triosy_mgc_io_sync_ogwt ^ and_38_cse;
      vecOutputBits_triosy_mgc_io_sync_icwt <= vecOutputBits_triosy_mgc_io_sync_icwt
          ^ vecOutputBits_triosy_mgc_io_sync_pdswt0 ^ vecOutputBits_triosy_mgc_io_sync_ogwt;
      vecOutputBits_triosy_mgc_io_sync_bcwt <= vecOutputBits_triosy_mgc_io_sync_bcwt
          ^ vecOutputBits_triosy_mgc_io_sync_ogwt ^ and_46_cse;
      vecNewDistance_rTow1_triosy_mgc_io_sync_icwt <= vecNewDistance_rTow1_triosy_mgc_io_sync_icwt
          ^ vecOutputBits_triosy_mgc_io_sync_pdswt0 ^ vecNewDistance_rTow1_triosy_mgc_io_sync_ogwt;
      vecNewDistance_rTow1_triosy_mgc_io_sync_bcwt <= vecNewDistance_rTow1_triosy_mgc_io_sync_bcwt
          ^ vecNewDistance_rTow1_triosy_mgc_io_sync_ogwt ^ and_46_cse;
      vecNewDistance_rTow0_triosy_mgc_io_sync_icwt <= vecNewDistance_rTow0_triosy_mgc_io_sync_icwt
          ^ vecOutputBits_triosy_mgc_io_sync_pdswt0 ^ vecNewDistance_rTow0_triosy_mgc_io_sync_ogwt;
      vecNewDistance_rTow0_triosy_mgc_io_sync_bcwt <= vecNewDistance_rTow0_triosy_mgc_io_sync_bcwt
          ^ vecNewDistance_rTow0_triosy_mgc_io_sync_ogwt ^ and_46_cse;
      iLevel_triosy_mgc_io_sync_icwt <= iLevel_triosy_mgc_io_sync_icwt ^ vecOutputBits_triosy_mgc_io_sync_pdswt0
          ^ iLevel_triosy_mgc_io_sync_ogwt;
      iLevel_triosy_mgc_io_sync_bcwt <= iLevel_triosy_mgc_io_sync_bcwt ^ iLevel_triosy_mgc_io_sync_ogwt
          ^ and_46_cse;
      iPunctPatPartB_triosy_mgc_io_sync_icwt <= iPunctPatPartB_triosy_mgc_io_sync_icwt
          ^ vecOutputBits_triosy_mgc_io_sync_pdswt0 ^ iPunctPatPartB_triosy_mgc_io_sync_ogwt;
      iPunctPatPartB_triosy_mgc_io_sync_bcwt <= iPunctPatPartB_triosy_mgc_io_sync_bcwt
          ^ iPunctPatPartB_triosy_mgc_io_sync_ogwt ^ and_46_cse;
      iPunctPatPartA_triosy_mgc_io_sync_icwt <= iPunctPatPartA_triosy_mgc_io_sync_icwt
          ^ vecOutputBits_triosy_mgc_io_sync_pdswt0 ^ iPunctPatPartA_triosy_mgc_io_sync_ogwt;
      iPunctPatPartA_triosy_mgc_io_sync_bcwt <= iPunctPatPartA_triosy_mgc_io_sync_bcwt
          ^ iPunctPatPartA_triosy_mgc_io_sync_ogwt ^ and_46_cse;
      iNewNumOutBitsPartB_triosy_mgc_io_sync_icwt <= iNewNumOutBitsPartB_triosy_mgc_io_sync_icwt
          ^ vecOutputBits_triosy_mgc_io_sync_pdswt0 ^ iNewNumOutBitsPartB_triosy_mgc_io_sync_ogwt;
      iNewNumOutBitsPartB_triosy_mgc_io_sync_bcwt <= iNewNumOutBitsPartB_triosy_mgc_io_sync_bcwt
          ^ iNewNumOutBitsPartB_triosy_mgc_io_sync_ogwt ^ and_46_cse;
      iNewNumOutBitsPartA_triosy_mgc_io_sync_icwt <= iNewNumOutBitsPartA_triosy_mgc_io_sync_icwt
          ^ vecOutputBits_triosy_mgc_io_sync_pdswt0 ^ iNewNumOutBitsPartA_triosy_mgc_io_sync_ogwt;
      iNewNumOutBitsPartA_triosy_mgc_io_sync_bcwt <= iNewNumOutBitsPartA_triosy_mgc_io_sync_bcwt
          ^ iNewNumOutBitsPartA_triosy_mgc_io_sync_ogwt ^ and_46_cse;
      iN2_triosy_mgc_io_sync_icwt <= iN2_triosy_mgc_io_sync_icwt ^ vecOutputBits_triosy_mgc_io_sync_pdswt0
          ^ iN2_triosy_mgc_io_sync_ogwt;
      iN2_triosy_mgc_io_sync_bcwt <= iN2_triosy_mgc_io_sync_bcwt ^ iN2_triosy_mgc_io_sync_ogwt
          ^ and_46_cse;
      iN1_triosy_mgc_io_sync_icwt <= iN1_triosy_mgc_io_sync_icwt ^ vecOutputBits_triosy_mgc_io_sync_pdswt0
          ^ iN1_triosy_mgc_io_sync_ogwt;
      iN1_triosy_mgc_io_sync_bcwt <= iN1_triosy_mgc_io_sync_bcwt ^ iN1_triosy_mgc_io_sync_ogwt
          ^ and_46_cse;
      eNewChannelType_triosy_mgc_io_sync_icwt <= eNewChannelType_triosy_mgc_io_sync_icwt
          ^ vecOutputBits_triosy_mgc_io_sync_pdswt0 ^ eNewChannelType_triosy_mgc_io_sync_ogwt;
      eNewChannelType_triosy_mgc_io_sync_bcwt <= eNewChannelType_triosy_mgc_io_sync_bcwt
          ^ eNewChannelType_triosy_mgc_io_sync_ogwt ^ and_46_cse;
      eNewCodingScheme_triosy_mgc_io_sync_icwt <= eNewCodingScheme_triosy_mgc_io_sync_icwt
          ^ vecOutputBits_triosy_mgc_io_sync_pdswt0 ^ eNewCodingScheme_triosy_mgc_io_sync_ogwt;
      eNewCodingScheme_triosy_mgc_io_sync_bcwt <= eNewCodingScheme_triosy_mgc_io_sync_bcwt
          ^ eNewCodingScheme_triosy_mgc_io_sync_ogwt ^ and_46_cse;
      core_wten <= ~ core_wen;
    end
  end
endmodule

// ------------------------------------------------------------------
//  Design Unit:    InitDecode_core
// ------------------------------------------------------------------


module InitDecode_core (
  clk, rst, vecNewDistance_rTow0_rsc_dualport_data_out, vecNewDistance_rTow1_rsc_dualport_data_out,
      core_wen, vecNewDistance_rTow0_rsc_dualport_re_core_sct, vecNewDistance_rTow1_rsc_dualport_re_core_sct,
      vecOutputBits_rsc_dualport_data_in_core, vecOutputBits_rsc_dualport_addr_core,
      vecOutputBits_rsc_dualport_we_core_sct, iNewNumOutBitsPartA_rsc_mgc_in_wire_d,
      iNewNumOutBitsPartB_rsc_mgc_in_wire_d, InitDecode_return_rsc_mgc_out_stdreg_d,
      vecTrelMetric1_rsc_dualport_data_in, vecTrelMetric1_rsc_dualport_addr, vecTrelMetric1_rsc_dualport_re,
      vecTrelMetric1_rsc_dualport_we, vecTrelMetric1_rsc_dualport_data_out, vecTrelMetric2_rsc_dualport_data_in,
      vecTrelMetric2_rsc_dualport_addr, vecTrelMetric2_rsc_dualport_re, vecTrelMetric2_rsc_dualport_we,
      vecTrelMetric2_rsc_dualport_data_out, matdecDecisions_rsc_dualport_data_in,
      matdecDecisions_rsc_dualport_addr, matdecDecisions_rsc_dualport_re, matdecDecisions_rsc_dualport_we,
      matdecDecisions_rsc_dualport_data_out, mgc_start_sync_mgc_bsync_rv_rd_core_sct,
      mgc_start_sync_mgc_bsync_rv_vd, mgc_done_sync_mgc_bsync_rdy_rd_core_sct, InitDecode_return_triosy_mgc_io_sync_ld_core_sct,
      vecOutputBits_triosy_mgc_io_sync_ld_core_sct, vecNewDistance_rTow1_triosy_mgc_io_sync_ld_core_sct,
      vecNewDistance_rTow0_triosy_mgc_io_sync_ld_core_sct, iLevel_triosy_mgc_io_sync_ld_core_sct,
      iPunctPatPartB_triosy_mgc_io_sync_ld_core_sct, iPunctPatPartA_triosy_mgc_io_sync_ld_core_sct,
      iNewNumOutBitsPartB_triosy_mgc_io_sync_ld_core_sct, iNewNumOutBitsPartA_triosy_mgc_io_sync_ld_core_sct,
      iN2_triosy_mgc_io_sync_ld_core_sct, iN1_triosy_mgc_io_sync_ld_core_sct, eNewChannelType_triosy_mgc_io_sync_ld_core_sct,
      eNewCodingScheme_triosy_mgc_io_sync_ld_core_sct, div_mgc_div_a, div_mgc_div_b,
      div_mgc_div_z_oreg, vecNewDistance_rTow0_rsc_dualport_addr_core_pff
);
  input clk;
  input rst;
  input [63:0] vecNewDistance_rTow0_rsc_dualport_data_out;
  input [63:0] vecNewDistance_rTow1_rsc_dualport_data_out;
  output core_wen;
  output [1:0] vecNewDistance_rTow0_rsc_dualport_re_core_sct;
  output [1:0] vecNewDistance_rTow1_rsc_dualport_re_core_sct;
  output [15:0] vecOutputBits_rsc_dualport_data_in_core;
  output [11:0] vecOutputBits_rsc_dualport_addr_core;
  output [1:0] vecOutputBits_rsc_dualport_we_core_sct;
  input [31:0] iNewNumOutBitsPartA_rsc_mgc_in_wire_d;
  input [31:0] iNewNumOutBitsPartB_rsc_mgc_in_wire_d;
  output [31:0] InitDecode_return_rsc_mgc_out_stdreg_d;
  reg [31:0] InitDecode_return_rsc_mgc_out_stdreg_d;
  output [63:0] vecTrelMetric1_rsc_dualport_data_in;
  output [11:0] vecTrelMetric1_rsc_dualport_addr;
  output [1:0] vecTrelMetric1_rsc_dualport_re;
  output [1:0] vecTrelMetric1_rsc_dualport_we;
  input [63:0] vecTrelMetric1_rsc_dualport_data_out;
  output [63:0] vecTrelMetric2_rsc_dualport_data_in;
  output [11:0] vecTrelMetric2_rsc_dualport_addr;
  output [1:0] vecTrelMetric2_rsc_dualport_re;
  output [1:0] vecTrelMetric2_rsc_dualport_we;
  input [63:0] vecTrelMetric2_rsc_dualport_data_out;
  output [1:0] matdecDecisions_rsc_dualport_data_in;
  output [23:0] matdecDecisions_rsc_dualport_addr;
  output [1:0] matdecDecisions_rsc_dualport_re;
  output [1:0] matdecDecisions_rsc_dualport_we;
  input [1:0] matdecDecisions_rsc_dualport_data_out;
  output mgc_start_sync_mgc_bsync_rv_rd_core_sct;
  input mgc_start_sync_mgc_bsync_rv_vd;
  output mgc_done_sync_mgc_bsync_rdy_rd_core_sct;
  output InitDecode_return_triosy_mgc_io_sync_ld_core_sct;
  output vecOutputBits_triosy_mgc_io_sync_ld_core_sct;
  output vecNewDistance_rTow1_triosy_mgc_io_sync_ld_core_sct;
  output vecNewDistance_rTow0_triosy_mgc_io_sync_ld_core_sct;
  output iLevel_triosy_mgc_io_sync_ld_core_sct;
  output iPunctPatPartB_triosy_mgc_io_sync_ld_core_sct;
  output iPunctPatPartA_triosy_mgc_io_sync_ld_core_sct;
  output iNewNumOutBitsPartB_triosy_mgc_io_sync_ld_core_sct;
  output iNewNumOutBitsPartA_triosy_mgc_io_sync_ld_core_sct;
  output iN2_triosy_mgc_io_sync_ld_core_sct;
  output iN1_triosy_mgc_io_sync_ld_core_sct;
  output eNewChannelType_triosy_mgc_io_sync_ld_core_sct;
  output eNewCodingScheme_triosy_mgc_io_sync_ld_core_sct;
  output [31:0] div_mgc_div_a;
  reg [31:0] div_mgc_div_a;
  output [31:0] div_mgc_div_b;
  reg [31:0] div_mgc_div_b;
  input [31:0] div_mgc_div_z_oreg;
  output [11:0] vecNewDistance_rTow0_rsc_dualport_addr_core_pff;


  // Interconnect Declarations
  wire vecNewDistance_rTow0_rsc_dualport_bcwt_1;
  wire vecNewDistance_rTow1_rsc_dualport_bcwt_1;
  wire [33:0] fsm_output;
  wire or_dcpl_18;
  wire or_dcpl_38;
  wire or_dcpl_40;
  wire or_dcpl_73;
  wire or_dcpl_79;
  wire or_dcpl_80;
  wire or_dcpl_82;
  wire or_dcpl_86;
  wire or_dcpl_87;
  wire or_dcpl_89;
  wire or_dcpl_95;
  wire or_dcpl_98;
  wire or_dcpl_99;
  wire or_dcpl_103;
  wire or_dcpl_104;
  wire or_dcpl_106;
  wire or_dcpl_129;
  wire or_dcpl_132;
  wire or_dcpl_161;
  wire or_dcpl_164;
  wire or_dcpl_165;
  wire or_dcpl_168;
  wire or_dcpl_173;
  wire or_dcpl_176;
  wire and_dcpl_19;
  wire and_dcpl_22;
  wire and_dcpl_37;
  wire or_dcpl_273;
  reg [31:0] drf_pOldTrelMetric_1_smx_lpi_1;
  reg [31:0] drf_pOldTrelMetric_2_smx_lpi_1;
  reg [31:0] drf_pOldTrelMetric_3_smx_lpi_1;
  reg [31:0] drf_pOldTrelMetric_4_smx_lpi_1;
  reg [31:0] iNumOutBits_sva;
  reg [30:0] acc_3_psp_sva;
  reg [1:0] pCurTrelMetric_2_sva;
  reg [1:0] pOldTrelMetric_2_sva;
  reg [6:0] i_3_sva_1;
  wire [7:0] xi_3_sva_1;
  reg [31:0] iDistCnt_sva;
  reg [31:0] i_2_sva;
  reg [31:0] drf_pOldTrelMetric_1_smx_lpi_2;
  reg [31:0] drf_pOldTrelMetric_2_smx_lpi_2;
  reg [31:0] drf_pOldTrelMetric_3_smx_lpi_2;
  reg [31:0] drf_pOldTrelMetric_4_smx_lpi_2;
  reg [31:0] MAIN_LOOP_if_slc_vecNewDistance_rTow0_cse_sva;
  reg [31:0] MAIN_LOOP_if_slc_vecNewDistance_rTow1_cse_sva;
  reg equal_tmp;
  reg nor_tmp_1;
  reg [31:0] drf_pOldTrelMetric_1_smx_lpi_2_dfm;
  reg [31:0] BUTTERFLY_LOOP_rFiStAccMetricPrev0_slc_vecrMetricSet_1_cse_sva;
  reg [31:0] BUTTERFLY_LOOP_rFiStAccMetricPrev0_sva;
  wire [32:0] xBUTTERFLY_LOOP_rFiStAccMetricPrev0_sva;
  reg [31:0] drf_pOldTrelMetric_2_smx_lpi_2_dfm;
  reg [31:0] BUTTERFLY_LOOP_rFiStAccMetricPrev1_slc_vecrMetricSet_1_cse_sva;
  reg [7:0] BUTTERFLY_LOOP_if_acc_1_ncse_sva;
  reg [31:0] drf_pOldTrelMetric_3_smx_lpi_2_dfm;
  reg [31:0] drf_pOldTrelMetric_4_smx_lpi_2_dfm;
  reg [31:0] BUTTERFLY_LOOP_rSecStAccMetricPrev1_sva;
  reg [5:0] MAIN_LOOP_cnt_1_sva_1;
  reg iCurDecState_sg2_sva;
  reg iCurDecState_sg3_sva;
  reg iCurDecState_sg1_sva;
  reg iCurDecState_sg4_sva;
  reg iCurDecState_1_sva;
  reg iCurDecState_sg5_1_sva;
  reg [31:0] i_sva;
  reg exit_UPDATE_MATRIX_LOOP_sva;
  reg equal_tmp_8;
  reg nor_tmp_8;
  reg [31:0] drf_pOldTrelMetric_5_smx_lpi_dfm;
  reg UPDATE_MATRIX_LOOP_decCurBit_asn_4_itm;
  reg [5:0] UPDATE_MATRIX_LOOP_acc_5_itm;
  wire [6:0] xUPDATE_MATRIX_LOOP_acc_5_itm;
  reg [5:0] i_3_sva_2;
  reg [4:0] MAIN_LOOP_cnt_1_sva_2;
  wire or_293_cse;
  reg reg_vecNewDistance_rTow1_rsc_dualport_re_core_psct_1_cse;
  reg reg_eNewCodingScheme_triosy_mgc_io_sync_iswt0_cse;
  reg reg_InitDecode_return_triosy_mgc_io_sync_iswt0_cse;
  reg reg_start_sync_mgc_bsync_rv_iswt0_cse;
  reg reg_vecOutputBits_rsc_dualport_we_core_psct_1_cse;
  wire or_245_cse;
  wire or_284_cse;
  wire and_43_cse;
  wire [3:0] MAIN_LOOP_b5_1_sva;
  wire [1:0] vecNewDistance_rTow0_rsc_dualport_re_core_sct_reg;
  wire or_78_rmff;
  wire [1:0] vecNewDistance_rTow1_rsc_dualport_re_core_sct_reg;
  wire [1:0] vecOutputBits_rsc_dualport_we_core_sct_reg;
  wire [31:0] mux_1_itm;
  wire [31:0] mux_3_itm;
  wire [33:0] BUTTERFLY_LOOP_if_1_acc_itm;
  wire [34:0] xBUTTERFLY_LOOP_if_1_acc_itm;
  wire [33:0] BUTTERFLY_LOOP_if_1_acc_3_itm;
  wire [34:0] xBUTTERFLY_LOOP_if_1_acc_3_itm;
  wire [33:0] MAIN_LOOP_acc_4_itm;
  wire [34:0] xMAIN_LOOP_acc_4_itm;
  wire [31:0] z_out_1;
  wire [32:0] z_out_2;
  wire [33:0] xz_out_2;
  wire [31:0] iNumOutBits_sva_mx0w0;
  wire [32:0] xiNumOutBits_sva_mx0w0;
  wire [31:0] i_2_sva_1;
  wire [32:0] xi_2_sva_1;
  wire equal_tmp_mx0w0;
  wire nor_tmp_mx0w0;
  wire [31:0] drf_pOldTrelMetric_4_smx_lpi_2_dfm_1;
  wire nor_1_cse;
  wire [31:0] drf_pOldTrelMetric_1_smx_lpi_2_dfm_1;
  reg [31:0] reg_vecNewDistance_rTow0_rsc_dualport_data_out_bfwt_tmp_1;
  reg [31:0] reg_vecNewDistance_rTow1_rsc_dualport_data_out_bfwt_tmp_1;
  reg [31:0] reg_BUTTERFLY_LOOP_rFiStAccMetricPrev1_sva_cse;
  wire [32:0] xreg_BUTTERFLY_LOOP_rFiStAccMetricPrev1_sva_cse;
  wire or_319_cse;
  wire mux_54_m1c;
  wire mux_56_m1c;

  wire[31:0] mux1h_9_nl;
  wire[3:0] mux_66_nl;
  wire[31:0] mux1h_6_nl;
  wire[0:0] mux_67_nl;
  wire[3:0] mux1h_24_nl;
  wire[0:0] mux_68_nl;
  wire[0:0] mux_20_nl;
  wire[7:0] mux_45_nl;
  wire[0:0] mux_46_nl;
  wire[0:0] mux_47_nl;
  wire[0:0] mux_48_nl;
  wire[31:0] mux1h_70_nl;
  wire[0:0] mux_55_nl;
  InitDecodemgc_rom_18_32_4 #(.rom_id(18),
  .size(32),
  .width(4)) BUTTERFLY_LOOP_read_rom_MAIN_LOOP_met0_rom_map_1_rg (
      .addr((MAIN_LOOP_cnt_1_sva_2)),
      .data_out(MAIN_LOOP_b5_1_sva)
    );
  InitDecode_core_wait_ctrl InitDecode_core_wait_ctrl_inst (
      .clk(clk),
      .rst(rst),
      .core_wen(core_wen),
      .vecNewDistance_rTow0_rsc_dualport_re_core_sct(vecNewDistance_rTow0_rsc_dualport_re_core_sct_reg),
      .vecNewDistance_rTow1_rsc_dualport_re_core_sct(vecNewDistance_rTow1_rsc_dualport_re_core_sct_reg),
      .vecOutputBits_rsc_dualport_we_core_sct(vecOutputBits_rsc_dualport_we_core_sct_reg),
      .mgc_start_sync_mgc_bsync_rv_rd_core_sct(mgc_start_sync_mgc_bsync_rv_rd_core_sct),
      .mgc_start_sync_mgc_bsync_rv_vd(mgc_start_sync_mgc_bsync_rv_vd),
      .mgc_done_sync_mgc_bsync_rdy_rd_core_sct(mgc_done_sync_mgc_bsync_rdy_rd_core_sct),
      .InitDecode_return_triosy_mgc_io_sync_ld_core_sct(InitDecode_return_triosy_mgc_io_sync_ld_core_sct),
      .vecOutputBits_triosy_mgc_io_sync_ld_core_sct(vecOutputBits_triosy_mgc_io_sync_ld_core_sct),
      .vecNewDistance_rTow1_triosy_mgc_io_sync_ld_core_sct(vecNewDistance_rTow1_triosy_mgc_io_sync_ld_core_sct),
      .vecNewDistance_rTow0_triosy_mgc_io_sync_ld_core_sct(vecNewDistance_rTow0_triosy_mgc_io_sync_ld_core_sct),
      .iLevel_triosy_mgc_io_sync_ld_core_sct(iLevel_triosy_mgc_io_sync_ld_core_sct),
      .iPunctPatPartB_triosy_mgc_io_sync_ld_core_sct(iPunctPatPartB_triosy_mgc_io_sync_ld_core_sct),
      .iPunctPatPartA_triosy_mgc_io_sync_ld_core_sct(iPunctPatPartA_triosy_mgc_io_sync_ld_core_sct),
      .iNewNumOutBitsPartB_triosy_mgc_io_sync_ld_core_sct(iNewNumOutBitsPartB_triosy_mgc_io_sync_ld_core_sct),
      .iNewNumOutBitsPartA_triosy_mgc_io_sync_ld_core_sct(iNewNumOutBitsPartA_triosy_mgc_io_sync_ld_core_sct),
      .iN2_triosy_mgc_io_sync_ld_core_sct(iN2_triosy_mgc_io_sync_ld_core_sct),
      .iN1_triosy_mgc_io_sync_ld_core_sct(iN1_triosy_mgc_io_sync_ld_core_sct),
      .eNewChannelType_triosy_mgc_io_sync_ld_core_sct(eNewChannelType_triosy_mgc_io_sync_ld_core_sct),
      .eNewCodingScheme_triosy_mgc_io_sync_ld_core_sct(eNewCodingScheme_triosy_mgc_io_sync_ld_core_sct),
      .vecNewDistance_rTow0_rsc_dualport_oswt_1(reg_vecNewDistance_rTow1_rsc_dualport_re_core_psct_1_cse),
      .vecNewDistance_rTow0_rsc_dualport_bcwt_1(vecNewDistance_rTow0_rsc_dualport_bcwt_1),
      .vecNewDistance_rTow0_rsc_dualport_re_core_psct(({1'b0 , or_78_rmff})),
      .vecNewDistance_rTow1_rsc_dualport_bcwt_1(vecNewDistance_rTow1_rsc_dualport_bcwt_1),
      .vecNewDistance_rTow1_rsc_dualport_re_core_psct(({1'b0 , or_78_rmff})),
      .vecOutputBits_rsc_dualport_oswt(reg_vecOutputBits_rsc_dualport_we_core_psct_1_cse),
      .vecOutputBits_rsc_dualport_we_core_psct(({1'b0 , (fsm_output[17])})),
      .mgc_start_sync_mgc_bsync_rv_rd_core_psct(reg_start_sync_mgc_bsync_rv_iswt0_cse),
      .mgc_done_sync_mgc_bsync_rdy_rd_core_psct(reg_InitDecode_return_triosy_mgc_io_sync_iswt0_cse),
      .vecOutputBits_triosy_mgc_io_sync_ld_core_psct(reg_eNewCodingScheme_triosy_mgc_io_sync_iswt0_cse),
      .vecNewDistance_rTow0_rsc_dualport_oswt_1_pff(or_78_rmff),
      .vecOutputBits_rsc_dualport_oswt_pff((fsm_output[17]))
    );
  InitDecode_core_fsm InitDecode_core_fsm_inst (
      .clk(clk),
      .rst(rst),
      .core_wen(core_wen),
      .fsm_output(fsm_output),
      .st_INIT_TRELLIS_LOOP_1_tr0((i_3_sva_1[6])),
      .st_main_3_tr0((~ (z_out_2[32]))),
      .st_BUTTERFLY_LOOP_6_tr0((MAIN_LOOP_cnt_1_sva_1[5])),
      .st_MAIN_LOOP_1_tr0((~ (MAIN_LOOP_acc_4_itm[33]))),
      .st_main_4_tr0((~ (z_out_2[32]))),
      .st_UPDATE_MATRIX_LOOP_2_tr0(exit_UPDATE_MATRIX_LOOP_sva)
    );
  assign mux_1_itm = MUX_v_32_2_2({(vecNewDistance_rTow0_rsc_dualport_data_out[31:0])
      , reg_vecNewDistance_rTow0_rsc_dualport_data_out_bfwt_tmp_1}, vecNewDistance_rTow0_rsc_dualport_bcwt_1);
  assign mux_3_itm = MUX_v_32_2_2({(vecNewDistance_rTow1_rsc_dualport_data_out[31:0])
      , reg_vecNewDistance_rTow1_rsc_dualport_data_out_bfwt_tmp_1}, vecNewDistance_rTow1_rsc_dualport_bcwt_1);
  assign and_43_cse = (fsm_output[13]) & (MAIN_LOOP_cnt_1_sva_1[5]);
  assign or_78_rmff = ((fsm_output[14]) & (MAIN_LOOP_acc_4_itm[33])) | ((z_out_2[32])
      & (fsm_output[5]));
  assign or_245_cse = or_dcpl_73 | (fsm_output[8]) | or_dcpl_18 | or_dcpl_89 | or_dcpl_87
      | or_dcpl_86 | (fsm_output[2]) | (fsm_output[16]) | (fsm_output[17]) | (fsm_output[3])
      | or_dcpl_79;
  assign or_284_cse = or_dcpl_40 | or_dcpl_38 | (fsm_output[13]) | (fsm_output[7])
      | (fsm_output[10]);
  assign xiNumOutBits_sva_mx0w0 = iNewNumOutBitsPartA_rsc_mgc_in_wire_d + iNewNumOutBitsPartB_rsc_mgc_in_wire_d;
  assign iNumOutBits_sva_mx0w0 = xiNumOutBits_sva_mx0w0[31:0];
  assign xi_2_sva_1 = i_2_sva + 32'b1;
  assign i_2_sva_1 = xi_2_sva_1[31:0];
  assign equal_tmp_mx0w0 = (pOldTrelMetric_2_sva[1]) & (~ (pOldTrelMetric_2_sva[0]));
  assign nor_tmp_mx0w0 = ~(((pOldTrelMetric_2_sva[0]) & (~ (pOldTrelMetric_2_sva[1])))
      | equal_tmp_mx0w0);
  assign drf_pOldTrelMetric_4_smx_lpi_2_dfm_1 = MUX1HOT_v_32_3_2({(vecTrelMetric1_rsc_dualport_data_out[63:32])
      , (vecTrelMetric2_rsc_dualport_data_out[31:0]) , drf_pOldTrelMetric_4_smx_lpi_2},
      {nor_1_cse , equal_tmp , nor_tmp_1});
  assign nor_1_cse = ~(equal_tmp | nor_tmp_1);
  assign drf_pOldTrelMetric_1_smx_lpi_2_dfm_1 = MUX1HOT_v_32_3_2({(vecTrelMetric1_rsc_dualport_data_out[31:0])
      , (vecTrelMetric2_rsc_dualport_data_out[63:32]) , drf_pOldTrelMetric_1_smx_lpi_2},
      {nor_1_cse , equal_tmp , nor_tmp_1});
  assign xBUTTERFLY_LOOP_if_1_acc_itm = conv_s2u_33_34({BUTTERFLY_LOOP_rFiStAccMetricPrev0_sva
      , 1'b1}) + conv_s2u_33_34({(~ reg_BUTTERFLY_LOOP_rFiStAccMetricPrev1_sva_cse)
      , 1'b1});
  assign BUTTERFLY_LOOP_if_1_acc_itm = xBUTTERFLY_LOOP_if_1_acc_itm[33:0];
  assign xBUTTERFLY_LOOP_if_1_acc_3_itm = conv_s2u_33_34({reg_BUTTERFLY_LOOP_rFiStAccMetricPrev1_sva_cse
      , 1'b1}) + conv_s2u_33_34({(~ BUTTERFLY_LOOP_rSecStAccMetricPrev1_sva) , 1'b1});
  assign BUTTERFLY_LOOP_if_1_acc_3_itm = xBUTTERFLY_LOOP_if_1_acc_3_itm[33:0];
  assign xMAIN_LOOP_acc_4_itm = conv_s2u_33_34({i_2_sva_1 , 1'b1}) + conv_s2u_33_34({(~
      acc_3_psp_sva) , (~ (iNumOutBits_sva[0])) , 1'b1});
  assign MAIN_LOOP_acc_4_itm = xMAIN_LOOP_acc_4_itm[33:0];
  assign or_dcpl_18 = (fsm_output[11]) | (fsm_output[9]);
  assign or_dcpl_38 = (fsm_output[9]) | (fsm_output[12]);
  assign or_dcpl_40 = (fsm_output[8]) | (fsm_output[11]);
  assign or_dcpl_73 = (fsm_output[6]) | (fsm_output[4]);
  assign or_dcpl_79 = (fsm_output[7]) | (fsm_output[10]);
  assign or_dcpl_80 = (fsm_output[1]) | (fsm_output[3]);
  assign or_dcpl_82 = (fsm_output[16]) | (fsm_output[17]);
  assign or_dcpl_86 = (fsm_output[15]) | (fsm_output[5]);
  assign or_dcpl_87 = (fsm_output[14]) | (fsm_output[18]);
  assign or_dcpl_89 = (fsm_output[12]) | (fsm_output[13]);
  assign or_dcpl_95 = (fsm_output[11]) | (fsm_output[30]);
  assign or_dcpl_98 = (fsm_output[20]) | (fsm_output[6]);
  assign or_dcpl_99 = or_dcpl_98 | (fsm_output[4]) | (fsm_output[8]);
  assign or_dcpl_103 = (fsm_output[24]) | (fsm_output[23]) | (fsm_output[22]) | (fsm_output[21]);
  assign or_dcpl_104 = (fsm_output[26]) | (fsm_output[25]);
  assign or_dcpl_106 = (fsm_output[29]) | (fsm_output[28]) | (fsm_output[27]);
  assign or_dcpl_129 = (fsm_output[18]) | (fsm_output[15]);
  assign or_dcpl_132 = (fsm_output[33]) | (fsm_output[31]);
  assign or_dcpl_161 = (fsm_output[2]) | (fsm_output[0]) | (fsm_output[32]);
  assign or_dcpl_164 = (fsm_output[14]) | (fsm_output[5]);
  assign or_dcpl_165 = ((z_out_2[32]) & (fsm_output[15])) | or_dcpl_164;
  assign or_dcpl_168 = or_dcpl_132 | (fsm_output[9]);
  assign or_dcpl_173 = (fsm_output[30]) | (fsm_output[19]) | ((fsm_output[18]) &
      (~ exit_UPDATE_MATRIX_LOOP_sva));
  assign or_dcpl_176 = or_dcpl_98 | (fsm_output[4]);
  assign and_dcpl_19 = (fsm_output[9]) & (BUTTERFLY_LOOP_if_1_acc_itm[33]);
  assign and_dcpl_22 = (fsm_output[12]) & (~ (BUTTERFLY_LOOP_if_1_acc_3_itm[33]));
  assign and_dcpl_37 = ~((fsm_output[14]) | (fsm_output[5]));
  assign or_dcpl_273 = (fsm_output[6]) | (fsm_output[7]);
  assign or_293_cse = or_dcpl_18 | (fsm_output[12]) | (fsm_output[10]);
  assign vecNewDistance_rTow0_rsc_dualport_addr_core_pff = {6'b0 , ((z_out_2[5:0])
      & (signext_6_1(fsm_output[14])))};
  assign vecNewDistance_rTow0_rsc_dualport_re_core_sct = vecNewDistance_rTow0_rsc_dualport_re_core_sct_reg;
  assign vecNewDistance_rTow1_rsc_dualport_re_core_sct = vecNewDistance_rTow1_rsc_dualport_re_core_sct_reg;
  assign vecOutputBits_rsc_dualport_data_in_core = {15'b0 , (matdecDecisions_rsc_dualport_data_out[0])};
  assign vecOutputBits_rsc_dualport_addr_core = {6'b0 , UPDATE_MATRIX_LOOP_acc_5_itm};
  assign vecOutputBits_rsc_dualport_we_core_sct = vecOutputBits_rsc_dualport_we_core_sct_reg;
  assign or_319_cse = ((fsm_output[9]) & (~ (BUTTERFLY_LOOP_if_1_acc_itm[33]))) |
      ((fsm_output[12]) & (BUTTERFLY_LOOP_if_1_acc_3_itm[33]));
  assign mux1h_9_nl = MUX1HOT_v_32_3_2({BUTTERFLY_LOOP_rFiStAccMetricPrev0_sva ,
      reg_BUTTERFLY_LOOP_rFiStAccMetricPrev1_sva_cse , BUTTERFLY_LOOP_rSecStAccMetricPrev1_sva},
      {and_dcpl_19 , or_319_cse , and_dcpl_22});
  assign vecTrelMetric1_rsc_dualport_data_in = {32'b0 , (mux1h_9_nl)};
  assign mux_66_nl = MUX_v_4_2_2({(MAIN_LOOP_cnt_1_sva_2[4:1]) , (MAIN_LOOP_cnt_1_sva_2[3:0])},
      or_dcpl_38);
  assign vecTrelMetric1_rsc_dualport_addr = {(fsm_output[7]) , MAIN_LOOP_cnt_1_sva_2
      , ((MAIN_LOOP_cnt_1_sva_2[4]) & (~ or_dcpl_129) & (~((fsm_output[7]) | (fsm_output[10]))))
      , ((mux_66_nl) & (signext_4_1(~ or_dcpl_129))) , (((MAIN_LOOP_cnt_1_sva_2[0])
      & (~ or_dcpl_129) & (~ (fsm_output[9]))) | (fsm_output[12]))};
  assign vecTrelMetric1_rsc_dualport_re = ({(~((fsm_output[7]) & (~ (pOldTrelMetric_2_sva[1]))
      & (pOldTrelMetric_2_sva[0]))) , 1'b0}) | (signext_2_1(or_dcpl_106 | or_dcpl_104
      | or_dcpl_103 | or_dcpl_176 | or_dcpl_40 | or_dcpl_173 | or_dcpl_168 | or_dcpl_89
      | or_dcpl_165 | or_dcpl_161 | or_dcpl_82 | or_dcpl_80 | (pOldTrelMetric_2_sva[1])
      | (~ (pOldTrelMetric_2_sva[0]))));
  assign vecTrelMetric1_rsc_dualport_we = {1'b1 , (~(or_dcpl_38 & (pCurTrelMetric_2_sva[0])
      & (~ (pCurTrelMetric_2_sva[1]))))};
  assign mux1h_6_nl = MUX1HOT_v_32_4_2({32'b10011100010000 , BUTTERFLY_LOOP_rFiStAccMetricPrev0_sva
      , reg_BUTTERFLY_LOOP_rFiStAccMetricPrev1_sva_cse , BUTTERFLY_LOOP_rSecStAccMetricPrev1_sva},
      {(fsm_output[3]) , and_dcpl_19 , or_319_cse , and_dcpl_22});
  assign vecTrelMetric2_rsc_dualport_data_in = {32'b0 , ((mux1h_6_nl) & (signext_32_1(~
      (fsm_output[1]))))};
  assign mux_67_nl = MUX_s_1_2_2({(i_3_sva_2[5]) , (MAIN_LOOP_cnt_1_sva_2[4])}, or_dcpl_38);
  assign mux1h_24_nl = MUX1HOT_v_4_3_2({(i_3_sva_2[4:1]) , (MAIN_LOOP_cnt_1_sva_2[4:1])
      , (MAIN_LOOP_cnt_1_sva_2[3:0])}, {(fsm_output[3]) , or_dcpl_79 , or_dcpl_38});
  assign mux_68_nl = MUX_s_1_2_2({(i_3_sva_2[0]) , (MAIN_LOOP_cnt_1_sva_2[0])}, or_dcpl_79);
  assign vecTrelMetric2_rsc_dualport_addr = {(~ (fsm_output[7])) , MAIN_LOOP_cnt_1_sva_2
      , (((mux_67_nl) & (~ or_dcpl_129) & (~((fsm_output[1]) | (fsm_output[10]))))
      | (fsm_output[7])) , ((mux1h_24_nl) & (signext_4_1(~ or_dcpl_129)) & (signext_4_1(~
      (fsm_output[1])))) , (((mux_68_nl) & (~ or_dcpl_129) & (~((fsm_output[1]) |
      (fsm_output[9])))) | (fsm_output[12]))};
  assign vecTrelMetric2_rsc_dualport_re = ({(~((fsm_output[7]) & (pOldTrelMetric_2_sva[1])
      & (~ (pOldTrelMetric_2_sva[0])))) , 1'b0}) | (signext_2_1(or_dcpl_106 | or_dcpl_104
      | or_dcpl_103 | or_dcpl_176 | or_dcpl_40 | or_dcpl_173 | or_dcpl_168 | or_dcpl_89
      | or_dcpl_165 | or_dcpl_161 | or_dcpl_82 | or_dcpl_80 | (~ (pOldTrelMetric_2_sva[1]))
      | (pOldTrelMetric_2_sva[0])));
  assign vecTrelMetric2_rsc_dualport_we = {1'b1 , ((or_dcpl_38 & ((pCurTrelMetric_2_sva[0])
      | (~ (pCurTrelMetric_2_sva[1])))) | (fsm_output[29]) | (fsm_output[28]) | (fsm_output[27])
      | or_dcpl_104 | or_dcpl_103 | or_dcpl_99 | or_dcpl_95 | (fsm_output[19]) |
      or_dcpl_132 | (fsm_output[13]) | (fsm_output[14]) | or_dcpl_129 | (fsm_output[5])
      | (fsm_output[2]) | (fsm_output[0]) | (fsm_output[32]) | or_dcpl_82 | or_dcpl_79)};
  assign mux_20_nl = MUX_s_1_2_2({(~ (BUTTERFLY_LOOP_if_1_acc_itm[33])) , (~ (BUTTERFLY_LOOP_if_1_acc_3_itm[33]))},
      fsm_output[12]);
  assign matdecDecisions_rsc_dualport_data_in = {1'b0 , (mux_20_nl)};
  assign mux_45_nl = MUX_v_8_2_2({BUTTERFLY_LOOP_if_acc_1_ncse_sva , (((~ (i_sva[7:0]))
      + conv_u2u_2_8({iCurDecState_sg5_1_sva , iCurDecState_sg3_sva})) + ({(acc_3_psp_sva[6:0])
      , (iNumOutBits_sva[0])}))}, fsm_output[16]);
  assign mux_46_nl = MUX_s_1_2_2({(MAIN_LOOP_cnt_1_sva_2[2]) , iCurDecState_sg2_sva},
      fsm_output[16]);
  assign mux_47_nl = MUX_s_1_2_2({(MAIN_LOOP_cnt_1_sva_2[1]) , iCurDecState_sg1_sva},
      fsm_output[16]);
  assign mux_48_nl = MUX_s_1_2_2({(MAIN_LOOP_cnt_1_sva_2[0]) , iCurDecState_1_sva},
      fsm_output[16]);
  assign matdecDecisions_rsc_dualport_addr = {12'b0 , (mux_45_nl) , (mux_46_nl) ,
      (mux_47_nl) , (mux_48_nl) , ((UPDATE_MATRIX_LOOP_decCurBit_asn_4_itm & (~ (fsm_output[9])))
      | (fsm_output[12]))};
  assign matdecDecisions_rsc_dualport_re = {1'b1 , (~ (fsm_output[16]))};
  assign matdecDecisions_rsc_dualport_we = {1'b1 , (~ or_dcpl_38)};
  always @(posedge clk) begin
    if ( rst ) begin
      InitDecode_return_rsc_mgc_out_stdreg_d <= 32'b0;
      drf_pOldTrelMetric_5_smx_lpi_dfm <= 32'b0;
      pOldTrelMetric_2_sva <= 2'b0;
      pCurTrelMetric_2_sva <= 2'b0;
      drf_pOldTrelMetric_1_smx_lpi_1 <= 32'b0;
      drf_pOldTrelMetric_2_smx_lpi_1 <= 32'b0;
      drf_pOldTrelMetric_3_smx_lpi_1 <= 32'b0;
      drf_pOldTrelMetric_4_smx_lpi_1 <= 32'b0;
      i_3_sva_2 <= 6'b0;
      reg_vecOutputBits_rsc_dualport_we_core_psct_1_cse <= 1'b0;
      reg_vecNewDistance_rTow1_rsc_dualport_re_core_psct_1_cse <= 1'b0;
      reg_eNewCodingScheme_triosy_mgc_io_sync_iswt0_cse <= 1'b0;
      reg_InitDecode_return_triosy_mgc_io_sync_iswt0_cse <= 1'b0;
      reg_start_sync_mgc_bsync_rv_iswt0_cse <= 1'b0;
      div_mgc_div_b <= 32'b0;
      div_mgc_div_a <= 32'b0;
      iNumOutBits_sva <= 32'b0;
      acc_3_psp_sva <= 31'b0;
      i_3_sva_1 <= 7'b0;
      iDistCnt_sva <= 32'b0;
      i_sva <= 32'b0;
      iCurDecState_sg5_1_sva <= 1'b0;
      iCurDecState_1_sva <= 1'b0;
      iCurDecState_sg1_sva <= 1'b0;
      iCurDecState_sg2_sva <= 1'b0;
      iCurDecState_sg3_sva <= 1'b0;
      iCurDecState_sg4_sva <= 1'b0;
      MAIN_LOOP_cnt_1_sva_2 <= 5'b0;
      i_2_sva <= 32'b0;
      drf_pOldTrelMetric_3_smx_lpi_2 <= 32'b0;
      drf_pOldTrelMetric_4_smx_lpi_2 <= 32'b0;
      drf_pOldTrelMetric_2_smx_lpi_2 <= 32'b0;
      drf_pOldTrelMetric_1_smx_lpi_2 <= 32'b0;
      MAIN_LOOP_if_slc_vecNewDistance_rTow0_cse_sva <= 32'b0;
      MAIN_LOOP_if_slc_vecNewDistance_rTow1_cse_sva <= 32'b0;
      MAIN_LOOP_cnt_1_sva_1 <= 6'b0;
      BUTTERFLY_LOOP_if_acc_1_ncse_sva <= 8'b0;
      BUTTERFLY_LOOP_rFiStAccMetricPrev1_slc_vecrMetricSet_1_cse_sva <= 32'b0;
      equal_tmp <= 1'b0;
      nor_tmp_1 <= 1'b0;
      BUTTERFLY_LOOP_rFiStAccMetricPrev0_slc_vecrMetricSet_1_cse_sva <= 32'b0;
      BUTTERFLY_LOOP_rFiStAccMetricPrev0_sva <= 32'b0;
      reg_BUTTERFLY_LOOP_rFiStAccMetricPrev1_sva_cse <= 32'b0;
      BUTTERFLY_LOOP_rSecStAccMetricPrev1_sva <= 32'b0;
      drf_pOldTrelMetric_4_smx_lpi_2_dfm <= 32'b0;
      drf_pOldTrelMetric_2_smx_lpi_2_dfm <= 32'b0;
      drf_pOldTrelMetric_1_smx_lpi_2_dfm <= 32'b0;
      drf_pOldTrelMetric_3_smx_lpi_2_dfm <= 32'b0;
      equal_tmp_8 <= 1'b0;
      nor_tmp_8 <= 1'b0;
      exit_UPDATE_MATRIX_LOOP_sva <= 1'b0;
      UPDATE_MATRIX_LOOP_decCurBit_asn_4_itm <= 1'b0;
      UPDATE_MATRIX_LOOP_acc_5_itm <= 6'b0;
    end
    else if ( core_wen ) begin
      InitDecode_return_rsc_mgc_out_stdreg_d <= MUX_v_32_2_2({InitDecode_return_rsc_mgc_out_stdreg_d
          , div_mgc_div_z_oreg}, fsm_output[32]);
      drf_pOldTrelMetric_5_smx_lpi_dfm <= MUX_v_32_2_2({drf_pOldTrelMetric_5_smx_lpi_dfm
          , z_out_1}, fsm_output[19]);
      pOldTrelMetric_2_sva <= MUX1HOT_v_2_3_2({2'b10 , pCurTrelMetric_2_sva , pOldTrelMetric_2_sva},
          {(fsm_output[2]) , and_43_cse , (~(and_43_cse | (fsm_output[2])))});
      pCurTrelMetric_2_sva <= MUX1HOT_v_2_3_2({2'b1 , pCurTrelMetric_2_sva , pOldTrelMetric_2_sva},
          {(fsm_output[2]) , (or_dcpl_73 | or_dcpl_40 | or_dcpl_38 | (fsm_output[14])
          | ((fsm_output[13]) & (~ (MAIN_LOOP_cnt_1_sva_1[5]))) | (fsm_output[5])
          | (fsm_output[3]) | (fsm_output[7]) | (fsm_output[10])) , and_43_cse});
      drf_pOldTrelMetric_1_smx_lpi_1 <= MUX_v_32_2_2({drf_pOldTrelMetric_1_smx_lpi_1
          , drf_pOldTrelMetric_1_smx_lpi_2_dfm}, fsm_output[13]);
      drf_pOldTrelMetric_2_smx_lpi_1 <= MUX_v_32_2_2({drf_pOldTrelMetric_2_smx_lpi_1
          , drf_pOldTrelMetric_2_smx_lpi_2_dfm}, fsm_output[13]);
      drf_pOldTrelMetric_3_smx_lpi_1 <= MUX_v_32_2_2({drf_pOldTrelMetric_3_smx_lpi_1
          , drf_pOldTrelMetric_3_smx_lpi_2_dfm}, fsm_output[13]);
      drf_pOldTrelMetric_4_smx_lpi_1 <= MUX_v_32_2_2({drf_pOldTrelMetric_4_smx_lpi_1
          , drf_pOldTrelMetric_4_smx_lpi_2_dfm}, fsm_output[13]);
      i_3_sva_2 <= MUX_v_6_2_2({6'b1 , (i_3_sva_1[5:0])}, fsm_output[4]);
      reg_vecOutputBits_rsc_dualport_we_core_psct_1_cse <= fsm_output[17];
      reg_vecNewDistance_rTow1_rsc_dualport_re_core_psct_1_cse <= or_78_rmff;
      reg_eNewCodingScheme_triosy_mgc_io_sync_iswt0_cse <= ((fsm_output[18]) & exit_UPDATE_MATRIX_LOOP_sva)
          | ((~ (z_out_2[32])) & (fsm_output[15]));
      reg_InitDecode_return_triosy_mgc_io_sync_iswt0_cse <= fsm_output[32];
      reg_start_sync_mgc_bsync_rv_iswt0_cse <= ~(or_dcpl_106 | or_dcpl_104 | or_dcpl_103
          | or_dcpl_99 | or_dcpl_95 | (fsm_output[19]) | (fsm_output[33]) | (fsm_output[31])
          | (fsm_output[9]) | or_dcpl_89 | or_dcpl_87 | or_dcpl_86 | (fsm_output[2])
          | (fsm_output[32]) | or_dcpl_82 | or_dcpl_80 | or_dcpl_79);
      div_mgc_div_b <= iDistCnt_sva;
      div_mgc_div_a <= MUX_v_32_2_2({z_out_1 , drf_pOldTrelMetric_5_smx_lpi_dfm},
          or_dcpl_106 | or_dcpl_104 | (fsm_output[24]) | (fsm_output[23]) | (fsm_output[22])
          | (fsm_output[21]) | (fsm_output[20]) | (fsm_output[30]));
      iNumOutBits_sva <= MUX_v_32_2_2({iNumOutBits_sva_mx0w0 , iNumOutBits_sva},
          or_245_cse);
      acc_3_psp_sva <= MUX_v_31_2_2({((iNumOutBits_sva_mx0w0[31:1]) + 31'b11) , acc_3_psp_sva},
          or_245_cse);
      i_3_sva_1 <= xi_3_sva_1[6:0];
      iDistCnt_sva <= (MUX_v_32_2_2({(z_out_2[31:0]) , iDistCnt_sva}, and_dcpl_37))
          & (signext_32_1(~ (fsm_output[5])));
      i_sva <= (MUX_v_32_2_2({(z_out_2[31:0]) , i_sva}, (fsm_output[18]) | (fsm_output[17])))
          & (signext_32_1(~ (fsm_output[15])));
      iCurDecState_sg5_1_sva <= (MUX_s_1_2_2({(matdecDecisions_rsc_dualport_data_out[0])
          , iCurDecState_sg5_1_sva}, fsm_output[18])) & (~ (fsm_output[15]));
      iCurDecState_1_sva <= (MUX_s_1_2_2({iCurDecState_1_sva , iCurDecState_sg1_sva},
          fsm_output[18])) & (~ (fsm_output[15]));
      iCurDecState_sg1_sva <= (MUX_s_1_2_2({iCurDecState_sg1_sva , iCurDecState_sg2_sva},
          fsm_output[18])) & (~ (fsm_output[15]));
      iCurDecState_sg2_sva <= (MUX_s_1_2_2({iCurDecState_sg2_sva , iCurDecState_sg3_sva},
          fsm_output[18])) & (~ (fsm_output[15]));
      iCurDecState_sg3_sva <= (MUX_s_1_2_2({iCurDecState_sg3_sva , iCurDecState_sg4_sva},
          fsm_output[18])) & (~ (fsm_output[15]));
      iCurDecState_sg4_sva <= (MUX_s_1_2_2({iCurDecState_sg4_sva , iCurDecState_sg5_1_sva},
          fsm_output[18])) & (~ (fsm_output[15]));
      MAIN_LOOP_cnt_1_sva_2 <= (MUX_v_5_2_2({(MAIN_LOOP_cnt_1_sva_1[4:0]) , MAIN_LOOP_cnt_1_sva_2},
          ~((fsm_output[6]) | (fsm_output[13])))) & (signext_5_1(~ (fsm_output[6])));
      i_2_sva <= (MUX_v_32_2_2({i_2_sva_1 , i_2_sva}, and_dcpl_37)) & (signext_32_1(~
          (fsm_output[5])));
      drf_pOldTrelMetric_3_smx_lpi_2 <= MUX1HOT_v_32_3_2({drf_pOldTrelMetric_3_smx_lpi_1
          , drf_pOldTrelMetric_3_smx_lpi_2 , drf_pOldTrelMetric_3_smx_lpi_2_dfm},
          {or_dcpl_164 , ((fsm_output[6]) | (fsm_output[8]) | (fsm_output[9]) | or_dcpl_79)
          , (fsm_output[13])});
      drf_pOldTrelMetric_4_smx_lpi_2 <= MUX1HOT_v_32_3_2({drf_pOldTrelMetric_4_smx_lpi_1
          , drf_pOldTrelMetric_4_smx_lpi_2 , drf_pOldTrelMetric_4_smx_lpi_2_dfm},
          {or_dcpl_164 , or_dcpl_273 , (fsm_output[13])});
      drf_pOldTrelMetric_2_smx_lpi_2 <= MUX1HOT_v_32_3_2({drf_pOldTrelMetric_2_smx_lpi_1
          , drf_pOldTrelMetric_2_smx_lpi_2 , drf_pOldTrelMetric_2_smx_lpi_2_dfm},
          {or_dcpl_164 , or_dcpl_273 , (fsm_output[13])});
      drf_pOldTrelMetric_1_smx_lpi_2 <= MUX1HOT_v_32_3_2({drf_pOldTrelMetric_1_smx_lpi_1
          , drf_pOldTrelMetric_1_smx_lpi_2 , drf_pOldTrelMetric_1_smx_lpi_2_dfm},
          {or_dcpl_164 , or_dcpl_273 , (fsm_output[13])});
      MAIN_LOOP_if_slc_vecNewDistance_rTow0_cse_sva <= MUX_v_32_2_2({mux_1_itm ,
          MAIN_LOOP_if_slc_vecNewDistance_rTow0_cse_sva}, or_284_cse);
      MAIN_LOOP_if_slc_vecNewDistance_rTow1_cse_sva <= MUX_v_32_2_2({mux_3_itm ,
          MAIN_LOOP_if_slc_vecNewDistance_rTow1_cse_sva}, or_284_cse);
      MAIN_LOOP_cnt_1_sva_1 <= MUX_v_6_2_2({MAIN_LOOP_cnt_1_sva_1 , (conv_u2u_5_6(MAIN_LOOP_cnt_1_sva_2)
          + 6'b1)}, fsm_output[7]);
      BUTTERFLY_LOOP_if_acc_1_ncse_sva <= MUX_v_8_2_2({BUTTERFLY_LOOP_if_acc_1_ncse_sva
          , ((i_2_sva[7:0]) + conv_u2u_2_8(MAIN_LOOP_cnt_1_sva_2[4:3]))}, fsm_output[7]);
      BUTTERFLY_LOOP_rFiStAccMetricPrev1_slc_vecrMetricSet_1_cse_sva <= MUX1HOT_v_32_3_2({BUTTERFLY_LOOP_rFiStAccMetricPrev1_slc_vecrMetricSet_1_cse_sva
          , MAIN_LOOP_if_slc_vecNewDistance_rTow1_cse_sva , MAIN_LOOP_if_slc_vecNewDistance_rTow0_cse_sva},
          {(~ (fsm_output[7])) , (((~((MAIN_LOOP_b5_1_sva[3]) | (MAIN_LOOP_b5_1_sva[2])
          | (MAIN_LOOP_b5_1_sva[1]) | (MAIN_LOOP_b5_1_sva[0]))) & (fsm_output[7]))
          | ((MAIN_LOOP_b5_1_sva[1]) & (~((MAIN_LOOP_b5_1_sva[3]) | (MAIN_LOOP_b5_1_sva[2])
          | (MAIN_LOOP_b5_1_sva[0]))) & (fsm_output[7])) | ((MAIN_LOOP_b5_1_sva[2])
          & (~((MAIN_LOOP_b5_1_sva[3]) | (MAIN_LOOP_b5_1_sva[1]) | (MAIN_LOOP_b5_1_sva[0])))
          & (fsm_output[7])) | ((MAIN_LOOP_b5_1_sva[2]) & (MAIN_LOOP_b5_1_sva[1])
          & (~((MAIN_LOOP_b5_1_sva[3]) | (MAIN_LOOP_b5_1_sva[0]))) & (fsm_output[7])))
          , (((MAIN_LOOP_b5_1_sva[3]) & (MAIN_LOOP_b5_1_sva[0]) & (~((MAIN_LOOP_b5_1_sva[2])
          | (MAIN_LOOP_b5_1_sva[1]))) & (fsm_output[7])) | ((MAIN_LOOP_b5_1_sva[3])
          & (MAIN_LOOP_b5_1_sva[1]) & (MAIN_LOOP_b5_1_sva[0]) & (~ (MAIN_LOOP_b5_1_sva[2]))
          & (fsm_output[7])) | ((MAIN_LOOP_b5_1_sva[3]) & (MAIN_LOOP_b5_1_sva[2])
          & (MAIN_LOOP_b5_1_sva[0]) & (~ (MAIN_LOOP_b5_1_sva[1])) & (fsm_output[7]))
          | ((MAIN_LOOP_b5_1_sva[3]) & (MAIN_LOOP_b5_1_sva[2]) & (MAIN_LOOP_b5_1_sva[1])
          & (MAIN_LOOP_b5_1_sva[0]) & (fsm_output[7])))});
      equal_tmp <= MUX_s_1_2_2({equal_tmp , equal_tmp_mx0w0}, fsm_output[7]);
      nor_tmp_1 <= MUX_s_1_2_2({nor_tmp_1 , nor_tmp_mx0w0}, fsm_output[7]);
      BUTTERFLY_LOOP_rFiStAccMetricPrev0_slc_vecrMetricSet_1_cse_sva <= MUX_v_32_16_2({MAIN_LOOP_if_slc_vecNewDistance_rTow0_cse_sva
          , 32'b0 , MAIN_LOOP_if_slc_vecNewDistance_rTow0_cse_sva , 32'b0 , MAIN_LOOP_if_slc_vecNewDistance_rTow0_cse_sva
          , 32'b0 , MAIN_LOOP_if_slc_vecNewDistance_rTow0_cse_sva , 32'b0 , 32'b0
          , MAIN_LOOP_if_slc_vecNewDistance_rTow1_cse_sva , 32'b0 , MAIN_LOOP_if_slc_vecNewDistance_rTow1_cse_sva
          , 32'b0 , MAIN_LOOP_if_slc_vecNewDistance_rTow1_cse_sva , 32'b0 , MAIN_LOOP_if_slc_vecNewDistance_rTow1_cse_sva},
          MAIN_LOOP_b5_1_sva);
      BUTTERFLY_LOOP_rFiStAccMetricPrev0_sva <= xBUTTERFLY_LOOP_rFiStAccMetricPrev0_sva[31:0];
      reg_BUTTERFLY_LOOP_rFiStAccMetricPrev1_sva_cse <= xreg_BUTTERFLY_LOOP_rFiStAccMetricPrev1_sva_cse[31:0];
      BUTTERFLY_LOOP_rSecStAccMetricPrev1_sva <= MUX_v_32_2_2({BUTTERFLY_LOOP_rSecStAccMetricPrev1_sva
          , (drf_pOldTrelMetric_4_smx_lpi_2_dfm_1 + BUTTERFLY_LOOP_rFiStAccMetricPrev0_slc_vecrMetricSet_1_cse_sva)},
          fsm_output[8]);
      drf_pOldTrelMetric_4_smx_lpi_2_dfm <= MUX_v_32_2_2({drf_pOldTrelMetric_4_smx_lpi_2_dfm_1
          , drf_pOldTrelMetric_4_smx_lpi_2_dfm}, or_293_cse);
      drf_pOldTrelMetric_2_smx_lpi_2_dfm <= MUX_v_32_2_2({z_out_1 , drf_pOldTrelMetric_2_smx_lpi_2_dfm},
          or_293_cse);
      drf_pOldTrelMetric_1_smx_lpi_2_dfm <= MUX_v_32_2_2({drf_pOldTrelMetric_1_smx_lpi_2_dfm_1
          , drf_pOldTrelMetric_1_smx_lpi_2_dfm}, or_293_cse);
      drf_pOldTrelMetric_3_smx_lpi_2_dfm <= MUX_v_32_2_2({z_out_1 , drf_pOldTrelMetric_3_smx_lpi_2_dfm},
          fsm_output[12]);
      equal_tmp_8 <= equal_tmp_mx0w0;
      nor_tmp_8 <= nor_tmp_mx0w0;
      exit_UPDATE_MATRIX_LOOP_sva <= MUX_s_1_2_2({exit_UPDATE_MATRIX_LOOP_sva , (~
          (readslicef_34_1_33((conv_s2u_33_34({(z_out_2[31:0]) , 1'b1}) + conv_s2u_33_34({(~
          iNumOutBits_sva) , 1'b1})))))}, fsm_output[16]);
      UPDATE_MATRIX_LOOP_decCurBit_asn_4_itm <= iCurDecState_1_sva & (fsm_output[18]);
      UPDATE_MATRIX_LOOP_acc_5_itm <= xUPDATE_MATRIX_LOOP_acc_5_itm[5:0];
    end
  end
  always @(posedge clk) begin
    if ( rst ) begin
      reg_vecNewDistance_rTow0_rsc_dualport_data_out_bfwt_tmp_1 <= 32'b0;
      reg_vecNewDistance_rTow1_rsc_dualport_data_out_bfwt_tmp_1 <= 32'b0;
    end
    else begin
      reg_vecNewDistance_rTow0_rsc_dualport_data_out_bfwt_tmp_1 <= mux_1_itm;
      reg_vecNewDistance_rTow1_rsc_dualport_data_out_bfwt_tmp_1 <= mux_3_itm;
    end
  end
  assign xi_3_sva_1  = conv_u2u_6_7(i_3_sva_2) + 7'b1;
  assign xBUTTERFLY_LOOP_rFiStAccMetricPrev0_sva  = drf_pOldTrelMetric_1_smx_lpi_2_dfm_1
      + BUTTERFLY_LOOP_rFiStAccMetricPrev0_slc_vecrMetricSet_1_cse_sva;
  assign xreg_BUTTERFLY_LOOP_rFiStAccMetricPrev1_sva_cse  = z_out_1 + BUTTERFLY_LOOP_rFiStAccMetricPrev1_slc_vecrMetricSet_1_cse_sva;
  assign xUPDATE_MATRIX_LOOP_acc_5_itm  = (iNumOutBits_sva[5:0]) + (~ (i_sva[5:0]));
  assign mux1h_70_nl = MUX1HOT_v_32_4_2({iDistCnt_sva , i_sva , (~ iNumOutBits_sva)
      , ({(~ acc_3_psp_sva) , (~ (iNumOutBits_sva[0]))})}, {(fsm_output[14]) , (fsm_output[16])
      , (fsm_output[15]) , (fsm_output[5])});
  assign xz_out_2 = conv_s2u_32_33(mux1h_70_nl) + 33'b1;
  assign z_out_2 = xz_out_2[32:0];
  assign mux_54_m1c = MUX_s_1_2_2({(~(equal_tmp_8 | nor_tmp_8)) , nor_1_cse}, or_dcpl_40);
  assign mux_56_m1c = MUX_s_1_2_2({nor_tmp_8 , nor_tmp_1}, or_dcpl_40);
  assign mux_55_nl = MUX_s_1_2_2({equal_tmp_8 , equal_tmp}, or_dcpl_40);
  assign z_out_1 = MUX1HOT_v_32_6_2({(vecTrelMetric1_rsc_dualport_data_out[31:0])
      , (vecTrelMetric1_rsc_dualport_data_out[63:32]) , (vecTrelMetric2_rsc_dualport_data_out[31:0])
      , drf_pOldTrelMetric_5_smx_lpi_dfm , drf_pOldTrelMetric_2_smx_lpi_2 , drf_pOldTrelMetric_3_smx_lpi_2},
      {((~ (fsm_output[8])) & mux_54_m1c) , ((fsm_output[8]) & mux_54_m1c) , (mux_55_nl)
      , ((fsm_output[19]) & mux_56_m1c) , ((fsm_output[8]) & mux_56_m1c) , ((fsm_output[11])
      & mux_56_m1c)});

  function [31:0] MUX_v_32_2_2;
    input [63:0] inputs;
    input [0:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[63:32];
      end
      1'b1 : begin
        result = inputs[31:0];
      end
      default : begin
        result = inputs[63:32];
      end
    endcase
    MUX_v_32_2_2 = result;
  end
  endfunction


  function [31:0] MUX1HOT_v_32_3_2;
    input [95:0] inputs;
    input [2:0] sel;
    reg [31:0] result;
    integer i;
  begin
    result = inputs[0+:32] & {32{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*32+:32] & {32{sel[i]}});
    MUX1HOT_v_32_3_2 = result;
  end
  endfunction


  function [5:0] signext_6_1;
    input [0:0] vector;
  begin
    signext_6_1= {{5{vector[0]}}, vector};
  end
  endfunction


  function [3:0] MUX_v_4_2_2;
    input [7:0] inputs;
    input [0:0] sel;
    reg [3:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[7:4];
      end
      1'b1 : begin
        result = inputs[3:0];
      end
      default : begin
        result = inputs[7:4];
      end
    endcase
    MUX_v_4_2_2 = result;
  end
  endfunction


  function [3:0] signext_4_1;
    input [0:0] vector;
  begin
    signext_4_1= {{3{vector[0]}}, vector};
  end
  endfunction


  function [1:0] signext_2_1;
    input [0:0] vector;
  begin
    signext_2_1= {{1{vector[0]}}, vector};
  end
  endfunction


  function [31:0] MUX1HOT_v_32_4_2;
    input [127:0] inputs;
    input [3:0] sel;
    reg [31:0] result;
    integer i;
  begin
    result = inputs[0+:32] & {32{sel[0]}};
    for( i = 1; i < 4; i = i + 1 )
      result = result | (inputs[i*32+:32] & {32{sel[i]}});
    MUX1HOT_v_32_4_2 = result;
  end
  endfunction


  function [31:0] signext_32_1;
    input [0:0] vector;
  begin
    signext_32_1= {{31{vector[0]}}, vector};
  end
  endfunction


  function [0:0] MUX_s_1_2_2;
    input [1:0] inputs;
    input [0:0] sel;
    reg [0:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[1:1];
      end
      1'b1 : begin
        result = inputs[0:0];
      end
      default : begin
        result = inputs[1:1];
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function [3:0] MUX1HOT_v_4_3_2;
    input [11:0] inputs;
    input [2:0] sel;
    reg [3:0] result;
    integer i;
  begin
    result = inputs[0+:4] & {4{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*4+:4] & {4{sel[i]}});
    MUX1HOT_v_4_3_2 = result;
  end
  endfunction


  function [7:0] MUX_v_8_2_2;
    input [15:0] inputs;
    input [0:0] sel;
    reg [7:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[15:8];
      end
      1'b1 : begin
        result = inputs[7:0];
      end
      default : begin
        result = inputs[15:8];
      end
    endcase
    MUX_v_8_2_2 = result;
  end
  endfunction


  function [1:0] MUX1HOT_v_2_3_2;
    input [5:0] inputs;
    input [2:0] sel;
    reg [1:0] result;
    integer i;
  begin
    result = inputs[0+:2] & {2{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*2+:2] & {2{sel[i]}});
    MUX1HOT_v_2_3_2 = result;
  end
  endfunction


  function [5:0] MUX_v_6_2_2;
    input [11:0] inputs;
    input [0:0] sel;
    reg [5:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[11:6];
      end
      1'b1 : begin
        result = inputs[5:0];
      end
      default : begin
        result = inputs[11:6];
      end
    endcase
    MUX_v_6_2_2 = result;
  end
  endfunction


  function [30:0] MUX_v_31_2_2;
    input [61:0] inputs;
    input [0:0] sel;
    reg [30:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[61:31];
      end
      1'b1 : begin
        result = inputs[30:0];
      end
      default : begin
        result = inputs[61:31];
      end
    endcase
    MUX_v_31_2_2 = result;
  end
  endfunction


  function [4:0] MUX_v_5_2_2;
    input [9:0] inputs;
    input [0:0] sel;
    reg [4:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[9:5];
      end
      1'b1 : begin
        result = inputs[4:0];
      end
      default : begin
        result = inputs[9:5];
      end
    endcase
    MUX_v_5_2_2 = result;
  end
  endfunction


  function [4:0] signext_5_1;
    input [0:0] vector;
  begin
    signext_5_1= {{4{vector[0]}}, vector};
  end
  endfunction


  function [31:0] MUX_v_32_16_2;
    input [511:0] inputs;
    input [3:0] sel;
    reg [31:0] result;
  begin
    case (sel)
      4'b0000 : begin
        result = inputs[511:480];
      end
      4'b0001 : begin
        result = inputs[479:448];
      end
      4'b0010 : begin
        result = inputs[447:416];
      end
      4'b0011 : begin
        result = inputs[415:384];
      end
      4'b0100 : begin
        result = inputs[383:352];
      end
      4'b0101 : begin
        result = inputs[351:320];
      end
      4'b0110 : begin
        result = inputs[319:288];
      end
      4'b0111 : begin
        result = inputs[287:256];
      end
      4'b1000 : begin
        result = inputs[255:224];
      end
      4'b1001 : begin
        result = inputs[223:192];
      end
      4'b1010 : begin
        result = inputs[191:160];
      end
      4'b1011 : begin
        result = inputs[159:128];
      end
      4'b1100 : begin
        result = inputs[127:96];
      end
      4'b1101 : begin
        result = inputs[95:64];
      end
      4'b1110 : begin
        result = inputs[63:32];
      end
      4'b1111 : begin
        result = inputs[31:0];
      end
      default : begin
        result = inputs[511:480];
      end
    endcase
    MUX_v_32_16_2 = result;
  end
  endfunction


  function [0:0] readslicef_34_1_33;
    input [33:0] vector;
    reg [33:0] tmp;
  begin
    tmp = vector >> 33;
    readslicef_34_1_33 = tmp[0:0];
  end
  endfunction


  function [31:0] MUX1HOT_v_32_6_2;
    input [191:0] inputs;
    input [5:0] sel;
    reg [31:0] result;
    integer i;
  begin
    result = inputs[0+:32] & {32{sel[0]}};
    for( i = 1; i < 6; i = i + 1 )
      result = result | (inputs[i*32+:32] & {32{sel[i]}});
    MUX1HOT_v_32_6_2 = result;
  end
  endfunction


  function  [33:0] conv_s2u_33_34 ;
    input signed [32:0]  vector ;
  begin
    conv_s2u_33_34 = {vector[32], vector};
  end
  endfunction


  function  [7:0] conv_u2u_2_8 ;
    input [1:0]  vector ;
  begin
    conv_u2u_2_8 = {{6{1'b0}}, vector};
  end
  endfunction


  function  [5:0] conv_u2u_5_6 ;
    input [4:0]  vector ;
  begin
    conv_u2u_5_6 = {1'b0, vector};
  end
  endfunction


  function  [6:0] conv_u2u_6_7 ;
    input [5:0]  vector ;
  begin
    conv_u2u_6_7 = {1'b0, vector};
  end
  endfunction


  function  [32:0] conv_s2u_32_33 ;
    input signed [31:0]  vector ;
  begin
    conv_s2u_32_33 = {vector[31], vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    InitDecode
//  Generated from file(s):
//    6) $PROJECT_HOME/src/ViterbiDecoder.cpp
//    3) $PROJECT_HOME/src/GlobalDefinitions.h
// ------------------------------------------------------------------


module InitDecode (
  start, ready, done, iNewNumOutBitsPartA_rsc_z, iNewNumOutBitsPartB_rsc_z, InitDecode_return_rsc_z,
      eNewCodingScheme_triosy_lz, eNewChannelType_triosy_lz, iN1_triosy_lz, iN2_triosy_lz,
      iNewNumOutBitsPartA_triosy_lz, iNewNumOutBitsPartB_triosy_lz, iPunctPatPartA_triosy_lz,
      iPunctPatPartB_triosy_lz, iLevel_triosy_lz, vecNewDistance_rTow0_triosy_lz,
      vecNewDistance_rTow1_triosy_lz, vecOutputBits_triosy_lz, InitDecode_return_triosy_lz,
      clk, rst, vecNewDistance_rTow0_rsc_dualport_data_in, vecNewDistance_rTow0_rsc_dualport_addr,
      vecNewDistance_rTow0_rsc_dualport_re, vecNewDistance_rTow0_rsc_dualport_we,
      vecNewDistance_rTow0_rsc_dualport_data_out, vecNewDistance_rTow1_rsc_dualport_data_in,
      vecNewDistance_rTow1_rsc_dualport_addr, vecNewDistance_rTow1_rsc_dualport_re,
      vecNewDistance_rTow1_rsc_dualport_we, vecNewDistance_rTow1_rsc_dualport_data_out,
      vecOutputBits_rsc_dualport_data_in, vecOutputBits_rsc_dualport_addr, vecOutputBits_rsc_dualport_re,
      vecOutputBits_rsc_dualport_we, vecOutputBits_rsc_dualport_data_out
);
  input start;
  output ready;
  output done;
  input [31:0] iNewNumOutBitsPartA_rsc_z;
  input [31:0] iNewNumOutBitsPartB_rsc_z;
  output [31:0] InitDecode_return_rsc_z;
  output eNewCodingScheme_triosy_lz;
  output eNewChannelType_triosy_lz;
  output iN1_triosy_lz;
  output iN2_triosy_lz;
  output iNewNumOutBitsPartA_triosy_lz;
  output iNewNumOutBitsPartB_triosy_lz;
  output iPunctPatPartA_triosy_lz;
  output iPunctPatPartB_triosy_lz;
  output iLevel_triosy_lz;
  output vecNewDistance_rTow0_triosy_lz;
  output vecNewDistance_rTow1_triosy_lz;
  output vecOutputBits_triosy_lz;
  output InitDecode_return_triosy_lz;
  input clk;
  input rst;
  output [63:0] vecNewDistance_rTow0_rsc_dualport_data_in;
  output [11:0] vecNewDistance_rTow0_rsc_dualport_addr;
  output [1:0] vecNewDistance_rTow0_rsc_dualport_re;
  output [1:0] vecNewDistance_rTow0_rsc_dualport_we;
  input [63:0] vecNewDistance_rTow0_rsc_dualport_data_out;
  output [63:0] vecNewDistance_rTow1_rsc_dualport_data_in;
  output [11:0] vecNewDistance_rTow1_rsc_dualport_addr;
  output [1:0] vecNewDistance_rTow1_rsc_dualport_re;
  output [1:0] vecNewDistance_rTow1_rsc_dualport_we;
  input [63:0] vecNewDistance_rTow1_rsc_dualport_data_out;
  output [15:0] vecOutputBits_rsc_dualport_data_in;
  output [11:0] vecOutputBits_rsc_dualport_addr;
  output [1:0] vecOutputBits_rsc_dualport_re;
  output [1:0] vecOutputBits_rsc_dualport_we;
  input [15:0] vecOutputBits_rsc_dualport_data_out;


  // Interconnect Declarations
  wire core_wen;
  wire [1:0] vecNewDistance_rTow0_rsc_dualport_re_core_sct;
  wire [1:0] vecNewDistance_rTow1_rsc_dualport_re_core_sct;
  wire [15:0] vecOutputBits_rsc_dualport_data_in_core;
  wire [11:0] vecOutputBits_rsc_dualport_addr_core;
  wire [1:0] vecOutputBits_rsc_dualport_we_core_sct;
  wire [31:0] iNewNumOutBitsPartA_rsc_mgc_in_wire_d;
  wire [31:0] iNewNumOutBitsPartB_rsc_mgc_in_wire_d;
  wire [31:0] InitDecode_return_rsc_mgc_out_stdreg_d;
  wire [63:0] vecTrelMetric1_rsc_dualport_data_in;
  wire [11:0] vecTrelMetric1_rsc_dualport_addr;
  wire [1:0] vecTrelMetric1_rsc_dualport_re;
  wire [1:0] vecTrelMetric1_rsc_dualport_we;
  wire [63:0] vecTrelMetric1_rsc_dualport_data_out;
  wire [63:0] vecTrelMetric2_rsc_dualport_data_in;
  wire [11:0] vecTrelMetric2_rsc_dualport_addr;
  wire [1:0] vecTrelMetric2_rsc_dualport_re;
  wire [1:0] vecTrelMetric2_rsc_dualport_we;
  wire [63:0] vecTrelMetric2_rsc_dualport_data_out;
  wire [1:0] matdecDecisions_rsc_dualport_data_in;
  wire [23:0] matdecDecisions_rsc_dualport_addr;
  wire [1:0] matdecDecisions_rsc_dualport_re;
  wire [1:0] matdecDecisions_rsc_dualport_we;
  wire [1:0] matdecDecisions_rsc_dualport_data_out;
  wire mgc_start_sync_mgc_bsync_rv_rd_core_sct;
  wire mgc_start_sync_mgc_bsync_rv_vd;
  wire mgc_done_sync_mgc_bsync_rdy_rd_core_sct;
  wire InitDecode_return_triosy_mgc_io_sync_ld_core_sct;
  wire vecOutputBits_triosy_mgc_io_sync_ld_core_sct;
  wire vecNewDistance_rTow1_triosy_mgc_io_sync_ld_core_sct;
  wire vecNewDistance_rTow0_triosy_mgc_io_sync_ld_core_sct;
  wire iLevel_triosy_mgc_io_sync_ld_core_sct;
  wire iPunctPatPartB_triosy_mgc_io_sync_ld_core_sct;
  wire iPunctPatPartA_triosy_mgc_io_sync_ld_core_sct;
  wire iNewNumOutBitsPartB_triosy_mgc_io_sync_ld_core_sct;
  wire iNewNumOutBitsPartA_triosy_mgc_io_sync_ld_core_sct;
  wire iN2_triosy_mgc_io_sync_ld_core_sct;
  wire iN1_triosy_mgc_io_sync_ld_core_sct;
  wire eNewChannelType_triosy_mgc_io_sync_ld_core_sct;
  wire eNewCodingScheme_triosy_mgc_io_sync_ld_core_sct;
  wire [31:0] div_mgc_div_a;
  wire [31:0] div_mgc_div_b;
  wire [31:0] div_mgc_div_z;
  reg [31:0] div_mgc_div_z_oreg;
  wire [11:0] vecNewDistance_rTow0_rsc_dualport_addr_core_iff;

  mgc_in_wire #(.rscid(8),
  .width(32)) iNewNumOutBitsPartA_rsc_mgc_in_wire (
      .d(iNewNumOutBitsPartA_rsc_mgc_in_wire_d),
      .z(iNewNumOutBitsPartA_rsc_z)
    );
  mgc_in_wire #(.rscid(9),
  .width(32)) iNewNumOutBitsPartB_rsc_mgc_in_wire (
      .d(iNewNumOutBitsPartB_rsc_mgc_in_wire_d),
      .z(iNewNumOutBitsPartB_rsc_z)
    );
  mgc_out_stdreg #(.rscid(13),
  .width(32)) InitDecode_return_rsc_mgc_out_stdreg (
      .d(InitDecode_return_rsc_mgc_out_stdreg_d),
      .z(InitDecode_return_rsc_z)
    );
  dualport_ram_be #(.ram_id(14),
  .words(64),
  .width(32),
  .addr_width(6),
  .a_reset_active(0),
  .s_reset_active(1),
  .enable_active(0),
  .re_active(0),
  .we_active(0),
  .num_byte_enables(1),
  .clock_edge(1),
  .num_input_registers(1),
  .num_output_registers(0),
  .no_of_dualport_readwrite_port(2)) vecTrelMetric1_rsc_dualport (
      .data_in(({32'b0 , (vecTrelMetric1_rsc_dualport_data_in[31:0])})),
      .addr(vecTrelMetric1_rsc_dualport_addr),
      .re(vecTrelMetric1_rsc_dualport_re),
      .we(vecTrelMetric1_rsc_dualport_we),
      .data_out(vecTrelMetric1_rsc_dualport_data_out),
      .clk(clk),
      .s_rst(rst),
      .a_rst(1'b1),
      .en((~ core_wen))
    );
  dualport_ram_be #(.ram_id(15),
  .words(64),
  .width(32),
  .addr_width(6),
  .a_reset_active(0),
  .s_reset_active(1),
  .enable_active(0),
  .re_active(0),
  .we_active(0),
  .num_byte_enables(1),
  .clock_edge(1),
  .num_input_registers(1),
  .num_output_registers(0),
  .no_of_dualport_readwrite_port(2)) vecTrelMetric2_rsc_dualport (
      .data_in(({32'b0 , (vecTrelMetric2_rsc_dualport_data_in[31:0])})),
      .addr(vecTrelMetric2_rsc_dualport_addr),
      .re(vecTrelMetric2_rsc_dualport_re),
      .we(vecTrelMetric2_rsc_dualport_we),
      .data_out(vecTrelMetric2_rsc_dualport_data_out),
      .clk(clk),
      .s_rst(rst),
      .a_rst(1'b1),
      .en((~ core_wen))
    );
  dualport_ram_be #(.ram_id(17),
  .words(4096),
  .width(1),
  .addr_width(12),
  .a_reset_active(0),
  .s_reset_active(1),
  .enable_active(0),
  .re_active(0),
  .we_active(0),
  .num_byte_enables(1),
  .clock_edge(1),
  .num_input_registers(1),
  .num_output_registers(0),
  .no_of_dualport_readwrite_port(2)) matdecDecisions_rsc_dualport (
      .data_in(({1'b0 , (matdecDecisions_rsc_dualport_data_in[0])})),
      .addr(({12'b0 , (matdecDecisions_rsc_dualport_addr[11:0])})),
      .re(matdecDecisions_rsc_dualport_re),
      .we(matdecDecisions_rsc_dualport_we),
      .data_out(matdecDecisions_rsc_dualport_data_out),
      .clk(clk),
      .s_rst(rst),
      .a_rst(1'b1),
      .en((~ core_wen))
    );
  mgc_bsync_rv #(.rscid(19),
  .ready(1),
  .valid(1)) mgc_start_sync_mgc_bsync_rv (
      .rd(mgc_start_sync_mgc_bsync_rv_rd_core_sct),
      .vd(mgc_start_sync_mgc_bsync_rv_vd),
      .rz(ready),
      .vz(start)
    );
  mgc_bsync_rdy #(.rscid(20),
  .ready(1),
  .valid(0)) mgc_done_sync_mgc_bsync_rdy (
      .rd(mgc_done_sync_mgc_bsync_rdy_rd_core_sct),
      .rz(done)
    );
  mgc_io_sync  InitDecode_return_triosy_mgc_io_sync (
      .ld(InitDecode_return_triosy_mgc_io_sync_ld_core_sct),
      .lz(InitDecode_return_triosy_lz)
    );
  mgc_io_sync  vecOutputBits_triosy_mgc_io_sync (
      .ld(vecOutputBits_triosy_mgc_io_sync_ld_core_sct),
      .lz(vecOutputBits_triosy_lz)
    );
  mgc_io_sync  vecNewDistance_rTow1_triosy_mgc_io_sync (
      .ld(vecNewDistance_rTow1_triosy_mgc_io_sync_ld_core_sct),
      .lz(vecNewDistance_rTow1_triosy_lz)
    );
  mgc_io_sync  vecNewDistance_rTow0_triosy_mgc_io_sync (
      .ld(vecNewDistance_rTow0_triosy_mgc_io_sync_ld_core_sct),
      .lz(vecNewDistance_rTow0_triosy_lz)
    );
  mgc_io_sync  iLevel_triosy_mgc_io_sync (
      .ld(iLevel_triosy_mgc_io_sync_ld_core_sct),
      .lz(iLevel_triosy_lz)
    );
  mgc_io_sync  iPunctPatPartB_triosy_mgc_io_sync (
      .ld(iPunctPatPartB_triosy_mgc_io_sync_ld_core_sct),
      .lz(iPunctPatPartB_triosy_lz)
    );
  mgc_io_sync  iPunctPatPartA_triosy_mgc_io_sync (
      .ld(iPunctPatPartA_triosy_mgc_io_sync_ld_core_sct),
      .lz(iPunctPatPartA_triosy_lz)
    );
  mgc_io_sync  iNewNumOutBitsPartB_triosy_mgc_io_sync (
      .ld(iNewNumOutBitsPartB_triosy_mgc_io_sync_ld_core_sct),
      .lz(iNewNumOutBitsPartB_triosy_lz)
    );
  mgc_io_sync  iNewNumOutBitsPartA_triosy_mgc_io_sync (
      .ld(iNewNumOutBitsPartA_triosy_mgc_io_sync_ld_core_sct),
      .lz(iNewNumOutBitsPartA_triosy_lz)
    );
  mgc_io_sync  iN2_triosy_mgc_io_sync (
      .ld(iN2_triosy_mgc_io_sync_ld_core_sct),
      .lz(iN2_triosy_lz)
    );
  mgc_io_sync  iN1_triosy_mgc_io_sync (
      .ld(iN1_triosy_mgc_io_sync_ld_core_sct),
      .lz(iN1_triosy_lz)
    );
  mgc_io_sync  eNewChannelType_triosy_mgc_io_sync (
      .ld(eNewChannelType_triosy_mgc_io_sync_ld_core_sct),
      .lz(eNewChannelType_triosy_lz)
    );
  mgc_io_sync  eNewCodingScheme_triosy_mgc_io_sync (
      .ld(eNewCodingScheme_triosy_mgc_io_sync_ld_core_sct),
      .lz(eNewCodingScheme_triosy_lz)
    );
  mgc_div #(.width_a(32),
  .width_b(32),
  .signd(1)) div_mgc_div (
      .a(div_mgc_div_a),
      .b(div_mgc_div_b),
      .z(div_mgc_div_z)
    );
  InitDecode_core InitDecode_core_inst (
      .clk(clk),
      .rst(rst),
      .vecNewDistance_rTow0_rsc_dualport_data_out(vecNewDistance_rTow0_rsc_dualport_data_out),
      .vecNewDistance_rTow1_rsc_dualport_data_out(vecNewDistance_rTow1_rsc_dualport_data_out),
      .core_wen(core_wen),
      .vecNewDistance_rTow0_rsc_dualport_re_core_sct(vecNewDistance_rTow0_rsc_dualport_re_core_sct),
      .vecNewDistance_rTow1_rsc_dualport_re_core_sct(vecNewDistance_rTow1_rsc_dualport_re_core_sct),
      .vecOutputBits_rsc_dualport_data_in_core(vecOutputBits_rsc_dualport_data_in_core),
      .vecOutputBits_rsc_dualport_addr_core(vecOutputBits_rsc_dualport_addr_core),
      .vecOutputBits_rsc_dualport_we_core_sct(vecOutputBits_rsc_dualport_we_core_sct),
      .iNewNumOutBitsPartA_rsc_mgc_in_wire_d(iNewNumOutBitsPartA_rsc_mgc_in_wire_d),
      .iNewNumOutBitsPartB_rsc_mgc_in_wire_d(iNewNumOutBitsPartB_rsc_mgc_in_wire_d),
      .InitDecode_return_rsc_mgc_out_stdreg_d(InitDecode_return_rsc_mgc_out_stdreg_d),
      .vecTrelMetric1_rsc_dualport_data_in(vecTrelMetric1_rsc_dualport_data_in),
      .vecTrelMetric1_rsc_dualport_addr(vecTrelMetric1_rsc_dualport_addr),
      .vecTrelMetric1_rsc_dualport_re(vecTrelMetric1_rsc_dualport_re),
      .vecTrelMetric1_rsc_dualport_we(vecTrelMetric1_rsc_dualport_we),
      .vecTrelMetric1_rsc_dualport_data_out(vecTrelMetric1_rsc_dualport_data_out),
      .vecTrelMetric2_rsc_dualport_data_in(vecTrelMetric2_rsc_dualport_data_in),
      .vecTrelMetric2_rsc_dualport_addr(vecTrelMetric2_rsc_dualport_addr),
      .vecTrelMetric2_rsc_dualport_re(vecTrelMetric2_rsc_dualport_re),
      .vecTrelMetric2_rsc_dualport_we(vecTrelMetric2_rsc_dualport_we),
      .vecTrelMetric2_rsc_dualport_data_out(vecTrelMetric2_rsc_dualport_data_out),
      .matdecDecisions_rsc_dualport_data_in(matdecDecisions_rsc_dualport_data_in),
      .matdecDecisions_rsc_dualport_addr(matdecDecisions_rsc_dualport_addr),
      .matdecDecisions_rsc_dualport_re(matdecDecisions_rsc_dualport_re),
      .matdecDecisions_rsc_dualport_we(matdecDecisions_rsc_dualport_we),
      .matdecDecisions_rsc_dualport_data_out(matdecDecisions_rsc_dualport_data_out),
      .mgc_start_sync_mgc_bsync_rv_rd_core_sct(mgc_start_sync_mgc_bsync_rv_rd_core_sct),
      .mgc_start_sync_mgc_bsync_rv_vd(mgc_start_sync_mgc_bsync_rv_vd),
      .mgc_done_sync_mgc_bsync_rdy_rd_core_sct(mgc_done_sync_mgc_bsync_rdy_rd_core_sct),
      .InitDecode_return_triosy_mgc_io_sync_ld_core_sct(InitDecode_return_triosy_mgc_io_sync_ld_core_sct),
      .vecOutputBits_triosy_mgc_io_sync_ld_core_sct(vecOutputBits_triosy_mgc_io_sync_ld_core_sct),
      .vecNewDistance_rTow1_triosy_mgc_io_sync_ld_core_sct(vecNewDistance_rTow1_triosy_mgc_io_sync_ld_core_sct),
      .vecNewDistance_rTow0_triosy_mgc_io_sync_ld_core_sct(vecNewDistance_rTow0_triosy_mgc_io_sync_ld_core_sct),
      .iLevel_triosy_mgc_io_sync_ld_core_sct(iLevel_triosy_mgc_io_sync_ld_core_sct),
      .iPunctPatPartB_triosy_mgc_io_sync_ld_core_sct(iPunctPatPartB_triosy_mgc_io_sync_ld_core_sct),
      .iPunctPatPartA_triosy_mgc_io_sync_ld_core_sct(iPunctPatPartA_triosy_mgc_io_sync_ld_core_sct),
      .iNewNumOutBitsPartB_triosy_mgc_io_sync_ld_core_sct(iNewNumOutBitsPartB_triosy_mgc_io_sync_ld_core_sct),
      .iNewNumOutBitsPartA_triosy_mgc_io_sync_ld_core_sct(iNewNumOutBitsPartA_triosy_mgc_io_sync_ld_core_sct),
      .iN2_triosy_mgc_io_sync_ld_core_sct(iN2_triosy_mgc_io_sync_ld_core_sct),
      .iN1_triosy_mgc_io_sync_ld_core_sct(iN1_triosy_mgc_io_sync_ld_core_sct),
      .eNewChannelType_triosy_mgc_io_sync_ld_core_sct(eNewChannelType_triosy_mgc_io_sync_ld_core_sct),
      .eNewCodingScheme_triosy_mgc_io_sync_ld_core_sct(eNewCodingScheme_triosy_mgc_io_sync_ld_core_sct),
      .div_mgc_div_a(div_mgc_div_a),
      .div_mgc_div_b(div_mgc_div_b),
      .div_mgc_div_z_oreg(div_mgc_div_z_oreg),
      .vecNewDistance_rTow0_rsc_dualport_addr_core_pff(vecNewDistance_rTow0_rsc_dualport_addr_core_iff)
    );
  assign vecNewDistance_rTow0_rsc_dualport_data_in = 64'b0;
  assign vecNewDistance_rTow0_rsc_dualport_addr = {6'b0 , (vecNewDistance_rTow0_rsc_dualport_addr_core_iff[5:0])};
  assign vecNewDistance_rTow0_rsc_dualport_re = ~ vecNewDistance_rTow0_rsc_dualport_re_core_sct;
  assign vecNewDistance_rTow0_rsc_dualport_we = 2'b11;
  assign vecNewDistance_rTow1_rsc_dualport_data_in = 64'b0;
  assign vecNewDistance_rTow1_rsc_dualport_addr = {6'b0 , (vecNewDistance_rTow0_rsc_dualport_addr_core_iff[5:0])};
  assign vecNewDistance_rTow1_rsc_dualport_re = ~ vecNewDistance_rTow1_rsc_dualport_re_core_sct;
  assign vecNewDistance_rTow1_rsc_dualport_we = 2'b11;
  assign vecOutputBits_rsc_dualport_data_in = {8'b0 , (vecOutputBits_rsc_dualport_data_in_core[7:0])};
  assign vecOutputBits_rsc_dualport_addr = {6'b0 , (vecOutputBits_rsc_dualport_addr_core[5:0])};
  assign vecOutputBits_rsc_dualport_re = 2'b11;
  assign vecOutputBits_rsc_dualport_we = ~ vecOutputBits_rsc_dualport_we_core_sct;
  always @(posedge clk) begin
    if ( rst ) begin
      div_mgc_div_z_oreg <= 32'b0;
    end
    else if ( core_wen ) begin
      div_mgc_div_z_oreg <= div_mgc_div_z;
    end
  end
endmodule



