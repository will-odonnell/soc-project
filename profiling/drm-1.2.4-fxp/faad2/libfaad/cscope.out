cscope 15 /home/usr1/rvemu/libfaad2_source/libfaad               0002167843
	@analysis.h

28 #i‚de‡
__ANALYSIS_H__


29 
	#__ANALYSIS_H__


	)

31 #ifde‡
__˝lu•lus


36 #ifde‡
ANALYSIS


37 
	#DEBUGDEC
 ,
uöt8_t
 
¥öt
,
uöt16_t
 
v¨
,uöt8_à*
dbg


	)

38 
	#DEBUGVAR
(
A
,
B
,
C
Ë,A,B,
	)
C

39 
uöt16_t
 
dbg_cou¡
;

41 
	#DEBUGDEC


	)

42 
	#DEBUGVAR
(
A
,
B
,
C
)

	)

46 #ifde‡
__˝lu•lus


	@bits.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 
	~<°dlib.h
>

32 
	~<°rög.h
>

33 
	~"bôs.h
"

36 
	$Áad_öôbôs
(
bôfûe
 *
ld
, c⁄° *
_buf„r
, c⁄° 
uöt32_t
 
buf„r_size
)

38 
uöt32_t
 
tmp
;

40 i‡(
ld
 =
NULL
)

43 
	`mem£t
(
ld
, 0, (
bôfûe
));

45 i‡(
buf„r_size
 =0 || 
_buf„r
 =
NULL
)

47 
ld
->
îr‹
 = 1;

48 
ld
->
no_m‹e_ªadög
 = 1;

52 
ld
->
buf„r
 = 
	`Áad_mÆloc
((
buf„r_size
+12)*(
uöt8_t
));

53 
	`mem£t
(
ld
->
buf„r
, 0, (
buf„r_size
+12)*(
uöt8_t
));

54 
	`mem˝y
(
ld
->
buf„r
, 
_buf„r
, 
buf„r_size
*(
uöt8_t
));

56 
ld
->
buf„r_size
 = buffer_size;

58 
tmp
 = 
	`gëdw‹d
((
uöt32_t
*)
ld
->
buf„r
);

59 
ld
->
buÁ
 = 
tmp
;

61 
tmp
 = 
	`gëdw‹d
((
uöt32_t
*)
ld
->
buf„r
 + 1);

62 
ld
->
bufb
 = 
tmp
;

64 
ld
->
°¨t
 = (
uöt32_t
*Ód->
buf„r
;

65 
ld
->
èû
 = ((
uöt32_t
*Ód->
buf„r
 + 2);

67 
ld
->
bôs_À·
 = 32;

69 
ld
->
byãs_u£d
 = 0;

70 
ld
->
no_m‹e_ªadög
 = 0;

71 
ld
->
îr‹
 = 0;

72 
	}
}

74 
	$Áad_ídbôs
(
bôfûe
 *
ld
)

76 i‡(
ld
)

78 i‡(
ld
->
buf„r
)

80 
	`Áad_‰ì
(
ld
->
buf„r
);

81 
ld
->
buf„r
 = 
NULL
;

84 
	}
}

86 
uöt32_t
 
	$Áad_gë_¥o˚s£d_bôs
(
bôfûe
 *
ld
)

88  (
uöt32_t
)(8 * (4*(
ld
->
èû
 -Üd->
°¨t
Ë- 4Ë- (ld->
bôs_À·
));

89 
	}
}

91 
uöt8_t
 
	$Áad_byã_Æign
(
bôfûe
 *
ld
)

93 
uöt8_t
 
ªmaödî
 = (uöt8_t)((32 - 
ld
->
bôs_À·
) % 8);

95 i‡(
ªmaödî
)

97 
	`Áad_Êushbôs
(
ld
, 8 - 
ªmaödî
);

98  (8 - 
ªmaödî
);

101 
	}
}

103 
	$Áad_Êushbôs_ex
(
bôfûe
 *
ld
, 
uöt32_t
 
bôs
)

105 
uöt32_t
 
tmp
;

107 
ld
->
buÁ
 =Üd->
bufb
;

108 i‡(
ld
->
no_m‹e_ªadög
 == 0)

110 
tmp
 = 
	`gëdw‹d
(
ld
->
èû
);

111 
ld
->
èû
++;

113 
tmp
 = 0;

115 
ld
->
bufb
 = 
tmp
;

116 
ld
->
bôs_À·
 +(32 - 
bôs
);

117 
ld
->
byãs_u£d
 += 4;

118 i‡(
ld
->
byãs_u£d
 =ld->
buf„r_size
)

119 
ld
->
no_m‹e_ªadög
 = 1;

120 i‡(
ld
->
byãs_u£d
 >Üd->
buf„r_size
)

121 
ld
->
îr‹
 = 1;

122 
	}
}

125 
	$Áad_ªwödbôs
(
bôfûe
 *
ld
)

127 
uöt32_t
 
tmp
;

129 
tmp
 = 
ld
->
°¨t
[0];

130 #i‚de‡
ARCH_IS_BIG_ENDIAN


131 
	`BSWAP
(
tmp
);

133 
ld
->
buÁ
 = 
tmp
;

135 
tmp
 = 
ld
->
°¨t
[1];

136 #i‚de‡
ARCH_IS_BIG_ENDIAN


137 
	`BSWAP
(
tmp
);

139 
ld
->
bufb
 = 
tmp
;

140 
ld
->
bôs_À·
 = 32;

141 
ld
->
èû
 = &ld->
°¨t
[2];

142 
ld
->
byãs_u£d
 = 0;

143 
ld
->
no_m‹e_ªadög
 = 0;

144 
	}
}

146 
uöt8_t
 *
	$Áad_gëbôbuf„r
(
bôfûe
 *
ld
, 
uöt32_t
 
bôs


147 
DEBUGDEC
)

149 
uöt16_t
 
i
;

150 
uöt8_t
 
ãmp
;

151 
uöt16_t
 
byãs
 = (uöt16_t)
bôs
 / 8;

152 
uöt8_t
 
ªmaödî
 = (uöt8_t)
bôs
 % 8;

154 
uöt8_t
 *
buf„r
 = (uöt8_t*)
	`Áad_mÆloc
((
byãs
+1)*(uint8_t));

156 
i
 = 0; i < 
byãs
; i++)

158 
buf„r
[
i
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 8 
	`DEBUGVAR
(
¥öt
,
v¨
,
dbg
));

161 i‡(
ªmaödî
)

163 
ãmp
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 
ªmaödî
 
	`DEBUGVAR
(
¥öt
,
v¨
,
dbg
)) << (8-remainder);

165 
buf„r
[
byãs
] = 
ãmp
;

168  
buf„r
;

169 
	}
}

171 #ifde‡
DRM


173 *
	$Áad_‹igbôbuf„r
(
bôfûe
 *
ld
)

175  (*)
ld
->
°¨t
;

176 
	}
}

179 
uöt32_t
 
	$Áad_‹igbôbuf„r_size
(
bôfûe
 *
ld
)

181  
ld
->
buf„r_size
;

182 
	}
}

186 
	$Áad_öôbôs_ªv
(
bôfûe
 *
ld
, *
buf„r
,

187 
uöt32_t
 
bôs_ö_buf„r
)

189 
uöt32_t
 
tmp
;

190 
öt32_t
 
ödex
;

192 
ld
->
buf„r_size
 = 
	`bô2byã
(
bôs_ö_buf„r
);

194 
ödex
 = (
bôs_ö_buf„r
+31)/32 - 1;

196 
ld
->
°¨t
 = (
uöt32_t
*)
buf„r
 + 
ödex
 - 2;

198 
tmp
 = 
	`gëdw‹d
((
uöt32_t
*)
buf„r
 + 
ödex
);

199 
ld
->
buÁ
 = 
tmp
;

201 
tmp
 = 
	`gëdw‹d
((
uöt32_t
*)
buf„r
 + 
ödex
 - 1);

202 
ld
->
bufb
 = 
tmp
;

204 
ld
->
èû
 = (
uöt32_t
*)
buf„r
 + 
ödex
;

206 
ld
->
bôs_À·
 = 
bôs_ö_buf„r
 % 32;

207 i‡(
ld
->
bôs_À·
 == 0)

208 
ld
->
bôs_À·
 = 32;

210 
ld
->
byãs_u£d
 = 0;

211 
ld
->
no_m‹e_ªadög
 = 0;

212 
ld
->
îr‹
 = 0;

213 
	}
}

	@bits.h

28 #i‚de‡
__BITS_H__


29 
	#__BITS_H__


	)

31 #ifde‡
__˝lu•lus


35 
	~"™Æysis.h
"

36 #ifde‡
ANALYSIS


37 
	~<°dio.h
>

40 
	#BYTE_NUMBIT
 8

	)

41 
	#bô2byã
(
a
Ë(◊+7)/
BYTE_NUMBIT
)

	)

43 
	s_bôfûe


46 
uöt32_t
 
buÁ
;

47 
uöt32_t
 
bufb
;

48 
uöt32_t
 
bôs_À·
;

49 
uöt32_t
 
buf„r_size
;

50 
uöt32_t
 
byãs_u£d
;

51 
uöt8_t
 
no_m‹e_ªadög
;

52 
uöt8_t
 
îr‹
;

53 
uöt32_t
 *
èû
;

54 
uöt32_t
 *
°¨t
;

55 *
buf„r
;

56 } 
	tbôfûe
;

59 #i‡
deföed
 (
_WIN32
Ë&& !deföed(
_WIN32_WCE
Ë&& !deföed(
__MINGW32__
)

60 
	#BSWAP
(
a
Ë
__asm
 
mov
 
óx
,®__asm 
bsw≠
Éax __asm mová, 
	)
eax

61 #ñi‡
deföed
(
LINUX
Ë|| deföed(
DJGPP
Ë|| deföed(
__MINGW32__
)

62 
	#BSWAP
(
a
Ë
	`__asm__
 ( "bsw≠»%0\n" : "Ù" (aË: "0" (aË)

	)

64 
	#BSWAP
(
a
) \

65 ((
a
Ë–(◊)&0xff)<<24Ë| ((◊)&0xff00)<<8Ë| ((◊)>>8)&0xff00Ë| ((◊)>>24)&0xff))

	)

68 
uöt32_t
 
bômask
[] = {

78 
Áad_öôbôs
(
bôfûe
 *
ld
, c⁄° *
buf„r
, c⁄° 
uöt32_t
 
buf„r_size
);

79 
Áad_ídbôs
(
bôfûe
 *
ld
);

80 
Áad_öôbôs_ªv
(
bôfûe
 *
ld
, *
buf„r
,

81 
uöt32_t
 
bôs_ö_buf„r
);

82 
uöt8_t
 
Áad_byã_Æign
(
bôfûe
 *
ld
);

83 
uöt32_t
 
Áad_gë_¥o˚s£d_bôs
(
bôfûe
 *
ld
);

84 
Áad_Êushbôs_ex
(
bôfûe
 *
ld
, 
uöt32_t
 
bôs
);

85 
Áad_ªwödbôs
(
bôfûe
 *
ld
);

86 
uöt8_t
 *
Áad_gëbôbuf„r
(
bôfûe
 *
ld
, 
uöt32_t
 
bôs


87 
DEBUGDEC
);

88 #ifde‡
DRM


89 *
Áad_‹igbôbuf„r
(
bôfûe
 *
ld
);

90 
uöt32_t
 
Áad_‹igbôbuf„r_size
(
bôfûe
 *
ld
);

94 
INLINE
 
uöt32_t
 
gëdw‹d
(*
mem
)

96 #ifde‡
ARM


97 
uöt32_t
 
tmp
;

98 #i‚de‡
ARCH_IS_BIG_ENDIAN


99 ((
uöt8_t
*)&
tmp
)[0] = ((uöt8_t*)
mem
)[3];

100 ((
uöt8_t
*)&
tmp
)[1] = ((uöt8_t*)
mem
)[2];

101 ((
uöt8_t
*)&
tmp
)[2] = ((uöt8_t*)
mem
)[1];

102 ((
uöt8_t
*)&
tmp
)[3] = ((uöt8_t*)
mem
)[0];

104 ((
uöt8_t
*)&
tmp
)[0] = ((uöt8_t*)
mem
)[0];

105 ((
uöt8_t
*)&
tmp
)[1] = ((uöt8_t*)
mem
)[1];

106 ((
uöt8_t
*)&
tmp
)[2] = ((uöt8_t*)
mem
)[2];

107 ((
uöt8_t
*)&
tmp
)[3] = ((uöt8_t*)
mem
)[3];

110  
tmp
;

112 
uöt32_t
 
tmp
;

113 
tmp
 = *(
uöt32_t
*)
mem
;

114 #i‚de‡
ARCH_IS_BIG_ENDIAN


115 
BSWAP
(
tmp
);

117  
tmp
;

121 
INLINE
 
uöt32_t
 
Áad_showbôs
(
bôfûe
 *
ld
, uöt32_à
bôs
)

123 i‡(
bôs
 <
ld
->
bôs_À·
)

125  (
ld
->
buÁ
 >> (ld->
bôs_À·
 - 
bôs
)Ë& 
bômask
[bits];

128 
bôs
 -
ld
->
bôs_À·
;

129  ((
ld
->
buÁ
 & 
bômask
[ld->
bôs_À·
]Ë<< 
bôs
Ë| (ld->
bufb
 >> (32 - bits));

132 
INLINE
 
Áad_Êushbôs
(
bôfûe
 *
ld
, 
uöt32_t
 
bôs
)

135 i‡(
ld
->
îr‹
 != 0)

138 i‡(
bôs
 < 
ld
->
bôs_À·
)

140 
ld
->
bôs_À·
 -
bôs
;

142 
Áad_Êushbôs_ex
(
ld
, 
bôs
);

147 
INLINE
 
uöt32_t
 
Áad_gëbôs
(
bôfûe
 *
ld
, uöt32_à
n
 
DEBUGDEC
)

149 
uöt32_t
 
ªt
;

151 i‡(
ld
->
no_m‹e_ªadög
 || 
n
 == 0)

154 
ªt
 = 
Áad_showbôs
(
ld
, 
n
);

155 
Áad_Êushbôs
(
ld
, 
n
);

157 #ifde‡
ANALYSIS


158 i‡(
¥öt
)

159 
Ârötf
(
°dout
, "%4d %2d bôs, vÆ: %4d, v¨übÀ: %d %s\n", 
dbg_cou¡
++, 
n
, 
ªt
, 
v¨
, 
dbg
);

162  
ªt
;

165 
INLINE
 
uöt8_t
 
Áad_gë1bô
(
bôfûe
 *
ld
 
DEBUGDEC
)

167 
uöt8_t
 
r
;

169 i‡(
ld
->
bôs_À·
 > 0)

171 
ld
->
bôs_À·
--;

172 
r
 = (
uöt8_t
)((
ld
->
buÁ
 >>Üd->
bôs_À·
) & 1);

173  
r
;

178 
r
 = (
uöt8_t
)(
ld
->
bufb
 >> 31);

179 
Áad_Êushbôs_ex
(
ld
, 1);

181 
r
 = (
uöt8_t
)
Áad_gëbôs
(
ld
, 1);

183  
r
;

187 
INLINE
 
uöt32_t
 
Áad_showbôs_ªv
(
bôfûe
 *
ld
, uöt32_à
bôs
)

189 
uöt8_t
 
i
;

190 
uöt32_t
 
B
 = 0;

192 i‡(
bôs
 <
ld
->
bôs_À·
)

194 
i
 = 0; i < 
bôs
; i++)

196 i‡(
ld
->
buÁ
 & (1 << (
i
 + (32 -Üd->
bôs_À·
))))

197 
B
 |(1 << (
bôs
 - 
i
 - 1));

199  
B
;

201 
i
 = 0; i < 
ld
->
bôs_À·
; i++)

203 i‡(
ld
->
buÁ
 & (1 << (
i
 + (32 -Üd->
bôs_À·
))))

204 
B
 |(1 << (
bôs
 - 
i
 - 1));

206 
i
 = 0; i < 
bôs
 - 
ld
->
bôs_À·
; i++)

208 i‡(
ld
->
bufb
 & (1 << (
i
 + (32-ld->
bôs_À·
))))

209 
B
 |(1 << (
bôs
 - 
ld
->
bôs_À·
 - 
i
 - 1));

211  
B
;

215 
INLINE
 
Áad_Êushbôs_ªv
(
bôfûe
 *
ld
, 
uöt32_t
 
bôs
)

218 i‡(
ld
->
îr‹
 != 0)

221 i‡(
bôs
 < 
ld
->
bôs_À·
)

223 
ld
->
bôs_À·
 -
bôs
;

225 
uöt32_t
 
tmp
;

227 
ld
->
buÁ
 =Üd->
bufb
;

228 
tmp
 = 
gëdw‹d
(
ld
->
°¨t
);

229 
ld
->
bufb
 = 
tmp
;

230 
ld
->
°¨t
--;

231 
ld
->
bôs_À·
 +(32 - 
bôs
);

233 
ld
->
byãs_u£d
 += 4;

234 i‡(
ld
->
byãs_u£d
 =ld->
buf„r_size
)

235 
ld
->
no_m‹e_ªadög
 = 1;

236 i‡(
ld
->
byãs_u£d
 >Üd->
buf„r_size
)

237 
ld
->
îr‹
 = 1;

241 
INLINE
 
uöt32_t
 
Áad_gëbôs_ªv
(
bôfûe
 *
ld
, uöt32_à
n


242 
DEBUGDEC
)

244 
uöt32_t
 
ªt
;

246 i‡(
ld
->
no_m‹e_ªadög
)

249 i‡(
n
 == 0)

252 
ªt
 = 
Áad_showbôs_ªv
(
ld
, 
n
);

253 
Áad_Êushbôs_ªv
(
ld
, 
n
);

255 #ifde‡
ANALYSIS


256 i‡(
¥öt
)

257 
Ârötf
(
°dout
, "%4d %2d bôs, vÆ: %4d, v¨übÀ: %d %s\n", 
dbg_cou¡
++, 
n
, 
ªt
, 
v¨
, 
dbg
);

260  
ªt
;

263 #ifde‡
DRM


264 
uöt8_t
 
Áad_check_CRC
(
bôfûe
 *
ld
, 
uöt16_t
 
Àn
)

266 
uöt8_t
 
CRC
;

267 
uöt16_t
 
r
=255;

270 
	#GPOLY
 0435

	)

272 
Áad_ªwödbôs
(
ld
);

274 
CRC
 = (
uöt8_t
Ë~
Áad_gëbôs
(
ld
, 8

275 
DEBUGVAR
(1,999,"faad_check_CRC(): CRC"));

277 ; 
Àn
>0;Üen--)

279 
r
 = ( (∏<< 1Ë^ (––
Áad_gë1bô
(
ld


280 
DEBUGVAR
(1,998,"")Ë& 1Ë^ ((
r
 >> 7Ë& 1)Ë* 
GPOLY
 )) & 0xFF;

283 i‡(
r
 !
CRC
)

291 
uöt8_t
 
èbFlùbôs
[256] = {

311 #ifde‡
ERROR_RESILIENCE


318 
uöt32_t
 
buÁ
;

319 
uöt32_t
 
bufb
;

320 
öt8_t
 
Àn
;

321 } 
	tbôs_t
;

324 
INLINE
 
uöt32_t
 
showbôs_h¸
(
bôs_t
 *
ld
, 
uöt8_t
 
bôs
)

326 i‡(
bôs
 == 0)  0;

327 i‡(
ld
->
Àn
 <= 32)

331 i‡(
ld
->
Àn
 >
bôs
)

332  ((
ld
->
buÁ
 >> (ld->
Àn
 - 
bôs
)) & (0xFFFFFFFF >> (32 - bits)));

334  ((
ld
->
buÁ
 << (
bôs
 -Üd->
Àn
)) & (0xFFFFFFFF >> (32 - bits)));

336 i‡((
ld
->
Àn
 - 
bôs
) < 32)

338  ( (
ld
->
bufb
 & (0xFFFFFFFF >> (64 -Üd->
Àn
))Ë<< (
bôs
 -Üd->len + 32)) |

339 (
ld
->
buÁ
 >> (ld->
Àn
 - 
bôs
));

341  ((
ld
->
bufb
 >> (ld->
Àn
 - 
bôs
 - 32)) & (0xFFFFFFFF >> (32 - bits)));

347 
INLINE
 
öt8_t
 
Êushbôs_h¸
–
bôs_t
 *
ld
, 
uöt8_t
 
bôs
)

349 
ld
->
Àn
 -
bôs
;

351 i‡(
ld
->
Àn
 <0)

353 
ld
->
Àn
 = 0;

360 
INLINE
 
öt8_t
 
gëbôs_h¸
(
bôs_t
 *
ld
, 
uöt8_t
 
n
, 
uöt32_t
 *
ªsu…
)

362 *
ªsu…
 = 
showbôs_h¸
(
ld
, 
n
);

363  
Êushbôs_h¸
(
ld
, 
n
);

366 
INLINE
 
öt8_t
 
gë1bô_h¸
(
bôs_t
 *
ld
, 
uöt8_t
 *
ªsu…
)

368 
uöt32_t
 
ªs
;

369 
öt8_t
 
ªt
;

371 
ªt
 = 
gëbôs_h¸
(
ld
, 1, &
ªs
);

372 *
ªsu…
 = (
öt8_t
)(
ªs
 & 1);

373  
ªt
;

379 #ifde‡
__˝lu•lus


	@cfft.c

37 
	~"comm⁄.h
"

38 
	~"°ru˘s.h
"

40 
	~<°dlib.h
>

42 
	~"cf·.h
"

43 
	~"cf·_èb.h
"

47 
∑ssf2pos
(c⁄° 
uöt16_t
 
ido
, c⁄° uöt16_à
l1
, c⁄° 
com∂ex_t
 *
cc
,

48 
com∂ex_t
 *
ch
, c⁄° com∂ex_à*
wa
);

49 
∑ssf2√g
(c⁄° 
uöt16_t
 
ido
, c⁄° uöt16_à
l1
, c⁄° 
com∂ex_t
 *
cc
,

50 
com∂ex_t
 *
ch
, c⁄° com∂ex_à*
wa
);

51 
∑ssf3
(c⁄° 
uöt16_t
 
ido
, c⁄° uöt16_à
l1
, c⁄° 
com∂ex_t
 *
cc
,

52 
com∂ex_t
 *
ch
, c⁄° com∂ex_à*
wa1
, c⁄° com∂ex_à*
wa2
, c⁄° 
öt8_t
 
isign
);

53 
∑ssf4pos
(c⁄° 
uöt16_t
 
ido
, c⁄° uöt16_à
l1
, c⁄° 
com∂ex_t
 *
cc
, com∂ex_à*
ch
,

54 c⁄° 
com∂ex_t
 *
wa1
, c⁄° com∂ex_à*
wa2
, c⁄° com∂ex_à*
wa3
);

55 
∑ssf4√g
(c⁄° 
uöt16_t
 
ido
, c⁄° uöt16_à
l1
, c⁄° 
com∂ex_t
 *
cc
, com∂ex_à*
ch
,

56 c⁄° 
com∂ex_t
 *
wa1
, c⁄° com∂ex_à*
wa2
, c⁄° com∂ex_à*
wa3
);

57 
∑ssf5
(c⁄° 
uöt16_t
 
ido
, c⁄° uöt16_à
l1
, c⁄° 
com∂ex_t
 *
cc
, com∂ex_à*
ch
,

58 c⁄° 
com∂ex_t
 *
wa1
, c⁄° com∂ex_à*
wa2
, c⁄° com∂ex_à*
wa3
,

59 c⁄° 
com∂ex_t
 *
wa4
, c⁄° 
öt8_t
 
isign
);

60 
INLINE
 
cf·f1
(
uöt16_t
 
n
, 
com∂ex_t
 *
c
, com∂ex_à*
ch
,

61 c⁄° 
uöt16_t
 *
iÁc
, c⁄° 
com∂ex_t
 *
wa
, c⁄° 
öt8_t
 
isign
);

62 
cf·i1
(
uöt16_t
 
n
, 
com∂ex_t
 *
wa
, uöt16_à*
iÁc
);

69 
	$∑ssf2pos
(c⁄° 
uöt16_t
 
ido
, c⁄° uöt16_à
l1
, c⁄° 
com∂ex_t
 *
cc
,

70 
com∂ex_t
 *
ch
, c⁄° com∂ex_à*
wa
)

72 
uöt16_t
 
i
, 
k
, 
ah
, 
ac
;

74 i‡(
ido
 == 1)

76 
k
 = 0; k < 
l1
; k++)

78 
ah
 = 2*
k
;

79 
ac
 = 4*
k
;

81 
	`RE
(
ch
[
ah
]ËRE(
cc
[
ac
]) + RE(cc[ac+1]);

82 
	`RE
(
ch
[
ah
+
l1
]ËRE(
cc
[
ac
]) - RE(cc[ac+1]);

83 
	`IM
(
ch
[
ah
]ËIM(
cc
[
ac
]) + IM(cc[ac+1]);

84 
	`IM
(
ch
[
ah
+
l1
]ËIM(
cc
[
ac
]) - IM(cc[ac+1]);

87 
k
 = 0; k < 
l1
; k++)

89 
ah
 = 
k
*
ido
;

90 
ac
 = 2*
k
*
ido
;

92 
i
 = 0; i < 
ido
; i++)

94 
com∂ex_t
 
t2
;

96 
	`RE
(
ch
[
ah
+
i
]ËRE(
cc
[
ac
+i]Ë+ RE(cc[ac+i+
ido
]);

97 
	`RE
(
t2
ËRE(
cc
[
ac
+
i
]Ë- RE(cc[ac+i+
ido
]);

99 
	`IM
(
ch
[
ah
+
i
]ËIM(
cc
[
ac
+i]Ë+ IM(cc[ac+i+
ido
]);

100 
	`IM
(
t2
ËIM(
cc
[
ac
+
i
]Ë- IM(cc[ac+i+
ido
]);

103 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+
i
+
l1
*
ido
]), &
	`RE
(ch[ah+i+l1*ido]),

104 
	`IM
(
t2
), 
	`RE
—2), RE(
wa
[
i
]), IM(wa[i]));

106 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+
i
+
l1
*
ido
]), &
	`IM
(ch[ah+i+l1*ido]),

107 
	`RE
(
t2
), 
	`IM
—2), RE(
wa
[
i
]), IM(wa[i]));

112 
	}
}

114 
	$∑ssf2√g
(c⁄° 
uöt16_t
 
ido
, c⁄° uöt16_à
l1
, c⁄° 
com∂ex_t
 *
cc
,

115 
com∂ex_t
 *
ch
, c⁄° com∂ex_à*
wa
)

117 
uöt16_t
 
i
, 
k
, 
ah
, 
ac
;

119 i‡(
ido
 == 1)

121 
k
 = 0; k < 
l1
; k++)

123 
ah
 = 2*
k
;

124 
ac
 = 4*
k
;

126 
	`RE
(
ch
[
ah
]ËRE(
cc
[
ac
]) + RE(cc[ac+1]);

127 
	`RE
(
ch
[
ah
+
l1
]ËRE(
cc
[
ac
]) - RE(cc[ac+1]);

128 
	`IM
(
ch
[
ah
]ËIM(
cc
[
ac
]) + IM(cc[ac+1]);

129 
	`IM
(
ch
[
ah
+
l1
]ËIM(
cc
[
ac
]) - IM(cc[ac+1]);

132 
k
 = 0; k < 
l1
; k++)

134 
ah
 = 
k
*
ido
;

135 
ac
 = 2*
k
*
ido
;

137 
i
 = 0; i < 
ido
; i++)

139 
com∂ex_t
 
t2
;

141 
	`RE
(
ch
[
ah
+
i
]ËRE(
cc
[
ac
+i]Ë+ RE(cc[ac+i+
ido
]);

142 
	`RE
(
t2
ËRE(
cc
[
ac
+
i
]Ë- RE(cc[ac+i+
ido
]);

144 
	`IM
(
ch
[
ah
+
i
]ËIM(
cc
[
ac
+i]Ë+ IM(cc[ac+i+
ido
]);

145 
	`IM
(
t2
ËIM(
cc
[
ac
+
i
]Ë- IM(cc[ac+i+
ido
]);

148 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+
i
+
l1
*
ido
]), &
	`IM
(ch[ah+i+l1*ido]),

149 
	`RE
(
t2
), 
	`IM
—2), RE(
wa
[
i
]), IM(wa[i]));

151 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+
i
+
l1
*
ido
]), &
	`RE
(ch[ah+i+l1*ido]),

152 
	`IM
(
t2
), 
	`RE
—2), RE(
wa
[
i
]), IM(wa[i]));

157 
	}
}

160 
	$∑ssf3
(c⁄° 
uöt16_t
 
ido
, c⁄° uöt16_à
l1
, c⁄° 
com∂ex_t
 *
cc
,

161 
com∂ex_t
 *
ch
, c⁄° com∂ex_à*
wa1
, c⁄° com∂ex_à*
wa2
,

162 c⁄° 
öt8_t
 
isign
)

164 
ªÆ_t
 
èur
 = 
	`FRAC_CONST
(-0.5);

165 
ªÆ_t
 
èui
 = 
	`FRAC_CONST
(0.866025403784439);

166 
uöt16_t
 
i
, 
k
, 
ac
, 
ah
;

167 
com∂ex_t
 
c2
, 
c3
, 
d2
, 
d3
, 
t2
;

169 i‡(
ido
 == 1)

171 i‡(
isign
 == 1)

173 
k
 = 0; k < 
l1
; k++)

175 
ac
 = 3*
k
+1;

176 
ah
 = 
k
;

178 
	`RE
(
t2
ËRE(
cc
[
ac
]) + RE(cc[ac+1]);

179 
	`IM
(
t2
ËIM(
cc
[
ac
]) + IM(cc[ac+1]);

180 
	`RE
(
c2
ËRE(
cc
[
ac
-1]Ë+ 
	`MUL_F
(RE(
t2
),
èur
);

181 
	`IM
(
c2
ËIM(
cc
[
ac
-1]Ë+ 
	`MUL_F
(IM(
t2
),
èur
);

183 
	`RE
(
ch
[
ah
]ËRE(
cc
[
ac
-1]Ë+ RE(
t2
);

184 
	`IM
(
ch
[
ah
]ËIM(
cc
[
ac
-1]Ë+ IM(
t2
);

186 
	`RE
(
c3
Ë
	`MUL_F
((RE(
cc
[
ac
]Ë- RE(cc[ac+1])), 
èui
);

187 
	`IM
(
c3
Ë
	`MUL_F
((IM(
cc
[
ac
]Ë- IM(cc[ac+1])), 
èui
);

189 
	`RE
(
ch
[
ah
+
l1
]ËRE(
c2
Ë- 
	`IM
(
c3
);

190 
	`IM
(
ch
[
ah
+
l1
]ËIM(
c2
Ë+ 
	`RE
(
c3
);

191 
	`RE
(
ch
[
ah
+2*
l1
]ËRE(
c2
Ë+ 
	`IM
(
c3
);

192 
	`IM
(
ch
[
ah
+2*
l1
]ËIM(
c2
Ë- 
	`RE
(
c3
);

195 
k
 = 0; k < 
l1
; k++)

197 
ac
 = 3*
k
+1;

198 
ah
 = 
k
;

200 
	`RE
(
t2
ËRE(
cc
[
ac
]) + RE(cc[ac+1]);

201 
	`IM
(
t2
ËIM(
cc
[
ac
]) + IM(cc[ac+1]);

202 
	`RE
(
c2
ËRE(
cc
[
ac
-1]Ë+ 
	`MUL_F
(RE(
t2
),
èur
);

203 
	`IM
(
c2
ËIM(
cc
[
ac
-1]Ë+ 
	`MUL_F
(IM(
t2
),
èur
);

205 
	`RE
(
ch
[
ah
]ËRE(
cc
[
ac
-1]Ë+ RE(
t2
);

206 
	`IM
(
ch
[
ah
]ËIM(
cc
[
ac
-1]Ë+ IM(
t2
);

208 
	`RE
(
c3
Ë
	`MUL_F
((RE(
cc
[
ac
]Ë- RE(cc[ac+1])), 
èui
);

209 
	`IM
(
c3
Ë
	`MUL_F
((IM(
cc
[
ac
]Ë- IM(cc[ac+1])), 
èui
);

211 
	`RE
(
ch
[
ah
+
l1
]ËRE(
c2
Ë+ 
	`IM
(
c3
);

212 
	`IM
(
ch
[
ah
+
l1
]ËIM(
c2
Ë- 
	`RE
(
c3
);

213 
	`RE
(
ch
[
ah
+2*
l1
]ËRE(
c2
Ë- 
	`IM
(
c3
);

214 
	`IM
(
ch
[
ah
+2*
l1
]ËIM(
c2
Ë+ 
	`RE
(
c3
);

218 i‡(
isign
 == 1)

220 
k
 = 0; k < 
l1
; k++)

222 
i
 = 0; i < 
ido
; i++)

224 
ac
 = 
i
 + (3*
k
+1)*
ido
;

225 
ah
 = 
i
 + 
k
 * 
ido
;

227 
	`RE
(
t2
ËRE(
cc
[
ac
]Ë+ RE(cc[ac+
ido
]);

228 
	`RE
(
c2
ËRE(
cc
[
ac
-
ido
]Ë+ 
	`MUL_F
(RE(
t2
),
èur
);

229 
	`IM
(
t2
ËIM(
cc
[
ac
]Ë+ IM(cc[ac+
ido
]);

230 
	`IM
(
c2
ËIM(
cc
[
ac
-
ido
]Ë+ 
	`MUL_F
(IM(
t2
),
èur
);

232 
	`RE
(
ch
[
ah
]ËRE(
cc
[
ac
-
ido
]Ë+ RE(
t2
);

233 
	`IM
(
ch
[
ah
]ËIM(
cc
[
ac
-
ido
]Ë+ IM(
t2
);

235 
	`RE
(
c3
Ë
	`MUL_F
((RE(
cc
[
ac
]Ë- RE(cc[ac+
ido
])), 
èui
);

236 
	`IM
(
c3
Ë
	`MUL_F
((IM(
cc
[
ac
]Ë- IM(cc[ac+
ido
])), 
èui
);

238 
	`RE
(
d2
ËRE(
c2
Ë- 
	`IM
(
c3
);

239 
	`IM
(
d3
ËIM(
c2
Ë- 
	`RE
(
c3
);

240 
	`RE
(
d3
ËRE(
c2
Ë+ 
	`IM
(
c3
);

241 
	`IM
(
d2
ËIM(
c2
Ë+ 
	`RE
(
c3
);

244 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+
l1
*
ido
]), &
	`RE
(ch[ah+l1*ido]),

245 
	`IM
(
d2
), 
	`RE
(d2), RE(
wa1
[
i
]), IM(wa1[i]));

246 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+2*
l1
*
ido
]), &
	`RE
(ch[ah+2*l1*ido]),

247 
	`IM
(
d3
), 
	`RE
(d3), RE(
wa2
[
i
]), IM(wa2[i]));

249 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+
l1
*
ido
]), &
	`IM
(ch[ah+l1*ido]),

250 
	`RE
(
d2
), 
	`IM
(d2), RE(
wa1
[
i
]), IM(wa1[i]));

251 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+2*
l1
*
ido
]), &
	`IM
(ch[ah+2*l1*ido]),

252 
	`RE
(
d3
), 
	`IM
(d3), RE(
wa2
[
i
]), IM(wa2[i]));

257 
k
 = 0; k < 
l1
; k++)

259 
i
 = 0; i < 
ido
; i++)

261 
ac
 = 
i
 + (3*
k
+1)*
ido
;

262 
ah
 = 
i
 + 
k
 * 
ido
;

264 
	`RE
(
t2
ËRE(
cc
[
ac
]Ë+ RE(cc[ac+
ido
]);

265 
	`RE
(
c2
ËRE(
cc
[
ac
-
ido
]Ë+ 
	`MUL_F
(RE(
t2
),
èur
);

266 
	`IM
(
t2
ËIM(
cc
[
ac
]Ë+ IM(cc[ac+
ido
]);

267 
	`IM
(
c2
ËIM(
cc
[
ac
-
ido
]Ë+ 
	`MUL_F
(IM(
t2
),
èur
);

269 
	`RE
(
ch
[
ah
]ËRE(
cc
[
ac
-
ido
]Ë+ RE(
t2
);

270 
	`IM
(
ch
[
ah
]ËIM(
cc
[
ac
-
ido
]Ë+ IM(
t2
);

272 
	`RE
(
c3
Ë
	`MUL_F
((RE(
cc
[
ac
]Ë- RE(cc[ac+
ido
])), 
èui
);

273 
	`IM
(
c3
Ë
	`MUL_F
((IM(
cc
[
ac
]Ë- IM(cc[ac+
ido
])), 
èui
);

275 
	`RE
(
d2
ËRE(
c2
Ë+ 
	`IM
(
c3
);

276 
	`IM
(
d3
ËIM(
c2
Ë+ 
	`RE
(
c3
);

277 
	`RE
(
d3
ËRE(
c2
Ë- 
	`IM
(
c3
);

278 
	`IM
(
d2
ËIM(
c2
Ë- 
	`RE
(
c3
);

281 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+
l1
*
ido
]), &
	`IM
(ch[ah+l1*ido]),

282 
	`RE
(
d2
), 
	`IM
(d2), RE(
wa1
[
i
]), IM(wa1[i]));

283 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+2*
l1
*
ido
]), &
	`IM
(ch[ah+2*l1*ido]),

284 
	`RE
(
d3
), 
	`IM
(d3), RE(
wa2
[
i
]), IM(wa2[i]));

286 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+
l1
*
ido
]), &
	`RE
(ch[ah+l1*ido]),

287 
	`IM
(
d2
), 
	`RE
(d2), RE(
wa1
[
i
]), IM(wa1[i]));

288 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+2*
l1
*
ido
]), &
	`RE
(ch[ah+2*l1*ido]),

289 
	`IM
(
d3
), 
	`RE
(d3), RE(
wa2
[
i
]), IM(wa2[i]));

295 
	}
}

298 
	$∑ssf4pos
(c⁄° 
uöt16_t
 
ido
, c⁄° uöt16_à
l1
, c⁄° 
com∂ex_t
 *
cc
,

299 
com∂ex_t
 *
ch
, c⁄° com∂ex_à*
wa1
, c⁄° com∂ex_à*
wa2
,

300 c⁄° 
com∂ex_t
 *
wa3
)

302 
uöt16_t
 
i
, 
k
, 
ac
, 
ah
;

304 i‡(
ido
 == 1)

306 
k
 = 0; k < 
l1
; k++)

308 
com∂ex_t
 
t1
, 
t2
, 
t3
, 
t4
;

310 
ac
 = 4*
k
;

311 
ah
 = 
k
;

313 
	`RE
(
t2
ËRE(
cc
[
ac
]) + RE(cc[ac+2]);

314 
	`RE
(
t1
ËRE(
cc
[
ac
]) - RE(cc[ac+2]);

315 
	`IM
(
t2
ËIM(
cc
[
ac
]) + IM(cc[ac+2]);

316 
	`IM
(
t1
ËIM(
cc
[
ac
]) - IM(cc[ac+2]);

317 
	`RE
(
t3
ËRE(
cc
[
ac
+1]) + RE(cc[ac+3]);

318 
	`IM
(
t4
Ë
	`RE
(
cc
[
ac
+1]) - RE(cc[ac+3]);

319 
	`IM
(
t3
ËIM(
cc
[
ac
+3]) + IM(cc[ac+1]);

320 
	`RE
(
t4
Ë
	`IM
(
cc
[
ac
+3]) - IM(cc[ac+1]);

322 
	`RE
(
ch
[
ah
]ËRE(
t2
Ë+ RE(
t3
);

323 
	`RE
(
ch
[
ah
+2*
l1
]ËRE(
t2
Ë- RE(
t3
);

325 
	`IM
(
ch
[
ah
]ËIM(
t2
Ë+ IM(
t3
);

326 
	`IM
(
ch
[
ah
+2*
l1
]ËIM(
t2
Ë- IM(
t3
);

328 
	`RE
(
ch
[
ah
+
l1
]ËRE(
t1
Ë+ RE(
t4
);

329 
	`RE
(
ch
[
ah
+3*
l1
]ËRE(
t1
Ë- RE(
t4
);

331 
	`IM
(
ch
[
ah
+
l1
]ËIM(
t1
Ë+ IM(
t4
);

332 
	`IM
(
ch
[
ah
+3*
l1
]ËIM(
t1
Ë- IM(
t4
);

335 
k
 = 0; k < 
l1
; k++)

337 
ac
 = 4*
k
*
ido
;

338 
ah
 = 
k
*
ido
;

340 
i
 = 0; i < 
ido
; i++)

342 
com∂ex_t
 
c2
, 
c3
, 
c4
, 
t1
, 
t2
, 
t3
, 
t4
;

344 
	`RE
(
t2
ËRE(
cc
[
ac
+
i
]Ë+ RE(cc[ac+i+2*
ido
]);

345 
	`RE
(
t1
ËRE(
cc
[
ac
+
i
]Ë- RE(cc[ac+i+2*
ido
]);

346 
	`IM
(
t2
ËIM(
cc
[
ac
+
i
]Ë+ IM(cc[ac+i+2*
ido
]);

347 
	`IM
(
t1
ËIM(
cc
[
ac
+
i
]Ë- IM(cc[ac+i+2*
ido
]);

348 
	`RE
(
t3
ËRE(
cc
[
ac
+
i
+
ido
]) + RE(cc[ac+i+3*ido]);

349 
	`IM
(
t4
Ë
	`RE
(
cc
[
ac
+
i
+
ido
]) - RE(cc[ac+i+3*ido]);

350 
	`IM
(
t3
ËIM(
cc
[
ac
+
i
+3*
ido
]) + IM(cc[ac+i+ido]);

351 
	`RE
(
t4
Ë
	`IM
(
cc
[
ac
+
i
+3*
ido
]) - IM(cc[ac+i+ido]);

353 
	`RE
(
c2
ËRE(
t1
Ë+ RE(
t4
);

354 
	`RE
(
c4
ËRE(
t1
Ë- RE(
t4
);

356 
	`IM
(
c2
ËIM(
t1
Ë+ IM(
t4
);

357 
	`IM
(
c4
ËIM(
t1
Ë- IM(
t4
);

359 
	`RE
(
ch
[
ah
+
i
]ËRE(
t2
Ë+ RE(
t3
);

360 
	`RE
(
c3
ËRE(
t2
Ë- RE(
t3
);

362 
	`IM
(
ch
[
ah
+
i
]ËIM(
t2
Ë+ IM(
t3
);

363 
	`IM
(
c3
ËIM(
t2
Ë- IM(
t3
);

366 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+
i
+
l1
*
ido
]), &
	`RE
(ch[ah+i+l1*ido]),

367 
	`IM
(
c2
), 
	`RE
(c2), RE(
wa1
[
i
]), IM(wa1[i]));

368 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+
i
+2*
l1
*
ido
]), &
	`RE
(ch[ah+i+2*l1*ido]),

369 
	`IM
(
c3
), 
	`RE
(c3), RE(
wa2
[
i
]), IM(wa2[i]));

370 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+
i
+3*
l1
*
ido
]), &
	`RE
(ch[ah+i+3*l1*ido]),

371 
	`IM
(
c4
), 
	`RE
(c4), RE(
wa3
[
i
]), IM(wa3[i]));

373 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+
i
+
l1
*
ido
]), &
	`IM
(ch[ah+i+l1*ido]),

374 
	`RE
(
c2
), 
	`IM
(c2), RE(
wa1
[
i
]), IM(wa1[i]));

375 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+
i
+2*
l1
*
ido
]), &
	`IM
(ch[ah+i+2*l1*ido]),

376 
	`RE
(
c3
), 
	`IM
(c3), RE(
wa2
[
i
]), IM(wa2[i]));

377 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+
i
+3*
l1
*
ido
]), &
	`IM
(ch[ah+i+3*l1*ido]),

378 
	`RE
(
c4
), 
	`IM
(c4), RE(
wa3
[
i
]), IM(wa3[i]));

383 
	}
}

385 
	$∑ssf4√g
(c⁄° 
uöt16_t
 
ido
, c⁄° uöt16_à
l1
, c⁄° 
com∂ex_t
 *
cc
,

386 
com∂ex_t
 *
ch
, c⁄° com∂ex_à*
wa1
, c⁄° com∂ex_à*
wa2
,

387 c⁄° 
com∂ex_t
 *
wa3
)

389 
uöt16_t
 
i
, 
k
, 
ac
, 
ah
;

391 i‡(
ido
 == 1)

393 
k
 = 0; k < 
l1
; k++)

395 
com∂ex_t
 
t1
, 
t2
, 
t3
, 
t4
;

397 
ac
 = 4*
k
;

398 
ah
 = 
k
;

400 
	`RE
(
t2
ËRE(
cc
[
ac
]) + RE(cc[ac+2]);

401 
	`RE
(
t1
ËRE(
cc
[
ac
]) - RE(cc[ac+2]);

402 
	`IM
(
t2
ËIM(
cc
[
ac
]) + IM(cc[ac+2]);

403 
	`IM
(
t1
ËIM(
cc
[
ac
]) - IM(cc[ac+2]);

404 
	`RE
(
t3
ËRE(
cc
[
ac
+1]) + RE(cc[ac+3]);

405 
	`IM
(
t4
Ë
	`RE
(
cc
[
ac
+1]) - RE(cc[ac+3]);

406 
	`IM
(
t3
ËIM(
cc
[
ac
+3]) + IM(cc[ac+1]);

407 
	`RE
(
t4
Ë
	`IM
(
cc
[
ac
+3]) - IM(cc[ac+1]);

409 
	`RE
(
ch
[
ah
]ËRE(
t2
Ë+ RE(
t3
);

410 
	`RE
(
ch
[
ah
+2*
l1
]ËRE(
t2
Ë- RE(
t3
);

412 
	`IM
(
ch
[
ah
]ËIM(
t2
Ë+ IM(
t3
);

413 
	`IM
(
ch
[
ah
+2*
l1
]ËIM(
t2
Ë- IM(
t3
);

415 
	`RE
(
ch
[
ah
+
l1
]ËRE(
t1
Ë- RE(
t4
);

416 
	`RE
(
ch
[
ah
+3*
l1
]ËRE(
t1
Ë+ RE(
t4
);

418 
	`IM
(
ch
[
ah
+
l1
]ËIM(
t1
Ë- IM(
t4
);

419 
	`IM
(
ch
[
ah
+3*
l1
]ËIM(
t1
Ë+ IM(
t4
);

422 
k
 = 0; k < 
l1
; k++)

424 
ac
 = 4*
k
*
ido
;

425 
ah
 = 
k
*
ido
;

427 
i
 = 0; i < 
ido
; i++)

429 
com∂ex_t
 
c2
, 
c3
, 
c4
, 
t1
, 
t2
, 
t3
, 
t4
;

431 
	`RE
(
t2
ËRE(
cc
[
ac
+
i
]Ë+ RE(cc[ac+i+2*
ido
]);

432 
	`RE
(
t1
ËRE(
cc
[
ac
+
i
]Ë- RE(cc[ac+i+2*
ido
]);

433 
	`IM
(
t2
ËIM(
cc
[
ac
+
i
]Ë+ IM(cc[ac+i+2*
ido
]);

434 
	`IM
(
t1
ËIM(
cc
[
ac
+
i
]Ë- IM(cc[ac+i+2*
ido
]);

435 
	`RE
(
t3
ËRE(
cc
[
ac
+
i
+
ido
]) + RE(cc[ac+i+3*ido]);

436 
	`IM
(
t4
Ë
	`RE
(
cc
[
ac
+
i
+
ido
]) - RE(cc[ac+i+3*ido]);

437 
	`IM
(
t3
ËIM(
cc
[
ac
+
i
+3*
ido
]) + IM(cc[ac+i+ido]);

438 
	`RE
(
t4
Ë
	`IM
(
cc
[
ac
+
i
+3*
ido
]) - IM(cc[ac+i+ido]);

440 
	`RE
(
c2
ËRE(
t1
Ë- RE(
t4
);

441 
	`RE
(
c4
ËRE(
t1
Ë+ RE(
t4
);

443 
	`IM
(
c2
ËIM(
t1
Ë- IM(
t4
);

444 
	`IM
(
c4
ËIM(
t1
Ë+ IM(
t4
);

446 
	`RE
(
ch
[
ah
+
i
]ËRE(
t2
Ë+ RE(
t3
);

447 
	`RE
(
c3
ËRE(
t2
Ë- RE(
t3
);

449 
	`IM
(
ch
[
ah
+
i
]ËIM(
t2
Ë+ IM(
t3
);

450 
	`IM
(
c3
ËIM(
t2
Ë- IM(
t3
);

453 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+
i
+
l1
*
ido
]), &
	`IM
(ch[ah+i+l1*ido]),

454 
	`RE
(
c2
), 
	`IM
(c2), RE(
wa1
[
i
]), IM(wa1[i]));

455 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+
i
+2*
l1
*
ido
]), &
	`IM
(ch[ah+i+2*l1*ido]),

456 
	`RE
(
c3
), 
	`IM
(c3), RE(
wa2
[
i
]), IM(wa2[i]));

457 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+
i
+3*
l1
*
ido
]), &
	`IM
(ch[ah+i+3*l1*ido]),

458 
	`RE
(
c4
), 
	`IM
(c4), RE(
wa3
[
i
]), IM(wa3[i]));

460 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+
i
+
l1
*
ido
]), &
	`RE
(ch[ah+i+l1*ido]),

461 
	`IM
(
c2
), 
	`RE
(c2), RE(
wa1
[
i
]), IM(wa1[i]));

462 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+
i
+2*
l1
*
ido
]), &
	`RE
(ch[ah+i+2*l1*ido]),

463 
	`IM
(
c3
), 
	`RE
(c3), RE(
wa2
[
i
]), IM(wa2[i]));

464 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+
i
+3*
l1
*
ido
]), &
	`RE
(ch[ah+i+3*l1*ido]),

465 
	`IM
(
c4
), 
	`RE
(c4), RE(
wa3
[
i
]), IM(wa3[i]));

470 
	}
}

472 
	$∑ssf5
(c⁄° 
uöt16_t
 
ido
, c⁄° uöt16_à
l1
, c⁄° 
com∂ex_t
 *
cc
,

473 
com∂ex_t
 *
ch
, c⁄° com∂ex_à*
wa1
, c⁄° com∂ex_à*
wa2
, c⁄° com∂ex_à*
wa3
,

474 c⁄° 
com∂ex_t
 *
wa4
, c⁄° 
öt8_t
 
isign
)

476 
ªÆ_t
 
å11
 = 
	`FRAC_CONST
(0.309016994374947);

477 
ªÆ_t
 
ti11
 = 
	`FRAC_CONST
(0.951056516295154);

478 
ªÆ_t
 
å12
 = 
	`FRAC_CONST
(-0.809016994374947);

479 
ªÆ_t
 
ti12
 = 
	`FRAC_CONST
(0.587785252292473);

480 
uöt16_t
 
i
, 
k
, 
ac
, 
ah
;

481 
com∂ex_t
 
c2
, 
c3
, 
c4
, 
c5
, 
d3
, 
d4
, 
d5
, 
d2
, 
t2
, 
t3
, 
t4
, 
t5
;

483 i‡(
ido
 == 1)

485 i‡(
isign
 == 1)

487 
k
 = 0; k < 
l1
; k++)

489 
ac
 = 5*
k
 + 1;

490 
ah
 = 
k
;

492 
	`RE
(
t2
ËRE(
cc
[
ac
]) + RE(cc[ac+3]);

493 
	`IM
(
t2
ËIM(
cc
[
ac
]) + IM(cc[ac+3]);

494 
	`RE
(
t3
ËRE(
cc
[
ac
+1]) + RE(cc[ac+2]);

495 
	`IM
(
t3
ËIM(
cc
[
ac
+1]) + IM(cc[ac+2]);

496 
	`RE
(
t4
ËRE(
cc
[
ac
+1]) - RE(cc[ac+2]);

497 
	`IM
(
t4
ËIM(
cc
[
ac
+1]) - IM(cc[ac+2]);

498 
	`RE
(
t5
ËRE(
cc
[
ac
]) - RE(cc[ac+3]);

499 
	`IM
(
t5
ËIM(
cc
[
ac
]) - IM(cc[ac+3]);

501 
	`RE
(
ch
[
ah
]ËRE(
cc
[
ac
-1]Ë+ RE(
t2
Ë+ RE(
t3
);

502 
	`IM
(
ch
[
ah
]ËIM(
cc
[
ac
-1]Ë+ IM(
t2
Ë+ IM(
t3
);

504 
	`RE
(
c2
ËRE(
cc
[
ac
-1]Ë+ 
	`MUL_F
(RE(
t2
),
å11
Ë+ MUL_F(RE(
t3
),
å12
);

505 
	`IM
(
c2
ËIM(
cc
[
ac
-1]Ë+ 
	`MUL_F
(IM(
t2
),
å11
Ë+ MUL_F(IM(
t3
),
å12
);

506 
	`RE
(
c3
ËRE(
cc
[
ac
-1]Ë+ 
	`MUL_F
(RE(
t2
),
å12
Ë+ MUL_F(RE(
t3
),
å11
);

507 
	`IM
(
c3
ËIM(
cc
[
ac
-1]Ë+ 
	`MUL_F
(IM(
t2
),
å12
Ë+ MUL_F(IM(
t3
),
å11
);

509 
	`Com∂exMu…
(&
	`RE
(
c5
), &RE(
c4
),

510 
ti11
, 
ti12
, 
	`RE
(
t5
), RE(
t4
));

511 
	`Com∂exMu…
(&
	`IM
(
c5
), &IM(
c4
),

512 
ti11
, 
ti12
, 
	`IM
(
t5
), IM(
t4
));

514 
	`RE
(
ch
[
ah
+
l1
]ËRE(
c2
Ë- 
	`IM
(
c5
);

515 
	`IM
(
ch
[
ah
+
l1
]ËIM(
c2
Ë+ 
	`RE
(
c5
);

516 
	`RE
(
ch
[
ah
+2*
l1
]ËRE(
c3
Ë- 
	`IM
(
c4
);

517 
	`IM
(
ch
[
ah
+2*
l1
]ËIM(
c3
Ë+ 
	`RE
(
c4
);

518 
	`RE
(
ch
[
ah
+3*
l1
]ËRE(
c3
Ë+ 
	`IM
(
c4
);

519 
	`IM
(
ch
[
ah
+3*
l1
]ËIM(
c3
Ë- 
	`RE
(
c4
);

520 
	`RE
(
ch
[
ah
+4*
l1
]ËRE(
c2
Ë+ 
	`IM
(
c5
);

521 
	`IM
(
ch
[
ah
+4*
l1
]ËIM(
c2
Ë- 
	`RE
(
c5
);

524 
k
 = 0; k < 
l1
; k++)

526 
ac
 = 5*
k
 + 1;

527 
ah
 = 
k
;

529 
	`RE
(
t2
ËRE(
cc
[
ac
]) + RE(cc[ac+3]);

530 
	`IM
(
t2
ËIM(
cc
[
ac
]) + IM(cc[ac+3]);

531 
	`RE
(
t3
ËRE(
cc
[
ac
+1]) + RE(cc[ac+2]);

532 
	`IM
(
t3
ËIM(
cc
[
ac
+1]) + IM(cc[ac+2]);

533 
	`RE
(
t4
ËRE(
cc
[
ac
+1]) - RE(cc[ac+2]);

534 
	`IM
(
t4
ËIM(
cc
[
ac
+1]) - IM(cc[ac+2]);

535 
	`RE
(
t5
ËRE(
cc
[
ac
]) - RE(cc[ac+3]);

536 
	`IM
(
t5
ËIM(
cc
[
ac
]) - IM(cc[ac+3]);

538 
	`RE
(
ch
[
ah
]ËRE(
cc
[
ac
-1]Ë+ RE(
t2
Ë+ RE(
t3
);

539 
	`IM
(
ch
[
ah
]ËIM(
cc
[
ac
-1]Ë+ IM(
t2
Ë+ IM(
t3
);

541 
	`RE
(
c2
ËRE(
cc
[
ac
-1]Ë+ 
	`MUL_F
(RE(
t2
),
å11
Ë+ MUL_F(RE(
t3
),
å12
);

542 
	`IM
(
c2
ËIM(
cc
[
ac
-1]Ë+ 
	`MUL_F
(IM(
t2
),
å11
Ë+ MUL_F(IM(
t3
),
å12
);

543 
	`RE
(
c3
ËRE(
cc
[
ac
-1]Ë+ 
	`MUL_F
(RE(
t2
),
å12
Ë+ MUL_F(RE(
t3
),
å11
);

544 
	`IM
(
c3
ËIM(
cc
[
ac
-1]Ë+ 
	`MUL_F
(IM(
t2
),
å12
Ë+ MUL_F(IM(
t3
),
å11
);

546 
	`Com∂exMu…
(&
	`RE
(
c4
), &RE(
c5
),

547 
ti12
, 
ti11
, 
	`RE
(
t5
), RE(
t4
));

548 
	`Com∂exMu…
(&
	`IM
(
c4
), &IM(
c5
),

549 
ti12
,Åi12, 
	`IM
(
t5
), IM(
t4
));

551 
	`RE
(
ch
[
ah
+
l1
]ËRE(
c2
Ë+ 
	`IM
(
c5
);

552 
	`IM
(
ch
[
ah
+
l1
]ËIM(
c2
Ë- 
	`RE
(
c5
);

553 
	`RE
(
ch
[
ah
+2*
l1
]ËRE(
c3
Ë+ 
	`IM
(
c4
);

554 
	`IM
(
ch
[
ah
+2*
l1
]ËIM(
c3
Ë- 
	`RE
(
c4
);

555 
	`RE
(
ch
[
ah
+3*
l1
]ËRE(
c3
Ë- 
	`IM
(
c4
);

556 
	`IM
(
ch
[
ah
+3*
l1
]ËIM(
c3
Ë+ 
	`RE
(
c4
);

557 
	`RE
(
ch
[
ah
+4*
l1
]ËRE(
c2
Ë- 
	`IM
(
c5
);

558 
	`IM
(
ch
[
ah
+4*
l1
]ËIM(
c2
Ë+ 
	`RE
(
c5
);

562 i‡(
isign
 == 1)

564 
k
 = 0; k < 
l1
; k++)

566 
i
 = 0; i < 
ido
; i++)

568 
ac
 = 
i
 + (
k
*5 + 1Ë* 
ido
;

569 
ah
 = 
i
 + 
k
 * 
ido
;

571 
	`RE
(
t2
ËRE(
cc
[
ac
]Ë+ RE(cc[ac+3*
ido
]);

572 
	`IM
(
t2
ËIM(
cc
[
ac
]Ë+ IM(cc[ac+3*
ido
]);

573 
	`RE
(
t3
ËRE(
cc
[
ac
+
ido
]) + RE(cc[ac+2*ido]);

574 
	`IM
(
t3
ËIM(
cc
[
ac
+
ido
]) + IM(cc[ac+2*ido]);

575 
	`RE
(
t4
ËRE(
cc
[
ac
+
ido
]) - RE(cc[ac+2*ido]);

576 
	`IM
(
t4
ËIM(
cc
[
ac
+
ido
]) - IM(cc[ac+2*ido]);

577 
	`RE
(
t5
ËRE(
cc
[
ac
]Ë- RE(cc[ac+3*
ido
]);

578 
	`IM
(
t5
ËIM(
cc
[
ac
]Ë- IM(cc[ac+3*
ido
]);

580 
	`RE
(
ch
[
ah
]ËRE(
cc
[
ac
-
ido
]Ë+ RE(
t2
Ë+ RE(
t3
);

581 
	`IM
(
ch
[
ah
]ËIM(
cc
[
ac
-
ido
]Ë+ IM(
t2
Ë+ IM(
t3
);

583 
	`RE
(
c2
ËRE(
cc
[
ac
-
ido
]Ë+ 
	`MUL_F
(RE(
t2
),
å11
Ë+ MUL_F(RE(
t3
),
å12
);

584 
	`IM
(
c2
ËIM(
cc
[
ac
-
ido
]Ë+ 
	`MUL_F
(IM(
t2
),
å11
Ë+ MUL_F(IM(
t3
),
å12
);

585 
	`RE
(
c3
ËRE(
cc
[
ac
-
ido
]Ë+ 
	`MUL_F
(RE(
t2
),
å12
Ë+ MUL_F(RE(
t3
),
å11
);

586 
	`IM
(
c3
ËIM(
cc
[
ac
-
ido
]Ë+ 
	`MUL_F
(IM(
t2
),
å12
Ë+ MUL_F(IM(
t3
),
å11
);

588 
	`Com∂exMu…
(&
	`RE
(
c5
), &RE(
c4
),

589 
ti11
, 
ti12
, 
	`RE
(
t5
), RE(
t4
));

590 
	`Com∂exMu…
(&
	`IM
(
c5
), &IM(
c4
),

591 
ti11
, 
ti12
, 
	`IM
(
t5
), IM(
t4
));

593 
	`IM
(
d2
ËIM(
c2
Ë+ 
	`RE
(
c5
);

594 
	`IM
(
d3
ËIM(
c3
Ë+ 
	`RE
(
c4
);

595 
	`RE
(
d4
ËRE(
c3
Ë+ 
	`IM
(
c4
);

596 
	`RE
(
d5
ËRE(
c2
Ë+ 
	`IM
(
c5
);

597 
	`RE
(
d2
ËRE(
c2
Ë- 
	`IM
(
c5
);

598 
	`IM
(
d5
ËIM(
c2
Ë- 
	`RE
(
c5
);

599 
	`RE
(
d3
ËRE(
c3
Ë- 
	`IM
(
c4
);

600 
	`IM
(
d4
ËIM(
c3
Ë- 
	`RE
(
c4
);

603 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+
l1
*
ido
]), &
	`RE
(ch[ah+l1*ido]),

604 
	`IM
(
d2
), 
	`RE
(d2), RE(
wa1
[
i
]), IM(wa1[i]));

605 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+2*
l1
*
ido
]), &
	`RE
(ch[ah+2*l1*ido]),

606 
	`IM
(
d3
), 
	`RE
(d3), RE(
wa2
[
i
]), IM(wa2[i]));

607 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+3*
l1
*
ido
]), &
	`RE
(ch[ah+3*l1*ido]),

608 
	`IM
(
d4
), 
	`RE
(d4), RE(
wa3
[
i
]), IM(wa3[i]));

609 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+4*
l1
*
ido
]), &
	`RE
(ch[ah+4*l1*ido]),

610 
	`IM
(
d5
), 
	`RE
(d5), RE(
wa4
[
i
]), IM(wa4[i]));

612 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+
l1
*
ido
]), &
	`IM
(ch[ah+l1*ido]),

613 
	`RE
(
d2
), 
	`IM
(d2), RE(
wa1
[
i
]), IM(wa1[i]));

614 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+2*
l1
*
ido
]), &
	`IM
(ch[ah+2*l1*ido]),

615 
	`RE
(
d3
), 
	`IM
(d3), RE(
wa2
[
i
]), IM(wa2[i]));

616 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+3*
l1
*
ido
]), &
	`IM
(ch[ah+3*l1*ido]),

617 
	`RE
(
d4
), 
	`IM
(d4), RE(
wa3
[
i
]), IM(wa3[i]));

618 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+4*
l1
*
ido
]), &
	`IM
(ch[ah+4*l1*ido]),

619 
	`RE
(
d5
), 
	`IM
(d5), RE(
wa4
[
i
]), IM(wa4[i]));

624 
k
 = 0; k < 
l1
; k++)

626 
i
 = 0; i < 
ido
; i++)

628 
ac
 = 
i
 + (
k
*5 + 1Ë* 
ido
;

629 
ah
 = 
i
 + 
k
 * 
ido
;

631 
	`RE
(
t2
ËRE(
cc
[
ac
]Ë+ RE(cc[ac+3*
ido
]);

632 
	`IM
(
t2
ËIM(
cc
[
ac
]Ë+ IM(cc[ac+3*
ido
]);

633 
	`RE
(
t3
ËRE(
cc
[
ac
+
ido
]) + RE(cc[ac+2*ido]);

634 
	`IM
(
t3
ËIM(
cc
[
ac
+
ido
]) + IM(cc[ac+2*ido]);

635 
	`RE
(
t4
ËRE(
cc
[
ac
+
ido
]) - RE(cc[ac+2*ido]);

636 
	`IM
(
t4
ËIM(
cc
[
ac
+
ido
]) - IM(cc[ac+2*ido]);

637 
	`RE
(
t5
ËRE(
cc
[
ac
]Ë- RE(cc[ac+3*
ido
]);

638 
	`IM
(
t5
ËIM(
cc
[
ac
]Ë- IM(cc[ac+3*
ido
]);

640 
	`RE
(
ch
[
ah
]ËRE(
cc
[
ac
-
ido
]Ë+ RE(
t2
Ë+ RE(
t3
);

641 
	`IM
(
ch
[
ah
]ËIM(
cc
[
ac
-
ido
]Ë+ IM(
t2
Ë+ IM(
t3
);

643 
	`RE
(
c2
ËRE(
cc
[
ac
-
ido
]Ë+ 
	`MUL_F
(RE(
t2
),
å11
Ë+ MUL_F(RE(
t3
),
å12
);

644 
	`IM
(
c2
ËIM(
cc
[
ac
-
ido
]Ë+ 
	`MUL_F
(IM(
t2
),
å11
Ë+ MUL_F(IM(
t3
),
å12
);

645 
	`RE
(
c3
ËRE(
cc
[
ac
-
ido
]Ë+ 
	`MUL_F
(RE(
t2
),
å12
Ë+ MUL_F(RE(
t3
),
å11
);

646 
	`IM
(
c3
ËIM(
cc
[
ac
-
ido
]Ë+ 
	`MUL_F
(IM(
t2
),
å12
Ë+ MUL_F(IM(
t3
),
å11
);

648 
	`Com∂exMu…
(&
	`RE
(
c4
), &RE(
c5
),

649 
ti12
, 
ti11
, 
	`RE
(
t5
), RE(
t4
));

650 
	`Com∂exMu…
(&
	`IM
(
c4
), &IM(
c5
),

651 
ti12
,Åi12, 
	`IM
(
t5
), IM(
t4
));

653 
	`IM
(
d2
ËIM(
c2
Ë- 
	`RE
(
c5
);

654 
	`IM
(
d3
ËIM(
c3
Ë- 
	`RE
(
c4
);

655 
	`RE
(
d4
ËRE(
c3
Ë- 
	`IM
(
c4
);

656 
	`RE
(
d5
ËRE(
c2
Ë- 
	`IM
(
c5
);

657 
	`RE
(
d2
ËRE(
c2
Ë+ 
	`IM
(
c5
);

658 
	`IM
(
d5
ËIM(
c2
Ë+ 
	`RE
(
c5
);

659 
	`RE
(
d3
ËRE(
c3
Ë+ 
	`IM
(
c4
);

660 
	`IM
(
d4
ËIM(
c3
Ë+ 
	`RE
(
c4
);

663 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+
l1
*
ido
]), &
	`IM
(ch[ah+l1*ido]),

664 
	`RE
(
d2
), 
	`IM
(d2), RE(
wa1
[
i
]), IM(wa1[i]));

665 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+2*
l1
*
ido
]), &
	`IM
(ch[ah+2*l1*ido]),

666 
	`RE
(
d3
), 
	`IM
(d3), RE(
wa2
[
i
]), IM(wa2[i]));

667 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+3*
l1
*
ido
]), &
	`IM
(ch[ah+3*l1*ido]),

668 
	`RE
(
d4
), 
	`IM
(d4), RE(
wa3
[
i
]), IM(wa3[i]));

669 
	`Com∂exMu…
(&
	`RE
(
ch
[
ah
+4*
l1
*
ido
]), &
	`IM
(ch[ah+4*l1*ido]),

670 
	`RE
(
d5
), 
	`IM
(d5), RE(
wa4
[
i
]), IM(wa4[i]));

672 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+
l1
*
ido
]), &
	`RE
(ch[ah+l1*ido]),

673 
	`IM
(
d2
), 
	`RE
(d2), RE(
wa1
[
i
]), IM(wa1[i]));

674 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+2*
l1
*
ido
]), &
	`RE
(ch[ah+2*l1*ido]),

675 
	`IM
(
d3
), 
	`RE
(d3), RE(
wa2
[
i
]), IM(wa2[i]));

676 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+3*
l1
*
ido
]), &
	`RE
(ch[ah+3*l1*ido]),

677 
	`IM
(
d4
), 
	`RE
(d4), RE(
wa3
[
i
]), IM(wa3[i]));

678 
	`Com∂exMu…
(&
	`IM
(
ch
[
ah
+4*
l1
*
ido
]), &
	`RE
(ch[ah+4*l1*ido]),

679 
	`IM
(
d5
), 
	`RE
(d5), RE(
wa4
[
i
]), IM(wa4[i]));

685 
	}
}

692 
INLINE
 
	$cf·f1pos
(
uöt16_t
 
n
, 
com∂ex_t
 *
c
, com∂ex_à*
ch
,

693 c⁄° 
uöt16_t
 *
iÁc
, c⁄° 
com∂ex_t
 *
wa
,

694 c⁄° 
öt8_t
 
isign
)

696 
uöt16_t
 
i
;

697 
uöt16_t
 
k1
, 
l1
, 
l2
;

698 
uöt16_t
 
«
, 
nf
, 
ù
, 
iw
, 
ix2
, 
ix3
, 
ix4
, 
ido
, 
idl1
;

700 
nf
 = 
iÁc
[1];

701 
«
 = 0;

702 
l1
 = 1;

703 
iw
 = 0;

705 
k1
 = 2; k1 <
nf
+1; k1++)

707 
ù
 = 
iÁc
[
k1
];

708 
l2
 = 
ù
*
l1
;

709 
ido
 = 
n
 / 
l2
;

710 
idl1
 = 
ido
*
l1
;

712 
ù
)

715 
ix2
 = 
iw
 + 
ido
;

716 
ix3
 = 
ix2
 + 
ido
;

718 i‡(
«
 == 0)

719 
	`∑ssf4pos
((c⁄° 
uöt16_t
)
ido
, (c⁄° uöt16_t)
l1
, (c⁄° 
com∂ex_t
*)
c
, 
ch
, &
wa
[
iw
], &wa[
ix2
], &wa[
ix3
]);

721 
	`∑ssf4pos
((c⁄° 
uöt16_t
)
ido
, (c⁄° uöt16_t)
l1
, (c⁄° 
com∂ex_t
*)
ch
, 
c
, &
wa
[
iw
], &wa[
ix2
], &wa[
ix3
]);

723 
«
 = 1 -Ça;

726 i‡(
«
 == 0)

727 
	`∑ssf2pos
((c⁄° 
uöt16_t
)
ido
, (c⁄° uöt16_t)
l1
, (c⁄° 
com∂ex_t
*)
c
, 
ch
, &
wa
[
iw
]);

729 
	`∑ssf2pos
((c⁄° 
uöt16_t
)
ido
, (c⁄° uöt16_t)
l1
, (c⁄° 
com∂ex_t
*)
ch
, 
c
, &
wa
[
iw
]);

731 
«
 = 1 -Ça;

734 
ix2
 = 
iw
 + 
ido
;

736 i‡(
«
 == 0)

737 
	`∑ssf3
((c⁄° 
uöt16_t
)
ido
, (c⁄° uöt16_t)
l1
, (c⁄° 
com∂ex_t
*)
c
, 
ch
, &
wa
[
iw
], &wa[
ix2
], 
isign
);

739 
	`∑ssf3
((c⁄° 
uöt16_t
)
ido
, (c⁄° uöt16_t)
l1
, (c⁄° 
com∂ex_t
*)
ch
, 
c
, &
wa
[
iw
], &wa[
ix2
], 
isign
);

741 
«
 = 1 -Ça;

744 
ix2
 = 
iw
 + 
ido
;

745 
ix3
 = 
ix2
 + 
ido
;

746 
ix4
 = 
ix3
 + 
ido
;

748 i‡(
«
 == 0)

749 
	`∑ssf5
((c⁄° 
uöt16_t
)
ido
, (c⁄° uöt16_t)
l1
, (c⁄° 
com∂ex_t
*)
c
, 
ch
, &
wa
[
iw
], &wa[
ix2
], &wa[
ix3
], &wa[
ix4
], 
isign
);

751 
	`∑ssf5
((c⁄° 
uöt16_t
)
ido
, (c⁄° uöt16_t)
l1
, (c⁄° 
com∂ex_t
*)
ch
, 
c
, &
wa
[
iw
], &wa[
ix2
], &wa[
ix3
], &wa[
ix4
], 
isign
);

753 
«
 = 1 -Ça;

757 
l1
 = 
l2
;

758 
iw
 +(
ù
-1Ë* 
ido
;

761 i‡(
«
 == 0)

764 
i
 = 0; i < 
n
; i++)

766 
	`RE
(
c
[
i
]ËRE(
ch
[i]);

767 
	`IM
(
c
[
i
]ËIM(
ch
[i]);

769 
	}
}

771 
INLINE
 
	$cf·f1√g
(
uöt16_t
 
n
, 
com∂ex_t
 *
c
, com∂ex_à*
ch
,

772 c⁄° 
uöt16_t
 *
iÁc
, c⁄° 
com∂ex_t
 *
wa
,

773 c⁄° 
öt8_t
 
isign
)

775 
uöt16_t
 
i
;

776 
uöt16_t
 
k1
, 
l1
, 
l2
;

777 
uöt16_t
 
«
, 
nf
, 
ù
, 
iw
, 
ix2
, 
ix3
, 
ix4
, 
ido
, 
idl1
;

779 
nf
 = 
iÁc
[1];

780 
«
 = 0;

781 
l1
 = 1;

782 
iw
 = 0;

784 
k1
 = 2; k1 <
nf
+1; k1++)

786 
ù
 = 
iÁc
[
k1
];

787 
l2
 = 
ù
*
l1
;

788 
ido
 = 
n
 / 
l2
;

789 
idl1
 = 
ido
*
l1
;

791 
ù
)

794 
ix2
 = 
iw
 + 
ido
;

795 
ix3
 = 
ix2
 + 
ido
;

797 i‡(
«
 == 0)

798 
	`∑ssf4√g
((c⁄° 
uöt16_t
)
ido
, (c⁄° uöt16_t)
l1
, (c⁄° 
com∂ex_t
*)
c
, 
ch
, &
wa
[
iw
], &wa[
ix2
], &wa[
ix3
]);

800 
	`∑ssf4√g
((c⁄° 
uöt16_t
)
ido
, (c⁄° uöt16_t)
l1
, (c⁄° 
com∂ex_t
*)
ch
, 
c
, &
wa
[
iw
], &wa[
ix2
], &wa[
ix3
]);

802 
«
 = 1 -Ça;

805 i‡(
«
 == 0)

806 
	`∑ssf2√g
((c⁄° 
uöt16_t
)
ido
, (c⁄° uöt16_t)
l1
, (c⁄° 
com∂ex_t
*)
c
, 
ch
, &
wa
[
iw
]);

808 
	`∑ssf2√g
((c⁄° 
uöt16_t
)
ido
, (c⁄° uöt16_t)
l1
, (c⁄° 
com∂ex_t
*)
ch
, 
c
, &
wa
[
iw
]);

810 
«
 = 1 -Ça;

813 
ix2
 = 
iw
 + 
ido
;

815 i‡(
«
 == 0)

816 
	`∑ssf3
((c⁄° 
uöt16_t
)
ido
, (c⁄° uöt16_t)
l1
, (c⁄° 
com∂ex_t
*)
c
, 
ch
, &
wa
[
iw
], &wa[
ix2
], 
isign
);

818 
	`∑ssf3
((c⁄° 
uöt16_t
)
ido
, (c⁄° uöt16_t)
l1
, (c⁄° 
com∂ex_t
*)
ch
, 
c
, &
wa
[
iw
], &wa[
ix2
], 
isign
);

820 
«
 = 1 -Ça;

823 
ix2
 = 
iw
 + 
ido
;

824 
ix3
 = 
ix2
 + 
ido
;

825 
ix4
 = 
ix3
 + 
ido
;

827 i‡(
«
 == 0)

828 
	`∑ssf5
((c⁄° 
uöt16_t
)
ido
, (c⁄° uöt16_t)
l1
, (c⁄° 
com∂ex_t
*)
c
, 
ch
, &
wa
[
iw
], &wa[
ix2
], &wa[
ix3
], &wa[
ix4
], 
isign
);

830 
	`∑ssf5
((c⁄° 
uöt16_t
)
ido
, (c⁄° uöt16_t)
l1
, (c⁄° 
com∂ex_t
*)
ch
, 
c
, &
wa
[
iw
], &wa[
ix2
], &wa[
ix3
], &wa[
ix4
], 
isign
);

832 
«
 = 1 -Ça;

836 
l1
 = 
l2
;

837 
iw
 +(
ù
-1Ë* 
ido
;

840 i‡(
«
 == 0)

843 
i
 = 0; i < 
n
; i++)

845 
	`RE
(
c
[
i
]ËRE(
ch
[i]);

846 
	`IM
(
c
[
i
]ËIM(
ch
[i]);

848 
	}
}

850 
	$cf·f
(
cf·_öfo
 *
cf·
, 
com∂ex_t
 *
c
)

852 
	`cf·f1√g
(
cf·
->
n
, 
c
, cf·->
w‹k
, (c⁄° 
uöt16_t
*)cf·->
iÁc
, (c⁄° 
com∂ex_t
*)cf·->
èb
, -1);

853 
	}
}

855 
	$cf·b
(
cf·_öfo
 *
cf·
, 
com∂ex_t
 *
c
)

857 
	`cf·f1pos
(
cf·
->
n
, 
c
, cf·->
w‹k
, (c⁄° 
uöt16_t
*)cf·->
iÁc
, (c⁄° 
com∂ex_t
*)cf·->
èb
, +1);

858 
	}
}

860 
	$cf·i1
(
uöt16_t
 
n
, 
com∂ex_t
 *
wa
, uöt16_à*
iÁc
)

862 
uöt16_t
 
¡ryh
[4] = {3, 4, 2, 5};

863 #i‚de‡
FIXED_POINT


864 
ªÆ_t
 
¨g
, 
¨gh
, 
¨gld
, 
fi
;

865 
uöt16_t
 
ido
, 
ùm
;

866 
uöt16_t
 
i1
, 
k1
, 
l1
, 
l2
;

867 
uöt16_t
 
ld
, 
ii
, 
ù
;

869 
uöt16_t
 
¡ry
 = 0, 
i
, 
j
;

870 
uöt16_t
 
ib
;

871 
uöt16_t
 
nf
, 
∆
, 
nq
, 
ƒ
;

873 
∆
 = 
n
;

874 
nf
 = 0;

875 
j
 = 0;

877 
°¨éo›
:

878 
j
++;

880 i‡(
j
 <= 4)

881 
¡ry
 = 
¡ryh
[
j
-1];

883 
¡ry
 += 2;

887 
nq
 = 
∆
 / 
¡ry
;

888 
ƒ
 = 
∆
 - 
¡ry
*
nq
;

890 i‡(
ƒ
 != 0)

891 
°¨éo›
;

893 
nf
++;

894 
iÁc
[
nf
+1] = 
¡ry
;

895 
∆
 = 
nq
;

897 i‡(
¡ry
 =2 && 
nf
 != 1)

899 
i
 = 2; i <
nf
; i++)

901 
ib
 = 
nf
 - 
i
 + 2;

902 
iÁc
[
ib
+1] = ifac[ib];

904 
iÁc
[2] = 2;

906 } 
∆
 != 1);

908 
iÁc
[0] = 
n
;

909 
iÁc
[1] = 
nf
;

911 #i‚de‡
FIXED_POINT


912 
¨gh
 = (
ªÆ_t
)2.0*‘ól_t)
M_PI
 / (ªÆ_t)
n
;

913 
i
 = 0;

914 
l1
 = 1;

916 
k1
 = 1; k1 <
nf
; k1++)

918 
ù
 = 
iÁc
[
k1
+1];

919 
ld
 = 0;

920 
l2
 = 
l1
*
ù
;

921 
ido
 = 
n
 / 
l2
;

922 
ùm
 = 
ù
 - 1;

924 
j
 = 0; j < 
ùm
; j++)

926 
i1
 = 
i
;

927 
	`RE
(
wa
[
i
]) = 1.0;

928 
	`IM
(
wa
[
i
]) = 0.0;

929 
ld
 +
l1
;

930 
fi
 = 0;

931 
¨gld
 = 
ld
*
¨gh
;

933 
ii
 = 0; iò< 
ido
; ii++)

935 
i
++;

936 
fi
++;

937 
¨g
 = 
fi
 * 
¨gld
;

938 
	`RE
(
wa
[
i
]Ë(
ªÆ_t
)
	`cos
(
¨g
);

940 
	`IM
(
wa
[
i
]Ë(
ªÆ_t
)
	`sö
(
¨g
);

942 
	`IM
(
wa
[
i
]Ë(
ªÆ_t
)-
	`sö
(
¨g
);

946 i‡(
ù
 > 5)

948 
	`RE
(
wa
[
i1
]ËRE(wa[
i
]);

949 
	`IM
(
wa
[
i1
]ËIM(wa[
i
]);

952 
l1
 = 
l2
;

955 
	}
}

957 
cf·_öfo
 *
	$cf·i
(
uöt16_t
 
n
)

959 
cf·_öfo
 *
cf·
 = (cf·_öfo*)
	`Áad_mÆloc
((cfft_info));

961 
cf·
->
n
 =Ç;

962 
cf·
->
w‹k
 = (
com∂ex_t
*)
	`Áad_mÆloc
(
n
*(complex_t));

964 #i‚de‡
FIXED_POINT


965 
cf·
->
èb
 = (
com∂ex_t
*)
	`Áad_mÆloc
(
n
*(complex_t));

967 
	`cf·i1
(
n
, 
cf·
->
èb
, cf·->
iÁc
);

969 
	`cf·i1
(
n
, 
NULL
, 
cf·
->
iÁc
);

971 
n
)

973 64: 
cf·
->
èb
 = (
com∂ex_t
*)
cf·_èb_64
; ;

974 512: 
cf·
->
èb
 = (
com∂ex_t
*)
cf·_èb_512
; ;

975 #ifde‡
LD_DEC


976 256: 
cf·
->
èb
 = (
com∂ex_t
*)
cf·_èb_256
; ;

979 #ifde‡
ALLOW_SMALL_FRAMELENGTH


980 60: 
cf·
->
èb
 = (
com∂ex_t
*)
cf·_èb_60
; ;

981 480: 
cf·
->
èb
 = (
com∂ex_t
*)
cf·_èb_480
; ;

982 #ifde‡
LD_DEC


983 240: 
cf·
->
èb
 = (
com∂ex_t
*)
cf·_èb_240
; ;

986 128: 
cf·
->
èb
 = (
com∂ex_t
*)
cf·_èb_128
; ;

990  
cf·
;

991 
	}
}

993 
	$cf·u
(
cf·_öfo
 *
cf·
)

995 i‡(
cf·
->
w‹k
Ë
	`Áad_‰ì
(cfft->work);

996 #i‚de‡
FIXED_POINT


997 i‡(
cf·
->
èb
Ë
	`Áad_‰ì
(cfft->tab);

1000 i‡(
cf·
Ë
	`Áad_‰ì
(cfft);

1001 
	}
}

	@cfft.h

28 #i‚de‡
__CFFT_H__


29 
	#__CFFT_H__


	)

31 #ifde‡
__˝lu•lus


37 
uöt16_t
 
n
;

38 
uöt16_t
 
iÁc
[15];

39 
com∂ex_t
 *
w‹k
;

40 
com∂ex_t
 *
èb
;

41 } 
	tcf·_öfo
;

44 
cf·f
(
cf·_öfo
 *
cf·
, 
com∂ex_t
 *
c
);

45 
cf·b
(
cf·_öfo
 *
cf·
, 
com∂ex_t
 *
c
);

46 
cf·_öfo
 *
cf·i
(
uöt16_t
 
n
);

47 
cf·u
(
cf·_öfo
 *
cf·
);

50 #ifde‡
__˝lu•lus


	@cfft_tab.h

28 #i‚de‡
__CFFT_TAB_H__


29 
	#__CFFT_TAB_H__


	)

31 #ifde‡
__˝lu•lus


35 #ifde‡
FIXED_POINT


37 
ALIGN
 c⁄° 
com∂ex_t
 
cf·_èb_512
[] =

39 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

40 { 
FRAC_CONST
(0.999924719333649), FRAC_CONST(0.012271538376808) },

41 { 
FRAC_CONST
(0.999698817729950), FRAC_CONST(0.024541229009628) },

42 { 
FRAC_CONST
(0.999322354793549), FRAC_CONST(0.036807224154472) },

43 { 
FRAC_CONST
(0.998795449733734), FRAC_CONST(0.049067676067352) },

44 { 
FRAC_CONST
(0.998118102550507), FRAC_CONST(0.061320740729570) },

45 { 
FRAC_CONST
(0.997290432453156), FRAC_CONST(0.073564566671848) },

46 { 
FRAC_CONST
(0.996312618255615), FRAC_CONST(0.085797317326069) },

47 { 
FRAC_CONST
(0.995184719562531), FRAC_CONST(0.098017141222954) },

48 { 
FRAC_CONST
(0.993906974792480), FRAC_CONST(0.110222205519676) },

49 { 
FRAC_CONST
(0.992479562759399), FRAC_CONST(0.122410677373409) },

50 { 
FRAC_CONST
(0.990902662277222), FRAC_CONST(0.134580716490746) },

51 { 
FRAC_CONST
(0.989176511764526), FRAC_CONST(0.146730467677116) },

52 { 
FRAC_CONST
(0.987301409244537), FRAC_CONST(0.158858150243759) },

53 { 
FRAC_CONST
(0.985277652740479), FRAC_CONST(0.170961901545525) },

54 { 
FRAC_CONST
(0.983105480670929), FRAC_CONST(0.183039888739586) },

55 { 
FRAC_CONST
(0.980785250663757), FRAC_CONST(0.195090323686600) },

56 { 
FRAC_CONST
(0.978317379951477), FRAC_CONST(0.207111388444901) },

57 { 
FRAC_CONST
(0.975702106952667), FRAC_CONST(0.219101235270500) },

58 { 
FRAC_CONST
(0.972939968109131), FRAC_CONST(0.231058120727539) },

59 { 
FRAC_CONST
(0.970031261444092), FRAC_CONST(0.242980197072029) },

60 { 
FRAC_CONST
(0.966976463794708), FRAC_CONST(0.254865676164627) },

61 { 
FRAC_CONST
(0.963776051998138), FRAC_CONST(0.266712784767151) },

62 { 
FRAC_CONST
(0.960430502891541), FRAC_CONST(0.278519690036774) },

63 { 
FRAC_CONST
(0.956940352916718), FRAC_CONST(0.290284663438797) },

64 { 
FRAC_CONST
(0.953306019306183), FRAC_CONST(0.302005946636200) },

65 { 
FRAC_CONST
(0.949528157711029), FRAC_CONST(0.313681751489639) },

66 { 
FRAC_CONST
(0.945607304573059), FRAC_CONST(0.325310319662094) },

67 { 
FRAC_CONST
(0.941544055938721), FRAC_CONST(0.336889863014221) },

68 { 
FRAC_CONST
(0.937339007854462), FRAC_CONST(0.348418682813644) },

69 { 
FRAC_CONST
(0.932992815971375), FRAC_CONST(0.359895050525665) },

70 { 
FRAC_CONST
(0.928506076335907), FRAC_CONST(0.371317207813263) },

71 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

72 { 
FRAC_CONST
(0.919113874435425), FRAC_CONST(0.393992066383362) },

73 { 
FRAC_CONST
(0.914209723472595), FRAC_CONST(0.405241340398788) },

74 { 
FRAC_CONST
(0.909167945384979), FRAC_CONST(0.416429579257965) },

75 { 
FRAC_CONST
(0.903989315032959), FRAC_CONST(0.427555084228516) },

76 { 
FRAC_CONST
(0.898674488067627), FRAC_CONST(0.438616245985031) },

77 { 
FRAC_CONST
(0.893224298954010), FRAC_CONST(0.449611335992813) },

78 { 
FRAC_CONST
(0.887639641761780), FRAC_CONST(0.460538715124130) },

79 { 
FRAC_CONST
(0.881921231746674), FRAC_CONST(0.471396744251251) },

80 { 
FRAC_CONST
(0.876070082187653), FRAC_CONST(0.482183754444122) },

81 { 
FRAC_CONST
(0.870086967945099), FRAC_CONST(0.492898225784302) },

82 { 
FRAC_CONST
(0.863972842693329), FRAC_CONST(0.503538370132446) },

83 { 
FRAC_CONST
(0.857728600502014), FRAC_CONST(0.514102756977081) },

84 { 
FRAC_CONST
(0.851355195045471), FRAC_CONST(0.524589717388153) },

85 { 
FRAC_CONST
(0.844853579998016), FRAC_CONST(0.534997642040253) },

86 { 
FRAC_CONST
(0.838224709033966), FRAC_CONST(0.545324981212616) },

87 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

88 { 
FRAC_CONST
(0.824589252471924), FRAC_CONST(0.565731823444366) },

89 { 
FRAC_CONST
(0.817584812641144), FRAC_CONST(0.575808227062225) },

90 { 
FRAC_CONST
(0.810457170009613), FRAC_CONST(0.585797905921936) },

91 { 
FRAC_CONST
(0.803207516670227), FRAC_CONST(0.595699310302734) },

92 { 
FRAC_CONST
(0.795836925506592), FRAC_CONST(0.605511009693146) },

93 { 
FRAC_CONST
(0.788346409797668), FRAC_CONST(0.615231633186340) },

94 { 
FRAC_CONST
(0.780737221240997), FRAC_CONST(0.624859511852264) },

95 { 
FRAC_CONST
(0.773010432720184), FRAC_CONST(0.634393334388733) },

96 { 
FRAC_CONST
(0.765167236328125), FRAC_CONST(0.643831551074982) },

97 { 
FRAC_CONST
(0.757208824157715), FRAC_CONST(0.653172850608826) },

98 { 
FRAC_CONST
(0.749136388301849), FRAC_CONST(0.662415802478790) },

99 { 
FRAC_CONST
(0.740951120853424), FRAC_CONST(0.671558976173401) },

100 { 
FRAC_CONST
(0.732654273509979), FRAC_CONST(0.680601000785828) },

101 { 
FRAC_CONST
(0.724247097969055), FRAC_CONST(0.689540565013886) },

102 { 
FRAC_CONST
(0.715730786323547), FRAC_CONST(0.698376297950745) },

103 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

104 { 
FRAC_CONST
(0.698376238346100), FRAC_CONST(0.715730845928192) },

105 { 
FRAC_CONST
(0.689540505409241), FRAC_CONST(0.724247097969055) },

106 { 
FRAC_CONST
(0.680601000785828), FRAC_CONST(0.732654273509979) },

107 { 
FRAC_CONST
(0.671558916568756), FRAC_CONST(0.740951180458069) },

108 { 
FRAC_CONST
(0.662415742874146), FRAC_CONST(0.749136388301849) },

109 { 
FRAC_CONST
(0.653172791004181), FRAC_CONST(0.757208883762360) },

110 { 
FRAC_CONST
(0.643831551074982), FRAC_CONST(0.765167295932770) },

111 { 
FRAC_CONST
(0.634393274784088), FRAC_CONST(0.773010432720184) },

112 { 
FRAC_CONST
(0.624859452247620), FRAC_CONST(0.780737280845642) },

113 { 
FRAC_CONST
(0.615231573581696), FRAC_CONST(0.788346409797668) },

114 { 
FRAC_CONST
(0.605511009693146), FRAC_CONST(0.795836925506592) },

115 { 
FRAC_CONST
(0.595699310302734), FRAC_CONST(0.803207516670227) },

116 { 
FRAC_CONST
(0.585797846317291), FRAC_CONST(0.810457170009613) },

117 { 
FRAC_CONST
(0.575808167457581), FRAC_CONST(0.817584812641144) },

118 { 
FRAC_CONST
(0.565731823444366), FRAC_CONST(0.824589312076569) },

119 { 
FRAC_CONST
(0.555570185184479), FRAC_CONST(0.831469655036926) },

120 { 
FRAC_CONST
(0.545324981212616), FRAC_CONST(0.838224709033966) },

121 { 
FRAC_CONST
(0.534997642040253), FRAC_CONST(0.844853579998016) },

122 { 
FRAC_CONST
(0.524589657783508), FRAC_CONST(0.851355195045471) },

123 { 
FRAC_CONST
(0.514102697372437), FRAC_CONST(0.857728660106659) },

124 { 
FRAC_CONST
(0.503538429737091), FRAC_CONST(0.863972842693329) },

125 { 
FRAC_CONST
(0.492898195981979), FRAC_CONST(0.870086967945099) },

126 { 
FRAC_CONST
(0.482183724641800), FRAC_CONST(0.876070141792297) },

127 { 
FRAC_CONST
(0.471396654844284), FRAC_CONST(0.881921291351318) },

128 { 
FRAC_CONST
(0.460538715124130), FRAC_CONST(0.887639641761780) },

129 { 
FRAC_CONST
(0.449611306190491), FRAC_CONST(0.893224298954010) },

130 { 
FRAC_CONST
(0.438616186380386), FRAC_CONST(0.898674488067627) },

131 { 
FRAC_CONST
(0.427555114030838), FRAC_CONST(0.903989315032959) },

132 { 
FRAC_CONST
(0.416429549455643), FRAC_CONST(0.909168004989624) },

133 { 
FRAC_CONST
(0.405241280794144), FRAC_CONST(0.914209783077240) },

134 { 
FRAC_CONST
(0.393991947174072), FRAC_CONST(0.919113874435425) },

135 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

136 { 
FRAC_CONST
(0.371317148208618), FRAC_CONST(0.928506076335907) },

137 { 
FRAC_CONST
(0.359894961118698), FRAC_CONST(0.932992815971375) },

138 { 
FRAC_CONST
(0.348418682813644), FRAC_CONST(0.937339007854462) },

139 { 
FRAC_CONST
(0.336889833211899), FRAC_CONST(0.941544055938721) },

140 { 
FRAC_CONST
(0.325310230255127), FRAC_CONST(0.945607364177704) },

141 { 
FRAC_CONST
(0.313681662082672), FRAC_CONST(0.949528217315674) },

142 { 
FRAC_CONST
(0.302005946636200), FRAC_CONST(0.953306019306183) },

143 { 
FRAC_CONST
(0.290284633636475), FRAC_CONST(0.956940352916718) },

144 { 
FRAC_CONST
(0.278519600629807), FRAC_CONST(0.960430562496185) },

145 { 
FRAC_CONST
(0.266712754964828), FRAC_CONST(0.963776051998138) },

146 { 
FRAC_CONST
(0.254865646362305), FRAC_CONST(0.966976463794708) },

147 { 
FRAC_CONST
(0.242980122566223), FRAC_CONST(0.970031261444092) },

148 { 
FRAC_CONST
(0.231058135628700), FRAC_CONST(0.972939968109131) },

149 { 
FRAC_CONST
(0.219101220369339), FRAC_CONST(0.975702106952667) },

150 { 
FRAC_CONST
(0.207111328840256), FRAC_CONST(0.978317379951477) },

151 { 
FRAC_CONST
(0.195090234279633), FRAC_CONST(0.980785310268402) },

152 { 
FRAC_CONST
(0.183039888739586), FRAC_CONST(0.983105480670929) },

153 { 
FRAC_CONST
(0.170961856842041), FRAC_CONST(0.985277652740479) },

154 { 
FRAC_CONST
(0.158858075737953), FRAC_CONST(0.987301409244537) },

155 { 
FRAC_CONST
(0.146730497479439), FRAC_CONST(0.989176511764526) },

156 { 
FRAC_CONST
(0.134580686688423), FRAC_CONST(0.990902662277222) },

157 { 
FRAC_CONST
(0.122410625219345), FRAC_CONST(0.992479562759399) },

158 { 
FRAC_CONST
(0.110222116112709), FRAC_CONST(0.993906974792480) },

159 { 
FRAC_CONST
(0.098017133772373), FRAC_CONST(0.995184719562531) },

160 { 
FRAC_CONST
(0.085797272622585), FRAC_CONST(0.996312618255615) },

161 { 
FRAC_CONST
(0.073564492166042), FRAC_CONST(0.997290432453156) },

162 { 
FRAC_CONST
(0.061320748180151), FRAC_CONST(0.998118102550507) },

163 { 
FRAC_CONST
(0.049067649990320), FRAC_CONST(0.998795449733734) },

164 { 
FRAC_CONST
(0.036807164549828), FRAC_CONST(0.999322414398193) },

165 { 
FRAC_CONST
(0.024541135877371), FRAC_CONST(0.999698817729950) },

166 { 
FRAC_CONST
(0.012271529063582), FRAC_CONST(0.999924719333649) },

167 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

168 { 
FRAC_CONST
(-0.012271616607904), FRAC_CONST(0.999924719333649) },

169 { 
FRAC_CONST
(-0.024541223421693), FRAC_CONST(0.999698817729950) },

170 { 
FRAC_CONST
(-0.036807250231504), FRAC_CONST(0.999322354793549) },

171 { 
FRAC_CONST
(-0.049067739397287), FRAC_CONST(0.998795449733734) },

172 { 
FRAC_CONST
(-0.061320833861828), FRAC_CONST(0.998118102550507) },

173 { 
FRAC_CONST
(-0.073564574122429), FRAC_CONST(0.997290432453156) },

174 { 
FRAC_CONST
(-0.085797362029552), FRAC_CONST(0.996312618255615) },

175 { 
FRAC_CONST
(-0.098017223179340), FRAC_CONST(0.995184719562531) },

176 { 
FRAC_CONST
(-0.110222205519676), FRAC_CONST(0.993906974792480) },

177 { 
FRAC_CONST
(-0.122410707175732), FRAC_CONST(0.992479503154755) },

178 { 
FRAC_CONST
(-0.134580776095390), FRAC_CONST(0.990902602672577) },

179 { 
FRAC_CONST
(-0.146730571985245), FRAC_CONST(0.989176511764526) },

180 { 
FRAC_CONST
(-0.158858165144920), FRAC_CONST(0.987301409244537) },

181 { 
FRAC_CONST
(-0.170961946249008), FRAC_CONST(0.985277652740479) },

182 { 
FRAC_CONST
(-0.183039978146553), FRAC_CONST(0.983105480670929) },

183 { 
FRAC_CONST
(-0.195090323686600), FRAC_CONST(0.980785250663757) },

184 { 
FRAC_CONST
(-0.207111418247223), FRAC_CONST(0.978317379951477) },

185 { 
FRAC_CONST
(-0.219101309776306), FRAC_CONST(0.975702106952667) },

186 { 
FRAC_CONST
(-0.231058210134506), FRAC_CONST(0.972939908504486) },

187 { 
FRAC_CONST
(-0.242980197072029), FRAC_CONST(0.970031261444092) },

188 { 
FRAC_CONST
(-0.254865705966949), FRAC_CONST(0.966976463794708) },

189 { 
FRAC_CONST
(-0.266712844371796), FRAC_CONST(0.963776051998138) },

190 { 
FRAC_CONST
(-0.278519690036774), FRAC_CONST(0.960430502891541) },

191 { 
FRAC_CONST
(-0.290284723043442), FRAC_CONST(0.956940293312073) },

192 { 
FRAC_CONST
(-0.302006036043167), FRAC_CONST(0.953306019306183) },

193 { 
FRAC_CONST
(-0.313681721687317), FRAC_CONST(0.949528157711029) },

194 { 
FRAC_CONST
(-0.325310319662094), FRAC_CONST(0.945607304573059) },

195 { 
FRAC_CONST
(-0.336889922618866), FRAC_CONST(0.941544055938721) },

196 { 
FRAC_CONST
(-0.348418772220612), FRAC_CONST(0.937338948249817) },

197 { 
FRAC_CONST
(-0.359895050525665), FRAC_CONST(0.932992815971375) },

198 { 
FRAC_CONST
(-0.371317237615585), FRAC_CONST(0.928506076335907) },

199 { 
FRAC_CONST
(-0.382683515548706), FRAC_CONST(0.923879504203796) },

200 { 
FRAC_CONST
(-0.393992036581039), FRAC_CONST(0.919113874435425) },

201 { 
FRAC_CONST
(-0.405241340398788), FRAC_CONST(0.914209723472595) },

202 { 
FRAC_CONST
(-0.416429519653320), FRAC_CONST(0.909168004989624) },

203 { 
FRAC_CONST
(-0.427555084228516), FRAC_CONST(0.903989315032959) },

204 { 
FRAC_CONST
(-0.438616245985031), FRAC_CONST(0.898674428462982) },

205 { 
FRAC_CONST
(-0.449611365795136), FRAC_CONST(0.893224298954010) },

206 { 
FRAC_CONST
(-0.460538804531097), FRAC_CONST(0.887639582157135) },

207 { 
FRAC_CONST
(-0.471396833658218), FRAC_CONST(0.881921231746674) },

208 { 
FRAC_CONST
(-0.482183903455734), FRAC_CONST(0.876070022583008) },

209 { 
FRAC_CONST
(-0.492898166179657), FRAC_CONST(0.870087027549744) },

210 { 
FRAC_CONST
(-0.503538370132446), FRAC_CONST(0.863972842693329) },

211 { 
FRAC_CONST
(-0.514102756977081), FRAC_CONST(0.857728600502014) },

212 { 
FRAC_CONST
(-0.524589717388153), FRAC_CONST(0.851355135440826) },

213 { 
FRAC_CONST
(-0.534997701644897), FRAC_CONST(0.844853520393372) },

214 { 
FRAC_CONST
(-0.545325100421906), FRAC_CONST(0.838224649429321) },

215 { 
FRAC_CONST
(-0.555570363998413), FRAC_CONST(0.831469535827637) },

216 { 
FRAC_CONST
(-0.565731763839722), FRAC_CONST(0.824589312076569) },

217 { 
FRAC_CONST
(-0.575808167457581), FRAC_CONST(0.817584812641144) },

218 { 
FRAC_CONST
(-0.585797905921936), FRAC_CONST(0.810457170009613) },

219 { 
FRAC_CONST
(-0.595699369907379), FRAC_CONST(0.803207516670227) },

220 { 
FRAC_CONST
(-0.605511128902435), FRAC_CONST(0.795836865901947) },

221 { 
FRAC_CONST
(-0.615231692790985), FRAC_CONST(0.788346350193024) },

222 { 
FRAC_CONST
(-0.624859631061554), FRAC_CONST(0.780737102031708) },

223 { 
FRAC_CONST
(-0.634393274784088), FRAC_CONST(0.773010492324829) },

224 { 
FRAC_CONST
(-0.643831551074982), FRAC_CONST(0.765167236328125) },

225 { 
FRAC_CONST
(-0.653172850608826), FRAC_CONST(0.757208824157715) },

226 { 
FRAC_CONST
(-0.662415802478790), FRAC_CONST(0.749136328697205) },

227 { 
FRAC_CONST
(-0.671559035778046), FRAC_CONST(0.740951061248779) },

228 { 
FRAC_CONST
(-0.680601119995117), FRAC_CONST(0.732654154300690) },

229 { 
FRAC_CONST
(-0.689540684223175), FRAC_CONST(0.724246978759766) },

230 { 
FRAC_CONST
(-0.698376238346100), FRAC_CONST(0.715730845928192) },

231 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

232 { 
FRAC_CONST
(-0.715730845928192), FRAC_CONST(0.698376238346100) },

233 { 
FRAC_CONST
(-0.724247157573700), FRAC_CONST(0.689540505409241) },

234 { 
FRAC_CONST
(-0.732654333114624), FRAC_CONST(0.680600941181183) },

235 { 
FRAC_CONST
(-0.740951240062714), FRAC_CONST(0.671558856964111) },

236 { 
FRAC_CONST
(-0.749136507511139), FRAC_CONST(0.662415623664856) },

237 { 
FRAC_CONST
(-0.757208824157715), FRAC_CONST(0.653172850608826) },

238 { 
FRAC_CONST
(-0.765167295932770), FRAC_CONST(0.643831551074982) },

239 { 
FRAC_CONST
(-0.773010492324829), FRAC_CONST(0.634393274784088) },

240 { 
FRAC_CONST
(-0.780737280845642), FRAC_CONST(0.624859452247620) },

241 { 
FRAC_CONST
(-0.788346469402313), FRAC_CONST(0.615231513977051) },

242 { 
FRAC_CONST
(-0.795836985111237), FRAC_CONST(0.605510950088501) },

243 { 
FRAC_CONST
(-0.803207635879517), FRAC_CONST(0.595699131488800) },

244 { 
FRAC_CONST
(-0.810457170009613), FRAC_CONST(0.585797846317291) },

245 { 
FRAC_CONST
(-0.817584812641144), FRAC_CONST(0.575808167457581) },

246 { 
FRAC_CONST
(-0.824589312076569), FRAC_CONST(0.565731763839722) },

247 { 
FRAC_CONST
(-0.831469655036926), FRAC_CONST(0.555570185184479) },

248 { 
FRAC_CONST
(-0.838224768638611), FRAC_CONST(0.545324862003326) },

249 { 
FRAC_CONST
(-0.844853639602661), FRAC_CONST(0.534997463226318) },

250 { 
FRAC_CONST
(-0.851355314254761), FRAC_CONST(0.524589538574219) },

251 { 
FRAC_CONST
(-0.857728600502014), FRAC_CONST(0.514102756977081) },

252 { 
FRAC_CONST
(-0.863972842693329), FRAC_CONST(0.503538370132446) },

253 { 
FRAC_CONST
(-0.870087027549744), FRAC_CONST(0.492898136377335) },

254 { 
FRAC_CONST
(-0.876070141792297), FRAC_CONST(0.482183694839478) },

255 { 
FRAC_CONST
(-0.881921350955963), FRAC_CONST(0.471396625041962) },

256 { 
FRAC_CONST
(-0.887639701366425), FRAC_CONST(0.460538566112518) },

257 { 
FRAC_CONST
(-0.893224298954010), FRAC_CONST(0.449611365795136) },

258 { 
FRAC_CONST
(-0.898674488067627), FRAC_CONST(0.438616245985031) },

259 { 
FRAC_CONST
(-0.903989315032959), FRAC_CONST(0.427555054426193) },

260 { 
FRAC_CONST
(-0.909168004989624), FRAC_CONST(0.416429489850998) },

261 { 
FRAC_CONST
(-0.914209783077240), FRAC_CONST(0.405241221189499) },

262 { 
FRAC_CONST
(-0.919113874435425), FRAC_CONST(0.393991917371750) },

263 { 
FRAC_CONST
(-0.923879623413086), FRAC_CONST(0.382683277130127) },

264 { 
FRAC_CONST
(-0.928506076335907), FRAC_CONST(0.371317237615585) },

265 { 
FRAC_CONST
(-0.932992815971375), FRAC_CONST(0.359895050525665) },

266 { 
FRAC_CONST
(-0.937339007854462), FRAC_CONST(0.348418653011322) },

267 { 
FRAC_CONST
(-0.941544115543365), FRAC_CONST(0.336889803409576) },

268 { 
FRAC_CONST
(-0.945607364177704), FRAC_CONST(0.325310200452805) },

269 { 
FRAC_CONST
(-0.949528217315674), FRAC_CONST(0.313681602478027) },

270 { 
FRAC_CONST
(-0.953306078910828), FRAC_CONST(0.302005797624588) },

271 { 
FRAC_CONST
(-0.956940352916718), FRAC_CONST(0.290284723043442) },

272 { 
FRAC_CONST
(-0.960430502891541), FRAC_CONST(0.278519690036774) },

273 { 
FRAC_CONST
(-0.963776051998138), FRAC_CONST(0.266712725162506) },

274 { 
FRAC_CONST
(-0.966976463794708), FRAC_CONST(0.254865586757660) },

275 { 
FRAC_CONST
(-0.970031261444092), FRAC_CONST(0.242980077862740) },

276 { 
FRAC_CONST
(-0.972939968109131), FRAC_CONST(0.231057971715927) },

277 { 
FRAC_CONST
(-0.975702166557312), FRAC_CONST(0.219101071357727) },

278 { 
FRAC_CONST
(-0.978317379951477), FRAC_CONST(0.207111403346062) },

279 { 
FRAC_CONST
(-0.980785310268402), FRAC_CONST(0.195090308785439) },

280 { 
FRAC_CONST
(-0.983105480670929), FRAC_CONST(0.183039844036102) },

281 { 
FRAC_CONST
(-0.985277652740479), FRAC_CONST(0.170961812138557) },

282 { 
FRAC_CONST
(-0.987301409244537), FRAC_CONST(0.158858031034470) },

283 { 
FRAC_CONST
(-0.989176511764526), FRAC_CONST(0.146730333566666) },

284 { 
FRAC_CONST
(-0.990902662277222), FRAC_CONST(0.134580522775650) },

285 { 
FRAC_CONST
(-0.992479503154755), FRAC_CONST(0.122410699725151) },

286 { 
FRAC_CONST
(-0.993906974792480), FRAC_CONST(0.110222198069096) },

287 { 
FRAC_CONST
(-0.995184719562531), FRAC_CONST(0.098017096519470) },

288 { 
FRAC_CONST
(-0.996312618255615), FRAC_CONST(0.085797227919102) },

289 { 
FRAC_CONST
(-0.997290492057800), FRAC_CONST(0.073564447462559) },

290 { 
FRAC_CONST
(-0.998118102550507), FRAC_CONST(0.061320584267378) },

291 { 
FRAC_CONST
(-0.998795449733734), FRAC_CONST(0.049067486077547) },

292 { 
FRAC_CONST
(-0.999322354793549), FRAC_CONST(0.036807239055634) },

293 { 
FRAC_CONST
(-0.999698817729950), FRAC_CONST(0.024541210383177) },

294 { 
FRAC_CONST
(-0.999924719333649), FRAC_CONST(0.012271485291421) },

295 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

296 { 
FRAC_CONST
(0.999698817729950), FRAC_CONST(0.024541229009628) },

297 { 
FRAC_CONST
(0.998795449733734), FRAC_CONST(0.049067676067352) },

298 { 
FRAC_CONST
(0.997290432453156), FRAC_CONST(0.073564566671848) },

299 { 
FRAC_CONST
(0.995184719562531), FRAC_CONST(0.098017141222954) },

300 { 
FRAC_CONST
(0.992479562759399), FRAC_CONST(0.122410677373409) },

301 { 
FRAC_CONST
(0.989176511764526), FRAC_CONST(0.146730467677116) },

302 { 
FRAC_CONST
(0.985277652740479), FRAC_CONST(0.170961901545525) },

303 { 
FRAC_CONST
(0.980785250663757), FRAC_CONST(0.195090323686600) },

304 { 
FRAC_CONST
(0.975702106952667), FRAC_CONST(0.219101235270500) },

305 { 
FRAC_CONST
(0.970031261444092), FRAC_CONST(0.242980197072029) },

306 { 
FRAC_CONST
(0.963776051998138), FRAC_CONST(0.266712784767151) },

307 { 
FRAC_CONST
(0.956940352916718), FRAC_CONST(0.290284663438797) },

308 { 
FRAC_CONST
(0.949528157711029), FRAC_CONST(0.313681751489639) },

309 { 
FRAC_CONST
(0.941544055938721), FRAC_CONST(0.336889863014221) },

310 { 
FRAC_CONST
(0.932992815971375), FRAC_CONST(0.359895050525665) },

311 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

312 { 
FRAC_CONST
(0.914209723472595), FRAC_CONST(0.405241340398788) },

313 { 
FRAC_CONST
(0.903989315032959), FRAC_CONST(0.427555084228516) },

314 { 
FRAC_CONST
(0.893224298954010), FRAC_CONST(0.449611335992813) },

315 { 
FRAC_CONST
(0.881921231746674), FRAC_CONST(0.471396744251251) },

316 { 
FRAC_CONST
(0.870086967945099), FRAC_CONST(0.492898225784302) },

317 { 
FRAC_CONST
(0.857728600502014), FRAC_CONST(0.514102756977081) },

318 { 
FRAC_CONST
(0.844853579998016), FRAC_CONST(0.534997642040253) },

319 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

320 { 
FRAC_CONST
(0.817584812641144), FRAC_CONST(0.575808227062225) },

321 { 
FRAC_CONST
(0.803207516670227), FRAC_CONST(0.595699310302734) },

322 { 
FRAC_CONST
(0.788346409797668), FRAC_CONST(0.615231633186340) },

323 { 
FRAC_CONST
(0.773010432720184), FRAC_CONST(0.634393334388733) },

324 { 
FRAC_CONST
(0.757208824157715), FRAC_CONST(0.653172850608826) },

325 { 
FRAC_CONST
(0.740951120853424), FRAC_CONST(0.671558976173401) },

326 { 
FRAC_CONST
(0.724247097969055), FRAC_CONST(0.689540565013886) },

327 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

328 { 
FRAC_CONST
(0.689540505409241), FRAC_CONST(0.724247097969055) },

329 { 
FRAC_CONST
(0.671558916568756), FRAC_CONST(0.740951180458069) },

330 { 
FRAC_CONST
(0.653172791004181), FRAC_CONST(0.757208883762360) },

331 { 
FRAC_CONST
(0.634393274784088), FRAC_CONST(0.773010432720184) },

332 { 
FRAC_CONST
(0.615231573581696), FRAC_CONST(0.788346409797668) },

333 { 
FRAC_CONST
(0.595699310302734), FRAC_CONST(0.803207516670227) },

334 { 
FRAC_CONST
(0.575808167457581), FRAC_CONST(0.817584812641144) },

335 { 
FRAC_CONST
(0.555570185184479), FRAC_CONST(0.831469655036926) },

336 { 
FRAC_CONST
(0.534997642040253), FRAC_CONST(0.844853579998016) },

337 { 
FRAC_CONST
(0.514102697372437), FRAC_CONST(0.857728660106659) },

338 { 
FRAC_CONST
(0.492898195981979), FRAC_CONST(0.870086967945099) },

339 { 
FRAC_CONST
(0.471396654844284), FRAC_CONST(0.881921291351318) },

340 { 
FRAC_CONST
(0.449611306190491), FRAC_CONST(0.893224298954010) },

341 { 
FRAC_CONST
(0.427555114030838), FRAC_CONST(0.903989315032959) },

342 { 
FRAC_CONST
(0.405241280794144), FRAC_CONST(0.914209783077240) },

343 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

344 { 
FRAC_CONST
(0.359894961118698), FRAC_CONST(0.932992815971375) },

345 { 
FRAC_CONST
(0.336889833211899), FRAC_CONST(0.941544055938721) },

346 { 
FRAC_CONST
(0.313681662082672), FRAC_CONST(0.949528217315674) },

347 { 
FRAC_CONST
(0.290284633636475), FRAC_CONST(0.956940352916718) },

348 { 
FRAC_CONST
(0.266712754964828), FRAC_CONST(0.963776051998138) },

349 { 
FRAC_CONST
(0.242980122566223), FRAC_CONST(0.970031261444092) },

350 { 
FRAC_CONST
(0.219101220369339), FRAC_CONST(0.975702106952667) },

351 { 
FRAC_CONST
(0.195090234279633), FRAC_CONST(0.980785310268402) },

352 { 
FRAC_CONST
(0.170961856842041), FRAC_CONST(0.985277652740479) },

353 { 
FRAC_CONST
(0.146730497479439), FRAC_CONST(0.989176511764526) },

354 { 
FRAC_CONST
(0.122410625219345), FRAC_CONST(0.992479562759399) },

355 { 
FRAC_CONST
(0.098017133772373), FRAC_CONST(0.995184719562531) },

356 { 
FRAC_CONST
(0.073564492166042), FRAC_CONST(0.997290432453156) },

357 { 
FRAC_CONST
(0.049067649990320), FRAC_CONST(0.998795449733734) },

358 { 
FRAC_CONST
(0.024541135877371), FRAC_CONST(0.999698817729950) },

359 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

360 { 
FRAC_CONST
(0.998795449733734), FRAC_CONST(0.049067676067352) },

361 { 
FRAC_CONST
(0.995184719562531), FRAC_CONST(0.098017141222954) },

362 { 
FRAC_CONST
(0.989176511764526), FRAC_CONST(0.146730467677116) },

363 { 
FRAC_CONST
(0.980785250663757), FRAC_CONST(0.195090323686600) },

364 { 
FRAC_CONST
(0.970031261444092), FRAC_CONST(0.242980197072029) },

365 { 
FRAC_CONST
(0.956940352916718), FRAC_CONST(0.290284663438797) },

366 { 
FRAC_CONST
(0.941544055938721), FRAC_CONST(0.336889863014221) },

367 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

368 { 
FRAC_CONST
(0.903989315032959), FRAC_CONST(0.427555084228516) },

369 { 
FRAC_CONST
(0.881921231746674), FRAC_CONST(0.471396744251251) },

370 { 
FRAC_CONST
(0.857728600502014), FRAC_CONST(0.514102756977081) },

371 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

372 { 
FRAC_CONST
(0.803207516670227), FRAC_CONST(0.595699310302734) },

373 { 
FRAC_CONST
(0.773010432720184), FRAC_CONST(0.634393334388733) },

374 { 
FRAC_CONST
(0.740951120853424), FRAC_CONST(0.671558976173401) },

375 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

376 { 
FRAC_CONST
(0.671558916568756), FRAC_CONST(0.740951180458069) },

377 { 
FRAC_CONST
(0.634393274784088), FRAC_CONST(0.773010432720184) },

378 { 
FRAC_CONST
(0.595699310302734), FRAC_CONST(0.803207516670227) },

379 { 
FRAC_CONST
(0.555570185184479), FRAC_CONST(0.831469655036926) },

380 { 
FRAC_CONST
(0.514102697372437), FRAC_CONST(0.857728660106659) },

381 { 
FRAC_CONST
(0.471396654844284), FRAC_CONST(0.881921291351318) },

382 { 
FRAC_CONST
(0.427555114030838), FRAC_CONST(0.903989315032959) },

383 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

384 { 
FRAC_CONST
(0.336889833211899), FRAC_CONST(0.941544055938721) },

385 { 
FRAC_CONST
(0.290284633636475), FRAC_CONST(0.956940352916718) },

386 { 
FRAC_CONST
(0.242980122566223), FRAC_CONST(0.970031261444092) },

387 { 
FRAC_CONST
(0.195090234279633), FRAC_CONST(0.980785310268402) },

388 { 
FRAC_CONST
(0.146730497479439), FRAC_CONST(0.989176511764526) },

389 { 
FRAC_CONST
(0.098017133772373), FRAC_CONST(0.995184719562531) },

390 { 
FRAC_CONST
(0.049067649990320), FRAC_CONST(0.998795449733734) },

391 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

392 { 
FRAC_CONST
(-0.049067739397287), FRAC_CONST(0.998795449733734) },

393 { 
FRAC_CONST
(-0.098017223179340), FRAC_CONST(0.995184719562531) },

394 { 
FRAC_CONST
(-0.146730571985245), FRAC_CONST(0.989176511764526) },

395 { 
FRAC_CONST
(-0.195090323686600), FRAC_CONST(0.980785250663757) },

396 { 
FRAC_CONST
(-0.242980197072029), FRAC_CONST(0.970031261444092) },

397 { 
FRAC_CONST
(-0.290284723043442), FRAC_CONST(0.956940293312073) },

398 { 
FRAC_CONST
(-0.336889922618866), FRAC_CONST(0.941544055938721) },

399 { 
FRAC_CONST
(-0.382683515548706), FRAC_CONST(0.923879504203796) },

400 { 
FRAC_CONST
(-0.427555084228516), FRAC_CONST(0.903989315032959) },

401 { 
FRAC_CONST
(-0.471396833658218), FRAC_CONST(0.881921231746674) },

402 { 
FRAC_CONST
(-0.514102756977081), FRAC_CONST(0.857728600502014) },

403 { 
FRAC_CONST
(-0.555570363998413), FRAC_CONST(0.831469535827637) },

404 { 
FRAC_CONST
(-0.595699369907379), FRAC_CONST(0.803207516670227) },

405 { 
FRAC_CONST
(-0.634393274784088), FRAC_CONST(0.773010492324829) },

406 { 
FRAC_CONST
(-0.671559035778046), FRAC_CONST(0.740951061248779) },

407 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

408 { 
FRAC_CONST
(-0.740951240062714), FRAC_CONST(0.671558856964111) },

409 { 
FRAC_CONST
(-0.773010492324829), FRAC_CONST(0.634393274784088) },

410 { 
FRAC_CONST
(-0.803207635879517), FRAC_CONST(0.595699131488800) },

411 { 
FRAC_CONST
(-0.831469655036926), FRAC_CONST(0.555570185184479) },

412 { 
FRAC_CONST
(-0.857728600502014), FRAC_CONST(0.514102756977081) },

413 { 
FRAC_CONST
(-0.881921350955963), FRAC_CONST(0.471396625041962) },

414 { 
FRAC_CONST
(-0.903989315032959), FRAC_CONST(0.427555054426193) },

415 { 
FRAC_CONST
(-0.923879623413086), FRAC_CONST(0.382683277130127) },

416 { 
FRAC_CONST
(-0.941544115543365), FRAC_CONST(0.336889803409576) },

417 { 
FRAC_CONST
(-0.956940352916718), FRAC_CONST(0.290284723043442) },

418 { 
FRAC_CONST
(-0.970031261444092), FRAC_CONST(0.242980077862740) },

419 { 
FRAC_CONST
(-0.980785310268402), FRAC_CONST(0.195090308785439) },

420 { 
FRAC_CONST
(-0.989176511764526), FRAC_CONST(0.146730333566666) },

421 { 
FRAC_CONST
(-0.995184719562531), FRAC_CONST(0.098017096519470) },

422 { 
FRAC_CONST
(-0.998795449733734), FRAC_CONST(0.049067486077547) },

423 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

424 { 
FRAC_CONST
(0.997290432453156), FRAC_CONST(0.073564566671848) },

425 { 
FRAC_CONST
(0.989176511764526), FRAC_CONST(0.146730467677116) },

426 { 
FRAC_CONST
(0.975702106952667), FRAC_CONST(0.219101235270500) },

427 { 
FRAC_CONST
(0.956940352916718), FRAC_CONST(0.290284663438797) },

428 { 
FRAC_CONST
(0.932992815971375), FRAC_CONST(0.359895050525665) },

429 { 
FRAC_CONST
(0.903989315032959), FRAC_CONST(0.427555084228516) },

430 { 
FRAC_CONST
(0.870086967945099), FRAC_CONST(0.492898225784302) },

431 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

432 { 
FRAC_CONST
(0.788346469402313), FRAC_CONST(0.615231573581696) },

433 { 
FRAC_CONST
(0.740951120853424), FRAC_CONST(0.671558976173401) },

434 { 
FRAC_CONST
(0.689540505409241), FRAC_CONST(0.724247097969055) },

435 { 
FRAC_CONST
(0.634393274784088), FRAC_CONST(0.773010432720184) },

436 { 
FRAC_CONST
(0.575808227062225), FRAC_CONST(0.817584812641144) },

437 { 
FRAC_CONST
(0.514102697372437), FRAC_CONST(0.857728660106659) },

438 { 
FRAC_CONST
(0.449611306190491), FRAC_CONST(0.893224298954010) },

439 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

440 { 
FRAC_CONST
(0.313681751489639), FRAC_CONST(0.949528157711029) },

441 { 
FRAC_CONST
(0.242980241775513), FRAC_CONST(0.970031261444092) },

442 { 
FRAC_CONST
(0.170961856842041), FRAC_CONST(0.985277652740479) },

443 { 
FRAC_CONST
(0.098017133772373), FRAC_CONST(0.995184719562531) },

444 { 
FRAC_CONST
(0.024541255086660), FRAC_CONST(0.999698817729950) },

445 { 
FRAC_CONST
(-0.049067739397287), FRAC_CONST(0.998795449733734) },

446 { 
FRAC_CONST
(-0.122410707175732), FRAC_CONST(0.992479503154755) },

447 { 
FRAC_CONST
(-0.195090323686600), FRAC_CONST(0.980785250663757) },

448 { 
FRAC_CONST
(-0.266712725162506), FRAC_CONST(0.963776051998138) },

449 { 
FRAC_CONST
(-0.336889803409576), FRAC_CONST(0.941544055938721) },

450 { 
FRAC_CONST
(-0.405241340398788), FRAC_CONST(0.914209723472595) },

451 { 
FRAC_CONST
(-0.471396833658218), FRAC_CONST(0.881921231746674) },

452 { 
FRAC_CONST
(-0.534997701644897), FRAC_CONST(0.844853520393372) },

453 { 
FRAC_CONST
(-0.595699369907379), FRAC_CONST(0.803207516670227) },

454 { 
FRAC_CONST
(-0.653172850608826), FRAC_CONST(0.757208824157715) },

455 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

456 { 
FRAC_CONST
(-0.757208824157715), FRAC_CONST(0.653172850608826) },

457 { 
FRAC_CONST
(-0.803207516670227), FRAC_CONST(0.595699369907379) },

458 { 
FRAC_CONST
(-0.844853520393372), FRAC_CONST(0.534997701644897) },

459 { 
FRAC_CONST
(-0.881921231746674), FRAC_CONST(0.471396833658218) },

460 { 
FRAC_CONST
(-0.914209783077240), FRAC_CONST(0.405241221189499) },

461 { 
FRAC_CONST
(-0.941544115543365), FRAC_CONST(0.336889803409576) },

462 { 
FRAC_CONST
(-0.963776051998138), FRAC_CONST(0.266712725162506) },

463 { 
FRAC_CONST
(-0.980785310268402), FRAC_CONST(0.195090308785439) },

464 { 
FRAC_CONST
(-0.992479503154755), FRAC_CONST(0.122410699725151) },

465 { 
FRAC_CONST
(-0.998795449733734), FRAC_CONST(0.049067724496126) },

466 { 
FRAC_CONST
(-0.999698817729950), FRAC_CONST(-0.024541147053242) },

467 { 
FRAC_CONST
(-0.995184719562531), FRAC_CONST(-0.098017267882824) },

468 { 
FRAC_CONST
(-0.985277652740479), FRAC_CONST(-0.170961990952492) },

469 { 
FRAC_CONST
(-0.970031261444092), FRAC_CONST(-0.242980241775513) },

470 { 
FRAC_CONST
(-0.949528157711029), FRAC_CONST(-0.313681781291962) },

471 { 
FRAC_CONST
(-0.923879504203796), FRAC_CONST(-0.382683426141739) },

472 { 
FRAC_CONST
(-0.893224298954010), FRAC_CONST(-0.449611306190491) },

473 { 
FRAC_CONST
(-0.857728660106659), FRAC_CONST(-0.514102697372437) },

474 { 
FRAC_CONST
(-0.817584872245789), FRAC_CONST(-0.575808107852936) },

475 { 
FRAC_CONST
(-0.773010551929474), FRAC_CONST(-0.634393215179443) },

476 { 
FRAC_CONST
(-0.724247038364410), FRAC_CONST(-0.689540624618530) },

477 { 
FRAC_CONST
(-0.671558916568756), FRAC_CONST(-0.740951180458069) },

478 { 
FRAC_CONST
(-0.615231573581696), FRAC_CONST(-0.788346469402313) },

479 { 
FRAC_CONST
(-0.555570006370544), FRAC_CONST(-0.831469774246216) },

480 { 
FRAC_CONST
(-0.492898195981979), FRAC_CONST(-0.870086967945099) },

481 { 
FRAC_CONST
(-0.427554935216904), FRAC_CONST(-0.903989374637604) },

482 { 
FRAC_CONST
(-0.359895110130310), FRAC_CONST(-0.932992756366730) },

483 { 
FRAC_CONST
(-0.290284544229507), FRAC_CONST(-0.956940352916718) },

484 { 
FRAC_CONST
(-0.219101369380951), FRAC_CONST(-0.975702106952667) },

485 { 
FRAC_CONST
(-0.146730408072472), FRAC_CONST(-0.989176511764526) },

486 { 
FRAC_CONST
(-0.073564760386944), FRAC_CONST(-0.997290432453156) },

487 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

488 { 
FRAC_CONST
(0.995184719562531), FRAC_CONST(0.098017141222954) },

489 { 
FRAC_CONST
(0.980785250663757), FRAC_CONST(0.195090323686600) },

490 { 
FRAC_CONST
(0.956940352916718), FRAC_CONST(0.290284663438797) },

491 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

492 { 
FRAC_CONST
(0.881921231746674), FRAC_CONST(0.471396744251251) },

493 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

494 { 
FRAC_CONST
(0.773010432720184), FRAC_CONST(0.634393334388733) },

495 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

496 { 
FRAC_CONST
(0.634393274784088), FRAC_CONST(0.773010432720184) },

497 { 
FRAC_CONST
(0.555570185184479), FRAC_CONST(0.831469655036926) },

498 { 
FRAC_CONST
(0.471396654844284), FRAC_CONST(0.881921291351318) },

499 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

500 { 
FRAC_CONST
(0.290284633636475), FRAC_CONST(0.956940352916718) },

501 { 
FRAC_CONST
(0.195090234279633), FRAC_CONST(0.980785310268402) },

502 { 
FRAC_CONST
(0.098017133772373), FRAC_CONST(0.995184719562531) },

503 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

504 { 
FRAC_CONST
(0.980785250663757), FRAC_CONST(0.195090323686600) },

505 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

506 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

507 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

508 { 
FRAC_CONST
(0.555570185184479), FRAC_CONST(0.831469655036926) },

509 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

510 { 
FRAC_CONST
(0.195090234279633), FRAC_CONST(0.980785310268402) },

511 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

512 { 
FRAC_CONST
(-0.195090323686600), FRAC_CONST(0.980785250663757) },

513 { 
FRAC_CONST
(-0.382683515548706), FRAC_CONST(0.923879504203796) },

514 { 
FRAC_CONST
(-0.555570363998413), FRAC_CONST(0.831469535827637) },

515 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

516 { 
FRAC_CONST
(-0.831469655036926), FRAC_CONST(0.555570185184479) },

517 { 
FRAC_CONST
(-0.923879623413086), FRAC_CONST(0.382683277130127) },

518 { 
FRAC_CONST
(-0.980785310268402), FRAC_CONST(0.195090308785439) },

519 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

520 { 
FRAC_CONST
(0.956940352916718), FRAC_CONST(0.290284663438797) },

521 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

522 { 
FRAC_CONST
(0.634393274784088), FRAC_CONST(0.773010432720184) },

523 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

524 { 
FRAC_CONST
(0.098017133772373), FRAC_CONST(0.995184719562531) },

525 { 
FRAC_CONST
(-0.195090323686600), FRAC_CONST(0.980785250663757) },

526 { 
FRAC_CONST
(-0.471396833658218), FRAC_CONST(0.881921231746674) },

527 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

528 { 
FRAC_CONST
(-0.881921231746674), FRAC_CONST(0.471396833658218) },

529 { 
FRAC_CONST
(-0.980785310268402), FRAC_CONST(0.195090308785439) },

530 { 
FRAC_CONST
(-0.995184719562531), FRAC_CONST(-0.098017267882824) },

531 { 
FRAC_CONST
(-0.923879504203796), FRAC_CONST(-0.382683426141739) },

532 { 
FRAC_CONST
(-0.773010551929474), FRAC_CONST(-0.634393215179443) },

533 { 
FRAC_CONST
(-0.555570006370544), FRAC_CONST(-0.831469774246216) },

534 { 
FRAC_CONST
(-0.290284544229507), FRAC_CONST(-0.956940352916718) },

535 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

536 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

537 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

538 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

539 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

540 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

541 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

542 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

543 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

544 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

545 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

546 { 
FRAC_CONST
(-0.923879504203796), FRAC_CONST(-0.382683426141739) },

547 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

548 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

549 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

550 { 
FRAC_CONST
(0.000000011924881), FRAC_CONST(-1.000000000000000) }

553 #ifde‡
ALLOW_SMALL_FRAMELENGTH


554 
ALIGN
 c⁄° 
com∂ex_t
 
	gcf·_èb_480
[] =

556 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

557 { 
FRAC_CONST
(0.999914348125458), FRAC_CONST(0.013089596293867) },

558 { 
FRAC_CONST
(0.999657332897186), FRAC_CONST(0.026176949962974) },

559 { 
FRAC_CONST
(0.999229013919830), FRAC_CONST(0.039259817451239) },

560 { 
FRAC_CONST
(0.998629510402679), FRAC_CONST(0.052335958927870) },

561 { 
FRAC_CONST
(0.997858941555023), FRAC_CONST(0.065403133630753) },

562 { 
FRAC_CONST
(0.996917307376862), FRAC_CONST(0.078459098935127) },

563 { 
FRAC_CONST
(0.995804905891418), FRAC_CONST(0.091501623392105) },

564 { 
FRAC_CONST
(0.994521915912628), FRAC_CONST(0.104528464376926) },

565 { 
FRAC_CONST
(0.993068456649780), FRAC_CONST(0.117537401616573) },

566 { 
FRAC_CONST
(0.991444885730743), FRAC_CONST(0.130526199936867) },

567 { 
FRAC_CONST
(0.989651381969452), FRAC_CONST(0.143492624163628) },

568 { 
FRAC_CONST
(0.987688362598419), FRAC_CONST(0.156434476375580) },

569 { 
FRAC_CONST
(0.985556066036224), FRAC_CONST(0.169349506497383) },

570 { 
FRAC_CONST
(0.983254909515381), FRAC_CONST(0.182235524058342) },

571 { 
FRAC_CONST
(0.980785250663757), FRAC_CONST(0.195090323686600) },

572 { 
FRAC_CONST
(0.978147625923157), FRAC_CONST(0.207911700010300) },

573 { 
FRAC_CONST
(0.975342333316803), FRAC_CONST(0.220697447657585) },

574 { 
FRAC_CONST
(0.972369909286499), FRAC_CONST(0.233445376157761) },

575 { 
FRAC_CONST
(0.969230890274048), FRAC_CONST(0.246153295040131) },

576 { 
FRAC_CONST
(0.965925812721252), FRAC_CONST(0.258819043636322) },

577 { 
FRAC_CONST
(0.962455213069916), FRAC_CONST(0.271440446376801) },

578 { 
FRAC_CONST
(0.958819746971130), FRAC_CONST(0.284015357494354) },

579 { 
FRAC_CONST
(0.955019950866699), FRAC_CONST(0.296541601419449) },

580 { 
FRAC_CONST
(0.951056540012360), FRAC_CONST(0.309017002582550) },

581 { 
FRAC_CONST
(0.946930110454559), FRAC_CONST(0.321439445018768) },

582 { 
FRAC_CONST
(0.942641496658325), FRAC_CONST(0.333806872367859) },

583 { 
FRAC_CONST
(0.938191354274750), FRAC_CONST(0.346117079257965) },

584 { 
FRAC_CONST
(0.933580398559570), FRAC_CONST(0.358367949724197) },

585 { 
FRAC_CONST
(0.928809583187103), FRAC_CONST(0.370557427406311) },

586 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

587 { 
FRAC_CONST
(0.918791174888611), FRAC_CONST(0.394743889570236) },

588 { 
FRAC_CONST
(0.913545429706573), FRAC_CONST(0.406736642122269) },

589 { 
FRAC_CONST
(0.908143162727356), FRAC_CONST(0.418659746646881) },

590 { 
FRAC_CONST
(0.902585268020630), FRAC_CONST(0.430511116981506) },

591 { 
FRAC_CONST
(0.896872758865356), FRAC_CONST(0.442288726568222) },

592 { 
FRAC_CONST
(0.891006529331207), FRAC_CONST(0.453990519046783) },

593 { 
FRAC_CONST
(0.884987652301788), FRAC_CONST(0.465614527463913) },

594 { 
FRAC_CONST
(0.878817081451416), FRAC_CONST(0.477158784866333) },

595 { 
FRAC_CONST
(0.872496008872986), FRAC_CONST(0.488621264696121) },

596 { 
FRAC_CONST
(0.866025388240814), FRAC_CONST(0.500000000000000) },

597 { 
FRAC_CONST
(0.859406411647797), FRAC_CONST(0.511293113231659) },

598 { 
FRAC_CONST
(0.852640151977539), FRAC_CONST(0.522498548030853) },

599 { 
FRAC_CONST
(0.845727801322937), FRAC_CONST(0.533614516258240) },

600 { 
FRAC_CONST
(0.838670551776886), FRAC_CONST(0.544639050960541) },

601 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

602 { 
FRAC_CONST
(0.824126183986664), FRAC_CONST(0.566406250000000) },

603 { 
FRAC_CONST
(0.816641509532928), FRAC_CONST(0.577145218849182) },

604 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

605 { 
FRAC_CONST
(0.801253795623779), FRAC_CONST(0.598324596881866) },

606 { 
FRAC_CONST
(0.793353319168091), FRAC_CONST(0.608761429786682) },

607 { 
FRAC_CONST
(0.785316884517670), FRAC_CONST(0.619093954563141) },

608 { 
FRAC_CONST
(0.777145922183990), FRAC_CONST(0.629320383071899) },

609 { 
FRAC_CONST
(0.768841803073883), FRAC_CONST(0.639438986778259) },

610 { 
FRAC_CONST
(0.760405957698822), FRAC_CONST(0.649448096752167) },

611 { 
FRAC_CONST
(0.751839756965637), FRAC_CONST(0.659345865249634) },

612 { 
FRAC_CONST
(0.743144810199738), FRAC_CONST(0.669130623340607) },

613 { 
FRAC_CONST
(0.734322488307953), FRAC_CONST(0.678800761699677) },

614 { 
FRAC_CONST
(0.725374400615692), FRAC_CONST(0.688354551792145) },

615 { 
FRAC_CONST
(0.716301918029785), FRAC_CONST(0.697790503501892) },

616 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

617 { 
FRAC_CONST
(0.697790443897247), FRAC_CONST(0.716301977634430) },

618 { 
FRAC_CONST
(0.688354551792145), FRAC_CONST(0.725374400615692) },

619 { 
FRAC_CONST
(0.678800702095032), FRAC_CONST(0.734322547912598) },

620 { 
FRAC_CONST
(0.669130563735962), FRAC_CONST(0.743144869804382) },

621 { 
FRAC_CONST
(0.659345805644989), FRAC_CONST(0.751839816570282) },

622 { 
FRAC_CONST
(0.649448037147522), FRAC_CONST(0.760405957698822) },

623 { 
FRAC_CONST
(0.639438986778259), FRAC_CONST(0.768841862678528) },

624 { 
FRAC_CONST
(0.629320383071899), FRAC_CONST(0.777145981788635) },

625 { 
FRAC_CONST
(0.619093954563141), FRAC_CONST(0.785316944122314) },

626 { 
FRAC_CONST
(0.608761370182037), FRAC_CONST(0.793353378772736) },

627 { 
FRAC_CONST
(0.598324596881866), FRAC_CONST(0.801253855228424) },

628 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

629 { 
FRAC_CONST
(0.577145159244537), FRAC_CONST(0.816641569137573) },

630 { 
FRAC_CONST
(0.566406250000000), FRAC_CONST(0.824126183986664) },

631 { 
FRAC_CONST
(0.555570185184479), FRAC_CONST(0.831469655036926) },

632 { 
FRAC_CONST
(0.544638991355896), FRAC_CONST(0.838670611381531) },

633 { 
FRAC_CONST
(0.533614516258240), FRAC_CONST(0.845727801322937) },

634 { 
FRAC_CONST
(0.522498488426209), FRAC_CONST(0.852640211582184) },

635 { 
FRAC_CONST
(0.511293113231659), FRAC_CONST(0.859406411647797) },

636 { 
FRAC_CONST
(0.499999970197678), FRAC_CONST(0.866025447845459) },

637 { 
FRAC_CONST
(0.488621175289154), FRAC_CONST(0.872496068477631) },

638 { 
FRAC_CONST
(0.477158755064011), FRAC_CONST(0.878817141056061) },

639 { 
FRAC_CONST
(0.465614467859268), FRAC_CONST(0.884987652301788) },

640 { 
FRAC_CONST
(0.453990519046783), FRAC_CONST(0.891006529331207) },

641 { 
FRAC_CONST
(0.442288666963577), FRAC_CONST(0.896872758865356) },

642 { 
FRAC_CONST
(0.430511027574539), FRAC_CONST(0.902585327625275) },

643 { 
FRAC_CONST
(0.418659746646881), FRAC_CONST(0.908143162727356) },

644 { 
FRAC_CONST
(0.406736612319946), FRAC_CONST(0.913545489311218) },

645 { 
FRAC_CONST
(0.394743800163269), FRAC_CONST(0.918791234493256) },

646 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

647 { 
FRAC_CONST
(0.370557397603989), FRAC_CONST(0.928809583187103) },

648 { 
FRAC_CONST
(0.358367860317230), FRAC_CONST(0.933580458164215) },

649 { 
FRAC_CONST
(0.346117049455643), FRAC_CONST(0.938191354274750) },

650 { 
FRAC_CONST
(0.333806812763214), FRAC_CONST(0.942641496658325) },

651 { 
FRAC_CONST
(0.321439474821091), FRAC_CONST(0.946930110454559) },

652 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

653 { 
FRAC_CONST
(0.296541512012482), FRAC_CONST(0.955019950866699) },

654 { 
FRAC_CONST
(0.284015327692032), FRAC_CONST(0.958819746971130) },

655 { 
FRAC_CONST
(0.271440386772156), FRAC_CONST(0.962455272674561) },

656 { 
FRAC_CONST
(0.258819073438644), FRAC_CONST(0.965925812721252) },

657 { 
FRAC_CONST
(0.246153265237808), FRAC_CONST(0.969230890274048) },

658 { 
FRAC_CONST
(0.233445301651955), FRAC_CONST(0.972369909286499) },

659 { 
FRAC_CONST
(0.220697447657585), FRAC_CONST(0.975342333316803) },

660 { 
FRAC_CONST
(0.207911655306816), FRAC_CONST(0.978147625923157) },

661 { 
FRAC_CONST
(0.195090234279633), FRAC_CONST(0.980785310268402) },

662 { 
FRAC_CONST
(0.182235524058342), FRAC_CONST(0.983254909515381) },

663 { 
FRAC_CONST
(0.169349446892738), FRAC_CONST(0.985556066036224) },

664 { 
FRAC_CONST
(0.156434372067451), FRAC_CONST(0.987688362598419) },

665 { 
FRAC_CONST
(0.143492594361305), FRAC_CONST(0.989651381969452) },

666 { 
FRAC_CONST
(0.130526125431061), FRAC_CONST(0.991444885730743) },

667 { 
FRAC_CONST
(0.117537401616573), FRAC_CONST(0.993068456649780) },

668 { 
FRAC_CONST
(0.104528419673443), FRAC_CONST(0.994521915912628) },

669 { 
FRAC_CONST
(0.091501533985138), FRAC_CONST(0.995804905891418) },

670 { 
FRAC_CONST
(0.078459084033966), FRAC_CONST(0.996917307376862) },

671 { 
FRAC_CONST
(0.065403074026108), FRAC_CONST(0.997858941555023) },

672 { 
FRAC_CONST
(0.052335973829031), FRAC_CONST(0.998629510402679) },

673 { 
FRAC_CONST
(0.039259787648916), FRAC_CONST(0.999229013919830) },

674 { 
FRAC_CONST
(0.026176875457168), FRAC_CONST(0.999657332897186) },

675 { 
FRAC_CONST
(0.013089597225189), FRAC_CONST(0.999914348125458) },

676 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

677 { 
FRAC_CONST
(-0.013089684769511), FRAC_CONST(0.999914348125458) },

678 { 
FRAC_CONST
(-0.026176963001490), FRAC_CONST(0.999657332897186) },

679 { 
FRAC_CONST
(-0.039259877055883), FRAC_CONST(0.999229013919830) },

680 { 
FRAC_CONST
(-0.052336059510708), FRAC_CONST(0.998629510402679) },

681 { 
FRAC_CONST
(-0.065403163433075), FRAC_CONST(0.997858941555023) },

682 { 
FRAC_CONST
(-0.078459173440933), FRAC_CONST(0.996917307376862) },

683 { 
FRAC_CONST
(-0.091501623392105), FRAC_CONST(0.995804905891418) },

684 { 
FRAC_CONST
(-0.104528509080410), FRAC_CONST(0.994521915912628) },

685 { 
FRAC_CONST
(-0.117537491023541), FRAC_CONST(0.993068456649780) },

686 { 
FRAC_CONST
(-0.130526214838028), FRAC_CONST(0.991444885730743) },

687 { 
FRAC_CONST
(-0.143492683768272), FRAC_CONST(0.989651381969452) },

688 { 
FRAC_CONST
(-0.156434446573257), FRAC_CONST(0.987688362598419) },

689 { 
FRAC_CONST
(-0.169349536299706), FRAC_CONST(0.985556066036224) },

690 { 
FRAC_CONST
(-0.182235598564148), FRAC_CONST(0.983254909515381) },

691 { 
FRAC_CONST
(-0.195090323686600), FRAC_CONST(0.980785250663757) },

692 { 
FRAC_CONST
(-0.207911744713783), FRAC_CONST(0.978147566318512) },

693 { 
FRAC_CONST
(-0.220697522163391), FRAC_CONST(0.975342273712158) },

694 { 
FRAC_CONST
(-0.233445391058922), FRAC_CONST(0.972369909286499) },

695 { 
FRAC_CONST
(-0.246153354644775), FRAC_CONST(0.969230890274048) },

696 { 
FRAC_CONST
(-0.258819162845612), FRAC_CONST(0.965925812721252) },

697 { 
FRAC_CONST
(-0.271440476179123), FRAC_CONST(0.962455213069916) },

698 { 
FRAC_CONST
(-0.284015417098999), FRAC_CONST(0.958819687366486) },

699 { 
FRAC_CONST
(-0.296541571617126), FRAC_CONST(0.955019950866699) },

700 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

701 { 
FRAC_CONST
(-0.321439564228058), FRAC_CONST(0.946930110454559) },

702 { 
FRAC_CONST
(-0.333806872367859), FRAC_CONST(0.942641496658325) },

703 { 
FRAC_CONST
(-0.346117109060287), FRAC_CONST(0.938191294670105) },

704 { 
FRAC_CONST
(-0.358367949724197), FRAC_CONST(0.933580458164215) },

705 { 
FRAC_CONST
(-0.370557487010956), FRAC_CONST(0.928809523582459) },

706 { 
FRAC_CONST
(-0.382683515548706), FRAC_CONST(0.923879504203796) },

707 { 
FRAC_CONST
(-0.394743859767914), FRAC_CONST(0.918791234493256) },

708 { 
FRAC_CONST
(-0.406736701726913), FRAC_CONST(0.913545429706573) },

709 { 
FRAC_CONST
(-0.418659836053848), FRAC_CONST(0.908143103122711) },

710 { 
FRAC_CONST
(-0.430511116981506), FRAC_CONST(0.902585268020630) },

711 { 
FRAC_CONST
(-0.442288637161255), FRAC_CONST(0.896872758865356) },

712 { 
FRAC_CONST
(-0.453990608453751), FRAC_CONST(0.891006469726563) },

713 { 
FRAC_CONST
(-0.465614557266235), FRAC_CONST(0.884987592697144) },

714 { 
FRAC_CONST
(-0.477158725261688), FRAC_CONST(0.878817141056061) },

715 { 
FRAC_CONST
(-0.488621354103088), FRAC_CONST(0.872495949268341) },

716 { 
FRAC_CONST
(-0.500000059604645), FRAC_CONST(0.866025388240814) },

717 { 
FRAC_CONST
(-0.511293053627014), FRAC_CONST(0.859406411647797) },

718 { 
FRAC_CONST
(-0.522498667240143), FRAC_CONST(0.852640092372894) },

719 { 
FRAC_CONST
(-0.533614575862885), FRAC_CONST(0.845727801322937) },

720 { 
FRAC_CONST
(-0.544639050960541), FRAC_CONST(0.838670551776886) },

721 { 
FRAC_CONST
(-0.555570363998413), FRAC_CONST(0.831469535827637) },

722 { 
FRAC_CONST
(-0.566406309604645), FRAC_CONST(0.824126124382019) },

723 { 
FRAC_CONST
(-0.577145218849182), FRAC_CONST(0.816641569137573) },

724 { 
FRAC_CONST
(-0.587785184383392), FRAC_CONST(0.809017002582550) },

725 { 
FRAC_CONST
(-0.598324656486511), FRAC_CONST(0.801253736019135) },

726 { 
FRAC_CONST
(-0.608761429786682), FRAC_CONST(0.793353319168091) },

727 { 
FRAC_CONST
(-0.619093894958496), FRAC_CONST(0.785316944122314) },

728 { 
FRAC_CONST
(-0.629320502281189), FRAC_CONST(0.777145862579346) },

729 { 
FRAC_CONST
(-0.639439046382904), FRAC_CONST(0.768841803073883) },

730 { 
FRAC_CONST
(-0.649448037147522), FRAC_CONST(0.760405957698822) },

731 { 
FRAC_CONST
(-0.659345924854279), FRAC_CONST(0.751839697360992) },

732 { 
FRAC_CONST
(-0.669130682945251), FRAC_CONST(0.743144810199738) },

733 { 
FRAC_CONST
(-0.678800761699677), FRAC_CONST(0.734322488307953) },

734 { 
FRAC_CONST
(-0.688354671001434), FRAC_CONST(0.725374281406403) },

735 { 
FRAC_CONST
(-0.697790503501892), FRAC_CONST(0.716301858425140) },

736 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

737 { 
FRAC_CONST
(-0.716302037239075), FRAC_CONST(0.697790324687958) },

738 { 
FRAC_CONST
(-0.725374460220337), FRAC_CONST(0.688354492187500) },

739 { 
FRAC_CONST
(-0.734322547912598), FRAC_CONST(0.678800702095032) },

740 { 
FRAC_CONST
(-0.743144929409027), FRAC_CONST(0.669130444526672) },

741 { 
FRAC_CONST
(-0.751839876174927), FRAC_CONST(0.659345746040344) },

742 { 
FRAC_CONST
(-0.760406017303467), FRAC_CONST(0.649448037147522) },

743 { 
FRAC_CONST
(-0.768841803073883), FRAC_CONST(0.639439046382904) },

744 { 
FRAC_CONST
(-0.777146041393280), FRAC_CONST(0.629320263862610) },

745 { 
FRAC_CONST
(-0.785316944122314), FRAC_CONST(0.619093894958496) },

746 { 
FRAC_CONST
(-0.793353319168091), FRAC_CONST(0.608761429786682) },

747 { 
FRAC_CONST
(-0.801253914833069), FRAC_CONST(0.598324477672577) },

748 { 
FRAC_CONST
(-0.809017062187195), FRAC_CONST(0.587785184383392) },

749 { 
FRAC_CONST
(-0.816641569137573), FRAC_CONST(0.577145218849182) },

750 { 
FRAC_CONST
(-0.824126303195953), FRAC_CONST(0.566406130790710) },

751 { 
FRAC_CONST
(-0.831469655036926), FRAC_CONST(0.555570185184479) },

752 { 
FRAC_CONST
(-0.838670551776886), FRAC_CONST(0.544639050960541) },

753 { 
FRAC_CONST
(-0.845727920532227), FRAC_CONST(0.533614337444305) },

754 { 
FRAC_CONST
(-0.852640211582184), FRAC_CONST(0.522498488426209) },

755 { 
FRAC_CONST
(-0.859406411647797), FRAC_CONST(0.511293053627014) },

756 { 
FRAC_CONST
(-0.866025388240814), FRAC_CONST(0.500000059604645) },

757 { 
FRAC_CONST
(-0.872496068477631), FRAC_CONST(0.488621145486832) },

758 { 
FRAC_CONST
(-0.878817141056061), FRAC_CONST(0.477158725261688) },

759 { 
FRAC_CONST
(-0.884987652301788), FRAC_CONST(0.465614557266235) },

760 { 
FRAC_CONST
(-0.891006588935852), FRAC_CONST(0.453990370035172) },

761 { 
FRAC_CONST
(-0.896872758865356), FRAC_CONST(0.442288637161255) },

762 { 
FRAC_CONST
(-0.902585268020630), FRAC_CONST(0.430511116981506) },

763 { 
FRAC_CONST
(-0.908143222332001), FRAC_CONST(0.418659597635269) },

764 { 
FRAC_CONST
(-0.913545489311218), FRAC_CONST(0.406736582517624) },

765 { 
FRAC_CONST
(-0.918791234493256), FRAC_CONST(0.394743859767914) },

766 { 
FRAC_CONST
(-0.923879623413086), FRAC_CONST(0.382683277130127) },

767 { 
FRAC_CONST
(-0.928809583187103), FRAC_CONST(0.370557337999344) },

768 { 
FRAC_CONST
(-0.933580458164215), FRAC_CONST(0.358367919921875) },

769 { 
FRAC_CONST
(-0.938191413879395), FRAC_CONST(0.346116900444031) },

770 { 
FRAC_CONST
(-0.942641556262970), FRAC_CONST(0.333806753158569) },

771 { 
FRAC_CONST
(-0.946930170059204), FRAC_CONST(0.321439445018768) },

772 { 
FRAC_CONST
(-0.951056599617004), FRAC_CONST(0.309016793966293) },

773 { 
FRAC_CONST
(-0.955020010471344), FRAC_CONST(0.296541452407837) },

774 { 
FRAC_CONST
(-0.958819746971130), FRAC_CONST(0.284015297889709) },

775 { 
FRAC_CONST
(-0.962455213069916), FRAC_CONST(0.271440476179123) },

776 { 
FRAC_CONST
(-0.965925872325897), FRAC_CONST(0.258818924427032) },

777 { 
FRAC_CONST
(-0.969230949878693), FRAC_CONST(0.246153235435486) },

778 { 
FRAC_CONST
(-0.972369909286499), FRAC_CONST(0.233445376157761) },

779 { 
FRAC_CONST
(-0.975342333316803), FRAC_CONST(0.220697283744812) },

780 { 
FRAC_CONST
(-0.978147625923157), FRAC_CONST(0.207911610603333) },

781 { 
FRAC_CONST
(-0.980785310268402), FRAC_CONST(0.195090308785439) },

782 { 
FRAC_CONST
(-0.983254909515381), FRAC_CONST(0.182235360145569) },

783 { 
FRAC_CONST
(-0.985556066036224), FRAC_CONST(0.169349402189255) },

784 { 
FRAC_CONST
(-0.987688362598419), FRAC_CONST(0.156434446573257) },

785 { 
FRAC_CONST
(-0.989651441574097), FRAC_CONST(0.143492430448532) },

786 { 
FRAC_CONST
(-0.991444885730743), FRAC_CONST(0.130526080727577) },

787 { 
FRAC_CONST
(-0.993068456649780), FRAC_CONST(0.117537356913090) },

788 { 
FRAC_CONST
(-0.994521915912628), FRAC_CONST(0.104528494179249) },

789 { 
FRAC_CONST
(-0.995804965496063), FRAC_CONST(0.091501489281654) },

790 { 
FRAC_CONST
(-0.996917366981506), FRAC_CONST(0.078459039330482) },

791 { 
FRAC_CONST
(-0.997858941555023), FRAC_CONST(0.065403148531914) },

792 { 
FRAC_CONST
(-0.998629570007324), FRAC_CONST(0.052335809916258) },

793 { 
FRAC_CONST
(-0.999229013919830), FRAC_CONST(0.039259742945433) },

794 { 
FRAC_CONST
(-0.999657332897186), FRAC_CONST(0.026176951825619) },

795 { 
FRAC_CONST
(-0.999914348125458), FRAC_CONST(0.013089434243739) },

796 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

797 { 
FRAC_CONST
(0.999657332897186), FRAC_CONST(0.026176949962974) },

798 { 
FRAC_CONST
(0.998629510402679), FRAC_CONST(0.052335958927870) },

799 { 
FRAC_CONST
(0.996917307376862), FRAC_CONST(0.078459098935127) },

800 { 
FRAC_CONST
(0.994521915912628), FRAC_CONST(0.104528464376926) },

801 { 
FRAC_CONST
(0.991444885730743), FRAC_CONST(0.130526199936867) },

802 { 
FRAC_CONST
(0.987688362598419), FRAC_CONST(0.156434476375580) },

803 { 
FRAC_CONST
(0.983254909515381), FRAC_CONST(0.182235524058342) },

804 { 
FRAC_CONST
(0.978147625923157), FRAC_CONST(0.207911700010300) },

805 { 
FRAC_CONST
(0.972369909286499), FRAC_CONST(0.233445376157761) },

806 { 
FRAC_CONST
(0.965925812721252), FRAC_CONST(0.258819043636322) },

807 { 
FRAC_CONST
(0.958819746971130), FRAC_CONST(0.284015357494354) },

808 { 
FRAC_CONST
(0.951056540012360), FRAC_CONST(0.309017002582550) },

809 { 
FRAC_CONST
(0.942641496658325), FRAC_CONST(0.333806872367859) },

810 { 
FRAC_CONST
(0.933580398559570), FRAC_CONST(0.358367949724197) },

811 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

812 { 
FRAC_CONST
(0.913545429706573), FRAC_CONST(0.406736642122269) },

813 { 
FRAC_CONST
(0.902585268020630), FRAC_CONST(0.430511116981506) },

814 { 
FRAC_CONST
(0.891006529331207), FRAC_CONST(0.453990519046783) },

815 { 
FRAC_CONST
(0.878817081451416), FRAC_CONST(0.477158784866333) },

816 { 
FRAC_CONST
(0.866025388240814), FRAC_CONST(0.500000000000000) },

817 { 
FRAC_CONST
(0.852640151977539), FRAC_CONST(0.522498548030853) },

818 { 
FRAC_CONST
(0.838670551776886), FRAC_CONST(0.544639050960541) },

819 { 
FRAC_CONST
(0.824126183986664), FRAC_CONST(0.566406250000000) },

820 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

821 { 
FRAC_CONST
(0.793353319168091), FRAC_CONST(0.608761429786682) },

822 { 
FRAC_CONST
(0.777145922183990), FRAC_CONST(0.629320383071899) },

823 { 
FRAC_CONST
(0.760405957698822), FRAC_CONST(0.649448096752167) },

824 { 
FRAC_CONST
(0.743144810199738), FRAC_CONST(0.669130623340607) },

825 { 
FRAC_CONST
(0.725374400615692), FRAC_CONST(0.688354551792145) },

826 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

827 { 
FRAC_CONST
(0.688354551792145), FRAC_CONST(0.725374400615692) },

828 { 
FRAC_CONST
(0.669130563735962), FRAC_CONST(0.743144869804382) },

829 { 
FRAC_CONST
(0.649448037147522), FRAC_CONST(0.760405957698822) },

830 { 
FRAC_CONST
(0.629320383071899), FRAC_CONST(0.777145981788635) },

831 { 
FRAC_CONST
(0.608761370182037), FRAC_CONST(0.793353378772736) },

832 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

833 { 
FRAC_CONST
(0.566406250000000), FRAC_CONST(0.824126183986664) },

834 { 
FRAC_CONST
(0.544638991355896), FRAC_CONST(0.838670611381531) },

835 { 
FRAC_CONST
(0.522498488426209), FRAC_CONST(0.852640211582184) },

836 { 
FRAC_CONST
(0.499999970197678), FRAC_CONST(0.866025447845459) },

837 { 
FRAC_CONST
(0.477158755064011), FRAC_CONST(0.878817141056061) },

838 { 
FRAC_CONST
(0.453990519046783), FRAC_CONST(0.891006529331207) },

839 { 
FRAC_CONST
(0.430511027574539), FRAC_CONST(0.902585327625275) },

840 { 
FRAC_CONST
(0.406736612319946), FRAC_CONST(0.913545489311218) },

841 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

842 { 
FRAC_CONST
(0.358367860317230), FRAC_CONST(0.933580458164215) },

843 { 
FRAC_CONST
(0.333806812763214), FRAC_CONST(0.942641496658325) },

844 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

845 { 
FRAC_CONST
(0.284015327692032), FRAC_CONST(0.958819746971130) },

846 { 
FRAC_CONST
(0.258819073438644), FRAC_CONST(0.965925812721252) },

847 { 
FRAC_CONST
(0.233445301651955), FRAC_CONST(0.972369909286499) },

848 { 
FRAC_CONST
(0.207911655306816), FRAC_CONST(0.978147625923157) },

849 { 
FRAC_CONST
(0.182235524058342), FRAC_CONST(0.983254909515381) },

850 { 
FRAC_CONST
(0.156434372067451), FRAC_CONST(0.987688362598419) },

851 { 
FRAC_CONST
(0.130526125431061), FRAC_CONST(0.991444885730743) },

852 { 
FRAC_CONST
(0.104528419673443), FRAC_CONST(0.994521915912628) },

853 { 
FRAC_CONST
(0.078459084033966), FRAC_CONST(0.996917307376862) },

854 { 
FRAC_CONST
(0.052335973829031), FRAC_CONST(0.998629510402679) },

855 { 
FRAC_CONST
(0.026176875457168), FRAC_CONST(0.999657332897186) },

856 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

857 { 
FRAC_CONST
(-0.026176963001490), FRAC_CONST(0.999657332897186) },

858 { 
FRAC_CONST
(-0.052336059510708), FRAC_CONST(0.998629510402679) },

859 { 
FRAC_CONST
(-0.078459173440933), FRAC_CONST(0.996917307376862) },

860 { 
FRAC_CONST
(-0.104528509080410), FRAC_CONST(0.994521915912628) },

861 { 
FRAC_CONST
(-0.130526214838028), FRAC_CONST(0.991444885730743) },

862 { 
FRAC_CONST
(-0.156434446573257), FRAC_CONST(0.987688362598419) },

863 { 
FRAC_CONST
(-0.182235598564148), FRAC_CONST(0.983254909515381) },

864 { 
FRAC_CONST
(-0.207911744713783), FRAC_CONST(0.978147566318512) },

865 { 
FRAC_CONST
(-0.233445391058922), FRAC_CONST(0.972369909286499) },

866 { 
FRAC_CONST
(-0.258819162845612), FRAC_CONST(0.965925812721252) },

867 { 
FRAC_CONST
(-0.284015417098999), FRAC_CONST(0.958819687366486) },

868 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

869 { 
FRAC_CONST
(-0.333806872367859), FRAC_CONST(0.942641496658325) },

870 { 
FRAC_CONST
(-0.358367949724197), FRAC_CONST(0.933580458164215) },

871 { 
FRAC_CONST
(-0.382683515548706), FRAC_CONST(0.923879504203796) },

872 { 
FRAC_CONST
(-0.406736701726913), FRAC_CONST(0.913545429706573) },

873 { 
FRAC_CONST
(-0.430511116981506), FRAC_CONST(0.902585268020630) },

874 { 
FRAC_CONST
(-0.453990608453751), FRAC_CONST(0.891006469726563) },

875 { 
FRAC_CONST
(-0.477158725261688), FRAC_CONST(0.878817141056061) },

876 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

877 { 
FRAC_CONST
(0.998629510402679), FRAC_CONST(0.052335958927870) },

878 { 
FRAC_CONST
(0.994521915912628), FRAC_CONST(0.104528464376926) },

879 { 
FRAC_CONST
(0.987688362598419), FRAC_CONST(0.156434476375580) },

880 { 
FRAC_CONST
(0.978147625923157), FRAC_CONST(0.207911700010300) },

881 { 
FRAC_CONST
(0.965925812721252), FRAC_CONST(0.258819043636322) },

882 { 
FRAC_CONST
(0.951056540012360), FRAC_CONST(0.309017002582550) },

883 { 
FRAC_CONST
(0.933580398559570), FRAC_CONST(0.358367949724197) },

884 { 
FRAC_CONST
(0.913545429706573), FRAC_CONST(0.406736642122269) },

885 { 
FRAC_CONST
(0.891006529331207), FRAC_CONST(0.453990519046783) },

886 { 
FRAC_CONST
(0.866025388240814), FRAC_CONST(0.500000000000000) },

887 { 
FRAC_CONST
(0.838670551776886), FRAC_CONST(0.544639050960541) },

888 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

889 { 
FRAC_CONST
(0.777145922183990), FRAC_CONST(0.629320383071899) },

890 { 
FRAC_CONST
(0.743144810199738), FRAC_CONST(0.669130623340607) },

891 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

892 { 
FRAC_CONST
(0.669130563735962), FRAC_CONST(0.743144869804382) },

893 { 
FRAC_CONST
(0.629320383071899), FRAC_CONST(0.777145981788635) },

894 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

895 { 
FRAC_CONST
(0.544638991355896), FRAC_CONST(0.838670611381531) },

896 { 
FRAC_CONST
(0.499999970197678), FRAC_CONST(0.866025447845459) },

897 { 
FRAC_CONST
(0.453990519046783), FRAC_CONST(0.891006529331207) },

898 { 
FRAC_CONST
(0.406736612319946), FRAC_CONST(0.913545489311218) },

899 { 
FRAC_CONST
(0.358367860317230), FRAC_CONST(0.933580458164215) },

900 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

901 { 
FRAC_CONST
(0.258819073438644), FRAC_CONST(0.965925812721252) },

902 { 
FRAC_CONST
(0.207911655306816), FRAC_CONST(0.978147625923157) },

903 { 
FRAC_CONST
(0.156434372067451), FRAC_CONST(0.987688362598419) },

904 { 
FRAC_CONST
(0.104528419673443), FRAC_CONST(0.994521915912628) },

905 { 
FRAC_CONST
(0.052335973829031), FRAC_CONST(0.998629510402679) },

906 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

907 { 
FRAC_CONST
(-0.052336059510708), FRAC_CONST(0.998629510402679) },

908 { 
FRAC_CONST
(-0.104528509080410), FRAC_CONST(0.994521915912628) },

909 { 
FRAC_CONST
(-0.156434446573257), FRAC_CONST(0.987688362598419) },

910 { 
FRAC_CONST
(-0.207911744713783), FRAC_CONST(0.978147566318512) },

911 { 
FRAC_CONST
(-0.258819162845612), FRAC_CONST(0.965925812721252) },

912 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

913 { 
FRAC_CONST
(-0.358367949724197), FRAC_CONST(0.933580458164215) },

914 { 
FRAC_CONST
(-0.406736701726913), FRAC_CONST(0.913545429706573) },

915 { 
FRAC_CONST
(-0.453990608453751), FRAC_CONST(0.891006469726563) },

916 { 
FRAC_CONST
(-0.500000059604645), FRAC_CONST(0.866025388240814) },

917 { 
FRAC_CONST
(-0.544639050960541), FRAC_CONST(0.838670551776886) },

918 { 
FRAC_CONST
(-0.587785184383392), FRAC_CONST(0.809017002582550) },

919 { 
FRAC_CONST
(-0.629320502281189), FRAC_CONST(0.777145862579346) },

920 { 
FRAC_CONST
(-0.669130682945251), FRAC_CONST(0.743144810199738) },

921 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

922 { 
FRAC_CONST
(-0.743144929409027), FRAC_CONST(0.669130444526672) },

923 { 
FRAC_CONST
(-0.777146041393280), FRAC_CONST(0.629320263862610) },

924 { 
FRAC_CONST
(-0.809017062187195), FRAC_CONST(0.587785184383392) },

925 { 
FRAC_CONST
(-0.838670551776886), FRAC_CONST(0.544639050960541) },

926 { 
FRAC_CONST
(-0.866025388240814), FRAC_CONST(0.500000059604645) },

927 { 
FRAC_CONST
(-0.891006588935852), FRAC_CONST(0.453990370035172) },

928 { 
FRAC_CONST
(-0.913545489311218), FRAC_CONST(0.406736582517624) },

929 { 
FRAC_CONST
(-0.933580458164215), FRAC_CONST(0.358367919921875) },

930 { 
FRAC_CONST
(-0.951056599617004), FRAC_CONST(0.309016793966293) },

931 { 
FRAC_CONST
(-0.965925872325897), FRAC_CONST(0.258818924427032) },

932 { 
FRAC_CONST
(-0.978147625923157), FRAC_CONST(0.207911610603333) },

933 { 
FRAC_CONST
(-0.987688362598419), FRAC_CONST(0.156434446573257) },

934 { 
FRAC_CONST
(-0.994521915912628), FRAC_CONST(0.104528494179249) },

935 { 
FRAC_CONST
(-0.998629570007324), FRAC_CONST(0.052335809916258) },

936 { 
FRAC_CONST
(-1.000000000000000), FRAC_CONST(-0.000000087422777) },

937 { 
FRAC_CONST
(-0.998629510402679), FRAC_CONST(-0.052335985004902) },

938 { 
FRAC_CONST
(-0.994521856307983), FRAC_CONST(-0.104528672993183) },

939 { 
FRAC_CONST
(-0.987688302993774), FRAC_CONST(-0.156434610486031) },

940 { 
FRAC_CONST
(-0.978147566318512), FRAC_CONST(-0.207911789417267) },

941 { 
FRAC_CONST
(-0.965925812721252), FRAC_CONST(-0.258819073438644) },

942 { 
FRAC_CONST
(-0.951056540012360), FRAC_CONST(-0.309016972780228) },

943 { 
FRAC_CONST
(-0.933580398559570), FRAC_CONST(-0.358368098735809) },

944 { 
FRAC_CONST
(-0.913545429706573), FRAC_CONST(-0.406736731529236) },

945 { 
FRAC_CONST
(-0.891006529331207), FRAC_CONST(-0.453990548849106) },

946 { 
FRAC_CONST
(-0.866025269031525), FRAC_CONST(-0.500000178813934) },

947 { 
FRAC_CONST
(-0.838670492172241), FRAC_CONST(-0.544639170169830) },

948 { 
FRAC_CONST
(-0.809016942977905), FRAC_CONST(-0.587785363197327) },

949 { 
FRAC_CONST
(-0.777145922183990), FRAC_CONST(-0.629320442676544) },

950 { 
FRAC_CONST
(-0.743144810199738), FRAC_CONST(-0.669130623340607) },

951 { 
FRAC_CONST
(-0.707106649875641), FRAC_CONST(-0.707106888294220) },

952 { 
FRAC_CONST
(-0.669130504131317), FRAC_CONST(-0.743144869804382) },

953 { 
FRAC_CONST
(-0.629320323467255), FRAC_CONST(-0.777145981788635) },

954 { 
FRAC_CONST
(-0.587785065174103), FRAC_CONST(-0.809017121791840) },

955 { 
FRAC_CONST
(-0.544639110565186), FRAC_CONST(-0.838670551776886) },

956 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

957 { 
FRAC_CONST
(0.996917307376862), FRAC_CONST(0.078459098935127) },

958 { 
FRAC_CONST
(0.987688362598419), FRAC_CONST(0.156434476375580) },

959 { 
FRAC_CONST
(0.972369909286499), FRAC_CONST(0.233445376157761) },

960 { 
FRAC_CONST
(0.951056540012360), FRAC_CONST(0.309017002582550) },

961 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

962 { 
FRAC_CONST
(0.891006529331207), FRAC_CONST(0.453990519046783) },

963 { 
FRAC_CONST
(0.852640151977539), FRAC_CONST(0.522498548030853) },

964 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

965 { 
FRAC_CONST
(0.760405957698822), FRAC_CONST(0.649448096752167) },

966 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

967 { 
FRAC_CONST
(0.649448037147522), FRAC_CONST(0.760405957698822) },

968 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

969 { 
FRAC_CONST
(0.522498488426209), FRAC_CONST(0.852640211582184) },

970 { 
FRAC_CONST
(0.453990519046783), FRAC_CONST(0.891006529331207) },

971 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

972 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

973 { 
FRAC_CONST
(0.233445301651955), FRAC_CONST(0.972369909286499) },

974 { 
FRAC_CONST
(0.156434372067451), FRAC_CONST(0.987688362598419) },

975 { 
FRAC_CONST
(0.078459084033966), FRAC_CONST(0.996917307376862) },

976 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

977 { 
FRAC_CONST
(0.987688362598419), FRAC_CONST(0.156434476375580) },

978 { 
FRAC_CONST
(0.951056540012360), FRAC_CONST(0.309017002582550) },

979 { 
FRAC_CONST
(0.891006529331207), FRAC_CONST(0.453990519046783) },

980 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

981 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

982 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

983 { 
FRAC_CONST
(0.453990519046783), FRAC_CONST(0.891006529331207) },

984 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

985 { 
FRAC_CONST
(0.156434372067451), FRAC_CONST(0.987688362598419) },

986 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

987 { 
FRAC_CONST
(-0.156434446573257), FRAC_CONST(0.987688362598419) },

988 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

989 { 
FRAC_CONST
(-0.453990608453751), FRAC_CONST(0.891006469726563) },

990 { 
FRAC_CONST
(-0.587785184383392), FRAC_CONST(0.809017002582550) },

991 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

992 { 
FRAC_CONST
(-0.809017062187195), FRAC_CONST(0.587785184383392) },

993 { 
FRAC_CONST
(-0.891006588935852), FRAC_CONST(0.453990370035172) },

994 { 
FRAC_CONST
(-0.951056599617004), FRAC_CONST(0.309016793966293) },

995 { 
FRAC_CONST
(-0.987688362598419), FRAC_CONST(0.156434446573257) },

996 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

997 { 
FRAC_CONST
(0.972369909286499), FRAC_CONST(0.233445376157761) },

998 { 
FRAC_CONST
(0.891006529331207), FRAC_CONST(0.453990519046783) },

999 { 
FRAC_CONST
(0.760405957698822), FRAC_CONST(0.649448096752167) },

1000 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

1001 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1002 { 
FRAC_CONST
(0.156434372067451), FRAC_CONST(0.987688362598419) },

1003 { 
FRAC_CONST
(-0.078459173440933), FRAC_CONST(0.996917307376862) },

1004 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

1005 { 
FRAC_CONST
(-0.522498667240143), FRAC_CONST(0.852640092372894) },

1006 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1007 { 
FRAC_CONST
(-0.852640211582184), FRAC_CONST(0.522498488426209) },

1008 { 
FRAC_CONST
(-0.951056599617004), FRAC_CONST(0.309016793966293) },

1009 { 
FRAC_CONST
(-0.996917366981506), FRAC_CONST(0.078459039330482) },

1010 { 
FRAC_CONST
(-0.987688302993774), FRAC_CONST(-0.156434610486031) },

1011 { 
FRAC_CONST
(-0.923879504203796), FRAC_CONST(-0.382683426141739) },

1012 { 
FRAC_CONST
(-0.809016942977905), FRAC_CONST(-0.587785363197327) },

1013 { 
FRAC_CONST
(-0.649447917938232), FRAC_CONST(-0.760406076908112) },

1014 { 
FRAC_CONST
(-0.453990221023560), FRAC_CONST(-0.891006648540497) },

1015 { 
FRAC_CONST
(-0.233445450663567), FRAC_CONST(-0.972369909286499) },

1016 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1017 { 
FRAC_CONST
(0.951056540012360), FRAC_CONST(0.309017002582550) },

1018 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

1019 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

1020 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

1021 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1022 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

1023 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

1024 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

1025 { 
FRAC_CONST
(-0.809017062187195), FRAC_CONST(0.587785184383392) },

1026 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1027 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

1028 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

1029 { 
FRAC_CONST
(-0.951056599617004), FRAC_CONST(0.309016793966293) },

1030 { 
FRAC_CONST
(-0.809016942977905), FRAC_CONST(-0.587785363197327) },

1031 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1032 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1033 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1034 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1035 { 
FRAC_CONST
(0.309017121791840), FRAC_CONST(-0.951056480407715) }

1039 
ALIGN
 c⁄° 
com∂ex_t
 
	gcf·_èb_64
[] =

1041 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1042 { 
FRAC_CONST
(0.995184719562531), FRAC_CONST(0.098017141222954) },

1043 { 
FRAC_CONST
(0.980785250663757), FRAC_CONST(0.195090323686600) },

1044 { 
FRAC_CONST
(0.956940352916718), FRAC_CONST(0.290284663438797) },

1045 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

1046 { 
FRAC_CONST
(0.881921231746674), FRAC_CONST(0.471396744251251) },

1047 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

1048 { 
FRAC_CONST
(0.773010432720184), FRAC_CONST(0.634393334388733) },

1049 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1050 { 
FRAC_CONST
(0.634393274784088), FRAC_CONST(0.773010432720184) },

1051 { 
FRAC_CONST
(0.555570185184479), FRAC_CONST(0.831469655036926) },

1052 { 
FRAC_CONST
(0.471396654844284), FRAC_CONST(0.881921291351318) },

1053 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1054 { 
FRAC_CONST
(0.290284633636475), FRAC_CONST(0.956940352916718) },

1055 { 
FRAC_CONST
(0.195090234279633), FRAC_CONST(0.980785310268402) },

1056 { 
FRAC_CONST
(0.098017133772373), FRAC_CONST(0.995184719562531) },

1057 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1058 { 
FRAC_CONST
(0.980785250663757), FRAC_CONST(0.195090323686600) },

1059 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

1060 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

1061 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1062 { 
FRAC_CONST
(0.555570185184479), FRAC_CONST(0.831469655036926) },

1063 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1064 { 
FRAC_CONST
(0.195090234279633), FRAC_CONST(0.980785310268402) },

1065 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

1066 { 
FRAC_CONST
(-0.195090323686600), FRAC_CONST(0.980785250663757) },

1067 { 
FRAC_CONST
(-0.382683515548706), FRAC_CONST(0.923879504203796) },

1068 { 
FRAC_CONST
(-0.555570363998413), FRAC_CONST(0.831469535827637) },

1069 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1070 { 
FRAC_CONST
(-0.831469655036926), FRAC_CONST(0.555570185184479) },

1071 { 
FRAC_CONST
(-0.923879623413086), FRAC_CONST(0.382683277130127) },

1072 { 
FRAC_CONST
(-0.980785310268402), FRAC_CONST(0.195090308785439) },

1073 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1074 { 
FRAC_CONST
(0.956940352916718), FRAC_CONST(0.290284663438797) },

1075 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

1076 { 
FRAC_CONST
(0.634393274784088), FRAC_CONST(0.773010432720184) },

1077 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1078 { 
FRAC_CONST
(0.098017133772373), FRAC_CONST(0.995184719562531) },

1079 { 
FRAC_CONST
(-0.195090323686600), FRAC_CONST(0.980785250663757) },

1080 { 
FRAC_CONST
(-0.471396833658218), FRAC_CONST(0.881921231746674) },

1081 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1082 { 
FRAC_CONST
(-0.881921231746674), FRAC_CONST(0.471396833658218) },

1083 { 
FRAC_CONST
(-0.980785310268402), FRAC_CONST(0.195090308785439) },

1084 { 
FRAC_CONST
(-0.995184719562531), FRAC_CONST(-0.098017267882824) },

1085 { 
FRAC_CONST
(-0.923879504203796), FRAC_CONST(-0.382683426141739) },

1086 { 
FRAC_CONST
(-0.773010551929474), FRAC_CONST(-0.634393215179443) },

1087 { 
FRAC_CONST
(-0.555570006370544), FRAC_CONST(-0.831469774246216) },

1088 { 
FRAC_CONST
(-0.290284544229507), FRAC_CONST(-0.956940352916718) },

1089 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1090 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

1091 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1092 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1093 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1094 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1095 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

1096 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1097 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1098 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1099 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1100 { 
FRAC_CONST
(-0.923879504203796), FRAC_CONST(-0.382683426141739) },

1101 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1102 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1103 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1104 { 
FRAC_CONST
(0.000000011924881), FRAC_CONST(-1.000000000000000) }

1107 #ifde‡
ALLOW_SMALL_FRAMELENGTH


1108 
ALIGN
 c⁄° 
com∂ex_t
 
	gcf·_èb_60
[] =

1110 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1111 { 
FRAC_CONST
(0.994521915912628), FRAC_CONST(0.104528464376926) },

1112 { 
FRAC_CONST
(0.978147625923157), FRAC_CONST(0.207911700010300) },

1113 { 
FRAC_CONST
(0.951056540012360), FRAC_CONST(0.309017002582550) },

1114 { 
FRAC_CONST
(0.913545429706573), FRAC_CONST(0.406736642122269) },

1115 { 
FRAC_CONST
(0.866025388240814), FRAC_CONST(0.500000000000000) },

1116 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

1117 { 
FRAC_CONST
(0.743144810199738), FRAC_CONST(0.669130623340607) },

1118 { 
FRAC_CONST
(0.669130563735962), FRAC_CONST(0.743144869804382) },

1119 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

1120 { 
FRAC_CONST
(0.499999970197678), FRAC_CONST(0.866025447845459) },

1121 { 
FRAC_CONST
(0.406736612319946), FRAC_CONST(0.913545489311218) },

1122 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

1123 { 
FRAC_CONST
(0.207911655306816), FRAC_CONST(0.978147625923157) },

1124 { 
FRAC_CONST
(0.104528419673443), FRAC_CONST(0.994521915912628) },

1125 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

1126 { 
FRAC_CONST
(-0.104528509080410), FRAC_CONST(0.994521915912628) },

1127 { 
FRAC_CONST
(-0.207911744713783), FRAC_CONST(0.978147566318512) },

1128 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

1129 { 
FRAC_CONST
(-0.406736701726913), FRAC_CONST(0.913545429706573) },

1130 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1131 { 
FRAC_CONST
(0.978147625923157), FRAC_CONST(0.207911700010300) },

1132 { 
FRAC_CONST
(0.913545429706573), FRAC_CONST(0.406736642122269) },

1133 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

1134 { 
FRAC_CONST
(0.669130563735962), FRAC_CONST(0.743144869804382) },

1135 { 
FRAC_CONST
(0.499999970197678), FRAC_CONST(0.866025447845459) },

1136 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

1137 { 
FRAC_CONST
(0.104528419673443), FRAC_CONST(0.994521915912628) },

1138 { 
FRAC_CONST
(-0.104528509080410), FRAC_CONST(0.994521915912628) },

1139 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

1140 { 
FRAC_CONST
(-0.500000059604645), FRAC_CONST(0.866025388240814) },

1141 { 
FRAC_CONST
(-0.669130682945251), FRAC_CONST(0.743144810199738) },

1142 { 
FRAC_CONST
(-0.809017062187195), FRAC_CONST(0.587785184383392) },

1143 { 
FRAC_CONST
(-0.913545489311218), FRAC_CONST(0.406736582517624) },

1144 { 
FRAC_CONST
(-0.978147625923157), FRAC_CONST(0.207911610603333) },

1145 { 
FRAC_CONST
(-1.000000000000000), FRAC_CONST(-0.000000087422777) },

1146 { 
FRAC_CONST
(-0.978147566318512), FRAC_CONST(-0.207911789417267) },

1147 { 
FRAC_CONST
(-0.913545429706573), FRAC_CONST(-0.406736731529236) },

1148 { 
FRAC_CONST
(-0.809016942977905), FRAC_CONST(-0.587785363197327) },

1149 { 
FRAC_CONST
(-0.669130504131317), FRAC_CONST(-0.743144869804382) },

1150 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1151 { 
FRAC_CONST
(0.951056540012360), FRAC_CONST(0.309017002582550) },

1152 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

1153 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

1154 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

1155 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1156 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

1157 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

1158 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

1159 { 
FRAC_CONST
(-0.809017062187195), FRAC_CONST(0.587785184383392) },

1160 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1161 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

1162 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

1163 { 
FRAC_CONST
(-0.951056599617004), FRAC_CONST(0.309016793966293) },

1164 { 
FRAC_CONST
(-0.809016942977905), FRAC_CONST(-0.587785363197327) },

1165 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1166 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1167 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1168 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1169 { 
FRAC_CONST
(0.309017121791840), FRAC_CONST(-0.951056480407715) }

1173 #ifde‡
LD_DEC


1175 
ALIGN
 c⁄° 
com∂ex_t
 
	gcf·_èb_256
[] =

1177 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1178 { 
FRAC_CONST
(0.999698817729950), FRAC_CONST(0.024541229009628) },

1179 { 
FRAC_CONST
(0.998795449733734), FRAC_CONST(0.049067676067352) },

1180 { 
FRAC_CONST
(0.997290432453156), FRAC_CONST(0.073564566671848) },

1181 { 
FRAC_CONST
(0.995184719562531), FRAC_CONST(0.098017141222954) },

1182 { 
FRAC_CONST
(0.992479562759399), FRAC_CONST(0.122410677373409) },

1183 { 
FRAC_CONST
(0.989176511764526), FRAC_CONST(0.146730467677116) },

1184 { 
FRAC_CONST
(0.985277652740479), FRAC_CONST(0.170961901545525) },

1185 { 
FRAC_CONST
(0.980785250663757), FRAC_CONST(0.195090323686600) },

1186 { 
FRAC_CONST
(0.975702106952667), FRAC_CONST(0.219101235270500) },

1187 { 
FRAC_CONST
(0.970031261444092), FRAC_CONST(0.242980197072029) },

1188 { 
FRAC_CONST
(0.963776051998138), FRAC_CONST(0.266712784767151) },

1189 { 
FRAC_CONST
(0.956940352916718), FRAC_CONST(0.290284663438797) },

1190 { 
FRAC_CONST
(0.949528157711029), FRAC_CONST(0.313681751489639) },

1191 { 
FRAC_CONST
(0.941544055938721), FRAC_CONST(0.336889863014221) },

1192 { 
FRAC_CONST
(0.932992815971375), FRAC_CONST(0.359895050525665) },

1193 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

1194 { 
FRAC_CONST
(0.914209723472595), FRAC_CONST(0.405241340398788) },

1195 { 
FRAC_CONST
(0.903989315032959), FRAC_CONST(0.427555084228516) },

1196 { 
FRAC_CONST
(0.893224298954010), FRAC_CONST(0.449611335992813) },

1197 { 
FRAC_CONST
(0.881921231746674), FRAC_CONST(0.471396744251251) },

1198 { 
FRAC_CONST
(0.870086967945099), FRAC_CONST(0.492898225784302) },

1199 { 
FRAC_CONST
(0.857728600502014), FRAC_CONST(0.514102756977081) },

1200 { 
FRAC_CONST
(0.844853579998016), FRAC_CONST(0.534997642040253) },

1201 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

1202 { 
FRAC_CONST
(0.817584812641144), FRAC_CONST(0.575808227062225) },

1203 { 
FRAC_CONST
(0.803207516670227), FRAC_CONST(0.595699310302734) },

1204 { 
FRAC_CONST
(0.788346409797668), FRAC_CONST(0.615231633186340) },

1205 { 
FRAC_CONST
(0.773010432720184), FRAC_CONST(0.634393334388733) },

1206 { 
FRAC_CONST
(0.757208824157715), FRAC_CONST(0.653172850608826) },

1207 { 
FRAC_CONST
(0.740951120853424), FRAC_CONST(0.671558976173401) },

1208 { 
FRAC_CONST
(0.724247097969055), FRAC_CONST(0.689540565013886) },

1209 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1210 { 
FRAC_CONST
(0.689540505409241), FRAC_CONST(0.724247097969055) },

1211 { 
FRAC_CONST
(0.671558916568756), FRAC_CONST(0.740951180458069) },

1212 { 
FRAC_CONST
(0.653172791004181), FRAC_CONST(0.757208883762360) },

1213 { 
FRAC_CONST
(0.634393274784088), FRAC_CONST(0.773010432720184) },

1214 { 
FRAC_CONST
(0.615231573581696), FRAC_CONST(0.788346409797668) },

1215 { 
FRAC_CONST
(0.595699310302734), FRAC_CONST(0.803207516670227) },

1216 { 
FRAC_CONST
(0.575808167457581), FRAC_CONST(0.817584812641144) },

1217 { 
FRAC_CONST
(0.555570185184479), FRAC_CONST(0.831469655036926) },

1218 { 
FRAC_CONST
(0.534997642040253), FRAC_CONST(0.844853579998016) },

1219 { 
FRAC_CONST
(0.514102697372437), FRAC_CONST(0.857728660106659) },

1220 { 
FRAC_CONST
(0.492898195981979), FRAC_CONST(0.870086967945099) },

1221 { 
FRAC_CONST
(0.471396654844284), FRAC_CONST(0.881921291351318) },

1222 { 
FRAC_CONST
(0.449611306190491), FRAC_CONST(0.893224298954010) },

1223 { 
FRAC_CONST
(0.427555114030838), FRAC_CONST(0.903989315032959) },

1224 { 
FRAC_CONST
(0.405241280794144), FRAC_CONST(0.914209783077240) },

1225 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1226 { 
FRAC_CONST
(0.359894961118698), FRAC_CONST(0.932992815971375) },

1227 { 
FRAC_CONST
(0.336889833211899), FRAC_CONST(0.941544055938721) },

1228 { 
FRAC_CONST
(0.313681662082672), FRAC_CONST(0.949528217315674) },

1229 { 
FRAC_CONST
(0.290284633636475), FRAC_CONST(0.956940352916718) },

1230 { 
FRAC_CONST
(0.266712754964828), FRAC_CONST(0.963776051998138) },

1231 { 
FRAC_CONST
(0.242980122566223), FRAC_CONST(0.970031261444092) },

1232 { 
FRAC_CONST
(0.219101220369339), FRAC_CONST(0.975702106952667) },

1233 { 
FRAC_CONST
(0.195090234279633), FRAC_CONST(0.980785310268402) },

1234 { 
FRAC_CONST
(0.170961856842041), FRAC_CONST(0.985277652740479) },

1235 { 
FRAC_CONST
(0.146730497479439), FRAC_CONST(0.989176511764526) },

1236 { 
FRAC_CONST
(0.122410625219345), FRAC_CONST(0.992479562759399) },

1237 { 
FRAC_CONST
(0.098017133772373), FRAC_CONST(0.995184719562531) },

1238 { 
FRAC_CONST
(0.073564492166042), FRAC_CONST(0.997290432453156) },

1239 { 
FRAC_CONST
(0.049067649990320), FRAC_CONST(0.998795449733734) },

1240 { 
FRAC_CONST
(0.024541135877371), FRAC_CONST(0.999698817729950) },

1241 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1242 { 
FRAC_CONST
(0.998795449733734), FRAC_CONST(0.049067676067352) },

1243 { 
FRAC_CONST
(0.995184719562531), FRAC_CONST(0.098017141222954) },

1244 { 
FRAC_CONST
(0.989176511764526), FRAC_CONST(0.146730467677116) },

1245 { 
FRAC_CONST
(0.980785250663757), FRAC_CONST(0.195090323686600) },

1246 { 
FRAC_CONST
(0.970031261444092), FRAC_CONST(0.242980197072029) },

1247 { 
FRAC_CONST
(0.956940352916718), FRAC_CONST(0.290284663438797) },

1248 { 
FRAC_CONST
(0.941544055938721), FRAC_CONST(0.336889863014221) },

1249 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

1250 { 
FRAC_CONST
(0.903989315032959), FRAC_CONST(0.427555084228516) },

1251 { 
FRAC_CONST
(0.881921231746674), FRAC_CONST(0.471396744251251) },

1252 { 
FRAC_CONST
(0.857728600502014), FRAC_CONST(0.514102756977081) },

1253 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

1254 { 
FRAC_CONST
(0.803207516670227), FRAC_CONST(0.595699310302734) },

1255 { 
FRAC_CONST
(0.773010432720184), FRAC_CONST(0.634393334388733) },

1256 { 
FRAC_CONST
(0.740951120853424), FRAC_CONST(0.671558976173401) },

1257 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1258 { 
FRAC_CONST
(0.671558916568756), FRAC_CONST(0.740951180458069) },

1259 { 
FRAC_CONST
(0.634393274784088), FRAC_CONST(0.773010432720184) },

1260 { 
FRAC_CONST
(0.595699310302734), FRAC_CONST(0.803207516670227) },

1261 { 
FRAC_CONST
(0.555570185184479), FRAC_CONST(0.831469655036926) },

1262 { 
FRAC_CONST
(0.514102697372437), FRAC_CONST(0.857728660106659) },

1263 { 
FRAC_CONST
(0.471396654844284), FRAC_CONST(0.881921291351318) },

1264 { 
FRAC_CONST
(0.427555114030838), FRAC_CONST(0.903989315032959) },

1265 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1266 { 
FRAC_CONST
(0.336889833211899), FRAC_CONST(0.941544055938721) },

1267 { 
FRAC_CONST
(0.290284633636475), FRAC_CONST(0.956940352916718) },

1268 { 
FRAC_CONST
(0.242980122566223), FRAC_CONST(0.970031261444092) },

1269 { 
FRAC_CONST
(0.195090234279633), FRAC_CONST(0.980785310268402) },

1270 { 
FRAC_CONST
(0.146730497479439), FRAC_CONST(0.989176511764526) },

1271 { 
FRAC_CONST
(0.098017133772373), FRAC_CONST(0.995184719562531) },

1272 { 
FRAC_CONST
(0.049067649990320), FRAC_CONST(0.998795449733734) },

1273 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

1274 { 
FRAC_CONST
(-0.049067739397287), FRAC_CONST(0.998795449733734) },

1275 { 
FRAC_CONST
(-0.098017223179340), FRAC_CONST(0.995184719562531) },

1276 { 
FRAC_CONST
(-0.146730571985245), FRAC_CONST(0.989176511764526) },

1277 { 
FRAC_CONST
(-0.195090323686600), FRAC_CONST(0.980785250663757) },

1278 { 
FRAC_CONST
(-0.242980197072029), FRAC_CONST(0.970031261444092) },

1279 { 
FRAC_CONST
(-0.290284723043442), FRAC_CONST(0.956940293312073) },

1280 { 
FRAC_CONST
(-0.336889922618866), FRAC_CONST(0.941544055938721) },

1281 { 
FRAC_CONST
(-0.382683515548706), FRAC_CONST(0.923879504203796) },

1282 { 
FRAC_CONST
(-0.427555084228516), FRAC_CONST(0.903989315032959) },

1283 { 
FRAC_CONST
(-0.471396833658218), FRAC_CONST(0.881921231746674) },

1284 { 
FRAC_CONST
(-0.514102756977081), FRAC_CONST(0.857728600502014) },

1285 { 
FRAC_CONST
(-0.555570363998413), FRAC_CONST(0.831469535827637) },

1286 { 
FRAC_CONST
(-0.595699369907379), FRAC_CONST(0.803207516670227) },

1287 { 
FRAC_CONST
(-0.634393274784088), FRAC_CONST(0.773010492324829) },

1288 { 
FRAC_CONST
(-0.671559035778046), FRAC_CONST(0.740951061248779) },

1289 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1290 { 
FRAC_CONST
(-0.740951240062714), FRAC_CONST(0.671558856964111) },

1291 { 
FRAC_CONST
(-0.773010492324829), FRAC_CONST(0.634393274784088) },

1292 { 
FRAC_CONST
(-0.803207635879517), FRAC_CONST(0.595699131488800) },

1293 { 
FRAC_CONST
(-0.831469655036926), FRAC_CONST(0.555570185184479) },

1294 { 
FRAC_CONST
(-0.857728600502014), FRAC_CONST(0.514102756977081) },

1295 { 
FRAC_CONST
(-0.881921350955963), FRAC_CONST(0.471396625041962) },

1296 { 
FRAC_CONST
(-0.903989315032959), FRAC_CONST(0.427555054426193) },

1297 { 
FRAC_CONST
(-0.923879623413086), FRAC_CONST(0.382683277130127) },

1298 { 
FRAC_CONST
(-0.941544115543365), FRAC_CONST(0.336889803409576) },

1299 { 
FRAC_CONST
(-0.956940352916718), FRAC_CONST(0.290284723043442) },

1300 { 
FRAC_CONST
(-0.970031261444092), FRAC_CONST(0.242980077862740) },

1301 { 
FRAC_CONST
(-0.980785310268402), FRAC_CONST(0.195090308785439) },

1302 { 
FRAC_CONST
(-0.989176511764526), FRAC_CONST(0.146730333566666) },

1303 { 
FRAC_CONST
(-0.995184719562531), FRAC_CONST(0.098017096519470) },

1304 { 
FRAC_CONST
(-0.998795449733734), FRAC_CONST(0.049067486077547) },

1305 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1306 { 
FRAC_CONST
(0.997290432453156), FRAC_CONST(0.073564566671848) },

1307 { 
FRAC_CONST
(0.989176511764526), FRAC_CONST(0.146730467677116) },

1308 { 
FRAC_CONST
(0.975702106952667), FRAC_CONST(0.219101235270500) },

1309 { 
FRAC_CONST
(0.956940352916718), FRAC_CONST(0.290284663438797) },

1310 { 
FRAC_CONST
(0.932992815971375), FRAC_CONST(0.359895050525665) },

1311 { 
FRAC_CONST
(0.903989315032959), FRAC_CONST(0.427555084228516) },

1312 { 
FRAC_CONST
(0.870086967945099), FRAC_CONST(0.492898225784302) },

1313 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

1314 { 
FRAC_CONST
(0.788346469402313), FRAC_CONST(0.615231573581696) },

1315 { 
FRAC_CONST
(0.740951120853424), FRAC_CONST(0.671558976173401) },

1316 { 
FRAC_CONST
(0.689540505409241), FRAC_CONST(0.724247097969055) },

1317 { 
FRAC_CONST
(0.634393274784088), FRAC_CONST(0.773010432720184) },

1318 { 
FRAC_CONST
(0.575808227062225), FRAC_CONST(0.817584812641144) },

1319 { 
FRAC_CONST
(0.514102697372437), FRAC_CONST(0.857728660106659) },

1320 { 
FRAC_CONST
(0.449611306190491), FRAC_CONST(0.893224298954010) },

1321 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1322 { 
FRAC_CONST
(0.313681751489639), FRAC_CONST(0.949528157711029) },

1323 { 
FRAC_CONST
(0.242980241775513), FRAC_CONST(0.970031261444092) },

1324 { 
FRAC_CONST
(0.170961856842041), FRAC_CONST(0.985277652740479) },

1325 { 
FRAC_CONST
(0.098017133772373), FRAC_CONST(0.995184719562531) },

1326 { 
FRAC_CONST
(0.024541255086660), FRAC_CONST(0.999698817729950) },

1327 { 
FRAC_CONST
(-0.049067739397287), FRAC_CONST(0.998795449733734) },

1328 { 
FRAC_CONST
(-0.122410707175732), FRAC_CONST(0.992479503154755) },

1329 { 
FRAC_CONST
(-0.195090323686600), FRAC_CONST(0.980785250663757) },

1330 { 
FRAC_CONST
(-0.266712725162506), FRAC_CONST(0.963776051998138) },

1331 { 
FRAC_CONST
(-0.336889803409576), FRAC_CONST(0.941544055938721) },

1332 { 
FRAC_CONST
(-0.405241340398788), FRAC_CONST(0.914209723472595) },

1333 { 
FRAC_CONST
(-0.471396833658218), FRAC_CONST(0.881921231746674) },

1334 { 
FRAC_CONST
(-0.534997701644897), FRAC_CONST(0.844853520393372) },

1335 { 
FRAC_CONST
(-0.595699369907379), FRAC_CONST(0.803207516670227) },

1336 { 
FRAC_CONST
(-0.653172850608826), FRAC_CONST(0.757208824157715) },

1337 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1338 { 
FRAC_CONST
(-0.757208824157715), FRAC_CONST(0.653172850608826) },

1339 { 
FRAC_CONST
(-0.803207516670227), FRAC_CONST(0.595699369907379) },

1340 { 
FRAC_CONST
(-0.844853520393372), FRAC_CONST(0.534997701644897) },

1341 { 
FRAC_CONST
(-0.881921231746674), FRAC_CONST(0.471396833658218) },

1342 { 
FRAC_CONST
(-0.914209783077240), FRAC_CONST(0.405241221189499) },

1343 { 
FRAC_CONST
(-0.941544115543365), FRAC_CONST(0.336889803409576) },

1344 { 
FRAC_CONST
(-0.963776051998138), FRAC_CONST(0.266712725162506) },

1345 { 
FRAC_CONST
(-0.980785310268402), FRAC_CONST(0.195090308785439) },

1346 { 
FRAC_CONST
(-0.992479503154755), FRAC_CONST(0.122410699725151) },

1347 { 
FRAC_CONST
(-0.998795449733734), FRAC_CONST(0.049067724496126) },

1348 { 
FRAC_CONST
(-0.999698817729950), FRAC_CONST(-0.024541147053242) },

1349 { 
FRAC_CONST
(-0.995184719562531), FRAC_CONST(-0.098017267882824) },

1350 { 
FRAC_CONST
(-0.985277652740479), FRAC_CONST(-0.170961990952492) },

1351 { 
FRAC_CONST
(-0.970031261444092), FRAC_CONST(-0.242980241775513) },

1352 { 
FRAC_CONST
(-0.949528157711029), FRAC_CONST(-0.313681781291962) },

1353 { 
FRAC_CONST
(-0.923879504203796), FRAC_CONST(-0.382683426141739) },

1354 { 
FRAC_CONST
(-0.893224298954010), FRAC_CONST(-0.449611306190491) },

1355 { 
FRAC_CONST
(-0.857728660106659), FRAC_CONST(-0.514102697372437) },

1356 { 
FRAC_CONST
(-0.817584872245789), FRAC_CONST(-0.575808107852936) },

1357 { 
FRAC_CONST
(-0.773010551929474), FRAC_CONST(-0.634393215179443) },

1358 { 
FRAC_CONST
(-0.724247038364410), FRAC_CONST(-0.689540624618530) },

1359 { 
FRAC_CONST
(-0.671558916568756), FRAC_CONST(-0.740951180458069) },

1360 { 
FRAC_CONST
(-0.615231573581696), FRAC_CONST(-0.788346469402313) },

1361 { 
FRAC_CONST
(-0.555570006370544), FRAC_CONST(-0.831469774246216) },

1362 { 
FRAC_CONST
(-0.492898195981979), FRAC_CONST(-0.870086967945099) },

1363 { 
FRAC_CONST
(-0.427554935216904), FRAC_CONST(-0.903989374637604) },

1364 { 
FRAC_CONST
(-0.359895110130310), FRAC_CONST(-0.932992756366730) },

1365 { 
FRAC_CONST
(-0.290284544229507), FRAC_CONST(-0.956940352916718) },

1366 { 
FRAC_CONST
(-0.219101369380951), FRAC_CONST(-0.975702106952667) },

1367 { 
FRAC_CONST
(-0.146730408072472), FRAC_CONST(-0.989176511764526) },

1368 { 
FRAC_CONST
(-0.073564760386944), FRAC_CONST(-0.997290432453156) },

1369 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1370 { 
FRAC_CONST
(0.995184719562531), FRAC_CONST(0.098017141222954) },

1371 { 
FRAC_CONST
(0.980785250663757), FRAC_CONST(0.195090323686600) },

1372 { 
FRAC_CONST
(0.956940352916718), FRAC_CONST(0.290284663438797) },

1373 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

1374 { 
FRAC_CONST
(0.881921231746674), FRAC_CONST(0.471396744251251) },

1375 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

1376 { 
FRAC_CONST
(0.773010432720184), FRAC_CONST(0.634393334388733) },

1377 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1378 { 
FRAC_CONST
(0.634393274784088), FRAC_CONST(0.773010432720184) },

1379 { 
FRAC_CONST
(0.555570185184479), FRAC_CONST(0.831469655036926) },

1380 { 
FRAC_CONST
(0.471396654844284), FRAC_CONST(0.881921291351318) },

1381 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1382 { 
FRAC_CONST
(0.290284633636475), FRAC_CONST(0.956940352916718) },

1383 { 
FRAC_CONST
(0.195090234279633), FRAC_CONST(0.980785310268402) },

1384 { 
FRAC_CONST
(0.098017133772373), FRAC_CONST(0.995184719562531) },

1385 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1386 { 
FRAC_CONST
(0.980785250663757), FRAC_CONST(0.195090323686600) },

1387 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

1388 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

1389 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1390 { 
FRAC_CONST
(0.555570185184479), FRAC_CONST(0.831469655036926) },

1391 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1392 { 
FRAC_CONST
(0.195090234279633), FRAC_CONST(0.980785310268402) },

1393 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

1394 { 
FRAC_CONST
(-0.195090323686600), FRAC_CONST(0.980785250663757) },

1395 { 
FRAC_CONST
(-0.382683515548706), FRAC_CONST(0.923879504203796) },

1396 { 
FRAC_CONST
(-0.555570363998413), FRAC_CONST(0.831469535827637) },

1397 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1398 { 
FRAC_CONST
(-0.831469655036926), FRAC_CONST(0.555570185184479) },

1399 { 
FRAC_CONST
(-0.923879623413086), FRAC_CONST(0.382683277130127) },

1400 { 
FRAC_CONST
(-0.980785310268402), FRAC_CONST(0.195090308785439) },

1401 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1402 { 
FRAC_CONST
(0.956940352916718), FRAC_CONST(0.290284663438797) },

1403 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

1404 { 
FRAC_CONST
(0.634393274784088), FRAC_CONST(0.773010432720184) },

1405 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1406 { 
FRAC_CONST
(0.098017133772373), FRAC_CONST(0.995184719562531) },

1407 { 
FRAC_CONST
(-0.195090323686600), FRAC_CONST(0.980785250663757) },

1408 { 
FRAC_CONST
(-0.471396833658218), FRAC_CONST(0.881921231746674) },

1409 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1410 { 
FRAC_CONST
(-0.881921231746674), FRAC_CONST(0.471396833658218) },

1411 { 
FRAC_CONST
(-0.980785310268402), FRAC_CONST(0.195090308785439) },

1412 { 
FRAC_CONST
(-0.995184719562531), FRAC_CONST(-0.098017267882824) },

1413 { 
FRAC_CONST
(-0.923879504203796), FRAC_CONST(-0.382683426141739) },

1414 { 
FRAC_CONST
(-0.773010551929474), FRAC_CONST(-0.634393215179443) },

1415 { 
FRAC_CONST
(-0.555570006370544), FRAC_CONST(-0.831469774246216) },

1416 { 
FRAC_CONST
(-0.290284544229507), FRAC_CONST(-0.956940352916718) },

1417 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1418 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

1419 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1420 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1421 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1422 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1423 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

1424 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1425 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1426 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1427 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1428 { 
FRAC_CONST
(-0.923879504203796), FRAC_CONST(-0.382683426141739) },

1429 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1430 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1431 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1432 { 
FRAC_CONST
(0.000000011924881), FRAC_CONST(-1.000000000000000) }

1435 #ifde‡
ALLOW_SMALL_FRAMELENGTH


1436 
ALIGN
 c⁄° 
com∂ex_t
 
	gcf·_èb_240
[] =

1438 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1439 { 
FRAC_CONST
(0.999657332897186), FRAC_CONST(0.026176949962974) },

1440 { 
FRAC_CONST
(0.998629510402679), FRAC_CONST(0.052335958927870) },

1441 { 
FRAC_CONST
(0.996917307376862), FRAC_CONST(0.078459098935127) },

1442 { 
FRAC_CONST
(0.994521915912628), FRAC_CONST(0.104528464376926) },

1443 { 
FRAC_CONST
(0.991444885730743), FRAC_CONST(0.130526199936867) },

1444 { 
FRAC_CONST
(0.987688362598419), FRAC_CONST(0.156434476375580) },

1445 { 
FRAC_CONST
(0.983254909515381), FRAC_CONST(0.182235524058342) },

1446 { 
FRAC_CONST
(0.978147625923157), FRAC_CONST(0.207911700010300) },

1447 { 
FRAC_CONST
(0.972369909286499), FRAC_CONST(0.233445376157761) },

1448 { 
FRAC_CONST
(0.965925812721252), FRAC_CONST(0.258819043636322) },

1449 { 
FRAC_CONST
(0.958819746971130), FRAC_CONST(0.284015357494354) },

1450 { 
FRAC_CONST
(0.951056540012360), FRAC_CONST(0.309017002582550) },

1451 { 
FRAC_CONST
(0.942641496658325), FRAC_CONST(0.333806872367859) },

1452 { 
FRAC_CONST
(0.933580398559570), FRAC_CONST(0.358367949724197) },

1453 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

1454 { 
FRAC_CONST
(0.913545429706573), FRAC_CONST(0.406736642122269) },

1455 { 
FRAC_CONST
(0.902585268020630), FRAC_CONST(0.430511116981506) },

1456 { 
FRAC_CONST
(0.891006529331207), FRAC_CONST(0.453990519046783) },

1457 { 
FRAC_CONST
(0.878817081451416), FRAC_CONST(0.477158784866333) },

1458 { 
FRAC_CONST
(0.866025388240814), FRAC_CONST(0.500000000000000) },

1459 { 
FRAC_CONST
(0.852640151977539), FRAC_CONST(0.522498548030853) },

1460 { 
FRAC_CONST
(0.838670551776886), FRAC_CONST(0.544639050960541) },

1461 { 
FRAC_CONST
(0.824126183986664), FRAC_CONST(0.566406250000000) },

1462 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

1463 { 
FRAC_CONST
(0.793353319168091), FRAC_CONST(0.608761429786682) },

1464 { 
FRAC_CONST
(0.777145922183990), FRAC_CONST(0.629320383071899) },

1465 { 
FRAC_CONST
(0.760405957698822), FRAC_CONST(0.649448096752167) },

1466 { 
FRAC_CONST
(0.743144810199738), FRAC_CONST(0.669130623340607) },

1467 { 
FRAC_CONST
(0.725374400615692), FRAC_CONST(0.688354551792145) },

1468 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1469 { 
FRAC_CONST
(0.688354551792145), FRAC_CONST(0.725374400615692) },

1470 { 
FRAC_CONST
(0.669130563735962), FRAC_CONST(0.743144869804382) },

1471 { 
FRAC_CONST
(0.649448037147522), FRAC_CONST(0.760405957698822) },

1472 { 
FRAC_CONST
(0.629320383071899), FRAC_CONST(0.777145981788635) },

1473 { 
FRAC_CONST
(0.608761370182037), FRAC_CONST(0.793353378772736) },

1474 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

1475 { 
FRAC_CONST
(0.566406250000000), FRAC_CONST(0.824126183986664) },

1476 { 
FRAC_CONST
(0.544638991355896), FRAC_CONST(0.838670611381531) },

1477 { 
FRAC_CONST
(0.522498488426209), FRAC_CONST(0.852640211582184) },

1478 { 
FRAC_CONST
(0.499999970197678), FRAC_CONST(0.866025447845459) },

1479 { 
FRAC_CONST
(0.477158755064011), FRAC_CONST(0.878817141056061) },

1480 { 
FRAC_CONST
(0.453990519046783), FRAC_CONST(0.891006529331207) },

1481 { 
FRAC_CONST
(0.430511027574539), FRAC_CONST(0.902585327625275) },

1482 { 
FRAC_CONST
(0.406736612319946), FRAC_CONST(0.913545489311218) },

1483 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1484 { 
FRAC_CONST
(0.358367860317230), FRAC_CONST(0.933580458164215) },

1485 { 
FRAC_CONST
(0.333806812763214), FRAC_CONST(0.942641496658325) },

1486 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

1487 { 
FRAC_CONST
(0.284015327692032), FRAC_CONST(0.958819746971130) },

1488 { 
FRAC_CONST
(0.258819073438644), FRAC_CONST(0.965925812721252) },

1489 { 
FRAC_CONST
(0.233445301651955), FRAC_CONST(0.972369909286499) },

1490 { 
FRAC_CONST
(0.207911655306816), FRAC_CONST(0.978147625923157) },

1491 { 
FRAC_CONST
(0.182235524058342), FRAC_CONST(0.983254909515381) },

1492 { 
FRAC_CONST
(0.156434372067451), FRAC_CONST(0.987688362598419) },

1493 { 
FRAC_CONST
(0.130526125431061), FRAC_CONST(0.991444885730743) },

1494 { 
FRAC_CONST
(0.104528419673443), FRAC_CONST(0.994521915912628) },

1495 { 
FRAC_CONST
(0.078459084033966), FRAC_CONST(0.996917307376862) },

1496 { 
FRAC_CONST
(0.052335973829031), FRAC_CONST(0.998629510402679) },

1497 { 
FRAC_CONST
(0.026176875457168), FRAC_CONST(0.999657332897186) },

1498 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

1499 { 
FRAC_CONST
(-0.026176963001490), FRAC_CONST(0.999657332897186) },

1500 { 
FRAC_CONST
(-0.052336059510708), FRAC_CONST(0.998629510402679) },

1501 { 
FRAC_CONST
(-0.078459173440933), FRAC_CONST(0.996917307376862) },

1502 { 
FRAC_CONST
(-0.104528509080410), FRAC_CONST(0.994521915912628) },

1503 { 
FRAC_CONST
(-0.130526214838028), FRAC_CONST(0.991444885730743) },

1504 { 
FRAC_CONST
(-0.156434446573257), FRAC_CONST(0.987688362598419) },

1505 { 
FRAC_CONST
(-0.182235598564148), FRAC_CONST(0.983254909515381) },

1506 { 
FRAC_CONST
(-0.207911744713783), FRAC_CONST(0.978147566318512) },

1507 { 
FRAC_CONST
(-0.233445391058922), FRAC_CONST(0.972369909286499) },

1508 { 
FRAC_CONST
(-0.258819162845612), FRAC_CONST(0.965925812721252) },

1509 { 
FRAC_CONST
(-0.284015417098999), FRAC_CONST(0.958819687366486) },

1510 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

1511 { 
FRAC_CONST
(-0.333806872367859), FRAC_CONST(0.942641496658325) },

1512 { 
FRAC_CONST
(-0.358367949724197), FRAC_CONST(0.933580458164215) },

1513 { 
FRAC_CONST
(-0.382683515548706), FRAC_CONST(0.923879504203796) },

1514 { 
FRAC_CONST
(-0.406736701726913), FRAC_CONST(0.913545429706573) },

1515 { 
FRAC_CONST
(-0.430511116981506), FRAC_CONST(0.902585268020630) },

1516 { 
FRAC_CONST
(-0.453990608453751), FRAC_CONST(0.891006469726563) },

1517 { 
FRAC_CONST
(-0.477158725261688), FRAC_CONST(0.878817141056061) },

1518 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1519 { 
FRAC_CONST
(0.998629510402679), FRAC_CONST(0.052335958927870) },

1520 { 
FRAC_CONST
(0.994521915912628), FRAC_CONST(0.104528464376926) },

1521 { 
FRAC_CONST
(0.987688362598419), FRAC_CONST(0.156434476375580) },

1522 { 
FRAC_CONST
(0.978147625923157), FRAC_CONST(0.207911700010300) },

1523 { 
FRAC_CONST
(0.965925812721252), FRAC_CONST(0.258819043636322) },

1524 { 
FRAC_CONST
(0.951056540012360), FRAC_CONST(0.309017002582550) },

1525 { 
FRAC_CONST
(0.933580398559570), FRAC_CONST(0.358367949724197) },

1526 { 
FRAC_CONST
(0.913545429706573), FRAC_CONST(0.406736642122269) },

1527 { 
FRAC_CONST
(0.891006529331207), FRAC_CONST(0.453990519046783) },

1528 { 
FRAC_CONST
(0.866025388240814), FRAC_CONST(0.500000000000000) },

1529 { 
FRAC_CONST
(0.838670551776886), FRAC_CONST(0.544639050960541) },

1530 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

1531 { 
FRAC_CONST
(0.777145922183990), FRAC_CONST(0.629320383071899) },

1532 { 
FRAC_CONST
(0.743144810199738), FRAC_CONST(0.669130623340607) },

1533 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1534 { 
FRAC_CONST
(0.669130563735962), FRAC_CONST(0.743144869804382) },

1535 { 
FRAC_CONST
(0.629320383071899), FRAC_CONST(0.777145981788635) },

1536 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

1537 { 
FRAC_CONST
(0.544638991355896), FRAC_CONST(0.838670611381531) },

1538 { 
FRAC_CONST
(0.499999970197678), FRAC_CONST(0.866025447845459) },

1539 { 
FRAC_CONST
(0.453990519046783), FRAC_CONST(0.891006529331207) },

1540 { 
FRAC_CONST
(0.406736612319946), FRAC_CONST(0.913545489311218) },

1541 { 
FRAC_CONST
(0.358367860317230), FRAC_CONST(0.933580458164215) },

1542 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

1543 { 
FRAC_CONST
(0.258819073438644), FRAC_CONST(0.965925812721252) },

1544 { 
FRAC_CONST
(0.207911655306816), FRAC_CONST(0.978147625923157) },

1545 { 
FRAC_CONST
(0.156434372067451), FRAC_CONST(0.987688362598419) },

1546 { 
FRAC_CONST
(0.104528419673443), FRAC_CONST(0.994521915912628) },

1547 { 
FRAC_CONST
(0.052335973829031), FRAC_CONST(0.998629510402679) },

1548 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

1549 { 
FRAC_CONST
(-0.052336059510708), FRAC_CONST(0.998629510402679) },

1550 { 
FRAC_CONST
(-0.104528509080410), FRAC_CONST(0.994521915912628) },

1551 { 
FRAC_CONST
(-0.156434446573257), FRAC_CONST(0.987688362598419) },

1552 { 
FRAC_CONST
(-0.207911744713783), FRAC_CONST(0.978147566318512) },

1553 { 
FRAC_CONST
(-0.258819162845612), FRAC_CONST(0.965925812721252) },

1554 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

1555 { 
FRAC_CONST
(-0.358367949724197), FRAC_CONST(0.933580458164215) },

1556 { 
FRAC_CONST
(-0.406736701726913), FRAC_CONST(0.913545429706573) },

1557 { 
FRAC_CONST
(-0.453990608453751), FRAC_CONST(0.891006469726563) },

1558 { 
FRAC_CONST
(-0.500000059604645), FRAC_CONST(0.866025388240814) },

1559 { 
FRAC_CONST
(-0.544639050960541), FRAC_CONST(0.838670551776886) },

1560 { 
FRAC_CONST
(-0.587785184383392), FRAC_CONST(0.809017002582550) },

1561 { 
FRAC_CONST
(-0.629320502281189), FRAC_CONST(0.777145862579346) },

1562 { 
FRAC_CONST
(-0.669130682945251), FRAC_CONST(0.743144810199738) },

1563 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1564 { 
FRAC_CONST
(-0.743144929409027), FRAC_CONST(0.669130444526672) },

1565 { 
FRAC_CONST
(-0.777146041393280), FRAC_CONST(0.629320263862610) },

1566 { 
FRAC_CONST
(-0.809017062187195), FRAC_CONST(0.587785184383392) },

1567 { 
FRAC_CONST
(-0.838670551776886), FRAC_CONST(0.544639050960541) },

1568 { 
FRAC_CONST
(-0.866025388240814), FRAC_CONST(0.500000059604645) },

1569 { 
FRAC_CONST
(-0.891006588935852), FRAC_CONST(0.453990370035172) },

1570 { 
FRAC_CONST
(-0.913545489311218), FRAC_CONST(0.406736582517624) },

1571 { 
FRAC_CONST
(-0.933580458164215), FRAC_CONST(0.358367919921875) },

1572 { 
FRAC_CONST
(-0.951056599617004), FRAC_CONST(0.309016793966293) },

1573 { 
FRAC_CONST
(-0.965925872325897), FRAC_CONST(0.258818924427032) },

1574 { 
FRAC_CONST
(-0.978147625923157), FRAC_CONST(0.207911610603333) },

1575 { 
FRAC_CONST
(-0.987688362598419), FRAC_CONST(0.156434446573257) },

1576 { 
FRAC_CONST
(-0.994521915912628), FRAC_CONST(0.104528494179249) },

1577 { 
FRAC_CONST
(-0.998629570007324), FRAC_CONST(0.052335809916258) },

1578 { 
FRAC_CONST
(-1.000000000000000), FRAC_CONST(-0.000000087422777) },

1579 { 
FRAC_CONST
(-0.998629510402679), FRAC_CONST(-0.052335985004902) },

1580 { 
FRAC_CONST
(-0.994521856307983), FRAC_CONST(-0.104528672993183) },

1581 { 
FRAC_CONST
(-0.987688302993774), FRAC_CONST(-0.156434610486031) },

1582 { 
FRAC_CONST
(-0.978147566318512), FRAC_CONST(-0.207911789417267) },

1583 { 
FRAC_CONST
(-0.965925812721252), FRAC_CONST(-0.258819073438644) },

1584 { 
FRAC_CONST
(-0.951056540012360), FRAC_CONST(-0.309016972780228) },

1585 { 
FRAC_CONST
(-0.933580398559570), FRAC_CONST(-0.358368098735809) },

1586 { 
FRAC_CONST
(-0.913545429706573), FRAC_CONST(-0.406736731529236) },

1587 { 
FRAC_CONST
(-0.891006529331207), FRAC_CONST(-0.453990548849106) },

1588 { 
FRAC_CONST
(-0.866025269031525), FRAC_CONST(-0.500000178813934) },

1589 { 
FRAC_CONST
(-0.838670492172241), FRAC_CONST(-0.544639170169830) },

1590 { 
FRAC_CONST
(-0.809016942977905), FRAC_CONST(-0.587785363197327) },

1591 { 
FRAC_CONST
(-0.777145922183990), FRAC_CONST(-0.629320442676544) },

1592 { 
FRAC_CONST
(-0.743144810199738), FRAC_CONST(-0.669130623340607) },

1593 { 
FRAC_CONST
(-0.707106649875641), FRAC_CONST(-0.707106888294220) },

1594 { 
FRAC_CONST
(-0.669130504131317), FRAC_CONST(-0.743144869804382) },

1595 { 
FRAC_CONST
(-0.629320323467255), FRAC_CONST(-0.777145981788635) },

1596 { 
FRAC_CONST
(-0.587785065174103), FRAC_CONST(-0.809017121791840) },

1597 { 
FRAC_CONST
(-0.544639110565186), FRAC_CONST(-0.838670551776886) },

1598 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1599 { 
FRAC_CONST
(0.996917307376862), FRAC_CONST(0.078459098935127) },

1600 { 
FRAC_CONST
(0.987688362598419), FRAC_CONST(0.156434476375580) },

1601 { 
FRAC_CONST
(0.972369909286499), FRAC_CONST(0.233445376157761) },

1602 { 
FRAC_CONST
(0.951056540012360), FRAC_CONST(0.309017002582550) },

1603 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

1604 { 
FRAC_CONST
(0.891006529331207), FRAC_CONST(0.453990519046783) },

1605 { 
FRAC_CONST
(0.852640151977539), FRAC_CONST(0.522498548030853) },

1606 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

1607 { 
FRAC_CONST
(0.760405957698822), FRAC_CONST(0.649448096752167) },

1608 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1609 { 
FRAC_CONST
(0.649448037147522), FRAC_CONST(0.760405957698822) },

1610 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

1611 { 
FRAC_CONST
(0.522498488426209), FRAC_CONST(0.852640211582184) },

1612 { 
FRAC_CONST
(0.453990519046783), FRAC_CONST(0.891006529331207) },

1613 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1614 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

1615 { 
FRAC_CONST
(0.233445301651955), FRAC_CONST(0.972369909286499) },

1616 { 
FRAC_CONST
(0.156434372067451), FRAC_CONST(0.987688362598419) },

1617 { 
FRAC_CONST
(0.078459084033966), FRAC_CONST(0.996917307376862) },

1618 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1619 { 
FRAC_CONST
(0.987688362598419), FRAC_CONST(0.156434476375580) },

1620 { 
FRAC_CONST
(0.951056540012360), FRAC_CONST(0.309017002582550) },

1621 { 
FRAC_CONST
(0.891006529331207), FRAC_CONST(0.453990519046783) },

1622 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

1623 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1624 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

1625 { 
FRAC_CONST
(0.453990519046783), FRAC_CONST(0.891006529331207) },

1626 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

1627 { 
FRAC_CONST
(0.156434372067451), FRAC_CONST(0.987688362598419) },

1628 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

1629 { 
FRAC_CONST
(-0.156434446573257), FRAC_CONST(0.987688362598419) },

1630 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

1631 { 
FRAC_CONST
(-0.453990608453751), FRAC_CONST(0.891006469726563) },

1632 { 
FRAC_CONST
(-0.587785184383392), FRAC_CONST(0.809017002582550) },

1633 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1634 { 
FRAC_CONST
(-0.809017062187195), FRAC_CONST(0.587785184383392) },

1635 { 
FRAC_CONST
(-0.891006588935852), FRAC_CONST(0.453990370035172) },

1636 { 
FRAC_CONST
(-0.951056599617004), FRAC_CONST(0.309016793966293) },

1637 { 
FRAC_CONST
(-0.987688362598419), FRAC_CONST(0.156434446573257) },

1638 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1639 { 
FRAC_CONST
(0.972369909286499), FRAC_CONST(0.233445376157761) },

1640 { 
FRAC_CONST
(0.891006529331207), FRAC_CONST(0.453990519046783) },

1641 { 
FRAC_CONST
(0.760405957698822), FRAC_CONST(0.649448096752167) },

1642 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

1643 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1644 { 
FRAC_CONST
(0.156434372067451), FRAC_CONST(0.987688362598419) },

1645 { 
FRAC_CONST
(-0.078459173440933), FRAC_CONST(0.996917307376862) },

1646 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

1647 { 
FRAC_CONST
(-0.522498667240143), FRAC_CONST(0.852640092372894) },

1648 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1649 { 
FRAC_CONST
(-0.852640211582184), FRAC_CONST(0.522498488426209) },

1650 { 
FRAC_CONST
(-0.951056599617004), FRAC_CONST(0.309016793966293) },

1651 { 
FRAC_CONST
(-0.996917366981506), FRAC_CONST(0.078459039330482) },

1652 { 
FRAC_CONST
(-0.987688302993774), FRAC_CONST(-0.156434610486031) },

1653 { 
FRAC_CONST
(-0.923879504203796), FRAC_CONST(-0.382683426141739) },

1654 { 
FRAC_CONST
(-0.809016942977905), FRAC_CONST(-0.587785363197327) },

1655 { 
FRAC_CONST
(-0.649447917938232), FRAC_CONST(-0.760406076908112) },

1656 { 
FRAC_CONST
(-0.453990221023560), FRAC_CONST(-0.891006648540497) },

1657 { 
FRAC_CONST
(-0.233445450663567), FRAC_CONST(-0.972369909286499) },

1658 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1659 { 
FRAC_CONST
(0.951056540012360), FRAC_CONST(0.309017002582550) },

1660 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

1661 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

1662 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

1663 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1664 { 
FRAC_CONST
(0.809017002582550), FRAC_CONST(0.587785243988037) },

1665 { 
FRAC_CONST
(0.309016972780228), FRAC_CONST(0.951056540012360) },

1666 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

1667 { 
FRAC_CONST
(-0.809017062187195), FRAC_CONST(0.587785184383392) },

1668 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1669 { 
FRAC_CONST
(0.587785243988037), FRAC_CONST(0.809017002582550) },

1670 { 
FRAC_CONST
(-0.309017032384872), FRAC_CONST(0.951056480407715) },

1671 { 
FRAC_CONST
(-0.951056599617004), FRAC_CONST(0.309016793966293) },

1672 { 
FRAC_CONST
(-0.809016942977905), FRAC_CONST(-0.587785363197327) },

1673 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1674 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1675 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1676 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1677 { 
FRAC_CONST
(0.309017121791840), FRAC_CONST(-0.951056480407715) }

1683 
ALIGN
 c⁄° 
com∂ex_t
 
	gcf·_èb_128
[] =

1685 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1686 { 
FRAC_CONST
(0.998795449733734), FRAC_CONST(0.049067676067352) },

1687 { 
FRAC_CONST
(0.995184719562531), FRAC_CONST(0.098017141222954) },

1688 { 
FRAC_CONST
(0.989176511764526), FRAC_CONST(0.146730467677116) },

1689 { 
FRAC_CONST
(0.980785250663757), FRAC_CONST(0.195090323686600) },

1690 { 
FRAC_CONST
(0.970031261444092), FRAC_CONST(0.242980197072029) },

1691 { 
FRAC_CONST
(0.956940352916718), FRAC_CONST(0.290284663438797) },

1692 { 
FRAC_CONST
(0.941544055938721), FRAC_CONST(0.336889863014221) },

1693 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

1694 { 
FRAC_CONST
(0.903989315032959), FRAC_CONST(0.427555084228516) },

1695 { 
FRAC_CONST
(0.881921231746674), FRAC_CONST(0.471396744251251) },

1696 { 
FRAC_CONST
(0.857728600502014), FRAC_CONST(0.514102756977081) },

1697 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

1698 { 
FRAC_CONST
(0.803207516670227), FRAC_CONST(0.595699310302734) },

1699 { 
FRAC_CONST
(0.773010432720184), FRAC_CONST(0.634393334388733) },

1700 { 
FRAC_CONST
(0.740951120853424), FRAC_CONST(0.671558976173401) },

1701 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1702 { 
FRAC_CONST
(0.671558916568756), FRAC_CONST(0.740951180458069) },

1703 { 
FRAC_CONST
(0.634393274784088), FRAC_CONST(0.773010432720184) },

1704 { 
FRAC_CONST
(0.595699310302734), FRAC_CONST(0.803207516670227) },

1705 { 
FRAC_CONST
(0.555570185184479), FRAC_CONST(0.831469655036926) },

1706 { 
FRAC_CONST
(0.514102697372437), FRAC_CONST(0.857728660106659) },

1707 { 
FRAC_CONST
(0.471396654844284), FRAC_CONST(0.881921291351318) },

1708 { 
FRAC_CONST
(0.427555114030838), FRAC_CONST(0.903989315032959) },

1709 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1710 { 
FRAC_CONST
(0.336889833211899), FRAC_CONST(0.941544055938721) },

1711 { 
FRAC_CONST
(0.290284633636475), FRAC_CONST(0.956940352916718) },

1712 { 
FRAC_CONST
(0.242980122566223), FRAC_CONST(0.970031261444092) },

1713 { 
FRAC_CONST
(0.195090234279633), FRAC_CONST(0.980785310268402) },

1714 { 
FRAC_CONST
(0.146730497479439), FRAC_CONST(0.989176511764526) },

1715 { 
FRAC_CONST
(0.098017133772373), FRAC_CONST(0.995184719562531) },

1716 { 
FRAC_CONST
(0.049067649990320), FRAC_CONST(0.998795449733734) },

1717 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

1718 { 
FRAC_CONST
(-0.049067739397287), FRAC_CONST(0.998795449733734) },

1719 { 
FRAC_CONST
(-0.098017223179340), FRAC_CONST(0.995184719562531) },

1720 { 
FRAC_CONST
(-0.146730571985245), FRAC_CONST(0.989176511764526) },

1721 { 
FRAC_CONST
(-0.195090323686600), FRAC_CONST(0.980785250663757) },

1722 { 
FRAC_CONST
(-0.242980197072029), FRAC_CONST(0.970031261444092) },

1723 { 
FRAC_CONST
(-0.290284723043442), FRAC_CONST(0.956940293312073) },

1724 { 
FRAC_CONST
(-0.336889922618866), FRAC_CONST(0.941544055938721) },

1725 { 
FRAC_CONST
(-0.382683515548706), FRAC_CONST(0.923879504203796) },

1726 { 
FRAC_CONST
(-0.427555084228516), FRAC_CONST(0.903989315032959) },

1727 { 
FRAC_CONST
(-0.471396833658218), FRAC_CONST(0.881921231746674) },

1728 { 
FRAC_CONST
(-0.514102756977081), FRAC_CONST(0.857728600502014) },

1729 { 
FRAC_CONST
(-0.555570363998413), FRAC_CONST(0.831469535827637) },

1730 { 
FRAC_CONST
(-0.595699369907379), FRAC_CONST(0.803207516670227) },

1731 { 
FRAC_CONST
(-0.634393274784088), FRAC_CONST(0.773010492324829) },

1732 { 
FRAC_CONST
(-0.671559035778046), FRAC_CONST(0.740951061248779) },

1733 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1734 { 
FRAC_CONST
(-0.740951240062714), FRAC_CONST(0.671558856964111) },

1735 { 
FRAC_CONST
(-0.773010492324829), FRAC_CONST(0.634393274784088) },

1736 { 
FRAC_CONST
(-0.803207635879517), FRAC_CONST(0.595699131488800) },

1737 { 
FRAC_CONST
(-0.831469655036926), FRAC_CONST(0.555570185184479) },

1738 { 
FRAC_CONST
(-0.857728600502014), FRAC_CONST(0.514102756977081) },

1739 { 
FRAC_CONST
(-0.881921350955963), FRAC_CONST(0.471396625041962) },

1740 { 
FRAC_CONST
(-0.903989315032959), FRAC_CONST(0.427555054426193) },

1741 { 
FRAC_CONST
(-0.923879623413086), FRAC_CONST(0.382683277130127) },

1742 { 
FRAC_CONST
(-0.941544115543365), FRAC_CONST(0.336889803409576) },

1743 { 
FRAC_CONST
(-0.956940352916718), FRAC_CONST(0.290284723043442) },

1744 { 
FRAC_CONST
(-0.970031261444092), FRAC_CONST(0.242980077862740) },

1745 { 
FRAC_CONST
(-0.980785310268402), FRAC_CONST(0.195090308785439) },

1746 { 
FRAC_CONST
(-0.989176511764526), FRAC_CONST(0.146730333566666) },

1747 { 
FRAC_CONST
(-0.995184719562531), FRAC_CONST(0.098017096519470) },

1748 { 
FRAC_CONST
(-0.998795449733734), FRAC_CONST(0.049067486077547) },

1749 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1750 { 
FRAC_CONST
(0.995184719562531), FRAC_CONST(0.098017141222954) },

1751 { 
FRAC_CONST
(0.980785250663757), FRAC_CONST(0.195090323686600) },

1752 { 
FRAC_CONST
(0.956940352916718), FRAC_CONST(0.290284663438797) },

1753 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

1754 { 
FRAC_CONST
(0.881921231746674), FRAC_CONST(0.471396744251251) },

1755 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

1756 { 
FRAC_CONST
(0.773010432720184), FRAC_CONST(0.634393334388733) },

1757 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1758 { 
FRAC_CONST
(0.634393274784088), FRAC_CONST(0.773010432720184) },

1759 { 
FRAC_CONST
(0.555570185184479), FRAC_CONST(0.831469655036926) },

1760 { 
FRAC_CONST
(0.471396654844284), FRAC_CONST(0.881921291351318) },

1761 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1762 { 
FRAC_CONST
(0.290284633636475), FRAC_CONST(0.956940352916718) },

1763 { 
FRAC_CONST
(0.195090234279633), FRAC_CONST(0.980785310268402) },

1764 { 
FRAC_CONST
(0.098017133772373), FRAC_CONST(0.995184719562531) },

1765 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1766 { 
FRAC_CONST
(0.980785250663757), FRAC_CONST(0.195090323686600) },

1767 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

1768 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

1769 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1770 { 
FRAC_CONST
(0.555570185184479), FRAC_CONST(0.831469655036926) },

1771 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1772 { 
FRAC_CONST
(0.195090234279633), FRAC_CONST(0.980785310268402) },

1773 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

1774 { 
FRAC_CONST
(-0.195090323686600), FRAC_CONST(0.980785250663757) },

1775 { 
FRAC_CONST
(-0.382683515548706), FRAC_CONST(0.923879504203796) },

1776 { 
FRAC_CONST
(-0.555570363998413), FRAC_CONST(0.831469535827637) },

1777 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1778 { 
FRAC_CONST
(-0.831469655036926), FRAC_CONST(0.555570185184479) },

1779 { 
FRAC_CONST
(-0.923879623413086), FRAC_CONST(0.382683277130127) },

1780 { 
FRAC_CONST
(-0.980785310268402), FRAC_CONST(0.195090308785439) },

1781 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1782 { 
FRAC_CONST
(0.956940352916718), FRAC_CONST(0.290284663438797) },

1783 { 
FRAC_CONST
(0.831469595432281), FRAC_CONST(0.555570244789124) },

1784 { 
FRAC_CONST
(0.634393274784088), FRAC_CONST(0.773010432720184) },

1785 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1786 { 
FRAC_CONST
(0.098017133772373), FRAC_CONST(0.995184719562531) },

1787 { 
FRAC_CONST
(-0.195090323686600), FRAC_CONST(0.980785250663757) },

1788 { 
FRAC_CONST
(-0.471396833658218), FRAC_CONST(0.881921231746674) },

1789 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1790 { 
FRAC_CONST
(-0.881921231746674), FRAC_CONST(0.471396833658218) },

1791 { 
FRAC_CONST
(-0.980785310268402), FRAC_CONST(0.195090308785439) },

1792 { 
FRAC_CONST
(-0.995184719562531), FRAC_CONST(-0.098017267882824) },

1793 { 
FRAC_CONST
(-0.923879504203796), FRAC_CONST(-0.382683426141739) },

1794 { 
FRAC_CONST
(-0.773010551929474), FRAC_CONST(-0.634393215179443) },

1795 { 
FRAC_CONST
(-0.555570006370544), FRAC_CONST(-0.831469774246216) },

1796 { 
FRAC_CONST
(-0.290284544229507), FRAC_CONST(-0.956940352916718) },

1797 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1798 { 
FRAC_CONST
(0.923879504203796), FRAC_CONST(0.382683455944061) },

1799 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1800 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1801 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1802 { 
FRAC_CONST
(0.707106769084930), FRAC_CONST(0.707106769084930) },

1803 { 
FRAC_CONST
(-0.000000043711388), FRAC_CONST(1.000000000000000) },

1804 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1805 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1806 { 
FRAC_CONST
(0.382683426141739), FRAC_CONST(0.923879504203796) },

1807 { 
FRAC_CONST
(-0.707106769084930), FRAC_CONST(0.707106769084930) },

1808 { 
FRAC_CONST
(-0.923879504203796), FRAC_CONST(-0.382683426141739) },

1809 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1810 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1811 { 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.000000000000000) },

1812 { 
FRAC_CONST
(0.000000011924881), FRAC_CONST(-1.000000000000000) }

1817 #ifde‡
__˝lu•lus


	@common.c

30 
	~"comm⁄.h
"

31 
	~"°ru˘s.h
"

33 
	~<°dlib.h
>

34 
	~"sy¡ax.h
"

38 
uöt8_t
 
	$gë_§_ödex
(c⁄° 
uöt32_t
 
ßm∂î©e
)

40 i‡(92017 <
ßm∂î©e
)  0;

41 i‡(75132 <
ßm∂î©e
)  1;

42 i‡(55426 <
ßm∂î©e
)  2;

43 i‡(46009 <
ßm∂î©e
)  3;

44 i‡(37566 <
ßm∂î©e
)  4;

45 i‡(27713 <
ßm∂î©e
)  5;

46 i‡(23004 <
ßm∂î©e
)  6;

47 i‡(18783 <
ßm∂î©e
)  7;

48 i‡(13856 <
ßm∂î©e
)  8;

49 i‡(11502 <
ßm∂î©e
)  9;

50 i‡(9391 <
ßm∂î©e
)  10;

51 i‡(16428320 <
ßm∂î©e
)  11;

54 
	}
}

57 
uöt32_t
 
	$gë_ßm∂e_øã
(c⁄° 
uöt8_t
 
§_ödex
)

59 c⁄° 
uöt32_t
 
ßm∂e_øãs
[] =

65 i‡(
§_ödex
 < 12)

66  
ßm∂e_øãs
[
§_ödex
];

69 
	}
}

71 
uöt8_t
 
	$max_¥ed_sfb
(c⁄° 
uöt8_t
 
§_ödex
)

73 c⁄° 
uöt8_t
 
¥ed_sfb_max
[] =

79 i‡(
§_ödex
 < 12)

80  
¥ed_sfb_max
[
§_ödex
];

83 
	}
}

85 
uöt8_t
 
	$max_äs_sfb
(c⁄° 
uöt8_t
 
§_ödex
, c⁄° uöt8_à
obje˘_ty≥
,

86 c⁄° 
uöt8_t
 
is_sh‹t
)

94 c⁄° 
uöt8_t
 
äs_sbf_max
[][4] =

113 
uöt8_t
 
i
 = 0;

115 i‡(
is_sh‹t
Ë
i
++;

116 i‡(
obje˘_ty≥
 =
SSR
Ë
i
 += 2;

118  
äs_sbf_max
[
§_ödex
][
i
];

119 
	}
}

122 
öt8_t
 
	$ˇn_decode_Ÿ
(c⁄° 
uöt8_t
 
obje˘_ty≥
)

124 
obje˘_ty≥
)

126 
LC
:

128 
MAIN
:

129 #ifde‡
MAIN_DEC


134 
SSR
:

135 #ifde‡
SSR_DEC


140 
LTP
:

141 #ifde‡
LTP_DEC


148 #ifde‡
ERROR_RESILIENCE


149 
ER_LC
:

150 #ifde‡
DRM


151 
DRM_ER_LC
:

154 
ER_LTP
:

155 #ifde‡
LTP_DEC


160 
LD
:

161 #ifde‡
LD_DEC


170 
	}
}

172 *
	$Áad_mÆloc
(
size_t
 
size
)

175  
	`_Æig√d_mÆloc
(
size
, 16);

177  
	`mÆloc
(
size
);

179 
	}
}

182 
	$Áad_‰ì
(*
b
)

185 
	`_Æig√d_‰ì
(
b
);

187 
	`‰ì
(
b
);

188 
	}
}

191 c⁄° 
uöt8_t
 
	gP¨ôy
 [256] = {

202 
uöt32_t
 
	g__r1
 = 1;

203 
uöt32_t
 
	g__r2
 = 1;

232 
uöt32_t
 
øndom_öt
()

234 
uöt32_t
 
	gt1
, 
	gt2
, 
	gt3
, 
	gt4
;

236 
	gt3
 = 
t1
 = 
__r1
; 
	gt4
 = 
t2
 = 
__r2
;

237 
	gt1
 &0xF5; 
	gt2
 >>= 25;

238 
	gt1
 = 
P¨ôy
 [
t1
]; 
	gt2
 &= 0x63;

239 
	gt1
 <<31; 
	gt2
 = 
P¨ôy
 [
t2
];

241  (
	g__r1
 = (
t3
 >> 1Ë| 
t1
 ) ^ (
__r2
 = (
t4
 +Å4Ë| 
t2
 );

244 
uöt32_t
 
⁄es32
(uöt32_à
x
)

246 
	gx
 -((
x
 >> 1) & 0x55555555);

247 
	gx
 = (((
x
 >> 2) & 0x33333333) + (x & 0x33333333));

248 
	gx
 = (((
x
 >> 4) + x) & 0x0f0f0f0f);

249 
	gx
 +(
x
 >> 8);

250 
	gx
 +(
x
 >> 16);

252  (
	gx
 & 0x0000003f);

255 
uöt32_t
 
Êo‹_log2
(uöt32_à
x
)

258 
	gx
 |(
x
 >> 1);

259 
	gx
 |(
x
 >> 2);

260 
	gx
 |(
x
 >> 4);

261 
	gx
 |(
x
 >> 8);

262 
	gx
 |(
x
 >> 16);

264  (
⁄es32
(
x
) - 1);

266 
uöt32_t
 
	gcou¡
 = 0;

268 
	gx
 >>= 1)

269 
cou¡
++;

271  
	gcou¡
;

277 
uöt32_t
 
wl_mö_lzc
(uöt32_à
x
)

280 
	gx
 |(
x
 >> 1);

281 
	gx
 |(
x
 >> 2);

282 
	gx
 |(
x
 >> 4);

283 
	gx
 |(
x
 >> 8);

284 
	gx
 |(
x
 >> 16);

286  (
⁄es32
(
x
));

288 
uöt32_t
 
	gcou¡
 = 0;

290 
	gx
 >>= 1)

291 
cou¡
++;

293  (
	gcou¡
 + 1);

297 #ifde‡
FIXED_POINT


299 
	#TABLE_BITS
 6

	)

301 
	#INTERP_BITS
 (
REAL_BITS
-
TABLE_BITS
)

	)

303 c⁄° 
ªÆ_t
 
	gpow2_èb
[] = {

304 
REAL_CONST
(1.000000000000000), REAL_CONST(1.010889286051701), REAL_CONST(1.021897148654117),

305 
REAL_CONST
(1.033024879021228), REAL_CONST(1.044273782427414), REAL_CONST(1.055645178360557),

306 
REAL_CONST
(1.067140400676824), REAL_CONST(1.078760797757120), REAL_CONST(1.090507732665258),

307 
REAL_CONST
(1.102382583307841), REAL_CONST(1.114386742595892), REAL_CONST(1.126521618608242),

308 
REAL_CONST
(1.138788634756692), REAL_CONST(1.151189229952983), REAL_CONST(1.163724858777578),

309 
REAL_CONST
(1.176396991650281), REAL_CONST(1.189207115002721), REAL_CONST(1.202156731452703),

310 
REAL_CONST
(1.215247359980469), REAL_CONST(1.228480536106870), REAL_CONST(1.241857812073484),

311 
REAL_CONST
(1.255380757024691), REAL_CONST(1.269050957191733), REAL_CONST(1.282870016078778),

312 
REAL_CONST
(1.296839554651010), REAL_CONST(1.310961211524764), REAL_CONST(1.325236643159741),

313 
REAL_CONST
(1.339667524053303), REAL_CONST(1.354255546936893), REAL_CONST(1.369002422974591),

314 
REAL_CONST
(1.383909881963832), REAL_CONST(1.398979672538311), REAL_CONST(1.414213562373095),

315 
REAL_CONST
(1.429613338391970), REAL_CONST(1.445180806977047), REAL_CONST(1.460917794180647),

316 
REAL_CONST
(1.476826145939499), REAL_CONST(1.492907728291265), REAL_CONST(1.509164427593423),

317 
REAL_CONST
(1.525598150744538), REAL_CONST(1.542210825407941), REAL_CONST(1.559004400237837),

318 
REAL_CONST
(1.575980845107887), REAL_CONST(1.593142151342267), REAL_CONST(1.610490331949254),

319 
REAL_CONST
(1.628027421857348), REAL_CONST(1.645755478153965), REAL_CONST(1.663676580326736),

320 
REAL_CONST
(1.681792830507429), REAL_CONST(1.700106353718524), REAL_CONST(1.718619298122478),

321 
REAL_CONST
(1.737333835273706), REAL_CONST(1.756252160373300), REAL_CONST(1.775376492526521),

322 
REAL_CONST
(1.794709075003107), REAL_CONST(1.814252175500399), REAL_CONST(1.834008086409342),

323 
REAL_CONST
(1.853979125083386), REAL_CONST(1.874167634110300), REAL_CONST(1.894575981586966),

324 
REAL_CONST
(1.915206561397147), REAL_CONST(1.936061793492294), REAL_CONST(1.957144124175400),

325 
REAL_CONST
(1.978456026387951), REAL_CONST(2.000000000000000)

328 c⁄° 
ªÆ_t
 
	glog2_èb
[] = {

329 
REAL_CONST
(0.000000000000000), REAL_CONST(0.022367813028455), REAL_CONST(0.044394119358453),

330 
REAL_CONST
(0.066089190457772), REAL_CONST(0.087462841250339), REAL_CONST(0.108524456778169),

331 
REAL_CONST
(0.129283016944966), REAL_CONST(0.149747119504682), REAL_CONST(0.169925001442312),

332 
REAL_CONST
(0.189824558880017), REAL_CONST(0.209453365628950), REAL_CONST(0.228818690495881),

333 
REAL_CONST
(0.247927513443585), REAL_CONST(0.266786540694901), REAL_CONST(0.285402218862248),

334 
REAL_CONST
(0.303780748177103), REAL_CONST(0.321928094887362), REAL_CONST(0.339850002884625),

335 
REAL_CONST
(0.357552004618084), REAL_CONST(0.375039431346925), REAL_CONST(0.392317422778760),

336 
REAL_CONST
(0.409390936137702), REAL_CONST(0.426264754702098), REAL_CONST(0.442943495848728),

337 
REAL_CONST
(0.459431618637297), REAL_CONST(0.475733430966398), REAL_CONST(0.491853096329675),

338 
REAL_CONST
(0.507794640198696), REAL_CONST(0.523561956057013), REAL_CONST(0.539158811108031),

339 
REAL_CONST
(0.554588851677637), REAL_CONST(0.569855608330948), REAL_CONST(0.584962500721156),

340 
REAL_CONST
(0.599912842187128), REAL_CONST(0.614709844115208), REAL_CONST(0.629356620079610),

341 
REAL_CONST
(0.643856189774725), REAL_CONST(0.658211482751795), REAL_CONST(0.672425341971496),

342 
REAL_CONST
(0.686500527183218), REAL_CONST(0.700439718141092), REAL_CONST(0.714245517666123),

343 
REAL_CONST
(0.727920454563199), REAL_CONST(0.741466986401147), REAL_CONST(0.754887502163469),

344 
REAL_CONST
(0.768184324776926), REAL_CONST(0.781359713524660), REAL_CONST(0.794415866350106),

345 
REAL_CONST
(0.807354922057604), REAL_CONST(0.820178962415188), REAL_CONST(0.832890014164742),

346 
REAL_CONST
(0.845490050944375), REAL_CONST(0.857980995127572), REAL_CONST(0.870364719583405),

347 
REAL_CONST
(0.882643049361841), REAL_CONST(0.894817763307943), REAL_CONST(0.906890595608519),

348 
REAL_CONST
(0.918863237274595), REAL_CONST(0.930737337562886), REAL_CONST(0.942514505339240),

349 
REAL_CONST
(0.954196310386875), REAL_CONST(0.965784284662087), REAL_CONST(0.977279923499917),

350 
REAL_CONST
(0.988684686772166), REAL_CONST(1.000000000000000)

353 
ªÆ_t
 
pow2_fix
‘ól_à
vÆ
)

355 
uöt32_t
 
	gx1
, 
	gx2
;

356 
uöt32_t
 
	gîrc‹r
;

357 
uöt32_t
 
	gödex_‰ac
;

358 
ªÆ_t
 
	gªtvÆ
;

359 
öt32_t
 
	gwhﬁe
 = (
vÆ
 >> 
REAL_BITS
);

362 
öt32_t
 
	gª°
 = 
vÆ
 - (
whﬁe
 << 
REAL_BITS
);

365 
öt32_t
 
	gödex
 = 
ª°
 >> (
REAL_BITS
-
TABLE_BITS
);

368 i‡(
	gvÆ
 == 0)

369  (1<<
REAL_BITS
);

372 
	gödex_‰ac
 = 
ª°
 >> (
REAL_BITS
-
TABLE_BITS
-
INTERP_BITS
);

373 
	gödex_‰ac
 = 
ödex_‰ac
 & ((1<<
INTERP_BITS
)-1);

375 i‡(
	gwhﬁe
 > 0)

377 
	gªtvÆ
 = 1 << 
whﬁe
;

379 
	gªtvÆ
 = 
REAL_CONST
(1Ë>> -
whﬁe
;

382 
	gx1
 = 
pow2_èb
[
ödex
 & ((1<<
TABLE_BITS
)-1)];

383 
	gx2
 = 
pow2_èb
[(
ödex
 & ((1<<
TABLE_BITS
)-1)) + 1];

384 
	gîrc‹r
 = ( (
ödex_‰ac
*(
x2
-
x1
))Ë>> 
INTERP_BITS
;

386 i‡(
	gwhﬁe
 > 0)

388 
	gªtvÆ
 = 
ªtvÆ
 * (
îrc‹r
 + 
x1
);

390 
	gªtvÆ
 = 
MUL_R
(
ªtvÆ
, (
îrc‹r
 + 
x1
));

393  
	gªtvÆ
;

396 
öt32_t
 
pow2_öt
(
ªÆ_t
 
vÆ
)

398 
uöt32_t
 
	gx1
, 
	gx2
;

399 
uöt32_t
 
	gîrc‹r
;

400 
uöt32_t
 
	gödex_‰ac
;

401 
ªÆ_t
 
	gªtvÆ
;

402 
öt32_t
 
	gwhﬁe
 = (
vÆ
 >> 
REAL_BITS
);

405 
öt32_t
 
	gª°
 = 
vÆ
 - (
whﬁe
 << 
REAL_BITS
);

408 
öt32_t
 
	gödex
 = 
ª°
 >> (
REAL_BITS
-
TABLE_BITS
);

411 i‡(
	gvÆ
 == 0)

415 
	gödex_‰ac
 = 
ª°
 >> (
REAL_BITS
-
TABLE_BITS
-
INTERP_BITS
);

416 
	gödex_‰ac
 = 
ödex_‰ac
 & ((1<<
INTERP_BITS
)-1);

418 i‡(
	gwhﬁe
 > 0)

419 
	gªtvÆ
 = 1 << 
whﬁe
;

421 
	gªtvÆ
 = 0;

423 
	gx1
 = 
pow2_èb
[
ödex
 & ((1<<
TABLE_BITS
)-1)];

424 
	gx2
 = 
pow2_èb
[(
ödex
 & ((1<<
TABLE_BITS
)-1)) + 1];

425 
	gîrc‹r
 = ( (
ödex_‰ac
*(
x2
-
x1
))Ë>> 
INTERP_BITS
;

427 
	gªtvÆ
 = 
MUL_R
(
ªtvÆ
, (
îrc‹r
 + 
x1
));

429  
	gªtvÆ
;

433 
öt32_t
 
log2_öt
(
uöt32_t
 
vÆ
)

435 
uöt32_t
 
	g‰ac
;

436 
uöt32_t
 
	gwhﬁe
 = (
vÆ
);

437 
öt32_t
 
	gexp
 = 0;

438 
uöt32_t
 
	gödex
;

439 
uöt32_t
 
	gödex_‰ac
;

440 
uöt32_t
 
	gx1
, 
	gx2
;

441 
uöt32_t
 
	gîrc‹r
;

444 i‡(
	gvÆ
 == 0)

447 
	gexp
 = 
Êo‹_log2
(
vÆ
);

448 
	gexp
 -
REAL_BITS
;

451 i‡(
	gexp
 >= 0)

452 
‰ac
 = 
vÆ
 >> 
exp
;

454 
	g‰ac
 = 
vÆ
 << -
exp
;

457 
	gödex
 = 
‰ac
 >> (
REAL_BITS
-
TABLE_BITS
);

460 
	gödex_‰ac
 = 
‰ac
 & ((1<<(
REAL_BITS
-
TABLE_BITS
))-1);

463 
	gödex_‰ac
 = 
ödex_‰ac
 >> (
REAL_BITS
-
TABLE_BITS
-
INTERP_BITS
);

465 
	gx1
 = 
log2_èb
[
ödex
 & ((1<<
TABLE_BITS
)-1)];

466 
	gx2
 = 
log2_èb
[(
ödex
 & ((1<<
TABLE_BITS
)-1)) + 1];

471 
	gîrc‹r
 = (
ödex_‰ac
 * (
x2
-
x1
)Ë>> 
INTERP_BITS
;

473  ((
	gexp
+
	gREAL_BITS
Ë<< REAL_BITSË+ 
	gîrc‹r
 + 
	gx1
;

477 
ªÆ_t
 
log2_fix
(
uöt32_t
 
vÆ
)

479 
uöt32_t
 
	g‰ac
;

480 
uöt32_t
 
	gwhﬁe
 = (
vÆ
 >> 
REAL_BITS
);

481 
öt8_t
 
	gexp
 = 0;

482 
uöt32_t
 
	gödex
;

483 
uöt32_t
 
	gödex_‰ac
;

484 
uöt32_t
 
	gx1
, 
	gx2
;

485 
uöt32_t
 
	gîrc‹r
;

488 i‡(
	gvÆ
 == 0)

491 
	gexp
 = 
Êo‹_log2
(
vÆ
);

492 
	gexp
 -
REAL_BITS
;

495 i‡(
	gexp
 >= 0)

496 
‰ac
 = 
vÆ
 >> 
exp
;

498 
	g‰ac
 = 
vÆ
 << -
exp
;

501 
	gödex
 = 
‰ac
 >> (
REAL_BITS
-
TABLE_BITS
);

504 
	gödex_‰ac
 = 
‰ac
 & ((1<<(
REAL_BITS
-
TABLE_BITS
))-1);

507 
	gödex_‰ac
 = 
ödex_‰ac
 >> (
REAL_BITS
-
TABLE_BITS
-
INTERP_BITS
);

509 
	gx1
 = 
log2_èb
[
ödex
 & ((1<<
TABLE_BITS
)-1)];

510 
	gx2
 = 
log2_èb
[(
ödex
 & ((1<<
TABLE_BITS
)-1)) + 1];

515 
	gîrc‹r
 = (
ödex_‰ac
 * (
x2
-
x1
)Ë>> 
INTERP_BITS
;

517  (
	gexp
 << 
	gREAL_BITS
Ë+ 
	gîrc‹r
 + 
	gx1
;

	@common.h

28 #i‚de‡
__COMMON_H__


29 
	#__COMMON_H__


	)

31 #i‡
HAVE_SYS_TYPES_H


33 #i‚de‡
œfj


34 
	#œfj


	)

36 #ifde‡
__˝lu•lus


40 #ifde‡
HAVE_CONFIG_H


41 
	~"../c⁄fig.h
"

44 
	#INLINE
 
__ölöe


	)

46 
	#ALIGN
 
	`__de˛•ec
(
	`Æign
(16))

	)

49 
	#ALIGN


	)

52 #i‚de‡
max


53 
	#max
(
a
, 
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

55 #i‚de‡
mö


56 
	#mö
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

70 #ifde‡
_WIN32_WCE


71 
	#FIXED_POINT


	)

75 
	#ERROR_RESILIENCE


	)

79 
	#MAIN_DEC


	)

83 
	#LTP_DEC


	)

85 
	#LD_DEC


	)

93 #ifde‡
LD_DEC


94 #i‚de‡
ERROR_RESILIENCE


95 
	#ERROR_RESILIENCE


	)

97 #i‚de‡
LTP_DEC


98 
	#LTP_DEC


	)

102 
	#ALLOW_SMALL_FRAMELENGTH


	)

107 #ifde‡
LC_ONLY_DECODER


108 #unde‡
LD_DEC


109 #unde‡
LTP_DEC


110 #unde‡
MAIN_DEC


111 #unde‡
SSR_DEC


112 #unde‡
DRM


113 #unde‡
ALLOW_SMALL_FRAMELENGTH


114 #unde‡
ERROR_RESILIENCE


117 
	#SBR_DEC


	)

119 
	#PS_DEC


	)

122 #ifde‡
FIXED_POINT


123 #ifde‡
MAIN_DEC


124 #unde‡
MAIN_DEC


128 #ifde‡
DRM


129 #i‚de‡
SCALABLE_DEC


130 
	#SCALABLE_DEC


	)

135 #ifde‡
FIXED_POINT


136 
	#DIV_R
(
A
, 
B
Ë(((
öt64_t
)A << 
REAL_BITS
)/B)

	)

137 
	#DIV_C
(
A
, 
B
Ë(((
öt64_t
)A << 
COEF_BITS
)/B)

	)

140 
	#DIV_R
(
A
, 
B
Ë((A)/(B))

	)

141 
	#DIV_C
(
A
, 
B
Ë((A)/(B))

	)

144 #i‚de‡
SBR_LOW_POWER


145 
	#qmf_t
 
com∂ex_t


	)

146 
	#QMF_RE
(
A
Ë
	`RE
(A)

	)

147 
	#QMF_IM
(
A
Ë
	`IM
(A)

	)

150 
	#qmf_t
 
ªÆ_t


	)

151 
	#QMF_RE
(
A
Ë(A)

	)

152 
	#QMF_IM
(
A
)

	)

158 #i‡
deföed
(
_WIN32
Ë&& !deföed(
__MINGW32__
)

160 
	~<°dlib.h
>

162 
	t__öt64
 
	tuöt64_t
;

163 
	t__öt32
 
	tuöt32_t
;

164 
	t__öt16
 
	tuöt16_t
;

165 
	t__öt8
 
	tuöt8_t
;

166 
__öt64
 
	töt64_t
;

167 
__öt32
 
	töt32_t
;

168 
__öt16
 
	töt16_t
;

169 
__öt8
 
	töt8_t
;

170 
	tÊﬂt32_t
;

176 
	~<°dio.h
>

177 #i‡
HAVE_SYS_TYPES_H


178 
	~<sys/ty≥s.h
>

180 #i‡
HAVE_SYS_STAT_H


181 
	~<sys/°©.h
>

183 #i‡
STDC_HEADERS


184 
	~<°dlib.h
>

185 
	~<°ddef.h
>

188 #i‡
HAVE_STDLIB_H


189 
	~<°dlib.h
>

192 #i‡
HAVE_STRING_H


193 #i‡!
STDC_HEADERS
 && 
HAVE_MEMORY_H


194 
	~<mem‹y.h
>

196 
	~<°rög.h
>

198 #i‡
HAVE_STRINGS_H


199 
	~<°rögs.h
>

201 #i‡
HAVE_INTTYPES_H


202 
	~<öây≥s.h
>

205 #i‡
HAVE_STDINT_H


206 
	~<°döt.h
>

209 
	tuöt64_t
;

210 
	tuöt32_t
;

211 
	tuöt16_t
;

212 
	tuöt8_t
;

213 
	töt64_t
;

214 
	töt32_t
;

215 
	töt16_t
;

216 
	töt8_t
;

219 #i‡
HAVE_UNISTD_H


220 
	~<uni°d.h
>

223 #i‚de‡
HAVE_FLOAT32_T


224 
	tÊﬂt32_t
;

227 #i‡
STDC_HEADERS


228 
	~<°rög.h
>

231 #i‡!
HAVE_STRCHR


232 
	#°rchr
 
ödex


	)

233 
	#°ºchr
 
rödex


	)

235 *
°rchr
(), *
°ºchr
();

236 #i‡!
HAVE_MEMCPY


237 
	#mem˝y
(
d
, 
s
, 
n
Ë
	`bc›y
((s), (d), (n))

	)

238 
	#memmove
(
d
, 
s
, 
n
Ë
	`bc›y
((s), (d), (n))

	)

244 #ifde‡
WORDS_BIGENDIAN


245 
	#ARCH_IS_BIG_ENDIAN


	)

249 #ifde‡
FIXED_POINT


250 #unde‡
MAIN_DEC


251 #unde‡
SSR_DEC


255 #i‡
deföed
(
FIXED_POINT
)

257 
	~"fixed.h
"

259 #ñi‡
deföed
(
USE_DOUBLE_PRECISION
)

261 
	tªÆ_t
;

263 
	~<m©h.h
>

265 
	#MUL_R
(
A
,
B
Ë((A)*(B))

	)

266 
	#MUL_C
(
A
,
B
Ë((A)*(B))

	)

267 
	#MUL_F
(
A
,
B
Ë((A)*(B))

	)

270 
INLINE
 
Com∂exMu…
(
ªÆ_t
 *
y1
,Ñól_à*
y2
,

271 
ªÆ_t
 
x1
,Ñól_à
x2
,Ñól_à
c1
,Ñól_à
c2
)

273 *
y1
 = 
MUL_F
(
x1
, 
c1
Ë+ MUL_F(
x2
, 
c2
);

274 *
y2
 = 
MUL_F
(
x2
, 
c1
Ë- MUL_F(
x1
, 
c2
);

277 
	#REAL_CONST
(
A
Ë((
ªÆ_t
)(A))

	)

278 
	#COEF_CONST
(
A
Ë((
ªÆ_t
)(A))

	)

279 
	#Q2_CONST
(
A
Ë((
ªÆ_t
)(A))

	)

280 
	#FRAC_CONST
(
A
Ë((
ªÆ_t
)(A)Ë

	)

285 
	tªÆ_t
;

287 
	#MUL_R
(
A
,
B
Ë((A)*(B))

	)

288 
	#MUL_C
(
A
,
B
Ë((A)*(B))

	)

289 
	#MUL_F
(
A
,
B
Ë((A)*(B))

	)

291 
	#REAL_CONST
(
A
Ë((
ªÆ_t
)(A))

	)

292 
	#COEF_CONST
(
A
Ë((
ªÆ_t
)(A))

	)

293 
	#Q2_CONST
(
A
Ë((
ªÆ_t
)(A))

	)

294 
	#FRAC_CONST
(
A
Ë((
ªÆ_t
)(A)Ë

	)

297 
INLINE
 
Com∂exMu…
(
ªÆ_t
 *
y1
,Ñól_à*
y2
,

298 
ªÆ_t
 
x1
,Ñól_à
x2
,Ñól_à
c1
,Ñól_à
c2
)

300 *
y1
 = 
MUL_F
(
x1
, 
c1
Ë+ MUL_F(
x2
, 
c2
);

301 *
y2
 = 
MUL_F
(
x2
, 
c1
Ë- MUL_F(
x1
, 
c2
);

305 #i‡
deföed
(
_WIN32
Ë&& !deföed(
__MINGW32__
)

306 
	#HAS_LRINTF


	)

307 
INLINE
 
Ãötf
(
f
)

309 
i
;

310 
__asm


312 
Êd
 
f


313 
fi°p
 
i


315  
i
;

317 #ñi‡(
deföed
(
__i386__
Ë&& deföed(
__GNUC__
))

318 
	#HAS_LRINTF


	)

320 
INLINE
 
Ãötf
(
f
)

322 
i
;

323 
__asm__
 
__vﬁ©ûe__
 (

326 : "=m" (
i
)

327 : "m" (
f
));

328  
i
;

333 #ifde‡
__ICL


335 
	~<m©hf.h
>

337 
	#sö
 
söf


	)

338 
	#cos
 
cosf


	)

339 
	#log
 
logf


	)

340 
	#Êo‹
 
Êo‹f


	)

341 
	#˚û
 
˚ûf


	)

342 
	#sqπ
 
sqπf


	)

347 #ifde‡
HAVE_LRINTF


348 
	#HAS_LRINTF


	)

349 
	#_ISOC9X_SOURCE
 1

	)

350 
	#_ISOC99_SOURCE
 1

	)

351 
	#__USE_ISOC9X
 1

	)

352 
	#__USE_ISOC99
 1

	)

355 
	~<m©h.h
>

357 #ifde‡
HAVE_SINF


358 
	#sö
 
söf


	)

361 #ifde‡
HAVE_COSF


362 
	#cos
 
cosf


	)

364 #ifde‡
HAVE_LOGF


365 
	#log
 
logf


	)

367 #ifde‡
HAVE_EXPF


368 
	#exp
 
expf


	)

370 #ifde‡
HAVE_FLOORF


371 
	#Êo‹
 
Êo‹f


	)

373 #ifde‡
HAVE_CEILF


374 
	#˚û
 
˚ûf


	)

376 #ifde‡
HAVE_SQRTF


377 
	#sqπ
 
sqπf


	)

384 #i‚de‡
HAS_LRINTF


386 
	#Ãötf
(
f
Ë((
öt32_t
)(f))

	)

389 
ªÆ_t
 
	tcom∂ex_t
[2];

390 
	#RE
(
A
ËA[0]

	)

391 
	#IM
(
A
ËA[1]

	)

395 
uöt8_t
 
˝u_has_s£
();

396 
uöt32_t
 
øndom_öt
();

397 
uöt32_t
 
⁄es32
(uöt32_à
x
);

398 
uöt32_t
 
Êo‹_log2
(uöt32_à
x
);

399 
uöt32_t
 
wl_mö_lzc
(uöt32_à
x
);

400 #ifde‡
FIXED_POINT


401 
	#LOG2_MIN_INF
 
	`REAL_CONST
(-10000)

	)

402 
öt32_t
 
log2_öt
(
uöt32_t
 
vÆ
);

403 
öt32_t
 
log2_fix
(
uöt32_t
 
vÆ
);

404 
öt32_t
 
pow2_öt
(
ªÆ_t
 
vÆ
);

405 
ªÆ_t
 
pow2_fix
‘ól_à
vÆ
);

407 
uöt8_t
 
gë_§_ödex
(c⁄° 
uöt32_t
 
ßm∂î©e
);

408 
uöt8_t
 
max_¥ed_sfb
(c⁄° uöt8_à
§_ödex
);

409 
uöt8_t
 
max_äs_sfb
(c⁄° uöt8_à
§_ödex
, c⁄° uöt8_à
obje˘_ty≥
,

410 c⁄° 
uöt8_t
 
is_sh‹t
);

411 
uöt32_t
 
gë_ßm∂e_øã
(c⁄° 
uöt8_t
 
§_ödex
);

412 
öt8_t
 
ˇn_decode_Ÿ
(c⁄° 
uöt8_t
 
obje˘_ty≥
);

414 *
Áad_mÆloc
(
size_t
 
size
);

415 
Áad_‰ì
(*
b
);

418 #ifde‡
PROFILE


419 
öt64_t
 
Áad_gë_ts
()

421 
__asm


423 
rdtsc


428 #i‚de‡
M_PI


429 
	#M_PI
 3.14159265358979323846

	)

431 #i‚de‡
M_PI_2


432 
	#M_PI_2
 1.57079632679489661923

	)

436 #ifde‡
__˝lu•lus


	@common_dummy.c

28 #i‚de‡
__COMMON_H__


29 
	#__COMMON_H__


	)

31 #i‡
HAVE_SYS_TYPES_H


33 #i‚de‡
œfj


34 
	#œfj


	)

36 #ifde‡
__˝lu•lus


40 #ifde‡
HAVE_CONFIG_H


41 
	~"../c⁄fig.h
"

44 
	#INLINE
 
__ölöe


	)

46 
	#ALIGN
 
	`__de˛•ec
(
	`Æign
(16))

	)

49 
	#ALIGN


	)

52 #i‚de‡
max


53 
	#max
(
a
, 
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

55 #i‚de‡
mö


56 
	#mö
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

70 #ifde‡
_WIN32_WCE


71 
	#FIXED_POINT


	)

75 
	#ERROR_RESILIENCE


	)

79 
	#MAIN_DEC


	)

83 
	#LTP_DEC


	)

85 
	#LD_DEC


	)

93 #ifde‡
LD_DEC


94 #i‚de‡
ERROR_RESILIENCE


95 
	#ERROR_RESILIENCE


	)

97 #i‚de‡
LTP_DEC


98 
	#LTP_DEC


	)

102 
	#ALLOW_SMALL_FRAMELENGTH


	)

107 #ifde‡
LC_ONLY_DECODER


108 #unde‡
LD_DEC


109 #unde‡
LTP_DEC


110 #unde‡
MAIN_DEC


111 #unde‡
SSR_DEC


112 #unde‡
DRM


113 #unde‡
ALLOW_SMALL_FRAMELENGTH


114 #unde‡
ERROR_RESILIENCE


117 
	#SBR_DEC


	)

119 
	#PS_DEC


	)

122 #ifde‡
FIXED_POINT


123 #ifde‡
MAIN_DEC


124 #unde‡
MAIN_DEC


128 #ifde‡
DRM


129 #i‚de‡
SCALABLE_DEC


130 
	#SCALABLE_DEC


	)

135 #ifde‡
FIXED_POINT


136 
	#DIV_R
(
A
, 
B
Ë(((
öt64_t
)A << 
REAL_BITS
)/B)

	)

137 
	#DIV_C
(
A
, 
B
Ë(((
öt64_t
)A << 
COEF_BITS
)/B)

	)

140 
	#DIV_R
(
A
, 
B
Ë((A)/(B))

	)

141 
	#DIV_C
(
A
, 
B
Ë((A)/(B))

	)

144 #i‚de‡
SBR_LOW_POWER


145 
	#qmf_t
 
com∂ex_t


	)

146 
	#QMF_RE
(
A
Ë
	`RE
(A)

	)

147 
	#QMF_IM
(
A
Ë
	`IM
(A)

	)

150 
	#qmf_t
 
ªÆ_t


	)

151 
	#QMF_RE
(
A
Ë(A)

	)

152 
	#QMF_IM
(
A
)

	)

158 #i‡
deföed
(
_WIN32
Ë&& !deföed(
__MINGW32__
)

160 
	~<°dlib.h
>

162 
	t__öt64
 
	tuöt64_t
;

163 
	t__öt32
 
	tuöt32_t
;

164 
	t__öt16
 
	tuöt16_t
;

165 
	t__öt8
 
	tuöt8_t
;

166 
__öt64
 
	töt64_t
;

167 
__öt32
 
	töt32_t
;

168 
__öt16
 
	töt16_t
;

169 
__öt8
 
	töt8_t
;

170 
	tÊﬂt32_t
;

176 
	~<°dio.h
>

177 #i‡
HAVE_SYS_TYPES_H


178 
	~<sys/ty≥s.h
>

180 #i‡
HAVE_SYS_STAT_H


181 
	~<sys/°©.h
>

183 #i‡
STDC_HEADERS


184 
	~<°dlib.h
>

185 
	~<°ddef.h
>

188 #i‡
HAVE_STDLIB_H


189 
	~<°dlib.h
>

192 #i‡
HAVE_STRING_H


193 #i‡!
STDC_HEADERS
 && 
HAVE_MEMORY_H


194 
	~<mem‹y.h
>

196 
	~<°rög.h
>

198 #i‡
HAVE_STRINGS_H


199 
	~<°rögs.h
>

201 #i‡
HAVE_INTTYPES_H


202 
	~<öây≥s.h
>

205 #i‡
HAVE_STDINT_H


206 
	~<°döt.h
>

209 
	tuöt64_t
;

210 
	tuöt32_t
;

211 
	tuöt16_t
;

212 
	tuöt8_t
;

213 
	töt64_t
;

214 
	töt32_t
;

215 
	töt16_t
;

216 
	töt8_t
;

219 #i‡
HAVE_UNISTD_H


220 
	~<uni°d.h
>

223 #i‚de‡
HAVE_FLOAT32_T


224 
	tÊﬂt32_t
;

227 #i‡
STDC_HEADERS


228 
	~<°rög.h
>

231 #i‡!
HAVE_STRCHR


232 
	#°rchr
 
ödex


	)

233 
	#°ºchr
 
rödex


	)

235 *
°rchr
(), *
°ºchr
();

236 #i‡!
HAVE_MEMCPY


237 
	#mem˝y
(
d
, 
s
, 
n
Ë
	`bc›y
((s), (d), (n))

	)

238 
	#memmove
(
d
, 
s
, 
n
Ë
	`bc›y
((s), (d), (n))

	)

244 #ifde‡
WORDS_BIGENDIAN


245 
	#ARCH_IS_BIG_ENDIAN


	)

249 #ifde‡
FIXED_POINT


250 #unde‡
MAIN_DEC


251 #unde‡
SSR_DEC


255 #i‡
deföed
(
FIXED_POINT
)

257 
	~"fixed.h
"

259 #ñi‡
deföed
(
USE_DOUBLE_PRECISION
)

261 
	tªÆ_t
;

263 
	~<m©h.h
>

265 
	#MUL_R
(
A
,
B
Ë((A)*(B))

	)

266 
	#MUL_C
(
A
,
B
Ë((A)*(B))

	)

267 
	#MUL_F
(
A
,
B
Ë((A)*(B))

	)

270 
INLINE
 
Com∂exMu…
(
ªÆ_t
 *
y1
,Ñól_à*
y2
,

271 
ªÆ_t
 
x1
,Ñól_à
x2
,Ñól_à
c1
,Ñól_à
c2
)

273 *
y1
 = 
MUL_F
(
x1
, 
c1
Ë+ MUL_F(
x2
, 
c2
);

274 *
y2
 = 
MUL_F
(
x2
, 
c1
Ë- MUL_F(
x1
, 
c2
);

277 
	#REAL_CONST
(
A
Ë((
ªÆ_t
)(A))

	)

278 
	#COEF_CONST
(
A
Ë((
ªÆ_t
)(A))

	)

279 
	#Q2_CONST
(
A
Ë((
ªÆ_t
)(A))

	)

280 
	#FRAC_CONST
(
A
Ë((
ªÆ_t
)(A)Ë

	)

285 
	tªÆ_t
;

287 
	#MUL_R
(
A
,
B
Ë((A)*(B))

	)

288 
	#MUL_C
(
A
,
B
Ë((A)*(B))

	)

289 
	#MUL_F
(
A
,
B
Ë((A)*(B))

	)

291 
	#REAL_CONST
(
A
Ë((
ªÆ_t
)(A))

	)

292 
	#COEF_CONST
(
A
Ë((
ªÆ_t
)(A))

	)

293 
	#Q2_CONST
(
A
Ë((
ªÆ_t
)(A))

	)

294 
	#FRAC_CONST
(
A
Ë((
ªÆ_t
)(A)Ë

	)

297 
INLINE
 
Com∂exMu…
(
ªÆ_t
 *
y1
,Ñól_à*
y2
,

298 
ªÆ_t
 
x1
,Ñól_à
x2
,Ñól_à
c1
,Ñól_à
c2
)

300 *
y1
 = 
MUL_F
(
x1
, 
c1
Ë+ MUL_F(
x2
, 
c2
);

301 *
y2
 = 
MUL_F
(
x2
, 
c1
Ë- MUL_F(
x1
, 
c2
);

305 #i‡
deföed
(
_WIN32
Ë&& !deföed(
__MINGW32__
)

306 
	#HAS_LRINTF


	)

307 
INLINE
 
Ãötf
(
f
)

309 
i
;

310 
__asm


312 
Êd
 
f


313 
fi°p
 
i


315  
i
;

317 #ñi‡(
deföed
(
__i386__
Ë&& deföed(
__GNUC__
))

318 
	#HAS_LRINTF


	)

320 
INLINE
 
Ãötf
(
f
)

322 
i
;

323 
__asm__
 
__vﬁ©ûe__
 (

326 : "=m" (
i
)

327 : "m" (
f
));

328  
i
;

333 #ifde‡
__ICL


335 
	~<m©hf.h
>

337 
	#sö
 
söf


	)

338 
	#cos
 
cosf


	)

339 
	#log
 
logf


	)

340 
	#Êo‹
 
Êo‹f


	)

341 
	#˚û
 
˚ûf


	)

342 
	#sqπ
 
sqπf


	)

347 #ifde‡
HAVE_LRINTF


348 
	#HAS_LRINTF


	)

349 
	#_ISOC9X_SOURCE
 1

	)

350 
	#_ISOC99_SOURCE
 1

	)

351 
	#__USE_ISOC9X
 1

	)

352 
	#__USE_ISOC99
 1

	)

355 
	~<m©h.h
>

357 #ifde‡
HAVE_SINF


358 
	#sö
 
söf


	)

361 #ifde‡
HAVE_COSF


362 
	#cos
 
cosf


	)

364 #ifde‡
HAVE_LOGF


365 
	#log
 
logf


	)

367 #ifde‡
HAVE_EXPF


368 
	#exp
 
expf


	)

370 #ifde‡
HAVE_FLOORF


371 
	#Êo‹
 
Êo‹f


	)

373 #ifde‡
HAVE_CEILF


374 
	#˚û
 
˚ûf


	)

376 #ifde‡
HAVE_SQRTF


377 
	#sqπ
 
sqπf


	)

384 #i‚de‡
HAS_LRINTF


386 
	#Ãötf
(
f
Ë((
öt32_t
)(f))

	)

389 
ªÆ_t
 
	tcom∂ex_t
[2];

390 
	#RE
(
A
ËA[0]

	)

391 
	#IM
(
A
ËA[1]

	)

395 
uöt8_t
 
˝u_has_s£
();

396 
uöt32_t
 
øndom_öt
();

397 
uöt32_t
 
⁄es32
(uöt32_à
x
);

398 
uöt32_t
 
Êo‹_log2
(uöt32_à
x
);

399 
uöt32_t
 
wl_mö_lzc
(uöt32_à
x
);

400 #ifde‡
FIXED_POINT


401 
	#LOG2_MIN_INF
 
	`REAL_CONST
(-10000)

	)

402 
öt32_t
 
log2_öt
(
uöt32_t
 
vÆ
);

403 
öt32_t
 
log2_fix
(
uöt32_t
 
vÆ
);

404 
öt32_t
 
pow2_öt
(
ªÆ_t
 
vÆ
);

405 
ªÆ_t
 
pow2_fix
‘ól_à
vÆ
);

407 
uöt8_t
 
gë_§_ödex
(c⁄° 
uöt32_t
 
ßm∂î©e
);

408 
uöt8_t
 
max_¥ed_sfb
(c⁄° uöt8_à
§_ödex
);

409 
uöt8_t
 
max_äs_sfb
(c⁄° uöt8_à
§_ödex
, c⁄° uöt8_à
obje˘_ty≥
,

410 c⁄° 
uöt8_t
 
is_sh‹t
);

411 
uöt32_t
 
gë_ßm∂e_øã
(c⁄° 
uöt8_t
 
§_ödex
);

412 
öt8_t
 
ˇn_decode_Ÿ
(c⁄° 
uöt8_t
 
obje˘_ty≥
);

414 *
Áad_mÆloc
(
size_t
 
size
);

415 
Áad_‰ì
(*
b
);

418 #ifde‡
PROFILE


419 
öt64_t
 
Áad_gë_ts
()

421 
__asm


423 
rdtsc


428 #i‚de‡
M_PI


429 
	#M_PI
 3.14159265358979323846

	)

431 #i‚de‡
M_PI_2


432 
	#M_PI_2
 1.57079632679489661923

	)

436 #ifde‡
__˝lu•lus


	@decoder.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 
	~<°dlib.h
>

32 
	~<°rög.h
>

34 
	~"decodî.h
"

35 
	~"mp4.h
"

36 
	~"sy¡ax.h
"

37 
	~"îr‹.h
"

38 
	~"ouçut.h
"

39 
	~"fûtb™k.h
"

40 
	~"drc.h
"

42 
	#ERROR_RESILIENCE


	)

44 #ifde‡
SBR_DEC


45 
	~"sbr_dec.h
"

46 
	~"sbr_sy¡ax.h
"

48 #ifde‡
SSR_DEC


49 
	~"s§.h
"

52 #ifde‡
ANALYSIS


53 
uöt16_t
 
	gdbg_cou¡
;

57 * 
Øc_‰ame_decode
(
NeAACDecH™dÀ
 
hDecodî
, 
NeAACDecFømeInfo
 *
hInfo
,

58 
uöt8_t
 *
buf„r
, 
uöt32_t
 
buf„r_size
,

59 **
ßm∂e_buf„r
, 
uöt32_t
 
ßm∂e_buf„r_size
);

60 
¸óã_ch™√l_c⁄fig
(
NeAACDecH™dÀ
 
hDecodî
, 
NeAACDecFømeInfo
 *
hInfo
);

63 * 
NEAACDECAPI
 
	$NeAACDecGëEº‹Mesßge
(
uöt8_t
 
îrcode
)

65 i‡(
îrcode
 >
NUM_ERROR_MESSAGES
)

66  
NULL
;

67  
îr_msg
[
îrcode
];

68 
	}
}

70 
uöt32_t
 
NEAACDECAPI
 
	$NeAACDecGëC≠abûôõs
()

72 
uöt32_t
 
ˇp
 = 0;

75 
ˇp
 +
LC_DEC_CAP
;

77 #ifde‡
MAIN_DEC


78 
ˇp
 +
MAIN_DEC_CAP
;

80 #ifde‡
LTP_DEC


81 
ˇp
 +
LTP_DEC_CAP
;

83 #ifde‡
LD_DEC


84 
ˇp
 +
LD_DEC_CAP
;

86 #ifde‡
ERROR_RESILIENCE


87 
ˇp
 +
ERROR_RESILIENCE_CAP
;

89 #ifde‡
FIXED_POINT


90 
ˇp
 +
FIXED_POINT_CAP
;

93  
ˇp
;

94 
	}
}

96 
NeAACDecH™dÀ
 
NEAACDECAPI
 
	$NeAACDecO≥n
()

98 
uöt8_t
 
i
;

99 
NeAACDecH™dÀ
 
hDecodî
 = 
NULL
;

101 i‡((
hDecodî
 = (
NeAACDecH™dÀ
)
	`Áad_mÆloc
((
NeAACDecSåu˘
))Ë=
NULL
)

102  
NULL
;

104 
	`mem£t
(
hDecodî
, 0, (
NeAACDecSåu˘
));

106 
hDecodî
->
c⁄fig
.
ouçutF‹m©
 = 
FAAD_FMT_16BIT
;

107 
hDecodî
->
c⁄fig
.
defObje˘Ty≥
 = 
MAIN
;

108 
hDecodî
->
c⁄fig
.
defSam∂eR©e
 = 44100;

109 
hDecodî
->
c⁄fig
.
downM©rix
 = 0;

110 
hDecodî
->
adts_hódî_¥e£¡
 = 0;

111 
hDecodî
->
adif_hódî_¥e£¡
 = 0;

112 #ifde‡
ERROR_RESILIENCE


113 
hDecodî
->
ØcSe˘i⁄D©aResûõn˚Fœg
 = 0;

114 
hDecodî
->
ØcSˇÀÁ˘‹D©aResûõn˚Fœg
 = 0;

115 
hDecodî
->
ØcS≥˘ølD©aResûõn˚Fœg
 = 0;

117 
hDecodî
->
‰ameLígth
 = 1024;

119 
hDecodî
->
‰ame
 = 0;

120 
hDecodî
->
ßm∂e_buf„r
 = 
NULL
;

122 
i
 = 0; i < 
MAX_CHANNELS
; i++)

124 
hDecodî
->
wödow_sh≠e_¥ev
[
i
] = 0;

125 
hDecodî
->
time_out
[
i
] = 
NULL
;

126 
hDecodî
->
fb_öãrmed
[
i
] = 
NULL
;

127 #ifde‡
SSR_DEC


128 
hDecodî
->
s§_ovîœp
[
i
] = 
NULL
;

129 
hDecodî
->
¥ev_fmd
[
i
] = 
NULL
;

131 #ifde‡
MAIN_DEC


132 
hDecodî
->
¥ed_°©
[
i
] = 
NULL
;

134 #ifde‡
LTP_DEC


135 
hDecodî
->
…p_œg
[
i
] = 0;

136 
hDecodî
->
…_¥ed_°©
[
i
] = 
NULL
;

140 #ifde‡
SBR_DEC


141 
i
 = 0; i < 
MAX_SYNTAX_ELEMENTS
; i++)

143 
hDecodî
->
sbr
[
i
] = 
NULL
;

147 
hDecodî
->
drc
 = 
	`drc_öô
(
	`REAL_CONST
(1.0), REAL_CONST(1.0));

149  
hDecodî
;

150 
	}
}

152 
NeAACDecC⁄figuøti⁄På
 
NEAACDECAPI
 
	$NeAACDecGëCuºítC⁄figuøti⁄
(
NeAACDecH™dÀ
 
hDecodî
)

154 i‡(
hDecodî
)

156 
NeAACDecC⁄figuøti⁄På
 
c⁄fig
 = &(
hDecodî
->config);

158  
c⁄fig
;

161  
NULL
;

162 
	}
}

164 
uöt8_t
 
NEAACDECAPI
 
	$NeAACDecSëC⁄figuøti⁄
(
NeAACDecH™dÀ
 
hDecodî
,

165 
NeAACDecC⁄figuøti⁄På
 
c⁄fig
)

167 i‡(
hDecodî
 && 
c⁄fig
)

170 i‡(
	`ˇn_decode_Ÿ
(
c⁄fig
->
defObje˘Ty≥
) < 0)

172 
hDecodî
->
c⁄fig
.
defObje˘Ty≥
 = config->defObjectType;

175 i‡(
c⁄fig
->
defSam∂eR©e
 == 0)

177 
hDecodî
->
c⁄fig
.
defSam∂eR©e
 = config->defSampleRate;

180 #ifde‡
FIXED_POINT


181 i‡((
c⁄fig
->
ouçutF‹m©
 < 1) || (config->outputFormat > 4))

184 i‡((
c⁄fig
->
ouçutF‹m©
 < 1) || (config->outputFormat > 5))

187 
hDecodî
->
c⁄fig
.
ouçutF‹m©
 = config->outputFormat;

189 i‡(
c⁄fig
->
downM©rix
 > 1)

191 
hDecodî
->
c⁄fig
.
downM©rix
 = config->downMatrix;

198 
	}
}

200 
öt32_t
 
NEAACDECAPI
 
	$NeAACDecInô
(
NeAACDecH™dÀ
 
hDecodî
, 
uöt8_t
 *
buf„r
,

201 
uöt32_t
 
buf„r_size
,

202 
uöt32_t
 *
ßm∂î©e
, 
uöt8_t
 *
ch™√ls
)

204 
uöt32_t
 
bôs
 = 0;

205 
bôfûe
 
ld
;

206 
adif_hódî
 
adif
;

207 
adts_hódî
 
adts
;

209 i‡((
hDecodî
 =
NULL
Ë|| (
ßm∂î©e
 =NULLË|| (
ch™√ls
 == NULL))

212 
hDecodî
->
sf_ödex
 = 
	`gë_§_ödex
(hDecodî->
c⁄fig
.
defSam∂eR©e
);

213 
hDecodî
->
obje˘_ty≥
 = hDecodî->
c⁄fig
.
defObje˘Ty≥
;

214 *
ßm∂î©e
 = 
	`gë_ßm∂e_øã
(
hDecodî
->
sf_ödex
);

215 *
ch™√ls
 = 1;

217 i‡(
buf„r
 !
NULL
)

219 
	`Áad_öôbôs
(&
ld
, 
buf„r
, 
buf„r_size
);

222 i‡((
buf„r
[0] == 'A') && (buffer[1] == 'D') &&

223 (
buf„r
[2] == 'I') && (buffer[3] == 'F'))

225 
hDecodî
->
adif_hódî_¥e£¡
 = 1;

227 
	`gë_adif_hódî
(&
adif
, &
ld
);

228 
	`Áad_byã_Æign
(&
ld
);

230 
hDecodî
->
sf_ödex
 = 
adif
.
p˚
[0].sf_index;

231 
hDecodî
->
obje˘_ty≥
 = 
adif
.
p˚
[0].object_type + 1;

233 *
ßm∂î©e
 = 
	`gë_ßm∂e_øã
(
hDecodî
->
sf_ödex
);

234 *
ch™√ls
 = 
adif
.
p˚
[0].channels;

236 
	`mem˝y
(&(
hDecodî
->
p˚
), &(
adif
.p˚[0]), (
¥ogøm_c⁄fig
));

237 
hDecodî
->
p˚_£t
 = 1;

239 
bôs
 = 
	`bô2byã
(
	`Áad_gë_¥o˚s£d_bôs
(&
ld
));

242 } i‡(
	`Áad_showbôs
(&
ld
, 12) == 0xfff) {

243 
hDecodî
->
adts_hódî_¥e£¡
 = 1;

245 
adts
.
ﬁd_f‹m©
 = 
hDecodî
->
c⁄fig
.
u£OldADTSF‹m©
;

246 
	`adts_‰ame
(&
adts
, &
ld
);

248 
hDecodî
->
sf_ödex
 = 
adts
.sf_index;

249 
hDecodî
->
obje˘_ty≥
 = 
adts
.
¥ofûe
 + 1;

251 *
ßm∂î©e
 = 
	`gë_ßm∂e_øã
(
hDecodî
->
sf_ödex
);

252 *
ch™√ls
 = (
adts
.
ch™√l_c⁄figuøti⁄
 > 6) ?

253 2 : 
adts
.
ch™√l_c⁄figuøti⁄
;

256 i‡(
ld
.
îr‹
)

258 
	`Áad_ídbôs
(&
ld
);

261 
	`Áad_ídbôs
(&
ld
);

263 
hDecodî
->
ch™√lC⁄figuøti⁄
 = *
ch™√ls
;

265 #i‡(
	`deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

267 i‡(*
ch™√ls
 == 1)

270 *
ch™√ls
 = 2;

274 #ifde‡
SBR_DEC


276 i‡(*
ßm∂î©e
 <24000 && !(
hDecodî
->
c⁄fig
.
d⁄tUpSam∂eIm∂icôSBR
))

278 *
ßm∂î©e
 *= 2;

279 
hDecodî
->
f‹˚UpSam∂ög
 = 1;

280 } i‡(*
ßm∂î©e
 > 24000 && !(
hDecodî
->
c⁄fig
.
d⁄tUpSam∂eIm∂icôSBR
)) {

281 
hDecodî
->
downSam∂edSBR
 = 1;

286 #ifde‡
SSR_DEC


287 i‡(
hDecodî
->
obje˘_ty≥
 =
SSR
)

288 
hDecodî
->
fb
 = 
	`s§_fûãr_b™k_öô
(hDecodî->
‰ameLígth
/
SSR_BANDS
);

291 
hDecodî
->
fb
 = 
	`fûãr_b™k_öô
(hDecodî->
‰ameLígth
);

293 #ifde‡
LD_DEC


294 i‡(
hDecodî
->
obje˘_ty≥
 =
LD
)

295 
hDecodî
->
‰ameLígth
 >>= 1;

298 i‡(
	`ˇn_decode_Ÿ
(
hDecodî
->
obje˘_ty≥
) < 0)

301  
bôs
;

302 
	}
}

305 
öt8_t
 
NEAACDECAPI
 
	$NeAACDecInô2
(
NeAACDecH™dÀ
 
hDecodî
, 
uöt8_t
 *
pBuf„r
,

306 
uöt32_t
 
SizeOfDecodîS≥cificInfo
,

307 
uöt32_t
 *
ßm∂î©e
, 
uöt8_t
 *
ch™√ls
)

309 
öt8_t
 
rc
;

310 
mp4AudioS≥cificC⁄fig
 
mp4ASC
;

312 if((
hDecodî
 =
NULL
)

313 || (
pBuf„r
 =
NULL
)

314 || (
SizeOfDecodîS≥cificInfo
 < 2)

315 || (
ßm∂î©e
 =
NULL
)

316 || (
ch™√ls
 =
NULL
))

321 
hDecodî
->
adif_hódî_¥e£¡
 = 0;

322 
hDecodî
->
adts_hódî_¥e£¡
 = 0;

325 
rc
 = 
	`AudioS≥cificC⁄fig2
(
pBuf„r
, 
SizeOfDecodîS≥cificInfo
, &
mp4ASC
,

326 &(
hDecodî
->
p˚
));

329 *
ßm∂î©e
 = 
mp4ASC
.
ßm∂ögFªquícy
;

330 i‡(
mp4ASC
.
ch™√lsC⁄figuøti⁄
)

332 *
ch™√ls
 = 
mp4ASC
.
ch™√lsC⁄figuøti⁄
;

334 *
ch™√ls
 = 
hDecodî
->
p˚
.channels;

335 
hDecodî
->
p˚_£t
 = 1;

337 #i‡(
	`deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

339 i‡(*
ch™√ls
 == 1)

342 *
ch™√ls
 = 2;

345 
hDecodî
->
sf_ödex
 = 
mp4ASC
.
ßm∂ögFªquícyIndex
;

346 
hDecodî
->
obje˘_ty≥
 = 
mp4ASC
.
obje˘Ty≥Index
;

347 #ifde‡
ERROR_RESILIENCE


348 
hDecodî
->
ØcSe˘i⁄D©aResûõn˚Fœg
 = 
mp4ASC
.aacSectionDataResilienceFlag;

349 
hDecodî
->
ØcSˇÀÁ˘‹D©aResûõn˚Fœg
 = 
mp4ASC
.aacScalefactorDataResilienceFlag;

350 
hDecodî
->
ØcS≥˘ølD©aResûõn˚Fœg
 = 
mp4ASC
.aacSpectralDataResilienceFlag;

352 #ifde‡
SBR_DEC


353 
hDecodî
->
sbr_¥e£¡_Êag
 = 
mp4ASC
.sbr_present_flag;

354 
hDecodî
->
downSam∂edSBR
 = 
mp4ASC
.downSampledSBR;

355 i‡(
hDecodî
->
c⁄fig
.
d⁄tUpSam∂eIm∂icôSBR
 == 0)

356 
hDecodî
->
f‹˚UpSam∂ög
 = 
mp4ASC
.forceUpSampling;

358 
hDecodî
->
f‹˚UpSam∂ög
 = 0;

361 i‡(((
hDecodî
->
sbr_¥e£¡_Êag
 =1)&&(!hDecodî->
downSam∂edSBR
)Ë|| hDecodî->
f‹˚UpSam∂ög
 == 1)

363 
hDecodî
->
sf_ödex
 = 
	`gë_§_ödex
(
mp4ASC
.
ßm∂ögFªquícy
 / 2);

367 i‡(
rc
 != 0)

369  
rc
;

371 
hDecodî
->
ch™√lC⁄figuøti⁄
 = 
mp4ASC
.
ch™√lsC⁄figuøti⁄
;

372 i‡(
mp4ASC
.
‰ameLígthFœg
)

373 #ifde‡
ALLOW_SMALL_FRAMELENGTH


374 
hDecodî
->
‰ameLígth
 = 960;

380 #ifde‡
SSR_DEC


381 i‡(
hDecodî
->
obje˘_ty≥
 =
SSR
)

382 
hDecodî
->
fb
 = 
	`s§_fûãr_b™k_öô
(hDecodî->
‰ameLígth
/
SSR_BANDS
);

385 
hDecodî
->
fb
 = 
	`fûãr_b™k_öô
(hDecodî->
‰ameLígth
);

387 #ifde‡
LD_DEC


388 i‡(
hDecodî
->
obje˘_ty≥
 =
LD
)

389 
hDecodî
->
‰ameLígth
 >>= 1;

393 
	}
}

395 #ifde‡
DRM


396 
öt8_t
 
NEAACDECAPI
 
	$NeAACDecInôDRM
(
NeAACDecH™dÀ
 *
hDecodî
, 
uöt32_t
 
ßm∂î©e
,

397 
uöt8_t
 
ch™√ls
)

399 i‡(
hDecodî
 =
NULL
)

402 
	`NeAACDecClo£
(*
hDecodî
);

404 *
hDecodî
 = 
	`NeAACDecO≥n
();

407 (*
hDecodî
)->
c⁄fig
.
defObje˘Ty≥
 = 
DRM_ER_LC
;

409 (*
hDecodî
)->
c⁄fig
.
defSam∂eR©e
 = 
ßm∂î©e
;

410 #ifde‡
ERROR_RESILIENCE


411 (*
hDecodî
)->
ØcSe˘i⁄D©aResûõn˚Fœg
 = 1;

412 (*
hDecodî
)->
ØcSˇÀÁ˘‹D©aResûõn˚Fœg
 = 0;

413 (*
hDecodî
)->
ØcS≥˘ølD©aResûõn˚Fœg
 = 1;

415 (*
hDecodî
)->
‰ameLígth
 = 960;

416 (*
hDecodî
)->
sf_ödex
 = 
	`gë_§_ödex
((*hDecodî)->
c⁄fig
.
defSam∂eR©e
);

417 (*
hDecodî
)->
obje˘_ty≥
 = (*hDecodî)->
c⁄fig
.
defObje˘Ty≥
;

419 i‡((
ch™√ls
 =
DRMCH_STEREO
Ë|| (ch™√l†=
DRMCH_SBR_STEREO
))

420 (*
hDecodî
)->
ch™√lC⁄figuøti⁄
 = 2;

422 (*
hDecodî
)->
ch™√lC⁄figuøti⁄
 = 1;

424 #ifde‡
SBR_DEC


425 i‡((
ch™√ls
 =
DRMCH_MONO
Ë|| (ch™√l†=
DRMCH_STEREO
))

426 (*
hDecodî
)->
sbr_¥e£¡_Êag
 = 0;

428 (*
hDecodî
)->
sbr_¥e£¡_Êag
 = 1;

431 (*
hDecodî
)->
fb
 = 
	`fûãr_b™k_öô
((*hDecodî)->
‰ameLígth
);

434 
	}
}

437 
NEAACDECAPI
 
	$NeAACDecClo£
(
NeAACDecH™dÀ
 
hDecodî
)

439 
uöt8_t
 
i
;

441 i‡(
hDecodî
 =
NULL
)

444 #ifde‡
PROFILE


445 
	`¥ötf
("AAC decodîÅŸÆ: %I64d cy˛es\n", 
hDecodî
->
cy˛es
);

446 
	`¥ötf
("ªqu™t: %I64d cy˛es\n", 
hDecodî
->
ªqu™t_cy˛es
);

447 
	`¥ötf
("•e˘øl_d©a: %I64d cy˛es\n", 
hDecodî
->
•e˘øl_cy˛es
);

448 
	`¥ötf
("sˇÀÁ˘‹s: %I64d cy˛es\n", 
hDecodî
->
sˇÀÁc_cy˛es
);

449 
	`¥ötf
("ouçut: %I64d cy˛es\n", 
hDecodî
->
ouçut_cy˛es
);

452 
i
 = 0; i < 
MAX_CHANNELS
; i++)

454 i‡(
hDecodî
->
time_out
[
i
]Ë
	`Áad_‰ì
(hDecoder->time_out[i]);

455 i‡(
hDecodî
->
fb_öãrmed
[
i
]Ë
	`Áad_‰ì
(hDecoder->fb_intermed[i]);

456 #ifde‡
SSR_DEC


457 i‡(
hDecodî
->
s§_ovîœp
[
i
]Ë
	`Áad_‰ì
(hDecoder->ssr_overlap[i]);

458 i‡(
hDecodî
->
¥ev_fmd
[
i
]Ë
	`Áad_‰ì
(hDecoder->prev_fmd[i]);

460 #ifde‡
MAIN_DEC


461 i‡(
hDecodî
->
¥ed_°©
[
i
]Ë
	`Áad_‰ì
(hDecoder->pred_stat[i]);

463 #ifde‡
LTP_DEC


464 i‡(
hDecodî
->
…_¥ed_°©
[
i
]Ë
	`Áad_‰ì
(hDecoder->lt_pred_stat[i]);

468 #ifde‡
SSR_DEC


469 i‡(
hDecodî
->
obje˘_ty≥
 =
SSR
)

470 
	`s§_fûãr_b™k_íd
(
hDecodî
->
fb
);

473 
	`fûãr_b™k_íd
(
hDecodî
->
fb
);

475 
	`drc_íd
(
hDecodî
->
drc
);

477 i‡(
hDecodî
->
ßm∂e_buf„r
Ë
	`Áad_‰ì
(hDecoder->sample_buffer);

479 #ifde‡
SBR_DEC


480 
i
 = 0; i < 
MAX_SYNTAX_ELEMENTS
; i++)

482 i‡(
hDecodî
->
sbr
[
i
])

483 
	`sbrDecodeEnd
(
hDecodî
->
sbr
[
i
]);

487 i‡(
hDecodî
Ë
	`Áad_‰ì
(hDecoder);

488 
	}
}

490 
NEAACDECAPI
 
	$NeAACDecPo°SìkRe£t
(
NeAACDecH™dÀ
 
hDecodî
, 
öt32_t
 
‰ame
)

492 i‡(
hDecodî
)

494 
hDecodî
->
po°SìkRe£tFœg
 = 1;

496 i‡(
‰ame
 != -1)

497 
hDecodî
->
‰ame
 = frame;

499 
	}
}

501 
	$¸óã_ch™√l_c⁄fig
(
NeAACDecH™dÀ
 
hDecodî
, 
NeAACDecFømeInfo
 *
hInfo
)

503 
hInfo
->
num_‰⁄t_ch™√ls
 = 0;

504 
hInfo
->
num_side_ch™√ls
 = 0;

505 
hInfo
->
num_back_ch™√ls
 = 0;

506 
hInfo
->
num_l„_ch™√ls
 = 0;

507 
	`mem£t
(
hInfo
->
ch™√l_posôi⁄
, 0, 
MAX_CHANNELS
*(
uöt8_t
));

509 i‡(
hDecodî
->
downM©rix
)

511 
hInfo
->
num_‰⁄t_ch™√ls
 = 2;

512 
hInfo
->
ch™√l_posôi⁄
[0] = 
FRONT_CHANNEL_LEFT
;

513 
hInfo
->
ch™√l_posôi⁄
[1] = 
FRONT_CHANNEL_RIGHT
;

518 i‡(
hDecodî
->
p˚_£t
)

520 
uöt8_t
 
i
, 
chpos
 = 0;

521 
uöt8_t
 
chdú
, 
back_˚¡î
 = 0;

523 
hInfo
->
num_‰⁄t_ch™√ls
 = 
hDecodî
->
p˚
.num_front_channels;

524 
hInfo
->
num_side_ch™√ls
 = 
hDecodî
->
p˚
.num_side_channels;

525 
hInfo
->
num_back_ch™√ls
 = 
hDecodî
->
p˚
.num_back_channels;

526 
hInfo
->
num_l„_ch™√ls
 = 
hDecodî
->
p˚
.num_lfe_channels;

528 
chdú
 = 
hInfo
->
num_‰⁄t_ch™√ls
;

529 i‡(
chdú
 & 1)

531 
hInfo
->
ch™√l_posôi⁄
[
chpos
++] = 
FRONT_CHANNEL_CENTER
;

532 
chdú
--;

534 
i
 = 0; i < 
chdú
; i += 2)

536 
hInfo
->
ch™√l_posôi⁄
[
chpos
++] = 
FRONT_CHANNEL_LEFT
;

537 
hInfo
->
ch™√l_posôi⁄
[
chpos
++] = 
FRONT_CHANNEL_RIGHT
;

540 
i
 = 0; i < 
hInfo
->
num_side_ch™√ls
; i += 2)

542 
hInfo
->
ch™√l_posôi⁄
[
chpos
++] = 
SIDE_CHANNEL_LEFT
;

543 
hInfo
->
ch™√l_posôi⁄
[
chpos
++] = 
SIDE_CHANNEL_RIGHT
;

546 
chdú
 = 
hInfo
->
num_back_ch™√ls
;

547 i‡(
chdú
 & 1)

549 
back_˚¡î
 = 1;

550 
chdú
--;

552 
i
 = 0; i < 
chdú
; i += 2)

554 
hInfo
->
ch™√l_posôi⁄
[
chpos
++] = 
BACK_CHANNEL_LEFT
;

555 
hInfo
->
ch™√l_posôi⁄
[
chpos
++] = 
BACK_CHANNEL_RIGHT
;

557 i‡(
back_˚¡î
)

559 
hInfo
->
ch™√l_posôi⁄
[
chpos
++] = 
BACK_CHANNEL_CENTER
;

562 
i
 = 0; i < 
hInfo
->
num_l„_ch™√ls
; i++)

564 
hInfo
->
ch™√l_posôi⁄
[
chpos
++] = 
LFE_CHANNEL
;

568 
hDecodî
->
ch™√lC⁄figuøti⁄
)

571 
hInfo
->
num_‰⁄t_ch™√ls
 = 1;

572 
hInfo
->
ch™√l_posôi⁄
[0] = 
FRONT_CHANNEL_CENTER
;

575 
hInfo
->
num_‰⁄t_ch™√ls
 = 2;

576 
hInfo
->
ch™√l_posôi⁄
[0] = 
FRONT_CHANNEL_LEFT
;

577 
hInfo
->
ch™√l_posôi⁄
[1] = 
FRONT_CHANNEL_RIGHT
;

580 
hInfo
->
num_‰⁄t_ch™√ls
 = 3;

581 
hInfo
->
ch™√l_posôi⁄
[0] = 
FRONT_CHANNEL_CENTER
;

582 
hInfo
->
ch™√l_posôi⁄
[1] = 
FRONT_CHANNEL_LEFT
;

583 
hInfo
->
ch™√l_posôi⁄
[2] = 
FRONT_CHANNEL_RIGHT
;

586 
hInfo
->
num_‰⁄t_ch™√ls
 = 3;

587 
hInfo
->
num_back_ch™√ls
 = 1;

588 
hInfo
->
ch™√l_posôi⁄
[0] = 
FRONT_CHANNEL_CENTER
;

589 
hInfo
->
ch™√l_posôi⁄
[1] = 
FRONT_CHANNEL_LEFT
;

590 
hInfo
->
ch™√l_posôi⁄
[2] = 
FRONT_CHANNEL_RIGHT
;

591 
hInfo
->
ch™√l_posôi⁄
[3] = 
BACK_CHANNEL_CENTER
;

594 
hInfo
->
num_‰⁄t_ch™√ls
 = 3;

595 
hInfo
->
num_back_ch™√ls
 = 2;

596 
hInfo
->
ch™√l_posôi⁄
[0] = 
FRONT_CHANNEL_CENTER
;

597 
hInfo
->
ch™√l_posôi⁄
[1] = 
FRONT_CHANNEL_LEFT
;

598 
hInfo
->
ch™√l_posôi⁄
[2] = 
FRONT_CHANNEL_RIGHT
;

599 
hInfo
->
ch™√l_posôi⁄
[3] = 
BACK_CHANNEL_LEFT
;

600 
hInfo
->
ch™√l_posôi⁄
[4] = 
BACK_CHANNEL_RIGHT
;

603 
hInfo
->
num_‰⁄t_ch™√ls
 = 3;

604 
hInfo
->
num_back_ch™√ls
 = 2;

605 
hInfo
->
num_l„_ch™√ls
 = 1;

606 
hInfo
->
ch™√l_posôi⁄
[0] = 
FRONT_CHANNEL_CENTER
;

607 
hInfo
->
ch™√l_posôi⁄
[1] = 
FRONT_CHANNEL_LEFT
;

608 
hInfo
->
ch™√l_posôi⁄
[2] = 
FRONT_CHANNEL_RIGHT
;

609 
hInfo
->
ch™√l_posôi⁄
[3] = 
BACK_CHANNEL_LEFT
;

610 
hInfo
->
ch™√l_posôi⁄
[4] = 
BACK_CHANNEL_RIGHT
;

611 
hInfo
->
ch™√l_posôi⁄
[5] = 
LFE_CHANNEL
;

614 
hInfo
->
num_‰⁄t_ch™√ls
 = 3;

615 
hInfo
->
num_side_ch™√ls
 = 2;

616 
hInfo
->
num_back_ch™√ls
 = 2;

617 
hInfo
->
num_l„_ch™√ls
 = 1;

618 
hInfo
->
ch™√l_posôi⁄
[0] = 
FRONT_CHANNEL_CENTER
;

619 
hInfo
->
ch™√l_posôi⁄
[1] = 
FRONT_CHANNEL_LEFT
;

620 
hInfo
->
ch™√l_posôi⁄
[2] = 
FRONT_CHANNEL_RIGHT
;

621 
hInfo
->
ch™√l_posôi⁄
[3] = 
SIDE_CHANNEL_LEFT
;

622 
hInfo
->
ch™√l_posôi⁄
[4] = 
SIDE_CHANNEL_RIGHT
;

623 
hInfo
->
ch™√l_posôi⁄
[5] = 
BACK_CHANNEL_LEFT
;

624 
hInfo
->
ch™√l_posôi⁄
[6] = 
BACK_CHANNEL_RIGHT
;

625 
hInfo
->
ch™√l_posôi⁄
[7] = 
LFE_CHANNEL
;

629 
uöt8_t
 
i
;

630 
uöt8_t
 
ch
 = 
hDecodî
->
‰_ch™√ls
 - hDecodî->
has_l„
;

631 i‡(
ch
 & 1)

633 
uöt8_t
 
ch1
 = (
ch
-1)/2;

634 i‡(
hDecodî
->
fú°_syn_ñe
 =
ID_SCE
)

636 
hInfo
->
num_‰⁄t_ch™√ls
 = 
ch1
 + 1;

637 
hInfo
->
num_back_ch™√ls
 = 
ch1
;

638 
hInfo
->
ch™√l_posôi⁄
[0] = 
FRONT_CHANNEL_CENTER
;

639 
i
 = 1; i <
ch1
; i+=2)

641 
hInfo
->
ch™√l_posôi⁄
[
i
] = 
FRONT_CHANNEL_LEFT
;

642 
hInfo
->
ch™√l_posôi⁄
[
i
+1] = 
FRONT_CHANNEL_RIGHT
;

644 
i
 = 
ch1
+1; i < 
ch
; i+=2)

646 
hInfo
->
ch™√l_posôi⁄
[
i
] = 
BACK_CHANNEL_LEFT
;

647 
hInfo
->
ch™√l_posôi⁄
[
i
+1] = 
BACK_CHANNEL_RIGHT
;

650 
hInfo
->
num_‰⁄t_ch™√ls
 = 
ch1
;

651 
hInfo
->
num_back_ch™√ls
 = 
ch1
 + 1;

652 
i
 = 0; i < 
ch1
; i+=2)

654 
hInfo
->
ch™√l_posôi⁄
[
i
] = 
FRONT_CHANNEL_LEFT
;

655 
hInfo
->
ch™√l_posôi⁄
[
i
+1] = 
FRONT_CHANNEL_RIGHT
;

657 
i
 = 
ch1
; i < 
ch
-1; i+=2)

659 
hInfo
->
ch™√l_posôi⁄
[
i
] = 
BACK_CHANNEL_LEFT
;

660 
hInfo
->
ch™√l_posôi⁄
[
i
+1] = 
BACK_CHANNEL_RIGHT
;

662 
hInfo
->
ch™√l_posôi⁄
[
ch
-1] = 
BACK_CHANNEL_CENTER
;

665 
uöt8_t
 
ch1
 = (
ch
)/2;

666 
hInfo
->
num_‰⁄t_ch™√ls
 = 
ch1
;

667 
hInfo
->
num_back_ch™√ls
 = 
ch1
;

668 i‡(
ch1
 & 1)

670 
hInfo
->
ch™√l_posôi⁄
[0] = 
FRONT_CHANNEL_CENTER
;

671 
i
 = 1; i <
ch1
; i+=2)

673 
hInfo
->
ch™√l_posôi⁄
[
i
] = 
FRONT_CHANNEL_LEFT
;

674 
hInfo
->
ch™√l_posôi⁄
[
i
+1] = 
FRONT_CHANNEL_RIGHT
;

676 
i
 = 
ch1
+1; i < 
ch
-1; i+=2)

678 
hInfo
->
ch™√l_posôi⁄
[
i
] = 
BACK_CHANNEL_LEFT
;

679 
hInfo
->
ch™√l_posôi⁄
[
i
+1] = 
BACK_CHANNEL_RIGHT
;

681 
hInfo
->
ch™√l_posôi⁄
[
ch
-1] = 
BACK_CHANNEL_CENTER
;

683 
i
 = 0; i < 
ch1
; i+=2)

685 
hInfo
->
ch™√l_posôi⁄
[
i
] = 
FRONT_CHANNEL_LEFT
;

686 
hInfo
->
ch™√l_posôi⁄
[
i
+1] = 
FRONT_CHANNEL_RIGHT
;

688 
i
 = 
ch1
; i < 
ch
; i+=2)

690 
hInfo
->
ch™√l_posôi⁄
[
i
] = 
BACK_CHANNEL_LEFT
;

691 
hInfo
->
ch™√l_posôi⁄
[
i
+1] = 
BACK_CHANNEL_RIGHT
;

695 
hInfo
->
num_l„_ch™√ls
 = 
hDecodî
->
has_l„
;

696 
i
 = 
ch
; i < 
hDecodî
->
‰_ch™√ls
; i++)

698 
hInfo
->
ch™√l_posôi⁄
[
i
] = 
LFE_CHANNEL
;

704 
	}
}

706 * 
NEAACDECAPI
 
	$NeAACDecDecode
(
NeAACDecH™dÀ
 
hDecodî
,

707 
NeAACDecFømeInfo
 *
hInfo
,

708 
uöt8_t
 *
buf„r
, 
uöt32_t
 
buf„r_size
)

710  
	`Øc_‰ame_decode
(
hDecodî
, 
hInfo
, 
buf„r
, 
buf„r_size
, 
NULL
, 0);

711 
	}
}

713 * 
NEAACDECAPI
 
	$NeAACDecDecode2
(
NeAACDecH™dÀ
 
hDecodî
,

714 
NeAACDecFømeInfo
 *
hInfo
,

715 
uöt8_t
 *
buf„r
, 
uöt32_t
 
buf„r_size
,

716 **
ßm∂e_buf„r
, 
uöt32_t
 
ßm∂e_buf„r_size
)

718 i‡((
ßm∂e_buf„r
 =
NULL
Ë|| (
ßm∂e_buf„r_size
 == 0))

720 
hInfo
->
îr‹
 = 27;

721  
NULL
;

724  
	`Øc_‰ame_decode
(
hDecodî
, 
hInfo
, 
buf„r
, 
buf„r_size
,

725 
ßm∂e_buf„r
, 
ßm∂e_buf„r_size
);

726 
	}
}

728 * 
	$Øc_‰ame_decode
(
NeAACDecH™dÀ
 
hDecodî
, 
NeAACDecFømeInfo
 *
hInfo
,

729 
uöt8_t
 *
buf„r
, 
uöt32_t
 
buf„r_size
,

730 **
ßm∂e_buf„r2
, 
uöt32_t
 
ßm∂e_buf„r_size
)

732 
uöt8_t
 
ch™√ls
 = 0;

733 
uöt8_t
 
ouçut_ch™√ls
 = 0;

734 
bôfûe
 
ld
;

735 
uöt32_t
 
bôsc⁄sumed
;

736 
uöt16_t
 
‰ame_Àn
;

737 *
ßm∂e_buf„r
;

739 #ifde‡
PROFILE


740 
öt64_t
 
cou¡
 = 
	`Áad_gë_ts
();

744 i‡((
hDecodî
 =
NULL
Ë|| (
hInfo
 =NULLË|| (
buf„r
 == NULL))

746  
NULL
;

750 
	`¥ötf
("%d\n", 
buf„r_size
*8);

753 
‰ame_Àn
 = 
hDecodî
->
‰ameLígth
;

756 
	`mem£t
(
hInfo
, 0, (
NeAACDecFømeInfo
));

757 
	`mem£t
(
hDecodî
->
öã∫Æ_ch™√l
, 0, 
MAX_CHANNELS
*(hDecoder->internal_channel[0]));

760 
	`Áad_öôbôs
(&
ld
, 
buf„r
, 
buf„r_size
);

764 
i
;

765 
i
 = 0; i < ((
buf„r_size
+3)>>2); i++)

767 
uöt8_t
 *
buf
;

768 
uöt32_t
 
ãmp
 = 0;

769 
buf
 = 
	`Áad_gëbôbuf„r
(&
ld
, 32);

771 
ãmp
 = *((
uöt32_t
*)
buf
);

772 
	`¥ötf
("0x%.8X\n", 
ãmp
);

773 
	`‰ì
(
buf
);

775 
	`Áad_ídbôs
(&
ld
);

776 
	`Áad_öôbôs
(&
ld
, 
buf„r
, 
buf„r_size
);

780 #ifde‡
DRM


781 i‡(
hDecodî
->
obje˘_ty≥
 =
DRM_ER_LC
)

786 
hInfo
->
îr‹
 = 8;

787 
îr‹
;

790 
	`Áad_gëbôs
(&
ld
, 8

791 
	`DEBUGVAR
(1,1,"NeAACDecDecode(): skip CRC"));

795 i‡(
hDecodî
->
adts_hódî_¥e£¡
)

797 
adts_hódî
 
adts
;

799 
adts
.
ﬁd_f‹m©
 = 
hDecodî
->
c⁄fig
.
u£OldADTSF‹m©
;

800 i‡((
hInfo
->
îr‹
 = 
	`adts_‰ame
(&
adts
, &
ld
)) > 0)

801 
îr‹
;

809 #ifde‡
ANALYSIS


810 
dbg_cou¡
 = 0;

814 #ifde‡
SCALABLE_DEC


815 i‡((
hDecodî
->
obje˘_ty≥
 =6Ë|| (hDecodî->obje˘_ty≥ =
DRM_ER_LC
))

817 
	`Øc_sˇœbÀ_maö_ñemít
(
hDecodî
, 
hInfo
, &
ld
, &hDecodî->
p˚
, hDecodî->
drc
);

820 
	`øw_d©a_block
(
hDecodî
, 
hInfo
, &
ld
, &hDecodî->
p˚
, hDecodî->
drc
);

821 #ifde‡
SCALABLE_DEC


825 
ch™√ls
 = 
hDecodî
->
‰_ch™√ls
;

827 i‡(
hInfo
->
îr‹
 > 0)

828 
îr‹
;

831 i‡(
ch™√ls
 =0 || ch™√l†> 
MAX_CHANNELS
)

834 
hInfo
->
îr‹
 = 12;

835 
îr‹
;

839 
bôsc⁄sumed
 = 
	`Áad_gë_¥o˚s£d_bôs
(&
ld
);

840 
hInfo
->
byãsc⁄sumed
 = 
	`bô2byã
(
bôsc⁄sumed
);

841 i‡(
ld
.
îr‹
)

843 
hInfo
->
îr‹
 = 14;

844 
îr‹
;

846 
	`Áad_ídbôs
(&
ld
);

849 i‡(!
hDecodî
->
adts_hódî_¥e£¡
 && !hDecodî->
adif_hódî_¥e£¡
)

851 i‡(
hDecodî
->
ch™√lC⁄figuøti⁄
 == 0)

852 
hDecodî
->
ch™√lC⁄figuøti⁄
 = 
ch™√ls
;

854 i‡(
ch™√ls
 == 8)

855 
hDecodî
->
ch™√lC⁄figuøti⁄
 = 7;

856 i‡(
ch™√ls
 == 7)

857 
hDecodî
->
ch™√lC⁄figuøti⁄
 = 0;

860 i‡((
ch™√ls
 =5 || ch™√l†=6Ë&& 
hDecodî
->
c⁄fig
.
downM©rix
)

862 
hDecodî
->
downM©rix
 = 1;

863 
ouçut_ch™√ls
 = 2;

865 
ouçut_ch™√ls
 = 
ch™√ls
;

868 #i‡(
	`deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

869 
hDecodî
->
upM©rix
 = 0;

871 i‡(
ouçut_ch™√ls
 == 1)

874 
hDecodî
->
upM©rix
 = 1;

875 
ouçut_ch™√ls
 = 2;

880 
	`¸óã_ch™√l_c⁄fig
(
hDecodî
, 
hInfo
);

883 
hInfo
->
ßm∂es
 = 
‰ame_Àn
*
ouçut_ch™√ls
;

885 
hInfo
->
ch™√ls
 = 
ouçut_ch™√ls
;

887 
hInfo
->
ßm∂î©e
 = 
	`gë_ßm∂e_øã
(
hDecodî
->
sf_ödex
);

889 
hInfo
->
obje˘_ty≥
 = 
hDecodî
->object_type;

891 
hInfo
->
sbr
 = 
NO_SBR
;

893 
hInfo
->
hódî_ty≥
 = 
RAW
;

894 i‡(
hDecodî
->
adif_hódî_¥e£¡
)

895 
hInfo
->
hódî_ty≥
 = 
ADIF
;

896 i‡(
hDecodî
->
adts_hódî_¥e£¡
)

897 
hInfo
->
hódî_ty≥
 = 
ADTS
;

898 #i‡(
	`deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

899 
hInfo
->
ps
 = 
hDecodî
->
ps_u£d_globÆ
;

903 i‡(
ch™√ls
 == 0)

905 
hDecodî
->
‰ame
++;

906  
NULL
;

910 i‡((
hDecodî
->
ßm∂e_buf„r
 =
NULL
) ||

911 (
hDecodî
->
Ælo˚d_ch™√ls
 !
ouçut_ch™√ls
))

913 c⁄° 
uöt8_t
 
°r
[] = { (
öt16_t
), (
öt32_t
), (int32_t),

914 (
Êﬂt32_t
), (), (
öt16_t
), (int16_t),

915 (
öt16_t
), (int16_t), 0, 0, 0

917 
uöt8_t
 
°ride
 = 
°r
[
hDecodî
->
c⁄fig
.
ouçutF‹m©
-1];

918 #ifde‡
SBR_DEC


919 i‡(((
hDecodî
->
sbr_¥e£¡_Êag
 =1)&&(!hDecodî->
downSam∂edSBR
)Ë|| (hDecodî->
f‹˚UpSam∂ög
 == 1))

921 
°ride
 = 2 * stride;

925 i‡(
ßm∂e_buf„r_size
 == 0)

927 i‡(
hDecodî
->
ßm∂e_buf„r
)

928 
	`Áad_‰ì
(
hDecodî
->
ßm∂e_buf„r
);

929 
hDecodî
->
ßm∂e_buf„r
 = 
NULL
;

930 
hDecodî
->
ßm∂e_buf„r
 = 
	`Áad_mÆloc
(
‰ame_Àn
*
ouçut_ch™√ls
*
°ride
);

931 } i‡(
ßm∂e_buf„r_size
 < 
‰ame_Àn
*
ouçut_ch™√ls
*
°ride
) {

933 
hInfo
->
îr‹
 = 27;

934  
NULL
;

936 
hDecodî
->
Ælo˚d_ch™√ls
 = 
ouçut_ch™√ls
;

939 i‡(
ßm∂e_buf„r_size
 == 0)

941 
ßm∂e_buf„r
 = 
hDecodî
->sample_buffer;

943 
ßm∂e_buf„r
 = *
ßm∂e_buf„r2
;

946 #ifde‡
SBR_DEC


947 i‡((
hDecodî
->
sbr_¥e£¡_Êag
 =1Ë|| (hDecodî->
f‹˚UpSam∂ög
 == 1))

949 
uöt8_t
 
ñe
;

952 i‡(!
hDecodî
->
downSam∂edSBR
)

954 
‰ame_Àn
 *= 2;

955 
hInfo
->
ßm∂es
 *= 2;

956 
hInfo
->
ßm∂î©e
 *= 2;

960 
ñe
 = 0;ÉÀ < 
hDecodî
->
‰_ch_ñe
;Éle++)

962 i‡(
hDecodî
->
sbr
[
ñe
] =
NULL
)

964 
hInfo
->
îr‹
 = 25;

965 
îr‹
;

970 i‡(
hDecodî
->
sbr_¥e£¡_Êag
 == 1)

972 
hInfo
->
obje˘_ty≥
 = 
HE_AAC
;

973 
hInfo
->
sbr
 = 
SBR_UPSAMPLED
;

975 
hInfo
->
sbr
 = 
NO_SBR_UPSAMPLED
;

977 i‡(
hDecodî
->
downSam∂edSBR
)

979 
hInfo
->
sbr
 = 
SBR_DOWNSAMPLED
;

984 
ßm∂e_buf„r
 = 
	`ouçut_to_PCM
(
hDecodî
, hDecodî->
time_out
, sample_buffer,

985 
ouçut_ch™√ls
, 
‰ame_Àn
, 
hDecodî
->
c⁄fig
.
ouçutF‹m©
);

988 
hDecodî
->
po°SìkRe£tFœg
 = 0;

990 
hDecodî
->
‰ame
++;

991 #ifde‡
LD_DEC


992 i‡(
hDecodî
->
obje˘_ty≥
 !
LD
)

995 i‡(
hDecodî
->
‰ame
 <= 1)

996 
hInfo
->
ßm∂es
 = 0;

997 #ifde‡
LD_DEC


1000 i‡(
hDecodî
->
‰ame
 <= 0)

1001 
hInfo
->
ßm∂es
 = 0;

1006 #ifde‡
ANALYSIS


1007 
	`fÊush
(
°dout
);

1010 #ifde‡
PROFILE


1011 
cou¡
 = 
	`Áad_gë_ts
() - count;

1012 
hDecodî
->
cy˛es
 +
cou¡
;

1015  
ßm∂e_buf„r
;

1017 
îr‹
:

1019 
	`Áad_ídbôs
(&
ld
);

1022 #ifde‡
ANALYSIS


1023 
	`fÊush
(
°dout
);

1026  
NULL
;

	@decoder.h

28 #i‚de‡
__DECODER_H__


29 
	#__DECODER_H__


	)

31 #ifde‡
__˝lu•lus


35 #ifde‡
_WIN32


36 #¥agm®
∑ck
(
push
, 8)

37 #i‚de‡
NEAACDECAPI


38 
	#NEAACDECAPI
 
__cde˛


	)

41 #i‚de‡
NEAACDECAPI


42 
	#NEAACDECAPI


	)

48 
	#FAAD_FMT_16BIT
 1

	)

49 
	#FAAD_FMT_24BIT
 2

	)

50 
	#FAAD_FMT_32BIT
 3

	)

51 
	#FAAD_FMT_FLOAT
 4

	)

52 
	#FAAD_FMT_FIXED
 
FAAD_FMT_FLOAT


	)

53 
	#FAAD_FMT_DOUBLE
 5

	)

55 
	#LC_DEC_CAP
 (1<<0)

	)

56 
	#MAIN_DEC_CAP
 (1<<1)

	)

57 
	#LTP_DEC_CAP
 (1<<2)

	)

58 
	#LD_DEC_CAP
 (1<<3)

	)

59 
	#ERROR_RESILIENCE_CAP
 (1<<4)

	)

60 
	#FIXED_POINT_CAP
 (1<<5)

	)

62 
	#FRONT_CHANNEL_CENTER
 (1)

	)

63 
	#FRONT_CHANNEL_LEFT
 (2)

	)

64 
	#FRONT_CHANNEL_RIGHT
 (3)

	)

65 
	#SIDE_CHANNEL_LEFT
 (4)

	)

66 
	#SIDE_CHANNEL_RIGHT
 (5)

	)

67 
	#BACK_CHANNEL_LEFT
 (6)

	)

68 
	#BACK_CHANNEL_RIGHT
 (7)

	)

69 
	#BACK_CHANNEL_CENTER
 (8)

	)

70 
	#LFE_CHANNEL
 (9)

	)

71 
	#UNKNOWN_CHANNEL
 (0)

	)

73 * 
NEAACDECAPI
 
NeAACDecGëEº‹Mesßge
(
uöt8_t
 
îrcode
);

75 
uöt32_t
 
NEAACDECAPI
 
NeAACDecGëC≠abûôõs
();

77 
NeAACDecH™dÀ
 
NEAACDECAPI
 
NeAACDecO≥n
();

79 
NeAACDecC⁄figuøti⁄På
 
NEAACDECAPI
 
NeAACDecGëCuºítC⁄figuøti⁄
(
NeAACDecH™dÀ
 
hDecodî
);

81 
uöt8_t
 
NEAACDECAPI
 
NeAACDecSëC⁄figuøti⁄
(
NeAACDecH™dÀ
 
hDecodî
,

82 
NeAACDecC⁄figuøti⁄På
 
c⁄fig
);

85 
öt32_t
 
NEAACDECAPI
 
NeAACDecInô
(
NeAACDecH™dÀ
 
hDecodî
,

86 
uöt8_t
 *
buf„r
,

87 
uöt32_t
 
buf„r_size
,

88 
uöt32_t
 *
ßm∂î©e
,

89 
uöt8_t
 *
ch™√ls
);

92 
öt8_t
 
NEAACDECAPI
 
NeAACDecInô2
(
NeAACDecH™dÀ
 
hDecodî
, 
uöt8_t
 *
pBuf„r
,

93 
uöt32_t
 
SizeOfDecodîS≥cificInfo
,

94 
uöt32_t
 *
ßm∂î©e
, 
uöt8_t
 *
ch™√ls
);

97 
öt8_t
 
NEAACDECAPI
 
NeAACDecInôDRM
(
NeAACDecH™dÀ
 *
hDecodî
, 
uöt32_t
 
ßm∂î©e
,

98 
uöt8_t
 
ch™√ls
);

100 
NEAACDECAPI
 
NeAACDecClo£
(
NeAACDecH™dÀ
 
hDecodî
);

102 
NEAACDECAPI
 
NeAACDecPo°SìkRe£t
(
NeAACDecH™dÀ
 
hDecodî
, 
öt32_t
 
‰ame
);

104 * 
NEAACDECAPI
 
NeAACDecDecode
(
NeAACDecH™dÀ
 
hDecodî
,

105 
NeAACDecFømeInfo
 *
hInfo
,

106 
uöt8_t
 *
buf„r
,

107 
uöt32_t
 
buf„r_size
);

109 * 
NEAACDECAPI
 
NeAACDecDecode2
(
NeAACDecH™dÀ
 
hDecodî
,

110 
NeAACDecFømeInfo
 *
hInfo
,

111 
uöt8_t
 *
buf„r
, 
uöt32_t
 
buf„r_size
,

112 **
ßm∂e_buf„r
, 
uöt32_t
 
ßm∂e_buf„r_size
);

114 #ifde‡
_WIN32


115 #¥agm®
∑ck
(
p›
)

118 #ifde‡
__˝lu•lus


	@drc.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 
	~<°dlib.h
>

32 
	~<°rög.h
>

33 
	~"sy¡ax.h
"

34 
	~"drc.h
"

36 
drc_öfo
 *
	$drc_öô
(
ªÆ_t
 
cut
,Ñól_à
boo°
)

38 
drc_öfo
 *
drc
 = (drc_öfo*)
	`Áad_mÆloc
((drc_info));

39 
	`mem£t
(
drc
, 0, (
drc_öfo
));

41 
drc
->
˘æ1
 = 
cut
;

42 
drc
->
˘æ2
 = 
boo°
;

44 
drc
->
num_b™ds
 = 1;

45 
drc
->
b™d_t›
[0] = 1024/4 - 1;

46 
drc
->
dyn_∫g_sgn
[0] = 1;

47 
drc
->
dyn_∫g_˘l
[0] = 0;

49  
drc
;

50 
	}
}

52 
	$drc_íd
(
drc_öfo
 *
drc
)

54 i‡(
drc
Ë
	`Áad_‰ì
(drc);

55 
	}
}

57 #ifde‡
FIXED_POINT


58 
ªÆ_t
 
	gdrc_pow2_èbÀ
[] =

60 
COEF_CONST
(0.5146511183),

61 
COEF_CONST
(0.5297315472),

62 
COEF_CONST
(0.5452538663),

63 
COEF_CONST
(0.5612310242),

64 
COEF_CONST
(0.5776763484),

65 
COEF_CONST
(0.5946035575),

66 
COEF_CONST
(0.6120267717),

67 
COEF_CONST
(0.6299605249),

68 
COEF_CONST
(0.6484197773),

69 
COEF_CONST
(0.6674199271),

70 
COEF_CONST
(0.6869768237),

71 
COEF_CONST
(0.7071067812),

72 
COEF_CONST
(0.7278265914),

73 
COEF_CONST
(0.7491535384),

74 
COEF_CONST
(0.7711054127),

75 
COEF_CONST
(0.7937005260),

76 
COEF_CONST
(0.8169577266),

77 
COEF_CONST
(0.8408964153),

78 
COEF_CONST
(0.8655365610),

79 
COEF_CONST
(0.8908987181),

80 
COEF_CONST
(0.9170040432),

81 
COEF_CONST
(0.9438743127),

82 
COEF_CONST
(0.9715319412),

83 
COEF_CONST
(1.0000000000),

84 
COEF_CONST
(1.0293022366),

85 
COEF_CONST
(1.0594630944),

86 
COEF_CONST
(1.0905077327),

87 
COEF_CONST
(1.1224620483),

88 
COEF_CONST
(1.1553526969),

89 
COEF_CONST
(1.1892071150),

90 
COEF_CONST
(1.2240535433),

91 
COEF_CONST
(1.2599210499),

92 
COEF_CONST
(1.2968395547),

93 
COEF_CONST
(1.3348398542),

94 
COEF_CONST
(1.3739536475),

95 
COEF_CONST
(1.4142135624),

96 
COEF_CONST
(1.4556531828),

97 
COEF_CONST
(1.4983070769),

98 
COEF_CONST
(1.5422108254),

99 
COEF_CONST
(1.5874010520),

100 
COEF_CONST
(1.6339154532),

101 
COEF_CONST
(1.6817928305),

102 
COEF_CONST
(1.7310731220),

103 
COEF_CONST
(1.7817974363),

104 
COEF_CONST
(1.8340080864),

105 
COEF_CONST
(1.8877486254),

106 
COEF_CONST
(1.9430638823)

110 
	$drc_decode
(
drc_öfo
 *
drc
, 
ªÆ_t
 *
•ec
)

112 
uöt16_t
 
i
, 
bd
, 
t›
;

113 #ifde‡
FIXED_POINT


114 
öt32_t
 
exp
, 
‰ac
;

116 
ªÆ_t
 
Á˘‹
, 
exp
;

118 
uöt16_t
 
bŸtom
 = 0;

120 i‡(
drc
->
num_b™ds
 == 1)

121 
drc
->
b™d_t›
[0] = 1024/4 - 1;

123 
bd
 = 0; bd < 
drc
->
num_b™ds
; bd++)

125 
t›
 = 4 * (
drc
->
b™d_t›
[
bd
] + 1);

127 #i‚de‡
FIXED_POINT


129 i‡(
drc
->
dyn_∫g_sgn
[
bd
])

130 
exp
 = -
drc
->
˘æ1
 * (drc->
dyn_∫g_˘l
[
bd
] - (
DRC_REF_LEVEL
 - drc->
¥og_ªf_Àvñ
))/
	`REAL_CONST
(24.0);

132 
exp
 = 
drc
->
˘æ2
 * (drc->
dyn_∫g_˘l
[
bd
] - (
DRC_REF_LEVEL
 - drc->
¥og_ªf_Àvñ
))/
	`REAL_CONST
(24.0);

133 
Á˘‹
 = (
ªÆ_t
)
	`pow
(2.0, 
exp
);

136 
i
 = 
bŸtom
; i < 
t›
; i++)

137 
•ec
[
i
] *
Á˘‹
;

140 i‡(
drc
->
dyn_∫g_sgn
[
bd
])

142 
exp
 = -1 * (
drc
->
dyn_∫g_˘l
[
bd
] - (
DRC_REF_LEVEL
 - drc->
¥og_ªf_Àvñ
))/ 24;

143 
‰ac
 = -1 * (
drc
->
dyn_∫g_˘l
[
bd
] - (
DRC_REF_LEVEL
 - drc->
¥og_ªf_Àvñ
)) % 24;

145 
exp
 = (
drc
->
dyn_∫g_˘l
[
bd
] - (
DRC_REF_LEVEL
 - drc->
¥og_ªf_Àvñ
))/ 24;

146 
‰ac
 = (
drc
->
dyn_∫g_˘l
[
bd
] - (
DRC_REF_LEVEL
 - drc->
¥og_ªf_Àvñ
)) % 24;

150 i‡(
exp
 < 0)

152 
i
 = 
bŸtom
; i < 
t›
; i++)

154 
•ec
[
i
] >>-
exp
;

155 i‡(
‰ac
)

156 
•ec
[
i
] = 
	`MUL_R
(•ec[i],
drc_pow2_èbÀ
[
‰ac
+23]);

159 
i
 = 
bŸtom
; i < 
t›
; i++)

161 
•ec
[
i
] <<
exp
;

162 i‡(
‰ac
)

163 
•ec
[
i
] = 
	`MUL_R
(•ec[i],
drc_pow2_èbÀ
[
‰ac
+23]);

168 
bŸtom
 = 
t›
;

170 
	}
}

	@drc.h

28 #i‚de‡
__DRC_H__


29 
	#__DRC_H__


	)

31 #ifde‡
__˝lu•lus


35 
	#DRC_REF_LEVEL
 20*4

	)

38 
drc_öfo
 *
drc_öô
(
ªÆ_t
 
cut
,Ñól_à
boo°
);

39 
drc_íd
(
drc_öfo
 *
drc
);

40 
drc_decode
(
drc_öfo
 *
drc
, 
ªÆ_t
 *
•ec
);

43 #ifde‡
__˝lu•lus


	@drm_dec.c

28 
	~<°dlib.h
>

29 
	~<°dio.h
>

30 
	~<°rög.h
>

31 
	~<m©h.h
>

32 
	~"comm⁄.h
"

34 #ifde‡
DRM


36 
	~"sbr_dec.h
"

37 
	~"drm_dec.h
"

38 
	~"bôs.h
"

41 
	#DECAY_CUTOFF
 3

	)

42 
	#DECAY_SLOPE
 0.05f

	)

45 c⁄° 
	töt8_t
 (*
	tdrm_ps_huff_èb
)[2];

49 c⁄° 
öt8_t
 
	gf_huffm™_ß
[][2] =

67 c⁄° 
öt8_t
 
	gt_huffm™_ß
[][2] =

85 c⁄° 
öt8_t
 
	gf_huffm™_∑n
[][2] =

117 c⁄° 
öt8_t
 
	gt_huffm™_∑n
[][2] =

150 c⁄° 
ªÆ_t
 
	gß_qu™t
[8][2] =

152 { 
FRAC_CONST
(0.0000), FRAC_CONST(0.0000) },

153 { 
FRAC_CONST
(0.0501), FRAC_CONST(0.1778) },

154 { 
FRAC_CONST
(0.0706), FRAC_CONST(0.2818) },

155 { 
FRAC_CONST
(0.0995), FRAC_CONST(0.4467) },

156 { 
FRAC_CONST
(0.1399), FRAC_CONST(0.5623) },

157 { 
FRAC_CONST
(0.1957), FRAC_CONST(0.7079) },

158 { 
FRAC_CONST
(0.2713), FRAC_CONST(0.8913) },

159 { 
FRAC_CONST
(0.3699), FRAC_CONST(1.0000) },

164 c⁄° 
ªÆ_t
 
	g∑n_qu™t
[8][5] =

166 { 
COEF_CONST
(0.0000), COEF_CONST(0.0000), COEF_CONST(0.0000), COEF_CONST(0.0000), COEF_CONST(0.0000) },

167 { 
COEF_CONST
(0.1661), COEF_CONST(0.1661), COEF_CONST(0.3322), COEF_CONST(0.3322), COEF_CONST(0.3322) },

168 { 
COEF_CONST
(0.3322), COEF_CONST(0.3322), COEF_CONST(0.6644), COEF_CONST(0.8305), COEF_CONST(0.8305) },

169 { 
COEF_CONST
(0.4983), COEF_CONST(0.6644), COEF_CONST(0.9966), COEF_CONST(1.4949), COEF_CONST(1.6610) },

170 { 
COEF_CONST
(0.6644), COEF_CONST(0.9966), COEF_CONST(1.4949), COEF_CONST(2.1593), COEF_CONST(2.4914) },

171 { 
COEF_CONST
(0.8305), COEF_CONST(1.3288), COEF_CONST(2.1593), COEF_CONST(2.9897), COEF_CONST(3.4880) },

172 { 
COEF_CONST
(0.9966), COEF_CONST(1.8271), COEF_CONST(2.8236), COEF_CONST(3.8202), COEF_CONST(4.6507) },

173 { 
COEF_CONST
(1.3288), COEF_CONST(2.3253), COEF_CONST(3.4880), COEF_CONST(4.6507), COEF_CONST(5.8134) },

178 c⁄° 
ªÆ_t
 
	g∑n_pow_2_pos
[8][5] = {

179 { 
REAL_CONST
(1.0000000), REAL_CONST(1.0000000), REAL_CONST(1.0000000), REAL_CONST(1.0000000), REAL_CONST(1.0000000) },

180 { 
REAL_CONST
(1.1220021), REAL_CONST(1.1220021), REAL_CONST(1.2589312), REAL_CONST(1.2589312), REAL_CONST(1.2589312) },

181 { 
REAL_CONST
(1.2589312), REAL_CONST(1.2589312), REAL_CONST(1.5849090), REAL_CONST(1.7783016), REAL_CONST(1.7783016) },

182 { 
REAL_CONST
(1.4125481), REAL_CONST(1.5849090), REAL_CONST(1.9952921), REAL_CONST(2.8184461), REAL_CONST(3.1623565) },

183 { 
REAL_CONST
(1.5849090), REAL_CONST(1.9952922), REAL_CONST(2.8184461), REAL_CONST(4.4669806), REAL_CONST(5.6232337) },

184 { 
REAL_CONST
(1.7783016), REAL_CONST(2.5119365), REAL_CONST(4.4669806), REAL_CONST(7.9430881), REAL_CONST(11.219994) },

185 { 
REAL_CONST
(1.9952921), REAL_CONST(3.5482312), REAL_CONST(7.0792671), REAL_CONST(14.125206), REAL_CONST(25.118876) },

186 { 
REAL_CONST
(2.5119365), REAL_CONST(5.0116998), REAL_CONST(11.219994), REAL_CONST(25.118876), REAL_CONST(56.235140) }

190 c⁄° 
ªÆ_t
 
	g∑n_pow_2_√g
[8][5] = {

191 { 
REAL_CONST
(1), REAL_CONST(1), REAL_CONST(1), REAL_CONST(1), REAL_CONST(1) },

192 { 
REAL_CONST
(0.8912487), REAL_CONST(0.8912487), REAL_CONST(0.7943242), REAL_CONST(0.7943242), REAL_CONST(0.7943242) },

193 { 
REAL_CONST
(0.7943242), REAL_CONST(0.7943242), REAL_CONST(0.6309511), REAL_CONST(0.5623344), REAL_CONST(0.5623344) },

194 { 
REAL_CONST
(0.7079405), REAL_CONST(0.6309511), REAL_CONST(0.5011797), REAL_CONST(0.3548054), REAL_CONST(0.3162199) },

195 { 
REAL_CONST
(0.6309511), REAL_CONST(0.5011797), REAL_CONST(0.3548054), REAL_CONST(0.2238649), REAL_CONST(0.1778336) },

196 { 
REAL_CONST
(0.5623343), REAL_CONST(0.3980992), REAL_CONST(0.2238649), REAL_CONST(0.1258956), REAL_CONST(0.0891266) },

197 { 
REAL_CONST
(0.5011797), REAL_CONST(0.2818306), REAL_CONST(0.1412576), REAL_CONST(0.0707954), REAL_CONST(0.0398107) },

198 { 
REAL_CONST
(0.3980992), REAL_CONST(0.1995331), REAL_CONST(0.0891267), REAL_CONST(0.0398107), REAL_CONST(0.0177825) }

202 c⁄° 
ªÆ_t
 
	g∑n_pow_2_30_pos
[8][5] = {

203 { 
COEF_CONST
(1), COEF_CONST(1), COEF_CONST(1), COEF_CONST(1), COEF_CONST(1) },

204 { 
COEF_CONST
(1.003845098), COEF_CONST(1.003845098), COEF_CONST(1.007704982), COEF_CONST(1.007704982), COEF_CONST(1.007704982) },

205 { 
COEF_CONST
(1.007704982), COEF_CONST(1.007704982), COEF_CONST(1.01546933), COEF_CONST(1.019373909), COEF_CONST(1.019373909) },

206 { 
COEF_CONST
(1.011579706), COEF_CONST(1.01546933), COEF_CONST(1.023293502), COEF_CONST(1.035142941), COEF_CONST(1.039123167) },

207 { 
COEF_CONST
(1.01546933), COEF_CONST(1.023293502), COEF_CONST(1.035142941), COEF_CONST(1.051155908), COEF_CONST(1.059252598) },

208 { 
COEF_CONST
(1.019373909), COEF_CONST(1.03117796), COEF_CONST(1.051155908), COEF_CONST(1.071518432), COEF_CONST(1.0839263) },

209 { 
COEF_CONST
(1.023293502), COEF_CONST(1.043118698), COEF_CONST(1.067414119), COEF_CONST(1.092277933), COEF_CONST(1.113439626) },

210 { 
COEF_CONST
(1.03117796), COEF_CONST(1.055195268), COEF_CONST(1.0839263), COEF_CONST(1.113439626), COEF_CONST(1.143756546) }

214 c⁄° 
ªÆ_t
 
	g∑n_pow_2_30_√g
[8][5] = {

215 { 
COEF_CONST
(1), COEF_CONST(1), COEF_CONST(1), COEF_CONST(1), COEF_CONST(1) },

216 { 
COEF_CONST
(0.99616963), COEF_CONST(0.99616963), COEF_CONST(0.992353931), COEF_CONST(0.992353931), COEF_CONST(0.99235393) },

217 { 
COEF_CONST
(0.992353931), COEF_CONST(0.992353931), COEF_CONST(0.984766325), COEF_CONST(0.980994305), COEF_CONST(0.980994305) },

218 { 
COEF_CONST
(0.988552848), COEF_CONST(0.984766325), COEF_CONST(0.977236734), COEF_CONST(0.966050157), COEF_CONST(0.962349827) },

219 { 
COEF_CONST
(0.984766325), COEF_CONST(0.977236734), COEF_CONST(0.966050157), COEF_CONST(0.951333663), COEF_CONST(0.944061881) },

220 { 
COEF_CONST
(0.980994305), COEF_CONST(0.969764715), COEF_CONST(0.951333663), COEF_CONST(0.933255062), COEF_CONST(0.922571949) },

221 { 
COEF_CONST
(0.977236734), COEF_CONST(0.958663671), COEF_CONST(0.936843519), COEF_CONST(0.915517901), COEF_CONST(0.898117847) },

222 { 
COEF_CONST
(0.969764715), COEF_CONST(0.947691892), COEF_CONST(0.922571949), COEF_CONST(0.898117847), COEF_CONST(0.874311936) }

225 c⁄° 
ªÆ_t
 
	gg_deˇy¶›e
[
MAX_SA_BAND
] = {

226 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(0.95),FRAC_CONST(0.9), FRAC_CONST(0.85), FRAC_CONST(0.8),

227 
FRAC_CONST
(0.75),FRAC_CONST(0.7), FRAC_CONST(0.65),FRAC_CONST(0.6), FRAC_CONST(0.55),FRAC_CONST(0.5), FRAC_CONST(0.45),

228 
FRAC_CONST
(0.4), FRAC_CONST(0.35),FRAC_CONST(0.3), FRAC_CONST(0.25),FRAC_CONST(0.2), FRAC_CONST(0.15), FRAC_CONST(0.1),

229 
FRAC_CONST
(0.05),FRAC_CONST(0), FRAC_CONST(0), FRAC_CONST(0), FRAC_CONST(0), FRAC_CONST(0), FRAC_CONST(0),

230 
FRAC_CONST
(0), FRAC_CONST(0), FRAC_CONST(0), FRAC_CONST(0), FRAC_CONST(0), FRAC_CONST(0), FRAC_CONST(0),

231 
FRAC_CONST
(0), FRAC_CONST(0), FRAC_CONST(0), FRAC_CONST(0), FRAC_CONST(0), FRAC_CONST(0), FRAC_CONST(0),

232 
FRAC_CONST
(0), FRAC_CONST(0), FRAC_CONST(0)

235 c⁄° 
ªÆ_t
 
	gß_sqπ_1_möus
[8][2] = {

236 { 
FRAC_CONST
(1), FRAC_CONST(1) },

237 { 
FRAC_CONST
(0.998744206), FRAC_CONST(0.984066644) },

238 { 
FRAC_CONST
(0.997504707), FRAC_CONST(0.959473168) },

239 { 
FRAC_CONST
(0.995037562), FRAC_CONST(0.894683804) },

240 { 
FRAC_CONST
(0.990165638), FRAC_CONST(0.826933317) },

241 { 
FRAC_CONST
(0.980663811), FRAC_CONST(0.706312672) },

242 { 
FRAC_CONST
(0.962494836), FRAC_CONST(0.45341406) },

243 { 
FRAC_CONST
(0.929071574), FRAC_CONST(0) }

246 c⁄° 
uöt8_t
 
	gß_‰eq_sˇÀ
[9][2] =

259 c⁄° 
uöt8_t
 
	g∑n_‰eq_sˇÀ
[21] =

265 c⁄° 
uöt8_t
 
	g∑n_qu™t_˛ass
[20] =

272 c⁄° 
uöt8_t
 
	g∑n_öv_‰eq
[64] = {

279 c⁄° 
uöt8_t
 
	gß_öv_‰eq
[
MAX_SA_BAND
] = {

286 c⁄° 
ªÆ_t
 
	gfûãr_c€ff
[] =

288 
FRAC_CONST
(0.65143905754106),

289 
FRAC_CONST
(0.56471812200776),

290 
FRAC_CONST
(0.48954165955695)

293 c⁄° 
uöt8_t
 
	gdñay_Àngth
[][2] =

298 c⁄° 
ªÆ_t
 
	gdñay_‰a˘i⁄
[] =

300 
FRAC_CONST
(0.43), FRAC_CONST(0.75), FRAC_CONST(0.347)

303 c⁄° 
ªÆ_t
 
	g≥ak_deˇy
[2] =

305 
FRAC_CONST
(0.58664621951003), FRAC_CONST(0.76592833836465)

308 c⁄° 
ªÆ_t
 
	gsmoŸh_c€ff
[2] =

310 
FRAC_CONST
(0.6), FRAC_CONST(0.25)

314 c⁄° 
com∂ex_t
 
	gQ_Fø˘_ÆÕass_Qmf
[][3] = {

315 { { 
FRAC_CONST
(0.7804303765), FRAC_CONST(0.6252426505) }, { FRAC_CONST(0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(0.8550928831), FRAC_CONST(0.5184748173) } },

316 { { 
FRAC_CONST
(-0.4399392009), FRAC_CONST(0.8980275393) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(-0.0643581524), FRAC_CONST(0.9979268909) } },

317 { { 
FRAC_CONST
(-0.9723699093), FRAC_CONST(-0.2334454209) }, { FRAC_CONST(0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(-0.9146071672), FRAC_CONST(0.4043435752) } },

318 { { 
FRAC_CONST
(0.0157073960), FRAC_CONST(-0.9998766184) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(-0.7814115286), FRAC_CONST(-0.6240159869) } },

319 { { 
FRAC_CONST
(0.9792228341), FRAC_CONST(-0.2027871907) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(0.1920081824), FRAC_CONST(-0.9813933372) } },

320 { { 
FRAC_CONST
(0.4115142524), FRAC_CONST(0.9114032984) }, { FRAC_CONST(0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(0.9589683414), FRAC_CONST(-0.2835132182) } },

321 { { 
FRAC_CONST
(-0.7996847630), FRAC_CONST(0.6004201174) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(0.6947838664), FRAC_CONST(0.7192186117) } },

322 { { 
FRAC_CONST
(-0.7604058385), FRAC_CONST(-0.6494481564) }, { FRAC_CONST(0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(-0.3164770305), FRAC_CONST(0.9486001730) } },

323 { { 
FRAC_CONST
(0.4679299891), FRAC_CONST(-0.8837655187) }, { FRAC_CONST(0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(-0.9874414206), FRAC_CONST(0.1579856575) } },

324 { { 
FRAC_CONST
(0.9645573497), FRAC_CONST(0.2638732493) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(-0.5966450572), FRAC_CONST(-0.8025052547) } },

325 { { 
FRAC_CONST
(-0.0471066870), FRAC_CONST(0.9988898635) }, { FRAC_CONST(0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.4357025325), FRAC_CONST(-0.9000906944) } },

326 { { 
FRAC_CONST
(-0.9851093888), FRAC_CONST(0.1719288528) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(0.9995546937), FRAC_CONST(-0.0298405960) } },

327 { { 
FRAC_CONST
(-0.3826831877), FRAC_CONST(-0.9238796234) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(0.4886211455), FRAC_CONST(0.8724960685) } },

328 { { 
FRAC_CONST
(0.8181498647), FRAC_CONST(-0.5750049949) }, { FRAC_CONST(0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.5477093458), FRAC_CONST(0.8366686702) } },

329 { { 
FRAC_CONST
(0.7396308780), FRAC_CONST(0.6730127335) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.9951074123), FRAC_CONST(-0.0987988561) } },

330 { { 
FRAC_CONST
(-0.4954589605), FRAC_CONST(0.8686313629) }, { FRAC_CONST(0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(-0.3725017905), FRAC_CONST(-0.9280315042) } },

331 { { 
FRAC_CONST
(-0.9557929039), FRAC_CONST(-0.2940406799) }, { FRAC_CONST(0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(0.6506417990), FRAC_CONST(-0.7593847513) } },

332 { { 
FRAC_CONST
(0.0784594864), FRAC_CONST(-0.9969173074) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.9741733670), FRAC_CONST(0.2258014232) } },

333 { { 
FRAC_CONST
(0.9900237322), FRAC_CONST(-0.1409008205) }, { FRAC_CONST(0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.2502108514), FRAC_CONST(0.9681913853) } },

334 { { 
FRAC_CONST
(0.3534744382), FRAC_CONST(0.9354441762) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(-0.7427945137), FRAC_CONST(0.6695194840) } },

335 { { 
FRAC_CONST
(-0.8358076215), FRAC_CONST(0.5490224361) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(-0.9370992780), FRAC_CONST(-0.3490629196) } },

336 { { 
FRAC_CONST
(-0.7181259394), FRAC_CONST(-0.6959131360) }, { FRAC_CONST(0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.1237744763), FRAC_CONST(-0.9923103452) } },

337 { { 
FRAC_CONST
(0.5224990249), FRAC_CONST(-0.8526399136) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(0.8226406574), FRAC_CONST(-0.5685616732) } },

338 { { 
FRAC_CONST
(0.9460852146), FRAC_CONST(0.3239179254) }, { FRAC_CONST(0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(0.8844994903), FRAC_CONST(0.4665412009) } },

339 { { 
FRAC_CONST
(-0.1097348556), FRAC_CONST(0.9939609170) }, { FRAC_CONST(0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(-0.0047125919), FRAC_CONST(0.9999889135) } },

340 { { 
FRAC_CONST
(-0.9939610362), FRAC_CONST(0.1097337380) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(-0.8888573647), FRAC_CONST(0.4581840038) } },

341 { { 
FRAC_CONST
(-0.3239168525), FRAC_CONST(-0.9460855722) }, { FRAC_CONST(0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(-0.8172453642), FRAC_CONST(-0.5762898922) } },

342 { { 
FRAC_CONST
(0.8526405096), FRAC_CONST(-0.5224980116) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(0.1331215799), FRAC_CONST(-0.9910997152) } },

343 { { 
FRAC_CONST
(0.6959123611), FRAC_CONST(0.7181267142) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(0.9403476119), FRAC_CONST(-0.3402152061) } },

344 { { 
FRAC_CONST
(-0.5490233898), FRAC_CONST(0.8358070254) }, { FRAC_CONST(0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(0.7364512086), FRAC_CONST(0.6764906645) } },

345 { { 
FRAC_CONST
(-0.9354437590), FRAC_CONST(-0.3534754813) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.2593250275), FRAC_CONST(0.9657900929) } },

346 { { 
FRAC_CONST
(0.1409019381), FRAC_CONST(-0.9900235534) }, { FRAC_CONST(0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(-0.9762582779), FRAC_CONST(0.2166097313) } },

347 { { 
FRAC_CONST
(0.9969173670), FRAC_CONST(-0.0784583688) }, { FRAC_CONST(0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(-0.6434556246), FRAC_CONST(-0.7654833794) } },

348 { { 
FRAC_CONST
(0.2940396070), FRAC_CONST(0.9557932615) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.3812320232), FRAC_CONST(-0.9244794250) } },

349 { { 
FRAC_CONST
(-0.8686318994), FRAC_CONST(0.4954580069) }, { FRAC_CONST(0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.9959943891), FRAC_CONST(-0.0894154981) } },

350 { { 
FRAC_CONST
(-0.6730118990), FRAC_CONST(-0.7396316528) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(0.5397993922), FRAC_CONST(0.8417937160) } },

351 { { 
FRAC_CONST
(0.5750059485), FRAC_CONST(-0.8181492686) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(-0.4968227744), FRAC_CONST(0.8678520322) } },

352 { { 
FRAC_CONST
(0.9238792062), FRAC_CONST(0.3826842010) }, { FRAC_CONST(0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.9992290139), FRAC_CONST(-0.0392601527) } },

353 { { 
FRAC_CONST
(-0.1719299555), FRAC_CONST(0.9851091504) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.4271997511), FRAC_CONST(-0.9041572809) } },

354 { { 
FRAC_CONST
(-0.9988899231), FRAC_CONST(0.0471055657) }, { FRAC_CONST(0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(0.6041822433), FRAC_CONST(-0.7968461514) } },

355 { { 
FRAC_CONST
(-0.2638721764), FRAC_CONST(-0.9645576477) }, { FRAC_CONST(0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(0.9859085083), FRAC_CONST(0.1672853529) } },

356 { { 
FRAC_CONST
(0.8837660551), FRAC_CONST(-0.4679289758) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.3075223565), FRAC_CONST(0.9515408874) } },

357 { { 
FRAC_CONST
(0.6494473219), FRAC_CONST(0.7604066133) }, { FRAC_CONST(0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(-0.7015317082), FRAC_CONST(0.7126382589) } },

358 { { 
FRAC_CONST
(-0.6004210114), FRAC_CONST(0.7996840477) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(-0.9562535882), FRAC_CONST(-0.2925389707) } },

359 { { 
FRAC_CONST
(-0.9114028811), FRAC_CONST(-0.4115152657) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(-0.1827499419), FRAC_CONST(-0.9831594229) } },

360 { { 
FRAC_CONST
(0.2027882934), FRAC_CONST(-0.9792225957) }, { FRAC_CONST(0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(0.7872582674), FRAC_CONST(-0.6166234016) } },

361 { { 
FRAC_CONST
(0.9998766780), FRAC_CONST(-0.0157062728) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(0.9107555747), FRAC_CONST(0.4129458666) } },

362 { { 
FRAC_CONST
(0.2334443331), FRAC_CONST(0.9723701477) }, { FRAC_CONST(0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(0.0549497530), FRAC_CONST(0.9984891415) } },

363 { { 
FRAC_CONST
(-0.8980280757), FRAC_CONST(0.4399381876) }, { FRAC_CONST(0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(-0.8599416018), FRAC_CONST(0.5103924870) } },

364 { { 
FRAC_CONST
(-0.6252418160), FRAC_CONST(-0.7804310918) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(-0.8501682281), FRAC_CONST(-0.5265110731) } },

365 { { 
FRAC_CONST
(0.6252435446), FRAC_CONST(-0.7804297209) }, { FRAC_CONST(0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.0737608299), FRAC_CONST(-0.9972759485) } },

366 { { 
FRAC_CONST
(0.8980270624), FRAC_CONST(0.4399402142) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(0.9183775187), FRAC_CONST(-0.3957053721) } },

367 { { 
FRAC_CONST
(-0.2334465086), FRAC_CONST(0.9723696709) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(0.7754954696), FRAC_CONST(0.6313531399) } },

368 { { 
FRAC_CONST
(-0.9998766184), FRAC_CONST(-0.0157085191) }, { FRAC_CONST(0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.2012493610), FRAC_CONST(0.9795400500) } },

369 { { 
FRAC_CONST
(-0.2027861029), FRAC_CONST(-0.9792230725) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.9615978599), FRAC_CONST(0.2744622827) } },

370 { { 
FRAC_CONST
(0.9114037752), FRAC_CONST(-0.4115132093) }, { FRAC_CONST(0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(-0.6879743338), FRAC_CONST(-0.7257350087) } },

371 { { 
FRAC_CONST
(0.6004192233), FRAC_CONST(0.7996854186) }, { FRAC_CONST(0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(0.3254036009), FRAC_CONST(-0.9455752373) } },

372 { { 
FRAC_CONST
(-0.6494490504), FRAC_CONST(0.7604051232) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.9888865948), FRAC_CONST(-0.1486719251) } },

373 { { 
FRAC_CONST
(-0.8837650418), FRAC_CONST(-0.4679309726) }, { FRAC_CONST(0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.5890548825), FRAC_CONST(0.8080930114) } },

374 { { 
FRAC_CONST
(0.2638743520), FRAC_CONST(-0.9645570517) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(-0.4441666007), FRAC_CONST(0.8959442377) } },

375 { { 
FRAC_CONST
(0.9988898039), FRAC_CONST(0.0471078083) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(-0.9997915030), FRAC_CONST(0.0204183888) } },

376 { { 
FRAC_CONST
(0.1719277352), FRAC_CONST(0.9851095676) }, { FRAC_CONST(0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.4803760946), FRAC_CONST(-0.8770626187) } },

377 { { 
FRAC_CONST
(-0.9238800406), FRAC_CONST(0.3826821446) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(0.5555707216), FRAC_CONST(-0.8314692974) } },

378 { { 
FRAC_CONST
(-0.5750041008), FRAC_CONST(-0.8181505203) }, { FRAC_CONST(0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(0.9941320419), FRAC_CONST(0.1081734300) } }

381 c⁄° 
com∂ex_t
 
	gPhi_Fø˘_Qmf
[] = {

382 { 
FRAC_CONST
(0.8181497455), FRAC_CONST(0.5750052333) },

383 { 
FRAC_CONST
(-0.2638730407), FRAC_CONST(0.9645574093) },

384 { 
FRAC_CONST
(-0.9969173074), FRAC_CONST(0.0784590989) },

385 { 
FRAC_CONST
(-0.4115143716), FRAC_CONST(-0.9114032984) },

386 { 
FRAC_CONST
(0.7181262970), FRAC_CONST(-0.6959127784) },

387 { 
FRAC_CONST
(0.8980275989), FRAC_CONST(0.4399391711) },

388 { 
FRAC_CONST
(-0.1097343117), FRAC_CONST(0.9939609766) },

389 { 
FRAC_CONST
(-0.9723699093), FRAC_CONST(0.2334453613) },

390 { 
FRAC_CONST
(-0.5490227938), FRAC_CONST(-0.8358073831) },

391 { 
FRAC_CONST
(0.6004202366), FRAC_CONST(-0.7996846437) },

392 { 
FRAC_CONST
(0.9557930231), FRAC_CONST(0.2940403223) },

393 { 
FRAC_CONST
(0.0471064523), FRAC_CONST(0.9988898635) },

394 { 
FRAC_CONST
(-0.9238795042), FRAC_CONST(0.3826834261) },

395 { 
FRAC_CONST
(-0.6730124950), FRAC_CONST(-0.7396311164) },

396 { 
FRAC_CONST
(0.4679298103), FRAC_CONST(-0.8837656379) },

397 { 
FRAC_CONST
(0.9900236726), FRAC_CONST(0.1409012377) },

398 { 
FRAC_CONST
(0.2027872950), FRAC_CONST(0.9792228341) },

399 { 
FRAC_CONST
(-0.8526401520), FRAC_CONST(0.5224985480) },

400 { 
FRAC_CONST
(-0.7804304361), FRAC_CONST(-0.6252426505) },

401 { 
FRAC_CONST
(0.3239174187), FRAC_CONST(-0.9460853338) },

402 { 
FRAC_CONST
(0.9998766184), FRAC_CONST(-0.0157073177) },

403 { 
FRAC_CONST
(0.3534748554), FRAC_CONST(0.9354440570) },

404 { 
FRAC_CONST
(-0.7604059577), FRAC_CONST(0.6494480371) },

405 { 
FRAC_CONST
(-0.8686315417), FRAC_CONST(-0.4954586625) },

406 { 
FRAC_CONST
(0.1719291061), FRAC_CONST(-0.9851093292) },

407 { 
FRAC_CONST
(0.9851093292), FRAC_CONST(-0.1719291061) },

408 { 
FRAC_CONST
(0.4954586625), FRAC_CONST(0.8686315417) },

409 { 
FRAC_CONST
(-0.6494480371), FRAC_CONST(0.7604059577) },

410 { 
FRAC_CONST
(-0.9354440570), FRAC_CONST(-0.3534748554) },

411 { 
FRAC_CONST
(0.0157073177), FRAC_CONST(-0.9998766184) },

412 { 
FRAC_CONST
(0.9460853338), FRAC_CONST(-0.3239174187) },

413 { 
FRAC_CONST
(0.6252426505), FRAC_CONST(0.7804304361) },

414 { 
FRAC_CONST
(-0.5224985480), FRAC_CONST(0.8526401520) },

415 { 
FRAC_CONST
(-0.9792228341), FRAC_CONST(-0.2027872950) },

416 { 
FRAC_CONST
(-0.1409012377), FRAC_CONST(-0.9900236726) },

417 { 
FRAC_CONST
(0.8837656379), FRAC_CONST(-0.4679298103) },

418 { 
FRAC_CONST
(0.7396311164), FRAC_CONST(0.6730124950) },

419 { 
FRAC_CONST
(-0.3826834261), FRAC_CONST(0.9238795042) },

420 { 
FRAC_CONST
(-0.9988898635), FRAC_CONST(-0.0471064523) },

421 { 
FRAC_CONST
(-0.2940403223), FRAC_CONST(-0.9557930231) },

422 { 
FRAC_CONST
(0.7996846437), FRAC_CONST(-0.6004202366) },

423 { 
FRAC_CONST
(0.8358073831), FRAC_CONST(0.5490227938) },

424 { 
FRAC_CONST
(-0.2334453613), FRAC_CONST(0.9723699093) },

425 { 
FRAC_CONST
(-0.9939609766), FRAC_CONST(0.1097343117) },

426 { 
FRAC_CONST
(-0.4399391711), FRAC_CONST(-0.8980275989) },

427 { 
FRAC_CONST
(0.6959127784), FRAC_CONST(-0.7181262970) },

428 { 
FRAC_CONST
(0.9114032984), FRAC_CONST(0.4115143716) },

429 { 
FRAC_CONST
(-0.0784590989), FRAC_CONST(0.9969173074) },

430 { 
FRAC_CONST
(-0.9645574093), FRAC_CONST(0.2638730407) },

431 { 
FRAC_CONST
(-0.5750052333), FRAC_CONST(-0.8181497455) },

432 { 
FRAC_CONST
(0.5750052333), FRAC_CONST(-0.8181497455) },

433 { 
FRAC_CONST
(0.9645574093), FRAC_CONST(0.2638730407) },

434 { 
FRAC_CONST
(0.0784590989), FRAC_CONST(0.9969173074) },

435 { 
FRAC_CONST
(-0.9114032984), FRAC_CONST(0.4115143716) },

436 { 
FRAC_CONST
(-0.6959127784), FRAC_CONST(-0.7181262970) },

437 { 
FRAC_CONST
(0.4399391711), FRAC_CONST(-0.8980275989) },

438 { 
FRAC_CONST
(0.9939609766), FRAC_CONST(0.1097343117) },

439 { 
FRAC_CONST
(0.2334453613), FRAC_CONST(0.9723699093) },

440 { 
FRAC_CONST
(-0.8358073831), FRAC_CONST(0.5490227938) },

441 { 
FRAC_CONST
(-0.7996846437), FRAC_CONST(-0.6004202366) },

442 { 
FRAC_CONST
(0.2940403223), FRAC_CONST(-0.9557930231) },

443 { 
FRAC_CONST
(0.9988898635), FRAC_CONST(-0.0471064523) },

444 { 
FRAC_CONST
(0.3826834261), FRAC_CONST(0.9238795042) },

445 { 
FRAC_CONST
(-0.7396311164), FRAC_CONST(0.6730124950) }

450 
drm_ps_ß_ñemít
(
drm_ps_öfo
 *
ps
, 
bôfûe
 *
ld
);

451 
drm_ps_∑n_ñemít
(
drm_ps_öfo
 *
ps
, 
bôfûe
 *
ld
);

452 
öt8_t
 
huff_dec
(
bôfûe
 *
ld
, 
drm_ps_huff_èb
 
huff
);

455 
uöt16_t
 
	$drm_ps_d©a
(
drm_ps_öfo
 *
ps
, 
bôfûe
 *
ld
)

457 
uöt16_t
 
bôs
 = (uöt16_t)
	`Áad_gë_¥o˚s£d_bôs
(
ld
);

459 
ps
->
drm_ps_d©a_avaûabÀ
 = 1;

461 
ps
->
bs_íabÀ_ß
 = 
	`Áad_gë1bô
(
ld
);

462 
ps
->
bs_íabÀ_∑n
 = 
	`Áad_gë1bô
(
ld
);

464 i‡(
ps
->
bs_íabÀ_ß
)

466 
	`drm_ps_ß_ñemít
(
ps
, 
ld
);

469 i‡(
ps
->
bs_íabÀ_∑n
)

471 
	`drm_ps_∑n_ñemít
(
ps
, 
ld
);

474 
bôs
 = (
uöt16_t
)
	`Áad_gë_¥o˚s£d_bôs
(
ld
) - bits;

476  
bôs
;

477 
	}
}

479 
	$drm_ps_ß_ñemít
(
drm_ps_öfo
 *
ps
, 
bôfûe
 *
ld
)

481 
drm_ps_huff_èb
 
huff
;

482 
uöt8_t
 
b™d
;

484 
ps
->
bs_ß_dt_Êag
 = 
	`Áad_gë1bô
(
ld
);

485 i‡(
ps
->
bs_ß_dt_Êag
)

487 
huff
 = 
t_huffm™_ß
;

489 
huff
 = 
f_huffm™_ß
;

492 
b™d
 = 0; b™d < 
DRM_NUM_SA_BANDS
; band++)

494 
ps
->
bs_ß_d©a
[
b™d
] = 
	`huff_dec
(
ld
, 
huff
);

496 
	}
}

498 
	$drm_ps_∑n_ñemít
(
drm_ps_öfo
 *
ps
, 
bôfûe
 *
ld
)

500 
drm_ps_huff_èb
 
huff
;

501 
uöt8_t
 
b™d
;

503 
ps
->
bs_∑n_dt_Êag
 = 
	`Áad_gë1bô
(
ld
);

504 i‡(
ps
->
bs_∑n_dt_Êag
)

506 
huff
 = 
t_huffm™_∑n
;

508 
huff
 = 
f_huffm™_∑n
;

511 
b™d
 = 0; b™d < 
DRM_NUM_PAN_BANDS
; band++)

513 
ps
->
bs_∑n_d©a
[
b™d
] = 
	`huff_dec
(
ld
, 
huff
);

515 
	}
}

518 
öt8_t
 
	$huff_dec
(
bôfûe
 *
ld
, 
drm_ps_huff_èb
 
huff
)

520 
uöt8_t
 
bô
;

521 
öt16_t
 
ödex
 = 0;

523 
ödex
 >= 0)

525 
bô
 = (
uöt8_t
)
	`Áad_gë1bô
(
ld
);

526 
ödex
 = 
huff
[ödex][
bô
];

529  
ödex
 + 15;

530 
	}
}

533 
öt8_t
 
	$ß_dñè_˛ù
(
drm_ps_öfo
 *
ps
, 
öt8_t
 
i
)

535 i‡(
i
 < 0) {

537 
ps
->
ß_decode_îr‹
 = 1;

539 } i‡(
i
 > 7) {

541 
ps
->
ß_decode_îr‹
 = 1;

544  
i
;

545 
	}
}

547 
öt8_t
 
	$∑n_dñè_˛ù
(
drm_ps_öfo
 *
ps
, 
öt8_t
 
i
)

549 i‡(
i
 < -7) {

551 
ps
->
∑n_decode_îr‹
 = 1;

553 } i‡(
i
 > 7) {

555 
ps
->
∑n_decode_îr‹
 = 1;

558  
i
;

559 
	}
}

561 
	$drm_ps_dñè_decode
(
drm_ps_öfo
 *
ps
)

563 
uöt8_t
 
b™d
;

565 i‡(
ps
->
bs_íabÀ_ß
)

567 i‡(
ps
->
bs_ß_dt_Êag
 && !ps->
g_œ°_had_ß
)

569 
b™d
 = 0; b™d < 
DRM_NUM_SA_BANDS
; band++)

571 
ps
->
g_¥ev_ß_ödex
[
b™d
] = 0;

574 i‡(
ps
->
bs_ß_dt_Êag
)

576 
ps
->
g_ß_ödex
[0] = 
	`ß_dñè_˛ù
’s,Ös->
g_¥ev_ß_ödex
[0]+ps->
bs_ß_d©a
[0]);

579 
ps
->
g_ß_ödex
[0] = 
	`ß_dñè_˛ù
’s,ps->
bs_ß_d©a
[0]);

582 
b™d
 = 1; b™d < 
DRM_NUM_SA_BANDS
; band++)

584 i‡(
ps
->
bs_ß_dt_Êag
)

586 
ps
->
g_ß_ödex
[
b™d
] = 
	`ß_dñè_˛ù
’s,Ös->
g_¥ev_ß_ödex
[b™d] +Ös->
bs_ß_d©a
[band]);

588 
ps
->
g_ß_ödex
[
b™d
] = 
	`ß_dñè_˛ù
’s,Ös->g_ß_ödex[b™d-1] +Ös->
bs_ß_d©a
[band]);

595 i‡(
ps
->
ß_decode_îr‹
) {

596 
ps
->
∑n_decode_îr‹
 = 1;

597 
ps
->
bs_íabÀ_∑n
 =Ös->
g_œ°_had_∑n
;

598 
ps
->
bs_íabÀ_ß
 =Ös->
g_œ°_had_ß
;

602 i‡(
ps
->
bs_íabÀ_ß
)

604 i‡(
ps
->
ß_decode_îr‹
) {

605 
b™d
 = 0; b™d < 
DRM_NUM_SA_BANDS
; band++)

607 
ps
->
g_ß_ödex
[
b™d
] =Ös->
g_œ°_good_ß_ödex
[band];

610 
b™d
 = 0; b™d < 
DRM_NUM_SA_BANDS
; band++)

612 
ps
->
g_œ°_good_ß_ödex
[
b™d
] =Ös->
g_ß_ödex
[band];

617 i‡(
ps
->
bs_íabÀ_∑n
)

619 i‡(
ps
->
bs_∑n_dt_Êag
 && !ps->
g_œ°_had_∑n
)

624 
b™d
 = 0; b™d < 
DRM_NUM_PAN_BANDS
; band++)

626 
ps
->
g_¥ev_∑n_ödex
[
b™d
] = 0;

630 i‡(
ps
->
bs_∑n_dt_Êag
)

632 
ps
->
g_∑n_ödex
[0] = 
	`∑n_dñè_˛ù
’s,Ös->
g_¥ev_∑n_ödex
[0]+ps->
bs_∑n_d©a
[0]);

634 
ps
->
g_∑n_ödex
[0] = 
	`∑n_dñè_˛ù
’s,Ös->
bs_∑n_d©a
[0]);

637 
b™d
 = 1; b™d < 
DRM_NUM_PAN_BANDS
; band++)

639 i‡(
ps
->
bs_∑n_dt_Êag
)

641 
ps
->
g_∑n_ödex
[
b™d
] = 
	`∑n_dñè_˛ù
’s,Ös->
g_¥ev_∑n_ödex
[b™d] +Ös->
bs_∑n_d©a
[band]);

643 
ps
->
g_∑n_ödex
[
b™d
] = 
	`∑n_dñè_˛ù
’s,Ös->g_∑n_ödex[b™d-1] +Ös->
bs_∑n_d©a
[band]);

647 i‡(
ps
->
∑n_decode_îr‹
) {

648 
b™d
 = 0; b™d < 
DRM_NUM_PAN_BANDS
; band++)

650 
ps
->
g_∑n_ödex
[
b™d
] =Ös->
g_œ°_good_∑n_ödex
[band];

653 
b™d
 = 0; b™d < 
DRM_NUM_PAN_BANDS
; band++)

655 
ps
->
g_œ°_good_∑n_ödex
[
b™d
] =Ös->
g_∑n_ödex
[band];

659 
	}
}

661 
drm_ˇlc_ß_side_sig«l
(
drm_ps_öfo
 *
ps
, 
qmf_t
 
X
[38][64], 
uöt8_t
 
øã£À˘
)

663 
uöt8_t
 
	gs
, 
	gb
, 
	gk
;

664 
com∂ex_t
 
	gq‰ac
, 
	gtmp0
, 
	gtmp
, 
	gö
, 
	gR0
;

665 
ªÆ_t
 
	g≥akdiff
;

666 
ªÆ_t
 
	gƒg
;

667 
ªÆ_t
 
	gpowî
;

668 
ªÆ_t
 
	gå™§©io
;

669 
ªÆ_t
 
	g√w_dñay_¶›es
[
NUM_OF_LINKS
];

670 
uöt8_t
 
	gãmp_dñay_£r
[
NUM_OF_LINKS
];

671 
com∂ex_t
 
	gPhi_Fø˘
;

672 #ifde‡
FIXED_POINT


673 
uöt32_t
 
	gö_ª
, 
	gö_im
;

676 
	gb
 = 0; b < 
	gß_‰eq_sˇÀ
[
DRM_NUM_SA_BANDS
][
øã£À˘
]; b++)

679 
	gk
 = 0; k < 
	gNUM_OF_LINKS
; k++)

680 
	gãmp_dñay_£r
[
k
] = 
ps
->
dñay_buf_ödex_£r
[k];

682 
RE
(
Phi_Fø˘
ËRE(
Phi_Fø˘_Qmf
[
b
]);

683 
IM
(
Phi_Fø˘
ËIM(
Phi_Fø˘_Qmf
[
b
]);

685 
	gs
 = 0; s < 
	gNUM_OF_SUBSAMPLES
; s++)

687 c⁄° 
ªÆ_t
 
	ggamma
 = 
REAL_CONST
(1.5);

688 c⁄° 
ªÆ_t
 
	gsigma
 = 
REAL_CONST
(1.5625);

690 
RE
(
ö
Ë
QMF_RE
(
X
[
s
][
b
]);

691 
IM
(
ö
Ë
QMF_IM
(
X
[
s
][
b
]);

693 #ifde‡
FIXED_POINT


697 
	gö_ª
 = ((
abs
(
RE
(
ö
))+(1<<(
REAL_BITS
-1)))>>REAL_BITS);

698 
	gö_im
 = ((
abs
(
IM
(
ö
))+(1<<(
REAL_BITS
-1)))>>REAL_BITS);

699 
	gpowî
 = 
ö_ª
*ö_ª + 
ö_im
*in_im;

701 
	gpowî
 = 
MUL_R
(
RE
(
ö
),RE(ö)Ë+ MUL_R(
IM
(in),IM(in));

704 
	gps
->
	g≥akdeˇy_Á°
[
b
] = 
MUL_F
(
ps
->
≥akdeˇy_Á°
[b], 
≥ak_deˇy
[
øã£À˘
]);

705 i‡(
	gps
->
	g≥akdeˇy_Á°
[
b
] < 
	gpowî
)

706 
	gps
->
	g≥akdeˇy_Á°
[
b
] = 
powî
;

708 
	g≥akdiff
 = 
ps
->
¥ev_≥akdiff
[
b
];

709 
	g≥akdiff
 +
MUL_F
((
ps
->
≥akdeˇy_Á°
[
b
] - 
powî
 -Ös->
¥ev_≥akdiff
[b]), 
smoŸh_c€ff
[
øã£À˘
]);

710 
	gps
->
	g¥ev_≥akdiff
[
b
] = 
≥akdiff
;

712 
	gƒg
 = 
ps
->
¥ev_ƒg
[
b
];

713 
	gƒg
 +
MUL_F
((
powî
 - 
ps
->
¥ev_ƒg
[
b
]), 
smoŸh_c€ff
[
øã£À˘
]);

714 
	gps
->
	g¥ev_ƒg
[
b
] = 
ƒg
;

716 i‡(
MUL_R
(
≥akdiff
, 
gamma
Ë<
ƒg
) {

717 
å™§©io
 = 
sigma
;

719 
	gå™§©io
 = 
MUL_R
(
DIV_R
(
ƒg
, MUL_R(
≥akdiff
, 
gamma
)), 
sigma
);

722 
	gk
 = 0; k < 
	gNUM_OF_LINKS
; k++)

724 
	g√w_dñay_¶›es
[
k
] = 
MUL_F
(
g_deˇy¶›e
[
b
], 
fûãr_c€ff
[k]);

727 
RE
(
tmp0
ËRE(
ps
->
d_buff
[0][
b
]);

728 
IM
(
tmp0
ËIM(
ps
->
d_buff
[0][
b
]);

730 
RE
(
ps
->
d_buff
[0][
b
]) = RE(ps->d_buff[1][b]);

731 
IM
(
ps
->
d_buff
[0][
b
]) = IM(ps->d_buff[1][b]);

733 
RE
(
ps
->
d_buff
[1][
b
]ËRE(
ö
);

734 
IM
(
ps
->
d_buff
[1][
b
]ËIM(
ö
);

736 
Com∂exMu…
(&
RE
(
tmp
), &
IM
—mp), RE(
tmp0
), IM—mp0), RE(
Phi_Fø˘
), IM(Phi_Fract));

738 
RE
(
R0
ËRE(
tmp
);

739 
IM
(
R0
ËIM(
tmp
);

741 
	gk
 = 0; k < 
	gNUM_OF_LINKS
; k++)

743 
RE
(
q‰ac
ËRE(
Q_Fø˘_ÆÕass_Qmf
[
b
][
k
]);

744 
IM
(
q‰ac
ËIM(
Q_Fø˘_ÆÕass_Qmf
[
b
][
k
]);

746 
RE
(
tmp0
ËRE(
ps
->
d2_buff
[
k
][
ãmp_dñay_£r
[k]][
b
]);

747 
IM
(
tmp0
ËIM(
ps
->
d2_buff
[
k
][
ãmp_dñay_£r
[k]][
b
]);

749 
Com∂exMu…
(&
RE
(
tmp
), &
IM
—mp), RE(
tmp0
), IM—mp0), RE(
q‰ac
), IM(qfrac));

751 
RE
(
tmp
Ë+-
MUL_F
(
√w_dñay_¶›es
[
k
], RE(
R0
));

752 
IM
(
tmp
Ë+-
MUL_F
(
√w_dñay_¶›es
[
k
], IM(
R0
));

754 
RE
(
ps
->
d2_buff
[
k
][
ãmp_dñay_£r
[k]][
b
]ËRE(
R0
Ë+ 
MUL_F
(
√w_dñay_¶›es
[k], RE(
tmp
));

755 
IM
(
ps
->
d2_buff
[
k
][
ãmp_dñay_£r
[k]][
b
]ËIM(
R0
Ë+ 
MUL_F
(
√w_dñay_¶›es
[k], IM(
tmp
));

757 
RE
(
R0
ËRE(
tmp
);

758 
IM
(
R0
ËIM(
tmp
);

761 
QMF_RE
(
ps
->
SA
[
s
][
b
]Ë
MUL_R
(
RE
(
R0
), 
å™§©io
);

762 
QMF_IM
(
ps
->
SA
[
s
][
b
]Ë
MUL_R
(
IM
(
R0
), 
å™§©io
);

764 
	gk
 = 0; k < 
	gNUM_OF_LINKS
; k++)

766 i‡(++
	gãmp_dñay_£r
[
k
] >
dñay_Àngth
[k][
øã£À˘
])

767 
ãmp_dñay_£r
[
k
] = 0;

772 
	gk
 = 0; k < 
	gNUM_OF_LINKS
; k++)

773 
	gps
->
	gdñay_buf_ödex_£r
[
k
] = 
ãmp_dñay_£r
[k];

776 
drm_add_ambün˚
(
drm_ps_öfo
 *
ps
, 
uöt8_t
 
øã£À˘
, 
qmf_t
 
X_À·
[38][64], qmf_à
X_right
[38][64])

778 
uöt8_t
 
	gs
, 
	gb
, 
	gi‰eq
, 
	gq˛ass
;

779 
ªÆ_t
 
	gß_m≠
[
MAX_SA_BAND
], 
	gß_dú_m≠
[MAX_SA_BAND], 
	gk_ß_m≠
[MAX_SA_BAND], 
	gk_ß_dú_m≠
[MAX_SA_BAND];

780 
ªÆ_t
 
	g√w_dú_m≠
, 
	g√w_ß_m≠
;

782 i‡(
	gps
->
	gbs_íabÀ_ß
)

786 
	gb
 = 0; b < 
	gß_‰eq_sˇÀ
[
DRM_NUM_SA_BANDS
][
øã£À˘
]; b++)

788 c⁄° 
ªÆ_t
 
	göv_f_num_of_subßm∂es
 = 
FRAC_CONST
(0.03333333333);

790 
	gi‰eq
 = 
ß_öv_‰eq
[
b
];

791 
	gq˛ass
 = (
b
 != 0);

793 
	gß_m≠
[
b
] = 
ß_qu™t
[
ps
->
g_¥ev_ß_ödex
[
i‰eq
]][
q˛ass
];

794 
	g√w_ß_m≠
 = 
ß_qu™t
[
ps
->
g_ß_ödex
[
i‰eq
]][
q˛ass
];

796 
	gk_ß_m≠
[
b
] = 
MUL_F
(
öv_f_num_of_subßm∂es
, (
√w_ß_m≠
 - 
ß_m≠
[b]));

798 
	gß_dú_m≠
[
b
] = 
ß_sqπ_1_möus
[
ps
->
g_¥ev_ß_ödex
[
i‰eq
]][
q˛ass
];

799 
	g√w_dú_m≠
 = 
ß_sqπ_1_möus
[
ps
->
g_ß_ödex
[
i‰eq
]][
q˛ass
];

801 
	gk_ß_dú_m≠
[
b
] = 
MUL_F
(
öv_f_num_of_subßm∂es
, (
√w_dú_m≠
 - 
ß_dú_m≠
[b]));

805 
	gs
 = 0; s < 
	gNUM_OF_SUBSAMPLES
; s++)

807 
	gb
 = 0; b < 
	gß_‰eq_sˇÀ
[
DRM_NUM_SA_BANDS
][
øã£À˘
]; b++)

809 
QMF_RE
(
X_right
[
s
][
b
]Ë
MUL_F
(QMF_RE(
X_À·
[s][b]), 
ß_dú_m≠
[b]Ë- MUL_F(QMF_RE(
ps
->
SA
[s][b]), 
ß_m≠
[b]);

810 
QMF_IM
(
X_right
[
s
][
b
]Ë
MUL_F
(QMF_IM(
X_À·
[s][b]), 
ß_dú_m≠
[b]Ë- MUL_F(QMF_IM(
ps
->
SA
[s][b]), 
ß_m≠
[b]);

811 
QMF_RE
(
X_À·
[
s
][
b
]Ë
MUL_F
(QMF_RE(X_À·[s][b]), 
ß_dú_m≠
[b]Ë+ MUL_F(QMF_RE(
ps
->
SA
[s][b]), 
ß_m≠
[b]);

812 
QMF_IM
(
X_À·
[
s
][
b
]Ë
MUL_F
(QMF_IM(X_À·[s][b]), 
ß_dú_m≠
[b]Ë+ MUL_F(QMF_IM(
ps
->
SA
[s][b]), 
ß_m≠
[b]);

814 
	gß_m≠
[
b
] +
k_ß_m≠
[b];

815 
	gß_dú_m≠
[
b
] +
k_ß_dú_m≠
[b];

817 
	gb
 = 
ß_‰eq_sˇÀ
[
DRM_NUM_SA_BANDS
][
øã£À˘
]; b < 
	gNUM_OF_QMF_CHANNELS
; b++)

819 
QMF_RE
(
X_right
[
s
][
b
]ËQMF_RE(
X_À·
[s][b]);

820 
QMF_IM
(
X_right
[
s
][
b
]ËQMF_IM(
X_À·
[s][b]);

825 
	gs
 = 0; s < 
	gNUM_OF_SUBSAMPLES
; s++)

827 
	gb
 = 0; b < 
	gNUM_OF_QMF_CHANNELS
; b++)

829 
QMF_RE
(
X_right
[
s
][
b
]ËQMF_RE(
X_À·
[s][b]);

830 
QMF_IM
(
X_right
[
s
][
b
]ËQMF_IM(
X_À·
[s][b]);

836 
drm_add_∑n
(
drm_ps_öfo
 *
ps
, 
uöt8_t
 
øã£À˘
, 
qmf_t
 
X_À·
[38][64], qmf_à
X_right
[38][64])

838 
uöt8_t
 
	gs
, 
	gb
, 
	gq˛ass
, 
	gi‰eq
;

839 
ªÆ_t
 
	gtmp
, 
	gc€ff1
, 
	gc€ff2
;

840 
ªÆ_t
 
	g∑n_ba£
[
MAX_PAN_BAND
];

841 
ªÆ_t
 
	g∑n_dñè
[
MAX_PAN_BAND
];

842 
qmf_t
 
	gãmp_l
, 
	gãmp_r
;

844 i‡(
	gps
->
	gbs_íabÀ_∑n
)

846 
	gb
 = 0; b < 
	gNUM_OF_QMF_CHANNELS
; b++)

850 
	gi‰eq
 = 
∑n_öv_‰eq
[
b
];

851 
	gq˛ass
 = 
∑n_qu™t_˛ass
[
i‰eq
];

853 i‡(
	gps
->
	gg_¥ev_∑n_ödex
[
i‰eq
] >= 0)

855 
∑n_ba£
[
b
] = 
∑n_pow_2_pos
[
ps
->
g_¥ev_∑n_ödex
[
i‰eq
]][
q˛ass
];

857 
	g∑n_ba£
[
b
] = 
∑n_pow_2_√g
[-
ps
->
g_¥ev_∑n_ödex
[
i‰eq
]][
q˛ass
];

862 i‡(
	gps
->
	gg_∑n_ödex
[
i‰eq
] >= 0)

864 i‡(
ps
->
g_¥ev_∑n_ödex
[
i‰eq
] >= 0)

866 
∑n_dñè
[
b
] = 
MUL_C
(
∑n_pow_2_30_pos
[
ps
->
g_∑n_ödex
[
i‰eq
]][
q˛ass
],

867 
∑n_pow_2_30_√g
[
ps
->
g_¥ev_∑n_ödex
[
i‰eq
]][
q˛ass
]);

869 
	g∑n_dñè
[
b
] = 
MUL_C
(
∑n_pow_2_30_pos
[
ps
->
g_∑n_ödex
[
i‰eq
]][
q˛ass
],

870 
∑n_pow_2_30_pos
[-
ps
->
g_¥ev_∑n_ödex
[
i‰eq
]][
q˛ass
]);

873 i‡(
	gps
->
	gg_¥ev_∑n_ödex
[
i‰eq
] >= 0)

875 
∑n_dñè
[
b
] = 
MUL_C
(
∑n_pow_2_30_√g
[-
ps
->
g_∑n_ödex
[
i‰eq
]][
q˛ass
],

876 
∑n_pow_2_30_√g
[
ps
->
g_¥ev_∑n_ödex
[
i‰eq
]][
q˛ass
]);

878 
	g∑n_dñè
[
b
] = 
MUL_C
(
∑n_pow_2_30_√g
[-
ps
->
g_∑n_ödex
[
i‰eq
]][
q˛ass
],

879 
∑n_pow_2_30_pos
[-
ps
->
g_¥ev_∑n_ödex
[
i‰eq
]][
q˛ass
]);

884 
	gs
 = 0; s < 
	gNUM_OF_SUBSAMPLES
; s++)

887 
	gb
 = 0; b < 
	gNUM_OF_QMF_CHANNELS
; b++)

889 
	gtmp
 = 
∑n_ba£
[
b
];

891 
	gc€ff2
 = 
DIV_R
(
REAL_CONST
(2.0), (REAL_CONST(1.0Ë+ 
tmp
));

892 
	gc€ff1
 = 
MUL_R
(
c€ff2
, 
tmp
);

894 
QMF_RE
(
ãmp_l
ËQMF_RE(
X_À·
[
s
][
b
]);

895 
QMF_IM
(
ãmp_l
ËQMF_IM(
X_À·
[
s
][
b
]);

896 
QMF_RE
(
ãmp_r
ËQMF_RE(
X_right
[
s
][
b
]);

897 
QMF_IM
(
ãmp_r
ËQMF_IM(
X_right
[
s
][
b
]);

899 
QMF_RE
(
X_À·
[
s
][
b
]Ë
MUL_R
(QMF_RE(
ãmp_l
), 
c€ff1
);

900 
QMF_IM
(
X_À·
[
s
][
b
]Ë
MUL_R
(QMF_IM(
ãmp_l
), 
c€ff1
);

901 
QMF_RE
(
X_right
[
s
][
b
]Ë
MUL_R
(QMF_RE(
ãmp_r
), 
c€ff2
);

902 
QMF_IM
(
X_right
[
s
][
b
]Ë
MUL_R
(QMF_IM(
ãmp_r
), 
c€ff2
);

906 
	g∑n_ba£
[
b
] = 
MUL_C
(
∑n_ba£
[b], 
∑n_dñè
[b]);

912 
drm_ps_öfo
 *
	$drm_ps_öô
()

914 
drm_ps_öfo
 *
ps
 = (drm_ps_öfo*)
	`Áad_mÆloc
((drm_ps_info));

916 
	`mem£t
(
ps
, 0, (
drm_ps_öfo
));

918  
ps
;

919 
	}
}

921 
	$drm_ps_‰ì
(
drm_ps_öfo
 *
ps
)

923 
	`Áad_‰ì
(
ps
);

924 
	}
}

927 
uöt8_t
 
drm_ps_decode
(
drm_ps_öfo
 *
ps
, uöt8_à
guess
, 
uöt32_t
 
ßm∂î©e
, 
qmf_t
 
X_À·
[38][64], qmf_à
X_right
[38][64])

929 
uöt8_t
 
	gøã£À˘
 = (
ßm∂î©e
 >= 24000);

931 i‡(
	gps
 =
NULL
)

933 
mem˝y
(
X_right
, 
X_À·
, (
qmf_t
)*30*64);

937 i‡(!
	gps
->
	gdrm_ps_d©a_avaûabÀ
 && !
	gguess
)

939 
mem˝y
(
X_right
, 
X_À·
, (
qmf_t
)*30*64);

940 
mem£t
(
ps
->
g_¥ev_ß_ödex
, 0, (ps->g_prev_sa_index));

941 
mem£t
(
ps
->
g_¥ev_∑n_ödex
, 0, (ps->g_prev_pan_index));

947 i‡(!
	gguess
)

949 
	gps
->
	gß_decode_îr‹
 = 0;

950 
	gps
->
	g∑n_decode_îr‹
 = 0;

951 
drm_ps_dñè_decode
(
ps
);

954 
	gps
->
	gß_decode_îr‹
 = 1;

955 
	gps
->
	g∑n_decode_îr‹
 = 1;

959 
	gps
->
	gdrm_ps_d©a_avaûabÀ
 = 0;

961 
drm_ˇlc_ß_side_sig«l
(
ps
, 
X_À·
, 
øã£À˘
);

962 
drm_add_ambün˚
(
ps
, 
øã£À˘
, 
X_À·
, 
X_right
);

964 i‡(
	gps
->
	gbs_íabÀ_ß
)

966 
	gps
->
	gg_œ°_had_ß
 = 1;

968 
mem˝y
(
ps
->
g_¥ev_ß_ödex
,Ös->
g_ß_ödex
, (
öt8_t
Ë* 
DRM_NUM_SA_BANDS
);

971 
	gps
->
	gg_œ°_had_ß
 = 0;

974 i‡(
	gps
->
	gbs_íabÀ_∑n
)

976 
drm_add_∑n
(
ps
, 
øã£À˘
, 
X_À·
, 
X_right
);

978 
	gps
->
	gg_œ°_had_∑n
 = 1;

980 
mem˝y
(
ps
->
g_¥ev_∑n_ödex
,Ös->
g_∑n_ödex
, (
öt8_t
Ë* 
DRM_NUM_PAN_BANDS
);

983 
	gps
->
	gg_œ°_had_∑n
 = 0;

	@drm_dec.h

28 #i‚de‡
__DRM_DEC_H__


29 
	#__DRM_DEC_H__


	)

31 #ifde‡
__˝lu•lus


35 
	~"bôs.h
"

37 
	#DRM_PARAMETRIC_STEREO
 0

	)

38 
	#DRM_NUM_SA_BANDS
 8

	)

39 
	#DRM_NUM_PAN_BANDS
 20

	)

40 
	#NUM_OF_LINKS
 3

	)

41 
	#NUM_OF_QMF_CHANNELS
 64

	)

42 
	#NUM_OF_SUBSAMPLES
 30

	)

43 
	#MAX_SA_BAND
 46

	)

44 
	#MAX_PAN_BAND
 64

	)

45 
	#MAX_DELAY
 5

	)

49 
uöt8_t
 
drm_ps_d©a_avaûabÀ
;

50 
uöt8_t
 
bs_íabÀ_ß
;

51 
uöt8_t
 
bs_íabÀ_∑n
;

53 
uöt8_t
 
bs_ß_dt_Êag
;

54 
uöt8_t
 
bs_∑n_dt_Êag
;

56 
uöt8_t
 
g_œ°_had_ß
;

57 
uöt8_t
 
g_œ°_had_∑n
;

59 
öt8_t
 
bs_ß_d©a
[
DRM_NUM_SA_BANDS
];

60 
öt8_t
 
bs_∑n_d©a
[
DRM_NUM_PAN_BANDS
];

62 
öt8_t
 
g_ß_ödex
[
DRM_NUM_SA_BANDS
];

63 
öt8_t
 
g_∑n_ödex
[
DRM_NUM_PAN_BANDS
];

64 
öt8_t
 
g_¥ev_ß_ödex
[
DRM_NUM_SA_BANDS
];

65 
öt8_t
 
g_¥ev_∑n_ödex
[
DRM_NUM_PAN_BANDS
];

67 
öt8_t
 
ß_decode_îr‹
;

68 
öt8_t
 
∑n_decode_îr‹
;

70 
öt8_t
 
g_œ°_good_ß_ödex
[
DRM_NUM_SA_BANDS
];

71 
öt8_t
 
g_œ°_good_∑n_ödex
[
DRM_NUM_PAN_BANDS
];

73 
qmf_t
 
SA
[
NUM_OF_SUBSAMPLES
][
MAX_SA_BAND
];

75 
com∂ex_t
 
d_buff
[2][
MAX_SA_BAND
];

76 
com∂ex_t
 
d2_buff
[
NUM_OF_LINKS
][
MAX_DELAY
][
MAX_SA_BAND
];

78 
uöt8_t
 
dñay_buf_ödex_£r
[
NUM_OF_LINKS
];

80 
ªÆ_t
 
¥ev_ƒg
[
MAX_SA_BAND
];

81 
ªÆ_t
 
¥ev_≥akdiff
[
MAX_SA_BAND
];

82 
ªÆ_t
 
≥akdeˇy_Á°
[
MAX_SA_BAND
];

83 } 
	tdrm_ps_öfo
;

86 
uöt16_t
 
drm_ps_d©a
(
drm_ps_öfo
 *
ps
, 
bôfûe
 *
ld
);

88 
drm_ps_öfo
 *
drm_ps_öô
();

89 
drm_ps_‰ì
(
drm_ps_öfo
 *
ps
);

91 
uöt8_t
 
drm_ps_decode
(
drm_ps_öfo
 *
ps
, uöt8_à
guess
, 
uöt32_t
 
ßm∂î©e
, 
qmf_t
 
X_À·
[38][64], qmf_à
X_right
[38][64]);

93 #ifde‡
__˝lu•lus


	@error.c

28 
	~"comm⁄.h
"

29 
	~"îr‹.h
"

31 *
	gîr_msg
[] = {

	@error.h

28 #i‚de‡
__ERROR_H__


29 
	#__ERROR_H__


	)

31 #ifde‡
__˝lu•lus


35 
	#NUM_ERROR_MESSAGES
 28

	)

36 *
îr_msg
[];

38 #ifde‡
__˝lu•lus


	@filtbank.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 
	~<°dlib.h
>

32 
	~<°rög.h
>

33 #ifde‡
_WIN32_WCE


34 
	#as£π
(
x
)

	)

36 
	~<as£π.h
>

39 
	~"fûtb™k.h
"

40 
	~"decodî.h
"

41 
	~"sy¡ax.h
"

42 
	~"kbd_wö.h
"

43 
	~"söe_wö.h
"

44 
	~"md˘.h
"

47 
fb_öfo
 *
	$fûãr_b™k_öô
(
uöt16_t
 
‰ame_Àn
)

49 
uöt16_t
 
nsh‹t
 = 
‰ame_Àn
/8;

50 #ifde‡
LD_DEC


51 
uöt16_t
 
‰ame_Àn_ld
 = 
‰ame_Àn
/2;

54 
fb_öfo
 *
fb
 = (fb_öfo*)
	`Áad_mÆloc
((fb_info));

55 
	`mem£t
(
fb
, 0, (
fb_öfo
));

58 
fb
->
md˘256
 = 
	`Áad_md˘_öô
(2*
nsh‹t
);

59 
fb
->
md˘2048
 = 
	`Áad_md˘_öô
(2*
‰ame_Àn
);

60 #ifde‡
LD_DEC


62 
fb
->
md˘1024
 = 
	`Áad_md˘_öô
(2*
‰ame_Àn_ld
);

65 #ifde‡
ALLOW_SMALL_FRAMELENGTH


66 i‡(
‰ame_Àn
 == 1024)

69 
fb
->
l⁄g_wödow
[0] = 
söe_l⁄g_1024
;

70 
fb
->
sh‹t_wödow
[0] = 
söe_sh‹t_128
;

71 
fb
->
l⁄g_wödow
[1] = 
kbd_l⁄g_1024
;

72 
fb
->
sh‹t_wödow
[1] = 
kbd_sh‹t_128
;

73 #ifde‡
LD_DEC


74 
fb
->
ld_wödow
[0] = 
söe_mid_512
;

75 
fb
->
ld_wödow
[1] = 
ld_mid_512
;

77 #ifde‡
ALLOW_SMALL_FRAMELENGTH


79 
fb
->
l⁄g_wödow
[0] = 
söe_l⁄g_960
;

80 
fb
->
sh‹t_wödow
[0] = 
söe_sh‹t_120
;

81 
fb
->
l⁄g_wödow
[1] = 
kbd_l⁄g_960
;

82 
fb
->
sh‹t_wödow
[1] = 
kbd_sh‹t_120
;

83 #ifde‡
LD_DEC


84 
fb
->
ld_wödow
[0] = 
söe_mid_480
;

85 
fb
->
ld_wödow
[1] = 
ld_mid_480
;

90  
fb
;

93 
	`fûãr_b™k_íd
(
fb_öfo
 *
fb
)

95 i‡(
fb
 !
NULL
)

97 #ifde‡
PROFILE


98 
	`¥ötf
("FB: %I64d cy˛es\n", 
fb
->
cy˛es
);

101 
	`Áad_md˘_íd
(
fb
->
md˘256
);

102 
	`Áad_md˘_íd
(
fb
->
md˘2048
);

103 #ifde‡
LD_DEC


104 
	`Áad_md˘_íd
(
fb
->
md˘1024
);

107 
	`Áad_‰ì
(
fb
);

111 
INLINE
 
	`imd˘_l⁄g
(
fb_öfo
 *
fb
, 
ªÆ_t
 *
ö_d©a
,Ñól_à*
out_d©a
, 
uöt16_t
 
Àn
)

113 #ifde‡
LD_DEC


114 
md˘_öfo
 *
md˘
 = 
NULL
;

116 
Àn
)

120 
md˘
 = 
fb
->
md˘2048
;

124 
md˘
 = 
fb
->
md˘1024
;

128 
	`Áad_imd˘
(
md˘
, 
ö_d©a
, 
out_d©a
);

130 
	`Áad_imd˘
(
fb
->
md˘2048
, 
ö_d©a
, 
out_d©a
);

135 #ifde‡
LTP_DEC


136 
INLINE
 
	`md˘
(
fb_öfo
 *
fb
, 
ªÆ_t
 *
ö_d©a
,Ñól_à*
out_d©a
, 
uöt16_t
 
Àn
)

138 
md˘_öfo
 *
md˘
 = 
NULL
;

140 
Àn
)

144 
md˘
 = 
fb
->
md˘2048
;

148 
md˘
 = 
fb
->
md˘256
;

150 #ifde‡
LD_DEC


153 
md˘
 = 
fb
->
md˘1024
;

158 
	`Áad_md˘
(
md˘
, 
ö_d©a
, 
out_d©a
);

162 
	`ifûãr_b™k
(
fb_öfo
 *
fb
, 
uöt8_t
 
wödow_£quí˚
, uöt8_à
wödow_sh≠e
,

163 
uöt8_t
 
wödow_sh≠e_¥ev
, 
ªÆ_t
 *
‰eq_ö
,

164 
ªÆ_t
 *
time_out
,Ñól_à*
ovîœp
,

165 
uöt8_t
 
obje˘_ty≥
, 
uöt16_t
 
‰ame_Àn
)

167 
öt16_t
 
i
;

168 
ALIGN
 
ªÆ_t
 
å™sf_buf
[2*1024] = {0};

170 c⁄° 
ªÆ_t
 *
wödow_l⁄g
 = 
NULL
;

171 c⁄° 
ªÆ_t
 *
wödow_l⁄g_¥ev
 = 
NULL
;

172 c⁄° 
ªÆ_t
 *
wödow_sh‹t
 = 
NULL
;

173 c⁄° 
ªÆ_t
 *
wödow_sh‹t_¥ev
 = 
NULL
;

175 
uöt16_t
 
∆⁄g
 = 
‰ame_Àn
;

176 
uöt16_t
 
nsh‹t
 = 
‰ame_Àn
/8;

177 
uöt16_t
 
å™s
 = 
nsh‹t
/2;

179 
uöt16_t
 
nÊ©_ls
 = (
∆⁄g
-
nsh‹t
)/2;

181 #ifde‡
PROFILE


182 
öt64_t
 
cou¡
 = 
	`Áad_gë_ts
();

186 #ifde‡
LD_DEC


187 i‡(
obje˘_ty≥
 =
LD
)

189 
wödow_l⁄g
 = 
fb
->
ld_wödow
[
wödow_sh≠e
];

190 
wödow_l⁄g_¥ev
 = 
fb
->
ld_wödow
[
wödow_sh≠e_¥ev
];

193 
wödow_l⁄g
 = 
fb
->
l⁄g_wödow
[
wödow_sh≠e
];

194 
wödow_l⁄g_¥ev
 = 
fb
->
l⁄g_wödow
[
wödow_sh≠e_¥ev
];

195 
wödow_sh‹t
 = 
fb
->
sh‹t_wödow
[
wödow_sh≠e
];

196 
wödow_sh‹t_¥ev
 = 
fb
->
sh‹t_wödow
[
wödow_sh≠e_¥ev
];

197 #ifde‡
LD_DEC


202 
i
 = 0; i < 1024; i++)

204 
	`¥ötf
("%d\n", 
‰eq_ö
[
i
]);

209 
	`¥ötf
("%d %d\n", 
wödow_£quí˚
, 
wödow_sh≠e
);

212 
wödow_£quí˚
)

214 
ONLY_LONG_SEQUENCE
:

216 
	`imd˘_l⁄g
(
fb
, 
‰eq_ö
, 
å™sf_buf
, 2*
∆⁄g
);

219 
i
 = 0; i < 
∆⁄g
; i+=4)

221 
time_out
[
i
] = 
ovîœp
[i] + 
	`MUL_F
(
å™sf_buf
[i],
wödow_l⁄g_¥ev
[i]);

222 
time_out
[
i
+1] = 
ovîœp
[i+1] + 
	`MUL_F
(
å™sf_buf
[i+1],
wödow_l⁄g_¥ev
[i+1]);

223 
time_out
[
i
+2] = 
ovîœp
[i+2] + 
	`MUL_F
(
å™sf_buf
[i+2],
wödow_l⁄g_¥ev
[i+2]);

224 
time_out
[
i
+3] = 
ovîœp
[i+3] + 
	`MUL_F
(
å™sf_buf
[i+3],
wödow_l⁄g_¥ev
[i+3]);

228 
i
 = 0; i < 
∆⁄g
; i+=4)

230 
ovîœp
[
i
] = 
	`MUL_F
(
å™sf_buf
[
∆⁄g
+i],
wödow_l⁄g
[nlong-1-i]);

231 
ovîœp
[
i
+1] = 
	`MUL_F
(
å™sf_buf
[
∆⁄g
+i+1],
wödow_l⁄g
[nlong-2-i]);

232 
ovîœp
[
i
+2] = 
	`MUL_F
(
å™sf_buf
[
∆⁄g
+i+2],
wödow_l⁄g
[nlong-3-i]);

233 
ovîœp
[
i
+3] = 
	`MUL_F
(
å™sf_buf
[
∆⁄g
+i+3],
wödow_l⁄g
[nlong-4-i]);

237 
LONG_START_SEQUENCE
:

239 
	`imd˘_l⁄g
(
fb
, 
‰eq_ö
, 
å™sf_buf
, 2*
∆⁄g
);

242 
i
 = 0; i < 
∆⁄g
; i+=4)

244 
time_out
[
i
] = 
ovîœp
[i] + 
	`MUL_F
(
å™sf_buf
[i],
wödow_l⁄g_¥ev
[i]);

245 
time_out
[
i
+1] = 
ovîœp
[i+1] + 
	`MUL_F
(
å™sf_buf
[i+1],
wödow_l⁄g_¥ev
[i+1]);

246 
time_out
[
i
+2] = 
ovîœp
[i+2] + 
	`MUL_F
(
å™sf_buf
[i+2],
wödow_l⁄g_¥ev
[i+2]);

247 
time_out
[
i
+3] = 
ovîœp
[i+3] + 
	`MUL_F
(
å™sf_buf
[i+3],
wödow_l⁄g_¥ev
[i+3]);

252 
i
 = 0; i < 
nÊ©_ls
; i++)

253 
ovîœp
[
i
] = 
å™sf_buf
[
∆⁄g
+i];

254 
i
 = 0; i < 
nsh‹t
; i++)

255 
ovîœp
[
nÊ©_ls
+
i
] = 
	`MUL_F
(
å™sf_buf
[
∆⁄g
+nÊ©_ls+i],
wödow_sh‹t
[
nsh‹t
-i-1]);

256 
i
 = 0; i < 
nÊ©_ls
; i++)

257 
ovîœp
[
nÊ©_ls
+
nsh‹t
+
i
] = 0;

260 
EIGHT_SHORT_SEQUENCE
:

262 
	`Áad_imd˘
(
fb
->
md˘256
, 
‰eq_ö
+0*
nsh‹t
, 
å™sf_buf
+2*nshort*0);

263 
	`Áad_imd˘
(
fb
->
md˘256
, 
‰eq_ö
+1*
nsh‹t
, 
å™sf_buf
+2*nshort*1);

264 
	`Áad_imd˘
(
fb
->
md˘256
, 
‰eq_ö
+2*
nsh‹t
, 
å™sf_buf
+2*nshort*2);

265 
	`Áad_imd˘
(
fb
->
md˘256
, 
‰eq_ö
+3*
nsh‹t
, 
å™sf_buf
+2*nshort*3);

266 
	`Áad_imd˘
(
fb
->
md˘256
, 
‰eq_ö
+4*
nsh‹t
, 
å™sf_buf
+2*nshort*4);

267 
	`Áad_imd˘
(
fb
->
md˘256
, 
‰eq_ö
+5*
nsh‹t
, 
å™sf_buf
+2*nshort*5);

268 
	`Áad_imd˘
(
fb
->
md˘256
, 
‰eq_ö
+6*
nsh‹t
, 
å™sf_buf
+2*nshort*6);

269 
	`Áad_imd˘
(
fb
->
md˘256
, 
‰eq_ö
+7*
nsh‹t
, 
å™sf_buf
+2*nshort*7);

272 
i
 = 0; i < 
nÊ©_ls
; i++)

273 
time_out
[
i
] = 
ovîœp
[i];

274 
i
 = 0; i < 
nsh‹t
; i++)

276 
time_out
[
nÊ©_ls
+ 
i
] = 
ovîœp
[nÊ©_ls+ i] + 
	`MUL_F
(
å™sf_buf
[
nsh‹t
*0+i],
wödow_sh‹t_¥ev
[i]);

277 
time_out
[
nÊ©_ls
+1*
nsh‹t
+
i
] = 
ovîœp
[nÊ©_ls+nsh‹t*1+i] + 
	`MUL_F
(
å™sf_buf
[nsh‹t*1+i],
wödow_sh‹t
[nshort-1-i]) + MUL_F(transf_buf[nshort*2+i],window_short[i]);

278 
time_out
[
nÊ©_ls
+2*
nsh‹t
+
i
] = 
ovîœp
[nÊ©_ls+nsh‹t*2+i] + 
	`MUL_F
(
å™sf_buf
[nsh‹t*3+i],
wödow_sh‹t
[nshort-1-i]) + MUL_F(transf_buf[nshort*4+i],window_short[i]);

279 
time_out
[
nÊ©_ls
+3*
nsh‹t
+
i
] = 
ovîœp
[nÊ©_ls+nsh‹t*3+i] + 
	`MUL_F
(
å™sf_buf
[nsh‹t*5+i],
wödow_sh‹t
[nshort-1-i]) + MUL_F(transf_buf[nshort*6+i],window_short[i]);

280 i‡(
i
 < 
å™s
)

281 
time_out
[
nÊ©_ls
+4*
nsh‹t
+
i
] = 
ovîœp
[nÊ©_ls+nsh‹t*4+i] + 
	`MUL_F
(
å™sf_buf
[nsh‹t*7+i],
wödow_sh‹t
[nshort-1-i]) + MUL_F(transf_buf[nshort*8+i],window_short[i]);

285 
i
 = 0; i < 
nsh‹t
; i++)

287 i‡(
i
 >
å™s
)

288 
ovîœp
[
nÊ©_ls
+4*
nsh‹t
+
i
-
∆⁄g
] = 
	`MUL_F
(
å™sf_buf
[nsh‹t*7+i],
wödow_sh‹t
[nshort-1-i]) + MUL_F(transf_buf[nshort*8+i],window_short[i]);

289 
ovîœp
[
nÊ©_ls
+5*
nsh‹t
+
i
-
∆⁄g
] = 
	`MUL_F
(
å™sf_buf
[nsh‹t*9+i],
wödow_sh‹t
[nshort-1-i]) + MUL_F(transf_buf[nshort*10+i],window_short[i]);

290 
ovîœp
[
nÊ©_ls
+6*
nsh‹t
+
i
-
∆⁄g
] = 
	`MUL_F
(
å™sf_buf
[nsh‹t*11+i],
wödow_sh‹t
[nshort-1-i]) + MUL_F(transf_buf[nshort*12+i],window_short[i]);

291 
ovîœp
[
nÊ©_ls
+7*
nsh‹t
+
i
-
∆⁄g
] = 
	`MUL_F
(
å™sf_buf
[nsh‹t*13+i],
wödow_sh‹t
[nshort-1-i]) + MUL_F(transf_buf[nshort*14+i],window_short[i]);

292 
ovîœp
[
nÊ©_ls
+8*
nsh‹t
+
i
-
∆⁄g
] = 
	`MUL_F
(
å™sf_buf
[nsh‹t*15+i],
wödow_sh‹t
[nshort-1-i]);

294 
i
 = 0; i < 
nÊ©_ls
; i++)

295 
ovîœp
[
nÊ©_ls
+
nsh‹t
+
i
] = 0;

298 
LONG_STOP_SEQUENCE
:

300 
	`imd˘_l⁄g
(
fb
, 
‰eq_ö
, 
å™sf_buf
, 2*
∆⁄g
);

304 
i
 = 0; i < 
nÊ©_ls
; i++)

305 
time_out
[
i
] = 
ovîœp
[i];

306 
i
 = 0; i < 
nsh‹t
; i++)

307 
time_out
[
nÊ©_ls
+
i
] = 
ovîœp
[nÊ©_ls+i] + 
	`MUL_F
(
å™sf_buf
[nÊ©_ls+i],
wödow_sh‹t_¥ev
[i]);

308 
i
 = 0; i < 
nÊ©_ls
; i++)

309 
time_out
[
nÊ©_ls
+
nsh‹t
+
i
] = 
ovîœp
[nÊ©_ls+nsh‹t+i] + 
å™sf_buf
[nflat_ls+nshort+i];

312 
i
 = 0; i < 
∆⁄g
; i++)

313 
ovîœp
[
i
] = 
	`MUL_F
(
å™sf_buf
[
∆⁄g
+i],
wödow_l⁄g
[nlong-1-i]);

318 
i
 = 0; i < 1024; i++)

320 
	`¥ötf
("%d\n", 
time_out
[
i
]);

326 #ifde‡
PROFILE


327 
cou¡
 = 
	`Áad_gë_ts
() - count;

328 
fb
->
cy˛es
 +
cou¡
;

333 #ifde‡
LTP_DEC


335 
	`fûãr_b™k_…p
(
fb_öfo
 *
fb
, 
uöt8_t
 
wödow_£quí˚
, uöt8_à
wödow_sh≠e
,

336 
uöt8_t
 
wödow_sh≠e_¥ev
, 
ªÆ_t
 *
ö_d©a
,Ñól_à*
out_md˘
,

337 
uöt8_t
 
obje˘_ty≥
, 
uöt16_t
 
‰ame_Àn
)

339 
öt16_t
 
i
;

340 
ALIGN
 
ªÆ_t
 
wödowed_buf
[2*1024] = {0};

342 c⁄° 
ªÆ_t
 *
wödow_l⁄g
 = 
NULL
;

343 c⁄° 
ªÆ_t
 *
wödow_l⁄g_¥ev
 = 
NULL
;

344 c⁄° 
ªÆ_t
 *
wödow_sh‹t
 = 
NULL
;

345 c⁄° 
ªÆ_t
 *
wödow_sh‹t_¥ev
 = 
NULL
;

347 
uöt16_t
 
∆⁄g
 = 
‰ame_Àn
;

348 
uöt16_t
 
nsh‹t
 = 
‰ame_Àn
/8;

349 
uöt16_t
 
nÊ©_ls
 = (
∆⁄g
-
nsh‹t
)/2;

351 
	`as£π
(
wödow_£quí˚
 !
EIGHT_SHORT_SEQUENCE
);

353 #ifde‡
LD_DEC


354 i‡(
obje˘_ty≥
 =
LD
)

356 
wödow_l⁄g
 = 
fb
->
ld_wödow
[
wödow_sh≠e
];

357 
wödow_l⁄g_¥ev
 = 
fb
->
ld_wödow
[
wödow_sh≠e_¥ev
];

360 
wödow_l⁄g
 = 
fb
->
l⁄g_wödow
[
wödow_sh≠e
];

361 
wödow_l⁄g_¥ev
 = 
fb
->
l⁄g_wödow
[
wödow_sh≠e_¥ev
];

362 
wödow_sh‹t
 = 
fb
->
sh‹t_wödow
[
wödow_sh≠e
];

363 
wödow_sh‹t_¥ev
 = 
fb
->
sh‹t_wödow
[
wödow_sh≠e_¥ev
];

364 #ifde‡
LD_DEC


368 
wödow_£quí˚
)

370 
ONLY_LONG_SEQUENCE
:

371 
i
 = 
∆⁄g
-1; i >= 0; i--)

373 
wödowed_buf
[
i
] = 
	`MUL_F
(
ö_d©a
[i], 
wödow_l⁄g_¥ev
[i]);

374 
wödowed_buf
[
i
+
∆⁄g
] = 
	`MUL_F
(
ö_d©a
[i+∆⁄g], 
wödow_l⁄g
[nlong-1-i]);

376 
	`md˘
(
fb
, 
wödowed_buf
, 
out_md˘
, 2*
∆⁄g
);

379 
LONG_START_SEQUENCE
:

380 
i
 = 0; i < 
∆⁄g
; i++)

381 
wödowed_buf
[
i
] = 
	`MUL_F
(
ö_d©a
[i], 
wödow_l⁄g_¥ev
[i]);

382 
i
 = 0; i < 
nÊ©_ls
; i++)

383 
wödowed_buf
[
i
+
∆⁄g
] = 
ö_d©a
[i+nlong];

384 
i
 = 0; i < 
nsh‹t
; i++)

385 
wödowed_buf
[
i
+
∆⁄g
+
nÊ©_ls
] = 
	`MUL_F
(
ö_d©a
[i+∆⁄g+nÊ©_ls], 
wödow_sh‹t
[
nsh‹t
-1-i]);

386 
i
 = 0; i < 
nÊ©_ls
; i++)

387 
wödowed_buf
[
i
+
∆⁄g
+
nÊ©_ls
+
nsh‹t
] = 0;

388 
	`md˘
(
fb
, 
wödowed_buf
, 
out_md˘
, 2*
∆⁄g
);

391 
LONG_STOP_SEQUENCE
:

392 
i
 = 0; i < 
nÊ©_ls
; i++)

393 
wödowed_buf
[
i
] = 0;

394 
i
 = 0; i < 
nsh‹t
; i++)

395 
wödowed_buf
[
i
+
nÊ©_ls
] = 
	`MUL_F
(
ö_d©a
[i+nÊ©_ls], 
wödow_sh‹t_¥ev
[i]);

396 
i
 = 0; i < 
nÊ©_ls
; i++)

397 
wödowed_buf
[
i
+
nÊ©_ls
+
nsh‹t
] = 
ö_d©a
[i+nflat_ls+nshort];

398 
i
 = 0; i < 
∆⁄g
; i++)

399 
wödowed_buf
[
i
+
∆⁄g
] = 
	`MUL_F
(
ö_d©a
[i+∆⁄g], 
wödow_l⁄g
[nlong-1-i]);

400 
	`md˘
(
fb
, 
wödowed_buf
, 
out_md˘
, 2*
∆⁄g
);

	@filtbank.h

28 #i‚de‡
__FILTBANK_H__


29 
	#__FILTBANK_H__


	)

31 #ifde‡
__˝lu•lus


36 
fb_öfo
 *
fûãr_b™k_öô
(
uöt16_t
 
‰ame_Àn
);

37 
fûãr_b™k_íd
(
fb_öfo
 *
fb
);

39 #ifde‡
LTP_DEC


40 
fûãr_b™k_…p
(
fb_öfo
 *
fb
,

41 
uöt8_t
 
wödow_£quí˚
,

42 
uöt8_t
 
wödow_sh≠e
,

43 
uöt8_t
 
wödow_sh≠e_¥ev
,

44 
ªÆ_t
 *
ö_d©a
,

45 
ªÆ_t
 *
out_md˘
,

46 
uöt8_t
 
obje˘_ty≥
,

47 
uöt16_t
 
‰ame_Àn
);

50 
ifûãr_b™k
(
fb_öfo
 *
fb
, 
uöt8_t
 
wödow_£quí˚
, uöt8_à
wödow_sh≠e
,

51 
uöt8_t
 
wödow_sh≠e_¥ev
, 
ªÆ_t
 *
‰eq_ö
,

52 
ªÆ_t
 *
time_out
,Ñól_à*
ovîœp
,

53 
uöt8_t
 
obje˘_ty≥
, 
uöt16_t
 
‰ame_Àn
);

55 #ifde‡
__˝lu•lus


	@fixed.h

28 #i‚de‡
__FIXED_H__


29 
	#__FIXED_H__


	)

31 #ifde‡
__˝lu•lus


35 #i‡
deföed
(
_WIN32_WCE
Ë&& deföed(
_ARM_
)

36 
	~<cmnöåö.h
>

39 
	#COEF_BITS
 28

	)

40 
	#COEF_PRECISION
 (1 << 
COEF_BITS
)

	)

41 
	#REAL_BITS
 14

42 
	#REAL_PRECISION
 (1 << 
REAL_BITS
)

	)

45 
	#FRAC_SIZE
 32

	)

46 
	#FRAC_BITS
 31

	)

47 
	#FRAC_PRECISION
 ((
uöt32_t
)(1 << 
FRAC_BITS
))

	)

48 
	#FRAC_MAX
 0x7FFFFFFF

	)

50 
öt32_t
 
	tªÆ_t
;

53 
	#REAL_CONST
(
A
Ë(((AË>0Ë? ((
ªÆ_t
)((A)*(
REAL_PRECISION
)+0.5)Ë: (‘ól_t)((A)*(REAL_PRECISION)-0.5)))

	)

54 
	#COEF_CONST
(
A
Ë(((AË>0Ë? ((
ªÆ_t
)((A)*(
COEF_PRECISION
)+0.5)Ë: (‘ól_t)((A)*(COEF_PRECISION)-0.5)))

	)

55 
	#FRAC_CONST
(
A
Ë(((AË=1.00Ë? ((
ªÆ_t
)
FRAC_MAX
Ë: (((AË>0Ë? (‘ól_t)((A)*(
FRAC_PRECISION
)+0.5)Ë: (‘ól_t)((A)*(FRAC_PRECISION)-0.5))))

	)

58 
	#Q2_BITS
 22

	)

59 
	#Q2_PRECISION
 (1 << 
Q2_BITS
)

	)

60 
	#Q2_CONST
(
A
Ë(((AË>0Ë? ((
ªÆ_t
)((A)*(
Q2_PRECISION
)+0.5)Ë: (‘ól_t)((A)*(Q2_PRECISION)-0.5)))

	)

62 #i‡
deföed
(
_WIN32
Ë&& !deföed(
_WIN32_WCE
)

65 
INLINE
 
ªÆ_t
 
MUL_R
‘ól_à
A
,Ñól_à
B
)

67 
_asm
 {

68 
mov
 
óx
,
A


69 
imul
 
B


70 
shrd
 
óx
,
edx
,
REAL_BITS


75 
INLINE
 
ªÆ_t
 
MUL_C
‘ól_à
A
,Ñól_à
B
)

77 
_asm
 {

78 
mov
 
óx
,
A


79 
imul
 
B


80 
shrd
 
óx
,
edx
,
COEF_BITS


84 
INLINE
 
ªÆ_t
 
MUL_Q2
‘ól_à
A
,Ñól_à
B
)

86 
_asm
 {

87 
mov
 
óx
,
A


88 
imul
 
B


89 
shrd
 
óx
,
edx
,
Q2_BITS


93 
INLINE
 
ªÆ_t
 
MUL_SHIFT6
‘ól_à
A
,Ñól_à
B
)

95 
_asm
 {

96 
mov
 
óx
,
A


97 
imul
 
B


98 
shrd
 
óx
,
edx
,6

102 
INLINE
 
ªÆ_t
 
MUL_SHIFT23
‘ól_à
A
,Ñól_à
B
)

104 
_asm
 {

105 
mov
 
óx
,
A


106 
imul
 
B


107 
shrd
 
óx
,
edx
,23

112 
INLINE
 
ªÆ_t
 
_MulHigh
‘ól_à
A
,Ñól_à
B
)

114 
_asm
 {

115 
mov
 
óx
,
A


116 
imul
 
B


117 
mov
 
óx
,
edx


122 
INLINE
 
ªÆ_t
 
MUL_F
‘ól_à
A
,Ñól_à
B
)

124  
_MulHigh
(
A
,
B
Ë<< (
FRAC_SIZE
-
FRAC_BITS
);

128 
INLINE
 
Com∂exMu…
(
ªÆ_t
 *
y1
,Ñól_à*
y2
,

129 
ªÆ_t
 
x1
,Ñól_à
x2
,Ñól_à
c1
,Ñól_à
c2
)

131 *
y1
 = (
_MulHigh
(
x1
, 
c1
Ë+ _MulHigh(
x2
, 
c2
))<<(
FRAC_SIZE
-
FRAC_BITS
);

132 *
y2
 = (
_MulHigh
(
x2
, 
c1
Ë- _MulHigh(
x1
, 
c2
))<<(
FRAC_SIZE
-
FRAC_BITS
);

135 
INLINE
 
ªÆ_t
 
MUL_F
‘ól_à
A
,Ñól_à
B
)

137 
_asm
 {

138 
mov
 
óx
,
A


139 
imul
 
B


140 
shrd
 
óx
,
edx
,
FRAC_BITS


145 
INLINE
 
Com∂exMu…
(
ªÆ_t
 *
y1
,Ñól_à*
y2
,

146 
ªÆ_t
 
x1
,Ñól_à
x2
,Ñól_à
c1
,Ñól_à
c2
)

148 *
y1
 = 
MUL_F
(
x1
, 
c1
Ë+ MUL_F(
x2
, 
c2
);

149 *
y2
 = 
MUL_F
(
x2
, 
c1
Ë- MUL_F(
x1
, 
c2
);

153 #ñi‡
deföed
(
__GNUC__
Ë&& deföed (
__¨m__
)

156 
	#¨m_mul
(
x
, 
y
, 
SCALEBITS
) \

158 
uöt32_t
 
__hi
; \

159 
uöt32_t
 
__lo
; \

160 
uöt32_t
 
__ªsu…
; \

161 
	`asm
("smull %0, %1, %3, %4\n\t" \

164 : "=&r" (
__lo
), "=&r" (
__hi
), "Ù" (
__ªsu…
) \

165 : "%r" (
x
), "r" (
y
), \

166 "M" (
SCALEBITS
), "M" (32 - (SCALEBITS)) \

168 
__ªsu…
; \

169 })

	)

171 
INLINE
 
ªÆ_t
 
MUL_R
‘ól_à
A
,Ñól_à
B
)

173  
¨m_mul
(
A
, 
B
, 
REAL_BITS
);

176 
INLINE
 
ªÆ_t
 
MUL_C
‘ól_à
A
,Ñól_à
B
)

178  
¨m_mul
(
A
, 
B
, 
COEF_BITS
);

181 
INLINE
 
ªÆ_t
 
MUL_Q2
‘ól_à
A
,Ñól_à
B
)

183  
¨m_mul
(
A
, 
B
, 
Q2_BITS
);

186 
INLINE
 
ªÆ_t
 
MUL_SHIFT6
‘ól_à
A
,Ñól_à
B
)

188  
¨m_mul
(
A
, 
B
, 6);

191 
INLINE
 
ªÆ_t
 
MUL_SHIFT23
‘ól_à
A
,Ñól_à
B
)

193  
¨m_mul
(
A
, 
B
, 23);

196 
INLINE
 
ªÆ_t
 
_MulHigh
‘ól_à
x
,Ñól_à
y
)

198 
uöt32_t
 
__lo
;

199 
uöt32_t
 
__hi
;

200 
asm
("smull\t%0, %1, %2, %3"

201 : "=&r"(
__lo
),"=&r"(
__hi
)

202 : "%r"(
x
),"r"(
y
)

204  
__hi
;

207 
INLINE
 
ªÆ_t
 
MUL_F
‘ól_à
A
,Ñól_à
B
)

209  
_MulHigh
(
A
, 
B
Ë<< (
FRAC_SIZE
-
FRAC_BITS
);

213 
INLINE
 
Com∂exMu…
(
ªÆ_t
 *
y1
,Ñól_à*
y2
,

214 
ªÆ_t
 
x1
,Ñól_à
x2
,Ñól_à
c1
,Ñól_à
c2
)

216 
öt32_t
 
tmp
, 
yt1
, 
yt2
;

217 
asm
("smull %0, %1, %4, %6\n\t"

222 : "=&r" (
tmp
), "=&r" (
yt1
), "=&r" (
yt2
), "Ù" (
x1
)

223 : "3" (
x1
), "r" (
x2
), "r" (
c1
), "r" (
c2
)

225 *
y1
 = 
yt1
 << (
FRAC_SIZE
-
FRAC_BITS
);

226 *
y2
 = 
yt2
 << (
FRAC_SIZE
-
FRAC_BITS
);

232 
	#MUL_R
(
A
,
B
Ë(
ªÆ_t
)(((
öt64_t
)(A)*(öt64_t)(B)+(1 << (
REAL_BITS
-1))Ë>> REAL_BITS)

	)

234 
	#MUL_C
(
A
,
B
Ë(
ªÆ_t
)(((
öt64_t
)(A)*(öt64_t)(B)+(1 << (
COEF_BITS
-1))Ë>> COEF_BITS)

	)

236 #i‡
deföed
(
_WIN32_WCE
Ë&& deföed(
_ARM_
)

238 
INLINE
 
ªÆ_t
 
MUL_F
‘ól_à
A
,Ñól_à
B
)

240  
_MulHigh
(
A
,
B
Ë<< (32-
FRAC_BITS
);

243 
	#_MulHigh
(
A
,
B
Ë(
ªÆ_t
)(((
öt64_t
)(A)*(öt64_t)(B)+(1 << (
FRAC_SIZE
-1))Ë>> FRAC_SIZE)

	)

244 
	#MUL_F
(
A
,
B
Ë(
ªÆ_t
)(((
öt64_t
)(A)*(öt64_t)(B)+(1 << (
FRAC_BITS
-1))Ë>> FRAC_BITS)

	)

246 
	#MUL_Q2
(
A
,
B
Ë(
ªÆ_t
)(((
öt64_t
)(A)*(öt64_t)(B)+(1 << (
Q2_BITS
-1))Ë>> Q2_BITS)

	)

247 
	#MUL_SHIFT6
(
A
,
B
Ë(
ªÆ_t
)(((
öt64_t
)(A)*(öt64_t)(B)+(1 << (6-1))Ë>> 6)

	)

248 
	#MUL_SHIFT23
(
A
,
B
Ë(
ªÆ_t
)(((
öt64_t
)(A)*(öt64_t)(B)+(1 << (23-1))Ë>> 23)

	)

251 
INLINE
 
Com∂exMu…
(
ªÆ_t
 *
y1
,Ñól_à*
y2
,

252 
ªÆ_t
 
x1
,Ñól_à
x2
,Ñól_à
c1
,Ñól_à
c2
)

254 *
y1
 = (
_MulHigh
(
x1
, 
c1
Ë+ _MulHigh(
x2
, 
c2
))<<(
FRAC_SIZE
-
FRAC_BITS
);

255 *
y2
 = (
_MulHigh
(
x2
, 
c1
Ë- _MulHigh(
x1
, 
c2
))<<(
FRAC_SIZE
-
FRAC_BITS
);

262 #ifde‡
__˝lu•lus


	@hcr.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 
	~<°dlib.h
>

32 
	~<°rög.h
>

34 
	~"•e¸ec.h
"

35 
	~"huffm™.h
"

50 #ifde‡
ERROR_RESILIENCE


54 
	#NUM_CB
 6

	)

55 
	#NUM_CB_ER
 22

	)

56 
	#MAX_CB
 32

	)

57 
	#VCB11_FIRST
 16

	)

58 
	#VCB11_LAST
 31

	)

60 c⁄° 
uöt8_t
 
	gPªS‹tCB_STD
[
NUM_CB
] =

63 c⁄° 
uöt8_t
 
	gPªS‹tCB_ER
[
NUM_CB_ER
] =

68 c⁄° 
uöt8_t
 
	gmaxCwLí
[
MAX_CB
] = {0, 11, 9, 20, 16, 13, 11, 14, 12, 17, 14, 49,

71 
	#£gmítWidth
(
cb
Ë
	`mö
(
maxCwLí
[cb], 
ics
->
Àngth_of_l⁄ge°_codew‹d
)

	)

74 c⁄° 
uöt8_t
 
	gS
[] = {1, 2, 4, 8, 16};

75 c⁄° 
uöt32_t
 
	gB
[] = {0x55555555, 0x33333333, 0x0F0F0F0F, 0x00FF00FF, 0x0000FFFF};

79 
uöt8_t
 
	mcb
;

80 
uöt8_t
 
	mdecoded
;

81 
uöt16_t
 
	m•_off£t
;

82 
bôs_t
 
	mbôs
;

83 } 
	tcodew‹d_t
;

87 
uöt32_t
 
	$ªwªv_w‹d
(
uöt32_t
 
v
, c⁄° 
uöt8_t
 
Àn
)

90 
v
 = ((v >> 
S
[0]Ë& 
B
[0]) | ((v << S[0]) & ~B[0]);

91 
v
 = ((v >> 
S
[1]Ë& 
B
[1]) | ((v << S[1]) & ~B[1]);

92 
v
 = ((v >> 
S
[2]Ë& 
B
[2]) | ((v << S[2]) & ~B[2]);

93 
v
 = ((v >> 
S
[3]Ë& 
B
[3]) | ((v << S[3]) & ~B[3]);

94 
v
 = ((v >> 
S
[4]Ë& 
B
[4]) | ((v << S[4]) & ~B[4]);

97 
v
 >>(32 - 
Àn
);

99  
v
;

100 
	}
}

103 
	$ªwªv_lw‹d
(
uöt32_t
 *
hi
, uöt32_à*
lo
, c⁄° 
uöt8_t
 
Àn
)

105 i‡(
Àn
 <= 32) {

106 *
hi
 = 0;

107 *
lo
 = 
	`ªwªv_w‹d
(*lo, 
Àn
);

110 
uöt32_t
 
t
 = *
hi
, 
v
 = *
lo
;

113 
v
 = ((v >> 
S
[0]Ë& 
B
[0]) | ((v << S[0]) & ~B[0]);

114 
t
 = (— >> 
S
[0]Ë& 
B
[0]) | ((t << S[0]) & ~B[0]);

115 
v
 = ((v >> 
S
[1]Ë& 
B
[1]) | ((v << S[1]) & ~B[1]);

116 
t
 = (— >> 
S
[1]Ë& 
B
[1]) | ((t << S[1]) & ~B[1]);

117 
v
 = ((v >> 
S
[2]Ë& 
B
[2]) | ((v << S[2]) & ~B[2]);

118 
t
 = (— >> 
S
[2]Ë& 
B
[2]) | ((t << S[2]) & ~B[2]);

119 
v
 = ((v >> 
S
[3]Ë& 
B
[3]) | ((v << S[3]) & ~B[3]);

120 
t
 = (— >> 
S
[3]Ë& 
B
[3]) | ((t << S[3]) & ~B[3]);

121 
v
 = ((v >> 
S
[4]Ë& 
B
[4]) | ((v << S[4]) & ~B[4]);

122 
t
 = (— >> 
S
[4]Ë& 
B
[4]) | ((t << S[4]) & ~B[4]);

127 *
lo
 = (
t
 >> (64 - 
Àn
)Ë| (
v
 << (len - 32));

128 *
hi
 = 
v
 >> (64 - 
Àn
);

130 
	}
}

134 
	$ªwªv_bôs
(
bôs_t
 *
bôs
)

136 i‡(
bôs
->
Àn
 == 0) ;

137 
	`ªwªv_lw‹d
(&
bôs
->
bufb
, &bôs->
buÁ
, bôs->
Àn
);

138 
	}
}

142 
	$c⁄ˇt_bôs
(
bôs_t
 *
b
, bôs_à*
a
)

144 
uöt32_t
 
bl
, 
bh
, 
Æ
, 
ah
;

146 i‡(
a
->
Àn
 == 0) ;

148 
Æ
 = 
a
->
buÁ
;

149 
ah
 = 
a
->
bufb
;

151 i‡(
b
->
Àn
 > 32)

154 
bl
 = 
b
->
buÁ
;

155 
bh
 = 
b
->
bufb
 & ((1 << (b->
Àn
-32)) - 1);

157 
ah
 = 
Æ
 << (
b
->
Àn
 - 32);

158 
Æ
 = 0;

160 
bl
 = 
b
->
buÁ
 & ((1 << (b->
Àn
)) - 1);

161 
bh
 = 0;

162 
ah
 = (ah << (
b
->
Àn
)Ë| (
Æ
 >> (32 - b->len));

163 
Æ
 =á»<< 
b
->
Àn
;

167 
b
->
buÁ
 = 
bl
 | 
Æ
;

168 
b
->
bufb
 = 
bh
 | 
ah
;

170 
b
->
Àn
 +
a
->len;

171 
	}
}

173 
uöt8_t
 
	$is_good_cb
(
uöt8_t
 
this_CB
, uöt8_à
this_£c_CB
)

176 i‡((
this_£c_CB
 > 
ZERO_HCB
 &&Åhis_£c_CB <
ESC_HCB
Ë|| (this_£c_CB >
VCB11_FIRST
 &&Åhis_£c_CB <
VCB11_LAST
))

178 i‡(
this_CB
 < 
ESC_HCB
)

181  ((
this_£c_CB
 =
this_CB
) || (this_sec_CB ==Åhis_CB + 1));

185  (
this_£c_CB
 =
this_CB
);

189 
	}
}

191 
	$ªad_£gmít
(
bôs_t
 *
£gmít
, 
uöt8_t
 
£gwidth
, 
bôfûe
 *
ld
)

193 
£gmít
->
Àn
 = 
£gwidth
;

195 i‡(
£gwidth
 > 32)

197 
£gmít
->
bufb
 = 
	`Áad_gëbôs
(
ld
, 
£gwidth
 - 32);

198 
£gmít
->
buÁ
 = 
	`Áad_gëbôs
(
ld
, 32);

201 
£gmít
->
buÁ
 = 
	`Áad_gëbôs
(
ld
, 
£gwidth
);

202 
£gmít
->
bufb
 = 0;

204 
	}
}

206 
	$fûl_ö_codew‹d
(
codew‹d_t
 *
codew‹d
, 
uöt16_t
 
ödex
, uöt16_à
•
, 
uöt8_t
 
cb
)

208 
codew‹d
[
ödex
].
•_off£t
 = 
•
;

209 
codew‹d
[
ödex
].
cb
 = cb;

210 
codew‹d
[
ödex
].
decoded
 = 0;

211 
codew‹d
[
ödex
].
bôs
.
Àn
 = 0;

212 
	}
}

214 
uöt8_t
 
	$ª‹dîed_•e˘øl_d©a
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics
,

215 
bôfûe
 *
ld
, 
öt16_t
 *
•e˘øl_d©a
)

217 
uöt16_t
 
PCWs_d⁄e
;

218 
uöt16_t
 
numbîOfSegmíts
, 
numbîOfSës
, 
numbîOfCodew‹ds
;

220 
codew‹d_t
 
codew‹d
[512];

221 
bôs_t
 
£gmít
[512];

223 
uöt16_t
 
•_off£t
[8];

224 
uöt16_t
 
g
, 
i
, 
s‹éo›
, 
£t
, 
bô§ód
;

225 
uöt8_t
 
w_idx
, 
sfb
, 
this_CB
, 
œ°_CB
, 
this_£c_CB
;

227 c⁄° 
uöt16_t
 
nsh‹t
 = 
hDecodî
->
‰ameLígth
/8;

228 c⁄° 
uöt16_t
 
•_d©a_Àn
 = 
ics
->
Àngth_of_ª‹dîed_•e˘øl_d©a
;

230 c⁄° 
uöt8_t
 *
PªS‹tCb
;

233 i‡(
•_d©a_Àn
 == 0)

237 i‡(
ics
->
Àngth_of_l⁄ge°_codew‹d
 == 0)

240 i‡(
•_d©a_Àn
 < 
ics
->
Àngth_of_l⁄ge°_codew‹d
)

243 
•_off£t
[0] = 0;

244 
g
 = 1; g < 
ics
->
num_wödow_groups
; g++)

246 
•_off£t
[
g
] = sp_off£t[g-1] + 
nsh‹t
*
ics
->
wödow_group_Àngth
[g-1];

249 
PCWs_d⁄e
 = 0;

250 
numbîOfSegmíts
 = 0;

251 
numbîOfCodew‹ds
 = 0;

252 
bô§ód
 = 0;

255 i‡(
hDecodî
->
ØcSe˘i⁄D©aResûõn˚Fœg
)

257 
PªS‹tCb
 = 
PªS‹tCB_ER
;

258 
œ°_CB
 = 
NUM_CB_ER
;

261 
PªS‹tCb
 = 
PªS‹tCB_STD
;

262 
œ°_CB
 = 
NUM_CB
;

266 
s‹éo›
 = 0; s‹éo› < 
œ°_CB
; sortloop++)

269 
this_CB
 = 
PªS‹tCb
[
s‹éo›
];

272 
sfb
 = 0; sfb < 
ics
->
max_sfb
; sfb++)

275 
w_idx
 = 0; 4*w_idx < (
ics
->
swb_off£t
[
sfb
+1] - ics->swb_offset[sfb]); w_idx++)

277 
g
 = 0; g < 
ics
->
num_wödow_groups
; g++)

279 
i
 = 0; i < 
ics
->
num_£c
[
g
]; i++)

282 i‡((
ics
->
£˘_°¨t
[
g
][
i
] <
sfb
Ë&& (ics->
£˘_íd
[g][i] > sfb))

285 
this_£c_CB
 = 
ics
->
£˘_cb
[
g
][
i
];

287 i‡(
	`is_good_cb
(
this_CB
, 
this_£c_CB
))

290 
uöt16_t
 
£˘_sfb_size
 = 
ics
->
£˘_sfb_off£t
[
g
][
sfb
+1] - ics->sect_sfb_offset[g][sfb];

291 
uöt8_t
 
öc
 = (
this_£c_CB
 < 
FIRST_PAIR_HCB
Ë? 
QUAD_LEN
 : 
PAIR_LEN
;

292 
uöt16_t
 
group_cws_cou¡
 = (4*
ics
->
wödow_group_Àngth
[
g
])/
öc
;

293 
uöt8_t
 
£gwidth
 = 
	`£gmítWidth
(
this_£c_CB
);

294 
uöt16_t
 
cws
;

297 
cws
 = 0; (cw†< 
group_cws_cou¡
Ë&& ((cw†+ 
w_idx
*group_cws_cou¡Ë< 
£˘_sfb_size
); cws++)

299 
uöt16_t
 
•
 = 
•_off£t
[
g
] + 
ics
->
£˘_sfb_off£t
[g][
sfb
] + 
öc
 * (
cws
 + 
w_idx
*
group_cws_cou¡
);

302 i‡(!
PCWs_d⁄e
)

305 i‡(
bô§ód
 + 
£gwidth
 <
•_d©a_Àn
)

307 
	`ªad_£gmít
(&
£gmít
[
numbîOfSegmíts
], 
£gwidth
, 
ld
);

308 
bô§ód
 +
£gwidth
;

310 
	`huffm™_•e˘øl_d©a_2
(
this_£c_CB
, &
£gmít
[
numbîOfSegmíts
], &
•e˘øl_d©a
[
•
]);

313 
	`ªwªv_bôs
(&
£gmít
[
numbîOfSegmíts
]);

315 
numbîOfSegmíts
++;

320 i‡(
bô§ód
 < 
•_d©a_Àn
)

322 c⁄° 
uöt8_t
 
addôi⁄Æ_bôs
 = 
•_d©a_Àn
 - 
bô§ód
;

324 
	`ªad_£gmít
(&
£gmít
[
numbîOfSegmíts
], 
addôi⁄Æ_bôs
, 
ld
);

325 
£gmít
[
numbîOfSegmíts
].
Àn
 += segment[numberOfSegments-1].len;

326 
	`ªwªv_bôs
(&
£gmít
[
numbîOfSegmíts
]);

328 i‡(
£gmít
[
numbîOfSegmíts
-1].
Àn
 > 32)

330 
£gmít
[
numbîOfSegmíts
-1].
bufb
 = segment[numberOfSegments].bufb +

331 
	`showbôs_h¸
(&
£gmít
[
numbîOfSegmíts
-1], segmít[numbîOfSegmíts-1].
Àn
 - 32);

332 
£gmít
[
numbîOfSegmíts
-1].
buÁ
 = segment[numberOfSegments].bufa +

333 
	`showbôs_h¸
(&
£gmít
[
numbîOfSegmíts
-1], 32);

335 
£gmít
[
numbîOfSegmíts
-1].
buÁ
 = segment[numberOfSegments].bufa +

336 
	`showbôs_h¸
(&
£gmít
[
numbîOfSegmíts
-1], segmít[numbîOfSegmíts-1].
Àn
);

337 
£gmít
[
numbîOfSegmíts
-1].
bufb
 = segment[numberOfSegments].bufb;

339 
£gmít
[
numbîOfSegmíts
-1].
Àn
 +
addôi⁄Æ_bôs
;

341 
bô§ód
 = 
•_d©a_Àn
;

342 
PCWs_d⁄e
 = 1;

344 
	`fûl_ö_codew‹d
(
codew‹d
, 0, 
•
, 
this_£c_CB
);

347 
	`fûl_ö_codew‹d
(
codew‹d
, 
numbîOfCodew‹ds
 - 
numbîOfSegmíts
, 
•
, 
this_£c_CB
);

349 
numbîOfCodew‹ds
++;

359 i‡(
numbîOfSegmíts
 == 0)

362 
numbîOfSës
 = 
numbîOfCodew‹ds
 / 
numbîOfSegmíts
;

365 
£t
 = 1; së <
numbîOfSës
; set++)

367 
uöt16_t
 
åül
;

369 
åül
 = 0;Årü»< 
numbîOfSegmíts
;Årial++)

371 
uöt16_t
 
codew‹dBa£
;

373 
codew‹dBa£
 = 0; codew‹dBa£ < 
numbîOfSegmíts
; codewordBase++)

375 c⁄° 
uöt16_t
 
£gmít_idx
 = (
åül
 + 
codew‹dBa£
Ë% 
numbîOfSegmíts
;

376 c⁄° 
uöt16_t
 
codew‹d_idx
 = 
codew‹dBa£
 + 
£t
*
numbîOfSegmíts
 -ÇumberOfSegments;

379 i‡(
codew‹d_idx
 >
numbîOfCodew‹ds
 - 
numbîOfSegmíts
) ;

381 i‡(!
codew‹d
[
codew‹d_idx
].
decoded
 && 
£gmít
[
£gmít_idx
].
Àn
 > 0)

383 
uöt8_t
 
tm∂í
;

385 i‡(
codew‹d
[
codew‹d_idx
].
bôs
.
Àn
 != 0)

386 
	`c⁄ˇt_bôs
(&
£gmít
[
£gmít_idx
], &
codew‹d
[
codew‹d_idx
].
bôs
);

388 
tm∂í
 = 
£gmít
[
£gmít_idx
].
Àn
;

390 i‡(
	`huffm™_•e˘øl_d©a_2
(
codew‹d
[
codew‹d_idx
].
cb
, &
£gmít
[
£gmít_idx
],

391 &
•e˘øl_d©a
[
codew‹d
[
codew‹d_idx
].
•_off£t
]) >= 0)

393 
codew‹d
[
codew‹d_idx
].
decoded
 = 1;

396 
codew‹d
[
codew‹d_idx
].
bôs
 = 
£gmít
[
£gmít_idx
];

397 
codew‹d
[
codew‹d_idx
].
bôs
.
Àn
 = 
tm∂í
;

403 
i
 = 0; i < 
numbîOfSegmíts
; i++)

404 
	`ªwªv_bôs
(&
£gmít
[
i
]);

408 
	}
}

	@huffman.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 
	~<°dlib.h
>

32 #ifde‡
ANALYSIS


33 
	~<°dio.h
>

36 
	~"bôs.h
"

37 
	~"huffm™.h
"

38 
	~"codebook/hcb.h
"

42 
INLINE
 
huffm™_sign_bôs
(
bôfûe
 *
ld
, 
öt16_t
 *
•
, 
uöt8_t
 
Àn
);

43 
INLINE
 
öt16_t
 
huffm™_gëesˇ≥
(
bôfûe
 *
ld
, i¡16_à
•
);

44 
uöt8_t
 
huffm™_2°ï_quad
(uöt8_à
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
);

45 
uöt8_t
 
huffm™_2°ï_quad_sign
(uöt8_à
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
);

46 
uöt8_t
 
huffm™_2°ï_∑ú
(uöt8_à
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
);

47 
uöt8_t
 
huffm™_2°ï_∑ú_sign
(uöt8_à
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
);

48 
uöt8_t
 
huffm™_bö¨y_quad
(uöt8_à
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
);

49 
uöt8_t
 
huffm™_bö¨y_quad_sign
(uöt8_à
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
);

50 
uöt8_t
 
huffm™_bö¨y_∑ú
(uöt8_à
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
);

51 
uöt8_t
 
huffm™_bö¨y_∑ú_sign
(uöt8_à
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
);

52 
öt16_t
 
huffm™_codebook
(
uöt8_t
 
i
);

53 
vcb11_check_LAV
(
uöt8_t
 
cb
, 
öt16_t
 *
•
);

55 
öt8_t
 
	$huffm™_sˇÀ_Á˘‹
(
bôfûe
 *
ld
)

57 
uöt16_t
 
off£t
 = 0;

59 
hcb_sf
[
off£t
][1])

61 
uöt8_t
 
b
 = 
	`Áad_gë1bô
(
ld


62 
	`DEBUGVAR
(1,255,"huffman_scale_factor()"));

63 
off£t
 +
hcb_sf
[off£t][
b
];

65 i‡(
off£t
 > 240)

72  
hcb_sf
[
off£t
][0];

73 
	}
}

76 
hcb
 *
	ghcb_èbÀ
[] = {

77 0, 
hcb1_1
, 
hcb2_1
, 0, 
hcb4_1
, 0, 
hcb6_1
, 0, 
hcb8_1
, 0, 
hcb10_1
, 
hcb11_1


80 
hcb_2_quad
 *
	ghcb_2_quad_èbÀ
[] = {

81 0, 
hcb1_2
, 
hcb2_2
, 0, 
hcb4_2
, 0, 0, 0, 0, 0, 0, 0

84 
hcb_2_∑ú
 *
	ghcb_2_∑ú_èbÀ
[] = {

85 0, 0, 0, 0, 0, 0, 
hcb6_2
, 0, 
hcb8_2
, 0, 
hcb10_2
, 
hcb11_2


88 
hcb_bö_∑ú
 *
	ghcb_bö_èbÀ
[] = {

89 0, 0, 0, 0, 0, 
hcb5
, 0, 
hcb7
, 0, 
hcb9
, 0, 0

92 
uöt8_t
 
	ghcbN
[] = { 0, 5, 5, 0, 5, 0, 5, 0, 5, 0, 6, 5 };

96 
uöt8_t
 
	gunsig√d_cb
[] = { 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0,

100 
	ghcb_2_quad_èbÀ_size
[] = { 0, 114, 86, 0, 185, 0, 0, 0, 0, 0, 0, 0 };

101 
	ghcb_2_∑ú_èbÀ_size
[] = { 0, 0, 0, 0, 0, 0, 126, 0, 83, 0, 210, 373 };

102 
	ghcb_bö_èbÀ_size
[] = { 0, 0, 0, 161, 0, 161, 0, 127, 0, 337, 0, 0 };

104 
INLINE
 
	$huffm™_sign_bôs
(
bôfûe
 *
ld
, 
öt16_t
 *
•
, 
uöt8_t
 
Àn
)

106 
uöt8_t
 
i
;

108 
i
 = 0; i < 
Àn
; i++)

110 if(
•
[
i
])

112 if(
	`Áad_gë1bô
(
ld


113 
	`DEBUGVAR
(1,5,"huffman_sign_bits(): sign bit")) & 1)

115 
•
[
i
] = -sp[i];

119 
	}
}

121 
INLINE
 
öt16_t
 
	$huffm™_gëesˇ≥
(
bôfûe
 *
ld
, 
öt16_t
 
•
)

123 
uöt8_t
 
√g
, 
i
;

124 
öt16_t
 
j
;

125 
öt16_t
 
off
;

127 i‡(
•
 < 0)

129 i‡(
•
 != -16)

130  
•
;

131 
√g
 = 1;

133 i‡(
•
 != 16)

134  
•
;

135 
√g
 = 0;

138 
i
 = 4; ; i++)

140 i‡(
	`Áad_gë1bô
(
ld


141 
	`DEBUGVAR
(1,6,"huffman_getescape():Éscape size")) == 0)

147 
off
 = (
öt16_t
)
	`Áad_gëbôs
(
ld
, 
i


148 
	`DEBUGVAR
(1,9,"huffman_getescape():Éscape"));

150 
j
 = 
off
 | (1<<
i
);

151 i‡(
√g
)

152 
j
 = -j;

154  
j
;

155 
	}
}

157 
uöt8_t
 
	$huffm™_2°ï_quad
(
uöt8_t
 
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
)

159 
uöt32_t
 
cw
;

160 
uöt16_t
 
off£t
 = 0;

161 
uöt8_t
 
exåa_bôs
;

163 
cw
 = 
	`Áad_showbôs
(
ld
, 
hcbN
[
cb
]);

164 
off£t
 = 
hcb_èbÀ
[
cb
][
cw
].offset;

165 
exåa_bôs
 = 
hcb_èbÀ
[
cb
][
cw
].extra_bits;

167 i‡(
exåa_bôs
)

170 
	`Áad_Êushbôs
(
ld
, 
hcbN
[
cb
]);

171 
off£t
 +(
uöt16_t
)
	`Áad_showbôs
(
ld
, 
exåa_bôs
);

172 
	`Áad_Êushbôs
(
ld
, 
hcb_2_quad_èbÀ
[
cb
][
off£t
].
bôs
 - 
hcbN
[cb]);

174 
	`Áad_Êushbôs
(
ld
, 
hcb_2_quad_èbÀ
[
cb
][
off£t
].
bôs
);

177 i‡(
off£t
 > 
hcb_2_quad_èbÀ_size
[
cb
])

184 
•
[0] = 
hcb_2_quad_èbÀ
[
cb
][
off£t
].
x
;

185 
•
[1] = 
hcb_2_quad_èbÀ
[
cb
][
off£t
].
y
;

186 
•
[2] = 
hcb_2_quad_èbÀ
[
cb
][
off£t
].
v
;

187 
•
[3] = 
hcb_2_quad_èbÀ
[
cb
][
off£t
].
w
;

190 
	}
}

192 
uöt8_t
 
	$huffm™_2°ï_quad_sign
(
uöt8_t
 
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
)

194 
uöt8_t
 
îr
 = 
	`huffm™_2°ï_quad
(
cb
, 
ld
, 
•
);

195 
	`huffm™_sign_bôs
(
ld
, 
•
, 
QUAD_LEN
);

197  
îr
;

198 
	}
}

200 
uöt8_t
 
	$huffm™_2°ï_∑ú
(
uöt8_t
 
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
)

202 
uöt32_t
 
cw
;

203 
uöt16_t
 
off£t
 = 0;

204 
uöt8_t
 
exåa_bôs
;

206 
cw
 = 
	`Áad_showbôs
(
ld
, 
hcbN
[
cb
]);

207 
off£t
 = 
hcb_èbÀ
[
cb
][
cw
].offset;

208 
exåa_bôs
 = 
hcb_èbÀ
[
cb
][
cw
].extra_bits;

210 i‡(
exåa_bôs
)

213 
	`Áad_Êushbôs
(
ld
, 
hcbN
[
cb
]);

214 
off£t
 +(
uöt16_t
)
	`Áad_showbôs
(
ld
, 
exåa_bôs
);

215 
	`Áad_Êushbôs
(
ld
, 
hcb_2_∑ú_èbÀ
[
cb
][
off£t
].
bôs
 - 
hcbN
[cb]);

217 
	`Áad_Êushbôs
(
ld
, 
hcb_2_∑ú_èbÀ
[
cb
][
off£t
].
bôs
);

220 i‡(
off£t
 > 
hcb_2_∑ú_èbÀ_size
[
cb
])

227 
•
[0] = 
hcb_2_∑ú_èbÀ
[
cb
][
off£t
].
x
;

228 
•
[1] = 
hcb_2_∑ú_èbÀ
[
cb
][
off£t
].
y
;

231 
	}
}

233 
uöt8_t
 
	$huffm™_2°ï_∑ú_sign
(
uöt8_t
 
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
)

235 
uöt8_t
 
îr
 = 
	`huffm™_2°ï_∑ú
(
cb
, 
ld
, 
•
);

236 
	`huffm™_sign_bôs
(
ld
, 
•
, 
PAIR_LEN
);

238  
îr
;

239 
	}
}

241 
uöt8_t
 
	$huffm™_bö¨y_quad
(
uöt8_t
 
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
)

243 
uöt16_t
 
off£t
 = 0;

245 !
hcb3
[
off£t
].
is_Àaf
)

247 
uöt8_t
 
b
 = 
	`Áad_gë1bô
(
ld


248 
	`DEBUGVAR
(1,255,"huffman_spectral_data():3"));

249 
off£t
 +
hcb3
[off£t].
d©a
[
b
];

252 i‡(
off£t
 > 
hcb_bö_èbÀ_size
[
cb
])

259 
•
[0] = 
hcb3
[
off£t
].
d©a
[0];

260 
•
[1] = 
hcb3
[
off£t
].
d©a
[1];

261 
•
[2] = 
hcb3
[
off£t
].
d©a
[2];

262 
•
[3] = 
hcb3
[
off£t
].
d©a
[3];

265 
	}
}

267 
uöt8_t
 
	$huffm™_bö¨y_quad_sign
(
uöt8_t
 
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
)

269 
uöt8_t
 
îr
 = 
	`huffm™_bö¨y_quad
(
cb
, 
ld
, 
•
);

270 
	`huffm™_sign_bôs
(
ld
, 
•
, 
QUAD_LEN
);

272  
îr
;

273 
	}
}

275 
uöt8_t
 
	$huffm™_bö¨y_∑ú
(
uöt8_t
 
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
)

277 
uöt16_t
 
off£t
 = 0;

279 !
hcb_bö_èbÀ
[
cb
][
off£t
].
is_Àaf
)

281 
uöt8_t
 
b
 = 
	`Áad_gë1bô
(
ld


282 
	`DEBUGVAR
(1,255,"huffman_spectral_data():9"));

283 
off£t
 +
hcb_bö_èbÀ
[
cb
][off£t].
d©a
[
b
];

286 i‡(
off£t
 > 
hcb_bö_èbÀ_size
[
cb
])

293 
•
[0] = 
hcb_bö_èbÀ
[
cb
][
off£t
].
d©a
[0];

294 
•
[1] = 
hcb_bö_èbÀ
[
cb
][
off£t
].
d©a
[1];

297 
	}
}

299 
uöt8_t
 
	$huffm™_bö¨y_∑ú_sign
(
uöt8_t
 
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
)

301 
uöt8_t
 
îr
 = 
	`huffm™_bö¨y_∑ú
(
cb
, 
ld
, 
•
);

302 
	`huffm™_sign_bôs
(
ld
, 
•
, 
PAIR_LEN
);

304  
îr
;

305 
	}
}

307 
öt16_t
 
	$huffm™_codebook
(
uöt8_t
 
i
)

309 c⁄° 
uöt32_t
 
d©a
 = 16428320;

310 i‡(
i
 =0Ë (
öt16_t
)(
d©a
 >> 16) & 0xFFFF;

311  (
öt16_t
)
d©a
 & 0xFFFF;

312 
	}
}

314 
	$vcb11_check_LAV
(
uöt8_t
 
cb
, 
öt16_t
 *
•
)

316 c⁄° 
uöt16_t
 
vcb11_LAV_èb
[] = {

320 
uöt16_t
 
max
 = 0;

322 i‡(
cb
 < 16 || cb > 31)

325 
max
 = 
vcb11_LAV_èb
[
cb
 - 16];

327 i‡((
	`abs
(
•
[0]Ë> 
max
) || (abs(sp[1]) > max))

329 
•
[0] = 0;

330 
•
[1] = 0;

332 
	}
}

334 
uöt8_t
 
	$huffm™_•e˘øl_d©a
(
uöt8_t
 
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
)

336 
cb
)

340  
	`huffm™_2°ï_quad
(
cb
, 
ld
, 
•
);

342  
	`huffm™_bö¨y_quad_sign
(
cb
, 
ld
, 
•
);

344  
	`huffm™_2°ï_quad_sign
(
cb
, 
ld
, 
•
);

346  
	`huffm™_bö¨y_∑ú
(
cb
, 
ld
, 
•
);

348  
	`huffm™_2°ï_∑ú
(
cb
, 
ld
, 
•
);

351  
	`huffm™_bö¨y_∑ú_sign
(
cb
, 
ld
, 
•
);

354  
	`huffm™_2°ï_∑ú_sign
(
cb
, 
ld
, 
•
);

356 
uöt8_t
 
îr
 = 
	`huffm™_2°ï_∑ú
(11, 
ld
, 
•
);

357 
•
[0] = 
	`huffm™_codebook
(0); sp[1] = huffman_codebook(1);

358  
îr
; }

361 
uöt8_t
 
îr
 = 
	`huffm™_2°ï_∑ú_sign
(11, 
ld
, 
•
);

362 
•
[0] = 
	`huffm™_gëesˇ≥
(
ld
, sp[0]);

363 
•
[1] = 
	`huffm™_gëesˇ≥
(
ld
, sp[1]);

364  
îr
;

366 #ifde‡
ERROR_RESILIENCE


371 
uöt8_t
 
îr
 = 
	`huffm™_2°ï_∑ú_sign
(11, 
ld
, 
•
);

372 
•
[0] = 
	`huffm™_gëesˇ≥
(
ld
, sp[0]);

373 
•
[1] = 
	`huffm™_gëesˇ≥
(
ld
, sp[1]);

377 
	`vcb11_check_LAV
(
cb
, 
•
);

379  
îr
;

388 
	}
}

391 #ifde‡
ERROR_RESILIENCE


398 
öt8_t
 
	$huffm™_•e˘øl_d©a_2
(
uöt8_t
 
cb
, 
bôs_t
 *
ld
, 
öt16_t
 *
•
)

400 
uöt32_t
 
cw
;

401 
uöt16_t
 
off£t
 = 0;

402 
uöt8_t
 
exåa_bôs
;

403 
uöt8_t
 
i
, 
vcb11
 = 0;

406 
cb
)

412 
cw
 = 
	`showbôs_h¸
(
ld
, 
hcbN
[
cb
]);

413 
off£t
 = 
hcb_èbÀ
[
cb
][
cw
].offset;

414 
exåa_bôs
 = 
hcb_èbÀ
[
cb
][
cw
].extra_bits;

416 i‡(
exåa_bôs
)

419 i‡–
	`Êushbôs_h¸
(
ld
, 
hcbN
[
cb
]) )  -1;

420 
off£t
 +(
uöt16_t
)
	`showbôs_h¸
(
ld
, 
exåa_bôs
);

421 i‡–
	`Êushbôs_h¸
(
ld
, 
hcb_2_quad_èbÀ
[
cb
][
off£t
].
bôs
 - 
hcbN
[cb]) )  -1;

423 i‡–
	`Êushbôs_h¸
(
ld
, 
hcb_2_quad_èbÀ
[
cb
][
off£t
].
bôs
) )  -1;

426 
•
[0] = 
hcb_2_quad_èbÀ
[
cb
][
off£t
].
x
;

427 
•
[1] = 
hcb_2_quad_èbÀ
[
cb
][
off£t
].
y
;

428 
•
[2] = 
hcb_2_quad_èbÀ
[
cb
][
off£t
].
v
;

429 
•
[3] = 
hcb_2_quad_èbÀ
[
cb
][
off£t
].
w
;

440 i‡(
cb
 >= 16)

443 
vcb11
 = 
cb
;

444 
cb
 = 11;

447 
cw
 = 
	`showbôs_h¸
(
ld
, 
hcbN
[
cb
]);

448 
off£t
 = 
hcb_èbÀ
[
cb
][
cw
].offset;

449 
exåa_bôs
 = 
hcb_èbÀ
[
cb
][
cw
].extra_bits;

451 i‡(
exåa_bôs
)

454 i‡–
	`Êushbôs_h¸
(
ld
, 
hcbN
[
cb
]) )  -1;

455 
off£t
 +(
uöt16_t
)
	`showbôs_h¸
(
ld
, 
exåa_bôs
);

456 i‡–
	`Êushbôs_h¸
(
ld
, 
hcb_2_∑ú_èbÀ
[
cb
][
off£t
].
bôs
 - 
hcbN
[cb]) )  -1;

458 i‡–
	`Êushbôs_h¸
(
ld
, 
hcb_2_∑ú_èbÀ
[
cb
][
off£t
].
bôs
) )  -1;

460 
•
[0] = 
hcb_2_∑ú_èbÀ
[
cb
][
off£t
].
x
;

461 
•
[1] = 
hcb_2_∑ú_èbÀ
[
cb
][
off£t
].
y
;

466 !
hcb3
[
off£t
].
is_Àaf
)

468 
uöt8_t
 
b
;

470 i‡–
	`gë1bô_h¸
(
ld
, &
b
) )  -1;

471 
off£t
 +
hcb3
[off£t].
d©a
[
b
];

474 
•
[0] = 
hcb3
[
off£t
].
d©a
[0];

475 
•
[1] = 
hcb3
[
off£t
].
d©a
[1];

476 
•
[2] = 
hcb3
[
off£t
].
d©a
[2];

477 
•
[3] = 
hcb3
[
off£t
].
d©a
[3];

485 !
hcb_bö_èbÀ
[
cb
][
off£t
].
is_Àaf
)

487 
uöt8_t
 
b
;

489 i‡(
	`gë1bô_h¸
(
ld
, &
b
) )  -1;

490 
off£t
 +
hcb_bö_èbÀ
[
cb
][off£t].
d©a
[
b
];

493 
•
[0] = 
hcb_bö_èbÀ
[
cb
][
off£t
].
d©a
[0];

494 
•
[1] = 
hcb_bö_èbÀ
[
cb
][
off£t
].
d©a
[1];

500 i‡(
unsig√d_cb
[
cb
])

502 
i
 = 0; i < ((
cb
 < 
FIRST_PAIR_HCB
Ë? 
QUAD_LEN
 : 
PAIR_LEN
); i++)

504 if(
•
[
i
])

506 
uöt8_t
 
b
;

507 i‡–
	`gë1bô_h¸
(
ld
, &
b
) )  -1;

508 i‡(
b
 != 0) {

509 
•
[
i
] = -sp[i];

516 i‡((
cb
 =
ESC_HCB
) || (cb >= 16))

518 
uöt8_t
 
k
;

519 
k
 = 0; k < 2; k++)

521 i‡((
•
[
k
] == 16) || (sp[k] == -16))

523 
uöt8_t
 
√g
, 
i
;

524 
öt32_t
 
j
;

525 
uöt32_t
 
off
;

527 
√g
 = (
•
[
k
] < 0) ? 1 : 0;

529 
i
 = 4; ; i++)

531 
uöt8_t
 
b
;

532 i‡(
	`gë1bô_h¸
(
ld
, &
b
))

534 i‡(
b
 == 0)

538 i‡(
	`gëbôs_h¸
(
ld
, 
i
, &
off
))

540 
j
 = 
off
 + (1<<
i
);

541 
•
[
k
] = (
öt16_t
)((
√g
Ë? -
j
 : j);

545 i‡(
vcb11
 != 0)

549 
	`vcb11_check_LAV
(
vcb11
, 
•
);

552  
ld
->
Àn
;

553 
	}
}

	@huffman.h

28 #i‚de‡
__HUFFMAN_H__


29 
	#__HUFFMAN_H__


	)

31 #ifde‡
__˝lu•lus


35 
öt8_t
 
huffm™_sˇÀ_Á˘‹
(
bôfûe
 *
ld
);

36 
uöt8_t
 
huffm™_•e˘øl_d©a
(uöt8_à
cb
, 
bôfûe
 *
ld
, 
öt16_t
 *
•
);

37 #ifde‡
ERROR_RESILIENCE


38 
öt8_t
 
huffm™_•e˘øl_d©a_2
(
uöt8_t
 
cb
, 
bôs_t
 *
ld
, 
öt16_t
 *
•
);

41 #ifde‡
__˝lu•lus


	@ic_predict.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 #ifde‡
MAIN_DEC


33 
	~"sy¡ax.h
"

34 
	~"ic_¥edi˘.h
"

35 
	~"≤s.h
"

38 
	$Êt_round
(
Êﬂt32_t
 *
pf
)

40 
öt32_t
 
Êg
;

41 
uöt32_t
 
tmp
, 
tmp1
, 
tmp2
;

43 
tmp
 = *(
uöt32_t
*)
pf
;

44 
Êg
 = 
tmp
 & (
uöt32_t
)0x00008000;

45 
tmp
 &(
uöt32_t
)0xffff0000;

46 
tmp1
 = 
tmp
;

48 i‡(
Êg
)

50 
tmp
 &(
uöt32_t
)0xff800000;

51 
tmp
 |(
uöt32_t
)0x00010000;

52 
tmp2
 = 
tmp
;

53 
tmp
 &(
uöt32_t
)0xff800000;

55 *
pf
 = *(
Êﬂt32_t
*)&
tmp1
 + *(Êﬂt32_t*)&
tmp2
 - *(Êﬂt32_t*)&
tmp
;

57 *
pf
 = *(
Êﬂt32_t
*)&
tmp
;

59 
	}
}

61 
öt16_t
 
	$qu™t_¥ed
(
Êﬂt32_t
 
x
)

63 
öt16_t
 
q
;

64 
uöt32_t
 *
tmp
 = (uöt32_t*)&
x
;

66 
q
 = (
öt16_t
)(*
tmp
>>16);

68  
q
;

69 
	}
}

71 
Êﬂt32_t
 
	$öv_qu™t_¥ed
(
öt16_t
 
q
)

73 
Êﬂt32_t
 
x
;

74 
uöt32_t
 *
tmp
 = (uöt32_t*)&
x
;

75 *
tmp
 = ((
uöt32_t
)
q
)<<16;

77  
x
;

78 
	}
}

80 
	$ic_¥edi˘
(
¥ed_°©e
 *
°©e
, 
ªÆ_t
 
öput
,Ñól_à*
ouçut
, 
uöt8_t
 
¥ed
)

82 
uöt16_t
 
tmp
;

83 
öt16_t
 
i
, 
j
;

84 
ªÆ_t
 
dr1
, 
¥edi˘edvÆue
;

85 
ªÆ_t
 
e0
, 
e1
;

86 
ªÆ_t
 
k1
, 
k2
;

88 
ªÆ_t
 
r
[2];

89 
ªÆ_t
 
COR
[2];

90 
ªÆ_t
 
VAR
[2];

92 
r
[0] = 
	`öv_qu™t_¥ed
(
°©e
->r[0]);

93 
r
[1] = 
	`öv_qu™t_¥ed
(
°©e
->r[1]);

94 
COR
[0] = 
	`öv_qu™t_¥ed
(
°©e
->COR[0]);

95 
COR
[1] = 
	`öv_qu™t_¥ed
(
°©e
->COR[1]);

96 
VAR
[0] = 
	`öv_qu™t_¥ed
(
°©e
->VAR[0]);

97 
VAR
[1] = 
	`öv_qu™t_¥ed
(
°©e
->VAR[1]);

101 
tmp
 = 
°©e
->
VAR
[0];

102 
j
 = (
tmp
 >> 7);

103 
i
 = 
tmp
 & 0x7f;

104 i‡(
j
 >= 128)

106 
j
 -= 128;

107 
k1
 = 
COR
[0] * 
exp_èbÀ
[
j
] * 
m¡_èbÀ
[
i
];

109 
k1
 = 
	`REAL_CONST
(0);

114 
	#B
 0.953125

	)

115 
ªÆ_t
 
c
 = 
COR
[0];

116 
ªÆ_t
 
v
 = 
VAR
[0];

117 
ªÆ_t
 
tmp
;

118 i‡(
c
 =0 || 
v
 <= 1)

120 
k1
 = 0;

122 
tmp
 = 
B
 / 
v
;

123 
	`Êt_round
(&
tmp
);

124 
k1
 = 
c
 * 
tmp
;

129 i‡(
¥ed
)

132 
tmp
 = 
°©e
->
VAR
[1];

133 
j
 = (
tmp
 >> 7);

134 
i
 = 
tmp
 & 0x7f;

135 i‡(
j
 >= 128)

137 
j
 -= 128;

138 
k2
 = 
COR
[1] * 
exp_èbÀ
[
j
] * 
m¡_èbÀ
[
i
];

140 
k2
 = 
	`REAL_CONST
(0);

144 
	#B
 0.953125

	)

145 
ªÆ_t
 
c
 = 
COR
[1];

146 
ªÆ_t
 
v
 = 
VAR
[1];

147 
ªÆ_t
 
tmp
;

148 i‡(
c
 =0 || 
v
 <= 1)

150 
k2
 = 0;

152 
tmp
 = 
B
 / 
v
;

153 
	`Êt_round
(&
tmp
);

154 
k2
 = 
c
 * 
tmp
;

158 
¥edi˘edvÆue
 = 
k1
*
r
[0] + 
k2
*r[1];

159 
	`Êt_round
(&
¥edi˘edvÆue
);

160 *
ouçut
 = 
öput
 + 
¥edi˘edvÆue
;

164 
e0
 = *
ouçut
;

165 
e1
 = 
e0
 - 
k1
*
r
[0];

166 
dr1
 = 
k1
*
e0
;

168 
VAR
[0] = 
ALPHA
*VAR[0] + 0.5‡* (
r
[0]*r[0] + 
e0
*e0);

169 
COR
[0] = 
ALPHA
*COR[0] + 
r
[0]*
e0
;

170 
VAR
[1] = 
ALPHA
*VAR[1] + 0.5‡* (
r
[1]*r[1] + 
e1
*e1);

171 
COR
[1] = 
ALPHA
*COR[1] + 
r
[1]*
e1
;

173 
r
[1] = 
A
 * (r[0]-
dr1
);

174 
r
[0] = 
A
 * 
e0
;

176 
°©e
->
r
[0] = 
	`qu™t_¥ed
(r[0]);

177 
°©e
->
r
[1] = 
	`qu™t_¥ed
(r[1]);

178 
°©e
->
COR
[0] = 
	`qu™t_¥ed
(COR[0]);

179 
°©e
->
COR
[1] = 
	`qu™t_¥ed
(COR[1]);

180 
°©e
->
VAR
[0] = 
	`qu™t_¥ed
(VAR[0]);

181 
°©e
->
VAR
[1] = 
	`qu™t_¥ed
(VAR[1]);

182 
	}
}

184 
	$ª£t_¥ed_°©e
(
¥ed_°©e
 *
°©e
)

186 
°©e
->
r
[0] = 0;

187 
°©e
->
r
[1] = 0;

188 
°©e
->
COR
[0] = 0;

189 
°©e
->
COR
[1] = 0;

190 
°©e
->
VAR
[0] = 0x3F80;

191 
°©e
->
VAR
[1] = 0x3F80;

192 
	}
}

194 
	$≤s_ª£t_¥ed_°©e
(
ic_°ªam
 *
ics
, 
¥ed_°©e
 *
°©e
)

196 
uöt8_t
 
sfb
, 
g
, 
b
;

197 
uöt16_t
 
i
, 
offs
, 
offs2
;

200 i‡(
ics
->
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
)

203 
g
 = 0; g < 
ics
->
num_wödow_groups
; g++)

205 
b
 = 0; b < 
ics
->
wödow_group_Àngth
[
g
]; b++)

207 
sfb
 = 0; sfb < 
ics
->
max_sfb
; sfb++)

209 i‡(
	`is_noi£
(
ics
, 
g
, 
sfb
))

211 
offs
 = 
ics
->
swb_off£t
[
sfb
];

212 
offs2
 = 
ics
->
swb_off£t
[
sfb
+1];

214 
i
 = 
offs
; i < 
offs2
; i++)

215 
	`ª£t_¥ed_°©e
(&
°©e
[
i
]);

220 
	}
}

222 
	$ª£t_Æl_¥edi˘‹s
(
¥ed_°©e
 *
°©e
, 
uöt16_t
 
‰ame_Àn
)

224 
uöt16_t
 
i
;

226 
i
 = 0; i < 
‰ame_Àn
; i++)

227 
	`ª£t_¥ed_°©e
(&
°©e
[
i
]);

228 
	}
}

231 
	$ic_¥edi˘i⁄
(
ic_°ªam
 *
ics
, 
ªÆ_t
 *
•ec
, 
¥ed_°©e
 *
°©e
,

232 
uöt16_t
 
‰ame_Àn
, 
uöt8_t
 
sf_ödex
)

234 
uöt8_t
 
sfb
;

235 
uöt16_t
 
bö
;

237 i‡(
ics
->
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
)

239 
	`ª£t_Æl_¥edi˘‹s
(
°©e
, 
‰ame_Àn
);

241 
sfb
 = 0; sfb < 
	`max_¥ed_sfb
(
sf_ödex
); sfb++)

243 
uöt16_t
 
low
 = 
ics
->
swb_off£t
[
sfb
];

244 
uöt16_t
 
high
 = 
ics
->
swb_off£t
[
sfb
+1];

246 
bö
 = 
low
; bö < 
high
; bin++)

248 
	`ic_¥edi˘
(&
°©e
[
bö
], 
•ec
[bin], &spec[bin],

249 (
ics
->
¥edi˘‹_d©a_¥e£¡
 && ics->
¥ed
.
¥edi˘i⁄_u£d
[
sfb
]));

253 i‡(
ics
->
¥edi˘‹_d©a_¥e£¡
)

255 i‡(
ics
->
¥ed
.
¥edi˘‹_ª£t
)

257 
bö
 = 
ics
->
¥ed
.
¥edi˘‹_ª£t_group_numbî
 - 1;

258 
bö
 < 
‰ame_Àn
; bin += 30)

260 
	`ª£t_¥ed_°©e
(&
°©e
[
bö
]);

265 
	}
}

	@ic_predict.h

28 #ifde‡
MAIN_DEC


30 #i‚de‡
__IC_PREDICT_H__


31 
	#__IC_PREDICT_H__


	)

33 #ifde‡
__˝lu•lus


37 
	#ALPHA
 
	`REAL_CONST
(0.90625)

	)

38 
	#A
 
	`REAL_CONST
(0.953125)

	)

41 
≤s_ª£t_¥ed_°©e
(
ic_°ªam
 *
ics
, 
¥ed_°©e
 *
°©e
);

42 
ª£t_Æl_¥edi˘‹s
(
¥ed_°©e
 *
°©e
, 
uöt16_t
 
‰ame_Àn
);

43 
ic_¥edi˘i⁄
(
ic_°ªam
 *
ics
, 
ªÆ_t
 *
•ec
, 
¥ed_°©e
 *
°©e
,

44 
uöt16_t
 
‰ame_Àn
, 
uöt8_t
 
sf_ödex
);

46 
ALIGN
 c⁄° 
ªÆ_t
 
m¡_èbÀ
[128] = {

47 
COEF_CONST
(0.9531250000), COEF_CONST(0.9453125000),

48 
COEF_CONST
(0.9375000000), COEF_CONST(0.9296875000),

49 
COEF_CONST
(0.9257812500), COEF_CONST(0.9179687500),

50 
COEF_CONST
(0.9101562500), COEF_CONST(0.9023437500),

51 
COEF_CONST
(0.8984375000), COEF_CONST(0.8906250000),

52 
COEF_CONST
(0.8828125000), COEF_CONST(0.8789062500),

53 
COEF_CONST
(0.8710937500), COEF_CONST(0.8671875000),

54 
COEF_CONST
(0.8593750000), COEF_CONST(0.8515625000),

55 
COEF_CONST
(0.8476562500), COEF_CONST(0.8398437500),

56 
COEF_CONST
(0.8359375000), COEF_CONST(0.8281250000),

57 
COEF_CONST
(0.8242187500), COEF_CONST(0.8203125000),

58 
COEF_CONST
(0.8125000000), COEF_CONST(0.8085937500),

59 
COEF_CONST
(0.8007812500), COEF_CONST(0.7968750000),

60 
COEF_CONST
(0.7929687500), COEF_CONST(0.7851562500),

61 
COEF_CONST
(0.7812500000), COEF_CONST(0.7773437500),

62 
COEF_CONST
(0.7734375000), COEF_CONST(0.7656250000),

63 
COEF_CONST
(0.7617187500), COEF_CONST(0.7578125000),

64 
COEF_CONST
(0.7539062500), COEF_CONST(0.7500000000),

65 
COEF_CONST
(0.7421875000), COEF_CONST(0.7382812500),

66 
COEF_CONST
(0.7343750000), COEF_CONST(0.7304687500),

67 
COEF_CONST
(0.7265625000), COEF_CONST(0.7226562500),

68 
COEF_CONST
(0.7187500000), COEF_CONST(0.7148437500),

69 
COEF_CONST
(0.7109375000), COEF_CONST(0.7070312500),

70 
COEF_CONST
(0.6992187500), COEF_CONST(0.6953125000),

71 
COEF_CONST
(0.6914062500), COEF_CONST(0.6875000000),

72 
COEF_CONST
(0.6835937500), COEF_CONST(0.6796875000),

73 
COEF_CONST
(0.6796875000), COEF_CONST(0.6757812500),

74 
COEF_CONST
(0.6718750000), COEF_CONST(0.6679687500),

75 
COEF_CONST
(0.6640625000), COEF_CONST(0.6601562500),

76 
COEF_CONST
(0.6562500000), COEF_CONST(0.6523437500),

77 
COEF_CONST
(0.6484375000), COEF_CONST(0.6445312500),

78 
COEF_CONST
(0.6406250000), COEF_CONST(0.6406250000),

79 
COEF_CONST
(0.6367187500), COEF_CONST(0.6328125000),

80 
COEF_CONST
(0.6289062500), COEF_CONST(0.6250000000),

81 
COEF_CONST
(0.6210937500), COEF_CONST(0.6210937500),

82 
COEF_CONST
(0.6171875000), COEF_CONST(0.6132812500),

83 
COEF_CONST
(0.6093750000), COEF_CONST(0.6054687500),

84 
COEF_CONST
(0.6054687500), COEF_CONST(0.6015625000),

85 
COEF_CONST
(0.5976562500), COEF_CONST(0.5937500000),

86 
COEF_CONST
(0.5937500000), COEF_CONST(0.5898437500),

87 
COEF_CONST
(0.5859375000), COEF_CONST(0.5820312500),

88 
COEF_CONST
(0.5820312500), COEF_CONST(0.5781250000),

89 
COEF_CONST
(0.5742187500), COEF_CONST(0.5742187500),

90 
COEF_CONST
(0.5703125000), COEF_CONST(0.5664062500),

91 
COEF_CONST
(0.5664062500), COEF_CONST(0.5625000000),

92 
COEF_CONST
(0.5585937500), COEF_CONST(0.5585937500),

93 
COEF_CONST
(0.5546875000), COEF_CONST(0.5507812500),

94 
COEF_CONST
(0.5507812500), COEF_CONST(0.5468750000),

95 
COEF_CONST
(0.5429687500), COEF_CONST(0.5429687500),

96 
COEF_CONST
(0.5390625000), COEF_CONST(0.5390625000),

97 
COEF_CONST
(0.5351562500), COEF_CONST(0.5312500000),

98 
COEF_CONST
(0.5312500000), COEF_CONST(0.5273437500),

99 
COEF_CONST
(0.5273437500), COEF_CONST(0.5234375000),

100 
COEF_CONST
(0.5195312500), COEF_CONST(0.5195312500),

101 
COEF_CONST
(0.5156250000), COEF_CONST(0.5156250000),

102 
COEF_CONST
(0.5117187500), COEF_CONST(0.5117187500),

103 
COEF_CONST
(0.5078125000), COEF_CONST(0.5078125000),

104 
COEF_CONST
(0.5039062500), COEF_CONST(0.5039062500),

105 
COEF_CONST
(0.5000000000), COEF_CONST(0.4980468750),

106 
COEF_CONST
(0.4960937500), COEF_CONST(0.4941406250),

107 
COEF_CONST
(0.4921875000), COEF_CONST(0.4902343750),

108 
COEF_CONST
(0.4882812500), COEF_CONST(0.4863281250),

109 
COEF_CONST
(0.4843750000), COEF_CONST(0.4824218750),

110 
COEF_CONST
(0.4804687500), COEF_CONST(0.4785156250)

113 
ALIGN
 c⁄° 
ªÆ_t
 
exp_èbÀ
[128] = {

114 
COEF_CONST
(0.50000000000000000000000000000000000000000000000000),

115 
COEF_CONST
(0.25000000000000000000000000000000000000000000000000),

116 
COEF_CONST
(0.12500000000000000000000000000000000000000000000000),

117 
COEF_CONST
(0.06250000000000000000000000000000000000000000000000),

118 
COEF_CONST
(0.03125000000000000000000000000000000000000000000000),

119 
COEF_CONST
(0.01562500000000000000000000000000000000000000000000),

120 
COEF_CONST
(0.00781250000000000000000000000000000000000000000000),

121 
COEF_CONST
(0.00390625000000000000000000000000000000000000000000),

122 
COEF_CONST
(0.00195312500000000000000000000000000000000000000000),

123 
COEF_CONST
(0.00097656250000000000000000000000000000000000000000),

124 
COEF_CONST
(0.00048828125000000000000000000000000000000000000000),

125 
COEF_CONST
(0.00024414062500000000000000000000000000000000000000),

126 
COEF_CONST
(0.00012207031250000000000000000000000000000000000000),

127 
COEF_CONST
(0.00006103515625000000000000000000000000000000000000),

128 
COEF_CONST
(0.00003051757812500000000000000000000000000000000000),

129 
COEF_CONST
(0.00001525878906250000000000000000000000000000000000),

130 
COEF_CONST
(0.00000762939453125000000000000000000000000000000000),

131 
COEF_CONST
(0.00000381469726562500000000000000000000000000000000),

132 
COEF_CONST
(0.00000190734863281250000000000000000000000000000000),

133 
COEF_CONST
(0.00000095367431640625000000000000000000000000000000),

134 
COEF_CONST
(0.00000047683715820312500000000000000000000000000000),

135 
COEF_CONST
(0.00000023841857910156250000000000000000000000000000),

136 
COEF_CONST
(0.00000011920928955078125000000000000000000000000000),

137 
COEF_CONST
(0.00000005960464477539062500000000000000000000000000),

138 
COEF_CONST
(0.00000002980232238769531300000000000000000000000000),

139 
COEF_CONST
(0.00000001490116119384765600000000000000000000000000),

140 
COEF_CONST
(0.00000000745058059692382810000000000000000000000000),

141 
COEF_CONST
(0.00000000372529029846191410000000000000000000000000),

142 
COEF_CONST
(0.00000000186264514923095700000000000000000000000000),

143 
COEF_CONST
(0.00000000093132257461547852000000000000000000000000),

144 
COEF_CONST
(0.00000000046566128730773926000000000000000000000000),

145 
COEF_CONST
(0.00000000023283064365386963000000000000000000000000),

146 
COEF_CONST
(0.00000000011641532182693481000000000000000000000000),

147 
COEF_CONST
(0.00000000005820766091346740700000000000000000000000),

148 
COEF_CONST
(0.00000000002910383045673370400000000000000000000000),

149 
COEF_CONST
(0.00000000001455191522836685200000000000000000000000),

150 
COEF_CONST
(0.00000000000727595761418342590000000000000000000000),

151 
COEF_CONST
(0.00000000000363797880709171300000000000000000000000),

152 
COEF_CONST
(0.00000000000181898940354585650000000000000000000000),

153 
COEF_CONST
(0.00000000000090949470177292824000000000000000000000),

154 
COEF_CONST
(0.00000000000045474735088646412000000000000000000000),

155 
COEF_CONST
(0.00000000000022737367544323206000000000000000000000),

156 
COEF_CONST
(0.00000000000011368683772161603000000000000000000000),

157 
COEF_CONST
(0.00000000000005684341886080801500000000000000000000),

158 
COEF_CONST
(0.00000000000002842170943040400700000000000000000000),

159 
COEF_CONST
(0.00000000000001421085471520200400000000000000000000),

160 
COEF_CONST
(0.00000000000000710542735760100190000000000000000000),

161 
COEF_CONST
(0.00000000000000355271367880050090000000000000000000),

162 
COEF_CONST
(0.00000000000000177635683940025050000000000000000000),

163 
COEF_CONST
(0.00000000000000088817841970012523000000000000000000),

164 
COEF_CONST
(0.00000000000000044408920985006262000000000000000000),

165 
COEF_CONST
(0.00000000000000022204460492503131000000000000000000),

166 
COEF_CONST
(0.00000000000000011102230246251565000000000000000000),

167 
COEF_CONST
(0.00000000000000005551115123125782700000000000000000),

168 
COEF_CONST
(0.00000000000000002775557561562891400000000000000000),

169 
COEF_CONST
(0.00000000000000001387778780781445700000000000000000),

170 
COEF_CONST
(0.00000000000000000693889390390722840000000000000000),

171 
COEF_CONST
(0.00000000000000000346944695195361420000000000000000),

172 
COEF_CONST
(0.00000000000000000173472347597680710000000000000000),

173 
COEF_CONST
(0.00000000000000000086736173798840355000000000000000),

174 
COEF_CONST
(0.00000000000000000043368086899420177000000000000000),

175 
COEF_CONST
(0.00000000000000000021684043449710089000000000000000),

176 
COEF_CONST
(0.00000000000000000010842021724855044000000000000000),

177 
COEF_CONST
(0.00000000000000000005421010862427522200000000000000),

178 
COEF_CONST
(0.00000000000000000002710505431213761100000000000000),

179 
COEF_CONST
(0.00000000000000000001355252715606880500000000000000),

180 
COEF_CONST
(0.00000000000000000000677626357803440270000000000000),

181 
COEF_CONST
(0.00000000000000000000338813178901720140000000000000),

182 
COEF_CONST
(0.00000000000000000000169406589450860070000000000000),

183 
COEF_CONST
(0.00000000000000000000084703294725430034000000000000),

184 
COEF_CONST
(0.00000000000000000000042351647362715017000000000000),

185 
COEF_CONST
(0.00000000000000000000021175823681357508000000000000),

186 
COEF_CONST
(0.00000000000000000000010587911840678754000000000000),

187 
COEF_CONST
(0.00000000000000000000005293955920339377100000000000),

188 
COEF_CONST
(0.00000000000000000000002646977960169688600000000000),

189 
COEF_CONST
(0.00000000000000000000001323488980084844300000000000),

190 
COEF_CONST
(0.00000000000000000000000661744490042422140000000000),

191 
COEF_CONST
(0.00000000000000000000000330872245021211070000000000),

192 
COEF_CONST
(0.00000000000000000000000165436122510605530000000000),

193 
COEF_CONST
(0.00000000000000000000000082718061255302767000000000),

194 
COEF_CONST
(0.00000000000000000000000041359030627651384000000000),

195 
COEF_CONST
(0.00000000000000000000000020679515313825692000000000),

196 
COEF_CONST
(0.00000000000000000000000010339757656912846000000000),

197 
COEF_CONST
(0.00000000000000000000000005169878828456423000000000),

198 
COEF_CONST
(0.00000000000000000000000002584939414228211500000000),

199 
COEF_CONST
(0.00000000000000000000000001292469707114105700000000),

200 
COEF_CONST
(0.00000000000000000000000000646234853557052870000000),

201 
COEF_CONST
(0.00000000000000000000000000323117426778526440000000),

202 
COEF_CONST
(0.00000000000000000000000000161558713389263220000000),

203 
COEF_CONST
(0.00000000000000000000000000080779356694631609000000),

204 
COEF_CONST
(0.00000000000000000000000000040389678347315804000000),

205 
COEF_CONST
(0.00000000000000000000000000020194839173657902000000),

206 
COEF_CONST
(0.00000000000000000000000000010097419586828951000000),

207 
COEF_CONST
(0.00000000000000000000000000005048709793414475600000),

208 
COEF_CONST
(0.00000000000000000000000000002524354896707237800000),

209 
COEF_CONST
(0.00000000000000000000000000001262177448353618900000),

210 
COEF_CONST
(0.00000000000000000000000000000631088724176809440000),

211 
COEF_CONST
(0.00000000000000000000000000000315544362088404720000),

212 
COEF_CONST
(0.00000000000000000000000000000157772181044202360000),

213 
COEF_CONST
(0.00000000000000000000000000000078886090522101181000),

214 
COEF_CONST
(0.00000000000000000000000000000039443045261050590000),

215 
COEF_CONST
(0.00000000000000000000000000000019721522630525295000),

216 
COEF_CONST
(0.00000000000000000000000000000009860761315262647600),

217 
COEF_CONST
(0.00000000000000000000000000000004930380657631323800),

218 
COEF_CONST
(0.00000000000000000000000000000002465190328815661900),

219 
COEF_CONST
(0.00000000000000000000000000000001232595164407830900),

220 
COEF_CONST
(0.00000000000000000000000000000000616297582203915470),

221 
COEF_CONST
(0.00000000000000000000000000000000308148791101957740),

222 
COEF_CONST
(0.00000000000000000000000000000000154074395550978870),

223 
COEF_CONST
(0.00000000000000000000000000000000077037197775489434),

224 
COEF_CONST
(0.00000000000000000000000000000000038518598887744717),

225 
COEF_CONST
(0.00000000000000000000000000000000019259299443872359),

226 
COEF_CONST
(0.00000000000000000000000000000000009629649721936179),

227 
COEF_CONST
(0.00000000000000000000000000000000004814824860968090),

228 
COEF_CONST
(0.00000000000000000000000000000000002407412430484045),

229 
COEF_CONST
(0.00000000000000000000000000000000001203706215242022),

230 
COEF_CONST
(0.00000000000000000000000000000000000601853107621011),

231 
COEF_CONST
(0.00000000000000000000000000000000000300926553810506),

232 
COEF_CONST
(0.00000000000000000000000000000000000150463276905253),

233 
COEF_CONST
(0.00000000000000000000000000000000000075231638452626),

234 
COEF_CONST
(0.00000000000000000000000000000000000037615819226313),

235 
COEF_CONST
(0.00000000000000000000000000000000000018807909613157),

236 
COEF_CONST
(0.00000000000000000000000000000000000009403954806578),

237 
COEF_CONST
(0.00000000000000000000000000000000000004701977403289),

238 
COEF_CONST
(0.00000000000000000000000000000000000002350988701645),

239 
COEF_CONST
(0.00000000000000000000000000000000000001175494350822),

240 
COEF_CONST
(0.0 ),

241 
COEF_CONST
(0.0)

244 #ifde‡
__˝lu•lus


	@iq_table.h

28 #i‚de‡
IQ_TABLE_H__


29 
	#IQ_TABLE_H__


	)

31 #ifde‡
__˝lu•lus


39 #i‚de‡
FIXED_POINT


41 
	#IQ_TABLE_SIZE
 8192

	)

43 #ifde‡
_MSC_VER


44 #¥agm®
w¨nög
(
dißbÀ
:4305)

45 #¥agm®
w¨nög
(
dißbÀ
:4244)

48 
ALIGN
 c⁄° 
ªÆ_t
 
iq_èbÀ
[
IQ_TABLE_SIZE
] =

8246 #ifde‡
BIG_IQ_TABLE


8247 
	#IQ_TABLE_SIZE
 8192

	)

8249 
	#IQ_TABLE_SIZE
 1026

	)

8252 
ALIGN
 c⁄° 
ªÆ_t
 
	giq_èbÀ
[
IQ_TABLE_SIZE
] =

8254 
REAL_CONST
(0.0),

8255 
REAL_CONST
(1.0/8.0),

8256 
REAL_CONST
(2.5198420997897464/8.0),

8257 
REAL_CONST
(4.3267487109222245/8.0),

8258 
REAL_CONST
(6.3496042078727974/8.0),

8259 
REAL_CONST
(8.5498797333834844/8.0),

8260 
REAL_CONST
(10.902723556992836/8.0),

8261 
REAL_CONST
(13.390518279406722/8.0),

8262 
REAL_CONST
(15.999999999999998/8.0),

8263 
REAL_CONST
(18.720754407467133/8.0),

8264 
REAL_CONST
(21.544346900318832/8.0),

8265 
REAL_CONST
(24.463780996262464/8.0),

8266 
REAL_CONST
(27.47314182127996/8.0),

8267 
REAL_CONST
(30.567350940369842/8.0),

8268 
REAL_CONST
(33.741991698453212/8.0),

8269 
REAL_CONST
(36.993181114957046/8.0),

8270 
REAL_CONST
(40.317473596635935/8.0),

8271 
REAL_CONST
(43.711787041189993/8.0),

8272 
REAL_CONST
(47.173345095760126/8.0),

8273 
REAL_CONST
(50.699631325716943/8.0),

8274 
REAL_CONST
(54.288352331898118/8.0),

8275 
REAL_CONST
(57.937407704003519/8.0),

8276 
REAL_CONST
(61.6448652744185/8.0),

8277 
REAL_CONST
(65.408940536585988/8.0),

8278 
REAL_CONST
(69.227979374755591/8.0),

8279 
REAL_CONST
(73.100443455321638/8.0),

8280 
REAL_CONST
(77.024897778591622/8.0),

8281 
REAL_CONST
(80.999999999999986/8.0),

8282 
REAL_CONST
(85.024491212518527/8.0),

8283 
REAL_CONST
(89.097187944889555/8.0),

8284 
REAL_CONST
(93.216975178615741/8.0),

8285 
REAL_CONST
(97.382800224133163/8.0),

8286 
REAL_CONST
(101.59366732596474/8.0),

8287 
REAL_CONST
(105.84863288986224/8.0),

8288 
REAL_CONST
(110.14680124343441/8.0),

8289 
REAL_CONST
(114.4873208566006/8.0),

8290 
REAL_CONST
(118.86938096020653/8.0),

8291 
REAL_CONST
(123.29220851090024/8.0),

8292 
REAL_CONST
(127.75506545836058/8.0),

8293 
REAL_CONST
(132.25724627755247/8.0),

8294 
REAL_CONST
(136.79807573413572/8.0),

8295 
REAL_CONST
(141.37690685569191/8.0),

8296 
REAL_CONST
(145.99311908523086/8.0),

8297 
REAL_CONST
(150.6461165966291/8.0),

8298 
REAL_CONST
(155.33532675434674/8.0),

8299 
REAL_CONST
(160.06019870205279/8.0),

8300 
REAL_CONST
(164.82020206673349/8.0),

8301 
REAL_CONST
(169.61482576651861/8.0),

8302 
REAL_CONST
(174.44357691188537/8.0),

8303 
REAL_CONST
(179.30597979112557/8.0),

8304 
REAL_CONST
(184.20157493201927/8.0),

8305 
REAL_CONST
(189.12991823257562/8.0),

8306 
REAL_CONST
(194.09058015449685/8.0),

8307 
REAL_CONST
(199.08314497371677/8.0),

8308 
REAL_CONST
(204.1072100829694/8.0),

8309 
REAL_CONST
(209.16238534187647/8.0),

8310 
REAL_CONST
(214.24829247050752/8.0),

8311 
REAL_CONST
(219.36456448277784/8.0),

8312 
REAL_CONST
(224.51084515641216/8.0),

8313 
REAL_CONST
(229.6867885365223/8.0),

8314 
REAL_CONST
(234.89205847013176/8.0),

8315 
REAL_CONST
(240.12632816923249/8.0),

8316 
REAL_CONST
(245.38927980018505/8.0),

8317 
REAL_CONST
(250.68060409747261/8.0),

8318 
REAL_CONST
(255.99999999999991/8.0),

8319 
REAL_CONST
(261.34717430828869/8.0),

8320 
REAL_CONST
(266.72184136106449/8.0),

8321 
REAL_CONST
(272.12372272986045/8.0),

8322 
REAL_CONST
(277.55254693037961/8.0),

8323 
REAL_CONST
(283.0080491494619/8.0),

8324 
REAL_CONST
(288.48997098659891/8.0),

8325 
REAL_CONST
(293.99806020902247/8.0),

8326 
REAL_CONST
(299.53207051947408/8.0),

8327 
REAL_CONST
(305.0917613358298/8.0),

8328 
REAL_CONST
(310.67689758182206/8.0),

8329 
REAL_CONST
(316.28724948815585/8.0),

8330 
REAL_CONST
(321.92259240337177/8.0),

8331 
REAL_CONST
(327.58270661385535/8.0),

8332 
REAL_CONST
(333.26737717243742/8.0),

8333 
REAL_CONST
(338.97639373507025/8.0),

8334 
REAL_CONST
(344.70955040510125/8.0),

8335 
REAL_CONST
(350.46664558470013/8.0),

8336 
REAL_CONST
(356.24748183302603/8.0),

8337 
REAL_CONST
(362.05186573075139/8.0),

8338 
REAL_CONST
(367.87960775058258/8.0),

8339 
REAL_CONST
(373.73052213344511/8.0),

8340 
REAL_CONST
(379.60442677002078/8.0),

8341 
REAL_CONST
(385.50114308734607/8.0),

8342 
REAL_CONST
(391.42049594019937/8.0),

8343 
REAL_CONST
(397.36231350702371/8.0),

8344 
REAL_CONST
(403.32642719014467/8.0),

8345 
REAL_CONST
(409.31267152006262/8.0),

8346 
REAL_CONST
(415.32088406360799/8.0),

8347 
REAL_CONST
(421.35090533576471/8.0),

8348 
REAL_CONST
(427.40257871497619/8.0),

8349 
REAL_CONST
(433.4757503617617/8.0),

8350 
REAL_CONST
(439.5702691404793/8.0),

8351 
REAL_CONST
(445.68598654408271/8.0),

8352 
REAL_CONST
(451.82275662172759/8.0),

8353 
REAL_CONST
(457.98043590909128/8.0),

8354 
REAL_CONST
(464.15888336127773/8.0),

8355 
REAL_CONST
(470.35796028818726/8.0),

8356 
REAL_CONST
(476.5775302922363/8.0),

8357 
REAL_CONST
(482.81745920832043/8.0),

8358 
REAL_CONST
(489.07761504591741/8.0),

8359 
REAL_CONST
(495.35786793323581/8.0),

8360 
REAL_CONST
(501.65809006331688/8.0),

8361 
REAL_CONST
(507.97815564200368/8.0),

8362 
REAL_CONST
(514.31794083769648/8.0),

8363 
REAL_CONST
(520.67732373281672/8.0),

8364 
REAL_CONST
(527.05618427690604/8.0),

8365 
REAL_CONST
(533.45440424129174/8.0),

8366 
REAL_CONST
(539.87186717525128/8.0),

8367 
REAL_CONST
(546.30845836361505/8.0),

8368 
REAL_CONST
(552.76406478574609/8.0),

8369 
REAL_CONST
(559.23857507584194/8.0),

8370 
REAL_CONST
(565.73187948450413/8.0),

8371 
REAL_CONST
(572.24386984152341/8.0),

8372 
REAL_CONST
(578.77443951983378/8.0),

8373 
REAL_CONST
(585.32348340058843/8.0),

8374 
REAL_CONST
(591.89089783931263/8.0),

8375 
REAL_CONST
(598.47658063309257/8.0),

8376 
REAL_CONST
(605.08043098876044/8.0),

8377 
REAL_CONST
(611.70234949203643/8.0),

8378 
REAL_CONST
(618.3422380775919/8.0),

8379 
REAL_CONST
(624.99999999999977/8.0),

8380 
REAL_CONST
(631.67553980553748/8.0),

8381 
REAL_CONST
(638.36876330481164/8.0),

8382 
REAL_CONST
(645.07957754617485/8.0),

8383 
REAL_CONST
(651.80789078990415/8.0),

8384 
REAL_CONST
(658.55361248311499/8.0),

8385 
REAL_CONST
(665.31665323538357/8.0),

8386 
REAL_CONST
(672.09692479505225/8.0),

8387 
REAL_CONST
(678.8943400261943/8.0),

8388 
REAL_CONST
(685.70881288621433/8.0),

8389 
REAL_CONST
(692.540258404062/8.0),

8390 
REAL_CONST
(699.38859265903977/8.0),

8391 
REAL_CONST
(706.25373276018058/8.0),

8392 
REAL_CONST
(713.13559682617972/8.0),

8393 
REAL_CONST
(720.03410396586037/8.0),

8394 
REAL_CONST
(726.94917425915435/8.0),

8395 
REAL_CONST
(733.88072873858209/8.0),

8396 
REAL_CONST
(740.82868937121543/8.0),

8397 
REAL_CONST
(747.79297904110535/8.0),

8398 
REAL_CONST
(754.77352153216191/8.0),

8399 
REAL_CONST
(761.77024151147043/8.0),

8400 
REAL_CONST
(768.78306451302956/8.0),

8401 
REAL_CONST
(775.81191692189896/8.0),

8402 
REAL_CONST
(782.85672595874246/8.0),

8403 
REAL_CONST
(789.91741966475445/8.0),

8404 
REAL_CONST
(796.99392688695798/8.0),

8405 
REAL_CONST
(804.08617726386274/8.0),

8406 
REAL_CONST
(811.19410121147098/8.0),

8407 
REAL_CONST
(818.31762990962227/8.0),

8408 
REAL_CONST
(825.45669528866563/8.0),

8409 
REAL_CONST
(832.61123001644864/8.0),

8410 
REAL_CONST
(839.78116748561604/8.0),

8411 
REAL_CONST
(846.96644180120552/8.0),

8412 
REAL_CONST
(854.16698776853514/8.0),

8413 
REAL_CONST
(861.38274088137143/8.0),

8414 
REAL_CONST
(868.61363731036977/8.0),

8415 
REAL_CONST
(875.85961389178203/8.0),

8416 
REAL_CONST
(883.12060811641959/8.0),

8417 
REAL_CONST
(890.39655811886757/8.0),

8418 
REAL_CONST
(897.68740266694181/8.0),

8419 
REAL_CONST
(904.99308115138172/8.0),

8420 
REAL_CONST
(912.31353357577188/8.0),

8421 
REAL_CONST
(919.64870054668756/8.0),

8422 
REAL_CONST
(926.99852326405619/8.0),

8423 
REAL_CONST
(934.36294351172899/8.0),

8424 
REAL_CONST
(941.74190364825859/8.0),

8425 
REAL_CONST
(949.13534659787422/8.0),

8426 
REAL_CONST
(956.54321584165211/8.0),

8427 
REAL_CONST
(963.96545540887348/8.0),

8428 
REAL_CONST
(971.40200986856541/8.0),

8429 
REAL_CONST
(978.85282432122176/8.0),

8430 
REAL_CONST
(986.31784439069588/8.0),

8431 
REAL_CONST
(993.7970162162635/8.0),

8432 
REAL_CONST
(1001.29028644485/8.0),

8433 
REAL_CONST
(1008.797602223418/8.0),

8434 
REAL_CONST
(1016.3189111915103/8.0),

8435 
REAL_CONST
(1023.8541614739464/8.0),

8436 
REAL_CONST
(1031.4033016736653/8.0),

8437 
REAL_CONST
(1038.9662808647138/8.0),

8438 
REAL_CONST
(1046.5430485853758/8.0),

8439 
REAL_CONST
(1054.1335548314366/8.0),

8440 
REAL_CONST
(1061.7377500495838/8.0),

8441 
REAL_CONST
(1069.3555851309357/8.0),

8442 
REAL_CONST
(1076.9870114046978/8.0),

8443 
REAL_CONST
(1084.6319806319441/8.0),

8444 
REAL_CONST
(1092.2904449995174/8.0),

8445 
REAL_CONST
(1099.9623571140482/8.0),

8446 
REAL_CONST
(1107.6476699960892/8.0),

8447 
REAL_CONST
(1115.3463370743607/8.0),

8448 
REAL_CONST
(1123.058312180106/8.0),

8449 
REAL_CONST
(1130.7835495415541/8.0),

8450 
REAL_CONST
(1138.5220037784854/8.0),

8451 
REAL_CONST
(1146.273629896901/8.0),

8452 
REAL_CONST
(1154.0383832837879/8.0),

8453 
REAL_CONST
(1161.816219701986/8.0),

8454 
REAL_CONST
(1169.607095285146/8.0),

8455 
REAL_CONST
(1177.4109665327808/8.0),

8456 
REAL_CONST
(1185.2277903054078/8.0),

8457 
REAL_CONST
(1193.0575238197798/8.0),

8458 
REAL_CONST
(1200.9001246442001/8.0),

8459 
REAL_CONST
(1208.7555506939248/8.0),

8460 
REAL_CONST
(1216.6237602266442/8.0),

8461 
REAL_CONST
(1224.5047118380478/8.0),

8462 
REAL_CONST
(1232.3983644574657/8.0),

8463 
REAL_CONST
(1240.3046773435874/8.0),

8464 
REAL_CONST
(1248.2236100802568/8.0),

8465 
REAL_CONST
(1256.1551225723395/8.0),

8466 
REAL_CONST
(1264.099175041662/8.0),

8467 
REAL_CONST
(1272.0557280230228/8.0),

8468 
REAL_CONST
(1280.0247423602691/8.0),

8469 
REAL_CONST
(1288.0061792024444/8.0),

8470 
REAL_CONST
(1295.9999999999995/8.0),

8471 
REAL_CONST
(1304.006166501068/8.0),

8472 
REAL_CONST
(1312.0246407478062/8.0),

8473 
REAL_CONST
(1320.0553850727929/8.0),

8474 
REAL_CONST
(1328.0983620954903/8.0),

8475 
REAL_CONST
(1336.1535347187651/8.0),

8476 
REAL_CONST
(1344.2208661254647/8.0),

8477 
REAL_CONST
(1352.3003197750522/8.0),

8478 
REAL_CONST
(1360.3918594002962/8.0),

8479 
REAL_CONST
(1368.4954490040145/8.0),

8480 
REAL_CONST
(1376.6110528558709/8.0),

8481 
REAL_CONST
(1384.7386354892244/8.0),

8482 
REAL_CONST
(1392.8781616980295/8.0),

8483 
REAL_CONST
(1401.0295965337855/8.0),

8484 
REAL_CONST
(1409.1929053025353/8.0),

8485 
REAL_CONST
(1417.3680535619119/8.0),

8486 
REAL_CONST
(1425.5550071182327/8.0),

8487 
REAL_CONST
(1433.7537320236374/8.0),

8488 
REAL_CONST
(1441.9641945732744/8.0),

8489 
REAL_CONST
(1450.1863613025282/8.0),

8490 
REAL_CONST
(1458.4201989842913/8.0),

8491 
REAL_CONST
(1466.6656746262797/8.0),

8492 
REAL_CONST
(1474.9227554683875/8.0),

8493 
REAL_CONST
(1483.1914089800841/8.0),

8494 
REAL_CONST
(1491.4716028578516/8.0),

8495 
REAL_CONST
(1499.7633050226596/8.0),

8496 
REAL_CONST
(1508.0664836174794/8.0),

8497 
REAL_CONST
(1516.3811070048375/8.0),

8498 
REAL_CONST
(1524.7071437644029/8.0),

8499 
REAL_CONST
(1533.0445626906128/8.0),

8500 
REAL_CONST
(1541.3933327903342/8.0),

8501 
REAL_CONST
(1549.7534232805581/8.0),

8502 
REAL_CONST
(1558.1248035861302/8.0),

8503 
REAL_CONST
(1566.507443337515/8.0),

8504 
REAL_CONST
(1574.9013123685909/8.0),

8505 
REAL_CONST
(1583.3063807144795/8.0),

8506 
REAL_CONST
(1591.7226186094069/8.0),

8507 
REAL_CONST
(1600.1499964845941/8.0),

8508 
REAL_CONST
(1608.58848496618/8.0),

8509 
REAL_CONST
(1617.0380548731737/8.0),

8510 
REAL_CONST
(1625.4986772154357/8.0),

8511 
REAL_CONST
(1633.9703231916887/8.0),

8512 
REAL_CONST
(1642.4529641875577/8.0),

8513 
REAL_CONST
(1650.9465717736346/8.0),

8514 
REAL_CONST
(1659.4511177035752/8.0),

8515 
REAL_CONST
(1667.9665739122186/8.0),

8516 
REAL_CONST
(1676.4929125137353/8.0),

8517 
REAL_CONST
(1685.030105799801/8.0),

8518 
REAL_CONST
(1693.5781262377957/8.0),

8519 
REAL_CONST
(1702.136946469027/8.0),

8520 
REAL_CONST
(1710.7065393069795/8.0),

8521 
REAL_CONST
(1719.2868777355877/8.0),

8522 
REAL_CONST
(1727.8779349075323/8.0),

8523 
REAL_CONST
(1736.4796841425596/8.0),

8524 
REAL_CONST
(1745.092098925825/8.0),

8525 
REAL_CONST
(1753.7151529062583/8.0),

8526 
REAL_CONST
(1762.3488198949503/8.0),

8527 
REAL_CONST
(1770.9930738635628/8.0),

8528 
REAL_CONST
(1779.6478889427597/8.0),

8529 
REAL_CONST
(1788.3132394206564/8.0),

8530 
REAL_CONST
(1796.9890997412947/8.0),

8531 
REAL_CONST
(1805.6754445031333/8.0),

8532 
REAL_CONST
(1814.3722484575621/8.0),

8533 
REAL_CONST
(1823.0794865074322/8.0),

8534 
REAL_CONST
(1831.7971337056094/8.0),

8535 
REAL_CONST
(1840.5251652535437/8.0),

8536 
REAL_CONST
(1849.2635564998579/8.0),

8537 
REAL_CONST
(1858.0122829389563/8.0),

8538 
REAL_CONST
(1866.7713202096493/8.0),

8539 
REAL_CONST
(1875.5406440937966/8.0),

8540 
REAL_CONST
(1884.3202305149687/8.0),

8541 
REAL_CONST
(1893.110055537124/8.0),

8542 
REAL_CONST
(1901.9100953633042/8.0),

8543 
REAL_CONST
(1910.7203263343454/8.0),

8544 
REAL_CONST
(1919.5407249276057/8.0),

8545 
REAL_CONST
(1928.3712677557098/8.0),

8546 
REAL_CONST
(1937.2119315653083/8.0),

8547 
REAL_CONST
(1946.0626932358525/8.0),

8548 
REAL_CONST
(1954.923529778386/8.0),

8549 
REAL_CONST
(1963.79441833435/8.0),

8550 
REAL_CONST
(1972.6753361744036/8.0),

8551 
REAL_CONST
(1981.5662606972594/8.0),

8552 
REAL_CONST
(1990.467169428533/8.0),

8553 
REAL_CONST
(1999.3780400196069/8.0),

8554 
REAL_CONST
(2008.2988502465078/8.0),

8555 
REAL_CONST
(2017.2295780087982/8.0),

8556 
REAL_CONST
(2026.1702013284819/8.0),

8557 
REAL_CONST
(2035.1206983489212/8.0),

8558 
REAL_CONST
(2044.0810473337688/8.0),

8559 
REAL_CONST
(2053.0512266659125/8.0),

8560 
REAL_CONST
(2062.0312148464309/8.0),

8561 
REAL_CONST
(2071.0209904935646/8.0),

8562 
REAL_CONST
(2080.0205323416958/8.0),

8563 
REAL_CONST
(2089.0298192403443/8.0),

8564 
REAL_CONST
(2098.0488301531714/8.0),

8565 
REAL_CONST
(2107.0775441569995/8.0),

8566 
REAL_CONST
(2116.115940440839/8.0),

8567 
REAL_CONST
(2125.1639983049317/8.0),

8568 
REAL_CONST
(2134.2216971597995/8.0),

8569 
REAL_CONST
(2143.2890165253098/8.0),

8570 
REAL_CONST
(2152.3659360297484/8.0),

8571 
REAL_CONST
(2161.4524354089031/8.0),

8572 
REAL_CONST
(2170.5484945051617/8.0),

8573 
REAL_CONST
(2179.6540932666144/8.0),

8574 
REAL_CONST
(2188.7692117461711/8.0),

8575 
REAL_CONST
(2197.8938301006888/8.0),

8576 
REAL_CONST
(2207.0279285901042/8.0),

8577 
REAL_CONST
(2216.1714875765838/8.0),

8578 
REAL_CONST
(2225.324487523676/8.0),

8579 
REAL_CONST
(2234.4869089954782/8.0),

8580 
REAL_CONST
(2243.6587326558101/8.0),

8581 
REAL_CONST
(2252.8399392673982/8.0),

8582 
REAL_CONST
(2262.0305096910702/8.0),

8583 
REAL_CONST
(2271.2304248849537/8.0),

8584 
REAL_CONST
(2280.4396659036897/8.0),

8585 
REAL_CONST
(2289.6582138976523/8.0),

8586 
REAL_CONST
(2298.8860501121762/8.0),

8587 
REAL_CONST
(2308.1231558867926/8.0),

8588 
REAL_CONST
(2317.3695126544767/8.0),

8589 
REAL_CONST
(2326.6251019409005/8.0),

8590 
REAL_CONST
(2335.8899053636933/8.0),

8591 
REAL_CONST
(2345.1639046317132/8.0),

8592 
REAL_CONST
(2354.4470815443233/8.0),

8593 
REAL_CONST
(2363.7394179906792/8.0),

8594 
REAL_CONST
(2373.0408959490205/8.0),

8595 
REAL_CONST
(2382.3514974859731/8.0),

8596 
REAL_CONST
(2391.6712047558558/8.0),

8597 
REAL_CONST
(2400.9999999999991/8.0),

8598 
REAL_CONST
(2410.3378655460651/8.0),

8599 
REAL_CONST
(2419.6847838073813/8.0),

8600 
REAL_CONST
(2429.0407372822747/8.0),

8601 
REAL_CONST
(2438.4057085534191/8.0),

8602 
REAL_CONST
(2447.7796802871858/8.0),

8603 
REAL_CONST
(2457.1626352330004/8.0),

8604 
REAL_CONST
(2466.5545562227112/8.0),

8605 
REAL_CONST
(2475.9554261699564/8.0),

8606 
REAL_CONST
(2485.3652280695474/8.0),

8607 
REAL_CONST
(2494.7839449968492/8.0),

8608 
REAL_CONST
(2504.2115601071737/8.0),

8609 
REAL_CONST
(2513.6480566351788/8.0),

8610 
REAL_CONST
(2523.0934178942675/8.0),

8611 
REAL_CONST
(2532.5476272760025/8.0),

8612 
REAL_CONST
(2542.0106682495189/8.0),

8613 
REAL_CONST
(2551.482524360948/8.0),

8614 
REAL_CONST
(2560.9631792328441/8.0),

8615 
REAL_CONST
(2570.4526165636184/8.0),

8616 
REAL_CONST
(2579.9508201269791/8.0),

8617 
REAL_CONST
(2589.4577737713744/8.0),

8618 
REAL_CONST
(2598.9734614194458/8.0),

8619 
REAL_CONST
(2608.4978670674823/8.0),

8620 
REAL_CONST
(2618.0309747848837/8.0),

8621 
REAL_CONST
(2627.5727687136259/8.0),

8622 
REAL_CONST
(2637.1232330677353/8.0),

8623 
REAL_CONST
(2646.6823521327647/8.0),

8624 
REAL_CONST
(2656.2501102652768/8.0),

8625 
REAL_CONST
(2665.8264918923328/8.0),

8626 
REAL_CONST
(2675.4114815109842/8.0),

8627 
REAL_CONST
(2685.0050636877722/8.0),

8628 
REAL_CONST
(2694.6072230582295/8.0),

8629 
REAL_CONST
(2704.2179443263894/8.0),

8630 
REAL_CONST
(2713.8372122642972/8.0),

8631 
REAL_CONST
(2723.4650117115279/8.0),

8632 
REAL_CONST
(2733.1013275747096/8.0),

8633 
REAL_CONST
(2742.7461448270483/8.0),

8634 
REAL_CONST
(2752.3994485078601/8.0),

8635 
REAL_CONST
(2762.0612237221085/8.0),

8636 
REAL_CONST
(2771.7314556399419/8.0),

8637 
REAL_CONST
(2781.4101294962406/8.0),

8638 
REAL_CONST
(2791.0972305901655/8.0),

8639 
REAL_CONST
(2800.7927442847094/8.0),

8640 
REAL_CONST
(2810.4966560062589/8.0),

8641 
REAL_CONST
(2820.2089512441521/8.0),

8642 
REAL_CONST
(2829.9296155502466/8.0),

8643 
REAL_CONST
(2839.6586345384894/8.0),

8644 
REAL_CONST
(2849.3959938844923/8.0),

8645 
REAL_CONST
(2859.1416793251065/8.0),

8646 
REAL_CONST
(2868.8956766580086/8.0),

8647 
REAL_CONST
(2878.6579717412847/8.0),

8648 
REAL_CONST
(2888.4285504930212/8.0),

8649 
REAL_CONST
(2898.2073988908974/8.0),

8650 
REAL_CONST
(2907.9945029717837/8.0),

8651 
REAL_CONST
(2917.789848831344/8.0),

8652 
REAL_CONST
(2927.5934226236377/8.0),

8653 
REAL_CONST
(2937.4052105607311/8.0),

8654 
REAL_CONST
(2947.2251989123079/8.0),

8655 
REAL_CONST
(2957.0533740052865/8.0),

8656 
REAL_CONST
(2966.8897222234368/8.0),

8657 
REAL_CONST
(2976.734230007005/8.0),

8658 
REAL_CONST
(2986.5868838523397/8.0),

8659 
REAL_CONST
(2996.4476703115197/8.0),

8660 
REAL_CONST
(3006.3165759919889/8.0),

8661 
REAL_CONST
(3016.1935875561908/8.0),

8662 
REAL_CONST
(3026.0786917212095/8.0),

8663 
REAL_CONST
(3035.9718752584108/8.0),

8664 
REAL_CONST
(3045.8731249930906/8.0),

8665 
REAL_CONST
(3055.7824278041207/8.0),

8666 
REAL_CONST
(3065.6997706236039/8.0),

8667 
REAL_CONST
(3075.625140436528/8.0),

8668 
REAL_CONST
(3085.5585242804245/8.0),

8669 
REAL_CONST
(3095.4999092450298/8.0),

8670 
REAL_CONST
(3105.4492824719491/8.0),

8671 
REAL_CONST
(3115.4066311543256/8.0),

8672 
REAL_CONST
(3125.3719425365089/8.0),

8673 
REAL_CONST
(3135.3452039137287/8.0),

8674 
REAL_CONST
(3145.3264026317715/8.0),

8675 
REAL_CONST
(3155.3155260866592/8.0),

8676 
REAL_CONST
(3165.3125617243295/8.0),

8677 
REAL_CONST
(3175.3174970403229/8.0),

8678 
REAL_CONST
(3185.3303195794679/8.0),

8679 
REAL_CONST
(3195.35101693557/8.0),

8680 
REAL_CONST
(3205.3795767511078/8.0),

8681 
REAL_CONST
(3215.4159867169251/8.0),

8682 
REAL_CONST
(3225.460234571929/8.0),

8683 
REAL_CONST
(3235.5123081027928/8.0),

8684 
REAL_CONST
(3245.5721951436558/8.0),

8685 
REAL_CONST
(3255.63988357583/8.0),

8686 
REAL_CONST
(3265.7153613275095/8.0),

8687 
REAL_CONST
(3275.7986163734795/8.0),

8688 
REAL_CONST
(3285.8896367348289/8.0),

8689 
REAL_CONST
(3295.9884104786665/8.0),

8690 
REAL_CONST
(3306.0949257178395/8.0),

8691 
REAL_CONST
(3316.2091706106517/8.0),

8692 
REAL_CONST
(3326.331133360588/8.0),

8693 
REAL_CONST
(3336.4608022160378/8.0),

8694 
REAL_CONST
(3346.5981654700231/8.0),

8695 
REAL_CONST
(3356.7432114599264/8.0),

8696 
REAL_CONST
(3366.8959285672249/8.0),

8697 
REAL_CONST
(3377.0563052172211/8.0),

8698 
REAL_CONST
(3387.2243298787821/8.0),

8699 
REAL_CONST
(3397.3999910640764/8.0),

8700 
REAL_CONST
(3407.5832773283128/8.0),

8701 
REAL_CONST
(3417.7741772694862/8.0),

8702 
REAL_CONST
(3427.9726795281199/8.0),

8703 
REAL_CONST
(3438.1787727870123/8.0),

8704 
REAL_CONST
(3448.3924457709873/8.0),

8705 
REAL_CONST
(3458.6136872466445/8.0),

8706 
REAL_CONST
(3468.8424860221107/8.0),

8707 
REAL_CONST
(3479.0788309467976/8.0),

8708 
REAL_CONST
(3489.3227109111554/8.0),

8709 
REAL_CONST
(3499.5741148464344/8.0),

8710 
REAL_CONST
(3509.8330317244445/8.0),

8711 
REAL_CONST
(3520.0994505573185/8.0),

8712 
REAL_CONST
(3530.3733603972751/8.0),

8713 
REAL_CONST
(3540.6547503363886/8.0),

8714 
REAL_CONST
(3550.9436095063534/8.0),

8715 
REAL_CONST
(3561.239927078258/8.0),

8716 
REAL_CONST
(3571.5436922623535/8.0),

8717 
REAL_CONST
(3581.8548943078308/8.0),

8718 
REAL_CONST
(3592.1735225025936/8.0),

8719 
REAL_CONST
(3602.4995661730372/8.0),

8720 
REAL_CONST
(3612.8330146838275/8.0),

8721 
REAL_CONST
(3623.1738574376814/8.0),

8722 
REAL_CONST
(3633.5220838751502/8.0),

8723 
REAL_CONST
(3643.8776834744031/8.0),

8724 
REAL_CONST
(3654.2406457510142/8.0),

8725 
REAL_CONST
(3664.6109602577494/8.0),

8726 
REAL_CONST
(3674.9886165843564/8.0),

8727 
REAL_CONST
(3685.3736043573545/8.0),

8728 
REAL_CONST
(3695.7659132398294/8.0),

8729 
REAL_CONST
(3706.1655329312248/8.0),

8730 
REAL_CONST
(3716.5724531671399/8.0),

8731 
REAL_CONST
(3726.9866637191262/8.0),

8732 
REAL_CONST
(3737.4081543944876/8.0),

8733 
REAL_CONST
(3747.8369150360782/8.0),

8734 
REAL_CONST
(3758.2729355221072/8.0),

8735 
REAL_CONST
(3768.7162057659411/8.0),

8736 
REAL_CONST
(3779.1667157159077/8.0),

8737 
REAL_CONST
(3789.6244553551055/8.0),

8738 
REAL_CONST
(3800.0894147012082/8.0),

8739 
REAL_CONST
(3810.5615838062768/8.0),

8740 
REAL_CONST
(3821.0409527565694/8.0),

8741 
REAL_CONST
(3831.5275116723533/8.0),

8742 
REAL_CONST
(3842.0212507077194/8.0),

8743 
REAL_CONST
(3852.522160050396/8.0),

8744 
REAL_CONST
(3863.0302299215673/8.0),

8745 
REAL_CONST
(3873.5454505756893/8.0),

8746 
REAL_CONST
(3884.0678123003108/8.0),

8747 
REAL_CONST
(3894.5973054158922/8.0),

8748 
REAL_CONST
(3905.1339202756285/8.0),

8749 
REAL_CONST
(3915.6776472652732/8.0),

8750 
REAL_CONST
(3926.2284768029604/8.0),

8751 
REAL_CONST
(3936.7863993390338/8.0),

8752 
REAL_CONST
(3947.3514053558706/8.0),

8753 
REAL_CONST
(3957.9234853677135/8.0),

8754 
REAL_CONST
(3968.5026299204969/8.0),

8755 
REAL_CONST
(3979.0888295916798/8.0),

8756 
REAL_CONST
(3989.6820749900776/8.0),

8757 
REAL_CONST
(4000.2823567556948/8.0),

8758 
REAL_CONST
(4010.8896655595613/8.0),

8759 
REAL_CONST
(4021.5039921035655/8.0),

8760 
REAL_CONST
(4032.1253271202945/8.0),

8761 
REAL_CONST
(4042.7536613728694/8.0),

8762 
REAL_CONST
(4053.3889856547858/8.0),

8763 
REAL_CONST
(4064.0312907897551/8.0),

8764 
REAL_CONST
(4074.6805676315448/8.0),

8765 
REAL_CONST
(4085.3368070638221/8.0),

8766 
REAL_CONST
(4095.9999999999982/8.0),

8767 
REAL_CONST
(4106.6701373830711/8.0),

8768 
REAL_CONST
(4117.347210185475/8.0),

8769 
REAL_CONST
(4128.0312094089259/8.0),

8770 
REAL_CONST
(4138.722126084268/8.0),

8771 
REAL_CONST
(4149.4199512713267/8.0),

8772 
REAL_CONST
(4160.1246760587583/8.0),

8773 
REAL_CONST
(4170.8362915638982/8.0),

8774 
REAL_CONST
(4181.5547889326181/8.0),

8775 
REAL_CONST
(4192.2801593391769/8.0),

8776 
REAL_CONST
(4203.0123939860741/8.0),

8777 
REAL_CONST
(4213.7514841039101/8.0),

8778 
REAL_CONST
(4224.4974209512384/8.0),

8779 
REAL_CONST
(4235.2501958144258/8.0),

8780 
REAL_CONST
(4246.0098000075095/8.0),

8781 
REAL_CONST
(4256.7762248720574/8.0),

8782 
REAL_CONST
(4267.549461777031/8.0),

8783 
REAL_CONST
(4278.3295021186423/8.0),

8784 
REAL_CONST
(4289.1163373202198/8.0),

8785 
REAL_CONST
(4299.9099588320714/8.0),

8786 
REAL_CONST
(4310.7103581313495/8.0),

8787 
REAL_CONST
(4321.5175267219138/8.0),

8788 
REAL_CONST
(4332.3314561342004/8.0),

8789 
REAL_CONST
(4343.152137925088/8.0),

8790 
REAL_CONST
(4353.9795636777671/8.0),

8791 
REAL_CONST
(4364.8137250016052/8.0),

8792 
REAL_CONST
(4375.6546135320223/8.0),

8793 
REAL_CONST
(4386.5022209303588/8.0),

8794 
REAL_CONST
(4397.3565388837469/8.0),

8795 
REAL_CONST
(4408.2175591049827/8.0),

8796 
REAL_CONST
(4419.0852733324018/8.0),

8797 
REAL_CONST
(4429.9596733297531/8.0),

8798 
REAL_CONST
(4440.8407508860728/8.0),

8799 
REAL_CONST
(4451.7284978155603/8.0),

8800 
REAL_CONST
(4462.6229059574571/8.0),

8801 
REAL_CONST
(4473.5239671759227/8.0),

8802 
REAL_CONST
(4484.4316733599126/8.0),

8803 
REAL_CONST
(4495.3460164230582/8.0),

8804 
REAL_CONST
(4506.2669883035496/8.0),

8805 
REAL_CONST
(4517.1945809640119/8.0),

8806 
REAL_CONST
(4528.1287863913894/8.0),

8807 
REAL_CONST
(4539.069596596828/8.0),

8808 
REAL_CONST
(4550.0170036155587/8.0),

8809 
REAL_CONST
(4560.9709995067806/8.0),

8810 
REAL_CONST
(4571.931576353546/8.0),

8811 
REAL_CONST
(4582.898726262647/8.0),

8812 
REAL_CONST
(4593.8724413645004/8.0),

8813 
REAL_CONST
(4604.8527138130348/8.0),

8814 
REAL_CONST
(4615.8395357855816/8.0),

8815 
REAL_CONST
(4626.8328994827571/8.0),

8816 
REAL_CONST
(4637.8327971283588/8.0),

8817 
REAL_CONST
(4648.8392209692511/8.0),

8818 
REAL_CONST
(4659.8521632752563/8.0),

8819 
REAL_CONST
(4670.8716163390473/8.0),

8820 
REAL_CONST
(4681.8975724760394/8.0),

8821 
REAL_CONST
(4692.9300240242837/8.0),

8822 
REAL_CONST
(4703.9689633443595/8.0),

8823 
REAL_CONST
(4715.0143828192668/8.0),

8824 
REAL_CONST
(4726.0662748543255/8.0),

8825 
REAL_CONST
(4737.1246318770682/8.0),

8826 
REAL_CONST
(4748.1894463371373/8.0),

8827 
REAL_CONST
(4759.2607107061804/8.0),

8828 
REAL_CONST
(4770.3384174777493/8.0),

8829 
REAL_CONST
(4781.4225591671993/8.0),

8830 
REAL_CONST
(4792.5131283115852/8.0),

8831 
REAL_CONST
(4803.6101174695614/8.0),

8832 
REAL_CONST
(4814.7135192212854/8.0),

8833 
REAL_CONST
(4825.8233261683154/8.0),

8834 
REAL_CONST
(4836.9395309335096/8.0),

8835 
REAL_CONST
(4848.0621261609349/8.0),

8836 
REAL_CONST
(4859.1911045157631/8.0),

8837 
REAL_CONST
(4870.3264586841779/8.0),

8838 
REAL_CONST
(4881.4681813732768/8.0),

8839 
REAL_CONST
(4892.6162653109768/8.0),

8840 
REAL_CONST
(4903.7707032459193/8.0),

8841 
REAL_CONST
(4914.931487947375/8.0),

8842 
REAL_CONST
(4926.0986122051509/8.0),

8843 
REAL_CONST
(4937.2720688294967/8.0),

8844 
REAL_CONST
(4948.4518506510112/8.0),

8845 
REAL_CONST
(4959.637950520555/8.0),

8846 
REAL_CONST
(4970.8303613091521/8.0),

8847 
REAL_CONST
(4982.0290759079044/8.0),

8848 
REAL_CONST
(4993.2340872278974/8.0),

8849 
REAL_CONST
(5004.4453882001153/8.0),

8850 
REAL_CONST
(5015.6629717753467/8.0),

8851 
REAL_CONST
(5026.8868309241007/8.0),

8852 
REAL_CONST
(5038.1169586365131/8.0),

8853 
REAL_CONST
(5049.353347922266/8.0),

8854 
REAL_CONST
(5060.5959918104927/8.0),

8855 
REAL_CONST
(5071.8448833496996/8.0),

8856 
REAL_CONST
(5083.1000156076734/8.0),

8857 
REAL_CONST
(5094.3613816713996/8.0),

8858 
REAL_CONST
(5105.6289746469747/8.0),

8859 
REAL_CONST
(5116.9027876595246/8.0),

8860 
REAL_CONST
(5128.18281385312/8.0),

8861 
REAL_CONST
(5139.4690463906918/8.0),

8862 
REAL_CONST
(5150.7614784539473/8.0),

8863 
REAL_CONST
(5162.0601032432933/8.0),

8864 
REAL_CONST
(5173.3649139777472/8.0),

8865 
REAL_CONST
(5184.6759038948594/8.0),

8866 
REAL_CONST
(5195.9930662506322/8.0),

8867 
REAL_CONST
(5207.3163943194386/8.0),

8868 
REAL_CONST
(5218.6458813939435/8.0),

8869 
REAL_CONST
(5229.9815207850224/8.0),

8870 
REAL_CONST
(5241.3233058216847/8.0),

8871 
REAL_CONST
(5252.6712298509919/8.0),

8872 
REAL_CONST
(5264.025286237983/8.0),

8873 
REAL_CONST
(5275.3854683655954/8.0),

8874 
REAL_CONST
(5286.7517696345885/8.0),

8875 
REAL_CONST
(5298.1241834634639/8.0),

8876 
REAL_CONST
(5309.5027032883945/8.0),

8877 
REAL_CONST
(5320.887322563146/8.0),

8878 
REAL_CONST
(5332.2780347589978/8.0),

8879 
REAL_CONST
(5343.6748333646756/8.0),

8880 
REAL_CONST
(5355.0777118862716/8.0),

8881 
REAL_CONST
(5366.4866638471722/8.0),

8882 
REAL_CONST
(5377.901682787985/8.0),

8883 
REAL_CONST
(5389.3227622664635/8.0),

8884 
REAL_CONST
(5400.749895857437/8.0),

8885 
REAL_CONST
(5412.1830771527357/8.0),

8886 
REAL_CONST
(5423.622299761123/8.0),

8887 
REAL_CONST
(5435.067557308219/8.0),

8888 
REAL_CONST
(5446.5188434364318/8.0),

8889 
REAL_CONST
(5457.9761518048872/8.0),

8890 
REAL_CONST
(5469.4394760893592/8.0),

8891 
REAL_CONST
(5480.9088099821975/8.0),

8892 
REAL_CONST
(5492.3841471922606/8.0),

8893 
REAL_CONST
(5503.8654814448455/8.0),

8894 
REAL_CONST
(5515.3528064816201/8.0),

8895 
REAL_CONST
(5526.846116060552/8.0),

8896 
REAL_CONST
(5538.3454039558474/8.0),

8897 
REAL_CONST
(5549.8506639578736/8.0),

8898 
REAL_CONST
(5561.3618898731029/8.0),

8899 
REAL_CONST
(5572.8790755240361/8.0),

8900 
REAL_CONST
(5584.4022147491451/8.0),

8901 
REAL_CONST
(5595.9313014027975/8.0),

8902 
REAL_CONST
(5607.4663293552012/8.0),

8903 
REAL_CONST
(5619.0072924923297/8.0),

8904 
REAL_CONST
(5630.5541847158656/8.0),

8905 
REAL_CONST
(5642.1069999431284/8.0),

8906 
REAL_CONST
(5653.665732107017/8.0),

8907 
REAL_CONST
(5665.230375155943/8.0),

8908 
REAL_CONST
(5676.8009230537655/8.0),

8909 
REAL_CONST
(5688.3773697797333/8.0),

8910 
REAL_CONST
(5699.9597093284156/8.0),

8911 
REAL_CONST
(5711.5479357096474/8.0),

8912 
REAL_CONST
(5723.1420429484588/8.0),

8913 
REAL_CONST
(5734.7420250850209/8.0),

8914 
REAL_CONST
(5746.347876174581/8.0),

8915 
REAL_CONST
(5757.9595902874016/8.0),

8916 
REAL_CONST
(5769.5771615087006/8.0),

8917 
REAL_CONST
(5781.2005839385911/8.0),

8918 
REAL_CONST
(5792.8298516920213/8.0),

8919 
REAL_CONST
(5804.4649588987149/8.0),

8920 
REAL_CONST
(5816.1058997031105/8.0),

8921 
REAL_CONST
(5827.7526682643065/8.0),

8922 
REAL_CONST
(5839.4052587559972/8.0),

8923 
REAL_CONST
(5851.0636653664196/8.0),

8924 
REAL_CONST
(5862.7278822982908/8.0),

8925 
REAL_CONST
(5874.3979037687541/8.0),

8926 
REAL_CONST
(5886.0737240093204/8.0),

8927 
REAL_CONST
(5897.7553372658094/8.0),

8928 
REAL_CONST
(5909.4427377982956/8.0),

8929 
REAL_CONST
(5921.1359198810505/8.0),

8930 
REAL_CONST
(5932.8348778024874/8.0),

8931 
REAL_CONST
(5944.5396058651031/8.0),

8932 
REAL_CONST
(5956.2500983854261/8.0),

8933 
REAL_CONST
(5967.9663496939575/8.0),

8934 
REAL_CONST
(5979.6883541351208/8.0),

8935 
REAL_CONST
(5991.4161060672022/8.0),

8936 
REAL_CONST
(6003.1495998623004/8.0),

8937 
REAL_CONST
(6014.8888299062692/8.0),

8938 
REAL_CONST
(6026.6337905986684/8.0),

8939 
REAL_CONST
(6038.3844763527022/8.0),

8940 
REAL_CONST
(6050.1408815951781/8.0),

8941 
REAL_CONST
(6061.9030007664414/8.0),

8942 
REAL_CONST
(6073.6708283203316/8.0),

8943 
REAL_CONST
(6085.4443587241267/8.0),

8944 
REAL_CONST
(6097.2235864584891/8.0),

8945 
REAL_CONST
(6109.0085060174197/8.0),

8946 
REAL_CONST
(6120.7991119081998/8.0),

8947 
REAL_CONST
(6132.595398651345/8.0),

8948 
REAL_CONST
(6144.3973607805519/8.0),

8949 
REAL_CONST
(6156.2049928426459/8.0),

8950 
REAL_CONST
(6168.0182893975361/8.0),

8951 
REAL_CONST
(6179.8372450181578/8.0),

8952 
REAL_CONST
(6191.6618542904307/8.0),

8953 
REAL_CONST
(6203.4921118132024/8.0),

8954 
REAL_CONST
(6215.3280121982016/8.0),

8955 
REAL_CONST
(6227.1695500699925/8.0),

8956 
REAL_CONST
(6239.0167200659189/8.0),

8957 
REAL_CONST
(6250.8695168360628/8.0),

8958 
REAL_CONST
(6262.7279350431891/8.0),

8959 
REAL_CONST
(6274.5919693627056/8.0),

8960 
REAL_CONST
(6286.4616144826068/8.0),

8961 
REAL_CONST
(6298.3368651034316/8.0),

8962 
REAL_CONST
(6310.2177159382172/8.0),

8963 
REAL_CONST
(6322.1041617124456/8.0),

8964 
REAL_CONST
(6333.9961971640032/8.0),

8965 
REAL_CONST
(6345.8938170431311/8.0),

8966 
REAL_CONST
(6357.7970161123785/8.0),

8967 
REAL_CONST
(6369.7057891465583/8.0),

8968 
REAL_CONST
(6381.6201309327007/8.0),

8969 
REAL_CONST
(6393.5400362700075/8.0),

8970 
REAL_CONST
(6405.4654999698032/8.0),

8971 
REAL_CONST
(6417.3965168554978/8.0),

8972 
REAL_CONST
(6429.3330817625329/8.0),

8973 
REAL_CONST
(6441.2751895383453/8.0),

8974 
REAL_CONST
(6453.2228350423138/8.0),

8975 
REAL_CONST
(6465.176013145724/8.0),

8976 
REAL_CONST
(6477.134718731716/8.0),

8977 
REAL_CONST
(6489.0989466952469/8.0),

8978 
REAL_CONST
(6501.0686919430445/8.0),

8979 
REAL_CONST
(6513.0439493935628/8.0),

8980 
REAL_CONST
(6525.0247139769417/8.0),

8981 
REAL_CONST
(6537.010980634961/8.0),

8982 
REAL_CONST
(6549.002744321001/8.0),

8983 
REAL_CONST
(6560.9999999999973/8.0),

8984 
REAL_CONST
(6573.0027426483985/8.0),

8985 
REAL_CONST
(6585.0109672541284/8.0),

8986 
REAL_CONST
(6597.0246688165371/8.0),

8987 
REAL_CONST
(6609.0438423463656/8.0),

8988 
REAL_CONST
(6621.0684828657004/8.0),

8989 
REAL_CONST
(6633.0985854079354/8.0),

8990 
REAL_CONST
(6645.134145017727/8.0),

8991 
REAL_CONST
(6657.1751567509573/8.0),

8992 
REAL_CONST
(6669.2216156746908/8.0),

8993 
REAL_CONST
(6681.2735168671343/8.0),

8994 
REAL_CONST
(6693.3308554176001/8.0),

8995 
REAL_CONST
(6705.3936264264594/8.0),

8996 
REAL_CONST
(6717.461825005108/8.0),

8997 
REAL_CONST
(6729.535446275926/8.0),

8998 
REAL_CONST
(6741.6144853722335/8.0),

8999 
REAL_CONST
(6753.6989374382601/8.0),

9000 
REAL_CONST
(6765.7887976290967/8.0),

9001 
REAL_CONST
(6777.8840611106634/8.0),

9002 
REAL_CONST
(6789.9847230596661/8.0),

9003 
REAL_CONST
(6802.0907786635626/8.0),

9004 
REAL_CONST
(6814.2022231205201/8.0),

9005 
REAL_CONST
(6826.3190516393797/8.0),

9006 
REAL_CONST
(6838.4412594396181/8.0),

9007 
REAL_CONST
(6850.5688417513074/8.0),

9008 
REAL_CONST
(6862.701793815083/8.0),

9009 
REAL_CONST
(6874.840110882099/8.0),

9010 
REAL_CONST
(6886.9837882139991/8.0),

9011 
REAL_CONST
(6899.1328210828724/8.0),

9012 
REAL_CONST
(6911.2872047712199/8.0),

9013 
REAL_CONST
(6923.4469345719199/8.0),

9014 
REAL_CONST
(6935.6120057881863/8.0),

9015 
REAL_CONST
(6947.7824137335365/8.0),

9016 
REAL_CONST
(6959.9581537317536/8.0),

9017 
REAL_CONST
(6972.1392211168532/8.0),

9018 
REAL_CONST
(6984.3256112330409/8.0),

9019 
REAL_CONST
(6996.5173194346862/8.0),

9020 
REAL_CONST
(7008.7143410862773/8.0),

9021 
REAL_CONST
(7020.9166715623942/8.0),

9022 
REAL_CONST
(7033.1243062476678/8.0),

9023 
REAL_CONST
(7045.3372405367481/8.0),

9024 
REAL_CONST
(7057.5554698342685/8.0),

9025 
REAL_CONST
(7069.7789895548103/8.0),

9026 
REAL_CONST
(7082.0077951228714/8.0),

9027 
REAL_CONST
(7094.2418819728273/8.0),

9028 
REAL_CONST
(7106.4812455489018/8.0),

9029 
REAL_CONST
(7118.7258813051285/8.0),

9030 
REAL_CONST
(7130.9757847053224/8.0),

9031 
REAL_CONST
(7143.2309512230404/8.0),

9032 
REAL_CONST
(7155.4913763415516/8.0),

9033 
REAL_CONST
(7167.7570555538041/8.0),

9034 
REAL_CONST
(7180.0279843623894/8.0),

9035 
REAL_CONST
(7192.3041582795131/8.0),

9036 
REAL_CONST
(7204.5855728269571/8.0),

9037 
REAL_CONST
(7216.8722235360519/8.0),

9038 
REAL_CONST
(7229.1641059476406/8.0),

9039 
REAL_CONST
(7241.4612156120484/8.0),

9040 
REAL_CONST
(7253.7635480890503/8.0),

9041 
REAL_CONST
(7266.0710989478375/8.0),

9042 
REAL_CONST
(7278.3838637669869/8.0),

9043 
REAL_CONST
(7290.7018381344296/8.0),

9044 
REAL_CONST
(7303.0250176474174/8.0),

9045 
REAL_CONST
(7315.3533979124932/8.0),

9046 
REAL_CONST
(7327.6869745454596/8.0),

9047 
REAL_CONST
(7340.0257431713462/8.0),

9048 
REAL_CONST
(7352.3696994243801/8.0),

9049 
REAL_CONST
(7364.7188389479543/8.0),

9050 
REAL_CONST
(7377.0731573945968/8.0),

9051 
REAL_CONST
(7389.4326504259407/8.0),

9052 
REAL_CONST
(7401.7973137126937/8.0),

9053 
REAL_CONST
(7414.1671429346061/8.0),

9054 
REAL_CONST
(7426.5421337804428/8.0),

9055 
REAL_CONST
(7438.922281947951/8.0),

9056 
REAL_CONST
(7451.3075831438346/8.0),

9057 
REAL_CONST
(7463.6980330837177/8.0),

9058 
REAL_CONST
(7476.0936274921214/8.0),

9059 
REAL_CONST
(7488.4943621024304/8.0),

9060 
REAL_CONST
(7500.9002326568652/8.0),

9061 
REAL_CONST
(7513.3112349064522/8.0),

9062 
REAL_CONST
(7525.7273646109943/8.0),

9063 
REAL_CONST
(7538.1486175390446/8.0),

9064 
REAL_CONST
(7550.5749894678729/8.0),

9065 
REAL_CONST
(7563.0064761834419/8.0),

9066 
REAL_CONST
(7575.4430734803736/8.0),

9067 
REAL_CONST
(7587.8847771619248/8.0),

9068 
REAL_CONST
(7600.3315830399597/8.0),

9069 
REAL_CONST
(7612.7834869349153/8.0),

9070 
REAL_CONST
(7625.24048467578/8.0),

9071 
REAL_CONST
(7637.7025721000637/8.0),

9072 
REAL_CONST
(7650.1697450537677/8.0),

9073 
REAL_CONST
(7662.6419993913596/8.0),

9074 
REAL_CONST
(7675.1193309757446/8.0),

9075 
REAL_CONST
(7687.6017356782404/8.0),

9076 
REAL_CONST
(7700.0892093785433/8.0),

9077 
REAL_CONST
(7712.5817479647112/8.0),

9078 
REAL_CONST
(7725.079347333125/8.0),

9079 
REAL_CONST
(7737.5820033884729/8.0),

9080 
REAL_CONST
(7750.0897120437139/8.0),

9081 
REAL_CONST
(7762.6024692200581/8.0),

9082 
REAL_CONST
(7775.1202708469355/8.0),

9083 
REAL_CONST
(7787.6431128619733/8.0),

9084 
REAL_CONST
(7800.1709912109645/8.0),

9085 
REAL_CONST
(7812.7039018478481/8.0),

9086 
REAL_CONST
(7825.2418407346768/8.0),

9087 
REAL_CONST
(7837.7848038415968/8.0),

9088 
REAL_CONST
(7850.3327871468155/8.0),

9089 
REAL_CONST
(7862.8857866365806/8.0),

9090 
REAL_CONST
(7875.4437983051539/8.0),

9091 
REAL_CONST
(7888.006818154784/8.0),

9092 
REAL_CONST
(7900.5748421956796/8.0),

9093 
REAL_CONST
(7913.1478664459901/8.0),

9094 
REAL_CONST
(7925.725886931772/8.0),

9095 
REAL_CONST
(7938.3088996869719/8.0),

9096 
REAL_CONST
(7950.8969007533951/8.0),

9097 
REAL_CONST
(7963.4898861806851/8.0),

9098 
REAL_CONST
(7976.0878520262959/8.0),

9099 
REAL_CONST
(7988.6907943554688/8.0),

9100 
REAL_CONST
(8001.2987092412086/8.0),

9101 
REAL_CONST
(8013.911592764257/8.0),

9102 
REAL_CONST
(8026.5294410130691/8.0),

9103 
REAL_CONST
(8039.1522500837891/8.0),

9104 
REAL_CONST
(8051.7800160802271/8.0),

9105 
REAL_CONST
(8064.412735113835/8.0),

9106 
REAL_CONST
(8077.0504033036796/8.0),

9107 
REAL_CONST
(8089.6930167764222/8.0),

9108 
REAL_CONST
(8102.3405716662946/8.0),

9109 
REAL_CONST
(8114.9930641150731/8.0),

9110 
REAL_CONST
(8127.6504902720571/8.0),

9111 
REAL_CONST
(8140.3128462940449/8.0),

9112 
REAL_CONST
(8152.9801283453098/8.0),

9113 
REAL_CONST
(8165.6523325975786/8.0),

9114 
REAL_CONST
(8178.3294552300049/8.0),

9115 
REAL_CONST
(8191.0114924291529/8.0),

9116 
REAL_CONST
(8203.6984403889655/8.0),

9117 
REAL_CONST
(8216.3902953107463/8.0),

9118 
REAL_CONST
(8229.0870534031419/8.0),

9119 
REAL_CONST
(8241.7887108821069/8.0),

9120 
REAL_CONST
(8254.4952639708936/8.0),

9121 
REAL_CONST
(8267.2067089000211/8.0),

9122 
REAL_CONST
(8279.9230419072574/8.0),

9123 
REAL_CONST
(8292.6442592375952/8.0),

9124 
REAL_CONST
(8305.3703571432306/8.0),

9125 
REAL_CONST
(8318.101331883543/8.0),

9126 
REAL_CONST
(8330.8371797250657/8.0),

9127 
REAL_CONST
(8343.577896941475/8.0),

9128 
REAL_CONST
(8356.3234798135582/8.0),

9129 
REAL_CONST
(8369.0739246291978/8.0),

9130 
REAL_CONST
(8381.8292276833508/8.0),

9131 
REAL_CONST
(8394.5893852780209/8.0),

9132 
REAL_CONST
(8407.3543937222421/8.0),

9133 
REAL_CONST
(8420.1242493320569/8.0),

9134 
REAL_CONST
(8432.8989484304948/8.0),

9135 
REAL_CONST
(8445.6784873475499/8.0),

9136 
REAL_CONST
(8458.4628624201578/8.0),

9137 
REAL_CONST
(8471.2520699921806/8.0),

9138 
REAL_CONST
(8484.0461064143838/8.0),

9139 
REAL_CONST
(8496.8449680444082/8.0),

9140 
REAL_CONST
(8509.6486512467636/8.0),

9141 
REAL_CONST
(8522.4571523927953/8.0),

9142 
REAL_CONST
(8535.270467860666/8.0),

9143 
REAL_CONST
(8548.0885940353437/8.0),

9144 
REAL_CONST
(8560.9115273085663/8.0),

9145 
REAL_CONST
(8573.7392640788403/8.0),

9146 
REAL_CONST
(8586.5718007514006/8.0),

9147 
REAL_CONST
(8599.4091337382069/8.0),

9148 
REAL_CONST
(8612.2512594579148/8.0),

9149 
REAL_CONST
(8625.0981743358552/8.0),

9150 
REAL_CONST
(8637.9498748040205/8.0),

9151 
REAL_CONST
(8650.8063573010386/8.0),

9152 
REAL_CONST
(8663.6676182721567/8.0),

9153 
REAL_CONST
(8676.533654169225/8.0),

9154 
REAL_CONST
(8689.4044614506638/8.0),

9155 
REAL_CONST
(8702.2800365814601/8.0),

9156 
REAL_CONST
(8715.1603760331418/8.0),

9157 
REAL_CONST
(8728.0454762837508/8.0),

9158 
REAL_CONST
(8740.9353338178389/8.0),

9159 
REAL_CONST
(8753.8299451264356/8.0),

9160 
REAL_CONST
(8766.7293067070332/8.0),

9161 
REAL_CONST
(8779.6334150635721/8.0),

9162 
REAL_CONST
(8792.5422667064158/8.0),

9163 
REAL_CONST
(8805.4558581523324/8.0),

9164 
REAL_CONST
(8818.3741859244819/8.0),

9165 
REAL_CONST
(8831.2972465523908/8.0),

9166 
REAL_CONST
(8844.2250365719356/8.0),

9167 
REAL_CONST
(8857.1575525253265/8.0),

9168 
REAL_CONST
(8870.0947909610859/8.0),

9169 
REAL_CONST
(8883.0367484340295/8.0),

9170 
REAL_CONST
(8895.9834215052524/8.0),

9171 
REAL_CONST
(8908.934806742107/8.0),

9172 
REAL_CONST
(8921.8909007181846/8.0),

9173 
REAL_CONST
(8934.8517000132997/8.0),

9174 
REAL_CONST
(8947.817201213471/8.0),

9175 
REAL_CONST
(8960.7874009109/8.0),

9176 
REAL_CONST
(8973.7622957039603/8.0),

9177 
REAL_CONST
(8986.7418821971733/8.0),

9178 
REAL_CONST
(8999.7261570011924/8.0),

9179 
REAL_CONST
(9012.7151167327884/8.0),

9180 
REAL_CONST
(9025.7087580148236/8.0),

9181 
REAL_CONST
(9038.7070774762469/8.0),

9182 
REAL_CONST
(9051.7100717520643/8.0),

9183 
REAL_CONST
(9064.7177374833282/8.0),

9184 
REAL_CONST
(9077.7300713171153/8.0),

9185 
REAL_CONST
(9090.7470699065179/8.0),

9186 
REAL_CONST
(9103.7687299106146/8.0),

9187 
REAL_CONST
(9116.7950479944648/8.0),

9188 
REAL_CONST
(9129.8260208290812/8.0),

9189 
REAL_CONST
(9142.8616450914233/8.0),

9190 
REAL_CONST
(9155.9019174643727/8.0),

9191 
REAL_CONST
(9168.9468346367157/8.0),

9192 
REAL_CONST
(9181.9963933031358/8.0),

9193 
REAL_CONST
(9195.0505901641845/8.0),

9194 
REAL_CONST
(9208.1094219262741/8.0),

9195 
REAL_CONST
(9221.1728853016557/8.0),

9196 
REAL_CONST
(9234.240977008405/8.0),

9197 
REAL_CONST
(9247.3136937704076/8.0),

9198 
REAL_CONST
(9260.3910323173386/8.0),

9199 
REAL_CONST
(9273.472989384647/8.0),

9200 
REAL_CONST
(9286.5595617135423/8.0),

9201 
REAL_CONST
(9299.6507460509747/8.0),

9202 
REAL_CONST
(9312.7465391496207/8.0),

9203 
REAL_CONST
(9325.8469377678684/8.0),

9204 
REAL_CONST
(9338.9519386698012/8.0),

9205 
REAL_CONST
(9352.0615386251757/8.0),

9206 
REAL_CONST
(9365.1757344094131/8.0),

9207 
REAL_CONST
(9378.2945228035842/8.0),

9208 
REAL_CONST
(9391.4179005943843/8.0),

9209 
REAL_CONST
(9404.5458645741273/8.0),

9210 
REAL_CONST
(9417.6784115407263/8.0),

9211 
REAL_CONST
(9430.8155382976747/8.0),

9212 
REAL_CONST
(9443.9572416540359/8.0),

9213 
REAL_CONST
(9457.1035184244265/8.0),

9214 
REAL_CONST
(9470.2543654290002/8.0),

9215 
REAL_CONST
(9483.4097794934296/8.0),

9216 
REAL_CONST
(9496.5697574488931/8.0),

9217 
REAL_CONST
(9509.7342961320664/8.0),

9218 
REAL_CONST
(9522.9033923850911/8.0),

9219 
REAL_CONST
(9536.0770430555804/8.0),

9220 
REAL_CONST
(9549.2552449965824/8.0),

9221 
REAL_CONST
(9562.4379950665825/8.0),

9222 
REAL_CONST
(9575.6252901294793/8.0),

9223 
REAL_CONST
(9588.8171270545736/8.0),

9224 
REAL_CONST
(9602.0135027165488/8.0),

9225 
REAL_CONST
(9615.2144139954635/8.0),

9226 
REAL_CONST
(9628.4198577767274/8.0),

9227 
REAL_CONST
(9641.629830951093/8.0),

9228 
REAL_CONST
(9654.844330414644/8.0),

9229 
REAL_CONST
(9668.0633530687719/8.0),

9230 
REAL_CONST
(9681.286895820167/8.0),

9231 
REAL_CONST
(9694.5149555808002/8.0),

9232 
REAL_CONST
(9707.7475292679192/8.0),

9233 
REAL_CONST
(9720.9846138040157/8.0),

9234 
REAL_CONST
(9734.2262061168276/8.0),

9235 
REAL_CONST
(9747.4723031393187/8.0),

9236 
REAL_CONST
(9760.7229018096641/8.0),

9237 
REAL_CONST
(9773.9779990712323/8.0),

9238 
REAL_CONST
(9787.2375918725811/8.0),

9239 
REAL_CONST
(9800.5016771674327/8.0),

9240 
REAL_CONST
(9813.7702519146696/8.0),

9241 
REAL_CONST
(9827.0433130783094/8.0),

9242 
REAL_CONST
(9840.3208576275028/8.0),

9243 
REAL_CONST
(9853.602882536512/8.0),

9244 
REAL_CONST
(9866.8893847846994/8.0),

9245 
REAL_CONST
(9880.1803613565116/8.0),

9246 
REAL_CONST
(9893.4758092414686/8.0),

9247 
REAL_CONST
(9906.7757254341523/8.0),

9248 
REAL_CONST
(9920.0801069341851/8.0),

9249 
REAL_CONST
(9933.3889507462245/8.0),

9250 
REAL_CONST
(9946.7022538799429/8.0),

9251 
REAL_CONST
(9960.0200133500221/8.0),

9252 
REAL_CONST
(9973.3422261761298/8.0),

9253 
REAL_CONST
(9986.6688893829159/8.0),

9254 
REAL_CONST
(9999.9999999999945/8.0),

9255 
REAL_CONST
(10013.335555061929/8.0),

9256 
REAL_CONST
(10026.675551608221/8.0),

9257 
REAL_CONST
(10040.019986683301/8.0),

9258 
REAL_CONST
(10053.368857336509/8.0),

9259 
REAL_CONST
(10066.722160622081/8.0),

9260 
REAL_CONST
(10080.079893599144/8.0),

9261 
REAL_CONST
(10093.442053331697/8.0),

9262 
REAL_CONST
(10106.808636888598/8.0),

9263 
REAL_CONST
(10120.179641343551/8.0),

9264 
REAL_CONST
(10133.555063775095/8.0),

9265 
REAL_CONST
(10146.934901266595/8.0),

9266 
REAL_CONST
(10160.31915090622/8.0),

9267 
REAL_CONST
(10173.707809786936/8.0),

9268 
REAL_CONST
(10187.100875006496/8.0),

9269 
REAL_CONST
(10200.498343667417/8.0),

9270 
REAL_CONST
(10213.900212876984/8.0),

9271 
REAL_CONST
(10227.306479747222/8.0),

9272 
REAL_CONST
(10240.717141394889/8.0),

9273 
REAL_CONST
(10254.132194941467/8.0),

9274 
REAL_CONST
(10267.551637513146/8.0),

9275 
REAL_CONST
(10280.975466240814/8.0),

9276 
REAL_CONST
(10294.40367826004/8.0),

9277 
REAL_CONST
(10307.836270711066/8.0),

9278 
REAL_CONST
(10321.273240738796/8.0),

9279 
REAL_CONST
(10334.71458549278/8.0)

9280 #ifde‡
BIG_IQ_TABLE


9281 ,
REAL_CONST
(10348.160302127204/8.0),

9282 
REAL_CONST
(10361.610387800878/8.0),

9283 
REAL_CONST
(10375.064839677221/8.0),

9284 
REAL_CONST
(10388.523654924258/8.0),

9285 
REAL_CONST
(10401.986830714593/8.0),

9286 
REAL_CONST
(10415.454364225412/8.0),

9287 
REAL_CONST
(10428.926252638465/8.0),

9288 
REAL_CONST
(10442.402493140049/8.0),

9289 
REAL_CONST
(10455.883082921007/8.0),

9290 
REAL_CONST
(10469.368019176709/8.0),

9291 
REAL_CONST
(10482.85729910704/8.0),

9292 
REAL_CONST
(10496.350919916393/8.0),

9293 
REAL_CONST
(10509.848878813653/8.0),

9294 
REAL_CONST
(10523.351173012188/8.0),

9295 
REAL_CONST
(10536.857799729838/8.0),

9296 
REAL_CONST
(10550.3687561889/8.0),

9297 
REAL_CONST
(10563.884039616123/8.0),

9298 
REAL_CONST
(10577.403647242685/8.0),

9299 
REAL_CONST
(10590.927576304197/8.0),

9300 
REAL_CONST
(10604.455824040679/8.0),

9301 
REAL_CONST
(10617.988387696556/8.0),

9302 
REAL_CONST
(10631.525264520642/8.0),

9303 
REAL_CONST
(10645.066451766135/8.0),

9304 
REAL_CONST
(10658.611946690598/8.0),

9305 
REAL_CONST
(10672.161746555956/8.0),

9306 
REAL_CONST
(10685.715848628475/8.0),

9307 
REAL_CONST
(10699.274250178762/8.0),

9308 
REAL_CONST
(10712.836948481747/8.0),

9309 
REAL_CONST
(10726.403940816675/8.0),

9310 
REAL_CONST
(10739.975224467091/8.0),

9311 
REAL_CONST
(10753.550796720834/8.0),

9312 
REAL_CONST
(10767.130654870027/8.0),

9313 
REAL_CONST
(10780.714796211059/8.0),

9314 
REAL_CONST
(10794.303218044579/8.0),

9315 
REAL_CONST
(10807.895917675487/8.0),

9316 
REAL_CONST
(10821.492892412922/8.0),

9317 
REAL_CONST
(10835.094139570248/8.0),

9318 
REAL_CONST
(10848.699656465047/8.0),

9319 
REAL_CONST
(10862.309440419107/8.0),

9320 
REAL_CONST
(10875.923488758415/8.0),

9321 
REAL_CONST
(10889.541798813138/8.0),

9322 
REAL_CONST
(10903.16436791762/8.0),

9323 
REAL_CONST
(10916.791193410372/8.0),

9324 
REAL_CONST
(10930.422272634056/8.0),

9325 
REAL_CONST
(10944.05760293548/8.0),

9326 
REAL_CONST
(10957.697181665582/8.0),

9327 
REAL_CONST
(10971.341006179427/8.0),

9328 
REAL_CONST
(10984.98907383619/8.0),

9329 
REAL_CONST
(10998.641381999149/8.0),

9330 
REAL_CONST
(11012.297928035676/8.0),

9331 
REAL_CONST
(11025.958709317223/8.0),

9332 
REAL_CONST
(11039.623723219316/8.0),

9333 
REAL_CONST
(11053.292967121541/8.0),

9334 
REAL_CONST
(11066.966438407539/8.0),

9335 
REAL_CONST
(11080.64413446499/8.0),

9336 
REAL_CONST
(11094.326052685608/8.0),

9337 
REAL_CONST
(11108.012190465128/8.0),

9338 
REAL_CONST
(11121.702545203296/8.0),

9339 
REAL_CONST
(11135.397114303863/8.0),

9340 
REAL_CONST
(11149.095895174571/8.0),

9341 
REAL_CONST
(11162.798885227143/8.0),

9342 
REAL_CONST
(11176.506081877278/8.0),

9343 
REAL_CONST
(11190.217482544635/8.0),

9344 
REAL_CONST
(11203.933084652828/8.0),

9345 
REAL_CONST
(11217.652885629415/8.0),

9346 
REAL_CONST
(11231.376882905886/8.0),

9347 
REAL_CONST
(11245.105073917659/8.0),

9348 
REAL_CONST
(11258.837456104062/8.0),

9349 
REAL_CONST
(11272.574026908333/8.0),

9350 
REAL_CONST
(11286.314783777601/8.0),

9351 
REAL_CONST
(11300.059724162888/8.0),

9352 
REAL_CONST
(11313.808845519083/8.0),

9353 
REAL_CONST
(11327.562145304952/8.0),

9354 
REAL_CONST
(11341.319620983111/8.0),

9355 
REAL_CONST
(11355.081270020033/8.0),

9356 
REAL_CONST
(11368.847089886023/8.0),

9357 
REAL_CONST
(11382.617078055218/8.0),

9358 
REAL_CONST
(11396.391232005579/8.0),

9359 
REAL_CONST
(11410.169549218874/8.0),

9360 
REAL_CONST
(11423.952027180676/8.0),

9361 
REAL_CONST
(11437.738663380349/8.0),

9362 
REAL_CONST
(11451.529455311042/8.0),

9363 
REAL_CONST
(11465.324400469679/8.0),

9364 
REAL_CONST
(11479.123496356951/8.0),

9365 
REAL_CONST
(11492.926740477304/8.0),

9366 
REAL_CONST
(11506.734130338931/8.0),

9367 
REAL_CONST
(11520.545663453764/8.0),

9368 
REAL_CONST
(11534.361337337466/8.0),

9369 
REAL_CONST
(11548.181149509423/8.0),

9370 
REAL_CONST
(11562.005097492724/8.0),

9371 
REAL_CONST
(11575.83317881417/8.0),

9372 
REAL_CONST
(11589.665391004253/8.0),

9373 
REAL_CONST
(11603.501731597149/8.0),

9374 
REAL_CONST
(11617.342198130715/8.0),

9375 
REAL_CONST
(11631.186788146468/8.0),

9376 
REAL_CONST
(11645.035499189589/8.0),

9377 
REAL_CONST
(11658.888328808911/8.0),

9378 
REAL_CONST
(11672.745274556904/8.0),

9379 
REAL_CONST
(11686.606333989675/8.0),

9380 
REAL_CONST
(11700.471504666955/8.0),

9381 
REAL_CONST
(11714.340784152086/8.0),

9382 
REAL_CONST
(11728.214170012021/8.0),

9383 
REAL_CONST
(11742.091659817312/8.0),

9384 
REAL_CONST
(11755.973251142101/8.0),

9385 
REAL_CONST
(11769.858941564111/8.0),

9386 
REAL_CONST
(11783.748728664636/8.0),

9387 
REAL_CONST
(11797.642610028539/8.0),

9388 
REAL_CONST
(11811.540583244237/8.0),

9389 
REAL_CONST
(11825.442645903697/8.0),

9390 
REAL_CONST
(11839.34879560242/8.0),

9391 
REAL_CONST
(11853.259029939445/8.0),

9392 
REAL_CONST
(11867.173346517333/8.0),

9393 
REAL_CONST
(11881.091742942155/8.0),

9394 
REAL_CONST
(11895.014216823492/8.0),

9395 
REAL_CONST
(11908.940765774427/8.0),

9396 
REAL_CONST
(11922.871387411526/8.0),

9397 
REAL_CONST
(11936.806079354839/8.0),

9398 
REAL_CONST
(11950.744839227897/8.0),

9399 
REAL_CONST
(11964.687664657684/8.0),

9400 
REAL_CONST
(11978.634553274653/8.0),

9401 
REAL_CONST
(11992.585502712702/8.0),

9402 
REAL_CONST
(12006.540510609168/8.0),

9403 
REAL_CONST
(12020.499574604828/8.0),

9404 
REAL_CONST
(12034.462692343877/8.0),

9405 
REAL_CONST
(12048.429861473938/8.0),

9406 
REAL_CONST
(12062.401079646032/8.0),

9407 
REAL_CONST
(12076.376344514589/8.0),

9408 
REAL_CONST
(12090.355653737433/8.0),

9409 
REAL_CONST
(12104.339004975769/8.0),

9410 
REAL_CONST
(12118.326395894188/8.0),

9411 
REAL_CONST
(12132.317824160644/8.0),

9412 
REAL_CONST
(12146.313287446457/8.0),

9413 
REAL_CONST
(12160.312783426305/8.0),

9414 
REAL_CONST
(12174.316309778205/8.0),

9415 
REAL_CONST
(12188.323864183525/8.0),

9416 
REAL_CONST
(12202.335444326955/8.0),

9417 
REAL_CONST
(12216.351047896511/8.0),

9418 
REAL_CONST
(12230.370672583531/8.0),

9419 
REAL_CONST
(12244.394316082657/8.0),

9420 
REAL_CONST
(12258.421976091831/8.0),

9421 
REAL_CONST
(12272.453650312296/8.0),

9422 
REAL_CONST
(12286.489336448574/8.0),

9423 
REAL_CONST
(12300.529032208471/8.0),

9424 
REAL_CONST
(12314.572735303058/8.0),

9425 
REAL_CONST
(12328.620443446678/8.0),

9426 
REAL_CONST
(12342.672154356922/8.0),

9427 
REAL_CONST
(12356.727865754638/8.0),

9428 
REAL_CONST
(12370.787575363909/8.0),

9429 
REAL_CONST
(12384.851280912055/8.0),

9430 
REAL_CONST
(12398.918980129623/8.0),

9431 
REAL_CONST
(12412.990670750381/8.0),

9432 
REAL_CONST
(12427.066350511306/8.0),

9433 
REAL_CONST
(12441.146017152583/8.0),

9434 
REAL_CONST
(12455.229668417589/8.0),

9435 
REAL_CONST
(12469.317302052901/8.0),

9436 
REAL_CONST
(12483.40891580827/8.0),

9437 
REAL_CONST
(12497.50450743663/8.0),

9438 
REAL_CONST
(12511.604074694078/8.0),

9439 
REAL_CONST
(12525.707615339878/8.0),

9440 
REAL_CONST
(12539.815127136444/8.0),

9441 
REAL_CONST
(12553.926607849342/8.0),

9442 
REAL_CONST
(12568.042055247275/8.0),

9443 
REAL_CONST
(12582.161467102082/8.0),

9444 
REAL_CONST
(12596.284841188726/8.0),

9445 
REAL_CONST
(12610.41217528529/8.0),

9446 
REAL_CONST
(12624.543467172971/8.0),

9447 
REAL_CONST
(12638.678714636069/8.0),

9448 
REAL_CONST
(12652.817915461985/8.0),

9449 
REAL_CONST
(12666.961067441209/8.0),

9450 
REAL_CONST
(12681.108168367316/8.0),

9451 
REAL_CONST
(12695.259216036962/8.0),

9452 
REAL_CONST
(12709.414208249869/8.0),

9453 
REAL_CONST
(12723.573142808827/8.0),

9454 
REAL_CONST
(12737.736017519681/8.0),

9455 
REAL_CONST
(12751.902830191326/8.0),

9456 
REAL_CONST
(12766.073578635704/8.0),

9457 
REAL_CONST
(12780.248260667788/8.0),

9458 
REAL_CONST
(12794.426874105588/8.0),

9459 
REAL_CONST
(12808.609416770132/8.0),

9460 
REAL_CONST
(12822.795886485468/8.0),

9461 
REAL_CONST
(12836.986281078653/8.0),

9462 
REAL_CONST
(12851.180598379744/8.0),

9463 
REAL_CONST
(12865.378836221802/8.0),

9464 
REAL_CONST
(12879.580992440871/8.0),

9465 
REAL_CONST
(12893.787064875984/8.0),

9466 
REAL_CONST
(12907.997051369144/8.0),

9467 
REAL_CONST
(12922.210949765335/8.0),

9468 
REAL_CONST
(12936.428757912496/8.0),

9469 
REAL_CONST
(12950.650473661524/8.0),

9470 
REAL_CONST
(12964.876094866273/8.0),

9471 
REAL_CONST
(12979.105619383534/8.0),

9472 
REAL_CONST
(12993.339045073039/8.0),

9473 
REAL_CONST
(13007.576369797454/8.0),

9474 
REAL_CONST
(13021.817591422368/8.0),

9475 
REAL_CONST
(13036.062707816285/8.0),

9476 
REAL_CONST
(13050.311716850629/8.0),

9477 
REAL_CONST
(13064.564616399723/8.0),

9478 
REAL_CONST
(13078.821404340792/8.0),

9479 
REAL_CONST
(13093.082078553954/8.0),

9480 
REAL_CONST
(13107.346636922217/8.0),

9481 
REAL_CONST
(13121.615077331464/8.0),

9482 
REAL_CONST
(13135.887397670458/8.0),

9483 
REAL_CONST
(13150.163595830827/8.0),

9484 
REAL_CONST
(13164.44366970706/8.0),

9485 
REAL_CONST
(13178.727617196502/8.0),

9486 
REAL_CONST
(13193.015436199352/8.0),

9487 
REAL_CONST
(13207.307124618648/8.0),

9488 
REAL_CONST
(13221.602680360265/8.0),

9489 
REAL_CONST
(13235.902101332911/8.0),

9490 
REAL_CONST
(13250.205385448118/8.0),

9491 
REAL_CONST
(13264.512530620239/8.0),

9492 
REAL_CONST
(13278.823534766434/8.0),

9493 
REAL_CONST
(13293.138395806676/8.0),

9494 
REAL_CONST
(13307.457111663734/8.0),

9495 
REAL_CONST
(13321.779680263176/8.0),

9496 
REAL_CONST
(13336.106099533356/8.0),

9497 
REAL_CONST
(13350.436367405409/8.0),

9498 
REAL_CONST
(13364.77048181325/8.0),

9499 
REAL_CONST
(13379.108440693562/8.0),

9500 
REAL_CONST
(13393.450241985796/8.0),

9501 
REAL_CONST
(13407.795883632158/8.0),

9502 
REAL_CONST
(13422.145363577607/8.0),

9503 
REAL_CONST
(13436.498679769853/8.0),

9504 
REAL_CONST
(13450.855830159346/8.0),

9505 
REAL_CONST
(13465.216812699266/8.0),

9506 
REAL_CONST
(13479.581625345529/8.0),

9507 
REAL_CONST
(13493.950266056772/8.0),

9508 
REAL_CONST
(13508.32273279435/8.0),

9509 
REAL_CONST
(13522.699023522329/8.0),

9510 
REAL_CONST
(13537.079136207483/8.0),

9511 
REAL_CONST
(13551.463068819286/8.0),

9512 
REAL_CONST
(13565.850819329906/8.0),

9513 
REAL_CONST
(13580.2423857142/8.0),

9514 
REAL_CONST
(13594.63776594971/8.0),

9515 
REAL_CONST
(13609.036958016657/8.0),

9516 
REAL_CONST
(13623.439959897927/8.0),

9517 
REAL_CONST
(13637.846769579081/8.0),

9518 
REAL_CONST
(13652.257385048335/8.0),

9519 
REAL_CONST
(13666.67180429656/8.0),

9520 
REAL_CONST
(13681.090025317284/8.0),

9521 
REAL_CONST
(13695.512046106669/8.0),

9522 
REAL_CONST
(13709.937864663521/8.0),

9523 
REAL_CONST
(13724.367478989278/8.0),

9524 
REAL_CONST
(13738.800887088004/8.0),

9525 
REAL_CONST
(13753.238086966385/8.0),

9526 
REAL_CONST
(13767.679076633727/8.0),

9527 
REAL_CONST
(13782.123854101939/8.0),

9528 
REAL_CONST
(13796.572417385545/8.0),

9529 
REAL_CONST
(13811.024764501659/8.0),

9530 
REAL_CONST
(13825.480893469998/8.0),

9531 
REAL_CONST
(13839.94080231286/8.0),

9532 
REAL_CONST
(13854.404489055134/8.0),

9533 
REAL_CONST
(13868.871951724283/8.0),

9534 
REAL_CONST
(13883.34318835034/8.0),

9535 
REAL_CONST
(13897.818196965914/8.0),

9536 
REAL_CONST
(13912.296975606168/8.0),

9537 
REAL_CONST
(13926.779522308825/8.0),

9538 
REAL_CONST
(13941.26583511416/8.0),

9539 
REAL_CONST
(13955.755912064991/8.0),

9540 
REAL_CONST
(13970.249751206682/8.0),

9541 
REAL_CONST
(13984.747350587126/8.0),

9542 
REAL_CONST
(13999.248708256751/8.0),

9543 
REAL_CONST
(14013.753822268511/8.0),

9544 
REAL_CONST
(14028.262690677873/8.0),

9545 
REAL_CONST
(14042.775311542828/8.0),

9546 
REAL_CONST
(14057.291682923867/8.0),

9547 
REAL_CONST
(14071.811802883994/8.0),

9548 
REAL_CONST
(14086.335669488704/8.0),

9549 
REAL_CONST
(14100.863280805994/8.0),

9550 
REAL_CONST
(14115.394634906341/8.0),

9551 
REAL_CONST
(14129.92972986271/8.0),

9552 
REAL_CONST
(14144.468563750548/8.0),

9553 
REAL_CONST
(14159.01113464777/8.0),

9554 
REAL_CONST
(14173.55744063476/8.0),

9555 
REAL_CONST
(14188.107479794369/8.0),

9556 
REAL_CONST
(14202.661250211901/8.0),

9557 
REAL_CONST
(14217.218749975118/8.0),

9558 
REAL_CONST
(14231.779977174227/8.0),

9559 
REAL_CONST
(14246.344929901879/8.0),

9560 
REAL_CONST
(14260.913606253163/8.0),

9561 
REAL_CONST
(14275.486004325601/8.0),

9562 
REAL_CONST
(14290.062122219146/8.0),

9563 
REAL_CONST
(14304.641958036171/8.0),

9564 
REAL_CONST
(14319.225509881464/8.0),

9565 
REAL_CONST
(14333.812775862236/8.0),

9566 
REAL_CONST
(14348.403754088098/8.0),

9567 
REAL_CONST
(14362.998442671067/8.0),

9568 
REAL_CONST
(14377.59683972556/8.0),

9569 
REAL_CONST
(14392.198943368388/8.0),

9570 
REAL_CONST
(14406.804751718748/8.0),

9571 
REAL_CONST
(14421.414262898223/8.0),

9572 
REAL_CONST
(14436.027475030774/8.0),

9573 
REAL_CONST
(14450.64438624274/8.0),

9574 
REAL_CONST
(14465.264994662828/8.0),

9575 
REAL_CONST
(14479.889298422106/8.0),

9576 
REAL_CONST
(14494.517295654005/8.0),

9577 
REAL_CONST
(14509.148984494313/8.0),

9578 
REAL_CONST
(14523.784363081166/8.0),

9579 
REAL_CONST
(14538.423429555049/8.0),

9580 
REAL_CONST
(14553.066182058781/8.0),

9581 
REAL_CONST
(14567.712618737527/8.0),

9582 
REAL_CONST
(14582.362737738777/8.0),

9583 
REAL_CONST
(14597.016537212348/8.0),

9584 
REAL_CONST
(14611.674015310382/8.0),

9585 
REAL_CONST
(14626.33517018734/8.0),

9586 
REAL_CONST
(14640.999999999993/8.0),

9587 
REAL_CONST
(14655.668502907418/8.0),

9588 
REAL_CONST
(14670.340677071003/8.0),

9589 
REAL_CONST
(14685.016520654426/8.0),

9590 
REAL_CONST
(14699.696031823671/8.0),

9591 
REAL_CONST
(14714.379208746999/8.0),

9592 
REAL_CONST
(14729.066049594967/8.0),

9593 
REAL_CONST
(14743.756552540408/8.0),

9594 
REAL_CONST
(14758.45071575843/8.0),

9595 
REAL_CONST
(14773.148537426418/8.0),

9596 
REAL_CONST
(14787.850015724018/8.0),

9597 
REAL_CONST
(14802.555148833142/8.0),

9598 
REAL_CONST
(14817.263934937961/8.0),

9599 
REAL_CONST
(14831.976372224897/8.0),

9600 
REAL_CONST
(14846.692458882624/8.0),

9601 
REAL_CONST
(14861.41219310206/8.0),

9602 
REAL_CONST
(14876.135573076363/8.0),

9603 
REAL_CONST
(14890.862597000923/8.0),

9604 
REAL_CONST
(14905.593263073371/8.0),

9605 
REAL_CONST
(14920.327569493558/8.0),

9606 
REAL_CONST
(14935.065514463557/8.0),

9607 
REAL_CONST
(14949.807096187662/8.0),

9608 
REAL_CONST
(14964.552312872382/8.0),

9609 
REAL_CONST
(14979.301162726431/8.0),

9610 
REAL_CONST
(14994.053643960735/8.0),

9611 
REAL_CONST
(15008.809754788414/8.0),

9612 
REAL_CONST
(15023.569493424788/8.0),

9613 
REAL_CONST
(15038.332858087369/8.0),

9614 
REAL_CONST
(15053.099846995858/8.0),

9615 
REAL_CONST
(15067.870458372134/8.0),

9616 
REAL_CONST
(15082.644690440264/8.0),

9617 
REAL_CONST
(15097.422541426484/8.0),

9618 
REAL_CONST
(15112.204009559202/8.0),

9619 
REAL_CONST
(15126.989093068994/8.0),

9620 
REAL_CONST
(15141.777790188597/8.0),

9621 
REAL_CONST
(15156.570099152905/8.0),

9622 
REAL_CONST
(15171.366018198967/8.0),

9623 
REAL_CONST
(15186.165545565986/8.0),

9624 
REAL_CONST
(15200.968679495301/8.0),

9625 
REAL_CONST
(15215.775418230402/8.0),

9626 
REAL_CONST
(15230.585760016909/8.0),

9627 
REAL_CONST
(15245.399703102579/8.0),

9628 
REAL_CONST
(15260.217245737298/8.0),

9629 
REAL_CONST
(15275.038386173073/8.0),

9630 
REAL_CONST
(15289.863122664035/8.0),

9631 
REAL_CONST
(15304.691453466432/8.0),

9632 
REAL_CONST
(15319.523376838621/8.0),

9633 
REAL_CONST
(15334.358891041069/8.0),

9634 
REAL_CONST
(15349.197994336346/8.0),

9635 
REAL_CONST
(15364.040684989128/8.0),

9636 
REAL_CONST
(15378.886961266177/8.0),

9637 
REAL_CONST
(15393.736821436356/8.0),

9638 
REAL_CONST
(15408.590263770609/8.0),

9639 
REAL_CONST
(15423.447286541972/8.0),

9640 
REAL_CONST
(15438.307888025554/8.0),

9641 
REAL_CONST
(15453.172066498542/8.0),

9642 
REAL_CONST
(15468.039820240196/8.0),

9643 
REAL_CONST
(15482.91114753184/8.0),

9644 
REAL_CONST
(15497.786046656869/8.0),

9645 
REAL_CONST
(15512.664515900733/8.0),

9646 
REAL_CONST
(15527.546553550939/8.0),

9647 
REAL_CONST
(15542.432157897045/8.0),

9648 
REAL_CONST
(15557.32132723066/8.0),

9649 
REAL_CONST
(15572.214059845435/8.0),

9650 
REAL_CONST
(15587.110354037064/8.0),

9651 
REAL_CONST
(15602.010208103273/8.0),

9652 
REAL_CONST
(15616.913620343823/8.0),

9653 
REAL_CONST
(15631.820589060506/8.0),

9654 
REAL_CONST
(15646.731112557136/8.0),

9655 
REAL_CONST
(15661.645189139546/8.0),

9656 
REAL_CONST
(15676.562817115593/8.0),

9657 
REAL_CONST
(15691.483994795139/8.0),

9658 
REAL_CONST
(15706.408720490062/8.0),

9659 
REAL_CONST
(15721.336992514242/8.0),

9660 
REAL_CONST
(15736.268809183561/8.0),

9661 
REAL_CONST
(15751.204168815901/8.0),

9662 
REAL_CONST
(15766.143069731135/8.0),

9663 
REAL_CONST
(15781.085510251132/8.0),

9664 
REAL_CONST
(15796.03148869974/8.0),

9665 
REAL_CONST
(15810.981003402798/8.0),

9666 
REAL_CONST
(15825.934052688119/8.0),

9667 
REAL_CONST
(15840.890634885489/8.0),

9668 
REAL_CONST
(15855.850748326673/8.0),

9669 
REAL_CONST
(15870.814391345401/8.0),

9670 
REAL_CONST
(15885.781562277361/8.0),

9671 
REAL_CONST
(15900.752259460214/8.0),

9672 
REAL_CONST
(15915.726481233565/8.0),

9673 
REAL_CONST
(15930.704225938984/8.0),

9674 
REAL_CONST
(15945.685491919978/8.0),

9675 
REAL_CONST
(15960.670277522009/8.0),

9676 
REAL_CONST
(15975.658581092481/8.0),

9677 
REAL_CONST
(15990.65040098073/8.0),

9678 
REAL_CONST
(16005.645735538035/8.0),

9679 
REAL_CONST
(16020.644583117599/8.0),

9680 
REAL_CONST
(16035.646942074556/8.0),

9681 
REAL_CONST
(16050.652810765967/8.0),

9682 
REAL_CONST
(16065.662187550806/8.0),

9683 
REAL_CONST
(16080.675070789974/8.0),

9684 
REAL_CONST
(16095.691458846273/8.0),

9685 
REAL_CONST
(16110.711350084424/8.0),

9686 
REAL_CONST
(16125.734742871053/8.0),

9687 
REAL_CONST
(16140.761635574685/8.0),

9688 
REAL_CONST
(16155.792026565747/8.0),

9689 
REAL_CONST
(16170.825914216561/8.0),

9690 
REAL_CONST
(16185.863296901338/8.0),

9691 
REAL_CONST
(16200.904172996183/8.0),

9692 
REAL_CONST
(16215.948540879079/8.0),

9693 
REAL_CONST
(16230.996398929899/8.0),

9694 
REAL_CONST
(16246.047745530386/8.0),

9695 
REAL_CONST
(16261.102579064163/8.0),

9696 
REAL_CONST
(16276.160897916721/8.0),

9697 
REAL_CONST
(16291.22270047542/8.0),

9698 
REAL_CONST
(16306.287985129484/8.0),

9699 
REAL_CONST
(16321.356750269995/8.0),

9700 
REAL_CONST
(16336.428994289896/8.0),

9701 
REAL_CONST
(16351.504715583982/8.0),

9702 
REAL_CONST
(16366.5839125489/8.0),

9703 
REAL_CONST
(16381.666583583141/8.0),

9704 
REAL_CONST
(16396.752727087041/8.0),

9705 
REAL_CONST
(16411.842341462776/8.0),

9706 
REAL_CONST
(16426.935425114363/8.0),

9707 
REAL_CONST
(16442.031976447644/8.0),

9708 
REAL_CONST
(16457.131993870298/8.0),

9709 
REAL_CONST
(16472.235475791829/8.0),

9710 
REAL_CONST
(16487.342420623561/8.0),

9711 
REAL_CONST
(16502.452826778641/8.0),

9712 
REAL_CONST
(16517.566692672033/8.0),

9713 
REAL_CONST
(16532.684016720516/8.0),

9714 
REAL_CONST
(16547.804797342676/8.0),

9715 
REAL_CONST
(16562.929032958902/8.0),

9716 
REAL_CONST
(16578.056721991394/8.0),

9717 
REAL_CONST
(16593.18786286415/8.0),

9718 
REAL_CONST
(16608.322454002962/8.0),

9719 
REAL_CONST
(16623.460493835417/8.0),

9720 
REAL_CONST
(16638.601980790896/8.0),

9721 
REAL_CONST
(16653.746913300558/8.0),

9722 
REAL_CONST
(16668.895289797354/8.0),

9723 
REAL_CONST
(16684.047108716015/8.0),

9724 
REAL_CONST
(16699.202368493046/8.0),

9725 
REAL_CONST
(16714.361067566726/8.0),

9726 
REAL_CONST
(16729.523204377107/8.0),

9727 
REAL_CONST
(16744.688777366009/8.0),

9728 
REAL_CONST
(16759.857784977012/8.0),

9729 
REAL_CONST
(16775.030225655464/8.0),

9730 
REAL_CONST
(16790.206097848466/8.0),

9731 
REAL_CONST
(16805.385400004874/8.0),

9732 
REAL_CONST
(16820.568130575302/8.0),

9733 
REAL_CONST
(16835.754288012104/8.0),

9734 
REAL_CONST
(16850.943870769381/8.0),

9735 
REAL_CONST
(16866.136877302983/8.0),

9736 
REAL_CONST
(16881.333306070494/8.0),

9737 
REAL_CONST
(16896.53315553123/8.0),

9738 
REAL_CONST
(16911.736424146249/8.0),

9739 
REAL_CONST
(16926.943110378332/8.0),

9740 
REAL_CONST
(16942.153212691992/8.0),

9741 
REAL_CONST
(16957.366729553454/8.0),

9742 
REAL_CONST
(16972.583659430682/8.0),

9743 
REAL_CONST
(16987.804000793338/8.0),

9744 
REAL_CONST
(17003.027752112816/8.0),

9745 
REAL_CONST
(17018.254911862205/8.0),

9746 
REAL_CONST
(17033.485478516312/8.0),

9747 
REAL_CONST
(17048.719450551645/8.0),

9748 
REAL_CONST
(17063.956826446421/8.0),

9749 
REAL_CONST
(17079.197604680547/8.0),

9750 
REAL_CONST
(17094.44178373563/8.0),

9751 
REAL_CONST
(17109.689362094967/8.0),

9752 
REAL_CONST
(17124.940338243552/8.0),

9753 
REAL_CONST
(17140.194710668064/8.0),

9754 
REAL_CONST
(17155.452477856852/8.0),

9755 
REAL_CONST
(17170.713638299967/8.0),

9756 
REAL_CONST
(17185.978190489128/8.0),

9757 
REAL_CONST
(17201.246132917724/8.0),

9758 
REAL_CONST
(17216.517464080825/8.0),

9759 
REAL_CONST
(17231.792182475165/8.0),

9760 
REAL_CONST
(17247.070286599141/8.0),

9761 
REAL_CONST
(17262.351774952826/8.0),

9762 
REAL_CONST
(17277.636646037936/8.0),

9763 
REAL_CONST
(17292.924898357855/8.0),

9764 
REAL_CONST
(17308.216530417623/8.0),

9765 
REAL_CONST
(17323.511540723921/8.0),

9766 
REAL_CONST
(17338.809927785089/8.0),

9767 
REAL_CONST
(17354.111690111105/8.0),

9768 
REAL_CONST
(17369.416826213594/8.0),

9769 
REAL_CONST
(17384.725334605821/8.0),

9770 
REAL_CONST
(17400.037213802683/8.0),

9771 
REAL_CONST
(17415.352462320716/8.0),

9772 
REAL_CONST
(17430.67107867809/8.0),

9773 
REAL_CONST
(17445.993061394587/8.0),

9774 
REAL_CONST
(17461.318408991636/8.0),

9775 
REAL_CONST
(17476.647119992274/8.0),

9776 
REAL_CONST
(17491.979192921168/8.0),

9777 
REAL_CONST
(17507.314626304586/8.0),

9778 
REAL_CONST
(17522.653418670423/8.0),

9779 
REAL_CONST
(17537.995568548187/8.0),

9780 
REAL_CONST
(17553.341074468986/8.0),

9781 
REAL_CONST
(17568.689934965536/8.0),

9782 
REAL_CONST
(17584.042148572156/8.0),

9783 
REAL_CONST
(17599.397713824768/8.0),

9784 
REAL_CONST
(17614.75662926089/8.0),

9785 
REAL_CONST
(17630.118893419625/8.0),

9786 
REAL_CONST
(17645.484504841683/8.0),

9787 
REAL_CONST
(17660.853462069354/8.0),

9788 
REAL_CONST
(17676.225763646511/8.0),

9789 
REAL_CONST
(17691.601408118619/8.0),

9790 
REAL_CONST
(17706.980394032718/8.0),

9791 
REAL_CONST
(17722.362719937424/8.0),

9792 
REAL_CONST
(17737.748384382936/8.0),

9793 
REAL_CONST
(17753.137385921014/8.0),

9794 
REAL_CONST
(17768.529723104999/8.0),

9795 
REAL_CONST
(17783.92539448979/8.0),

9796 
REAL_CONST
(17799.324398631856/8.0),

9797 
REAL_CONST
(17814.726734089225/8.0),

9798 
REAL_CONST
(17830.13239942148/8.0),

9799 
REAL_CONST
(17845.541393189767/8.0),

9800 
REAL_CONST
(17860.95371395678/8.0),

9801 
REAL_CONST
(17876.369360286772/8.0),

9802 
REAL_CONST
(17891.788330745527/8.0),

9803 
REAL_CONST
(17907.210623900395/8.0),

9804 
REAL_CONST
(17922.636238320254/8.0),

9805 
REAL_CONST
(17938.065172575527/8.0),

9806 
REAL_CONST
(17953.497425238176/8.0),

9807 
REAL_CONST
(17968.932994881692/8.0),

9808 
REAL_CONST
(17984.371880081104/8.0),

9809 
REAL_CONST
(17999.814079412972/8.0),

9810 
REAL_CONST
(18015.259591455371/8.0),

9811 
REAL_CONST
(18030.708414787914/8.0),

9812 
REAL_CONST
(18046.160547991731/8.0),

9813 
REAL_CONST
(18061.615989649465/8.0),

9814 
REAL_CONST
(18077.074738345284/8.0),

9815 
REAL_CONST
(18092.536792664861/8.0),

9816 
REAL_CONST
(18108.002151195393/8.0),

9817 
REAL_CONST
(18123.470812525571/8.0),

9818 
REAL_CONST
(18138.942775245599/8.0),

9819 
REAL_CONST
(18154.418037947191/8.0),

9820 
REAL_CONST
(18169.896599223546/8.0),

9821 
REAL_CONST
(18185.37845766938/8.0),

9822 
REAL_CONST
(18200.863611880886/8.0),

9823 
REAL_CONST
(18216.352060455767/8.0),

9824 
REAL_CONST
(18231.843801993204/8.0),

9825 
REAL_CONST
(18247.338835093873/8.0),

9826 
REAL_CONST
(18262.837158359936/8.0),

9827 
REAL_CONST
(18278.338770395032/8.0),

9828 
REAL_CONST
(18293.84366980429/8.0),

9829 
REAL_CONST
(18309.351855194309/8.0),

9830 
REAL_CONST
(18324.863325173166/8.0),

9831 
REAL_CONST
(18340.378078350412/8.0),

9832 
REAL_CONST
(18355.896113337069/8.0),

9833 
REAL_CONST
(18371.417428745623/8.0),

9834 
REAL_CONST
(18386.942023190033/8.0),

9835 
REAL_CONST
(18402.469895285718/8.0),

9836 
REAL_CONST
(18418.00104364955/8.0),

9837 
REAL_CONST
(18433.53546689987/8.0),

9838 
REAL_CONST
(18449.073163656474/8.0),

9839 
REAL_CONST
(18464.614132540602/8.0),

9840 
REAL_CONST
(18480.158372174956/8.0),

9841 
REAL_CONST
(18495.705881183676/8.0),

9842 
REAL_CONST
(18511.256658192357/8.0),

9843 
REAL_CONST
(18526.810701828035/8.0),

9844 
REAL_CONST
(18542.368010719183/8.0),

9845 
REAL_CONST
(18557.928583495715/8.0),

9846 
REAL_CONST
(18573.492418788985/8.0),

9847 
REAL_CONST
(18589.059515231773/8.0),

9848 
REAL_CONST
(18604.629871458303/8.0),

9849 
REAL_CONST
(18620.203486104212/8.0),

9850 
REAL_CONST
(18635.78035780658/8.0),

9851 
REAL_CONST
(18651.360485203899/8.0),

9852 
REAL_CONST
(18666.943866936086/8.0),

9853 
REAL_CONST
(18682.53050164448/8.0),

9854 
REAL_CONST
(18698.120387971841/8.0),

9855 
REAL_CONST
(18713.713524562332/8.0),

9856 
REAL_CONST
(18729.30991006154/8.0),

9857 
REAL_CONST
(18744.909543116457/8.0),

9858 
REAL_CONST
(18760.512422375479/8.0),

9859 
REAL_CONST
(18776.118546488418/8.0),

9860 
REAL_CONST
(18791.727914106479/8.0),

9861 
REAL_CONST
(18807.340523882274/8.0),

9862 
REAL_CONST
(18822.95637446981/8.0),

9863 
REAL_CONST
(18838.575464524489/8.0),

9864 
REAL_CONST
(18854.197792703111/8.0),

9865 
REAL_CONST
(18869.823357663863/8.0),

9866 
REAL_CONST
(18885.452158066328/8.0),

9867 
REAL_CONST
(18901.08419257147/8.0),

9868 
REAL_CONST
(18916.719459841639/8.0),

9869 
REAL_CONST
(18932.357958540564/8.0),

9870 
REAL_CONST
(18947.999687333362/8.0),

9871 
REAL_CONST
(18963.644644886521/8.0),

9872 
REAL_CONST
(18979.292829867907/8.0),

9873 
REAL_CONST
(18994.944240946759/8.0),

9874 
REAL_CONST
(19010.598876793687/8.0),

9875 
REAL_CONST
(19026.256736080668/8.0),

9876 
REAL_CONST
(19041.917817481048/8.0),

9877 
REAL_CONST
(19057.582119669532/8.0),

9878 
REAL_CONST
(19073.2496413222/8.0),

9879 
REAL_CONST
(19088.920381116473/8.0),

9880 
REAL_CONST
(19104.594337731145/8.0),

9881 
REAL_CONST
(19120.271509846356/8.0),

9882 
REAL_CONST
(19135.951896143604/8.0),

9883 
REAL_CONST
(19151.635495305738/8.0),

9884 
REAL_CONST
(19167.322306016948/8.0),

9885 
REAL_CONST
(19183.012326962784/8.0),

9886 
REAL_CONST
(19198.705556830122/8.0),

9887 
REAL_CONST
(19214.401994307198/8.0),

9888 
REAL_CONST
(19230.101638083579/8.0),

9889 
REAL_CONST
(19245.804486850167/8.0),

9890 
REAL_CONST
(19261.510539299208/8.0),

9891 
REAL_CONST
(19277.219794124274/8.0),

9892 
REAL_CONST
(19292.932250020265/8.0),

9893 
REAL_CONST
(19308.647905683421/8.0),

9894 
REAL_CONST
(19324.366759811302/8.0),

9895 
REAL_CONST
(19340.088811102793/8.0),

9896 
REAL_CONST
(19355.8140582581/8.0),

9897 
REAL_CONST
(19371.542499978754/8.0),

9898 
REAL_CONST
(19387.2741349676/8.0),

9899 
REAL_CONST
(19403.008961928797/8.0),

9900 
REAL_CONST
(19418.746979567823/8.0),

9901 
REAL_CONST
(19434.488186591469/8.0),

9902 
REAL_CONST
(19450.232581707827/8.0),

9903 
REAL_CONST
(19465.980163626304/8.0),

9904 
REAL_CONST
(19481.730931057613/8.0),

9905 
REAL_CONST
(19497.484882713761/8.0),

9906 
REAL_CONST
(19513.242017308068/8.0),

9907 
REAL_CONST
(19529.002333555141/8.0),

9908 
REAL_CONST
(19544.765830170898/8.0),

9909 
REAL_CONST
(19560.532505872539/8.0),

9910 
REAL_CONST
(19576.302359378566/8.0),

9911 
REAL_CONST
(19592.075389408761/8.0),

9912 
REAL_CONST
(19607.851594684209/8.0),

9913 
REAL_CONST
(19623.630973927269/8.0),

9914 
REAL_CONST
(19639.41352586159/8.0),

9915 
REAL_CONST
(19655.199249212103/8.0),

9916 
REAL_CONST
(19670.988142705017/8.0),

9917 
REAL_CONST
(19686.780205067826/8.0),

9918 
REAL_CONST
(19702.575435029288/8.0),

9919 
REAL_CONST
(19718.373831319448/8.0),

9920 
REAL_CONST
(19734.175392669615/8.0),

9921 
REAL_CONST
(19749.980117812371/8.0),

9922 
REAL_CONST
(19765.788005481569/8.0),

9923 
REAL_CONST
(19781.599054412323/8.0),

9924 
REAL_CONST
(19797.413263341008/8.0),

9925 
REAL_CONST
(19813.230631005274/8.0),

9926 
REAL_CONST
(19829.051156144014/8.0),

9927 
REAL_CONST
(19844.874837497395/8.0),

9928 
REAL_CONST
(19860.701673806827/8.0),

9929 
REAL_CONST
(19876.531663814985/8.0),

9930 
REAL_CONST
(19892.364806265789/8.0),

9931 
REAL_CONST
(19908.201099904403/8.0),

9932 
REAL_CONST
(19924.040543477258/8.0),

9933 
REAL_CONST
(19939.883135732012/8.0),

9934 
REAL_CONST
(19955.728875417579/8.0),

9935 
REAL_CONST
(19971.577761284105/8.0),

9936 
REAL_CONST
(19987.429792082985/8.0),

9937 
REAL_CONST
(20003.284966566847/8.0),

9938 
REAL_CONST
(20019.14328348956/8.0),

9939 
REAL_CONST
(20035.004741606219/8.0),

9940 
REAL_CONST
(20050.869339673161/8.0),

9941 
REAL_CONST
(20066.737076447946/8.0),

9942 
REAL_CONST
(20082.607950689362/8.0),

9943 
REAL_CONST
(20098.481961157428/8.0),

9944 
REAL_CONST
(20114.359106613385/8.0),

9945 
REAL_CONST
(20130.239385819699/8.0),

9946 
REAL_CONST
(20146.122797540058/8.0),

9947 
REAL_CONST
(20162.009340539353/8.0),

9948 
REAL_CONST
(20177.899013583716/8.0),

9949 
REAL_CONST
(20193.791815440476/8.0),

9950 
REAL_CONST
(20209.687744878182/8.0),

9951 
REAL_CONST
(20225.586800666591/8.0),

9952 
REAL_CONST
(20241.488981576669/8.0),

9953 
REAL_CONST
(20257.394286380597/8.0),

9954 
REAL_CONST
(20273.302713851754/8.0),

9955 
REAL_CONST
(20289.214262764715/8.0),

9956 
REAL_CONST
(20305.128931895277/8.0),

9957 
REAL_CONST
(20321.046720020415/8.0),

9958 
REAL_CONST
(20336.967625918318/8.0),

9959 
REAL_CONST
(20352.891648368361/8.0),

9960 
REAL_CONST
(20368.818786151114/8.0),

9961 
REAL_CONST
(20384.749038048347/8.0),

9962 
REAL_CONST
(20400.682402843009/8.0),

9963 
REAL_CONST
(20416.618879319249/8.0),

9964 
REAL_CONST
(20432.558466262391/8.0),

9965 
REAL_CONST
(20448.501162458953/8.0),

9966 
REAL_CONST
(20464.446966696629/8.0),

9967 
REAL_CONST
(20480.395877764302/8.0),

9968 
REAL_CONST
(20496.347894452025/8.0),

9969 
REAL_CONST
(20512.303015551031/8.0),

9970 
REAL_CONST
(20528.261239853735/8.0),

9971 
REAL_CONST
(20544.22256615372/8.0),

9972 
REAL_CONST
(20560.186993245738/8.0),

9973 
REAL_CONST
(20576.15451992572/8.0),

9974 
REAL_CONST
(20592.125144990758/8.0),

9975 
REAL_CONST
(20608.098867239107/8.0),

9976 
REAL_CONST
(20624.075685470198/8.0),

9977 
REAL_CONST
(20640.055598484618/8.0),

9978 
REAL_CONST
(20656.038605084115/8.0),

9979 
REAL_CONST
(20672.024704071595/8.0),

9980 
REAL_CONST
(20688.013894251126/8.0),

9981 
REAL_CONST
(20704.006174427926/8.0),

9982 
REAL_CONST
(20720.001543408373/8.0),

9983 
REAL_CONST
(20735.999999999989/8.0),

9984 
REAL_CONST
(20752.001543011454/8.0),

9985 
REAL_CONST
(20768.006171252597/8.0),

9986 
REAL_CONST
(20784.013883534382/8.0),

9987 
REAL_CONST
(20800.024678668931/8.0),

9988 
REAL_CONST
(20816.038555469506/8.0),

9989 
REAL_CONST
(20832.055512750507/8.0),

9990 
REAL_CONST
(20848.075549327474/8.0),

9991 
REAL_CONST
(20864.098664017085/8.0),

9992 
REAL_CONST
(20880.124855637161/8.0),

9993 
REAL_CONST
(20896.154123006647/8.0),

9994 
REAL_CONST
(20912.186464945626/8.0),

9995 
REAL_CONST
(20928.221880275312/8.0),

9996 
REAL_CONST
(20944.260367818049/8.0),

9997 
REAL_CONST
(20960.301926397311/8.0),

9998 
REAL_CONST
(20976.346554837684/8.0),

9999 
REAL_CONST
(20992.394251964895/8.0),

10000 
REAL_CONST
(21008.445016605787/8.0),

10001 
REAL_CONST
(21024.498847588318/8.0),

10002 
REAL_CONST
(21040.555743741574/8.0),

10003 
REAL_CONST
(21056.615703895754/8.0),

10004 
REAL_CONST
(21072.678726882168/8.0),

10005 
REAL_CONST
(21088.744811533252/8.0),

10006 
REAL_CONST
(21104.813956682538/8.0),

10007 
REAL_CONST
(21120.886161164683/8.0),

10008 
REAL_CONST
(21136.961423815443/8.0),

10009 
REAL_CONST
(21153.039743471683/8.0),

10010 
REAL_CONST
(21169.121118971379/8.0),

10011 
REAL_CONST
(21185.205549153605/8.0),

10012 
REAL_CONST
(21201.293032858535/8.0),

10013 
REAL_CONST
(21217.383568927453/8.0),

10014 
REAL_CONST
(21233.477156202731/8.0),

10015 
REAL_CONST
(21249.573793527841/8.0),

10016 
REAL_CONST
(21265.673479747358/8.0),

10017 
REAL_CONST
(21281.776213706937/8.0),

10018 
REAL_CONST
(21297.881994253334/8.0),

10019 
REAL_CONST
(21313.990820234398/8.0),

10020 
REAL_CONST
(21330.102690499054/8.0),

10021 
REAL_CONST
(21346.21760389733/8.0),

10022 
REAL_CONST
(21362.335559280327/8.0),

10023 
REAL_CONST
(21378.456555500241/8.0),

10024 
REAL_CONST
(21394.580591410333/8.0),

10025 
REAL_CONST
(21410.707665864964/8.0),

10026 
REAL_CONST
(21426.83777771956/8.0),

10027 
REAL_CONST
(21442.970925830628/8.0),

10028 
REAL_CONST
(21459.107109055756/8.0),

10029 
REAL_CONST
(21475.246326253604/8.0),

10030 
REAL_CONST
(21491.388576283895/8.0),

10031 
REAL_CONST
(21507.533858007431/8.0),

10032 
REAL_CONST
(21523.682170286087/8.0),

10033 
REAL_CONST
(21539.833511982797/8.0),

10034 
REAL_CONST
(21555.987881961566/8.0),

10035 
REAL_CONST
(21572.145279087465/8.0),

10036 
REAL_CONST
(21588.305702226615/8.0),

10037 
REAL_CONST
(21604.469150246216/8.0),

10038 
REAL_CONST
(21620.635622014521/8.0),

10039 
REAL_CONST
(21636.805116400832/8.0),

10040 
REAL_CONST
(21652.977632275521/8.0),

10041 
REAL_CONST
(21669.153168510009/8.0),

10042 
REAL_CONST
(21685.331723976764/8.0),

10043 
REAL_CONST
(21701.513297549318/8.0),

10044 
REAL_CONST
(21717.697888102244/8.0),

10045 
REAL_CONST
(21733.885494511167/8.0),

10046 
REAL_CONST
(21750.076115652759/8.0),

10047 
REAL_CONST
(21766.269750404736/8.0),

10048 
REAL_CONST
(21782.466397645861/8.0),

10049 
REAL_CONST
(21798.666056255934/8.0),

10050 
REAL_CONST
(21814.868725115801/8.0),

10051 
REAL_CONST
(21831.074403107345/8.0),

10052 
REAL_CONST
(21847.283089113484/8.0),

10053 
REAL_CONST
(21863.494782018177/8.0),

10054 
REAL_CONST
(21879.709480706417/8.0),

10055 
REAL_CONST
(21895.927184064229/8.0),

10056 
REAL_CONST
(21912.147890978667/8.0),

10057 
REAL_CONST
(21928.371600337818/8.0),

10058 
REAL_CONST
(21944.598311030797/8.0),

10059 
REAL_CONST
(21960.828021947746/8.0),

10060 
REAL_CONST
(21977.060731979829/8.0),

10061 
REAL_CONST
(21993.296440019243/8.0),

10062 
REAL_CONST
(22009.535144959198/8.0),

10063 
REAL_CONST
(22025.77684569393/8.0),

10064 
REAL_CONST
(22042.021541118691/8.0),

10065 
REAL_CONST
(22058.269230129757/8.0),

10066 
REAL_CONST
(22074.519911624411/8.0),

10067 
REAL_CONST
(22090.773584500959/8.0),

10068 
REAL_CONST
(22107.030247658717/8.0),

10069 
REAL_CONST
(22123.289899998013/8.0),

10070 
REAL_CONST
(22139.552540420187/8.0),

10071 
REAL_CONST
(22155.818167827587/8.0),

10072 
REAL_CONST
(22172.086781123569/8.0),

10073 
REAL_CONST
(22188.358379212495/8.0),

10074 
REAL_CONST
(22204.632960999726/8.0),

10075 
REAL_CONST
(22220.910525391639/8.0),

10076 
REAL_CONST
(22237.191071295601/8.0),

10077 
REAL_CONST
(22253.474597619981/8.0),

10078 
REAL_CONST
(22269.761103274148/8.0),

10079 
REAL_CONST
(22286.050587168469/8.0),

10080 
REAL_CONST
(22302.343048214312/8.0),

10081 
REAL_CONST
(22318.638485324027/8.0),

10082 
REAL_CONST
(22334.936897410968/8.0),

10083 
REAL_CONST
(22351.23828338947/8.0),

10084 
REAL_CONST
(22367.542642174871/8.0),

10085 
REAL_CONST
(22383.849972683485/8.0),

10086 
REAL_CONST
(22400.160273832618/8.0),

10087 
REAL_CONST
(22416.473544540564/8.0),

10088 
REAL_CONST
(22432.789783726603/8.0),

10089 
REAL_CONST
(22449.108990310986/8.0),

10090 
REAL_CONST
(22465.431163214958/8.0),

10091 
REAL_CONST
(22481.75630136074/8.0),

10092 
REAL_CONST
(22498.084403671528/8.0),

10093 
REAL_CONST
(22514.415469071497/8.0),

10094 
REAL_CONST
(22530.749496485802/8.0),

10095 
REAL_CONST
(22547.086484840562/8.0),

10096 
REAL_CONST
(22563.426433062879/8.0),

10097 
REAL_CONST
(22579.769340080824/8.0),

10098 
REAL_CONST
(22596.115204823436/8.0),

10099 
REAL_CONST
(22612.464026220721/8.0),

10100 
REAL_CONST
(22628.815803203655/8.0),

10101 
REAL_CONST
(22645.170534704179/8.0),

10102 
REAL_CONST
(22661.5282196552/8.0),

10103 
REAL_CONST
(22677.888856990587/8.0),

10104 
REAL_CONST
(22694.252445645168/8.0),

10105 
REAL_CONST
(22710.618984554734/8.0),

10106 
REAL_CONST
(22726.988472656034/8.0),

10107 
REAL_CONST
(22743.360908886778/8.0),

10108 
REAL_CONST
(22759.736292185622/8.0),

10109 
REAL_CONST
(22776.114621492186/8.0),

10110 
REAL_CONST
(22792.495895747044/8.0),

10111 
REAL_CONST
(22808.880113891719/8.0),

10112 
REAL_CONST
(22825.267274868678/8.0),

10113 
REAL_CONST
(22841.657377621348/8.0),

10114 
REAL_CONST
(22858.050421094096/8.0),

10115 
REAL_CONST
(22874.446404232243/8.0),

10116 
REAL_CONST
(22890.845325982053/8.0),

10117 
REAL_CONST
(22907.247185290722/8.0),

10118 
REAL_CONST
(22923.651981106406/8.0),

10119 
REAL_CONST
(22940.059712378195/8.0),

10120 
REAL_CONST
(22956.470378056114/8.0),

10121 
REAL_CONST
(22972.883977091129/8.0),

10122 
REAL_CONST
(22989.300508435153/8.0),

10123 
REAL_CONST
(23005.719971041017/8.0),

10124 
REAL_CONST
(23022.142363862498/8.0),

10125 
REAL_CONST
(23038.567685854305/8.0),

10126 
REAL_CONST
(23054.995935972078/8.0),

10127 
REAL_CONST
(23071.427113172387/8.0),

10128 
REAL_CONST
(23087.86121641273/8.0),

10129 
REAL_CONST
(23104.298244651531/8.0),

10130 
REAL_CONST
(23120.738196848146/8.0),

10131 
REAL_CONST
(23137.181071962848/8.0),

10132 
REAL_CONST
(23153.626868956846/8.0),

10133 
REAL_CONST
(23170.075586792263/8.0),

10134 
REAL_CONST
(23186.527224432142/8.0),

10135 
REAL_CONST
(23202.981780840448/8.0),

10136 
REAL_CONST
(23219.439254982066/8.0),

10137 
REAL_CONST
(23235.899645822796/8.0),

10138 
REAL_CONST
(23252.362952329357/8.0),

10139 
REAL_CONST
(23268.829173469378/8.0),

10140 
REAL_CONST
(23285.298308211408/8.0),

10141 
REAL_CONST
(23301.770355524899/8.0),

10142 
REAL_CONST
(23318.245314380223/8.0),

10143 
REAL_CONST
(23334.723183748658/8.0),

10144 
REAL_CONST
(23351.203962602387/8.0),

10145 
REAL_CONST
(23367.687649914504/8.0),

10146 
REAL_CONST
(23384.174244659007/8.0),

10147 
REAL_CONST
(23400.663745810798/8.0),

10148 
REAL_CONST
(23417.15615234568/8.0),

10149 
REAL_CONST
(23433.651463240367/8.0),

10150 
REAL_CONST
(23450.149677472462/8.0),

10151 
REAL_CONST
(23466.650794020472/8.0),

10152 
REAL_CONST
(23483.154811863806/8.0),

10153 
REAL_CONST
(23499.661729982763/8.0),

10154 
REAL_CONST
(23516.171547358543/8.0),

10155 
REAL_CONST
(23532.684262973235/8.0),

10156 
REAL_CONST
(23549.199875809823/8.0),

10157 
REAL_CONST
(23565.718384852185/8.0),

10158 
REAL_CONST
(23582.239789085092/8.0),

10159 
REAL_CONST
(23598.764087494197/8.0),

10160 
REAL_CONST
(23615.291279066041/8.0),

10161 
REAL_CONST
(23631.821362788058/8.0),

10162 
REAL_CONST
(23648.354337648565/8.0),

10163 
REAL_CONST
(23664.890202636761/8.0),

10164 
REAL_CONST
(23681.428956742733/8.0),

10165 
REAL_CONST
(23697.970598957443/8.0),

10166 
REAL_CONST
(23714.515128272738/8.0),

10167 
REAL_CONST
(23731.062543681343/8.0),

10168 
REAL_CONST
(23747.612844176863/8.0),

10169 
REAL_CONST
(23764.166028753778/8.0),

10170 
REAL_CONST
(23780.72209640744/8.0),

10171 
REAL_CONST
(23797.281046134085/8.0),

10172 
REAL_CONST
(23813.842876930816/8.0),

10173 
REAL_CONST
(23830.407587795606/8.0),

10174 
REAL_CONST
(23846.975177727301/8.0),

10175 
REAL_CONST
(23863.545645725622/8.0),

10176 
REAL_CONST
(23880.11899079115/8.0),

10177 
REAL_CONST
(23896.695211925336/8.0),

10178 
REAL_CONST
(23913.274308130498/8.0),

10179 
REAL_CONST
(23929.856278409821/8.0),

10180 
REAL_CONST
(23946.441121767348/8.0),

10181 
REAL_CONST
(23963.028837207989/8.0),

10182 
REAL_CONST
(23979.619423737513/8.0),

10183 
REAL_CONST
(23996.212880362549/8.0),

10184 
REAL_CONST
(24012.809206090584/8.0),

10185 
REAL_CONST
(24029.408399929966/8.0),

10186 
REAL_CONST
(24046.010460889898/8.0),

10187 
REAL_CONST
(24062.615387980433/8.0),

10188 
REAL_CONST
(24079.223180212492/8.0),

10189 
REAL_CONST
(24095.833836597827/8.0),

10190 
REAL_CONST
(24112.447356149063/8.0),

10191 
REAL_CONST
(24129.063737879667/8.0),

10192 
REAL_CONST
(24145.682980803951/8.0),

10193 
REAL_CONST
(24162.305083937081/8.0),

10194 
REAL_CONST
(24178.930046295067/8.0),

10195 
REAL_CONST
(24195.557866894767/8.0),

10196 
REAL_CONST
(24212.188544753884/8.0),

10197 
REAL_CONST
(24228.822078890964/8.0),

10198 
REAL_CONST
(24245.458468325389/8.0),

10199 
REAL_CONST
(24262.097712077397/8.0),

10200 
REAL_CONST
(24278.739809168052/8.0),

10201 
REAL_CONST
(24295.384758619261/8.0),

10202 
REAL_CONST
(24312.032559453768/8.0),

10203 
REAL_CONST
(24328.683210695162/8.0),

10204 
REAL_CONST
(24345.336711367858/8.0),

10205 
REAL_CONST
(24361.993060497109/8.0),

10206 
REAL_CONST
(24378.652257108995/8.0),

10207 
REAL_CONST
(24395.314300230442/8.0),

10208 
REAL_CONST
(24411.979188889192/8.0),

10209 
REAL_CONST
(24428.646922113825/8.0),

10210 
REAL_CONST
(24445.317498933746/8.0),

10211 
REAL_CONST
(24461.990918379193/8.0),

10212 
REAL_CONST
(24478.667179481225/8.0),

10213 
REAL_CONST
(24495.346281271726/8.0),

10214 
REAL_CONST
(24512.028222783407/8.0),

10215 
REAL_CONST
(24528.713003049801/8.0),

10216 
REAL_CONST
(24545.400621105266/8.0),

10217 
REAL_CONST
(24562.091075984976/8.0),

10218 
REAL_CONST
(24578.784366724925/8.0),

10219 
REAL_CONST
(24595.480492361927/8.0),

10220 
REAL_CONST
(24612.179451933614/8.0),

10221 
REAL_CONST
(24628.881244478438/8.0),

10222 
REAL_CONST
(24645.585869035654/8.0),

10223 
REAL_CONST
(24662.293324645343/8.0),

10224 
REAL_CONST
(24679.003610348394/8.0),

10225 
REAL_CONST
(24695.716725186514/8.0),

10226 
REAL_CONST
(24712.432668202211/8.0),

10227 
REAL_CONST
(24729.151438438807/8.0),

10228 
REAL_CONST
(24745.873034940436/8.0),

10229 
REAL_CONST
(24762.597456752032/8.0),

10230 
REAL_CONST
(24779.324702919344/8.0),

10231 
REAL_CONST
(24796.054772488926/8.0),

10232 
REAL_CONST
(24812.787664508123/8.0),

10233 
REAL_CONST
(24829.5233780251/8.0),

10234 
REAL_CONST
(24846.261912088819/8.0),

10235 
REAL_CONST
(24863.003265749034/8.0),

10236 
REAL_CONST
(24879.747438056307/8.0),

10237 
REAL_CONST
(24896.494428062004/8.0),

10238 
REAL_CONST
(24913.244234818278/8.0),

10239 
REAL_CONST
(24929.996857378079/8.0),

10240 
REAL_CONST
(24946.752294795166/8.0),

10241 
REAL_CONST
(24963.510546124078/8.0),

10242 
REAL_CONST
(24980.271610420157/8.0),

10243 
REAL_CONST
(24997.035486739525/8.0),

10244 
REAL_CONST
(25013.802174139113/8.0),

10245 
REAL_CONST
(25030.571671676629/8.0),

10246 
REAL_CONST
(25047.343978410572/8.0),

10247 
REAL_CONST
(25064.119093400237/8.0),

10248 
REAL_CONST
(25080.897015705697/8.0),

10249 
REAL_CONST
(25097.677744387816/8.0),

10250 
REAL_CONST
(25114.461278508239/8.0),

10251 
REAL_CONST
(25131.2476171294/8.0),

10252 
REAL_CONST
(25148.036759314517/8.0),

10253 
REAL_CONST
(25164.828704127583/8.0),

10254 
REAL_CONST
(25181.623450633375/8.0),

10255 
REAL_CONST
(25198.42099789745/8.0),

10256 
REAL_CONST
(25215.221344986145/8.0),

10257 
REAL_CONST
(25232.024490966574/8.0),

10258 
REAL_CONST
(25248.830434906627/8.0),

10259 
REAL_CONST
(25265.639175874974/8.0),

10260 
REAL_CONST
(25282.450712941049/8.0),

10261 
REAL_CONST
(25299.265045175071/8.0),

10262 
REAL_CONST
(25316.082171648024/8.0),

10263 
REAL_CONST
(25332.902091431668/8.0),

10264 
REAL_CONST
(25349.724803598532/8.0),

10265 
REAL_CONST
(25366.550307221914/8.0),

10266 
REAL_CONST
(25383.378601375884/8.0),

10267 
REAL_CONST
(25400.209685135269/8.0),

10268 
REAL_CONST
(25417.043557575678/8.0),

10269 
REAL_CONST
(25433.880217773472/8.0),

10270 
REAL_CONST
(25450.719664805783/8.0),

10271 
REAL_CONST
(25467.561897750507/8.0),

10272 
REAL_CONST
(25484.406915686297/8.0),

10273 
REAL_CONST
(25501.254717692573/8.0),

10274 
REAL_CONST
(25518.105302849512/8.0),

10275 
REAL_CONST
(25534.958670238051/8.0),

10276 
REAL_CONST
(25551.814818939893/8.0),

10277 
REAL_CONST
(25568.67374803748/8.0),

10278 
REAL_CONST
(25585.535456614027/8.0),

10279 
REAL_CONST
(25602.399943753502/8.0),

10280 
REAL_CONST
(25619.267208540619/8.0),

10281 
REAL_CONST
(25636.137250060852/8.0),

10282 
REAL_CONST
(25653.010067400432/8.0),

10283 
REAL_CONST
(25669.885659646327/8.0),

10284 
REAL_CONST
(25686.76402588627/8.0),

10285 
REAL_CONST
(25703.645165208734/8.0),

10286 
REAL_CONST
(25720.529076702944/8.0),

10287 
REAL_CONST
(25737.415759458876/8.0),

10288 
REAL_CONST
(25754.305212567244/8.0),

10289 
REAL_CONST
(25771.197435119517/8.0),

10290 
REAL_CONST
(25788.092426207899/8.0),

10291 
REAL_CONST
(25804.990184925344/8.0),

10292 
REAL_CONST
(25821.890710365547/8.0),

10293 
REAL_CONST
(25838.794001622944/8.0),

10294 
REAL_CONST
(25855.700057792714/8.0),

10295 
REAL_CONST
(25872.608877970775/8.0),

10296 
REAL_CONST
(25889.520461253778/8.0),

10297 
REAL_CONST
(25906.434806739118/8.0),

10298 
REAL_CONST
(25923.351913524923/8.0),

10299 
REAL_CONST
(25940.271780710063/8.0),

10300 
REAL_CONST
(25957.194407394138/8.0),

10301 
REAL_CONST
(25974.11979267748/8.0),

10302 
REAL_CONST
(25991.047935661154/8.0),

10303 
REAL_CONST
(26007.978835446964/8.0),

10304 
REAL_CONST
(26024.912491137442/8.0),

10305 
REAL_CONST
(26041.848901835841/8.0),

10306 
REAL_CONST
(26058.788066646157/8.0),

10307 
REAL_CONST
(26075.729984673108/8.0),

10308 
REAL_CONST
(26092.674655022136/8.0),

10309 
REAL_CONST
(26109.622076799409/8.0),

10310 
REAL_CONST
(26126.572249111829/8.0),

10311 
REAL_CONST
(26143.525171067016/8.0),

10312 
REAL_CONST
(26160.480841773315/8.0),

10313 
REAL_CONST
(26177.43926033979/8.0),

10314 
REAL_CONST
(26194.400425876229/8.0),

10315 
REAL_CONST
(26211.364337493149/8.0),

10316 
REAL_CONST
(26228.330994301767/8.0),

10317 
REAL_CONST
(26245.30039541404/8.0),

10318 
REAL_CONST
(26262.272539942627/8.0),

10319 
REAL_CONST
(26279.247427000919/8.0),

10320 
REAL_CONST
(26296.225055703002/8.0),

10321 
REAL_CONST
(26313.205425163702/8.0),

10322 
REAL_CONST
(26330.188534498539/8.0),

10323 
REAL_CONST
(26347.174382823756/8.0),

10324 
REAL_CONST
(26364.162969256304/8.0),

10325 
REAL_CONST
(26381.154292913852/8.0),

10326 
REAL_CONST
(26398.148352914774/8.0),

10327 
REAL_CONST
(26415.145148378149/8.0),

10328 
REAL_CONST
(26432.144678423778/8.0),

10329 
REAL_CONST
(26449.146942172156/8.0),

10330 
REAL_CONST
(26466.151938744493/8.0),

10331 
REAL_CONST
(26483.159667262702/8.0),

10332 
REAL_CONST
(26500.170126849403/8.0),

10333 
REAL_CONST
(26517.183316627921/8.0),

10334 
REAL_CONST
(26534.199235722277/8.0),

10335 
REAL_CONST
(26551.217883257199/8.0),

10336 
REAL_CONST
(26568.239258358124/8.0),

10337 
REAL_CONST
(26585.263360151173/8.0),

10338 
REAL_CONST
(26602.290187763181/8.0),

10339 
REAL_CONST
(26619.319740321676/8.0),

10340 
REAL_CONST
(26636.352016954883/8.0),

10341 
REAL_CONST
(26653.387016791727/8.0),

10342 
REAL_CONST
(26670.424738961825/8.0),

10343 
REAL_CONST
(26687.465182595493/8.0),

10344 
REAL_CONST
(26704.508346823739/8.0),

10345 
REAL_CONST
(26721.554230778267/8.0),

10346 
REAL_CONST
(26738.602833591467/8.0),

10347 
REAL_CONST
(26755.65415439643/8.0),

10348 
REAL_CONST
(26772.708192326929/8.0),

10349 
REAL_CONST
(26789.764946517433/8.0),

10350 
REAL_CONST
(26806.824416103096/8.0),

10351 
REAL_CONST
(26823.886600219761/8.0),

10352 
REAL_CONST
(26840.95149800396/8.0),

10353 
REAL_CONST
(26858.019108592915/8.0),

10354 
REAL_CONST
(26875.089431124517/8.0),

10355 
REAL_CONST
(26892.162464737365/8.0),

10356 
REAL_CONST
(26909.238208570721/8.0),

10357 
REAL_CONST
(26926.316661764544/8.0),

10358 
REAL_CONST
(26943.397823459472/8.0),

10359 
REAL_CONST
(26960.481692796813/8.0),

10360 
REAL_CONST
(26977.568268918571/8.0),

10361 
REAL_CONST
(26994.657550967422/8.0),

10362 
REAL_CONST
(27011.749538086722/8.0),

10363 
REAL_CONST
(27028.844229420498/8.0),

10364 
REAL_CONST
(27045.941624113464/8.0),

10365 
REAL_CONST
(27063.041721311005/8.0),

10366 
REAL_CONST
(27080.144520159181/8.0),

10367 
REAL_CONST
(27097.250019804727/8.0),

10368 
REAL_CONST
(27114.35821939505/8.0),

10369 
REAL_CONST
(27131.469118078236/8.0),

10370 
REAL_CONST
(27148.582715003027/8.0),

10371 
REAL_CONST
(27165.699009318858/8.0),

10372 
REAL_CONST
(27182.818000175819/8.0),

10373 
REAL_CONST
(27199.939686724665/8.0),

10374 
REAL_CONST
(27217.064068116837/8.0),

10375 
REAL_CONST
(27234.191143504428/8.0),

10376 
REAL_CONST
(27251.320912040203/8.0),

10377 
REAL_CONST
(27268.453372877593/8.0),

10378 
REAL_CONST
(27285.588525170693/8.0),

10379 
REAL_CONST
(27302.726368074269/8.0),

10380 
REAL_CONST
(27319.866900743735/8.0),

10381 
REAL_CONST
(27337.010122335181/8.0),

10382 
REAL_CONST
(27354.156032005358/8.0),

10383 
REAL_CONST
(27371.304628911668/8.0),

10384 
REAL_CONST
(27388.455912212183/8.0),

10385 
REAL_CONST
(27405.609881065626/8.0),

10386 
REAL_CONST
(27422.766534631384/8.0),

10387 
REAL_CONST
(27439.925872069507/8.0),

10388 
REAL_CONST
(27457.087892540683/8.0),

10389 
REAL_CONST
(27474.252595206275/8.0),

10390 
REAL_CONST
(27491.419979228293/8.0),

10391 
REAL_CONST
(27508.5900437694/8.0),

10392 
REAL_CONST
(27525.762787992917/8.0),

10393 
REAL_CONST
(27542.93821106281/8.0),

10394 
REAL_CONST
(27560.116312143706/8.0),

10395 
REAL_CONST
(27577.297090400876/8.0),

10396 
REAL_CONST
(27594.480545000242/8.0),

10397 
REAL_CONST
(27611.666675108383/8.0),

10398 
REAL_CONST
(27628.855479892518/8.0),

10399 
REAL_CONST
(27646.046958520514/8.0),

10400 
REAL_CONST
(27663.241110160889/8.0),

10401 
REAL_CONST
(27680.437933982801/8.0),

10402 
REAL_CONST
(27697.637429156068/8.0),

10403 
REAL_CONST
(27714.839594851132/8.0),

10404 
REAL_CONST
(27732.04443023909/8.0),

10405 
REAL_CONST
(27749.251934491687/8.0),

10406 
REAL_CONST
(27766.462106781299/8.0),

10407 
REAL_CONST
(27783.674946280949/8.0),

10408 
REAL_CONST
(27800.890452164302/8.0),

10409 
REAL_CONST
(27818.108623605654/8.0),

10410 
REAL_CONST
(27835.329459779954/8.0),

10411 
REAL_CONST
(27852.55295986278/8.0),

10412 
REAL_CONST
(27869.779123030345/8.0),

10413 
REAL_CONST
(27887.007948459504/8.0),

10414 
REAL_CONST
(27904.239435327745/8.0),

10415 
REAL_CONST
(27921.473582813196/8.0),

10416 
REAL_CONST
(27938.710390094613/8.0),

10417 
REAL_CONST
(27955.949856351392/8.0),

10418 
REAL_CONST
(27973.19198076355/8.0),

10419 
REAL_CONST
(27990.436762511745/8.0),

10420 
REAL_CONST
(28007.684200777272/8.0),

10421 
REAL_CONST
(28024.934294742041/8.0),

10422 
REAL_CONST
(28042.187043588601/8.0),

10423 
REAL_CONST
(28059.442446500128/8.0),

10424 
REAL_CONST
(28076.700502660427/8.0),

10425 
REAL_CONST
(28093.961211253929/8.0),

10426 
REAL_CONST
(28111.224571465693/8.0),

10427 
REAL_CONST
(28128.490582481401/8.0),

10428 
REAL_CONST
(28145.759243487362/8.0),

10429 
REAL_CONST
(28163.030553670509/8.0),

10430 
REAL_CONST
(28180.304512218394/8.0),

10431 
REAL_CONST
(28197.581118319198/8.0),

10432 
REAL_CONST
(28214.860371161725/8.0),

10433 
REAL_CONST
(28232.14226993539/8.0),

10434 
REAL_CONST
(28249.42681383024/8.0),

10435 
REAL_CONST
(28266.71400203693/8.0),

10436 
REAL_CONST
(28284.003833746745/8.0),

10437 
REAL_CONST
(28301.296308151585/8.0),

10438 
REAL_CONST
(28318.591424443959/8.0),

10439 
REAL_CONST
(28335.889181817001/8.0),

10440 
REAL_CONST
(28353.189579464462/8.0),

10441 
REAL_CONST
(28370.492616580705/8.0),

10442 
REAL_CONST
(28387.798292360701/8.0),

10443 
REAL_CONST
(28405.106606000048/8.0),

10444 
REAL_CONST
(28422.417556694945/8.0),

10445 
REAL_CONST
(28439.731143642206/8.0),

10446 
REAL_CONST
(28457.047366039264/8.0),

10447 
REAL_CONST
(28474.366223084147/8.0),

10448 
REAL_CONST
(28491.687713975512/8.0),

10449 
REAL_CONST
(28509.011837912611/8.0),

10450 
REAL_CONST
(28526.338594095305/8.0),

10451 
REAL_CONST
(28543.667981724069/8.0),

10452 
REAL_CONST
(28560.999999999982/8.0),

10453 
REAL_CONST
(28578.334648124732/8.0),

10454 
REAL_CONST
(28595.671925300605/8.0),

10455 
REAL_CONST
(28613.011830730498/8.0),

10456 
REAL_CONST
(28630.354363617909/8.0),

10457 
REAL_CONST
(28647.699523166943/8.0),

10458 
REAL_CONST
(28665.0473085823/8.0),

10459 
REAL_CONST
(28682.397719069289/8.0),

10460 
REAL_CONST
(28699.750753833818/8.0),

10461 
REAL_CONST
(28717.10641208239/8.0),

10462 
REAL_CONST
(28734.464693022121/8.0),

10463 
REAL_CONST
(28751.825595860708/8.0),

10464 
REAL_CONST
(28769.189119806462/8.0),

10465 
REAL_CONST
(28786.55526406828/8.0),

10466 
REAL_CONST
(28803.924027855664/8.0),

10467 
REAL_CONST
(28821.295410378701/8.0),

10468 
REAL_CONST
(28838.669410848088/8.0),

10469 
REAL_CONST
(28856.046028475103/8.0),

10470 
REAL_CONST
(28873.425262471628/8.0),

10471 
REAL_CONST
(28890.80711205013/8.0),

10472 
REAL_CONST
(28908.191576423673/8.0),

10473 
REAL_CONST
(28925.578654805915/8.0),

10474 
REAL_CONST
(28942.968346411097/8.0),

10475 
REAL_CONST
(28960.360650454055/8.0),

10476 
REAL_CONST
(28977.755566150216/8.0),

10477 
REAL_CONST
(28995.153092715591/8.0),

10478 
REAL_CONST
(29012.553229366786/8.0),

10479 
REAL_CONST
(29029.955975320987/8.0),

10480 
REAL_CONST
(29047.361329795975/8.0),

10481 
REAL_CONST
(29064.769292010107/8.0),

10482 
REAL_CONST
(29082.179861182336/8.0),

10483 
REAL_CONST
(29099.593036532187/8.0),

10484 
REAL_CONST
(29117.00881727978/8.0),

10485 
REAL_CONST
(29134.427202645813/8.0),

10486 
REAL_CONST
(29151.848191851568/8.0),

10487 
REAL_CONST
(29169.271784118911/8.0),

10488 
REAL_CONST
(29186.697978670283/8.0),

10489 
REAL_CONST
(29204.126774728706/8.0),

10490 
REAL_CONST
(29221.55817151779/8.0),

10491 
REAL_CONST
(29238.992168261717/8.0),

10492 
REAL_CONST
(29256.42876418525/8.0),

10493 
REAL_CONST
(29273.867958513725/8.0),

10494 
REAL_CONST
(29291.309750473058/8.0),

10495 
REAL_CONST
(29308.754139289747/8.0),

10496 
REAL_CONST
(29326.201124190855/8.0),

10497 
REAL_CONST
(29343.65070440403/8.0),

10498 
REAL_CONST
(29361.102879157483/8.0),

10499 
REAL_CONST
(29378.557647680012/8.0),

10500 
REAL_CONST
(29396.015009200975/8.0),

10501 
REAL_CONST
(29413.474962950309/8.0),

10502 
REAL_CONST
(29430.937508158524/8.0),

10503 
REAL_CONST
(29448.402644056692/8.0),

10504 
REAL_CONST
(29465.870369876469/8.0),

10505 
REAL_CONST
(29483.340684850071/8.0),

10506 
REAL_CONST
(29500.81358821028/8.0),

10507 
REAL_CONST
(29518.289079190454/8.0),

10508 
REAL_CONST
(29535.767157024511/8.0),

10509 
REAL_CONST
(29553.247820946945/8.0),

10510 
REAL_CONST
(29570.731070192807/8.0),

10511 
REAL_CONST
(29588.216903997723/8.0),

10512 
REAL_CONST
(29605.70532159787/8.0),

10513 
REAL_CONST
(29623.19632223/8.0),

10514 
REAL_CONST
(29640.689905131429/8.0),

10515 
REAL_CONST
(29658.186069540028/8.0),

10516 
REAL_CONST
(29675.684814694236/8.0),

10517 
REAL_CONST
(29693.186139833047/8.0),

10518 
REAL_CONST
(29710.690044196028/8.0),

10519 
REAL_CONST
(29728.196527023298/8.0),

10520 
REAL_CONST
(29745.705587555527/8.0),

10521 
REAL_CONST
(29763.217225033964/8.0),

10522 
REAL_CONST
(29780.731438700397/8.0),

10523 
REAL_CONST
(29798.248227797183/8.0),

10524 
REAL_CONST
(29815.76759156723/8.0),

10525 
REAL_CONST
(29833.289529254005/8.0),

10526 
REAL_CONST
(29850.81404010153/8.0),

10527 
REAL_CONST
(29868.341123354381/8.0),

10528 
REAL_CONST
(29885.870778257693/8.0),

10529 
REAL_CONST
(29903.403004057145/8.0),

10530 
REAL_CONST
(29920.937799998974/8.0),

10531 
REAL_CONST
(29938.475165329975/8.0),

10532 
REAL_CONST
(29956.015099297485/8.0),

10533 
REAL_CONST
(29973.557601149394/8.0),

10534 
REAL_CONST
(29991.102670134147/8.0),

10535 
REAL_CONST
(30008.650305500738/8.0),

10536 
REAL_CONST
(30026.200506498706/8.0),

10537 
REAL_CONST
(30043.753272378144/8.0),

10538 
REAL_CONST
(30061.308602389683/8.0),

10539 
REAL_CONST
(30078.866495784507/8.0),

10540 
REAL_CONST
(30096.426951814352/8.0),

10541 
REAL_CONST
(30113.989969731494/8.0),

10542 
REAL_CONST
(30131.55554878875/8.0),

10543 
REAL_CONST
(30149.123688239491/8.0),

10544 
REAL_CONST
(30166.694387337629/8.0),

10545 
REAL_CONST
(30184.267645337608/8.0),

10546 
REAL_CONST
(30201.843461494434/8.0),

10547 
REAL_CONST
(30219.42183506364/8.0),

10548 
REAL_CONST
(30237.002765301309/8.0),

10549 
REAL_CONST
(30254.586251464058/8.0),

10550 
REAL_CONST
(30272.172292809046/8.0),

10551 
REAL_CONST
(30289.760888593977/8.0),

10552 
REAL_CONST
(30307.35203807709/8.0),

10553 
REAL_CONST
(30324.94574051716/8.0),

10554 
REAL_CONST
(30342.541995173502/8.0),

10555 
REAL_CONST
(30360.140801305966/8.0),

10556 
REAL_CONST
(30377.742158174944/8.0),

10557 
REAL_CONST
(30395.346065041358/8.0),

10558 
REAL_CONST
(30412.952521166666/8.0),

10559 
REAL_CONST
(30430.561525812864/8.0),

10560 
REAL_CONST
(30448.173078242475/8.0),

10561 
REAL_CONST
(30465.787177718561/8.0),

10562 
REAL_CONST
(30483.403823504719/8.0),

10563 
REAL_CONST
(30501.02301486507/8.0),

10564 
REAL_CONST
(30518.644751064272/8.0),

10565 
REAL_CONST
(30536.269031367516/8.0),

10566 
REAL_CONST
(30553.895855040515/8.0),

10567 
REAL_CONST
(30571.525221349519/8.0),

10568 
REAL_CONST
(30589.157129561307/8.0),

10569 
REAL_CONST
(30606.791578943175/8.0),

10570 
REAL_CONST
(30624.428568762964/8.0),

10571 
REAL_CONST
(30642.06809828903/8.0),

10572 
REAL_CONST
(30659.710166790261/8.0),

10573 
REAL_CONST
(30677.35477353607/8.0),

10574 
REAL_CONST
(30695.001917796391/8.0),

10575 
REAL_CONST
(30712.651598841687/8.0),

10576 
REAL_CONST
(30730.303815942945/8.0),

10577 
REAL_CONST
(30747.958568371676/8.0),

10578 
REAL_CONST
(30765.615855399912/8.0),

10579 
REAL_CONST
(30783.275676300211/8.0),

10580 
REAL_CONST
(30800.938030345646/8.0),

10581 
REAL_CONST
(30818.602916809814/8.0),

10582 
REAL_CONST
(30836.270334966837/8.0),

10583 
REAL_CONST
(30853.940284091354/8.0),

10584 
REAL_CONST
(30871.612763458521/8.0),

10585 
REAL_CONST
(30889.287772344011/8.0),

10586 
REAL_CONST
(30906.965310024025/8.0),

10587 
REAL_CONST
(30924.645375775272/8.0),

10588 
REAL_CONST
(30942.327968874983/8.0),

10589 
REAL_CONST
(30960.013088600903/8.0),

10590 
REAL_CONST
(30977.700734231294/8.0),

10591 
REAL_CONST
(30995.390905044929/8.0),

10592 
REAL_CONST
(31013.083600321101/8.0),

10593 
REAL_CONST
(31030.778819339619/8.0),

10594 
REAL_CONST
(31048.476561380798/8.0),

10595 
REAL_CONST
(31066.17682572547/8.0),

10596 
REAL_CONST
(31083.879611654978/8.0),

10597 
REAL_CONST
(31101.584918451179/8.0),

10598 
REAL_CONST
(31119.29274539644/8.0),

10599 
REAL_CONST
(31137.003091773637/8.0),

10600 
REAL_CONST
(31154.715956866155/8.0),

10601 
REAL_CONST
(31172.431339957893/8.0),

10602 
REAL_CONST
(31190.14924033326/8.0),

10603 
REAL_CONST
(31207.869657277162/8.0),

10604 
REAL_CONST
(31225.592590075023/8.0),

10605 
REAL_CONST
(31243.318038012771/8.0),

10606 
REAL_CONST
(31261.046000376838/8.0),

10607 
REAL_CONST
(31278.776476454172/8.0),

10608 
REAL_CONST
(31296.50946553221/8.0),

10609 
REAL_CONST
(31314.24496689891/8.0),

10610 
REAL_CONST
(31331.98297984272/8.0),

10611 
REAL_CONST
(31349.7235036526/8.0),

10612 
REAL_CONST
(31367.466537618013/8.0),

10613 
REAL_CONST
(31385.212081028923/8.0),

10614 
REAL_CONST
(31402.960133175795/8.0),

10615 
REAL_CONST
(31420.710693349596/8.0),

10616 
REAL_CONST
(31438.463760841791/8.0),

10617 
REAL_CONST
(31456.219334944351/8.0),

10618 
REAL_CONST
(31473.977414949743/8.0),

10619 
REAL_CONST
(31491.738000150934/8.0),

10620 
REAL_CONST
(31509.501089841389/8.0),

10621 
REAL_CONST
(31527.266683315069/8.0),

10622 
REAL_CONST
(31545.034779866437/8.0),

10623 
REAL_CONST
(31562.80537879045/8.0),

10624 
REAL_CONST
(31580.578479382562/8.0),

10625 
REAL_CONST
(31598.35408093872/8.0),

10626 
REAL_CONST
(31616.132182755369/8.0),

10627 
REAL_CONST
(31633.91278412945/8.0),

10628 
REAL_CONST
(31651.695884358396/8.0),

10629 
REAL_CONST
(31669.481482740131/8.0),

10630 
REAL_CONST
(31687.269578573076/8.0),

10631 
REAL_CONST
(31705.060171156143/8.0),

10632 
REAL_CONST
(31722.853259788735/8.0),

10633 
REAL_CONST
(31740.648843770748/8.0),

10634 
REAL_CONST
(31758.446922402567/8.0),

10635 
REAL_CONST
(31776.247494985066/8.0),

10636 
REAL_CONST
(31794.050560819614/8.0),

10637 
REAL_CONST
(31811.85611920806/8.0),

10638 
REAL_CONST
(31829.664169452753/8.0),

10639 
REAL_CONST
(31847.474710856521/8.0),

10640 
REAL_CONST
(31865.287742722685/8.0),

10641 
REAL_CONST
(31883.103264355046/8.0),

10642 
REAL_CONST
(31900.921275057899/8.0),

10643 
REAL_CONST
(31918.741774136019/8.0),

10644 
REAL_CONST
(31936.564760894671/8.0),

10645 
REAL_CONST
(31954.390234639599/8.0),

10646 
REAL_CONST
(31972.21819467704/8.0),

10647 
REAL_CONST
(31990.048640313704/8.0),

10648 
REAL_CONST
(32007.881570856793/8.0),

10649 
REAL_CONST
(32025.716985613984/8.0),

10650 
REAL_CONST
(32043.554883893445/8.0),

10651 
REAL_CONST
(32061.395265003815/8.0),

10652 
REAL_CONST
(32079.238128254223/8.0),

10653 
REAL_CONST
(32097.083472954269/8.0),

10654 
REAL_CONST
(32114.931298414049/8.0),

10655 
REAL_CONST
(32132.781603944117/8.0),

10656 
REAL_CONST
(32150.634388855524/8.0),

10657 
REAL_CONST
(32168.48965245979/8.0),

10658 
REAL_CONST
(32186.347394068915/8.0),

10659 
REAL_CONST
(32204.207612995371/8.0),

10660 
REAL_CONST
(32222.07030855212/8.0),

10661 
REAL_CONST
(32239.935480052583/8.0),

10662 
REAL_CONST
(32257.803126810672/8.0),

10663 
REAL_CONST
(32275.673248140767/8.0),

10664 
REAL_CONST
(32293.545843357719/8.0),

10665 
REAL_CONST
(32311.420911776862/8.0),

10666 
REAL_CONST
(32329.298452713996/8.0),

10667 
REAL_CONST
(32347.178465485395/8.0),

10668 
REAL_CONST
(32365.060949407813/8.0),

10669 
REAL_CONST
(32382.945903798463/8.0),

10670 
REAL_CONST
(32400.83332797504/8.0),

10671 
REAL_CONST
(32418.723221255706/8.0),

10672 
REAL_CONST
(32436.615582959093/8.0),

10673 
REAL_CONST
(32454.510412404306/8.0),

10674 
REAL_CONST
(32472.407708910916/8.0),

10675 
REAL_CONST
(32490.307471798966/8.0),

10676 
REAL_CONST
(32508.209700388961/8.0),

10677 
REAL_CONST
(32526.114394001877/8.0),

10678 
REAL_CONST
(32544.021551959166/8.0),

10679 
REAL_CONST
(32561.931173582732/8.0),

10680 
REAL_CONST
(32579.843258194956/8.0),

10681 
REAL_CONST
(32597.757805118679/8.0),

10682 
REAL_CONST
(32615.674813677211/8.0),

10683 
REAL_CONST
(32633.594283194328/8.0),

10684 
REAL_CONST
(32651.516212994258/8.0),

10685 
REAL_CONST
(32669.440602401712/8.0),

10686 
REAL_CONST
(32687.367450741847/8.0),

10687 
REAL_CONST
(32705.296757340297/8.0),

10688 
REAL_CONST
(32723.228521523146/8.0),

10689 
REAL_CONST
(32741.162742616943/8.0),

10690 
REAL_CONST
(32759.099419948703/8.0),

10691 
REAL_CONST
(32777.038552845901/8.0),

10692 
REAL_CONST
(32794.980140636464/8.0),

10693 
REAL_CONST
(32812.924182648792/8.0),

10694 
REAL_CONST
(32830.87067821173/8.0),

10695 
REAL_CONST
(32848.819626654593/8.0),

10696 
REAL_CONST
(32866.77102730715/8.0),

10697 
REAL_CONST
(32884.724879499619/8.0),

10698 
REAL_CONST
(32902.681182562686/8.0),

10699 
REAL_CONST
(32920.639935827494/8.0),

10700 
REAL_CONST
(32938.601138625643/8.0),

10701 
REAL_CONST
(32956.56479028918/8.0),

10702 
REAL_CONST
(32974.530890150607/8.0),

10703 
REAL_CONST
(32992.499437542894/8.0),

10704 
REAL_CONST
(33010.470431799447/8.0),

10705 
REAL_CONST
(33028.443872254145/8.0),

10706 
REAL_CONST
(33046.419758241311/8.0),

10707 
REAL_CONST
(33064.39808909571/8.0),

10708 
REAL_CONST
(33082.378864152583/8.0),

10709 
REAL_CONST
(33100.36208274759/8.0),

10710 
REAL_CONST
(33118.347744216881/8.0),

10711 
REAL_CONST
(33136.335847897026/8.0),

10712 
REAL_CONST
(33154.326393125062/8.0),

10713 
REAL_CONST
(33172.31937923847/8.0),

10714 
REAL_CONST
(33190.314805575174/8.0),

10715 
REAL_CONST
(33208.312671473555/8.0),

10716 
REAL_CONST
(33226.312976272442/8.0),

10717 
REAL_CONST
(33244.315719311111/8.0),

10718 
REAL_CONST
(33262.320899929284/8.0),

10719 
REAL_CONST
(33280.328517467125/8.0),

10720 
REAL_CONST
(33298.33857126526/8.0),

10721 
REAL_CONST
(33316.351060664747/8.0),

10722 
REAL_CONST
(33334.365985007091/8.0),

10723 
REAL_CONST
(33352.383343634239/8.0),

10724 
REAL_CONST
(33370.403135888591/8.0),

10725 
REAL_CONST
(33388.42536111299/8.0),

10726 
REAL_CONST
(33406.450018650721/8.0),

10727 
REAL_CONST
(33424.477107845501/8.0),

10728 
REAL_CONST
(33442.506628041512/8.0),

10729 
REAL_CONST
(33460.53857858335/8.0),

10730 
REAL_CONST
(33478.572958816083/8.0),

10731 
REAL_CONST
(33496.609768085189/8.0),

10732 
REAL_CONST
(33514.649005736617/8.0),

10733 
REAL_CONST
(33532.690671116739/8.0),

10734 
REAL_CONST
(33550.734763572356/8.0),

10735 
REAL_CONST
(33568.781282450735/8.0),

10736 
REAL_CONST
(33586.830227099563/8.0),

10737 
REAL_CONST
(33604.881596866973/8.0),

10738 
REAL_CONST
(33622.935391101528/8.0),

10739 
REAL_CONST
(33640.991609152239/8.0),

10740 
REAL_CONST
(33659.050250368542/8.0),

10741 
REAL_CONST
(33677.111314100322/8.0),

10742 
REAL_CONST
(33695.174799697881/8.0),

10743 
REAL_CONST
(33713.240706511984/8.0),

10744 
REAL_CONST
(33731.309033893805/8.0),

10745 
REAL_CONST
(33749.37978119497/8.0),

10746 
REAL_CONST
(33767.452947767531/8.0),

10747 
REAL_CONST
(33785.528532963974/8.0),

10748 
REAL_CONST
(33803.606536137209/8.0),

10749 
REAL_CONST
(33821.686956640602/8.0),

10750 
REAL_CONST
(33839.769793827938/8.0),

10751 
REAL_CONST
(33857.855047053425/8.0),

10752 
REAL_CONST
(33875.942715671707/8.0),

10753 
REAL_CONST
(33894.032799037872/8.0),

10754 
REAL_CONST
(33912.125296507431/8.0),

10755 
REAL_CONST
(33930.220207436316/8.0),

10756 
REAL_CONST
(33948.317531180888/8.0),

10757 
REAL_CONST
(33966.417267097961/8.0),

10758 
REAL_CONST
(33984.519414544746/8.0),

10759 
REAL_CONST
(34002.623972878901/8.0),

10760 
REAL_CONST
(34020.730941458511/8.0),

10761 
REAL_CONST
(34038.840319642077/8.0),

10762 
REAL_CONST
(34056.952106788536/8.0),

10763 
REAL_CONST
(34075.066302257255/8.0),

10764 
REAL_CONST
(34093.182905408015/8.0),

10765 
REAL_CONST
(34111.301915601027/8.0),

10766 
REAL_CONST
(34129.42333219693/8.0),

10767 
REAL_CONST
(34147.547154556785/8.0),

10768 
REAL_CONST
(34165.673382042078/8.0),

10769 
REAL_CONST
(34183.80201401472/8.0),

10770 
REAL_CONST
(34201.933049837033/8.0),

10771 
REAL_CONST
(34220.06648887178/8.0),

10772 
REAL_CONST
(34238.202330482141/8.0),

10773 
REAL_CONST
(34256.340574031703/8.0),

10774 
REAL_CONST
(34274.481218884495/8.0),

10775 
REAL_CONST
(34292.624264404949/8.0),

10776 
REAL_CONST
(34310.769709957938/8.0),

10777 
REAL_CONST
(34328.91755490873/8.0),

10778 
REAL_CONST
(34347.067798623029/8.0),

10779 
REAL_CONST
(34365.220440466954/8.0),

10780 
REAL_CONST
(34383.375479807051/8.0),

10781 
REAL_CONST
(34401.532916010263/8.0),

10782 
REAL_CONST
(34419.692748443973/8.0),

10783 
REAL_CONST
(34437.854976475966/8.0),

10784 
REAL_CONST
(34456.01959947445/8.0),

10785 
REAL_CONST
(34474.18661680806/8.0),

10786 
REAL_CONST
(34492.356027845817/8.0),

10787 
REAL_CONST
(34510.527831957188/8.0),

10788 
REAL_CONST
(34528.702028512052/8.0),

10789 
REAL_CONST
(34546.878616880676/8.0),

10790 
REAL_CONST
(34565.05759643377/8.0),

10791 
REAL_CONST
(34583.238966542449/8.0),

10792 
REAL_CONST
(34601.422726578232/8.0),

10793 
REAL_CONST
(34619.608875913065/8.0),

10794 
REAL_CONST
(34637.797413919296/8.0),

10795 
REAL_CONST
(34655.988339969692/8.0),

10796 
REAL_CONST
(34674.181653437423/8.0),

10797 
REAL_CONST
(34692.37735369608/8.0),

10798 
REAL_CONST
(34710.575440119668/8.0),

10799 
REAL_CONST
(34728.775912082579/8.0),

10800 
REAL_CONST
(34746.978768959649/8.0),

10801 
REAL_CONST
(34765.184010126082/8.0),

10802 
REAL_CONST
(34783.391634957537/8.0),

10803 
REAL_CONST
(34801.60164283005/8.0),

10804 
REAL_CONST
(34819.814033120063/8.0),

10805 
REAL_CONST
(34838.028805204456/8.0),

10806 
REAL_CONST
(34856.24595846048/8.0),

10807 
REAL_CONST
(34874.465492265823/8.0),

10808 
REAL_CONST
(34892.687405998557/8.0),

10809 
REAL_CONST
(34910.911699037177/8.0),

10810 
REAL_CONST
(34929.138370760564/8.0),

10811 
REAL_CONST
(34947.367420548027/8.0),

10812 
REAL_CONST
(34965.598847779271/8.0),

10813 
REAL_CONST
(34983.832651834389/8.0),

10814 
REAL_CONST
(35002.068832093908/8.0),

10815 
REAL_CONST
(35020.307387938738/8.0),

10816 
REAL_CONST
(35038.548318750189/8.0),

10817 
REAL_CONST
(35056.79162390998/8.0),

10818 
REAL_CONST
(35075.03730280025/8.0),

10819 
REAL_CONST
(35093.285354803513/8.0),

10820 
REAL_CONST
(35111.535779302685/8.0),

10821 
REAL_CONST
(35129.788575681116/8.0),

10822 
REAL_CONST
(35148.043743322516/8.0),

10823 
REAL_CONST
(35166.301281611013/8.0),

10824 
REAL_CONST
(35184.561189931141/8.0),

10825 
REAL_CONST
(35202.823467667826/8.0),

10826 
REAL_CONST
(35221.088114206388/8.0),

10827 
REAL_CONST
(35239.355128932555/8.0),

10828 
REAL_CONST
(35257.624511232447/8.0),

10829 
REAL_CONST
(35275.896260492584/8.0),

10830 
REAL_CONST
(35294.170376099886/8.0),

10831 
REAL_CONST
(35312.446857441668/8.0),

10832 
REAL_CONST
(35330.725703905628/8.0),

10833 
REAL_CONST
(35349.006914879887/8.0),

10834 
REAL_CONST
(35367.290489752944/8.0),

10835 
REAL_CONST
(35385.576427913686/8.0),

10836 
REAL_CONST
(35403.864728751418/8.0),

10837 
REAL_CONST
(35422.155391655811/8.0),

10838 
REAL_CONST
(35440.448416016967/8.0),

10839 
REAL_CONST
(35458.743801225341/8.0),

10840 
REAL_CONST
(35477.041546671804/8.0),

10841 
REAL_CONST
(35495.341651747622/8.0),

10842 
REAL_CONST
(35513.644115844436/8.0),

10843 
REAL_CONST
(35531.948938354304/8.0),

10844 
REAL_CONST
(35550.256118669655/8.0),

10845 
REAL_CONST
(35568.565656183309/8.0),

10846 
REAL_CONST
(35586.877550288496/8.0),

10847 
REAL_CONST
(35605.191800378816/8.0),

10848 
REAL_CONST
(35623.508405848268/8.0),

10849 
REAL_CONST
(35641.827366091238/8.0),

10850 
REAL_CONST
(35660.148680502505/8.0),

10851 
REAL_CONST
(35678.472348477233/8.0),

10852 
REAL_CONST
(35696.798369410979/8.0),

10853 
REAL_CONST
(35715.126742699678/8.0),

10854 
REAL_CONST
(35733.457467739659/8.0),

10855 
REAL_CONST
(35751.790543927644/8.0),

10856 
REAL_CONST
(35770.125970660738/8.0),

10857 
REAL_CONST
(35788.46374733642/8.0),

10858 
REAL_CONST
(35806.803873352568/8.0),

10859 
REAL_CONST
(35825.146348107453/8.0),

10860 
REAL_CONST
(35843.49117099971/8.0),

10861 
REAL_CONST
(35861.838341428367/8.0),

10862 
REAL_CONST
(35880.187858792851/8.0),

10863 
REAL_CONST
(35898.539722492955/8.0),

10864 
REAL_CONST
(35916.893931928862/8.0),

10865 
REAL_CONST
(35935.250486501129/8.0),

10866 
REAL_CONST
(35953.609385610718/8.0),

10867 
REAL_CONST
(35971.970628658957/8.0),

10868 
REAL_CONST
(35990.334215047558/8.0),

10869 
REAL_CONST
(36008.700144178612/8.0),

10870 
REAL_CONST
(36027.068415454596/8.0),

10871 
REAL_CONST
(36045.439028278372/8.0),

10872 
REAL_CONST
(36063.811982053165/8.0),

10873 
REAL_CONST
(36082.187276182609/8.0),

10874 
REAL_CONST
(36100.564910070694/8.0),

10875 
REAL_CONST
(36118.944883121789/8.0),

10876 
REAL_CONST
(36137.327194740654/8.0),

10877 
REAL_CONST
(36155.711844332429/8.0),

10878 
REAL_CONST
(36174.098831302617/8.0),

10879 
REAL_CONST
(36192.488155057115/8.0),

10880 
REAL_CONST
(36210.87981500219/8.0),

10881 
REAL_CONST
(36229.273810544473/8.0),

10882 
REAL_CONST
(36247.670141091003/8.0),

10883 
REAL_CONST
(36266.068806049167/8.0),

10884 
REAL_CONST
(36284.469804826738/8.0),

10885 
REAL_CONST
(36302.873136831862/8.0),

10886 
REAL_CONST
(36321.278801473069/8.0),

10887 
REAL_CONST
(36339.686798159251/8.0),

10888 
REAL_CONST
(36358.097126299683/8.0),

10889 
REAL_CONST
(36376.509785304013/8.0),

10890 
REAL_CONST
(36394.924774582258/8.0),

10891 
REAL_CONST
(36413.342093544816/8.0),

10892 
REAL_CONST
(36431.761741602444/8.0),

10893 
REAL_CONST
(36450.183718166292/8.0),

10894 
REAL_CONST
(36468.608022647859/8.0),

10895 
REAL_CONST
(36487.034654459028/8.0),

10896 
REAL_CONST
(36505.463613012063/8.0),

10897 
REAL_CONST
(36523.894897719583/8.0),

10898 
REAL_CONST
(36542.328507994578/8.0),

10899 
REAL_CONST
(36560.764443250409/8.0),

10900 
REAL_CONST
(36579.202702900831/8.0),

10901 
REAL_CONST
(36597.643286359926/8.0),

10902 
REAL_CONST
(36616.086193042182/8.0),

10903 
REAL_CONST
(36634.531422362437/8.0),

10904 
REAL_CONST
(36652.978973735895/8.0),

10905 
REAL_CONST
(36671.428846578143/8.0),

10906 
REAL_CONST
(36689.881040305125/8.0),

10907 
REAL_CONST
(36708.335554333149/8.0),

10908 
REAL_CONST
(36726.792388078902/8.0),

10909 
REAL_CONST
(36745.251540959427/8.0),

10910 
REAL_CONST
(36763.713012392138/8.0),

10911 
REAL_CONST
(36782.176801794812/8.0),

10912 
REAL_CONST
(36800.642908585593/8.0),

10913 
REAL_CONST
(36819.111332182983/8.0),

10914 
REAL_CONST
(36837.582072005869/8.0),

10915 
REAL_CONST
(36856.055127473483/8.0),

10916 
REAL_CONST
(36874.530498005421/8.0),

10917 
REAL_CONST
(36893.008183021651/8.0),

10918 
REAL_CONST
(36911.488181942506/8.0),

10919 
REAL_CONST
(36929.970494188674/8.0),

10920 
REAL_CONST
(36948.455119181206/8.0),

10921 
REAL_CONST
(36966.942056341519/8.0),

10922 
REAL_CONST
(36985.431305091392/8.0),

10923 
REAL_CONST
(37003.922864852961/8.0),

10924 
REAL_CONST
(37022.416735048733/8.0),

10925 
REAL_CONST
(37040.912915101559/8.0),

10926 
REAL_CONST
(37059.411404434657/8.0),

10927 
REAL_CONST
(37077.91220247162/8.0),

10928 
REAL_CONST
(37096.415308636388/8.0),

10929 
REAL_CONST
(37114.920722353243/8.0),

10930 
REAL_CONST
(37133.428443046862/8.0),

10931 
REAL_CONST
(37151.938470142253/8.0),

10932 
REAL_CONST
(37170.450803064785/8.0),

10933 
REAL_CONST
(37188.965441240209/8.0),

10934 
REAL_CONST
(37207.482384094597/8.0),

10935 
REAL_CONST
(37226.001631054402/8.0),

10936 
REAL_CONST
(37244.523181546429/8.0),

10937 
REAL_CONST
(37263.047034997842/8.0),

10938 
REAL_CONST
(37281.573190836149/8.0),

10939 
REAL_CONST
(37300.101648489224/8.0),

10940 
REAL_CONST
(37318.632407385296/8.0),

10941 
REAL_CONST
(37337.165466952945/8.0),

10942 
REAL_CONST
(37355.700826621112/8.0),

10943 
REAL_CONST
(37374.238485819085/8.0),

10944 
REAL_CONST
(37392.778443976509/8.0),

10945 
REAL_CONST
(37411.320700523385/8.0),

10946 
REAL_CONST
(37429.865254890057/8.0),

10947 
REAL_CONST
(37448.412106507232/8.0),

10948 
REAL_CONST
(37466.961254805974/8.0),

10949 
REAL_CONST
(37485.512699217681/8.0),

10950 
REAL_CONST
(37504.066439174116/8.0),

10951 
REAL_CONST
(37522.622474107404/8.0),

10952 
REAL_CONST
(37541.180803449992/8.0),

10953 
REAL_CONST
(37559.741426634704/8.0),

10954 
REAL_CONST
(37578.304343094693/8.0),

10955 
REAL_CONST
(37596.869552263488/8.0),

10956 
REAL_CONST
(37615.43705357494/8.0),

10957 
REAL_CONST
(37634.006846463279/8.0),

10958 
REAL_CONST
(37652.578930363044/8.0),

10959 
REAL_CONST
(37671.153304709165/8.0),

10960 
REAL_CONST
(37689.729968936896/8.0),

10961 
REAL_CONST
(37708.308922481847/8.0),

10962 
REAL_CONST
(37726.890164779965/8.0),

10963 
REAL_CONST
(37745.473695267559/8.0),

10964 
REAL_CONST
(37764.059513381275/8.0),

10965 
REAL_CONST
(37782.647618558112/8.0),

10966 
REAL_CONST
(37801.238010235415/8.0),

10967 
REAL_CONST
(37819.830687850859/8.0),

10968 
REAL_CONST
(37838.425650842495/8.0),

10969 
REAL_CONST
(37857.022898648691/8.0),

10970 
REAL_CONST
(37875.622430708172/8.0),

10971 
REAL_CONST
(37894.224246460013/8.0),

10972 
REAL_CONST
(37912.828345343616/8.0),

10973 
REAL_CONST
(37931.434726798747/8.0),

10974 
REAL_CONST
(37950.043390265506/8.0),

10975 
REAL_CONST
(37968.654335184328/8.0),

10976 
REAL_CONST
(37987.267560995999/8.0),

10977 
REAL_CONST
(38005.883067141665/8.0),

10978 
REAL_CONST
(38024.500853062775/8.0),

10979 
REAL_CONST
(38043.120918201159/8.0),

10980 
REAL_CONST
(38061.743261998963/8.0),

10981 
REAL_CONST
(38080.367883898682/8.0),

10982 
REAL_CONST
(38098.994783343158/8.0),

10983 
REAL_CONST
(38117.623959775563/8.0),

10984 
REAL_CONST
(38136.255412639417/8.0),

10985 
REAL_CONST
(38154.889141378575/8.0),

10986 
REAL_CONST
(38173.525145437234/8.0),

10987 
REAL_CONST
(38192.163424259939/8.0),

10988 
REAL_CONST
(38210.803977291551/8.0),

10989 
REAL_CONST
(38229.446803977284/8.0),

10990 
REAL_CONST
(38248.091903762703/8.0),

10991 
REAL_CONST
(38266.739276093685/8.0),

10992 
REAL_CONST
(38285.388920416466/8.0),

10993 
REAL_CONST
(38304.040836177606/8.0),

10994 
REAL_CONST
(38322.695022824002/8.0),

10995 
REAL_CONST
(38341.351479802899/8.0),

10996 
REAL_CONST
(38360.010206561863/8.0),

10997 
REAL_CONST
(38378.671202548816/8.0),

10998 
REAL_CONST
(38397.334467211993/8.0),

10999 
REAL_CONST
(38415.999999999978/8.0),

11000 
REAL_CONST
(38434.667800361683/8.0),

11001 
REAL_CONST
(38453.33786774637/8.0),

11002 
REAL_CONST
(38472.010201603611/8.0),

11003 
REAL_CONST
(38490.684801383337/8.0),

11004 
REAL_CONST
(38509.361666535784/8.0),

11005 
REAL_CONST
(38528.040796511552/8.0),

11006 
REAL_CONST
(38546.722190761553/8.0),

11007 
REAL_CONST
(38565.405848737035/8.0),

11008 
REAL_CONST
(38584.091769889594/8.0),

11009 
REAL_CONST
(38602.779953671132/8.0),

11010 
REAL_CONST
(38621.470399533908/8.0),

11011 
REAL_CONST
(38640.163106930493/8.0),

11012 
REAL_CONST
(38658.858075313794/8.0),

11013 
REAL_CONST
(38677.555304137059/8.0),

11014 
REAL_CONST
(38696.254792853862/8.0),

11015 
REAL_CONST
(38714.956540918094/8.0),

11016 
REAL_CONST
(38733.660547783991/8.0),

11017 
REAL_CONST
(38752.366812906112/8.0),

11018 
REAL_CONST
(38771.075335739348/8.0),

11019 
REAL_CONST
(38789.78611573892/8.0),

11020 
REAL_CONST
(38808.499152360368/8.0),

11021 
REAL_CONST
(38827.214445059573/8.0),

11022 
REAL_CONST
(38845.931993292739/8.0),

11023 
REAL_CONST
(38864.651796516388/8.0),

11024 
REAL_CONST
(38883.373854187383/8.0),

11025 
REAL_CONST
(38902.098165762916/8.0),

11026 
REAL_CONST
(38920.824730700486/8.0),

11027 
REAL_CONST
(38939.553548457938/8.0),

11028 
REAL_CONST
(38958.284618493431/8.0),

11029 
REAL_CONST
(38977.017940265461/8.0),

11030 
REAL_CONST
(38995.753513232834/8.0),

11031 
REAL_CONST
(39014.491336854699/8.0),

11032 
REAL_CONST
(39033.231410590517/8.0),

11033 
REAL_CONST
(39051.973733900079/8.0),

11034 
REAL_CONST
(39070.718306243485/8.0),

11035 
REAL_CONST
(39089.465127081188/8.0),

11036 
REAL_CONST
(39108.214195873945/8.0),

11037 
REAL_CONST
(39126.965512082832/8.0),

11038 
REAL_CONST
(39145.719075169261/8.0),

11039 
REAL_CONST
(39164.474884594965/8.0),

11040 
REAL_CONST
(39183.232939821988/8.0),

11041 
REAL_CONST
(39201.99324031271/8.0),

11042 
REAL_CONST
(39220.755785529815/8.0),

11043 
REAL_CONST
(39239.52057493633/8.0),

11044 
REAL_CONST
(39258.287607995589/8.0),

11045 
REAL_CONST
(39277.056884171245/8.0),

11046 
REAL_CONST
(39295.828402927284/8.0),

11047 
REAL_CONST
(39314.602163728006/8.0),

11048 
REAL_CONST
(39333.378166038019/8.0),

11049 
REAL_CONST
(39352.15640932227/8.0),

11050 
REAL_CONST
(39370.936893046004/8.0),

11051 
REAL_CONST
(39389.719616674811/8.0),

11052 
REAL_CONST
(39408.504579674584/8.0),

11053 
REAL_CONST
(39427.291781511522/8.0),

11054 
REAL_CONST
(39446.081221652174/8.0),

11055 
REAL_CONST
(39464.872899563372/8.0),

11056 
REAL_CONST
(39483.666814712291/8.0),

11057 
REAL_CONST
(39502.462966566411/8.0),

11058 
REAL_CONST
(39521.261354593538/8.0),

11059 
REAL_CONST
(39540.06197826178/8.0),

11060 
REAL_CONST
(39558.864837039568/8.0),

11061 
REAL_CONST
(39577.669930395656/8.0),

11062 
REAL_CONST
(39596.47725779911/8.0),

11063 
REAL_CONST
(39615.286818719302/8.0),

11064 
REAL_CONST
(39634.098612625923/8.0),

11065 
REAL_CONST
(39652.912638988993/8.0),

11066 
REAL_CONST
(39671.728897278823/8.0),

11067 
REAL_CONST
(39690.547386966064/8.0),

11068 
REAL_CONST
(39709.368107521652/8.0),

11069 
REAL_CONST
(39728.191058416858/8.0),

11070 
REAL_CONST
(39747.016239123259/8.0),

11071 
REAL_CONST
(39765.84364911275/8.0),

11072 
REAL_CONST
(39784.673287857528/8.0),

11073 
REAL_CONST
(39803.505154830105/8.0),

11074 
REAL_CONST
(39822.339249503319/8.0),

11075 
REAL_CONST
(39841.175571350293/8.0),

11076 
REAL_CONST
(39860.014119844491/8.0),

11077 
REAL_CONST
(39878.854894459677/8.0),

11078 
REAL_CONST
(39897.697894669909/8.0),

11079 
REAL_CONST
(39916.54311994958/8.0),

11080 
REAL_CONST
(39935.390569773372/8.0),

11081 
REAL_CONST
(39954.240243616303/8.0),

11082 
REAL_CONST
(39973.092140953675/8.0),

11083 
REAL_CONST
(39991.946261261117/8.0),

11084 
REAL_CONST
(40010.802604014549/8.0),

11085 
REAL_CONST
(40029.661168690225/8.0),

11086 
REAL_CONST
(40048.521954764678/8.0),

11087 
REAL_CONST
(40067.384961714779/8.0),

11088 
REAL_CONST
(40086.250189017679/8.0),

11089 
REAL_CONST
(40105.117636150855/8.0),

11090 
REAL_CONST
(40123.98730259209/8.0),

11091 
REAL_CONST
(40142.859187819471/8.0),

11092 
REAL_CONST
(40161.733291311379/8.0),

11093 
REAL_CONST
(40180.609612546526/8.0),

11094 
REAL_CONST
(40199.488151003912/8.0),

11095 
REAL_CONST
(40218.368906162854/8.0),

11096 
REAL_CONST
(40237.25187750296/8.0),

11097 
REAL_CONST
(40256.137064504153/8.0),

11098 
REAL_CONST
(40275.024466646668/8.0),

11099 
REAL_CONST
(40293.914083411029/8.0),

11100 
REAL_CONST
(40312.805914278084/8.0),

11101 
REAL_CONST
(40331.699958728961/8.0),

11102 
REAL_CONST
(40350.596216245103/8.0),

11103 
REAL_CONST
(40369.494686308273/8.0),

11104 
REAL_CONST
(40388.39536840051/8.0),

11105 
REAL_CONST
(40407.298262004173/8.0),

11106 
REAL_CONST
(40426.20336660192/8.0),

11107 
REAL_CONST
(40445.110681676706/8.0),

11108 
REAL_CONST
(40464.020206711793/8.0),

11109 
REAL_CONST
(40482.931941190756/8.0),

11110 
REAL_CONST
(40501.845884597446/8.0),

11111 
REAL_CONST
(40520.762036416032/8.0),

11112 
REAL_CONST
(40539.680396130985/8.0),

11113 
REAL_CONST
(40558.600963227072/8.0),

11114 
REAL_CONST
(40577.523737189367/8.0),

11115 
REAL_CONST
(40596.448717503234/8.0),

11116 
REAL_CONST
(40615.375903654342/8.0),

11117 
REAL_CONST
(40634.305295128659/8.0),

11118 
REAL_CONST
(40653.236891412453/8.0),

11119 
REAL_CONST
(40672.170691992294/8.0),

11120 
REAL_CONST
(40691.106696355047/8.0),

11121 
REAL_CONST
(40710.044903987873/8.0),

11122 
REAL_CONST
(40728.985314378238/8.0),

11123 
REAL_CONST
(40747.927927013901/8.0),

11124 
REAL_CONST
(40766.872741382918/8.0),

11125 
REAL_CONST
(40785.819756973651/8.0),

11126 
REAL_CONST
(40804.768973274746/8.0),

11127 
REAL_CONST
(40823.720389775161/8.0),

11128 
REAL_CONST
(40842.674005964131/8.0),

11129 
REAL_CONST
(40861.629821331211/8.0),

11130 
REAL_CONST
(40880.587835366234/8.0),

11131 
REAL_CONST
(40899.548047559321/8.0),

11132 
REAL_CONST
(40918.510457400931/8.0),

11133 
REAL_CONST
(40937.475064381761/8.0),

11134 
REAL_CONST
(40956.441867992849/8.0),

11135 
REAL_CONST
(40975.410867725499/8.0),

11136 
REAL_CONST
(40994.382063071331/8.0),

11137 
REAL_CONST
(41013.355453522236/8.0),

11138 
REAL_CONST
(41032.331038570417/8.0),

11139 
REAL_CONST
(41051.308817708363/8.0),

11140 
REAL_CONST
(41070.288790428858/8.0),

11141 
REAL_CONST
(41089.270956224987/8.0),

11142 
REAL_CONST
(41108.255314590111/8.0),

11143 
REAL_CONST
(41127.241865017888/8.0),

11144 
REAL_CONST
(41146.23060700229/8.0),

11145 
REAL_CONST
(41165.221540037543/8.0),

11146 
REAL_CONST
(41184.214663618193/8.0),

11147 
REAL_CONST
(41203.209977239079/8.0),

11148 
REAL_CONST
(41222.207480395307/8.0),

11149 
REAL_CONST
(41241.207172582297/8.0),

11150 
REAL_CONST
(41260.209053295752/8.0),

11151 
REAL_CONST
(41279.213122031659/8.0),

11152 
REAL_CONST
(41298.219378286303/8.0),

11153 
REAL_CONST
(41317.227821556255/8.0),

11154 
REAL_CONST
(41336.23845133838/8.0),

11155 
REAL_CONST
(41355.251267129832/8.0),

11156 
REAL_CONST
(41374.266268428037/8.0),

11157 
REAL_CONST
(41393.283454730743/8.0),

11158 
REAL_CONST
(41412.302825535953/8.0),

11159 
REAL_CONST
(41431.324380341983/8.0),

11160 
REAL_CONST
(41450.348118647416/8.0),

11161 
REAL_CONST
(41469.374039951144/8.0),

11162 
REAL_CONST
(41488.402143752326/8.0),

11163 
REAL_CONST
(41507.432429550427/8.0),

11164 
REAL_CONST
(41526.464896845187/8.0),

11165 
REAL_CONST
(41545.499545136627/8.0),

11166 
REAL_CONST
(41564.536373925075/8.0),

11167 
REAL_CONST
(41583.575382711126/8.0),

11168 
REAL_CONST
(41602.616570995662/8.0),

11169 
REAL_CONST
(41621.659938279874/8.0),

11170 
REAL_CONST
(41640.705484065205/8.0),

11171 
REAL_CONST
(41659.753207853406/8.0),

11172 
REAL_CONST
(41678.803109146495/8.0),

11173 
REAL_CONST
(41697.855187446803/8.0),

11174 
REAL_CONST
(41716.909442256911/8.0),

11175 
REAL_CONST
(41735.965873079709/8.0),

11176 
REAL_CONST
(41755.02447941836/8.0),

11177 
REAL_CONST
(41774.085260776315/8.0),

11178 
REAL_CONST
(41793.148216657297/8.0),

11179 
REAL_CONST
(41812.213346565331/8.0),

11180 
REAL_CONST
(41831.280650004708/8.0),

11181 
REAL_CONST
(41850.350126480014/8.0),

11182 
REAL_CONST
(41869.421775496106/8.0),

11183 
REAL_CONST
(41888.495596558132/8.0),

11184 
REAL_CONST
(41907.571589171515/8.0),

11185 
REAL_CONST
(41926.649752841957/8.0),

11186 
REAL_CONST
(41945.730087075463/8.0),

11187 
REAL_CONST
(41964.812591378286/8.0),

11188 
REAL_CONST
(41983.897265256979/8.0),

11189 
REAL_CONST
(42002.984108218378/8.0),

11190 
REAL_CONST
(42022.073119769593/8.0),

11191 
REAL_CONST
(42041.164299418015/8.0),

11192 
REAL_CONST
(42060.257646671307/8.0),

11193 
REAL_CONST
(42079.353161037419/8.0),

11194 
REAL_CONST
(42098.450842024591/8.0),

11195 
REAL_CONST
(42117.550689141324/8.0),

11196 
REAL_CONST
(42136.652701896404/8.0),

11197 
REAL_CONST
(42155.756879798893/8.0),

11198 
REAL_CONST
(42174.863222358137/8.0),

11199 
REAL_CONST
(42193.971729083758/8.0),

11200 
REAL_CONST
(42213.082399485655/8.0),

11201 
REAL_CONST
(42232.195233074002/8.0),

11202 
REAL_CONST
(42251.310229359246/8.0),

11203 
REAL_CONST
(42270.427387852127/8.0),

11204 
REAL_CONST
(42289.546708063644/8.0),

11205 
REAL_CONST
(42308.668189505079/8.0),

11206 
REAL_CONST
(42327.791831687995/8.0),

11207 
REAL_CONST
(42346.917634124227/8.0),

11208 
REAL_CONST
(42366.045596325886/8.0),

11209 
REAL_CONST
(42385.175717805352/8.0),

11210 
REAL_CONST
(42404.307998075295/8.0),

11211 
REAL_CONST
(42423.442436648642/8.0),

11212 
REAL_CONST
(42442.579033038608/8.0),

11213 
REAL_CONST
(42461.717786758672/8.0),

11214 
REAL_CONST
(42480.858697322597/8.0),

11215 
REAL_CONST
(42500.001764244422/8.0),

11216 
REAL_CONST
(42519.146987038446/8.0),

11217 
REAL_CONST
(42538.294365219248/8.0),

11218 
REAL_CONST
(42557.443898301688/8.0),

11219 
REAL_CONST
(42576.595585800882/8.0),

11220 
REAL_CONST
(42595.749427232236/8.0),

11221 
REAL_CONST
(42614.90542211142/8.0),

11222 
REAL_CONST
(42634.063569954378/8.0),

11223 
REAL_CONST
(42653.223870277317/8.0),

11224 
REAL_CONST
(42672.386322596729/8.0),

11225 
REAL_CONST
(42691.55092642938/8.0),

11226 
REAL_CONST
(42710.717681292292/8.0),

11227 
REAL_CONST
(42729.886586702756/8.0),

11228 
REAL_CONST
(42749.057642178363/8.0),

11229 
REAL_CONST
(42768.23084723694/8.0),

11230 
REAL_CONST
(42787.406201396603/8.0),

11231 
REAL_CONST
(42806.58370417574/8.0),

11232 
REAL_CONST
(42825.76335509299/8.0),

11233 
REAL_CONST
(42844.945153667286/8.0),

11234 
REAL_CONST
(42864.129099417805/8.0),

11235 
REAL_CONST
(42883.315191864014/8.0),

11236 
REAL_CONST
(42902.503430525649/8.0),

11237 
REAL_CONST
(42921.693814922692/8.0),

11238 
REAL_CONST
(42940.88634457541/8.0),

11239 
REAL_CONST
(42960.081019004348/8.0),

11240 
REAL_CONST
(42979.277837730297/8.0),

11241 
REAL_CONST
(42998.476800274322/8.0),

11242 
REAL_CONST
(43017.677906157769/8.0),

11243 
REAL_CONST
(43036.881154902228/8.0),

11244 
REAL_CONST
(43056.086546029583/8.0),

11245 
REAL_CONST
(43075.294079061961/8.0),

11246 
REAL_CONST
(43094.503753521763/8.0),

11247 
REAL_CONST
(43113.715568931671/8.0),

11248 
REAL_CONST
(43132.929524814601/8.0),

11249 
REAL_CONST
(43152.145620693766/8.0),

11250 
REAL_CONST
(43171.363856092619/8.0),

11251 
REAL_CONST
(43190.584230534907/8.0),

11252 
REAL_CONST
(43209.806743544621/8.0),

11253 
REAL_CONST
(43229.031394646016/8.0),

11254 
REAL_CONST
(43248.258183363621/8.0),

11255 
REAL_CONST
(43267.487109222224/8.0),

11256 
REAL_CONST
(43286.718171746885/8.0),

11257 
REAL_CONST
(43305.951370462906/8.0),

11258 
REAL_CONST
(43325.186704895881/8.0),

11259 
REAL_CONST
(43344.42417457165/8.0),

11260 
REAL_CONST
(43363.663779016322/8.0),

11261 
REAL_CONST
(43382.905517756262/8.0),

11262 
REAL_CONST
(43402.149390318104/8.0),

11263 
REAL_CONST
(43421.395396228749/8.0),

11264 
REAL_CONST
(43440.643535015348/8.0),

11265 
REAL_CONST
(43459.89380620532/8.0),

11266 
REAL_CONST
(43479.146209326354/8.0),

11267 
REAL_CONST
(43498.400743906379/8.0),

11268 
REAL_CONST
(43517.657409473606/8.0),

11269 
REAL_CONST
(43536.916205556496/8.0),

11270 
REAL_CONST
(43556.177131683784/8.0),

11271 
REAL_CONST
(43575.44018738444/8.0),

11272 
REAL_CONST
(43594.705372187724/8.0),

11273 
REAL_CONST
(43613.972685623135/8.0),

11274 
REAL_CONST
(43633.242127220445/8.0),

11275 
REAL_CONST
(43652.513696509668/8.0),

11276 
REAL_CONST
(43671.787393021099/8.0),

11277 
REAL_CONST
(43691.063216285271/8.0),

11278 
REAL_CONST
(43710.341165833001/8.0),

11279 
REAL_CONST
(43729.621241195346/8.0),

11280 
REAL_CONST
(43748.903441903625/8.0),

11281 
REAL_CONST
(43768.187767489413/8.0),

11282 
REAL_CONST
(43787.474217484552/8.0),

11283 
REAL_CONST
(43806.762791421126/8.0),

11284 
REAL_CONST
(43826.053488831501/8.0),

11285 
REAL_CONST
(43845.346309248278/8.0),

11286 
REAL_CONST
(43864.641252204325/8.0),

11287 
REAL_CONST
(43883.938317232765/8.0),

11288 
REAL_CONST
(43903.237503866971/8.0),

11289 
REAL_CONST
(43922.538811640596/8.0),

11290 
REAL_CONST
(43941.842240087513/8.0),

11291 
REAL_CONST
(43961.147788741881/8.0),

11292 
REAL_CONST
(43980.455457138101/8.0),

11293 
REAL_CONST
(43999.765244810835/8.0),

11294 
REAL_CONST
(44019.077151295001/8.0),

11295 
REAL_CONST
(44038.391176125755/8.0),

11296 
REAL_CONST
(44057.70731883854/8.0),

11297 
REAL_CONST
(44077.02557896902/8.0),

11298 
REAL_CONST
(44096.345956053141/8.0),

11299 
REAL_CONST
(44115.668449627083/8.0),

11300 
REAL_CONST
(44134.993059227287/8.0),

11301 
REAL_CONST
(44154.319784390456/8.0),

11302 
REAL_CONST
(44173.648624653535/8.0),

11303 
REAL_CONST
(44192.979579553728/8.0),

11304 
REAL_CONST
(44212.312648628489/8.0),

11305 
REAL_CONST
(44231.647831415532/8.0),

11306 
REAL_CONST
(44250.985127452805/8.0),

11307 
REAL_CONST
(44270.324536278538/8.0),

11308 
REAL_CONST
(44289.666057431183/8.0),

11309 
REAL_CONST
(44309.009690449464/8.0),

11310 
REAL_CONST
(44328.355434872348/8.0),

11311 
REAL_CONST
(44347.703290239064/8.0),

11312 
REAL_CONST
(44367.053256089079/8.0),

11313 
REAL_CONST
(44386.405331962109/8.0),

11314 
REAL_CONST
(44405.759517398139/8.0),

11315 
REAL_CONST
(44425.115811937387/8.0),

11316 
REAL_CONST
(44444.474215120332/8.0),

11317 
REAL_CONST
(44463.834726487694/8.0),

11318 
REAL_CONST
(44483.197345580462/8.0),

11319 
REAL_CONST
(44502.562071939843/8.0),

11320 
REAL_CONST
(44521.928905107328/8.0),

11321 
REAL_CONST
(44541.297844624634/8.0),

11322 
REAL_CONST
(44560.668890033732/8.0),

11323 
REAL_CONST
(44580.042040876848/8.0),

11324 
REAL_CONST
(44599.417296696454/8.0),

11325 
REAL_CONST
(44618.794657035272/8.0),

11326 
REAL_CONST
(44638.174121436256/8.0),

11327 
REAL_CONST
(44657.555689442641/8.0),

11328 
REAL_CONST
(44676.939360597877/8.0),

11329 
REAL_CONST
(44696.325134445673/8.0),

11330 
REAL_CONST
(44715.713010530002/8.0),

11331 
REAL_CONST
(44735.102988395054/8.0),

11332 
REAL_CONST
(44754.495067585296/8.0),

11333 
REAL_CONST
(44773.88924764542/8.0),

11334 
REAL_CONST
(44793.285528120374/8.0),

11335 
REAL_CONST
(44812.683908555344/8.0),

11336 
REAL_CONST
(44832.084388495779/8.0),

11337 
REAL_CONST
(44851.486967487363/8.0),

11338 
REAL_CONST
(44870.891645076015/8.0),

11339 
REAL_CONST
(44890.298420807922/8.0),

11340 
REAL_CONST
(44909.707294229491/8.0),

11341 
REAL_CONST
(44929.118264887409/8.0),

11342 
REAL_CONST
(44948.531332328566/8.0),

11343 
REAL_CONST
(44967.946496100136/8.0),

11344 
REAL_CONST
(44987.363755749502/8.0),

11345 
REAL_CONST
(45006.783110824319/8.0),

11346 
REAL_CONST
(45026.204560872473/8.0),

11347 
REAL_CONST
(45045.628105442098/8.0),

11348 
REAL_CONST
(45065.053744081561/8.0),

11349 
REAL_CONST
(45084.48147633949/8.0),

11350 
REAL_CONST
(45103.911301764747/8.0),

11351 
REAL_CONST
(45123.343219906426/8.0),

11352 
REAL_CONST
(45142.777230313885/8.0),

11353 
REAL_CONST
(45162.21333253671/8.0),

11354 
REAL_CONST
(45181.651526124733/8.0),

11355 
REAL_CONST
(45201.091810628037/8.0),

11356 
REAL_CONST
(45220.534185596924/8.0),

11357 
REAL_CONST
(45239.978650581965/8.0),

11358 
REAL_CONST
(45259.425205133957/8.0),

11359 
REAL_CONST
(45278.873848803938/8.0),

11360 
REAL_CONST
(45298.324581143192/8.0),

11361 
REAL_CONST
(45317.777401703235/8.0),

11362 
REAL_CONST
(45337.232310035848/8.0),

11363 
REAL_CONST
(45356.68930569302/8.0),

11364 
REAL_CONST
(45376.148388226997/8.0),

11365 
REAL_CONST
(45395.60955719027/8.0),

11366 
REAL_CONST
(45415.072812135557/8.0),

11367 
REAL_CONST
(45434.538152615823/8.0),

11368 
REAL_CONST
(45454.005578184282/8.0),

11369 
REAL_CONST
(45473.475088394356/8.0),

11370 
REAL_CONST
(45492.946682799746/8.0),

11371 
REAL_CONST
(45512.420360954362/8.0),

11372 
REAL_CONST
(45531.896122412363/8.0),

11373 
REAL_CONST
(45551.373966728155/8.0),

11374 
REAL_CONST
(45570.853893456362/8.0),

11375 
REAL_CONST
(45590.33590215187/8.0),

11376 
REAL_CONST
(45609.819992369776/8.0),

11377 
REAL_CONST
(45629.306163665438/8.0),

11378 
REAL_CONST
(45648.794415594442/8.0),

11379 
REAL_CONST
(45668.284747712612/8.0),

11380 
REAL_CONST
(45687.777159576006/8.0),

11381 
REAL_CONST
(45707.27165074092/8.0),

11382 
REAL_CONST
(45726.768220763894/8.0),

11383 
REAL_CONST
(45746.266869201696/8.0),

11384 
REAL_CONST
(45765.767595611323/8.0),

11385 
REAL_CONST
(45785.270399550034/8.0),

11386 
REAL_CONST
(45804.775280575297/8.0),

11387 
REAL_CONST
(45824.282238244828/8.0),

11388 
REAL_CONST
(45843.79127211657/8.0),

11389 
REAL_CONST
(45863.302381748719/8.0),

11390 
REAL_CONST
(45882.815566699683/8.0),

11391 
REAL_CONST
(45902.33082652813/8.0),

11392 
REAL_CONST
(45921.848160792935/8.0),

11393 
REAL_CONST
(45941.367569053225/8.0),

11394 
REAL_CONST
(45960.889050868354/8.0),

11395 
REAL_CONST
(45980.41260579793/8.0),

11396 
REAL_CONST
(45999.938233401757/8.0),

11397 
REAL_CONST
(46019.465933239902/8.0),

11398 
REAL_CONST
(46038.995704872657/8.0),

11399 
REAL_CONST
(46058.527547860547/8.0),

11400 
REAL_CONST
(46078.06146176433/8.0),

11401 
REAL_CONST
(46097.597446144995/8.0),

11402 
REAL_CONST
(46117.135500563774/8.0),

11403 
REAL_CONST
(46136.675624582109/8.0),

11404 
REAL_CONST
(46156.217817761702/8.0),

11405 
REAL_CONST
(46175.762079664462/8.0),

11406 
REAL_CONST
(46195.308409852543/8.0),

11407 
REAL_CONST
(46214.856807888333/8.0),

11408 
REAL_CONST
(46234.407273334444/8.0),

11409 
REAL_CONST
(46253.959805753715/8.0),

11410 
REAL_CONST
(46273.51440470924/8.0),

11411 
REAL_CONST
(46293.071069764315/8.0),

11412 
REAL_CONST
(46312.629800482478/8.0),

11413 
REAL_CONST
(46332.190596427499/8.0),

11414 
REAL_CONST
(46351.753457163381/8.0),

11415 
REAL_CONST
(46371.318382254351/8.0),

11416 
REAL_CONST
(46390.885371264863/8.0),

11417 
REAL_CONST
(46410.45442375962/8.0),

11418 
REAL_CONST
(46430.025539303526/8.0),

11419 
REAL_CONST
(46449.598717461733/8.0),

11420 
REAL_CONST
(46469.17395779962/8.0),

11421 
REAL_CONST
(46488.751259882782/8.0),

11422 
REAL_CONST
(46508.33062327707/8.0),

11423 
REAL_CONST
(46527.912047548532/8.0),

11424 
REAL_CONST
(46547.495532263471/8.0),

11425 
REAL_CONST
(46567.081076988397/8.0),

11426 
REAL_CONST
(46586.668681290059/8.0),

11427 
REAL_CONST
(46606.258344735434/8.0),

11428 
REAL_CONST
(46625.850066891719/8.0),

11429 
REAL_CONST
(46645.443847326351/8.0),

11430 
REAL_CONST
(46665.039685606986/8.0),

11431 
REAL_CONST
(46684.637581301497/8.0),

11432 
REAL_CONST
(46704.237533978005/8.0),

11433 
REAL_CONST
(46723.839543204842/8.0),

11434 
REAL_CONST
(46743.443608550573/8.0),

11435 
REAL_CONST
(46763.049729583989/8.0),

11436 
REAL_CONST
(46782.657905874104/8.0),

11437 
REAL_CONST
(46802.268136990162/8.0),

11438 
REAL_CONST
(46821.880422501628/8.0),

11439 
REAL_CONST
(46841.494761978196/8.0),

11440 
REAL_CONST
(46861.111154989776/8.0),

11441 
REAL_CONST
(46880.729601106526/8.0),

11442 
REAL_CONST
(46900.350099898795/8.0),

11443 
REAL_CONST
(46919.97265093719/8.0),

11444 
REAL_CONST
(46939.597253792526/8.0),

11445 
REAL_CONST
(46959.223908035841/8.0),

11446 
REAL_CONST
(46978.852613238392/8.0),

11447 
REAL_CONST
(46998.483368971691/8.0),

11448 
REAL_CONST
(47018.11617480743/8.0),

11449 
REAL_CONST
(47037.751030317551/8.0),

11450 
REAL_CONST
(47057.387935074221/8.0),

11451 
REAL_CONST
(47077.026888649809/8.0),

11452 
REAL_CONST
(47096.66789061694/8.0),

11453 
REAL_CONST
(47116.310940548428/8.0),

11454 
REAL_CONST
(47135.956038017328/8.0),

11455 
REAL_CONST
(47155.603182596918/8.0),

11456 
REAL_CONST
(47175.252373860698/8.0),

11457 
REAL_CONST
(47194.903611382375/8.0),

11458 
REAL_CONST
(47214.556894735892/8.0),

11459 
REAL_CONST
(47234.212223495422/8.0),

11460 
REAL_CONST
(47253.869597235338/8.0),

11461 
REAL_CONST
(47273.52901553025/8.0),

11462 
REAL_CONST
(47293.19047795498/8.0),

11463 
REAL_CONST
(47312.853984084577/8.0),

11464 
REAL_CONST
(47332.519533494306/8.0),

11465 
REAL_CONST
(47352.187125759658/8.0),

11466 
REAL_CONST
(47371.856760456343/8.0),

11467 
REAL_CONST
(47391.528437160297/8.0),

11468 
REAL_CONST
(47411.202155447652/8.0),

11469 
REAL_CONST
(47430.877914894787/8.0),

11470 
REAL_CONST
(47450.555715078299/8.0),

11471 
REAL_CONST
(47470.235555574982/8.0),

11472 
REAL_CONST
(47489.917435961863/8.0),

11473 
REAL_CONST
(47509.601355816201/8.0),

11474 
REAL_CONST
(47529.287314715453/8.0),

11475 
REAL_CONST
(47548.975312237308/8.0),

11476 
REAL_CONST
(47568.665347959672/8.0),

11477 
REAL_CONST
(47588.357421460656/8.0),

11478 
REAL_CONST
(47608.051532318605/8.0),

11479 
REAL_CONST
(47627.747680112072/8.0),

11480 
REAL_CONST
(47647.445864419846/8.0),

11481 
REAL_CONST
(47667.14608482091/8.0),

11482 
REAL_CONST
(47686.848340894474/8.0),

11483 
REAL_CONST
(47706.552632219973/8.0),

11484 
REAL_CONST
(47726.258958377046/8.0),

11485 
REAL_CONST
(47745.967318945557/8.0),

11486 
REAL_CONST
(47765.677713505589/8.0),

11487 
REAL_CONST
(47785.390141637428/8.0),

11488 
REAL_CONST
(47805.104602921601/8.0),

11489 
REAL_CONST
(47824.821096938824/8.0),

11490 
REAL_CONST
(47844.539623270044/8.0),

11491 
REAL_CONST
(47864.260181496429/8.0),

11492 
REAL_CONST
(47883.982771199349/8.0),

11493 
REAL_CONST
(47903.707391960394/8.0),

11494 
REAL_CONST
(47923.434043361369/8.0),

11495 
REAL_CONST
(47943.162724984308/8.0),

11496 
REAL_CONST
(47962.893436411439/8.0),

11497 
REAL_CONST
(47982.626177225218/8.0),

11498 
REAL_CONST
(48002.36094700831/8.0),

11499 
REAL_CONST
(48022.097745343599/8.0),

11500 
REAL_CONST
(48041.836571814172/8.0),

11501 
REAL_CONST
(48061.57742600335/8.0),

11502 
REAL_CONST
(48081.32030749465/8.0),

11503 
REAL_CONST
(48101.065215871815/8.0),

11504 
REAL_CONST
(48120.81215071879/8.0),

11505 
REAL_CONST
(48140.56111161974/8.0),

11506 
REAL_CONST
(48160.312098159047/8.0),

11507 
REAL_CONST
(48180.065109921306/8.0),

11508 
REAL_CONST
(48199.820146491307/8.0),

11509 
REAL_CONST
(48219.577207454073/8.0),

11510 
REAL_CONST
(48239.336292394844/8.0),

11511 
REAL_CONST
(48259.097400899045/8.0),

11512 
REAL_CONST
(48278.860532552339/8.0),

11513 
REAL_CONST
(48298.625686940592/8.0),

11514 
REAL_CONST
(48318.392863649875/8.0),

11515 
REAL_CONST
(48338.162062266485/8.0),

11516 
REAL_CONST
(48357.933282376915/8.0),

11517 
REAL_CONST
(48377.706523567889/8.0),

11518 
REAL_CONST
(48397.481785426316/8.0),

11519 
REAL_CONST
(48417.259067539344/8.0),

11520 
REAL_CONST
(48437.038369494308/8.0),

11521 
REAL_CONST
(48456.819690878765/8.0),

11522 
REAL_CONST
(48476.603031280487/8.0),

11523 
REAL_CONST
(48496.388390287451/8.0),

11524 
REAL_CONST
(48516.175767487839/8.0),

11525 
REAL_CONST
(48535.965162470042/8.0),

11526 
REAL_CONST
(48555.756574822684/8.0),

11527 
REAL_CONST
(48575.550004134566/8.0),

11528 
REAL_CONST
(48595.345449994718/8.0),

11529 
REAL_CONST
(48615.142911992378/8.0),

11530 
REAL_CONST
(48634.942389716991/8.0),

11531 
REAL_CONST
(48654.743882758201/8.0),

11532 
REAL_CONST
(48674.547390705877/8.0),

11533 
REAL_CONST
(48694.352913150084/8.0),

11534 
REAL_CONST
(48714.160449681112/8.0),

11535 
REAL_CONST
(48733.969999889443/8.0),

11536 
REAL_CONST
(48753.781563365759/8.0),

11537 
REAL_CONST
(48773.595139700978/8.0),

11538 
REAL_CONST
(48793.410728486211/8.0),

11539 
REAL_CONST
(48813.228329312769/8.0),

11540 
REAL_CONST
(48833.047941772187/8.0),

11541 
REAL_CONST
(48852.869565456189/8.0),

11542 
REAL_CONST
(48872.693199956717/8.0),

11543 
REAL_CONST
(48892.518844865925/8.0),

11544 
REAL_CONST
(48912.346499776155/8.0),

11545 
REAL_CONST
(48932.176164279976/8.0),

11546 
REAL_CONST
(48952.007837970152/8.0),

11547 
REAL_CONST
(48971.841520439666/8.0),

11548 
REAL_CONST
(48991.677211281676/8.0),

11549 
REAL_CONST
(49011.514910089587/8.0),

11550 
REAL_CONST
(49031.354616456978/8.0),

11551 
REAL_CONST
(49051.196329977654/8.0),

11552 
REAL_CONST
(49071.04005024561/8.0),

11553 
REAL_CONST
(49090.885776855059/8.0),

11554 
REAL_CONST
(49110.733509400408/8.0),

11555 
REAL_CONST
(49130.583247476279/8.0),

11556 
REAL_CONST
(49150.434990677488/8.0),

11557 
REAL_CONST
(49170.288738599062/8.0),

11558 
REAL_CONST
(49190.144490836232/8.0),

11559 
REAL_CONST
(49210.002246984441/8.0),

11560 
REAL_CONST
(49229.86200663932/8.0),

11561 
REAL_CONST
(49249.723769396718/8.0),

11562 
REAL_CONST
(49269.587534852675/8.0),

11563 
REAL_CONST
(49289.453302603448/8.0),

11564 
REAL_CONST
(49309.32107224549/8.0),

11565 
REAL_CONST
(49329.190843375451/8.0),

11566 
REAL_CONST
(49349.062615590192/8.0),

11567 
REAL_CONST
(49368.936388486785/8.0),

11568 
REAL_CONST
(49388.812161662492/8.0),

11569 
REAL_CONST
(49408.689934714785/8.0),

11570 
REAL_CONST
(49428.569707241324/8.0),

11571 
REAL_CONST
(49448.45147883999/8.0),

11572 
REAL_CONST
(49468.335249108866/8.0),

11573 
REAL_CONST
(49488.22101764621/8.0),

11574 
REAL_CONST
(49508.108784050521/8.0),

11575 
REAL_CONST
(49527.99854792047/8.0),

11576 
REAL_CONST
(49547.890308854934/8.0),

11577 
REAL_CONST
(49567.784066453009/8.0),

11578 
REAL_CONST
(49587.679820313977/8.0),

11579 
REAL_CONST
(49607.57757003732/8.0),

11580 
REAL_CONST
(49627.477315222721/8.0),

11581 
REAL_CONST
(49647.379055470075/8.0),

11582 
REAL_CONST
(49667.28279037946/8.0),

11583 
REAL_CONST
(49687.188519551179/8.0),

11584 
REAL_CONST
(49707.096242585707/8.0),

11585 
REAL_CONST
(49727.005959083741/8.0),

11586 
REAL_CONST
(49746.917668646165/8.0),

11587 
REAL_CONST
(49766.831370874068/8.0),

11588 
REAL_CONST
(49786.747065368734/8.0),

11589 
REAL_CONST
(49806.66475173166/8.0),

11590 
REAL_CONST
(49826.584429564515/8.0),

11591 
REAL_CONST
(49846.506098469203/8.0),

11592 
REAL_CONST
(49866.429758047794/8.0),

11593 
REAL_CONST
(49886.355407902578/8.0),

11594 
REAL_CONST
(49906.283047636032/8.0),

11595 
REAL_CONST
(49926.212676850846/8.0),

11596 
REAL_CONST
(49946.144295149883/8.0),

11597 
REAL_CONST
(49966.077902136225/8.0),

11598 
REAL_CONST
(49986.013497413151/8.0),

11599 
REAL_CONST
(50005.951080584135/8.0),

11600 
REAL_CONST
(50025.890651252834/8.0),

11601 
REAL_CONST
(50045.832209023123/8.0),

11602 
REAL_CONST
(50065.775753499074/8.0),

11603 
REAL_CONST
(50085.721284284933/8.0),

11604 
REAL_CONST
(50105.668800985164/8.0),

11605 
REAL_CONST
(50125.618303204428/8.0),

11606 
REAL_CONST
(50145.569790547575/8.0),

11607 
REAL_CONST
(50165.523262619652/8.0),

11608 
REAL_CONST
(50185.478719025901/8.0),

11609 
REAL_CONST
(50205.436159371769/8.0),

11610 
REAL_CONST
(50225.395583262893/8.0),

11611 
REAL_CONST
(50245.356990305103/8.0),

11612 
REAL_CONST
(50265.320380104429/8.0),

11613 
REAL_CONST
(50285.285752267104/8.0),

11614 
REAL_CONST
(50305.253106399534/8.0),

11615 
REAL_CONST
(50325.222442108337/8.0),

11616 
REAL_CONST
(50345.193759000336/8.0),

11617 
REAL_CONST
(50365.16705668252/8.0),

11618 
REAL_CONST
(50385.142334762102/8.0),

11619 
REAL_CONST
(50405.119592846473/8.0),

11620 
REAL_CONST
(50425.098830543218/8.0),

11621 
REAL_CONST
(50445.080047460127/8.0),

11622 
REAL_CONST
(50465.063243205179/8.0),

11623 
REAL_CONST
(50485.048417386541/8.0),

11624 
REAL_CONST
(50505.035569612577/8.0),

11625 
REAL_CONST
(50525.024699491856/8.0),

11626 
REAL_CONST
(50545.015806633128/8.0),

11627 
REAL_CONST
(50565.008890645338/8.0),

11628 
REAL_CONST
(50585.003951137631/8.0),

11629 
REAL_CONST
(50605.00098771933/8.0),

11630 
REAL_CONST
(50624.999999999971/8.0),

11631 
REAL_CONST
(50645.000987589265/8.0),

11632 
REAL_CONST
(50665.003950097132/8.0),

11633 
REAL_CONST
(50685.008887133677/8.0),

11634 
REAL_CONST
(50705.015798309192/8.0),

11635 
REAL_CONST
(50725.024683234165/8.0),

11636 
REAL_CONST
(50745.035541519283/8.0),

11637 
REAL_CONST
(50765.048372775411/8.0),

11638 
REAL_CONST
(50785.063176613621/8.0),

11639 
REAL_CONST
(50805.079952645159/8.0),

11640 
REAL_CONST
(50825.098700481489/8.0),

11641 
REAL_CONST
(50845.119419734241/8.0),

11642 
REAL_CONST
(50865.142110015244/8.0),

11643 
REAL_CONST
(50885.166770936521/8.0),

11644 
REAL_CONST
(50905.193402110279/8.0),

11645 
REAL_CONST
(50925.222003148934/8.0),

11646 
REAL_CONST
(50945.252573665071/8.0),

11647 
REAL_CONST
(50965.285113271471/8.0),

11648 
REAL_CONST
(50985.319621581119/8.0),

11649 
REAL_CONST
(51005.356098207172/8.0),

11650 
REAL_CONST
(51025.394542762981/8.0),

11651 
REAL_CONST
(51045.434954862096/8.0),

11652 
REAL_CONST
(51065.477334118244/8.0),

11653 
REAL_CONST
(51085.521680145357/8.0),

11654 
REAL_CONST
(51105.567992557546/8.0),

11655 
REAL_CONST
(51125.616270969113/8.0),

11656 
REAL_CONST
(51145.66651499454/8.0),

11657 
REAL_CONST
(51165.718724248516/8.0),

11658 
REAL_CONST
(51185.772898345916/8.0),

11659 
REAL_CONST
(51205.829036901778/8.0),

11660 
REAL_CONST
(51225.887139531362/8.0),

11661 
REAL_CONST
(51245.947205850105/8.0),

11662 
REAL_CONST
(51266.009235473619/8.0),

11663 
REAL_CONST
(51286.073228017718/8.0),

11664 
REAL_CONST
(51306.139183098399/8.0),

11665 
REAL_CONST
(51326.207100331856/8.0),

11666 
REAL_CONST
(51346.276979334456/8.0),

11667 
REAL_CONST
(51366.348819722756/8.0),

11668 
REAL_CONST
(51386.42262111351/8.0),

11669 
REAL_CONST
(51406.498383123653/8.0),

11670 
REAL_CONST
(51426.57610537031/8.0),

11671 
REAL_CONST
(51446.655787470787/8.0),

11672 
REAL_CONST
(51466.737429042587/8.0),

11673 
REAL_CONST
(51486.82102970338/8.0),

11674 
REAL_CONST
(51506.906589071048/8.0),

11675 
REAL_CONST
(51526.994106763632/8.0),

11676 
REAL_CONST
(51547.083582399391/8.0),

11677 
REAL_CONST
(51567.175015596738/8.0),

11678 
REAL_CONST
(51587.268405974297/8.0),

11679 
REAL_CONST
(51607.363753150858/8.0),

11680 
REAL_CONST
(51627.461056745415/8.0),

11681 
REAL_CONST
(51647.56031637713/8.0),

11682 
REAL_CONST
(51667.661531665362/8.0),

11683 
REAL_CONST
(51687.764702229651/8.0),

11684 
REAL_CONST
(51707.869827689727/8.0),

11685 
REAL_CONST
(51727.976907665499/8.0),

11686 
REAL_CONST
(51748.085941777055/8.0),

11687 
REAL_CONST
(51768.196929644677/8.0),

11688 
REAL_CONST
(51788.309870888836/8.0),

11689 
REAL_CONST
(51808.42476513017/8.0),

11690 
REAL_CONST
(51828.541611989524/8.0),

11691 
REAL_CONST
(51848.660411087905/8.0),

11692 
REAL_CONST
(51868.781162046515/8.0),

11693 
REAL_CONST
(51888.90386448674/8.0),

11694 
REAL_CONST
(51909.028518030143/8.0),

11695 
REAL_CONST
(51929.155122298485/8.0),

11696 
REAL_CONST
(51949.283676913685/8.0),

11697 
REAL_CONST
(51969.414181497872/8.0),

11698 
REAL_CONST
(51989.546635673345/8.0),

11699 
REAL_CONST
(52009.681039062583/8.0),

11700 
REAL_CONST
(52029.817391288263/8.0),

11701 
REAL_CONST
(52049.955691973213/8.0),

11702 
REAL_CONST
(52070.095940740481/8.0),

11703 
REAL_CONST
(52090.238137213273/8.0),

11704 
REAL_CONST
(52110.382281014987/8.0),

11705 
REAL_CONST
(52130.5283717692/8.0),

11706 
REAL_CONST
(52150.676409099666/8.0),

11707 
REAL_CONST
(52170.826392630333/8.0),

11708 
REAL_CONST
(52190.97832198532/8.0),

11709 
REAL_CONST
(52211.132196788931/8.0),

11710 
REAL_CONST
(52231.288016665654/8.0),

11711 
REAL_CONST
(52251.445781240145/8.0),

11712 
REAL_CONST
(52271.60549013727/8.0),

11713 
REAL_CONST
(52291.76714298204/8.0),

11714 
REAL_CONST
(52311.930739399664/8.0),

11715 
REAL_CONST
(52332.096279015546/8.0),

11716 
REAL_CONST
(52352.263761455244/8.0),

11717 
REAL_CONST
(52372.433186344519/8.0),

11718 
REAL_CONST
(52392.604553309284/8.0),

11719 
REAL_CONST
(52412.777861975665/8.0),

11720 
REAL_CONST
(52432.953111969946/8.0),

11721 
REAL_CONST
(52453.130302918595/8.0),

11722 
REAL_CONST
(52473.309434448267/8.0),

11723 
REAL_CONST
(52493.490506185793/8.0),

11724 
REAL_CONST
(52513.67351775818/8.0),

11725 
REAL_CONST
(52533.858468792605/8.0),

11726 
REAL_CONST
(52554.045358916446/8.0),

11727 
REAL_CONST
(52574.234187757254/8.0),

11728 
REAL_CONST
(52594.42495494274/8.0),

11729 
REAL_CONST
(52614.617660100812/8.0),

11730 
REAL_CONST
(52634.812302859558/8.0),

11731 
REAL_CONST
(52655.008882847229/8.0),

11732 
REAL_CONST
(52675.20739969227/8.0),

11733 
REAL_CONST
(52695.407853023295/8.0),

11734 
REAL_CONST
(52715.610242469098/8.0),

11735 
REAL_CONST
(52735.814567658657/8.0),

11736 
REAL_CONST
(52756.02082822111/8.0),

11737 
REAL_CONST
(52776.229023785803/8.0),

11738 
REAL_CONST
(52796.439153982225/8.0),

11739 
REAL_CONST
(52816.651218440056/8.0),

11740 
REAL_CONST
(52836.865216789171/8.0),

11741 
REAL_CONST
(52857.081148659599/8.0),

11742 
REAL_CONST
(52877.29901368155/8.0),

11743 
REAL_CONST
(52897.518811485425/8.0),

11744 
REAL_CONST
(52917.740541701773/8.0),

11745 
REAL_CONST
(52937.964203961354/8.0),

11746 
REAL_CONST
(52958.18979789508/8.0),

11747 
REAL_CONST
(52978.417323134046/8.0),

11748 
REAL_CONST
(52998.646779309529/8.0),

11749 
REAL_CONST
(53018.878166052978/8.0),

11750 
REAL_CONST
(53039.111482996006/8.0),

11751 
REAL_CONST
(53059.346729770419/8.0),

11752 
REAL_CONST
(53079.583906008193/8.0),

11753 
REAL_CONST
(53099.823011341483/8.0),

11754 
REAL_CONST
(53120.0640454026/8.0),

11755 
REAL_CONST
(53140.307007824063/8.0),

11756 
REAL_CONST
(53160.551898238533/8.0),

11757 
REAL_CONST
(53180.79871627887/8.0),

11758 
REAL_CONST
(53201.047461578091/8.0),

11759 
REAL_CONST
(53221.2981337694/8.0),

11760 
REAL_CONST
(53241.550732486176/8.0),

11761 
REAL_CONST
(53261.805257361964/8.0),

11762 
REAL_CONST
(53282.061708030487/8.0),

11763 
REAL_CONST
(53302.32008412564/8.0),

11764 
REAL_CONST
(53322.580385281493/8.0),

11765 
REAL_CONST
(53342.842611132299/8.0),

11766 
REAL_CONST
(53363.106761312469/8.0),

11767 
REAL_CONST
(53383.372835456597/8.0),

11768 
REAL_CONST
(53403.640833199453/8.0),

11769 
REAL_CONST
(53423.910754175973/8.0),

11770 
REAL_CONST
(53444.18259802126/8.0),

11771 
REAL_CONST
(53464.456364370613/8.0),

11772 
REAL_CONST
(53484.732052859479/8.0),

11773 
REAL_CONST
(53505.009663123499/8.0),

11774 
REAL_CONST
(53525.289194798468/8.0),

11775 
REAL_CONST
(53545.570647520362/8.0),

11776 
REAL_CONST
(53565.854020925333/8.0),

11777 
REAL_CONST
(53586.139314649699/8.0),

11778 
REAL_CONST
(53606.426528329954/8.0),

11779 
REAL_CONST
(53626.715661602764/8.0),

11780 
REAL_CONST
(53647.006714104959/8.0),

11781 
REAL_CONST
(53667.299685473547/8.0),

11782 
REAL_CONST
(53687.59457534572/8.0),

11783 
REAL_CONST
(53707.891383358816/8.0),

11784 
REAL_CONST
(53728.190109150361/8.0),

11785 
REAL_CONST
(53748.490752358055/8.0),

11786 
REAL_CONST
(53768.793312619753/8.0),

11787 
REAL_CONST
(53789.09778957349/8.0),

11788 
REAL_CONST
(53809.404182857485/8.0),

11789 
REAL_CONST
(53829.712492110106/8.0),

11790 
REAL_CONST
(53850.022716969899/8.0),

11791 
REAL_CONST
(53870.334857075584/8.0),

11792 
REAL_CONST
(53890.648912066055/8.0),

11793 
REAL_CONST
(53910.964881580367/8.0),

11794 
REAL_CONST
(53931.28276525774/8.0),

11795 
REAL_CONST
(53951.602562737586/8.0),

11796 
REAL_CONST
(53971.924273659461/8.0),

11797 
REAL_CONST
(53992.24789766311/8.0),

11798 
REAL_CONST
(54012.57343438844/8.0),

11799 
REAL_CONST
(54032.90088347553/8.0),

11800 
REAL_CONST
(54053.23024456462/8.0),

11801 
REAL_CONST
(54073.561517296133/8.0),

11802 
REAL_CONST
(54093.894701310644/8.0),

11803 
REAL_CONST
(54114.22979624891/8.0),

11804 
REAL_CONST
(54134.566801751855/8.0),

11805 
REAL_CONST
(54154.90571746057/8.0),

11806 
REAL_CONST
(54175.246543016314/8.0),

11807 
REAL_CONST
(54195.589278060506/8.0),

11808 
REAL_CONST
(54215.933922234755/8.0),

11809 
REAL_CONST
(54236.280475180814/8.0),

11810 
REAL_CONST
(54256.628936540626/8.0),

11811 
REAL_CONST
(54276.97930595628/8.0),

11812 
REAL_CONST
(54297.331583070045/8.0),

11813 
REAL_CONST
(54317.685767524359/8.0),

11814 
REAL_CONST
(54338.041858961828/8.0),

11815 
REAL_CONST
(54358.399857025215/8.0),

11816 
REAL_CONST
(54378.759761357462/8.0),

11817 
REAL_CONST
(54399.121571601667/8.0),

11818 
REAL_CONST
(54419.485287401105/8.0),

11819 
REAL_CONST
(54439.850908399218/8.0),

11820 
REAL_CONST
(54460.218434239614/8.0),

11821 
REAL_CONST
(54480.587864566056/8.0),

11822 
REAL_CONST
(54500.95919902248/8.0),

11823 
REAL_CONST
(54521.332437252997/8.0),

11824 
REAL_CONST
(54541.707578901878/8.0),

11825 
REAL_CONST
(54562.084623613555/8.0),

11826 
REAL_CONST
(54582.46357103264/8.0),

11827 
REAL_CONST
(54602.844420803893/8.0),

11828 
REAL_CONST
(54623.227172572246/8.0),

11829 
REAL_CONST
(54643.611825982807/8.0),

11830 
REAL_CONST
(54663.998380680838/8.0),

11831 
REAL_CONST
(54684.386836311773/8.0),

11832 
REAL_CONST
(54704.777192521207/8.0),

11833 
REAL_CONST
(54725.169448954897/8.0),

11834 
REAL_CONST
(54745.563605258772/8.0),

11835 
REAL_CONST
(54765.959661078923/8.0),

11836 
REAL_CONST
(54786.357616061614/8.0),

11837 
REAL_CONST
(54806.757469853255/8.0),

11838 
REAL_CONST
(54827.159222100439/8.0),

11839 
REAL_CONST
(54847.562872449904/8.0),

11840 
REAL_CONST
(54867.968420548583/8.0),

11841 
REAL_CONST
(54888.375866043534/8.0),

11842 
REAL_CONST
(54908.785208582012/8.0),

11843 
REAL_CONST
(54929.196447811417/8.0),

11844 
REAL_CONST
(54949.609583379322/8.0),

11845 
REAL_CONST
(54970.024614933463/8.0),

11846 
REAL_CONST
(54990.441542121727/8.0),

11847 
REAL_CONST
(55010.86036459219/8.0),

11848 
REAL_CONST
(55031.28108199306/8.0),

11849 
REAL_CONST
(55051.703693972733/8.0),

11850 
REAL_CONST
(55072.128200179759/8.0),

11851 
REAL_CONST
(55092.554600262847/8.0),

11852 
REAL_CONST
(55112.982893870874/8.0),

11853 
REAL_CONST
(55133.413080652877/8.0),

11854 
REAL_CONST
(55153.845160258061/8.0),

11855 
REAL_CONST
(55174.279132335789/8.0),

11856 
REAL_CONST
(55194.714996535586/8.0),

11857 
REAL_CONST
(55215.152752507143/8.0),

11858 
REAL_CONST
(55235.592399900306/8.0),

11859 
REAL_CONST
(55256.033938365079/8.0),

11860 
REAL_CONST
(55276.477367551655/8.0),

11861 
REAL_CONST
(55296.92268711036/8.0),

11862 
REAL_CONST
(55317.369896691685/8.0),

11863 
REAL_CONST
(55337.818995946305/8.0),

11864 
REAL_CONST
(55358.269984525024/8.0),

11865 
REAL_CONST
(55378.72286207883/8.0),

11866 
REAL_CONST
(55399.177628258869/8.0),

11867 
REAL_CONST
(55419.634282716441/8.0),

11868 
REAL_CONST
(55440.092825103013/8.0),

11869 
REAL_CONST
(55460.553255070205/8.0),

11870 
REAL_CONST
(55481.015572269804/8.0),

11871 
REAL_CONST
(55501.479776353764/8.0),

11872 
REAL_CONST
(55521.945866974187/8.0),

11873 
REAL_CONST
(55542.413843783339/8.0),

11874 
REAL_CONST
(55562.883706433655/8.0),

11875 
REAL_CONST
(55583.355454577715/8.0),

11876 
REAL_CONST
(55603.82908786826/8.0),

11877 
REAL_CONST
(55624.304605958219/8.0),

11878 
REAL_CONST
(55644.782008500639/8.0),

11879 
REAL_CONST
(55665.261295148754/8.0),

11880 
REAL_CONST
(55685.742465555952/8.0),

11881 
REAL_CONST
(55706.225519375774/8.0),

11882 
REAL_CONST
(55726.710456261928/8.0),

11883 
REAL_CONST
(55747.197275868275/8.0),

11884 
REAL_CONST
(55767.685977848843/8.0),

11885 
REAL_CONST
(55788.176561857814/8.0),

11886 
REAL_CONST
(55808.669027549528/8.0),

11887 
REAL_CONST
(55829.163374578478/8.0),

11888 
REAL_CONST
(55849.659602599328/8.0),

11889 
REAL_CONST
(55870.157711266889/8.0),

11890 
REAL_CONST
(55890.657700236145/8.0),

11891 
REAL_CONST
(55911.159569162221/8.0),

11892 
REAL_CONST
(55931.663317700411/8.0),

11893 
REAL_CONST
(55952.168945506164/8.0),

11894 
REAL_CONST
(55972.676452235086/8.0),

11895 
REAL_CONST
(55993.185837542944/8.0),

11896 
REAL_CONST
(56013.697101085651/8.0),

11897 
REAL_CONST
(56034.210242519301/8.0),

11898 
REAL_CONST
(56054.72526150012/8.0),

11899 
REAL_CONST
(56075.242157684508/8.0),

11900 
REAL_CONST
(56095.760930729011/8.0),

11901 
REAL_CONST
(56116.281580290342/8.0),

11902 
REAL_CONST
(56136.804106025367/8.0),

11903 
REAL_CONST
(56157.328507591104/8.0),

11904 
REAL_CONST
(56177.85478464474/8.0),

11905 
REAL_CONST
(56198.382936843598/8.0),

11906 
REAL_CONST
(56218.912963845185/8.0),

11907 
REAL_CONST
(56239.444865307138/8.0),

11908 
REAL_CONST
(56259.978640887268/8.0),

11909 
REAL_CONST
(56280.514290243525/8.0),

11910 
REAL_CONST
(56301.051813034042/8.0),

11911 
REAL_CONST
(56321.591208917082/8.0),

11912 
REAL_CONST
(56342.13247755108/8.0),

11913 
REAL_CONST
(56362.675618594607/8.0),

11914 
REAL_CONST
(56383.220631706419/8.0),

11915 
REAL_CONST
(56403.767516545398/8.0),

11916 
REAL_CONST
(56424.316272770608/8.0),

11917 
REAL_CONST
(56444.866900041241/8.0),

11918 
REAL_CONST
(56465.419398016667/8.0),

11919 
REAL_CONST
(56485.973766356394/8.0),

11920 
REAL_CONST
(56506.530004720102/8.0),

11921 
REAL_CONST
(56527.088112767611/8.0),

11922 
REAL_CONST
(56547.648090158902/8.0),

11923 
REAL_CONST
(56568.209936554107/8.0),

11924 
REAL_CONST
(56588.773651613519/8.0),

11925 
REAL_CONST
(56609.339234997584/8.0),

11926 
REAL_CONST
(56629.9066863669/8.0),

11927 
REAL_CONST
(56650.47600538221/8.0),

11928 
REAL_CONST
(56671.04719170442/8.0),

11929 
REAL_CONST
(56691.620244994599/8.0),

11930 
REAL_CONST
(56712.195164913959/8.0),

11931 
REAL_CONST
(56732.771951123868/8.0),

11932 
REAL_CONST
(56753.350603285835/8.0),

11933 
REAL_CONST
(56773.931121061541/8.0),

11934 
REAL_CONST
(56794.513504112823/8.0),

11935 
REAL_CONST
(56815.097752101647/8.0),

11936 
REAL_CONST
(56835.683864690152/8.0),

11937 
REAL_CONST
(56856.271841540627/8.0),

11938 
REAL_CONST
(56876.86168231551/8.0),

11939 
REAL_CONST
(56897.453386677393/8.0),

11940 
REAL_CONST
(56918.046954289028/8.0),

11941 
REAL_CONST
(56938.642384813298/8.0),

11942 
REAL_CONST
(56959.239677913261/8.0),

11943 
REAL_CONST
(56979.838833252121/8.0),

11944 
REAL_CONST
(57000.439850493225/8.0),

11945 
REAL_CONST
(57021.04272930009/8.0),

11946 
REAL_CONST
(57041.647469336371/8.0),

11947 
REAL_CONST
(57062.254070265873/8.0),

11948 
REAL_CONST
(57082.862531752558/8.0),

11949 
REAL_CONST
(57103.472853460553/8.0),

11950 
REAL_CONST
(57124.085035054108/8.0),

11951 
REAL_CONST
(57144.699076197649/8.0),

11952 
REAL_CONST
(57165.314976555739/8.0),

11953 
REAL_CONST
(57185.932735793103/8.0),

11954 
REAL_CONST
(57206.552353574611/8.0),

11955 
REAL_CONST
(57227.173829565276/8.0),

11956 
REAL_CONST
(57247.797163430281/8.0),

11957 
REAL_CONST
(57268.42235483494/8.0),

11958 
REAL_CONST
(57289.049403444733/8.0),

11959 
REAL_CONST
(57309.678308925286/8.0),

11960 
REAL_CONST
(57330.30907094237/8.0),

11961 
REAL_CONST
(57350.941689161911/8.0),

11962 
REAL_CONST
(57371.576163249985/8.0),

11963 
REAL_CONST
(57392.212492872815/8.0),

11964 
REAL_CONST
(57412.850677696784/8.0),

11965 
REAL_CONST
(57433.490717388406/8.0),

11966 
REAL_CONST
(57454.132611614368/8.0),

11967 
REAL_CONST
(57474.776360041491/8.0),

11968 
REAL_CONST
(57495.421962336746/8.0),

11969 
REAL_CONST
(57516.069418167266/8.0),

11970 
REAL_CONST
(57536.718727200314/8.0),

11971 
REAL_CONST
(57557.36988910332/8.0),

11972 
REAL_CONST
(57578.022903543861/8.0),

11973 
REAL_CONST
(57598.677770189643/8.0),

11974 
REAL_CONST
(57619.334488708548/8.0),

11975 
REAL_CONST
(57639.993058768589/8.0),

11976 
REAL_CONST
(57660.653480037938/8.0),

11977 
REAL_CONST
(57681.315752184906/8.0),

11978 
REAL_CONST
(57701.979874877965/8.0),

11979 
REAL_CONST
(57722.64584778573/8.0),

11980 
REAL_CONST
(57743.31367057695/8.0),

11981 
REAL_CONST
(57763.983342920546/8.0),

11982 
REAL_CONST
(57784.654864485572/8.0),

11983 
REAL_CONST
(57805.328234941233/8.0),

11984 
REAL_CONST
(57826.003453956881/8.0),

11985 
REAL_CONST
(57846.680521202026/8.0),

11986 
REAL_CONST
(57867.359436346305/8.0),

11987 
REAL_CONST
(57888.040199059527/8.0),

11988 
REAL_CONST
(57908.722809011633/8.0),

11989 
REAL_CONST
(57929.407265872709/8.0),

11990 
REAL_CONST
(57950.093569313001/8.0),

11991 
REAL_CONST
(57970.781719002895/8.0),

11992 
REAL_CONST
(57991.471714612911/8.0),

11993 
REAL_CONST
(58012.16355581375/8.0),

11994 
REAL_CONST
(58032.857242276223/8.0),

11995 
REAL_CONST
(58053.552773671312/8.0),

11996 
REAL_CONST
(58074.25014967013/8.0),

11997 
REAL_CONST
(58094.949369943948/8.0),

11998 
REAL_CONST
(58115.650434164185/8.0),

11999 
REAL_CONST
(58136.353342002389/8.0),

12000 
REAL_CONST
(58157.058093130276/8.0),

12001 
REAL_CONST
(58177.764687219693/8.0),

12002 
REAL_CONST
(58198.47312394264/8.0),

12003 
REAL_CONST
(58219.183402971255/8.0),

12004 
REAL_CONST
(58239.895523977837/8.0),

12005 
REAL_CONST
(58260.609486634821/8.0),

12006 
REAL_CONST
(58281.325290614775/8.0),

12007 
REAL_CONST
(58302.042935590434/8.0),

12008 
REAL_CONST
(58322.762421234678/8.0),

12009 
REAL_CONST
(58343.483747220511/8.0),

12010 
REAL_CONST
(58364.206913221096/8.0),

12011 
REAL_CONST
(58384.931918909751/8.0),

12012 
REAL_CONST
(58405.658763959924/8.0),

12013 
REAL_CONST
(58426.3874480452/8.0),

12014 
REAL_CONST
(58447.117970839339/8.0),

12015 
REAL_CONST
(58467.85033201622/8.0),

12016 
REAL_CONST
(58488.584531249864/8.0),

12017 
REAL_CONST
(58509.320568214462/8.0),

12018 
REAL_CONST
(58530.058442584334/8.0),

12019 
REAL_CONST
(58550.798154033931/8.0),

12020 
REAL_CONST
(58571.539702237875/8.0),

12021 
REAL_CONST
(58592.283086870906/8.0),

12022 
REAL_CONST
(58613.028307607929/8.0),

12023 
REAL_CONST
(58633.775364123983/8.0),

12024 
REAL_CONST
(58654.52425609425/8.0),

12025 
REAL_CONST
(58675.274983194053/8.0),

12026 
REAL_CONST
(58696.027545098877/8.0),

12027 
REAL_CONST
(58716.781941484325/8.0),

12028 
REAL_CONST
(58737.538172026158/8.0),

12029 
REAL_CONST
(58758.296236400274/8.0),

12030 
REAL_CONST
(58779.056134282728/8.0),

12031 
REAL_CONST
(58799.817865349694/8.0),

12032 
REAL_CONST
(58820.581429277503/8.0),

12033 
REAL_CONST
(58841.346825742643/8.0),

12034 
REAL_CONST
(58862.114054421712/8.0),

12035 
REAL_CONST
(58882.883114991484/8.0),

12036 
REAL_CONST
(58903.654007128847/8.0),

12037 
REAL_CONST
(58924.426730510851/8.0),

12038 
REAL_CONST
(58945.201284814684/8.0),

12039 
REAL_CONST
(58965.977669717664/8.0),

12040 
REAL_CONST
(58986.755884897269/8.0),

12041 
REAL_CONST
(59007.535930031117/8.0),

12042 
REAL_CONST
(59028.317804796949/8.0),

12043 
REAL_CONST
(59049.101508872664/8.0),

12044 
REAL_CONST
(59069.887041936301/8.0),

12045 
REAL_CONST
(59090.674403666046/8.0),

12046 
REAL_CONST
(59111.463593740213/8.0),

12047 
REAL_CONST
(59132.254611837263/8.0),

12048 
REAL_CONST
(59153.047457635803/8.0),

12049 
REAL_CONST
(59173.84213081457/8.0),

12050 
REAL_CONST
(59194.638631052461/8.0),

12051 
REAL_CONST
(59215.436958028506/8.0),

12052 
REAL_CONST
(59236.237111421855/8.0),

12053 
REAL_CONST
(59257.039090911829/8.0),

12054 
REAL_CONST
(59277.842896177877/8.0),

12055 
REAL_CONST
(59298.648526899589/8.0),

12056 
REAL_CONST
(59319.455982756685/8.0),

12057 
REAL_CONST
(59340.26526342905/8.0),

12058 
REAL_CONST
(59361.076368596696/8.0),

12059 
REAL_CONST
(59381.889297939757/8.0),

12060 
REAL_CONST
(59402.704051138542/8.0),

12061 
REAL_CONST
(59423.520627873484/8.0),

12062 
REAL_CONST
(59444.339027825139/8.0),

12063 
REAL_CONST
(59465.159250674224/8.0),

12064 
REAL_CONST
(59485.9812961016/8.0),

12065 
REAL_CONST
(59506.805163788253/8.0),

12066 
REAL_CONST
(59527.630853415307/8.0),

12067 
REAL_CONST
(59548.458364664046/8.0),

12068 
REAL_CONST
(59569.287697215863/8.0),

12069 
REAL_CONST
(59590.118850752311/8.0),

12070 
REAL_CONST
(59610.951824955089/8.0),

12071 
REAL_CONST
(59631.786619506012/8.0),

12072 
REAL_CONST
(59652.623234087048/8.0),

12073 
REAL_CONST
(59673.461668380311/8.0),

12074 
REAL_CONST
(59694.301922068029/8.0),

12075 
REAL_CONST
(59715.143994832593/8.0),

12076 
REAL_CONST
(59735.987886356525/8.0),

12077 
REAL_CONST
(59756.833596322482/8.0),

12078 
REAL_CONST
(59777.681124413255/8.0),

12079 
REAL_CONST
(59798.530470311794/8.0),

12080 
REAL_CONST
(59819.381633701159/8.0),

12081 
REAL_CONST
(59840.234614264569/8.0),

12082 
REAL_CONST
(59861.089411685381/8.0),

12083 
REAL_CONST
(59881.94602564707/8.0),

12084 
REAL_CONST
(59902.804455833269/8.0),

12085 
REAL_CONST
(59923.664701927737/8.0),

12086 
REAL_CONST
(59944.526763614384/8.0),

12087 
REAL_CONST
(59965.390640577243/8.0),

12088 
REAL_CONST
(59986.256332500488/8.0),

12089 
REAL_CONST
(60007.123839068438/8.0),

12090 
REAL_CONST
(60027.993159965539/8.0),

12091 
REAL_CONST
(60048.864294876381/8.0),

12092 
REAL_CONST
(60069.737243485688/8.0),

12093 
REAL_CONST
(60090.612005478324/8.0),

12094 
REAL_CONST
(60111.488580539284/8.0),

12095 
REAL_CONST
(60132.366968353708/8.0),

12096 
REAL_CONST
(60153.247168606867/8.0),

12097 
REAL_CONST
(60174.129180984164/8.0),

12098 
REAL_CONST
(60195.013005171153/8.0),

12099 
REAL_CONST
(60215.898640853513/8.0),

12100 
REAL_CONST
(60236.786087717061/8.0),

12101 
REAL_CONST
(60257.675345447751/8.0),

12102 
REAL_CONST
(60278.566413731671/8.0),

12103 
REAL_CONST
(60299.459292255044/8.0),

12104 
REAL_CONST
(60320.353980704247/8.0),

12105 
REAL_CONST
(60341.25047876576/8.0),

12106 
REAL_CONST
(60362.148786126229/8.0),

12107 
REAL_CONST
(60383.048902472423/8.0),

12108 
REAL_CONST
(60403.950827491237/8.0),

12109 
REAL_CONST
(60424.854560869717/8.0),

12110 
REAL_CONST
(60445.76010229504/8.0),

12111 
REAL_CONST
(60466.667451454516/8.0),

12112 
REAL_CONST
(60487.57660803559/8.0),

12113 
REAL_CONST
(60508.487571725847/8.0),

12114 
REAL_CONST
(60529.400342212997/8.0),

12115 
REAL_CONST
(60550.314919184893/8.0),

12116 
REAL_CONST
(60571.231302329521/8.0),

12117 
REAL_CONST
(60592.149491335003/8.0),

12118 
REAL_CONST
(60613.069485889588/8.0),

12119 
REAL_CONST
(60633.991285681674/8.0),

12120 
REAL_CONST
(60654.914890399785/8.0),

12121 
REAL_CONST
(60675.840299732568/8.0),

12122 
REAL_CONST
(60696.767513368832/8.0),

12123 
REAL_CONST
(60717.696530997484/8.0),

12124 
REAL_CONST
(60738.627352307602/8.0),

12125 
REAL_CONST
(60759.55997698837/8.0),

12126 
REAL_CONST
(60780.494404729128/8.0),

12127 
REAL_CONST
(60801.430635219323/8.0),

12128 
REAL_CONST
(60822.368668148556/8.0),

12129 
REAL_CONST
(60843.308503206565/8.0),

12130 
REAL_CONST
(60864.250140083204/8.0),

12131 
REAL_CONST
(60885.193578468468/8.0),

12132 
REAL_CONST
(60906.138818052495/8.0),

12133 
REAL_CONST
(60927.085858525541/8.0),

12134 
REAL_CONST
(60948.034699578006/8.0),

12135 
REAL_CONST
(60968.985340900421/8.0),

12136 
REAL_CONST
(60989.937782183442/8.0),

12137 
REAL_CONST
(61010.892023117864/8.0),

12138 
REAL_CONST
(61031.848063394616/8.0),

12139 
REAL_CONST
(61052.805902704764/8.0),

12140 
REAL_CONST
(61073.765540739492/8.0),

12141 
REAL_CONST
(61094.726977190134/8.0),

12142 
REAL_CONST
(61115.690211748137/8.0),

12143 
REAL_CONST
(61136.655244105103/8.0),

12144 
REAL_CONST
(61157.622073952742/8.0),

12145 
REAL_CONST
(61178.590700982917/8.0),

12146 
REAL_CONST
(61199.561124887616/8.0),

12147 
REAL_CONST
(61220.533345358948/8.0),

12148 
REAL_CONST
(61241.507362089171/8.0),

12149 
REAL_CONST
(61262.483174770663/8.0),

12150 
REAL_CONST
(61283.460783095943/8.0),

12151 
REAL_CONST
(61304.440186757645/8.0),

12152 
REAL_CONST
(61325.421385448557/8.0),

12153 
REAL_CONST
(61346.404378861582/8.0),

12154 
REAL_CONST
(61367.389166689762/8.0),

12155 
REAL_CONST
(61388.375748626262/8.0),

12156 
REAL_CONST
(61409.364124364387/8.0),

12157 
REAL_CONST
(61430.354293597571/8.0),

12158 
REAL_CONST
(61451.346256019373/8.0),

12159 
REAL_CONST
(61472.340011323497/8.0),

12160 
REAL_CONST
(61493.335559203762/8.0),

12161 
REAL_CONST
(61514.332899354122/8.0),

12162 
REAL_CONST
(61535.332031468672/8.0),

12163 
REAL_CONST
(61556.332955241618/8.0),

12164 
REAL_CONST
(61577.335670367313/8.0),

12165 
REAL_CONST
(61598.340176540238/8.0),

12166 
REAL_CONST
(61619.346473454993/8.0),

12167 
REAL_CONST
(61640.354560806329/8.0),

12168 
REAL_CONST
(61661.3644382891/8.0),

12169 
REAL_CONST
(61682.376105598312/8.0),

12170 
REAL_CONST
(61703.389562429089/8.0),

12171 
REAL_CONST
(61724.404808476691/8.0),

12172 
REAL_CONST
(61745.42184343651/8.0),

12173 
REAL_CONST
(61766.440667004063/8.0),

12174 
REAL_CONST
(61787.461278874987/8.0),

12175 
REAL_CONST
(61808.483678745069/8.0),

12176 
REAL_CONST
(61829.507866310203/8.0),

12177 
REAL_CONST
(61850.533841266435/8.0),

12178 
REAL_CONST
(61871.561603309929/8.0),

12179 
REAL_CONST
(61892.591152136971/8.0),

12180 
REAL_CONST
(61913.622487443987/8.0),

12181 
REAL_CONST
(61934.655608927525/8.0),

12182 
REAL_CONST
(61955.690516284267/8.0),

12183 
REAL_CONST
(61976.727209211022/8.0),

12184 
REAL_CONST
(61997.765687404724/8.0),

12185 
REAL_CONST
(62018.805950562448/8.0),

12186 
REAL_CONST
(62039.847998381381/8.0),

12187 
REAL_CONST
(62060.891830558845/8.0),

12188 
REAL_CONST
(62081.93744679229/8.0),

12189 
REAL_CONST
(62102.984846779298/8.0),

12190 
REAL_CONST
(62124.034030217575/8.0),

12191 
REAL_CONST
(62145.084996804966/8.0),

12192 
REAL_CONST
(62166.137746239416/8.0),

12193 
REAL_CONST
(62187.19227821903/8.0),

12194 
REAL_CONST
(62208.248592442025/8.0),

12195 
REAL_CONST
(62229.306688606739/8.0),

12196 
REAL_CONST
(62250.366566411656/8.0),

12197 
REAL_CONST
(62271.428225555377/8.0),

12198 
REAL_CONST
(62292.491665736627/8.0),

12199 
REAL_CONST
(62313.556886654267/8.0),

12200 
REAL_CONST
(62334.623888007271/8.0),

12201 
REAL_CONST
(62355.692669494762/8.0),

12202 
REAL_CONST
(62376.763230815974/8.0),

12203 
REAL_CONST
(62397.835571670272/8.0),

12204 
REAL_CONST
(62418.909691757144/8.0),

12205 
REAL_CONST
(62439.98559077621/8.0),

12206 
REAL_CONST
(62461.063268427228/8.0),

12207 
REAL_CONST
(62482.142724410049/8.0),

12208 
REAL_CONST
(62503.223958424685/8.0),

12209 
REAL_CONST
(62524.306970171267/8.0),

12210 
REAL_CONST
(62545.39175935003/8.0),

12211 
REAL_CONST
(62566.478325661366/8.0),

12212 
REAL_CONST
(62587.566668805768/8.0),

12213 
REAL_CONST
(62608.656788483881/8.0),

12214 
REAL_CONST
(62629.748684396451/8.0),

12215 
REAL_CONST
(62650.842356244357/8.0),

12216 
REAL_CONST
(62671.937803728622/8.0),

12217 
REAL_CONST
(62693.035026550366/8.0),

12218 
REAL_CONST
(62714.134024410858/8.0),

12219 
REAL_CONST
(62735.234797011479/8.0),

12220 
REAL_CONST
(62756.337344053733/8.0),

12221 
REAL_CONST
(62777.441665239276/8.0),

12222 
REAL_CONST
(62798.547760269852/8.0),

12223 
REAL_CONST
(62819.655628847358/8.0),

12224 
REAL_CONST
(62840.765270673801/8.0),

12225 
REAL_CONST
(62861.876685451323/8.0),

12226 
REAL_CONST
(62882.989872882186/8.0),

12227 
REAL_CONST
(62904.104832668774/8.0),

12228 
REAL_CONST
(62925.221564513602/8.0),

12229 
REAL_CONST
(62946.340068119309/8.0),

12230 
REAL_CONST
(62967.460343188657/8.0),

12231 
REAL_CONST
(62988.582389424526/8.0),

12232 
REAL_CONST
(63009.70620652994/8.0),

12233 
REAL_CONST
(63030.831794208025/8.0),

12234 
REAL_CONST
(63051.959152162039/8.0),

12235 
REAL_CONST
(63073.08828009537/8.0),

12236 
REAL_CONST
(63094.219177711529/8.0),

12237 
REAL_CONST
(63115.351844714154/8.0),

12238 
REAL_CONST
(63136.486280806988/8.0),

12239 
REAL_CONST
(63157.622485693922/8.0),

12240 
REAL_CONST
(63178.760459078956/8.0),

12241 
REAL_CONST
(63199.900200666219/8.0),

12242 
REAL_CONST
(63221.041710159967/8.0),

12243 
REAL_CONST
(63242.184987264569/8.0),

12244 
REAL_CONST
(63263.330031684534/8.0),

12245 
REAL_CONST
(63284.476843124474/8.0),

12246 
REAL_CONST
(63305.625421289144/8.0),

12247 
REAL_CONST
(63326.775765883409/8.0),

12248 
REAL_CONST
(63347.927876612259/8.0),

12249 
REAL_CONST
(63369.081753180813/8.0),

12250 
REAL_CONST
(63390.237395294316/8.0),

12251 
REAL_CONST
(63411.39480265812/8.0),

12252 
REAL_CONST
(63432.553974977716/8.0),

12253 
REAL_CONST
(63453.714911958712/8.0),

12254 
REAL_CONST
(63474.877613306839/8.0),

12255 
REAL_CONST
(63496.042078727944/8.0),

12256 
REAL_CONST
(63517.208307927998/8.0),

12257 
REAL_CONST
(63538.376300613119/8.0),

12258 
REAL_CONST
(63559.546056489504/8.0),

12259 
REAL_CONST
(63580.717575263516/8.0),

12260 
REAL_CONST
(63601.890856641607/8.0),

12261 
REAL_CONST
(63623.065900330374/8.0),

12262 
REAL_CONST
(63644.242706036515/8.0),

12263 
REAL_CONST
(63665.421273466869/8.0),

12264 
REAL_CONST
(63686.601602328381/8.0),

12265 
REAL_CONST
(63707.783692328136/8.0),

12266 
REAL_CONST
(63728.967543173334/8.0),

12267 
REAL_CONST
(63750.153154571279/8.0),

12268 
REAL_CONST
(63771.340526229418/8.0),

12269 
REAL_CONST
(63792.529657855317/8.0),

12270 
REAL_CONST
(63813.720549156649/8.0),

12271 
REAL_CONST
(63834.913199841227/8.0),

12272 
REAL_CONST
(63856.107609616978/8.0),

12273 
REAL_CONST
(63877.303778191941/8.0),

12274 
REAL_CONST
(63898.501705274284/8.0),

12275 
REAL_CONST
(63919.7013905723/8.0),

12276 
REAL_CONST
(63940.902833794404/8.0),

12277 
REAL_CONST
(63962.106034649114/8.0),

12278 
REAL_CONST
(63983.310992845094/8.0),

12279 
REAL_CONST
(64004.517708091109/8.0),

12280 
REAL_CONST
(64025.726180096048/8.0),

12281 
REAL_CONST
(64046.936408568938/8.0),

12282 
REAL_CONST
(64068.1483932189/8.0),

12283 
REAL_CONST
(64089.362133755196/8.0),

12284 
REAL_CONST
(64110.577629887193/8.0),

12285 
REAL_CONST
(64131.794881324393/8.0),

12286 
REAL_CONST
(64153.013887776404/8.0),

12287 
REAL_CONST
(64174.234648952966/8.0),

12288 
REAL_CONST
(64195.457164563937/8.0),

12289 
REAL_CONST
(64216.681434319289/8.0),

12290 
REAL_CONST
(64237.907457929112/8.0),

12291 
REAL_CONST
(64259.135235103626/8.0),

12292 
REAL_CONST
(64280.36476555316/8.0),

12293 
REAL_CONST
(64301.596048988169/8.0),

12294 
REAL_CONST
(64322.829085119236/8.0),

12295 
REAL_CONST
(64344.06387365704/8.0),

12296 
REAL_CONST
(64365.300414312398/8.0),

12297 
REAL_CONST
(64386.538706796251/8.0),

12298 
REAL_CONST
(64407.778750819634/8.0),

12299 
REAL_CONST
(64429.020546093721/8.0),

12300 
REAL_CONST
(64450.26409232981/8.0),

12301 
REAL_CONST
(64471.509389239291/8.0),

12302 
REAL_CONST
(64492.756436533709/8.0),

12303 
REAL_CONST
(64514.005233924705/8.0),

12304 
REAL_CONST
(64535.255781124033/8.0),

12305 
REAL_CONST
(64556.50807784358/8.0),

12306 
REAL_CONST
(64577.762123795357/8.0),

12307 
REAL_CONST
(64599.017918691468/8.0),

12308 
REAL_CONST
(64620.275462244172/8.0),

12309 
REAL_CONST
(64641.534754165805/8.0),

12310 
REAL_CONST
(64662.795794168844/8.0),

12311 
REAL_CONST
(64684.058581965895/8.0),

12312 
REAL_CONST
(64705.323117269661/8.0),

12313 
REAL_CONST
(64726.589399792974/8.0),

12314 
REAL_CONST
(64747.857429248776/8.0),

12315 
REAL_CONST
(64769.127205350138/8.0),

12316 
REAL_CONST
(64790.398727810236/8.0),

12317 
REAL_CONST
(64811.671996342375/8.0),

12318 
REAL_CONST
(64832.947010659969/8.0),

12319 
REAL_CONST
(64854.223770476558/8.0),

12320 
REAL_CONST
(64875.502275505794/8.0),

12321 
REAL_CONST
(64896.782525461451/8.0),

12322 
REAL_CONST
(64918.064520057414/8.0),

12323 
REAL_CONST
(64939.348259007682/8.0),

12324 
REAL_CONST
(64960.633742026388/8.0),

12325 
REAL_CONST
(64981.920968827762/8.0),

12326 
REAL_CONST
(65003.209939126165/8.0),

12327 
REAL_CONST
(65024.500652636067/8.0),

12328 
REAL_CONST
(65045.793109072067/8.0),

12329 
REAL_CONST
(65067.087308148861/8.0),

12330 
REAL_CONST
(65088.383249581282/8.0),

12331 
REAL_CONST
(65109.680933084259/8.0),

12332 
REAL_CONST
(65130.980358372864/8.0),

12333 
REAL_CONST
(65152.28152516226/8.0),

12334 
REAL_CONST
(65173.584433167736/8.0),

12335 
REAL_CONST
(65194.889082104703/8.0),

12336 
REAL_CONST
(65216.195471688683/8.0),

12337 
REAL_CONST
(65237.503601635319/8.0),

12338 
REAL_CONST
(65258.813471660353/8.0),

12339 
REAL_CONST
(65280.125081479666/8.0),

12340 
REAL_CONST
(65301.438430809241/8.0),

12341 
REAL_CONST
(65322.753519365178/8.0),

12342 
REAL_CONST
(65344.070346863708/8.0),

12343 
REAL_CONST
(65365.388913021146/8.0),

12344 
REAL_CONST
(65386.709217553958/8.0),

12345 
REAL_CONST
(65408.031260178701/8.0),

12346 
REAL_CONST
(65429.355040612056/8.0),

12347 
REAL_CONST
(65450.680558570821/8.0),

12348 
REAL_CONST
(65472.00781377191/8.0),

12349 
REAL_CONST
(65493.336805932355/8.0),

12350 
REAL_CONST
(65514.66753476928/8.0),

12351 
REAL_CONST
(65535.999999999956/8.0),

12352 
REAL_CONST
(65557.334201341757/8.0),

12353 
REAL_CONST
(65578.670138512171/8.0),

12354 
REAL_CONST
(65600.007811228788/8.0),

12355 
REAL_CONST
(65621.347219209332/8.0),

12356 
REAL_CONST
(65642.688362171626/8.0),

12357 
REAL_CONST
(65664.031239833639/8.0),

12358 
REAL_CONST
(65685.375851913413/8.0),

12359 
REAL_CONST
(65706.722198129137/8.0),

12360 
REAL_CONST
(65728.070278199084/8.0),

12361 
REAL_CONST
(65749.420091841661/8.0),

12362 
REAL_CONST
(65770.771638775404/8.0),

12363 
REAL_CONST
(65792.124918718939/8.0),

12364 
REAL_CONST
(65813.479931391004/8.0),

12365 
REAL_CONST
(65834.836676510458/8.0),

12366 
REAL_CONST
(65856.195153796303/8.0),

12367 
REAL_CONST
(65877.5553629676/8.0),

12368 
REAL_CONST
(65898.917303743554/8.0),

12369 
REAL_CONST
(65920.280975843489/8.0),

12370 
REAL_CONST
(65941.646378986843/8.0),

12371 
REAL_CONST
(65963.013512893158/8.0),

12372 
REAL_CONST
(65984.382377282076/8.0),

12373 
REAL_CONST
(66005.752971873386/8.0),

12374 
REAL_CONST
(66027.125296386963/8.0),

12375 
REAL_CONST
(66048.499350542799/8.0),

12376 
REAL_CONST
(66069.875134061018/8.0),

12377 
REAL_CONST
(66091.252646661844/8.0),

12378 
REAL_CONST
(66112.631888065618/8.0),

12379 
REAL_CONST
(66134.01285799277/8.0),

12380 
REAL_CONST
(66155.395556163887/8.0),

12381 
REAL_CONST
(66176.779982299631/8.0),

12382 
REAL_CONST
(66198.166136120795/8.0),

12383 
REAL_CONST
(66219.554017348273/8.0),

12384 
REAL_CONST
(66240.943625703105/8.0),

12385 
REAL_CONST
(66262.334960906388/8.0),

12386 
REAL_CONST
(66283.728022679396/8.0),

12387 
REAL_CONST
(66305.122810743444/8.0),

12388 
REAL_CONST
(66326.519324820023/8.0),

12389 
REAL_CONST
(66347.917564630698/8.0),

12390 
REAL_CONST
(66369.317529897162/8.0),

12391 
REAL_CONST
(66390.719220341227/8.0),

12392 
REAL_CONST
(66412.122635684791/8.0),

12393 
REAL_CONST
(66433.527775649884/8.0),

12394 
REAL_CONST
(66454.934639958636/8.0),

12395 
REAL_CONST
(66476.343228333324/8.0),

12396 
REAL_CONST
(66497.753540496284/8.0),

12397 
REAL_CONST
(66519.165576169995/8.0),

12398 
REAL_CONST
(66540.57933507704/8.0),

12399 
REAL_CONST
(66561.994816940118/8.0),

12400 
REAL_CONST
(66583.412021482043/8.0),

12401 
REAL_CONST
(66604.830948425733/8.0),

12402 
REAL_CONST
(66626.251597494222/8.0),

12403 
REAL_CONST
(66647.673968410629/8.0),

12404 
REAL_CONST
(66669.098060898235/8.0),

12405 
REAL_CONST
(66690.523874680381/8.0),

12406 
REAL_CONST
(66711.951409480564/8.0),

12407 
REAL_CONST
(66733.380665022371/8.0),

12408 
REAL_CONST
(66754.811641029475/8.0),

12409 
REAL_CONST
(66776.244337225711/8.0),

12410 
REAL_CONST
(66797.678753334985/8.0),

12411 
REAL_CONST
(66819.11488908132/8.0),

12412 
REAL_CONST
(66840.552744188884/8.0),

12413 
REAL_CONST
(66861.992318381905/8.0),

12414 
REAL_CONST
(66883.433611384738/8.0),

12415 
REAL_CONST
(66904.876622921889/8.0),

12416 
REAL_CONST
(66926.321352717903/8.0),

12417 
REAL_CONST
(66947.767800497502/8.0),

12418 
REAL_CONST
(66969.215965985466/8.0),

12419 
REAL_CONST
(66990.665848906734/8.0),

12420 
REAL_CONST
(67012.117448986304/8.0),

12421 
REAL_CONST
(67033.570765949335/8.0),

12422 
REAL_CONST
(67055.025799521056/8.0),

12423 
REAL_CONST
(67076.482549426815/8.0),

12424 
REAL_CONST
(67097.941015392076/8.0),

12425 
REAL_CONST
(67119.401197142433/8.0),

12426 
REAL_CONST
(67140.863094403554/8.0),

12427 
REAL_CONST
(67162.326706901222/8.0),

12428 
REAL_CONST
(67183.792034361351/8.0),

12429 
REAL_CONST
(67205.259076509959/8.0),

12430 
REAL_CONST
(67226.72783307315/8.0),

12431 
REAL_CONST
(67248.198303777172/8.0),

12432 
REAL_CONST
(67269.670488348347/8.0),

12433 
REAL_CONST
(67291.144386513144/8.0),

12434 
REAL_CONST
(67312.619997998088/8.0),

12435 
REAL_CONST
(67334.09732252988/8.0),

12436 
REAL_CONST
(67355.576359835293/8.0),

12437 
REAL_CONST
(67377.057109641188/8.0),

12438 
REAL_CONST
(67398.53957167457/8.0),

12439 
REAL_CONST
(67420.023745662547/8.0),

12440 
REAL_CONST
(67441.50963133233/8.0),

12441 
REAL_CONST
(67462.99722841123/8.0),

12442 
REAL_CONST
(67484.486536626689/8.0),

12443 
REAL_CONST
(67505.977555706224/8.0),

12444 
REAL_CONST
(67527.470285377494/8.0),

12445 
REAL_CONST
(67548.964725368263/8.0),

12446 
REAL_CONST
(67570.460875406367/8.0),

12447 
REAL_CONST
(67591.9587352198/8.0),

12448 
REAL_CONST
(67613.458304536631/8.0),

12449 
REAL_CONST
(67634.95958308503/8.0),

12450 
REAL_CONST
(67656.462570593329/8.0),

12451 
REAL_CONST
(67677.967266789899/8.0),

12452 
REAL_CONST
(67699.473671403248/8.0),

12453 
REAL_CONST
(67720.981784162024/8.0),

12454 
REAL_CONST
(67742.491604794923/8.0),

12455 
REAL_CONST
(67764.003133030797/8.0),

12456 
REAL_CONST
(67785.516368598575/8.0),

12457 
REAL_CONST
(67807.031311227314/8.0),

12458 
REAL_CONST
(67828.547960646174/8.0),

12459 
REAL_CONST
(67850.066316584402/8.0),

12460 
REAL_CONST
(67871.58637877139/8.0),

12461 
REAL_CONST
(67893.108146936589/8.0),

12462 
REAL_CONST
(67914.63162080961/8.0),

12463 
REAL_CONST
(67936.156800120138/8.0),

12464 
REAL_CONST
(67957.683684597971/8.0),

12465 
REAL_CONST
(67979.212273973011/8.0),

12466 
REAL_CONST
(68000.742567975263/8.0),

12467 
REAL_CONST
(68022.274566334876/8.0),

12468 
REAL_CONST
(68043.808268782057/8.0),

12469 
REAL_CONST
(68065.343675047145/8.0),

12470 
REAL_CONST
(68086.880784860579/8.0),

12471 
REAL_CONST
(68108.419597952918/8.0),

12472 
REAL_CONST
(68129.960114054789/8.0),

12473 
REAL_CONST
(68151.502332896969/8.0),

12474 
REAL_CONST
(68173.04625421032/8.0),

12475 
REAL_CONST
(68194.591877725834/8.0),

12476 
REAL_CONST
(68216.139203174564/8.0),

12477 
REAL_CONST
(68237.688230287706/8.0),

12478 
REAL_CONST
(68259.238958796544/8.0),

12479 
REAL_CONST
(68280.791388432481/8.0),

12480 
REAL_CONST
(68302.345518927032/8.0),

12481 
REAL_CONST
(68323.901350011787/8.0),

12482 
REAL_CONST
(68345.458881418483/8.0),

12483 
REAL_CONST
(68367.018112878912/8.0),

12484 
REAL_CONST
(68388.579044125028/8.0),

12485 
REAL_CONST
(68410.141674888844/8.0),

12486 
REAL_CONST
(68431.706004902502/8.0),

12487 
REAL_CONST
(68453.272033898262/8.0),

12488 
REAL_CONST
(68474.839761608455/8.0),

12489 
REAL_CONST
(68496.409187765545/8.0),

12490 
REAL_CONST
(68517.980312102081/8.0),

12491 
REAL_CONST
(68539.553134350732/8.0),

12492 
REAL_CONST
(68561.127654244279/8.0),

12493 
REAL_CONST
(68582.70387151558/8.0),

12494 
REAL_CONST
(68604.281785897634/8.0),

12495 
REAL_CONST
(68625.861397123503/8.0),

12496 
REAL_CONST
(68647.44270492639/8.0),

12497 
REAL_CONST
(68669.025709039604/8.0),

12498 
REAL_CONST
(68690.610409196524/8.0),

12499 
REAL_CONST
(68712.196805130661/8.0),

12500 
REAL_CONST
(68733.784896575627/8.0),

12501 
REAL_CONST
(68755.374683265123/8.0),

12502 
REAL_CONST
(68776.966164932994/8.0),

12503 
REAL_CONST
(68798.559341313128/8.0),

12504 
REAL_CONST
(68820.154212139591/8.0),

12505 
REAL_CONST
(68841.750777146473/8.0),

12506 
REAL_CONST
(68863.349036068044/8.0),

12507 
REAL_CONST
(68884.948988638629/8.0),

12508 
REAL_CONST
(68906.550634592684/8.0),

12509 
REAL_CONST
(68928.153973664739/8.0),

12510 
REAL_CONST
(68949.75900558944/8.0),

12511 
REAL_CONST
(68971.365730101577/8.0),

12512 
REAL_CONST
(68992.974146935987/8.0),

12513 
REAL_CONST
(69014.584255827634/8.0),

12514 
REAL_CONST
(69036.196056511588/8.0),

12515 
REAL_CONST
(69057.809548723017/8.0),

12516 
REAL_CONST
(69079.424732197207/8.0),

12517 
REAL_CONST
(69101.041606669532/8.0),

12518 
REAL_CONST
(69122.660171875468/8.0),

12519 
REAL_CONST
(69144.280427550606/8.0),

12520 
REAL_CONST
(69165.902373430625/8.0),

12521 
REAL_CONST
(69187.526009251334/8.0),

12522 
REAL_CONST
(69209.151334748618/8.0),

12523 
REAL_CONST
(69230.778349658474/8.0),

12524 
REAL_CONST
(69252.40705371699/8.0),

12525 
REAL_CONST
(69274.037446660412/8.0),

12526 
REAL_CONST
(69295.669528225/8.0),

12527 
REAL_CONST
(69317.303298147192/8.0),

12528 
REAL_CONST
(69338.938756163494/8.0),

12529 
REAL_CONST
(69360.575902010532/8.0),

12530 
REAL_CONST
(69382.214735425005/8.0),

12531 
REAL_CONST
(69403.855256143754/8.0),

12532 
REAL_CONST
(69425.497463903681/8.0),

12533 
REAL_CONST
(69447.141358441833/8.0),

12534 
REAL_CONST
(69468.78693949533/8.0),

12535 
REAL_CONST
(69490.434206801394/8.0),

12536 
REAL_CONST
(69512.083160097391/8.0),

12537 
REAL_CONST
(69533.733799120717/8.0),

12538 
REAL_CONST
(69555.386123608929/8.0),

12539 
REAL_CONST
(69577.04013329967/8.0),

12540 
REAL_CONST
(69598.695827930685/8.0),

12541 
REAL_CONST
(69620.353207239794/8.0),

12542 
REAL_CONST
(69642.012270964973/8.0),

12543 
REAL_CONST
(69663.67301884426/8.0),

12544 
REAL_CONST
(69685.335450615792/8.0),

12545 
REAL_CONST
(69706.999566017839/8.0),

12546 
REAL_CONST
(69728.665364788743/8.0),

12547 
REAL_CONST
(69750.332846666963/8.0),

12548 
REAL_CONST
(69772.002011391058/8.0),

12549 
REAL_CONST
(69793.672858699691/8.0),

12550 
REAL_CONST
(69815.345388331611/8.0),

12551 
REAL_CONST
(69837.019600025669/8.0),

12552 
REAL_CONST
(69858.695493520849/8.0),

12553 
REAL_CONST
(69880.373068556204/8.0),

12554 
REAL_CONST
(69902.052324870907/8.0),

12555 
REAL_CONST
(69923.733262204216/8.0),

12556 
REAL_CONST
(69945.415880295492/8.0),

12557 
REAL_CONST
(69967.100178884211/8.0),

12558 
REAL_CONST
(69988.786157709939/8.0),

12559 
REAL_CONST
(70010.473816512356/8.0),

12560 
REAL_CONST
(70032.163155031216/8.0),

12561 
REAL_CONST
(70053.854173006403/8.0),

12562 
REAL_CONST
(70075.546870177874/8.0),

12563 
REAL_CONST
(70097.241246285717/8.0),

12564 
REAL_CONST
(70118.937301070109/8.0),

12565 
REAL_CONST
(70140.635034271298/8.0),

12566 
REAL_CONST
(70162.334445629691/8.0),

12567 
REAL_CONST
(70184.035534885741/8.0),

12568 
REAL_CONST
(70205.738301780017/8.0),

12569 
REAL_CONST
(70227.442746053217/8.0),

12570 
REAL_CONST
(70249.1488674461/8.0),

12571 
REAL_CONST
(70270.856665699539/8.0),

12572 
REAL_CONST
(70292.566140554511/8.0),

12573 
REAL_CONST
(70314.277291752107/8.0),

12574 
REAL_CONST
(70335.990119033493/8.0),

12575 
REAL_CONST
(70357.704622139936/8.0),

12576 
REAL_CONST
(70379.420800812819/8.0),

12577 
REAL_CONST
(70401.138654793613/8.0),

12578 
REAL_CONST
(70422.85818382389/8.0),

12579 
REAL_CONST
(70444.579387645339/8.0),

12580 
REAL_CONST
(70466.302265999722/8.0),

12581 
REAL_CONST
(70488.026818628918/8.0),

12582 
REAL_CONST
(70509.753045274876/8.0),

12583 
REAL_CONST
(70531.480945679708/8.0),

12584 
REAL_CONST
(70553.210519585555/8.0),

12585 
REAL_CONST
(70574.941766734701/8.0),

12586 
REAL_CONST
(70596.674686869505/8.0),

12587 
REAL_CONST
(70618.409279732456/8.0),

12588 
REAL_CONST
(70640.145545066101/8.0),

12589 
REAL_CONST
(70661.883482613106/8.0),

12590 
REAL_CONST
(70683.623092116264/8.0),

12591 
REAL_CONST
(70705.364373318414/8.0),

12592 
REAL_CONST
(70727.107325962526/8.0),

12593 
REAL_CONST
(70748.851949791671/8.0),

12594 
REAL_CONST
(70770.598244549008/8.0),

12595 
REAL_CONST
(70792.346209977783/8.0),

12596 
REAL_CONST
(70814.095845821372/8.0),

12597 
REAL_CONST
(70835.847151823225/8.0),

12598 
REAL_CONST
(70857.600127726895/8.0),

12599 
REAL_CONST
(70879.354773276034/8.0),

12600 
REAL_CONST
(70901.111088214413/8.0),

12601 
REAL_CONST
(70922.869072285859/8.0),

12602 
REAL_CONST
(70944.628725234332/8.0),

12603 
REAL_CONST
(70966.390046803877/8.0),

12604 
REAL_CONST
(70988.153036738629/8.0),

12605 
REAL_CONST
(71009.917694782853/8.0),

12606 
REAL_CONST
(71031.684020680885/8.0),

12607 
REAL_CONST
(71053.45201417715/8.0),

12608 
REAL_CONST
(71075.221675016204/8.0),

12609 
REAL_CONST
(71096.993002942661/8.0),

12610 
REAL_CONST
(71118.765997701266/8.0),

12611 
REAL_CONST
(71140.540659036851/8.0),

12612 
REAL_CONST
(71162.316986694335/8.0),

12613 
REAL_CONST
(71184.09498041874/8.0),

12614 
REAL_CONST
(71205.874639955218/8.0),

12615 
REAL_CONST
(71227.655965048951/8.0),

12616 
REAL_CONST
(71249.438955445294/8.0),

12617 
REAL_CONST
(71271.223610889632/8.0),

12618 
REAL_CONST
(71293.009931127483/8.0),

12619 
REAL_CONST
(71314.797915904477/8.0),

12620 
REAL_CONST
(71336.587564966307/8.0),

12621 
REAL_CONST
(71358.378878058764/8.0),

12622 
REAL_CONST
(71380.171854927772/8.0),

12623 
REAL_CONST
(71401.966495319313/8.0),

12624 
REAL_CONST
(71423.762798979486/8.0),

12625 
REAL_CONST
(71445.560765654489/8.0),

12626 
REAL_CONST
(71467.360395090596/8.0),

12627 
REAL_CONST
(71489.161687034211/8.0),

12628 
REAL_CONST
(71510.964641231811/8.0),

12629 
REAL_CONST
(71532.769257429973/8.0),

12630 
REAL_CONST
(71554.575535375348/8.0),

12631 
REAL_CONST
(71576.383474814749/8.0),

12632 
REAL_CONST
(71598.19307549503/8.0),

12633 
REAL_CONST
(71620.004337163133/8.0),

12634 
REAL_CONST
(71641.817259566145/8.0),

12635 
REAL_CONST
(71663.631842451214/8.0),

12636 
REAL_CONST
(71685.4480855656/8.0),

12637 
REAL_CONST
(71707.26598865664/8.0),

12638 
REAL_CONST
(71729.085551471784/8.0),

12639 
REAL_CONST
(71750.906773758586/8.0),

12640 
REAL_CONST
(71772.729655264673/8.0),

12641 
REAL_CONST
(71794.554195737772/8.0),

12642 
REAL_CONST
(71816.380394925713/8.0),

12643 
REAL_CONST
(71838.208252576442/8.0),

12644 
REAL_CONST
(71860.037768437964/8.0),

12645 
REAL_CONST
(71881.868942258385/8.0),

12646 
REAL_CONST
(71903.701773785942/8.0),

12647 
REAL_CONST
(71925.536262768932/8.0),

12648 
REAL_CONST
(71947.372408955751/8.0),

12649 
REAL_CONST
(71969.210212094898/8.0),

12650 
REAL_CONST
(71991.049671934976/8.0),

12651 
REAL_CONST
(72012.890788224686/8.0),

12652 
REAL_CONST
(72034.73356071279/8.0),

12653 
REAL_CONST
(72056.577989148165/8.0),

12654 
REAL_CONST
(72078.424073279821/8.0),

12655 
REAL_CONST
(72100.271812856794/8.0),

12656 
REAL_CONST
(72122.121207628254/8.0),

12657 
REAL_CONST
(72143.97225734347/8.0),

12658 
REAL_CONST
(72165.824961751801/8.0),

12659 
REAL_CONST
(72187.679320602692/8.0),

12660 
REAL_CONST
(72209.53533364569/8.0),

12661 
REAL_CONST
(72231.393000630429/8.0),

12662 
REAL_CONST
(72253.252321306645/8.0),

12663 
REAL_CONST
(72275.113295424177/8.0),

12664 
REAL_CONST
(72296.975922732949/8.0),

12665 
REAL_CONST
(72318.840202982959/8.0),

12666 
REAL_CONST
(72340.706135924338/8.0),

12667 
REAL_CONST
(72362.573721307272/8.0),

12668 
REAL_CONST
(72384.442958882093/8.0),

12669 
REAL_CONST
(72406.313848399179/8.0),

12670 
REAL_CONST
(72428.186389609036/8.0),

12671 
REAL_CONST
(72450.060582262216/8.0),

12672 
REAL_CONST
(72471.936426109431/8.0),

12673 
REAL_CONST
(72493.813920901433/8.0),

12674 
REAL_CONST
(72515.693066389096/8.0),

12675 
REAL_CONST
(72537.573862323392/8.0),

12676 
REAL_CONST
(72559.456308455352/8.0),

12677 
REAL_CONST
(72581.340404536139/8.0),

12678 
REAL_CONST
(72603.226150316987/8.0),

12679 
REAL_CONST
(72625.113545549248/8.0),

12680 
REAL_CONST
(72647.002589984331/8.0),

12681 
REAL_CONST
(72668.893283373764/8.0),

12682 
REAL_CONST
(72690.785625469172/8.0),

12683 
REAL_CONST
(72712.679616022273/8.0),

12684 
REAL_CONST
(72734.575254784853/8.0),

12685 
REAL_CONST
(72756.472541508803/8.0),

12686 
REAL_CONST
(72778.371475946144/8.0),

12687 
REAL_CONST
(72800.272057848939/8.0),

12688 
REAL_CONST
(72822.174286969355/8.0),

12689 
REAL_CONST
(72844.07816305969/8.0),

12690 
REAL_CONST
(72865.983685872285/8.0),

12691 
REAL_CONST
(72887.890855159596/8.0),

12692 
REAL_CONST
(72909.799670674183/8.0),

12693 
REAL_CONST
(72931.710132168693/8.0),

12694 
REAL_CONST
(72953.622239395845/8.0),

12695 
REAL_CONST
(72975.535992108475/8.0),

12696 
REAL_CONST
(72997.451390059519/8.0),

12697 
REAL_CONST
(73019.368433001961/8.0),

12698 
REAL_CONST
(73041.287120688925/8.0),

12699 
REAL_CONST
(73063.207452873612/8.0),

12700 
REAL_CONST
(73085.129429309294/8.0),

12701 
REAL_CONST
(73107.053049749389/8.0),

12702 
REAL_CONST
(73128.978313947344/8.0),

12703 
REAL_CONST
(73150.905221656736/8.0),

12704 
REAL_CONST
(73172.833772631217/8.0),

12705 
REAL_CONST
(73194.763966624567/8.0),

12706 
REAL_CONST
(73216.695803390612/8.0),

12707 
REAL_CONST
(73238.62928268328/8.0),

12708 
REAL_CONST
(73260.564404256627/8.0),

12709 
REAL_CONST
(73282.501167864757/8.0),

12710 
REAL_CONST
(73304.439573261901/8.0),

12711 
REAL_CONST
(73326.379620202337/8.0),

12712 
REAL_CONST
(73348.321308440485/8.0),

12713 
REAL_CONST
(73370.264637730841/8.0),

12714 
REAL_CONST
(73392.209607827957/8.0),

12715 
REAL_CONST
(73414.156218486532/8.0),

12716 
REAL_CONST
(73436.104469461323/8.0),

12717 
REAL_CONST
(73458.054360507173/8.0),

12718 
REAL_CONST
(73480.005891379056/8.0),

12719 
REAL_CONST
(73501.959061831993/8.0),

12720 
REAL_CONST
(73523.913871621116/8.0),

12721 
REAL_CONST
(73545.870320501665/8.0),

12722 
REAL_CONST
(73567.828408228932/8.0),

12723 
REAL_CONST
(73589.78813455833/8.0),

12724 
REAL_CONST
(73611.749499245358/8.0),

12725 
REAL_CONST
(73633.712502045615/8.0),

12726 
REAL_CONST
(73655.677142714747/8.0),

12727 
REAL_CONST
(73677.643421008557/8.0),

12728 
REAL_CONST
(73699.611336682879/8.0),

12729 
REAL_CONST
(73721.580889493693/8.0),

12730 
REAL_CONST
(73743.552079197019/8.0),

12731 
REAL_CONST
(73765.524905548999/8.0),

12732 
REAL_CONST
(73787.499368305856/8.0),

12733 
REAL_CONST
(73809.475467223907/8.0),

12734 
REAL_CONST
(73831.453202059551/8.0),

12735 
REAL_CONST
(73853.432572569291/8.0),

12736 
REAL_CONST
(73875.413578509717/8.0),

12737 
REAL_CONST
(73897.396219637507/8.0),

12738 
REAL_CONST
(73919.380495709411/8.0),

12739 
REAL_CONST
(73941.36640648231/8.0),

12740 
REAL_CONST
(73963.353951713143/8.0),

12741 
REAL_CONST
(73985.343131158952/8.0),

12742 
REAL_CONST
(74007.333944576865/8.0),

12743 
REAL_CONST
(74029.326391724098/8.0),

12744 
REAL_CONST
(74051.320472357969/8.0),

12745 
REAL_CONST
(74073.316186235883/8.0),

12746 
REAL_CONST
(74095.313533115303/8.0),

12747 
REAL_CONST
(74117.312512753837/8.0),

12748 
REAL_CONST
(74139.313124909138/8.0),

12749 
REAL_CONST
(74161.315369338976/8.0),

12750 
REAL_CONST
(74183.319245801191/8.0),

12751 
REAL_CONST
(74205.324754053727/8.0),

12752 
REAL_CONST
(74227.331893854629/8.0),

12753 
REAL_CONST
(74249.340664961986/8.0),

12754 
REAL_CONST
(74271.351067134034/8.0),

12755 
REAL_CONST
(74293.363100129049/8.0),

12756 
REAL_CONST
(74315.376763705441/8.0),

12757 
REAL_CONST
(74337.392057621662/8.0),

12758 
REAL_CONST
(74359.408981636298/8.0),

12759 
REAL_CONST
(74381.427535508003/8.0),

12760 
REAL_CONST
(74403.447718995507/8.0),

12761 
REAL_CONST
(74425.469531857671/8.0),

12762 
REAL_CONST
(74447.492973853383/8.0),

12763 
REAL_CONST
(74469.518044741693/8.0),

12764 
REAL_CONST
(74491.54474428168/8.0),

12765 
REAL_CONST
(74513.573072232539/8.0),

12766 
REAL_CONST
(74535.603028353551/8.0),

12767 
REAL_CONST
(74557.634612404087/8.0),

12768 
REAL_CONST
(74579.667824143602/8.0),

12769 
REAL_CONST
(74601.702663331642/8.0),

12770 
REAL_CONST
(74623.739129727837/8.0),

12771 
REAL_CONST
(74645.777223091936/8.0),

12772 
REAL_CONST
(74667.816943183716/8.0),

12773 
REAL_CONST
(74689.858289763113/8.0),

12774 
REAL_CONST
(74711.901262590094/8.0),

12775 
REAL_CONST
(74733.945861424741/8.0),

12776 
REAL_CONST
(74755.992086027225/8.0),

12777 
REAL_CONST
(74778.039936157802/8.0),

12778 
REAL_CONST
(74800.089411576817/8.0),

12779 
REAL_CONST
(74822.140512044702/8.0),

12780 
REAL_CONST
(74844.193237321961/8.0),

12781 
REAL_CONST
(74866.24758716923/8.0),

12782 
REAL_CONST
(74888.303561347187/8.0),

12783 
REAL_CONST
(74910.36115961663/8.0),

12784 
REAL_CONST
(74932.420381738411/8.0),

12785 
REAL_CONST
(74954.481227473516/8.0),

12786 
REAL_CONST
(74976.543696582972/8.0),

12787 
REAL_CONST
(74998.607788827925/8.0),

12788 
REAL_CONST
(75020.673503969607/8.0),

12789 
REAL_CONST
(75042.740841769322/8.0),

12790 
REAL_CONST
(75064.809801988464/8.0),

12791 
REAL_CONST
(75086.88038438854/8.0),

12792 
REAL_CONST
(75108.952588731103/8.0),

12793 
REAL_CONST
(75131.026414777836/8.0),

12794 
REAL_CONST
(75153.101862290467/8.0),

12795 
REAL_CONST
(75175.178931030852/8.0),

12796 
REAL_CONST
(75197.257620760924/8.0),

12797 
REAL_CONST
(75219.33793124267/8.0),

12798 
REAL_CONST
(75241.419862238225/8.0),

12799 
REAL_CONST
(75263.503413509738/8.0),

12800 
REAL_CONST
(75285.588584819503/8.0),

12801 
REAL_CONST
(75307.675375929874/8.0),

12802 
REAL_CONST
(75329.763786603318/8.0),

12803 
REAL_CONST
(75351.853816602365/8.0),

12804 
REAL_CONST
(75373.945465689612/8.0),

12805 
REAL_CONST
(75396.038733627807/8.0),

12806 
REAL_CONST
(75418.133620179724/8.0),

12807 
REAL_CONST
(75440.230125108254/8.0),

12808 
REAL_CONST
(75462.32824817636/8.0),

12809 
REAL_CONST
(75484.427989147109/8.0),

12810 
REAL_CONST
(75506.529347783653/8.0),

12811 
REAL_CONST
(75528.63232384919/8.0),

12812 
REAL_CONST
(75550.736917107075/8.0),

12813 
REAL_CONST
(75572.843127320695/8.0),

12814 
REAL_CONST
(75594.950954253538/8.0),

12815 
REAL_CONST
(75617.060397669193/8.0),

12816 
REAL_CONST
(75639.171457331307/8.0),

12817 
REAL_CONST
(75661.284133003646/8.0),

12818 
REAL_CONST
(75683.398424450032/8.0),

12819 
REAL_CONST
(75705.514331434402/8.0),

12820 
REAL_CONST
(75727.631853720741/8.0),

12821 
REAL_CONST
(75749.750991073175/8.0),

12822 
REAL_CONST
(75771.871743255862/8.0),

12823 
REAL_CONST
(75793.994110033076/8.0),

12824 
REAL_CONST
(75816.118091169177/8.0),

12825 
REAL_CONST
(75838.243686428585/8.0),

12826 
REAL_CONST
(75860.370895575848/8.0),

12827 
REAL_CONST
(75882.499718375562/8.0),

12828 
REAL_CONST
(75904.630154592422/8.0),

12829 
REAL_CONST
(75926.762203991224/8.0),

12830 
REAL_CONST
(75948.895866336825/8.0),

12831 
REAL_CONST
(75971.031141394182/8.0),

12832 
REAL_CONST
(75993.168028928325/8.0),

12833 
REAL_CONST
(76015.306528704401/8.0),

12834 
REAL_CONST
(76037.4466404876/8.0),

12835 
REAL_CONST
(76059.588364043215/8.0),

12836 
REAL_CONST
(76081.731699136653/8.0),

12837 
REAL_CONST
(76103.876645533353/8.0),

12838 
REAL_CONST
(76126.023202998884/8.0),

12839 
REAL_CONST
(76148.171371298871/8.0),

12840 
REAL_CONST
(76170.321150199044/8.0),

12841 
REAL_CONST
(76192.472539465205/8.0),

12842 
REAL_CONST
(76214.625538863256/8.0),

12843 
REAL_CONST
(76236.780148159174/8.0),

12844 
REAL_CONST
(76258.936367119008/8.0),

12845 
REAL_CONST
(76281.094195508922/8.0),

12846 
REAL_CONST
(76303.253633095141/8.0),

12847 
REAL_CONST
(76325.414679643975/8.0),

12848 
REAL_CONST
(76347.577334921851/8.0),

12849 
REAL_CONST
(76369.741598695226/8.0),

12850 
REAL_CONST
(76391.907470730686/8.0),

12851 
REAL_CONST
(76414.074950794879/8.0),

12852 
REAL_CONST
(76436.244038654564/8.0),

12853 
REAL_CONST
(76458.414734076548/8.0),

12854 
REAL_CONST
(76480.587036827754/8.0),

12855 
REAL_CONST
(76502.760946675175/8.0),

12856 
REAL_CONST
(76524.936463385893/8.0),

12857 
REAL_CONST
(76547.11358672705/8.0),

12858 
REAL_CONST
(76569.292316465915/8.0),

12859 
REAL_CONST
(76591.472652369819/8.0),

12860 
REAL_CONST
(76613.654594206164/8.0),

12861 
REAL_CONST
(76635.838141742468/8.0),

12862 
REAL_CONST
(76658.023294746308/8.0),

12863 
REAL_CONST
(76680.210052985349/8.0),

12864 
REAL_CONST
(76702.398416227341/8.0),

12865 
REAL_CONST
(76724.588384240138/8.0),

12866 
REAL_CONST
(76746.779956791637/8.0),

12867 
REAL_CONST
(76768.973133649866/8.0),

12868 
REAL_CONST
(76791.167914582897/8.0),

12869 
REAL_CONST
(76813.364299358902/8.0),

12870 
REAL_CONST
(76835.562287746157/8.0),

12871 
REAL_CONST
(76857.761879512967/8.0),

12872 
REAL_CONST
(76879.963074427797/8.0),

12873 
REAL_CONST
(76902.165872259109/8.0),

12874 
REAL_CONST
(76924.37027277553/8.0),

12875 
REAL_CONST
(76946.576275745727/8.0),

12876 
REAL_CONST
(76968.783880938441/8.0),

12877 
REAL_CONST
(76990.993088122515/8.0),

12878 
REAL_CONST
(77013.203897066895/8.0),

12879 
REAL_CONST
(77035.416307540567/8.0),

12880 
REAL_CONST
(77057.630319312622/8.0),

12881 
REAL_CONST
(77079.845932152239/8.0),

12882 
REAL_CONST
(77102.063145828695/8.0),

12883 
REAL_CONST
(77124.281960111301/8.0),

12884 
REAL_CONST
(77146.50237476948/8.0),

12885 
REAL_CONST
(77168.724389572759/8.0),

12886 
REAL_CONST
(77190.948004290723/8.0),

12887 
REAL_CONST
(77213.173218693031/8.0),

12888 
REAL_CONST
(77235.400032549442/8.0),

12889 
REAL_CONST
(77257.628445629802/8.0),

12890 
REAL_CONST
(77279.858457704031/8.0),

12891 
REAL_CONST
(77302.090068542122/8.0),

12892 
REAL_CONST
(77324.323277914169/8.0),

12893 
REAL_CONST
(77346.558085590339/8.0),

12894 
REAL_CONST
(77368.794491340886/8.0),

12895 
REAL_CONST
(77391.032494936138/8.0),

12896 
REAL_CONST
(77413.272096146524/8.0),

12897 
REAL_CONST
(77435.51329474253/8.0),

12898 
REAL_CONST
(77457.756090494731/8.0),

12899 
REAL_CONST
(77480.000483173804/8.0),

12900 
REAL_CONST
(77502.246472550498/8.0),

12901 
REAL_CONST
(77524.494058395634/8.0),

12902 
REAL_CONST
(77546.743240480107/8.0),

12903 
REAL_CONST
(77568.994018574944/8.0),

12904 
REAL_CONST
(77591.246392451198/8.0),

12905 
REAL_CONST
(77613.500361880026/8.0),

12906 
REAL_CONST
(77635.755926632657/8.0),

12907 
REAL_CONST
(77658.013086480438/8.0),

12908 
REAL_CONST
(77680.271841194757/8.0),

12909 
REAL_CONST
(77702.532190547092/8.0),

12910 
REAL_CONST
(77724.794134309021/8.0),

12911 
REAL_CONST
(77747.057672252195/8.0),

12912 
REAL_CONST
(77769.322804148323/8.0),

12913 
REAL_CONST
(77791.589529769248/8.0),

12914 
REAL_CONST
(77813.857848886837/8.0),

12915 
REAL_CONST
(77836.127761273063/8.0),

12916 
REAL_CONST
(77858.399266699998/8.0),

12917 
REAL_CONST
(77880.67236493979/8.0),

12918 
REAL_CONST
(77902.947055764627/8.0),

12919 
REAL_CONST
(77925.223338946831/8.0),

12920 
REAL_CONST
(77947.50121425878/8.0),

12921 
REAL_CONST
(77969.780681472927/8.0),

12922 
REAL_CONST
(77992.061740361838/8.0),

12923 
REAL_CONST
(78014.344390698127/8.0),

12924 
REAL_CONST
(78036.628632254491/8.0),

12925 
REAL_CONST
(78058.914464803747/8.0),

12926 
REAL_CONST
(78081.201888118725/8.0),

12927 
REAL_CONST
(78103.490901972415/8.0),

12928 
REAL_CONST
(78125.781506137821/8.0),

12929 
REAL_CONST
(78148.073700388064/8.0),

12930 
REAL_CONST
(78170.367484496339/8.0),

12931 
REAL_CONST
(78192.662858235926/8.0),

12932 
REAL_CONST
(78214.959821380166/8.0),

12933 
REAL_CONST
(78237.258373702498/8.0),

12934 
REAL_CONST
(78259.558514976452/8.0),

12935 
REAL_CONST
(78281.860244975614/8.0),

12936 
REAL_CONST
(78304.163563473659/8.0),

12937 
REAL_CONST
(78326.468470244363/8.0),

12938 
REAL_CONST
(78348.77496506153/8.0),

12939 
REAL_CONST
(78371.083047699125/8.0),

12940 
REAL_CONST
(78393.392717931114/8.0),

12941 
REAL_CONST
(78415.703975531578/8.0),

12942 
REAL_CONST
(78438.016820274701/8.0),

12943 
REAL_CONST
(78460.331251934695/8.0),

12944 
REAL_CONST
(78482.647270285903/8.0),

12945 
REAL_CONST
(78504.964875102727/8.0),

12946 
REAL_CONST
(78527.284066159627/8.0),

12947 
REAL_CONST
(78549.604843231195/8.0),

12948 
REAL_CONST
(78571.927206092048/8.0),

12949 
REAL_CONST
(78594.251154516911/8.0),

12950 
REAL_CONST
(78616.576688280606/8.0),

12951 
REAL_CONST
(78638.903807157985/8.0),

12952 
REAL_CONST
(78661.232510924034/8.0),

12953 
REAL_CONST
(78683.562799353778/8.0),

12954 
REAL_CONST
(78705.894672222363/8.0),

12955 
REAL_CONST
(78728.228129304945/8.0),

12956 
REAL_CONST
(78750.563170376859/8.0),

12957 
REAL_CONST
(78772.899795213423/8.0),

12958 
REAL_CONST
(78795.238003590101/8.0),

12959 
REAL_CONST
(78817.577795282399/8.0),

12960 
REAL_CONST
(78839.919170065928/8.0),

12961 
REAL_CONST
(78862.262127716356/8.0),

12962 
REAL_CONST
(78884.606668009452/8.0),

12963 
REAL_CONST
(78906.952790721043/8.0),

12964 
REAL_CONST
(78929.300495627045/8.0),

12965 
REAL_CONST
(78951.64978250346/8.0),

12966 
REAL_CONST
(78974.000651126378/8.0),

12967 
REAL_CONST
(78996.353101271932/8.0),

12968 
REAL_CONST
(79018.707132716358/8.0),

12969 
REAL_CONST
(79041.062745235977/8.0),

12970 
REAL_CONST
(79063.41993860717/8.0),

12971 
REAL_CONST
(79085.778712606436/8.0),

12972 
REAL_CONST
(79108.139067010285/8.0),

12973 
REAL_CONST
(79130.501001595389/8.0),

12974 
REAL_CONST
(79152.864516138419/8.0),

12975 
REAL_CONST
(79175.22961041618/8.0),

12976 
REAL_CONST
(79197.596284205531/8.0),

12977 
REAL_CONST
(79219.96453728342/8.0),

12978 
REAL_CONST
(79242.33436942687/8.0),

12979 
REAL_CONST
(79264.705780412987/8.0),

12980 
REAL_CONST
(79287.078770018954/8.0),

12981 
REAL_CONST
(79309.453338022009/8.0),

12982 
REAL_CONST
(79331.829484199508/8.0),

12983 
REAL_CONST
(79354.207208328866/8.0),

12984 
REAL_CONST
(79376.586510187582/8.0),

12985 
REAL_CONST
(79398.967389553218/8.0),

12986 
REAL_CONST
(79421.349846203433/8.0),

12987 
REAL_CONST
(79443.733879915948/8.0),

12988 
REAL_CONST
(79466.119490468584/8.0),

12989 
REAL_CONST
(79488.50667763922/8.0),

12990 
REAL_CONST
(79510.895441205823/8.0),

12991 
REAL_CONST
(79533.285780946433/8.0),

12992 
REAL_CONST
(79555.677696639163/8.0),

12993 
REAL_CONST
(79578.071188062226/8.0),

12994 
REAL_CONST
(79600.466254993895/8.0),

12995 
REAL_CONST
(79622.862897212515/8.0),

12996 
REAL_CONST
(79645.261114496549/8.0),

12997 
REAL_CONST
(79667.660906624471/8.0),

12998 
REAL_CONST
(79690.062273374875/8.0),

12999 
REAL_CONST
(79712.465214526455/8.0),

13000 
REAL_CONST
(79734.869729857935/8.0),

13001 
REAL_CONST
(79757.275819148126/8.0),

13002 
REAL_CONST
(79779.683482175955/8.0),

13003 
REAL_CONST
(79802.092718720378/8.0),

13004 
REAL_CONST
(79824.503528560454/8.0),

13005 
REAL_CONST
(79846.915911475327/8.0),

13006 
REAL_CONST
(79869.329867244203/8.0),

13007 
REAL_CONST
(79891.745395646343/8.0),

13008 
REAL_CONST
(79914.162496461155/8.0),

13009 
REAL_CONST
(79936.581169468045/8.0),

13010 
REAL_CONST
(79959.001414446553/8.0),

13011 
REAL_CONST
(79981.423231176261/8.0),

13012 
REAL_CONST
(80003.846619436852/8.0),

13013 
REAL_CONST
(80026.271579008084/8.0),

13014 
REAL_CONST
(80048.698109669771/8.0),

13015 
REAL_CONST
(80071.12621120183/8.0),

13016 
REAL_CONST
(80093.555883384237/8.0),

13017 
REAL_CONST
(80115.987125997053/8.0),

13018 
REAL_CONST
(80138.419938820414/8.0),

13019 
REAL_CONST
(80160.854321634528/8.0),

13020 
REAL_CONST
(80183.290274219689/8.0),

13021 
REAL_CONST
(80205.727796356281/8.0),

13022 
REAL_CONST
(80228.166887824715/8.0),

13023 
REAL_CONST
(80250.607548405547/8.0),

13024 
REAL_CONST
(80273.049777879336/8.0),

13025 
REAL_CONST
(80295.493576026798/8.0),

13026 
REAL_CONST
(80317.938942628651/8.0),

13027 
REAL_CONST
(80340.385877465727/8.0),

13028 
REAL_CONST
(80362.834380318949/8.0),

13029 
REAL_CONST
(80385.28445096928/8.0),

13030 
REAL_CONST
(80407.736089197788/8.0),

13031 
REAL_CONST
(80430.189294785596/8.0),

13032 
REAL_CONST
(80452.644067513917/8.0),

13033 
REAL_CONST
(80475.100407164035/8.0),

13034 
REAL_CONST
(80497.558313517322/8.0),

13035 
REAL_CONST
(80520.017786355209/8.0),

13036 
REAL_CONST
(80542.478825459213/8.0),

13037 
REAL_CONST
(80564.941430610925/8.0),

13038 
REAL_CONST
(80587.405601592007/8.0),

13039 
REAL_CONST
(80609.871338184195/8.0),

13040 
REAL_CONST
(80632.338640169342/8.0),

13041 
REAL_CONST
(80654.8075073293/8.0),

13042 
REAL_CONST
(80677.277939446067/8.0),

13043 
REAL_CONST
(80699.749936301683/8.0),

13044 
REAL_CONST
(80722.223497678278/8.0),

13045 
REAL_CONST
(80744.698623358039/8.0),

13046 
REAL_CONST
(80767.17531312324/8.0),

13047 
REAL_CONST
(80789.653566756242/8.0),

13048 
REAL_CONST
(80812.133384039465/8.0),

13049 
REAL_CONST
(80834.614764755403/8.0),

13050 
REAL_CONST
(80857.097708686648/8.0),

13051 
REAL_CONST
(80879.582215615854/8.0),

13052 
REAL_CONST
(80902.068285325731/8.0),

13053 
REAL_CONST
(80924.555917599093/8.0),

13054 
REAL_CONST
(80947.045112218824/8.0),

13055 
REAL_CONST
(80969.535868967869/8.0),

13056 
REAL_CONST
(80992.028187629272/8.0),

13057 
REAL_CONST
(81014.522067986123/8.0),

13058 
REAL_CONST
(81037.017509821613/8.0),

13059 
REAL_CONST
(81059.514512919006/8.0),

13060 
REAL_CONST
(81082.013077061609/8.0),

13061 
REAL_CONST
(81104.513202032831/8.0),

13062 
REAL_CONST
(81127.014887616184/8.0),

13063 
REAL_CONST
(81149.518133595193/8.0),

13064 
REAL_CONST
(81172.022939753486/8.0),

13065 
REAL_CONST
(81194.529305874807/8.0),

13066 
REAL_CONST
(81217.037231742899/8.0),

13067 
REAL_CONST
(81239.546717141639/8.0),

13068 
REAL_CONST
(81262.057761854958/8.0),

13069 
REAL_CONST
(81284.570365666848/8.0),

13070 
REAL_CONST
(81307.084528361403/8.0),

13071 
REAL_CONST
(81329.600249722775/8.0),

13072 
REAL_CONST
(81352.117529535186/8.0),

13073 
REAL_CONST
(81374.636367582949/8.0),

13074 
REAL_CONST
(81397.156763650448/8.0),

13075 
REAL_CONST
(81419.678717522125/8.0),

13076 
REAL_CONST
(81442.202228982511/8.0),

13077 
REAL_CONST
(81464.727297816222/8.0),

13078 
REAL_CONST
(81487.253923807933/8.0),

13079 
REAL_CONST
(81509.782106742379/8.0),

13080 
REAL_CONST
(81532.311846404409/8.0),

13081 
REAL_CONST
(81554.843142578902/8.0),

13082 
REAL_CONST
(81577.375995050839/8.0),

13083 
REAL_CONST
(81599.910403605274/8.0),

13084 
REAL_CONST
(81622.446368027333/8.0),

13085 
REAL_CONST
(81644.983888102215/8.0),

13086 
REAL_CONST
(81667.522963615178/8.0),

13087 
REAL_CONST
(81690.063594351581/8.0),

13088 
REAL_CONST
(81712.605780096841/8.0),

13089 
REAL_CONST
(81735.149520636449/8.0),

13090 
REAL_CONST
(81757.694815755967/8.0),

13091 
REAL_CONST
(81780.241665241047/8.0),

13092 
REAL_CONST
(81802.79006887741/8.0),

13093 
REAL_CONST
(81825.340026450824/8.0),

13094 
REAL_CONST
(81847.891537747171/8.0),

13095 
REAL_CONST
(81870.444602552379/8.0),

13096 
REAL_CONST
(81892.999220652477/8.0),

13097 
REAL_CONST
(81915.555391833506/8.0),

13098 
REAL_CONST
(81938.113115881672/8.0),

13099 
REAL_CONST
(81960.672392583176/8.0),

13100 
REAL_CONST
(81983.233221724338/8.0),

13101 
REAL_CONST
(82005.795603091537/8.0),

13102 
REAL_CONST
(82028.359536471224/8.0),

13103 
REAL_CONST
(82050.925021649906/8.0),

13104 
REAL_CONST
(82073.492058414209/8.0),

13105 
REAL_CONST
(82096.060646550788/8.0),

13106 
REAL_CONST
(82118.630785846399/8.0),

13107 
REAL_CONST
(82141.202476087841/8.0),

13108 
REAL_CONST
(82163.775717062032/8.0),

13109 
REAL_CONST
(82186.35050855593/8.0),

13110 
REAL_CONST
(82208.926850356569/8.0),

13111 
REAL_CONST
(82231.504742251054/8.0),

13112 
REAL_CONST
(82254.084184026578/8.0),

13113 
REAL_CONST
(82276.665175470393/8.0),

13114 
REAL_CONST
(82299.24771636985/8.0),

13115 
REAL_CONST
(82321.831806512317/8.0),

13116 
REAL_CONST
(82344.417445685307/8.0),

13117 
REAL_CONST
(82367.004633676348/8.0),

13118 
REAL_CONST
(82389.593370273054/8.0),

13119 
REAL_CONST
(82412.183655263143/8.0),

13120 
REAL_CONST
(82434.775488434374/8.0),

13121 
REAL_CONST
(82457.368869574595/8.0),

13122 
REAL_CONST
(82479.963798471697/8.0),

13123 
REAL_CONST
(82502.560274913689/8.0),

13124 
REAL_CONST
(82525.158298688606/8.0),

13125 
REAL_CONST
(82547.757869584602/8.0),

13126 
REAL_CONST
(82570.35898738986/8.0),

13127 
REAL_CONST
(82592.961651892678/8.0),

13128 
REAL_CONST
(82615.565862881398/8.0),

13129 
REAL_CONST
(82638.171620144421/8.0),

13130 
REAL_CONST
(82660.778923470265/8.0),

13131 
REAL_CONST
(82683.387772647475/8.0),

13132 
REAL_CONST
(82705.998167464713/8.0),

13133 
REAL_CONST
(82728.610107710658/8.0),

13134 
REAL_CONST
(82751.223593174116/8.0),

13135 
REAL_CONST
(82773.83862364394/8.0),

13136 
REAL_CONST
(82796.45519890904/8.0),

13137 
REAL_CONST
(82819.073318758441/8.0),

13138 
REAL_CONST
(82841.692982981185/8.0),

13139 
REAL_CONST
(82864.314191366429/8.0),

13140 
REAL_CONST
(82886.936943703375/8.0),

13141 
REAL_CONST
(82909.561239781324/8.0),

13142 
REAL_CONST
(82932.187079389638/8.0),

13143 
REAL_CONST
(82954.814462317736/8.0),

13144 
REAL_CONST
(82977.443388355125/8.0),

13145 
REAL_CONST
(83000.073857291369/8.0),

13146 
REAL_CONST
(83022.70586891612/8.0),

13147 
REAL_CONST
(83045.339423019104/8.0),

13148 
REAL_CONST
(83067.974519390089/8.0),

13149 
REAL_CONST
(83090.611157818959/8.0),

13150 
REAL_CONST
(83113.249338095629/8.0),

13151 
REAL_CONST
(83135.8890600101/8.0),

13152 
REAL_CONST
(83158.530323352461/8.0),

13153 
REAL_CONST
(83181.173127912858/8.0),

13154 
REAL_CONST
(83203.817473481497/8.0),

13155 
REAL_CONST
(83226.463359848669/8.0),

13156 
REAL_CONST
(83249.11078680474/8.0),

13157 
REAL_CONST
(83271.759754140134/8.0),

13158 
REAL_CONST
(83294.410261645375/8.0),

13159 
REAL_CONST
(83317.062309111003/8.0),

13160 
REAL_CONST
(83339.715896327703/8.0),

13161 
REAL_CONST
(83362.371023086147/8.0),

13162 
REAL_CONST
(83385.027689177165/8.0),

13163 
REAL_CONST
(83407.685894391587/8.0),

13164 
REAL_CONST
(83430.345638520361/8.0),

13165 
REAL_CONST
(83453.006921354478/8.0),

13166 
REAL_CONST
(83475.669742685001/8.0),

13167 
REAL_CONST
(83498.334102303095/8.0),

13168 
REAL_CONST
(83520.999999999942/8.0),

13169 
REAL_CONST
(83543.667435566866/8.0),

13170 
REAL_CONST
(83566.336408795192/8.0),

13171 
REAL_CONST
(83589.006919476349/8.0),

13172 
REAL_CONST
(83611.678967401851/8.0),

13173 
REAL_CONST
(83634.352552363242/8.0),

13174 
REAL_CONST
(83657.027674152167/8.0),

13175 
REAL_CONST
(83679.704332560359/8.0),

13176 
REAL_CONST
(83702.382527379552/8.0),

13177 
REAL_CONST
(83725.062258401638/8.0),

13178 
REAL_CONST
(83747.743525418511/8.0),

13179 
REAL_CONST
(83770.42632822218/8.0),

13180 
REAL_CONST
(83793.110666604684/8.0),

13181 
REAL_CONST
(83815.796540358162/8.0),

13182 
REAL_CONST
(83838.483949274829/8.0),

13183 
REAL_CONST
(83861.172893146941/8.0),

13184 
REAL_CONST
(83883.863371766842/8.0),

13185 
REAL_CONST
(83906.555384926964/8.0),

13186 
REAL_CONST
(83929.248932419752/8.0),

13187 
REAL_CONST
(83951.944014037799/8.0),

13188 
REAL_CONST
(83974.640629573696/8.0),

13189 
REAL_CONST
(83997.338778820151/8.0),

13190 
REAL_CONST
(84020.038461569929/8.0),

13191 
REAL_CONST
(84042.739677615857/8.0),

13192 
REAL_CONST
(84065.442426750829/8.0),

13193 
REAL_CONST
(84088.146708767847/8.0),

13194 
REAL_CONST
(84110.852523459922/8.0),

13195 
REAL_CONST
(84133.559870620171/8.0),

13196 
REAL_CONST
(84156.268750041796/8.0),

13197 
REAL_CONST
(84178.979161518029/8.0),

13198 
REAL_CONST
(84201.691104842204/8.0),

13199 
REAL_CONST
(84224.404579807713/8.0),

13200 
REAL_CONST
(84247.119586208006/8.0),

13201 
REAL_CONST
(84269.83612383662/8.0),

13202 
REAL_CONST
(84292.55419248715/8.0),

13203 
REAL_CONST
(84315.273791953281/8.0),

13204 
REAL_CONST
(84337.994922028738/8.0),

13205 
REAL_CONST
(84360.717582507335/8.0),

13206 
REAL_CONST
(84383.441773182945/8.0),

13207 
REAL_CONST
(84406.167493849513/8.0),

13208 
REAL_CONST
(84428.894744301069/8.0),

13209 
REAL_CONST
(84451.623524331691/8.0),

13210 
REAL_CONST
(84474.353833735542/8.0),

13211 
REAL_CONST
(84497.085672306828/8.0),

13212 
REAL_CONST
(84519.819039839858/8.0),

13213 
REAL_CONST
(84542.553936128999/8.0),

13214 
REAL_CONST
(84565.290360968676/8.0),

13215 
REAL_CONST
(84588.028314153402/8.0),

13216 
REAL_CONST
(84610.767795477717/8.0),

13217 
REAL_CONST
(84633.508804736295/8.0),

13218 
REAL_CONST
(84656.251341723822/8.0),

13219 
REAL_CONST
(84678.995406235073/8.0),

13220 
REAL_CONST
(84701.740998064924/8.0),

13221 
REAL_CONST
(84724.488117008252/8.0),

13222 
REAL_CONST
(84747.236762860062/8.0),

13223 
REAL_CONST
(84769.986935415407/8.0),

13224 
REAL_CONST
(84792.73863446941/8.0),

13225 
REAL_CONST
(84815.491859817252/8.0),

13226 
REAL_CONST
(84838.246611254188/8.0),

13227 
REAL_CONST
(84861.002888575575/8.0),

13228 
REAL_CONST
(84883.760691576768/8.0),

13229 
REAL_CONST
(84906.520020053256/8.0),

13230 
REAL_CONST
(84929.28087380057/8.0),

13231 
REAL_CONST
(84952.043252614312/8.0),

13232 
REAL_CONST
(84974.807156290146/8.0),

13233 
REAL_CONST
(84997.572584623806/8.0),

13234 
REAL_CONST
(85020.339537411113/8.0),

13235 
REAL_CONST
(85043.108014447949/8.0),

13236 
REAL_CONST
(85065.878015530237/8.0),

13237 
REAL_CONST
(85088.649540453989/8.0),

13238 
REAL_CONST
(85111.422589015303/8.0),

13239 
REAL_CONST
(85134.197161010321/8.0),

13240 
REAL_CONST
(85156.973256235244/8.0),

13241 
REAL_CONST
(85179.750874486374/8.0),

13242 
REAL_CONST
(85202.530015560071/8.0),

13243 
REAL_CONST
(85225.310679252725/8.0),

13244 
REAL_CONST
(85248.092865360857/8.0),

13245 
REAL_CONST
(85270.876573681016/8.0),

13246 
REAL_CONST
(85293.661804009811/8.0),

13247 
REAL_CONST
(85316.448556143951/8.0),

13248 
REAL_CONST
(85339.236829880188/8.0),

13249 
REAL_CONST
(85362.026625015351/8.0),

13250 
REAL_CONST
(85384.817941346351/8.0),

13251 
REAL_CONST
(85407.610778670132/8.0),

13252 
REAL_CONST
(85430.405136783724/8.0),

13253 
REAL_CONST
(85453.201015484257/8.0),

13254 
REAL_CONST
(85475.998414568865/8.0),

13255 
REAL_CONST
(85498.797333834795/8.0),

13256 
REAL_CONST
(85521.597773079353/8.0),

13257 
REAL_CONST
(85544.399732099904/8.0),

13258 
REAL_CONST
(85567.203210693886/8.0),

13259 
REAL_CONST
(85590.008208658808/8.0),

13260 
REAL_CONST
(85612.814725792239/8.0),

13261 
REAL_CONST
(85635.62276189182/8.0),

13262 
REAL_CONST
(85658.432316755265/8.0),

13263 
REAL_CONST
(85681.243390180331/8.0),

13264 
REAL_CONST
(85704.055981964877/8.0),

13265 
REAL_CONST
(85726.870091906807/8.0),

13266 
REAL_CONST
(85749.685719804082/8.0),

13267 
REAL_CONST
(85772.502865454764/8.0),

13268 
REAL_CONST
(85795.321528656961/8.0),

13269 
REAL_CONST
(85818.141709208852/8.0),

13270 
REAL_CONST
(85840.963406908675/8.0),

13271 
REAL_CONST
(85863.78662155474/8.0),

13272 
REAL_CONST
(85886.611352945445/8.0),

13273 
REAL_CONST
(85909.437600879217/8.0),

13274 
REAL_CONST
(85932.26536515457/8.0),

13275 
REAL_CONST
(85955.094645570091/8.0),

13276 
REAL_CONST
(85977.92544192441/8.0),

13277 
REAL_CONST
(86000.757754016275/8.0),

13278 
REAL_CONST
(86023.591581644432/8.0),

13279 
REAL_CONST
(86046.426924607746/8.0),

13280 
REAL_CONST
(86069.263782705122/8.0),

13281 
REAL_CONST
(86092.102155735556/8.0),

13282 
REAL_CONST
(86114.942043498071/8.0),

13283 
REAL_CONST
(86137.783445791807/8.0),

13284 
REAL_CONST
(86160.626362415918/8.0),

13285 
REAL_CONST
(86183.470793169676/8.0),

13286 
REAL_CONST
(86206.316737852379/8.0),

13287 
REAL_CONST
(86229.164196263402/8.0),

13288 
REAL_CONST
(86252.013168202204/8.0),

13289 
REAL_CONST
(86274.863653468303/8.0),

13290 
REAL_CONST
(86297.715651861261/8.0),

13291 
REAL_CONST
(86320.569163180728/8.0),

13292 
REAL_CONST
(86343.424187226425/8.0),

13293 
REAL_CONST
(86366.280723798132/8.0),

13294 
REAL_CONST
(86389.138772695675/8.0),

13295 
REAL_CONST
(86411.998333718977/8.0),

13296 
REAL_CONST
(86434.859406668009/8.0),

13297 
REAL_CONST
(86457.721991342827/8.0),

13298 
REAL_CONST
(86480.586087543532/8.0),

13299 
REAL_CONST
(86503.451695070296/8.0),

13300 
REAL_CONST
(86526.318813723352/8.0),

13301 
REAL_CONST
(86549.187443303032/8.0),

13302 
REAL_CONST
(86572.057583609683/8.0),

13303 
REAL_CONST
(86594.929234443756/8.0),

13304 
REAL_CONST
(86617.802395605773/8.0),

13305 
REAL_CONST
(86640.677066896271/8.0),

13306 
REAL_CONST
(86663.553248115903/8.0),

13307 
REAL_CONST
(86686.43093906538/8.0),

13308 
REAL_CONST
(86709.310139545443/8.0),

13309 
REAL_CONST
(86732.190849356964/8.0),

13310 
REAL_CONST
(86755.073068300815/8.0),

13311 
REAL_CONST
(86777.956796177954/8.0),

13312 
REAL_CONST
(86800.842032789442/8.0),

13313 
REAL_CONST
(86823.728777936354/8.0),

13314 
REAL_CONST
(86846.617031419853/8.0),

13315 
REAL_CONST
(86869.506793041175/8.0),

13316 
REAL_CONST
(86892.398062601613/8.0),

13317 
REAL_CONST
(86915.290839902518/8.0),

13318 
REAL_CONST
(86938.185124745316/8.0),

13319 
REAL_CONST
(86961.080916931489/8.0),

13320 
REAL_CONST
(86983.978216262592/8.0),

13321 
REAL_CONST
(87006.87702254027/8.0),

13322 
REAL_CONST
(87029.777335566177/8.0),

13323 
REAL_CONST
(87052.67915514209/8.0),

13324 
REAL_CONST
(87075.582481069796/8.0),

13325 
REAL_CONST
(87098.487313151185/8.0),

13326 
REAL_CONST
(87121.39365118822/8.0),

13327 
REAL_CONST
(87144.301494982894/8.0),

13328 
REAL_CONST
(87167.210844337285/8.0),

13329 
REAL_CONST
(87190.121699053532/8.0),

13330 
REAL_CONST
(87213.034058933845/8.0),

13331 
REAL_CONST
(87235.947923780506/8.0),

13332 
REAL_CONST
(87258.863293395829/8.0),

13333 
REAL_CONST
(87281.780167582241/8.0),

13334 
REAL_CONST
(87304.698546142172/8.0),

13335 
REAL_CONST
(87327.618428878181/8.0),

13336 
REAL_CONST
(87350.539815592856/8.0),

13337 
REAL_CONST
(87373.462706088845/8.0),

13338 
REAL_CONST
(87396.387100168897/8.0),

13339 
REAL_CONST
(87419.312997635774/8.0),

13340 
REAL_CONST
(87442.240398292357/8.0),

13341 
REAL_CONST
(87465.16930194154/8.0),

13342 
REAL_CONST
(87488.099708386319/8.0),

13343 
REAL_CONST
(87511.031617429733/8.0),

13344 
REAL_CONST
(87533.965028874911/8.0),

13345 
REAL_CONST
(87556.899942525008/8.0),

13346 
REAL_CONST
(87579.836358183282/8.0),

13347 
REAL_CONST
(87602.774275653021/8.0),

13348 
REAL_CONST
(87625.713694737613/8.0),

13349 
REAL_CONST
(87648.654615240492/8.0),

13350 
REAL_CONST
(87671.597036965148/8.0),

13351 
REAL_CONST
(87694.540959715145/8.0),

13352 
REAL_CONST
(87717.486383294105/8.0),

13353 
REAL_CONST
(87740.433307505737/8.0),

13354 
REAL_CONST
(87763.381732153779/8.0),

13355 
REAL_CONST
(87786.331657042057/8.0),

13356 
REAL_CONST
(87809.283081974456/8.0),

13357 
REAL_CONST
(87832.236006754916/8.0),

13358 
REAL_CONST
(87855.190431187453/8.0),

13359 
REAL_CONST
(87878.146355076155/8.0),

13360 
REAL_CONST
(87901.103778225151/8.0),

13361 
REAL_CONST
(87924.062700438633/8.0),

13362 
REAL_CONST
(87947.023121520891/8.0),

13363 
REAL_CONST
(87969.985041276246/8.0),

13364 
REAL_CONST
(87992.948459509105/8.0),

13365 
REAL_CONST
(88015.913376023906/8.0),

13366 
REAL_CONST
(88038.879790625171/8.0),

13367 
REAL_CONST
(88061.847703117513/8.0),

13368 
REAL_CONST
(88084.817113305573/8.0),

13369 
REAL_CONST
(88107.788020994049/8.0),

13370 
REAL_CONST
(88130.760425987726/8.0),

13371 
REAL_CONST
(88153.734328091465/8.0),

13372 
REAL_CONST
(88176.709727110137/8.0),

13373 
REAL_CONST
(88199.686622848749/8.0),

13374 
REAL_CONST
(88222.665015112303/8.0),

13375 
REAL_CONST
(88245.644903705906/8.0),

13376 
REAL_CONST
(88268.626288434709/8.0),

13377 
REAL_CONST
(88291.609169103947/8.0),

13378 
REAL_CONST
(88314.593545518903/8.0),

13379 
REAL_CONST
(88337.579417484914/8.0),

13380 
REAL_CONST
(88360.566784807408/8.0),

13381 
REAL_CONST
(88383.555647291854/8.0),

13382 
REAL_CONST
(88406.546004743795/8.0),

13383 
REAL_CONST
(88429.537856968818/8.0),

13384 
REAL_CONST
(88452.531203772611/8.0),

13385 
REAL_CONST
(88475.52604496089/8.0),

13386 
REAL_CONST
(88498.522380339447/8.0),

13387 
REAL_CONST
(88521.52020971413/8.0),

13388 
REAL_CONST
(88544.519532890874/8.0),

13389 
REAL_CONST
(88567.520349675644/8.0),

13390 
REAL_CONST
(88590.522659874507/8.0),

13391 
REAL_CONST
(88613.526463293543/8.0),

13392 
REAL_CONST
(88636.531759738922/8.0),

13393 
REAL_CONST
(88659.538549016899/8.0),

13394 
REAL_CONST
(88682.546830933745/8.0),

13395 
REAL_CONST
(88705.556605295846/8.0),

13396 
REAL_CONST
(88728.567871909589/8.0),

13397 
REAL_CONST
(88751.580630581491/8.0),

13398 
REAL_CONST
(88774.594881118086/8.0),

13399 
REAL_CONST
(88797.610623325963/8.0),

13400 
REAL_CONST
(88820.62785701183/8.0),

13401 
REAL_CONST
(88843.646581982393/8.0),

13402 
REAL_CONST
(88866.666798044462/8.0),

13403 
REAL_CONST
(88889.688505004888/8.0),

13404 
REAL_CONST
(88912.711702670611/8.0),

13405 
REAL_CONST
(88935.7363908486/8.0),

13406 
REAL_CONST
(88958.762569345898/8.0),

13407 
REAL_CONST
(88981.790237969632/8.0),

13408 
REAL_CONST
(89004.81939652696/8.0),

13409 
REAL_CONST
(89027.850044825114/8.0),

13410 
REAL_CONST
(89050.882182671412/8.0),

13411 
REAL_CONST
(89073.9158098732/8.0),

13412 
REAL_CONST
(89096.950926237885/8.0),

13413 
REAL_CONST
(89119.987531572973/8.0),

13414 
REAL_CONST
(89143.025625686001/8.0),

13415 
REAL_CONST
(89166.065208384563/8.0),

13416 
REAL_CONST
(89189.106279476357/8.0),

13417 
REAL_CONST
(89212.148838769106/8.0),

13418 
REAL_CONST
(89235.192886070581/8.0),

13419 
REAL_CONST
(89258.238421188667/8.0),

13420 
REAL_CONST
(89281.285443931265/8.0),

13421 
REAL_CONST
(89304.333954106376/8.0),

13422 
REAL_CONST
(89327.383951522017/8.0),

13423 
REAL_CONST
(89350.435435986306/8.0),

13424 
REAL_CONST
(89373.488407307406/8.0),

13425 
REAL_CONST
(89396.542865293537/8.0),

13426 
REAL_CONST
(89419.598809753006/8.0),

13427 
REAL_CONST
(89442.656240494165/8.0),

13428 
REAL_CONST
(89465.715157325409/8.0),

13429 
REAL_CONST
(89488.775560055219/8.0),

13430 
REAL_CONST
(89511.837448492137/8.0),

13431 
REAL_CONST
(89534.900822444746/8.0),

13432 
REAL_CONST
(89557.965681721733/8.0),

13433 
REAL_CONST
(89581.032026131812/8.0),

13434 
REAL_CONST
(89604.099855483742/8.0),

13435 
REAL_CONST
(89627.169169586399/8.0),

13436 
REAL_CONST
(89650.239968248672/8.0),

13437 
REAL_CONST
(89673.312251279538/8.0),

13438 
REAL_CONST
(89696.386018488018/8.0),

13439 
REAL_CONST
(89719.461269683205/8.0),

13440 
REAL_CONST
(89742.53800467425/8.0),

13441 
REAL_CONST
(89765.616223270365/8.0),

13442 
REAL_CONST
(89788.69592528083/8.0),

13443 
REAL_CONST
(89811.777110514988/8.0),

13444 
REAL_CONST
(89834.859778782207/8.0),

13445 
REAL_CONST
(89857.943929891975/8.0),

13446 
REAL_CONST
(89881.029563653807/8.0),

13447 
REAL_CONST
(89904.116679877261/8.0),

13448 
REAL_CONST
(89927.205278372014/8.0),

13449 
REAL_CONST
(89950.29535894774/8.0),

13450 
REAL_CONST
(89973.386921414218/8.0),

13451 
REAL_CONST
(89996.479965581268/8.0),

13452 
REAL_CONST
(90019.574491258769/8.0),

13453 
REAL_CONST
(90042.670498256688/8.0),

13454 
REAL_CONST
(90065.767986385021/8.0),

13455 
REAL_CONST
(90088.866955453836/8.0),

13456 
REAL_CONST
(90111.967405273259/8.0),

13457 
REAL_CONST
(90135.069335653476/8.0),

13458 
REAL_CONST
(90158.172746404758/8.0),

13459 
REAL_CONST
(90181.277637337407/8.0),

13460 
REAL_CONST
(90204.384008261797/8.0),

13461 
REAL_CONST
(90227.49185898836/8.0),

13462 
REAL_CONST
(90250.601189327586/8.0),

13463 
REAL_CONST
(90273.711999090039/8.0),

13464 
REAL_CONST
(90296.824288086325/8.0),

13465 
REAL_CONST
(90319.938056127125/8.0),

13466 
REAL_CONST
(90343.053303023189/8.0),

13467 
REAL_CONST
(90366.170028585286/8.0),

13468 
REAL_CONST
(90389.288232624298/8.0),

13469 
REAL_CONST
(90412.407914951138/8.0),

13470 
REAL_CONST
(90435.529075376777/8.0),

13471 
REAL_CONST
(90458.651713712257/8.0),

13472 
REAL_CONST
(90481.775829768681/8.0),

13473 
REAL_CONST
(90504.901423357209/8.0),

13474 
REAL_CONST
(90528.028494289058/8.0),

13475 
REAL_CONST
(90551.157042375504/8.0),

13476 
REAL_CONST
(90574.287067427911/8.0),

13477 
REAL_CONST
(90597.418569257643/8.0),

13478 
REAL_CONST
(90620.551547676194/8.0),

13479 
REAL_CONST
(90643.686002495073/8.0),

13480 
REAL_CONST
(90666.821933525847/8.0),

13481 
REAL_CONST
(90689.959340580186/8.0),

13482 
REAL_CONST
(90713.098223469773/8.0),

13483 
REAL_CONST
(90736.238582006365/8.0),

13484 
REAL_CONST
(90759.380416001804/8.0),

13485 
REAL_CONST
(90782.523725267951/8.0),

13486 
REAL_CONST
(90805.668509616764/8.0),

13487 
REAL_CONST
(90828.814768860233/8.0),

13488 
REAL_CONST
(90851.962502810435/8.0),

13489 
REAL_CONST
(90875.11171127946/8.0),

13490 
REAL_CONST
(90898.262394079517/8.0),

13491 
REAL_CONST
(90921.414551022855/8.0),

13492 
REAL_CONST
(90944.568181921743/8.0),

13493 
REAL_CONST
(90967.72328658856/8.0),

13494 
REAL_CONST
(90990.879864835719/8.0),

13495 
REAL_CONST
(91014.037916475718/8.0),

13496 
REAL_CONST
(91037.19744132107/8.0),

13497 
REAL_CONST
(91060.358439184391/8.0),

13498 
REAL_CONST
(91083.520909878338/8.0),

13499 
REAL_CONST
(91106.684853215629/8.0),

13500 
REAL_CONST
(91129.850269009039/8.0),

13501 
REAL_CONST
(91153.017157071401/8.0),

13502 
REAL_CONST
(91176.185517215621/8.0),

13503 
REAL_CONST
(91199.355349254649/8.0),

13504 
REAL_CONST
(91222.526653001492/8.0),

13505 
REAL_CONST
(91245.699428269247/8.0),

13506 
REAL_CONST
(91268.873674871036/8.0),

13507 
REAL_CONST
(91292.049392620058/8.0),

13508 
REAL_CONST
(91315.226581329553/8.0),

13509 
REAL_CONST
(91338.405240812834/8.0),

13510 
REAL_CONST
(91361.585370883287/8.0),

13511 
REAL_CONST
(91384.766971354344/8.0),

13512 
REAL_CONST
(91407.950042039476/8.0),

13513 
REAL_CONST
(91431.134582752245/8.0),

13514 
REAL_CONST
(91454.320593306256/8.0),

13515 
REAL_CONST
(91477.508073515171/8.0),

13516 
REAL_CONST
(91500.697023192712/8.0),

13517 
REAL_CONST
(91523.887442152685/8.0),

13518 
REAL_CONST
(91547.07933020893/8.0),

13519 
REAL_CONST
(91570.272687175326/8.0),

13520 
REAL_CONST
(91593.467512865856/8.0),

13521 
REAL_CONST
(91616.663807094534/8.0),

13522 
REAL_CONST
(91639.861569675442/8.0),

13523 
REAL_CONST
(91663.060800422725/8.0),

13524 
REAL_CONST
(91686.261499150554/8.0),

13525 
REAL_CONST
(91709.463665673218/8.0),

13526 
REAL_CONST
(91732.66729980502/8.0),

13527 
REAL_CONST
(91755.872401360321/8.0),

13528 
REAL_CONST
(91779.078970153569/8.0),

13529 
REAL_CONST
(91802.287005999257/8.0),

13530 
REAL_CONST
(91825.49650871192/8.0),

13531 
REAL_CONST
(91848.707478106167/8.0),

13532 
REAL_CONST
(91871.91991399668/8.0),

13533 
REAL_CONST
(91895.133816198169/8.0),

13534 
REAL_CONST
(91918.349184525418/8.0),

13535 
REAL_CONST
(91941.566018793281/8.0),

13536 
REAL_CONST
(91964.784318816659/8.0),

13537 
REAL_CONST
(91988.004084410495/8.0),

13538 
REAL_CONST
(92011.22531538982/8.0),

13539 
REAL_CONST
(92034.448011569708/8.0),

13540 
REAL_CONST
(92057.672172765277/8.0),

13541 
REAL_CONST
(92080.897798791746/8.0),

13542 
REAL_CONST
(92104.124889464365/8.0),

13543 
REAL_CONST
(92127.353444598411/8.0),

13544 
REAL_CONST
(92150.58346400928/8.0),

13545 
REAL_CONST
(92173.814947512379/8.0),

13546 
REAL_CONST
(92197.04789492322/8.0),

13547 
REAL_CONST
(92220.282306057314/8.0),

13548 
REAL_CONST
(92243.518180730272/8.0),

13549 
REAL_CONST
(92266.755518757753/8.0),

13550 
REAL_CONST
(92289.994319955469/8.0),

13551 
REAL_CONST
(92313.234584139194/8.0),

13552 
REAL_CONST
(92336.476311124774/8.0),

13553 
REAL_CONST
(92359.719500728082/8.0),

13554 
REAL_CONST
(92382.964152765067/8.0),

13555 
REAL_CONST
(92406.210267051734/8.0),

13556 
REAL_CONST
(92429.457843404161/8.0),

13557 
REAL_CONST
(92452.706881638471/8.0),

13558 
REAL_CONST
(92475.957381570814/8.0),

13559 
REAL_CONST
(92499.209343017443/8.0),

13560 
REAL_CONST
(92522.462765794655/8.0),

13561 
REAL_CONST
(92545.717649718805/8.0),

13562 
REAL_CONST
(92568.973994606305/8.0),

13563 
REAL_CONST
(92592.231800273614/8.0),

13564 
REAL_CONST
(92615.491066537259/8.0),

13565 
REAL_CONST
(92638.751793213814/8.0),

13566 
REAL_CONST
(92662.01398011994/8.0),

13567 
REAL_CONST
(92685.277627072326/8.0),

13568 
REAL_CONST
(92708.54273388772/8.0),

13569 
REAL_CONST
(92731.809300382942/8.0),

13570 
REAL_CONST
(92755.077326374871/8.0),

13571 
REAL_CONST
(92778.346811680414/8.0),

13572 
REAL_CONST
(92801.617756116568/8.0),

13573 
REAL_CONST
(92824.890159500384/8.0),

13574 
REAL_CONST
(92848.164021648947/8.0),

13575 
REAL_CONST
(92871.439342379424/8.0),

13576 
REAL_CONST
(92894.716121509016/8.0),

13577 
REAL_CONST
(92917.994358855023/8.0),

13578 
REAL_CONST
(92941.274054234746/8.0),

13579 
REAL_CONST
(92964.555207465572/8.0),

13580 
REAL_CONST
(92987.837818364962/8.0),

13581 
REAL_CONST
(93011.121886750407/8.0),

13582 
REAL_CONST
(93034.407412439468/8.0),

13583 
REAL_CONST
(93057.694395249753/8.0),

13584 
REAL_CONST
(93080.982834998955/8.0),

13585 
REAL_CONST
(93104.272731504767/8.0),

13586 
REAL_CONST
(93127.564084584999/8.0),

13587 
REAL_CONST
(93150.856894057491/8.0),

13588 
REAL_CONST
(93174.15115974014/8.0),

13589 
REAL_CONST
(93197.446881450916/8.0),

13590 
REAL_CONST
(93220.744059007804/8.0),

13591 
REAL_CONST
(93244.04269222889/8.0),

13592 
REAL_CONST
(93267.342780932304/8.0),

13593 
REAL_CONST
(93290.644324936235/8.0),

13594 
REAL_CONST
(93313.947324058914/8.0),

13595 
REAL_CONST
(93337.251778118633/8.0),

13596 
REAL_CONST
(93360.557686933767/8.0),

13597 
REAL_CONST
(93383.865050322696/8.0),

13598 
REAL_CONST
(93407.173868103928/8.0),

13599 
REAL_CONST
(93430.484140095941/8.0),

13600 
REAL_CONST
(93453.795866117362/8.0),

13601 
REAL_CONST
(93477.109045986799/8.0),

13602 
REAL_CONST
(93500.423679522952/8.0),

13603 
REAL_CONST
(93523.739766544561/8.0),

13604 
REAL_CONST
(93547.057306870454/8.0),

13605 
REAL_CONST
(93570.376300319491/8.0),

13606 
REAL_CONST
(93593.696746710571/8.0),

13607 
REAL_CONST
(93617.018645862699/8.0),

13608 
REAL_CONST
(93640.341997594893/8.0),

13609 
REAL_CONST
(93663.666801726242/8.0),

13610 
REAL_CONST
(93686.993058075881/8.0),

13611 
REAL_CONST
(93710.320766463032/8.0),

13612 
REAL_CONST
(93733.64992670693/8.0),

13613 
REAL_CONST
(93756.980538626914/8.0),

13614 
REAL_CONST
(93780.312602042337/8.0),

13615 
REAL_CONST
(93803.646116772637/8.0),

13616 
REAL_CONST
(93826.981082637285/8.0),

13617 
REAL_CONST
(93850.317499455836/8.0),

13618 
REAL_CONST
(93873.655367047861/8.0),

13619 
REAL_CONST
(93896.994685233032/8.0),

13620 
REAL_CONST
(93920.335453831038/8.0),

13621 
REAL_CONST
(93943.677672661666/8.0),

13622 
REAL_CONST
(93967.021341544707/8.0),

13623 
REAL_CONST
(93990.366460300051/8.0),

13624 
REAL_CONST
(94013.713028747632/8.0),

13625 
REAL_CONST
(94037.061046707429/8.0),

13626 
REAL_CONST
(94060.410513999494/8.0),

13627 
REAL_CONST
(94083.761430443905/8.0),

13628 
REAL_CONST
(94107.113795860845/8.0),

13629 
REAL_CONST
(94130.467610070496/8.0),

13630 
REAL_CONST
(94153.822872893157/8.0),

13631 
REAL_CONST
(94177.179584149111/8.0),

13632 
REAL_CONST
(94200.537743658759/8.0),

13633 
REAL_CONST
(94223.897351242529/8.0),

13634 
REAL_CONST
(94247.25840672091/8.0),

13635 
REAL_CONST
(94270.620909914433/8.0),

13636 
REAL_CONST
(94293.98486064373/8.0),

13637 
REAL_CONST
(94317.350258729421/8.0),

13638 
REAL_CONST
(94340.71710399224/8.0),

13639 
REAL_CONST
(94364.085396252936/8.0),

13640 
REAL_CONST
(94387.455135332348/8.0),

13641 
REAL_CONST
(94410.82632105134/8.0),

13642 
REAL_CONST
(94434.198953230851/8.0),

13643 
REAL_CONST
(94457.573031691878/8.0),

13644 
REAL_CONST
(94480.948556255447/8.0),

13645 
REAL_CONST
(94504.325526742658/8.0),

13646 
REAL_CONST
(94527.70394297468/8.0),

13647 
REAL_CONST
(94551.083804772716/8.0),

13648 
REAL_CONST
(94574.465111958023/8.0),

13649 
REAL_CONST
(94597.847864351934/8.0),

13650 
REAL_CONST
(94621.232061775823/8.0),

13651 
REAL_CONST
(94644.617704051096/8.0),

13652 
REAL_CONST
(94668.004790999272/8.0),

13653 
REAL_CONST
(94691.393322441872/8.0),

13654 
REAL_CONST
(94714.783298200506/8.0),

13655 
REAL_CONST
(94738.174718096794/8.0),

13656 
REAL_CONST
(94761.567581952477/8.0),

13657 
REAL_CONST
(94784.961889589307/8.0),

13658 
REAL_CONST
(94808.357640829097/8.0),

13659 
REAL_CONST
(94831.754835493703/8.0),

13660 
REAL_CONST
(94855.153473405066/8.0),

13661 
REAL_CONST
(94878.553554385173/8.0),

13662 
REAL_CONST
(94901.955078256055/8.0),

13663 
REAL_CONST
(94925.358044839784/8.0),

13664 
REAL_CONST
(94948.762453958523/8.0),

13665 
REAL_CONST
(94972.168305434476/8.0),

13666 
REAL_CONST
(94995.575599089891/8.0),

13667 
REAL_CONST
(95018.984334747074/8.0),

13668 
REAL_CONST
(95042.394512228391/8.0),

13669 
REAL_CONST
(95065.806131356265/8.0),

13670 
REAL_CONST
(95089.219191953176/8.0),

13671 
REAL_CONST
(95112.633693841635/8.0),

13672 
REAL_CONST
(95136.04963684424/8.0),

13673 
REAL_CONST
(95159.467020783617/8.0),

13674 
REAL_CONST
(95182.885845482466/8.0),

13675 
REAL_CONST
(95206.306110763529/8.0),

13676 
REAL_CONST
(95229.727816449609/8.0),

13677 
REAL_CONST
(95253.150962363579/8.0),

13678 
REAL_CONST
(95276.575548328314/8.0),

13679 
REAL_CONST
(95300.001574166803/8.0),

13680 
REAL_CONST
(95323.429039702052/8.0),

13681 
REAL_CONST
(95346.857944757154/8.0),

13682 
REAL_CONST
(95370.288289155214/8.0),

13683 
REAL_CONST
(95393.720072719429/8.0),

13684 
REAL_CONST
(95417.153295273019/8.0),

13685 
REAL_CONST
(95440.587956639298/8.0),

13686 
REAL_CONST
(95464.024056641589/8.0),

13687 
REAL_CONST
(95487.461595103305/8.0),

13688 
REAL_CONST
(95510.900571847902/8.0),

13689 
REAL_CONST
(95534.340986698866/8.0),

13690 
REAL_CONST
(95557.782839479783/8.0),

13691 
REAL_CONST
(95581.226130014256/8.0),

13692 
REAL_CONST
(95604.670858125959/8.0),

13693 
REAL_CONST
(95628.117023638595/8.0),

13694 
REAL_CONST
(95651.564626375985/8.0),

13695 
REAL_CONST
(95675.013666161918/8.0),

13696 
REAL_CONST
(95698.464142820303/8.0),

13697 
REAL_CONST
(95721.916056175076/8.0),

13698 
REAL_CONST
(95745.369406050231/8.0),

13699 
REAL_CONST
(95768.824192269807/8.0),

13700 
REAL_CONST
(95792.280414657915/8.0),

13701 
REAL_CONST
(95815.738073038709/8.0),

13702 
REAL_CONST
(95839.197167236387/8.0),

13703 
REAL_CONST
(95862.657697075221/8.0),

13704 
REAL_CONST
(95886.11966237954/8.0),

13705 
REAL_CONST
(95909.583062973688/8.0),

13706 
REAL_CONST
(95933.047898682111/8.0),

13707 
REAL_CONST
(95956.514169329268/8.0),

13708 
REAL_CONST
(95979.981874739708/8.0),

13709 
REAL_CONST
(96003.451014738006/8.0),

13710 
REAL_CONST
(96026.921589148798/8.0),

13711 
REAL_CONST
(96050.393597796792/8.0),

13712 
REAL_CONST
(96073.867040506724/8.0),

13713 
REAL_CONST
(96097.341917103375/8.0),

13714 
REAL_CONST
(96120.818227411626/8.0),

13715 
REAL_CONST
(96144.295971256375/8.0),

13716 
REAL_CONST
(96167.775148462577/8.0),

13717 
REAL_CONST
(96191.255758855244/8.0),

13718 
REAL_CONST
(96214.737802259449/8.0),

13719 
REAL_CONST
(96238.221278500292/8.0),

13720 
REAL_CONST
(96261.70618740299/8.0),

13721 
REAL_CONST
(96285.192528792715/8.0),

13722 
REAL_CONST
(96308.680302494788/8.0),

13723 
REAL_CONST
(96332.169508334526/8.0),

13724 
REAL_CONST
(96355.660146137321/8.0),

13725 
REAL_CONST
(96379.152215728609/8.0),

13726 
REAL_CONST
(96402.645716933868/8.0),

13727 
REAL_CONST
(96426.14064957868/8.0),

13728 
REAL_CONST
(96449.637013488609/8.0),

13729 
REAL_CONST
(96473.134808489311/8.0),

13730 
REAL_CONST
(96496.63403440651/8.0),

13731 
REAL_CONST
(96520.134691065963/8.0),

13732 
REAL_CONST
(96543.636778293469/8.0),

13733 
REAL_CONST
(96567.140295914898/8.0),

13734 
REAL_CONST
(96590.645243756153/8.0),

13735 
REAL_CONST
(96614.151621643221/8.0),

13736 
REAL_CONST
(96637.659429402134/8.0),

13737 
REAL_CONST
(96661.168666858954/8.0),

13738 
REAL_CONST
(96684.679333839798/8.0),

13739 
REAL_CONST
(96708.191430170875/8.0),

13740 
REAL_CONST
(96731.70495567839/8.0),

13741 
REAL_CONST
(96755.219910188665/8.0),

13742 
REAL_CONST
(96778.736293528011/8.0),

13743 
REAL_CONST
(96802.254105522836/8.0),

13744 
REAL_CONST
(96825.77334599958/8.0),

13745 
REAL_CONST
(96849.29401478474/8.0),

13746 
REAL_CONST
(96872.816111704873/8.0),

13747 
REAL_CONST
(96896.339636586577/8.0),

13748 
REAL_CONST
(96919.864589256511/8.0),

13749 
REAL_CONST
(96943.390969541389/8.0),

13750 
REAL_CONST
(96966.918777267958/8.0),

13751 
REAL_CONST
(96990.448012263048/8.0),

13752 
REAL_CONST
(97013.978674353522/8.0),

13753 
REAL_CONST
(97037.510763366285/8.0),

13754 
REAL_CONST
(97061.044279128328/8.0),

13755 
REAL_CONST
(97084.579221466673/8.0),

13756 
REAL_CONST
(97108.115590208385/8.0),

13757 
REAL_CONST
(97131.653385180587/8.0),

13758 
REAL_CONST
(97155.19260621049/8.0),

13759 
REAL_CONST
(97178.733253125291/8.0),

13760 
REAL_CONST
(97202.2753257523/8.0),

13761 
REAL_CONST
(97225.81882391886/8.0),

13762 
REAL_CONST
(97249.363747452342/8.0),

13763 
REAL_CONST
(97272.910096180189/8.0),

13764 
REAL_CONST
(97296.457869929916/8.0),

13765 
REAL_CONST
(97320.007068529041/8.0),

13766 
REAL_CONST
(97343.557691805196/8.0),

13767 
REAL_CONST
(97367.109739586012/8.0),

13768 
REAL_CONST
(97390.663211699197/8.0),

13769 
REAL_CONST
(97414.218107972498/8.0),

13770 
REAL_CONST
(97437.774428233737/8.0),

13771 
REAL_CONST
(97461.332172310766/8.0),

13772 
REAL_CONST
(97484.891340031507/8.0),

13773 
REAL_CONST
(97508.451931223899/8.0),

13774 
REAL_CONST
(97532.013945715982/8.0),

13775 
REAL_CONST
(97555.577383335811/8.0),

13776 
REAL_CONST
(97579.142243911512/8.0),

13777 
REAL_CONST
(97602.708527271257/8.0),

13778 
REAL_CONST
(97626.276233243261/8.0),

13779 
REAL_CONST
(97649.845361655811/8.0),

13780 
REAL_CONST
(97673.415912337223/8.0),

13781 
REAL_CONST
(97696.987885115886/8.0),

13782 
REAL_CONST
(97720.561279820206/8.0),

13783 
REAL_CONST
(97744.1360962787/8.0),

13784 
REAL_CONST
(97767.712334319876/8.0),

13785 
REAL_CONST
(97791.289993772341/8.0),

13786 
REAL_CONST
(97814.869074464703/8.0),

13787 
REAL_CONST
(97838.449576225685/8.0),

13788 
REAL_CONST
(97862.031498883996/8.0),

13789 
REAL_CONST
(97885.614842268449/8.0),

13790 
REAL_CONST
(97909.199606207883/8.0),

13791 
REAL_CONST
(97932.785790531183/8.0),

13792 
REAL_CONST
(97956.37339506732/8.0),

13793 
REAL_CONST
(97979.962419645264/8.0),

13794 
REAL_CONST
(98003.552864094076/8.0),

13795 
REAL_CONST
(98027.144728242856/8.0),

13796 
REAL_CONST
(98050.738011920766/8.0),

13797 
REAL_CONST
(98074.332714956996/8.0),

13798 
REAL_CONST
(98097.928837180807/8.0),

13799 
REAL_CONST
(98121.526378421506/8.0),

13800 
REAL_CONST
(98145.125338508456/8.0),

13801 
REAL_CONST
(98168.725717271067/8.0),

13802 
REAL_CONST
(98192.327514538789/8.0),

13803 
REAL_CONST
(98215.930730141132/8.0),

13804 
REAL_CONST
(98239.535363907664/8.0),

13805 
REAL_CONST
(98263.141415668011/8.0),

13806 
REAL_CONST
(98286.748885251814/8.0),

13807 
REAL_CONST
(98310.357772488816/8.0),

13808 
REAL_CONST
(98333.968077208759/8.0),

13809 
REAL_CONST
(98357.579799241488/8.0),

13810 
REAL_CONST
(98381.192938416847/8.0),

13811 
REAL_CONST
(98404.807494564782/8.0),

13812 
REAL_CONST
(98428.42346751524/8.0),

13813 
REAL_CONST
(98452.040857098269/8.0),

13814 
REAL_CONST
(98475.659663143917/8.0),

13815 
REAL_CONST
(98499.27988548232/8.0),

13816 
REAL_CONST
(98522.901523943656/8.0),

13817 
REAL_CONST
(98546.524578358163/8.0),

13818 
REAL_CONST
(98570.149048556093/8.0),

13819 
REAL_CONST
(98593.774934367786/8.0),

13820 
REAL_CONST
(98617.402235623624/8.0),

13821 
REAL_CONST
(98641.030952154048/8.0),

13822 
REAL_CONST
(98664.661083789513/8.0),

13823 
REAL_CONST
(98688.292630360564/8.0),

13824 
REAL_CONST
(98711.925591697771/8.0),

13825 
REAL_CONST
(98735.559967631794/8.0),

13826 
REAL_CONST
(98759.195757993293/8.0),

13827 
REAL_CONST
(98782.832962613014/8.0),

13828 
REAL_CONST
(98806.471581321734/8.0),

13829 
REAL_CONST
(98830.111613950285/8.0),

13830 
REAL_CONST
(98853.753060329575/8.0),

13831 
REAL_CONST
(98877.39592029051/8.0),

13832 
REAL_CONST
(98901.040193664099/8.0),

13833 
REAL_CONST
(98924.68588028138/8.0),

13834 
REAL_CONST
(98948.33297997342/8.0),

13835 
REAL_CONST
(98971.981492571387/8.0),

13836 
REAL_CONST
(98995.63141790645/8.0),

13837 
REAL_CONST
(99019.282755809851/8.0),

13838 
REAL_CONST
(99042.935506112874/8.0),

13839 
REAL_CONST
(99066.589668646877/8.0),

13840 
REAL_CONST
(99090.245243243233/8.0),

13841 
REAL_CONST
(99113.902229733401/8.0),

13842 
REAL_CONST
(99137.560627948857/8.0),

13843 
REAL_CONST
(99161.220437721131/8.0),

13844 
REAL_CONST
(99184.881658881859/8.0),

13845 
REAL_CONST
(99208.544291262631/8.0),

13846 
REAL_CONST
(99232.208334695169/8.0),

13847 
REAL_CONST
(99255.87378901121/8.0),

13848 
REAL_CONST
(99279.540654042547/8.0),

13849 
REAL_CONST
(99303.208929621018/8.0),

13850 
REAL_CONST
(99326.878615578535/8.0),

13851 
REAL_CONST
(99350.549711746993/8.0),

13852 
REAL_CONST
(99374.222217958435/8.0),

13853 
REAL_CONST
(99397.896134044888/8.0),

13854 
REAL_CONST
(99421.571459838422/8.0),

13855 
REAL_CONST
(99445.248195171211/8.0),

13856 
REAL_CONST
(99468.926339875441/8.0),

13857 
REAL_CONST
(99492.605893783344/8.0),

13858 
REAL_CONST
(99516.286856727209/8.0),

13859 
REAL_CONST
(99539.969228539398/8.0),

13860 
REAL_CONST
(99563.653009052287/8.0),

13861 
REAL_CONST
(99587.338198098325/8.0),

13862 
REAL_CONST
(99611.024795510006/8.0),

13863 
REAL_CONST
(99634.712801119866/8.0),

13864 
REAL_CONST
(99658.402214760499/8.0),

13865 
REAL_CONST
(99682.093036264545/8.0),

13866 
REAL_CONST
(99705.785265464699/8.0),

13867 
REAL_CONST
(99729.478902193689/8.0),

13868 
REAL_CONST
(99753.173946284325/8.0),

13869 
REAL_CONST
(99776.870397569437/8.0),

13870 
REAL_CONST
(99800.56825588191/8.0),

13871 
REAL_CONST
(99824.267521054688/8.0),

13872 
REAL_CONST
(99847.968192920773/8.0),

13873 
REAL_CONST
(99871.670271313182/8.0),

13874 
REAL_CONST
(99895.373756065004/8.0),

13875 
REAL_CONST
(99919.078647009388/8.0),

13876 
REAL_CONST
(99942.78494397951/8.0),

13877 
REAL_CONST
(99966.492646808634/8.0),

13878 
REAL_CONST
(99990.20175533001/8.0),

13879 
REAL_CONST
(100013.91226937699/8.0),

13880 
REAL_CONST
(100037.62418878295/8.0),

13881 
REAL_CONST
(100061.33751338134/8.0),

13882 
REAL_CONST
(100085.05224300563/8.0),

13883 
REAL_CONST
(100108.76837748935/8.0),

13884 
REAL_CONST
(100132.4859166661/8.0),

13885 
REAL_CONST
(100156.2048603695/8.0),

13886 
REAL_CONST
(100179.92520843323/8.0),

13887 
REAL_CONST
(100203.64696069101/8.0),

13888 
REAL_CONST
(100227.37011697664/8.0),

13889 
REAL_CONST
(100251.09467712394/8.0),

13890 
REAL_CONST
(100274.82064096678/8.0),

13891 
REAL_CONST
(100298.54800833909/8.0),

13892 
REAL_CONST
(100322.27677907483/8.0),

13893 
REAL_CONST
(100346.00695300807/8.0),

13894 
REAL_CONST
(100369.73852997283/8.0),

13895 
REAL_CONST
(100393.47150980328/8.0),

13896 
REAL_CONST
(100417.20589233354/8.0),

13897 
REAL_CONST
(100440.94167739789/8.0),

13898 
REAL_CONST
(100464.67886483055/8.0),

13899 
REAL_CONST
(100488.41745446586/8.0),

13900 
REAL_CONST
(100512.1574461382/8.0),

13901 
REAL_CONST
(100535.89883968196/8.0),

13902 
REAL_CONST
(100559.64163493161/8.0),

13903 
REAL_CONST
(100583.38583172169/8.0),

13904 
REAL_CONST
(100607.13142988674/8.0),

13905 
REAL_CONST
(100630.87842926137/8.0),

13906 
REAL_CONST
(100654.62682968024/8.0),

13907 
REAL_CONST
(100678.37663097809/8.0),

13908 
REAL_CONST
(100702.12783298964/8.0),

13909 
REAL_CONST
(100725.88043554971/8.0),

13910 
REAL_CONST
(100749.63443849317/8.0),

13911 
REAL_CONST
(100773.38984165489/8.0),

13912 
REAL_CONST
(100797.14664486986/8.0),

13913 
REAL_CONST
(100820.90484797307/8.0),

13914 
REAL_CONST
(100844.66445079957/8.0),

13915 
REAL_CONST
(100868.42545318443/8.0),

13916 
REAL_CONST
(100892.18785496285/8.0),

13917 
REAL_CONST
(100915.95165596998/8.0),

13918 
REAL_CONST
(100939.71685604109/8.0),

13919 
REAL_CONST
(100963.48345501146/8.0),

13920 
REAL_CONST
(100987.25145271645/8.0),

13921 
REAL_CONST
(101011.02084899142/8.0),

13922 
REAL_CONST
(101034.79164367182/8.0),

13923 
REAL_CONST
(101058.56383659317/8.0),

13924 
REAL_CONST
(101082.33742759094/8.0),

13925 
REAL_CONST
(101106.11241650078/8.0),

13926 
REAL_CONST
(101129.88880315828/8.0),

13927 
REAL_CONST
(101153.66658739912/8.0),

13928 
REAL_CONST
(101177.44576905905/8.0),

13929 
REAL_CONST
(101201.22634797383/8.0),

13930 
REAL_CONST
(101225.00832397929/8.0),

13931 
REAL_CONST
(101248.7916969113/8.0),

13932 
REAL_CONST
(101272.57646660579/8.0),

13933 
REAL_CONST
(101296.36263289873/8.0),

13934 
REAL_CONST
(101320.15019562612/8.0),

13935 
REAL_CONST
(101343.93915462404/8.0),

13936 
REAL_CONST
(101367.7295097286/8.0),

13937 
REAL_CONST
(101391.52126077596/8.0),

13938 
REAL_CONST
(101415.31440760233/8.0),

13939 
REAL_CONST
(101439.10895004397/8.0),

13940 
REAL_CONST
(101462.9048879372/8.0),

13941 
REAL_CONST
(101486.70222111834/8.0),

13942 
REAL_CONST
(101510.50094942382/8.0),

13943 
REAL_CONST
(101534.30107269008/8.0),

13944 
REAL_CONST
(101558.10259075361/8.0),

13945 
REAL_CONST
(101581.90550345098/8.0),

13946 
REAL_CONST
(101605.70981061876/8.0),

13947 
REAL_CONST
(101629.5155120936/8.0),

13948 
REAL_CONST
(101653.32260771218/8.0),

13949 
REAL_CONST
(101677.13109731126/8.0),

13950 
REAL_CONST
(101700.9409807276/8.0),

13951 
REAL_CONST
(101724.75225779804/8.0),

13952 
REAL_CONST
(101748.56492835947/8.0),

13953 
REAL_CONST
(101772.37899224881/8.0),

13954 
REAL_CONST
(101796.19444930303/8.0),

13955 
REAL_CONST
(101820.01129935916/8.0),

13956 
REAL_CONST
(101843.82954225427/8.0),

13957 
REAL_CONST
(101867.64917782549/8.0),

13958 
REAL_CONST
(101891.47020590997/8.0),

13959 
REAL_CONST
(101915.29262634492/8.0),

13960 
REAL_CONST
(101939.11643896763/8.0),

13961 
REAL_CONST
(101962.94164361537/8.0),

13962 
REAL_CONST
(101986.76824012553/8.0),

13963 
REAL_CONST
(102010.59622833549/8.0),

13964 
REAL_CONST
(102034.42560808272/8.0),

13965 
REAL_CONST
(102058.25637920471/8.0),

13966 
REAL_CONST
(102082.08854153901/8.0),

13967 
REAL_CONST
(102105.9220949232/8.0),

13968 
REAL_CONST
(102129.75703919494/8.0),

13969 
REAL_CONST
(102153.59337419191/8.0),

13970 
REAL_CONST
(102177.43109975185/8.0),

13971 
REAL_CONST
(102201.27021571253/8.0),

13972 
REAL_CONST
(102225.1107219118/8.0),

13973 
REAL_CONST
(102248.95261818753/8.0),

13974 
REAL_CONST
(102272.79590437764/8.0),

13975 
REAL_CONST
(102296.64058032009/8.0),

13976 
REAL_CONST
(102320.48664585294/8.0),

13977 
REAL_CONST
(102344.33410081422/8.0),

13978 
REAL_CONST
(102368.18294504205/8.0),

13979 
REAL_CONST
(102392.03317837461/8.0),

13980 
REAL_CONST
(102415.88480065008/8.0),

13981 
REAL_CONST
(102439.73781170673/8.0),

13982 
REAL_CONST
(102463.59221138287/8.0),

13983 
REAL_CONST
(102487.44799951684/8.0),

13984 
REAL_CONST
(102511.30517594704/8.0),

13985 
REAL_CONST
(102535.1637405119/8.0),

13986 
REAL_CONST
(102559.02369304992/8.0),

13987 
REAL_CONST
(102582.88503339965/8.0),

13988 
REAL_CONST
(102606.74776139967/8.0),

13989 
REAL_CONST
(102630.61187688859/8.0),

13990 
REAL_CONST
(102654.4773797051/8.0),

13991 
REAL_CONST
(102678.34426968795/8.0),

13992 
REAL_CONST
(102702.21254667587/8.0),

13993 
REAL_CONST
(102726.08221050771/8.0),

13994 
REAL_CONST
(102749.95326102231/8.0),

13995 
REAL_CONST
(102773.8256980586/8.0),

13996 
REAL_CONST
(102797.69952145554/8.0),

13997 
REAL_CONST
(102821.57473105213/8.0),

13998 
REAL_CONST
(102845.45132668741/8.0),

13999 
REAL_CONST
(102869.32930820051/8.0),

14000 
REAL_CONST
(102893.20867543056/8.0),

14001 
REAL_CONST
(102917.08942821674/8.0),

14002 
REAL_CONST
(102940.97156639832/8.0),

14003 
REAL_CONST
(102964.85508981455/8.0),

14004 
REAL_CONST
(102988.73999830478/8.0),

14005 
REAL_CONST
(103012.6262917084/8.0),

14006 
REAL_CONST
(103036.51396986481/8.0),

14007 
REAL_CONST
(103060.40303261351/8.0),

14008 
REAL_CONST
(103084.293479794/8.0),

14009 
REAL_CONST
(103108.18531124585/8.0),

14010 
REAL_CONST
(103132.07852680866/8.0),

14011 
REAL_CONST
(103155.97312632212/8.0),

14012 
REAL_CONST
(103179.8691096259/8.0),

14013 
REAL_CONST
(103203.76647655977/8.0),

14014 
REAL_CONST
(103227.66522696352/8.0),

14015 
REAL_CONST
(103251.56536067701/8.0),

14016 
REAL_CONST
(103275.46687754011/8.0),

14017 
REAL_CONST
(103299.36977739276/8.0),

14018 
REAL_CONST
(103323.27406007495/8.0),

14019 
REAL_CONST
(103347.1797254267/8.0),

14020 
REAL_CONST
(103371.0867732881/8.0),

14021 
REAL_CONST
(103394.99520349925/8.0),

14022 
REAL_CONST
(103418.90501590034/8.0),

14023 
REAL_CONST
(103442.81621033157/8.0),

14024 
REAL_CONST
(103466.72878663319/8.0),

14025 
REAL_CONST
(103490.64274464553/8.0),

14026 
REAL_CONST
(103514.55808420894/8.0),

14027 
REAL_CONST
(103538.4748051638/8.0),

14028 
REAL_CONST
(103562.39290735057/8.0),

14029 
REAL_CONST
(103586.31239060973/8.0),

14030 
REAL_CONST
(103610.23325478184/8.0),

14031 
REAL_CONST
(103634.15549970744/8.0),

14032 
REAL_CONST
(103658.07912522719/8.0),

14033 
REAL_CONST
(103682.00413118176/8.0),

14034 
REAL_CONST
(103705.93051741188/8.0),

14035 
REAL_CONST
(103729.85828375829/8.0),

14036 
REAL_CONST
(103753.78743006183/8.0),

14037 
REAL_CONST
(103777.71795616332/8.0),

14038 
REAL_CONST
(103801.64986190372/8.0),

14039 
REAL_CONST
(103825.58314712394/8.0),

14040 
REAL_CONST
(103849.51781166498/8.0),

14041 
REAL_CONST
(103873.4538553679/8.0),

14042 
REAL_CONST
(103897.39127807376/8.0),

14043 
REAL_CONST
(103921.33007962372/8.0),

14044 
REAL_CONST
(103945.27025985894/8.0),

14045 
REAL_CONST
(103969.21181862066/8.0),

14046 
REAL_CONST
(103993.15475575015/8.0),

14047 
REAL_CONST
(104017.0990710887/8.0),

14048 
REAL_CONST
(104041.0447644777/8.0),

14049 
REAL_CONST
(104064.99183575854/8.0),

14050 
REAL_CONST
(104088.94028477269/8.0),

14051 
REAL_CONST
(104112.89011136163/8.0),

14052 
REAL_CONST
(104136.84131536692/8.0),

14053 
REAL_CONST
(104160.79389663014/8.0),

14054 
REAL_CONST
(104184.74785499295/8.0),

14055 
REAL_CONST
(104208.70319029699/8.0),

14056 
REAL_CONST
(104232.65990238401/8.0),

14057 
REAL_CONST
(104256.61799109577/8.0),

14058 
REAL_CONST
(104280.57745627411/8.0),

14059 
REAL_CONST
(104304.53829776087/8.0),

14060 
REAL_CONST
(104328.50051539797/8.0),

14061 
REAL_CONST
(104352.46410902737/8.0),

14062 
REAL_CONST
(104376.42907849104/8.0),

14063 
REAL_CONST
(104400.39542363105/8.0),

14064 
REAL_CONST
(104424.36314428948/8.0),

14065 
REAL_CONST
(104448.33224030846/8.0),

14066 
REAL_CONST
(104472.3027115302/8.0),

14067 
REAL_CONST
(104496.27455779689/8.0),

14068 
REAL_CONST
(104520.24777895081/8.0),

14069 
REAL_CONST
(104544.22237483428/8.0),

14070 
REAL_CONST
(104568.19834528965/8.0),

14071 
REAL_CONST
(104592.17569015936/8.0),

14072 
REAL_CONST
(104616.15440928582/8.0),

14073 
REAL_CONST
(104640.13450251156/8.0),

14074 
REAL_CONST
(104664.1159696791/8.0),

14075 
REAL_CONST
(104688.09881063103/8.0),

14076 
REAL_CONST
(104712.08302520998/8.0),

14077 
REAL_CONST
(104736.06861325864/8.0),

14078 
REAL_CONST
(104760.05557461972/8.0),

14079 
REAL_CONST
(104784.043909136/8.0),

14080 
REAL_CONST
(104808.03361665027/8.0),

14081 
REAL_CONST
(104832.0246970054/8.0),

14082 
REAL_CONST
(104856.01715004431/8.0),

14083 
REAL_CONST
(104880.01097560991/8.0),

14084 
REAL_CONST
(104904.00617354522/8.0),

14085 
REAL_CONST
(104928.00274369326/8.0),

14086 
REAL_CONST
(104952.00068589712/8.0),

14087 
REAL_CONST
(104975.99999999993/8.0),

14088 
REAL_CONST
(105000.00068584486/8.0),

14089 
REAL_CONST
(105024.00274327511/8.0),

14090 
REAL_CONST
(105048.00617213396/8.0),

14091 
REAL_CONST
(105072.0109722647/8.0),

14092 
REAL_CONST
(105096.0171435107/8.0),

14093 
REAL_CONST
(105120.02468571534/8.0),

14094 
REAL_CONST
(105144.03359872208/8.0),

14095 
REAL_CONST
(105168.04388237436/8.0),

14096 
REAL_CONST
(105192.05553651576/8.0),

14097 
REAL_CONST
(105216.06856098982/8.0),

14098 
REAL_CONST
(105240.08295564017/8.0),

14099 
REAL_CONST
(105264.09872031047/8.0),

14100 
REAL_CONST
(105288.11585484444/8.0),

14101 
REAL_CONST
(105312.13435908582/8.0),

14102 
REAL_CONST
(105336.1542328784/8.0),

14103 
REAL_CONST
(105360.17547606604/8.0),

14104 
REAL_CONST
(105384.19808849262/8.0),

14105 
REAL_CONST
(105408.22207000206/8.0),

14106 
REAL_CONST
(105432.24742043833/8.0),

14107 
REAL_CONST
(105456.27413964548/8.0),

14108 
REAL_CONST
(105480.30222746753/8.0),

14109 
REAL_CONST
(105504.33168374863/8.0),

14110 
REAL_CONST
(105528.36250833291/8.0),

14111 
REAL_CONST
(105552.39470106458/8.0),

14112 
REAL_CONST
(105576.42826178786/8.0),

14113 
REAL_CONST
(105600.46319034706/8.0),

14114 
REAL_CONST
(105624.49948658649/8.0),

14115 
REAL_CONST
(105648.53715035053/8.0),

14116 
REAL_CONST
(105672.5761814836/8.0),

14117 
REAL_CONST
(105696.61657983017/8.0),

14118 
REAL_CONST
(105720.65834523473/8.0),

14119 
REAL_CONST
(105744.70147754184/8.0),

14120 
REAL_CONST
(105768.7459765961/8.0),

14121 
REAL_CONST
(105792.79184224214/8.0),

14122 
REAL_CONST
(105816.83907432464/8.0),

14123 
REAL_CONST
(105840.88767268835/8.0),

14124 
REAL_CONST
(105864.93763717801/8.0),

14125 
REAL_CONST
(105888.98896763846/8.0),

14126 
REAL_CONST
(105913.04166391456/8.0),

14127 
REAL_CONST
(105937.09572585119/8.0),

14128 
REAL_CONST
(105961.15115329332/8.0),

14129 
REAL_CONST
(105985.20794608595/8.0),

14130 
REAL_CONST
(106009.26610407409/8.0),

14131 
REAL_CONST
(106033.32562710284/8.0),

14132 
REAL_CONST
(106057.38651501729/8.0),

14133 
REAL_CONST
(106081.44876766266/8.0),

14134 
REAL_CONST
(106105.51238488412/8.0),

14135 
REAL_CONST
(106129.57736652695/8.0),

14136 
REAL_CONST
(106153.64371243643/8.0),

14137 
REAL_CONST
(106177.71142245791/8.0),

14138 
REAL_CONST
(106201.78049643678/8.0),

14139 
REAL_CONST
(106225.85093421848/8.0),

14140 
REAL_CONST
(106249.92273564848/8.0),

14141 
REAL_CONST
(106273.99590057228/8.0),

14142 
REAL_CONST
(106298.07042883546/8.0),

14143 
REAL_CONST
(106322.14632028362/8.0),

14144 
REAL_CONST
(106346.22357476239/8.0),

14145 
REAL_CONST
(106370.30219211751/8.0),

14146 
REAL_CONST
(106394.38217219469/8.0),

14147 
REAL_CONST
(106418.46351483969/8.0),

14148 
REAL_CONST
(106442.54621989837/8.0),

14149 
REAL_CONST
(106466.63028721658/8.0),

14150 
REAL_CONST
(106490.71571664025/8.0),

14151 
REAL_CONST
(106514.80250801529/8.0),

14152 
REAL_CONST
(106538.89066118775/8.0),

14153 
REAL_CONST
(106562.98017600364/8.0),

14154 
REAL_CONST
(106587.07105230905/8.0),

14155 
REAL_CONST
(106611.16328995011/8.0),

14156 
REAL_CONST
(106635.25688877302/8.0),

14157 
REAL_CONST
(106659.35184862395/8.0),

14158 
REAL_CONST
(106683.44816934918/8.0),

14159 
REAL_CONST
(106707.54585079502/8.0),

14160 
REAL_CONST
(106731.64489280782/8.0),

14161 
REAL_CONST
(106755.74529523395/8.0),

14162 
REAL_CONST
(106779.84705791986/8.0),

14163 
REAL_CONST
(106803.95018071201/8.0),

14164 
REAL_CONST
(106828.05466345693/8.0),

14165 
REAL_CONST
(106852.16050600118/8.0),

14166 
REAL_CONST
(106876.26770819137/8.0),

14167 
REAL_CONST
(106900.37626987413/8.0),

14168 
REAL_CONST
(106924.48619089619/8.0),

14169 
REAL_CONST
(106948.59747110425/8.0),

14170 
REAL_CONST
(106972.71011034511/8.0),

14171 
REAL_CONST
(106996.82410846559/8.0),

14172 
REAL_CONST
(107020.93946531253/8.0),

14173 
REAL_CONST
(107045.05618073288/8.0),

14174 
REAL_CONST
(107069.17425457356/8.0),

14175 
REAL_CONST
(107093.29368668159/8.0),

14176 
REAL_CONST
(107117.41447690397/8.0),

14177 
REAL_CONST
(107141.53662508781/8.0),

14178 
REAL_CONST
(107165.66013108024/8.0),

14179 
REAL_CONST
(107189.7849947284/8.0),

14180 
REAL_CONST
(107213.91121587952/8.0),

14181 
REAL_CONST
(107238.03879438085/8.0),

14182 
REAL_CONST
(107262.16773007967/8.0),

14183 
REAL_CONST
(107286.29802282334/8.0),

14184 
REAL_CONST
(107310.42967245923/8.0),

14185 
REAL_CONST
(107334.56267883476/8.0),

14186 
REAL_CONST
(107358.69704179741/8.0),

14187 
REAL_CONST
(107382.83276119467/8.0),

14188 
REAL_CONST
(107406.96983687414/8.0),

14189 
REAL_CONST
(107431.10826868335/8.0),

14190 
REAL_CONST
(107455.24805646999/8.0),

14191 
REAL_CONST
(107479.38920008171/8.0),

14192 
REAL_CONST
(107503.53169936626/8.0),

14193 
REAL_CONST
(107527.67555417139/8.0),

14194 
REAL_CONST
(107551.82076434491/8.0),

14195 
REAL_CONST
(107575.96732973469/8.0),

14196 
REAL_CONST
(107600.11525018861/8.0),

14197 
REAL_CONST
(107624.26452555459/8.0),

14198 
REAL_CONST
(107648.41515568066/8.0),

14199 
REAL_CONST
(107672.56714041479/8.0),

14200 
REAL_CONST
(107696.72047960508/8.0),

14201 
REAL_CONST
(107720.87517309963/8.0),

14202 
REAL_CONST
(107745.03122074658/8.0),

14203 
REAL_CONST
(107769.18862239413/8.0),

14204 
REAL_CONST
(107793.34737789053/8.0),

14205 
REAL_CONST
(107817.50748708403/8.0),

14206 
REAL_CONST
(107841.66894982298/8.0),

14207 
REAL_CONST
(107865.83176595572/8.0),

14208 
REAL_CONST
(107889.99593533068/8.0),

14209 
REAL_CONST
(107914.16145779629/8.0),

14210 
REAL_CONST
(107938.32833320105/8.0),

14211 
REAL_CONST
(107962.49656139348/8.0),

14212 
REAL_CONST
(107986.66614222217/8.0),

14213 
REAL_CONST
(108010.83707553572/8.0),

14214 
REAL_CONST
(108035.00936118282/8.0),

14215 
REAL_CONST
(108059.18299901215/8.0),

14216 
REAL_CONST
(108083.35798887245/8.0),

14217 
REAL_CONST
(108107.53433061253/8.0),

14218 
REAL_CONST
(108131.71202408121/8.0),

14219 
REAL_CONST
(108155.89106912735/8.0),

14220 
REAL_CONST
(108180.07146559987/8.0),

14221 
REAL_CONST
(108204.25321334775/8.0),

14222 
REAL_CONST
(108228.43631221994/8.0),

14223 
REAL_CONST
(108252.62076206553/8.0),

14224 
REAL_CONST
(108276.80656273357/8.0),

14225 
REAL_CONST
(108300.99371407321/8.0),

14226 
REAL_CONST
(108325.18221593359/8.0),

14227 
REAL_CONST
(108349.37206816394/8.0),

14228 
REAL_CONST
(108373.56327061349/8.0),

14229 
REAL_CONST
(108397.75582313156/8.0),

14230 
REAL_CONST
(108421.94972556747/8.0),

14231 
REAL_CONST
(108446.1449777706/8.0),

14232 
REAL_CONST
(108470.34157959036/8.0),

14233 
REAL_CONST
(108494.53953087622/8.0),

14234 
REAL_CONST
(108518.73883147769/8.0),

14235 
REAL_CONST
(108542.93948124432/8.0),

14236 
REAL_CONST
(108567.14148002568/8.0),

14237 
REAL_CONST
(108591.34482767139/8.0),

14238 
REAL_CONST
(108615.54952403114/8.0),

14239 
REAL_CONST
(108639.75556895464/8.0),

14240 
REAL_CONST
(108663.96296229165/8.0),

14241 
REAL_CONST
(108688.17170389196/8.0),

14242 
REAL_CONST
(108712.38179360541/8.0),

14243 
REAL_CONST
(108736.59323128188/8.0),

14244 
REAL_CONST
(108760.80601677128/8.0),

14245 
REAL_CONST
(108785.02014992358/8.0),

14246 
REAL_CONST
(108809.23563058881/8.0),

14247 
REAL_CONST
(108833.45245861699/8.0),

14248 
REAL_CONST
(108857.67063385822/8.0),

14249 
REAL_CONST
(108881.89015616261/8.0),

14250 
REAL_CONST
(108906.11102538036/8.0),

14251 
REAL_CONST
(108930.33324136167/8.0),

14252 
REAL_CONST
(108954.55680395682/8.0),

14253 
REAL_CONST
(108978.78171301607/8.0),

14254 
REAL_CONST
(109003.00796838976/8.0),

14255 
REAL_CONST
(109027.23556992831/8.0),

14256 
REAL_CONST
(109051.46451748211/8.0),

14257 
REAL_CONST
(109075.69481090162/8.0),

14258 
REAL_CONST
(109099.92645003737/8.0),

14259 
REAL_CONST
(109124.15943473989/8.0),

14260 
REAL_CONST
(109148.39376485976/8.0),

14261 
REAL_CONST
(109172.62944024763/8.0),

14262 
REAL_CONST
(109196.86646075416/8.0),

14263 
REAL_CONST
(109221.10482623006/8.0),

14264 
REAL_CONST
(109245.34453652608/8.0),

14265 
REAL_CONST
(109269.58559149304/8.0),

14266 
REAL_CONST
(109293.82799098175/8.0),

14267 
REAL_CONST
(109318.07173484311/8.0),

14268 
REAL_CONST
(109342.31682292801/8.0),

14269 
REAL_CONST
(109366.56325508743/8.0),

14270 
REAL_CONST
(109390.81103117237/8.0),

14271 
REAL_CONST
(109415.06015103387/8.0),

14272 
REAL_CONST
(109439.31061452301/8.0),

14273 
REAL_CONST
(109463.56242149093/8.0),

14274 
REAL_CONST
(109487.8155717888/8.0),

14275 
REAL_CONST
(109512.07006526781/8.0),

14276 
REAL_CONST
(109536.3259017792/8.0),

14277 
REAL_CONST
(109560.58308117429/8.0),

14278 
REAL_CONST
(109584.8416033044/8.0),

14279 
REAL_CONST
(109609.1014680209/8.0),

14280 
REAL_CONST
(109633.36267517522/8.0),

14281 
REAL_CONST
(109657.62522461878/8.0),

14282 
REAL_CONST
(109681.88911620311/8.0),

14283 
REAL_CONST
(109706.15434977971/8.0),

14284 
REAL_CONST
(109730.4209252002/8.0),

14285 
REAL_CONST
(109754.68884231619/8.0),

14286 
REAL_CONST
(109778.95810097932/8.0),

14287 
REAL_CONST
(109803.22870104131/8.0),

14288 
REAL_CONST
(109827.50064235389/8.0),

14289 
REAL_CONST
(109851.77392476884/8.0),

14290 
REAL_CONST
(109876.04854813802/8.0),

14291 
REAL_CONST
(109900.32451231324/8.0),

14292 
REAL_CONST
(109924.60181714644/8.0),

14293 
REAL_CONST
(109948.88046248957/8.0),

14294 
REAL_CONST
(109973.1604481946/8.0),

14295 
REAL_CONST
(109997.44177411357/8.0),

14296 
REAL_CONST
(110021.72444009855/8.0),

14297 
REAL_CONST
(110046.00844600165/8.0),

14298 
REAL_CONST
(110070.29379167501/8.0),

14299 
REAL_CONST
(110094.58047697082/8.0),

14300 
REAL_CONST
(110118.86850174134/8.0),

14301 
REAL_CONST
(110143.15786583882/8.0),

14302 
REAL_CONST
(110167.44856911557/8.0),

14303 
REAL_CONST
(110191.74061142397/8.0),

14304 
REAL_CONST
(110216.03399261639/8.0),

14305 
REAL_CONST
(110240.32871254528/8.0),

14306 
REAL_CONST
(110264.62477106311/8.0),

14307 
REAL_CONST
(110288.9221680224/8.0),

14308 
REAL_CONST
(110313.22090327571/8.0),

14309 
REAL_CONST
(110337.52097667565/8.0),

14310 
REAL_CONST
(110361.82238807483/8.0),

14311 
REAL_CONST
(110386.12513732594/8.0),

14312 
REAL_CONST
(110410.42922428172/8.0),

14313 
REAL_CONST
(110434.73464879491/8.0),

14314 
REAL_CONST
(110459.04141071832/8.0),

14315 
REAL_CONST
(110483.34950990479/8.0),

14316 
REAL_CONST
(110507.6589462072/8.0),

14317 
REAL_CONST
(110531.96971947847/8.0),

14318 
REAL_CONST
(110556.28182957157/8.0),

14319 
REAL_CONST
(110580.5952763395/8.0),

14320 
REAL_CONST
(110604.91005963532/8.0),

14321 
REAL_CONST
(110629.22617931209/8.0),

14322 
REAL_CONST
(110653.54363522294/8.0),

14323 
REAL_CONST
(110677.86242722106/8.0),

14324 
REAL_CONST
(110702.18255515963/8.0),

14325 
REAL_CONST
(110726.50401889188/8.0),

14326 
REAL_CONST
(110750.82681827113/8.0),

14327 
REAL_CONST
(110775.1509531507/8.0),

14328 
REAL_CONST
(110799.47642338395/8.0),

14329 
REAL_CONST
(110823.80322882428/8.0),

14330 
REAL_CONST
(110848.13136932514/8.0),

14331 
REAL_CONST
(110872.46084474004/8.0),

14332 
REAL_CONST
(110896.79165492248/8.0),

14333 
REAL_CONST
(110921.12379972603/8.0),

14334 
REAL_CONST
(110945.4572790043/8.0),

14335 
REAL_CONST
(110969.79209261097/8.0),

14336 
REAL_CONST
(110994.12824039967/8.0),

14337 
REAL_CONST
(111018.46572222417/8.0),

14338 
REAL_CONST
(111042.80453793822/8.0),

14339 
REAL_CONST
(111067.14468739564/8.0),

14340 
REAL_CONST
(111091.48617045028/8.0),

14341 
REAL_CONST
(111115.82898695602/8.0),

14342 
REAL_CONST
(111140.1731367668/8.0),

14343 
REAL_CONST
(111164.51861973655/8.0),

14344 
REAL_CONST
(111188.86543571933/8.0),

14345 
REAL_CONST
(111213.21358456917/8.0),

14346 
REAL_CONST
(111237.56306614014/8.0),

14347 
REAL_CONST
(111261.91388028639/8.0),

14348 
REAL_CONST
(111286.26602686207/8.0),

14349 
REAL_CONST
(111310.61950572141/8.0),

14350 
REAL_CONST
(111334.97431671864/8.0),

14351 
REAL_CONST
(111359.33045970804/8.0),

14352 
REAL_CONST
(111383.68793454397/8.0),

14353 
REAL_CONST
(111408.04674108078/8.0),

14354 
REAL_CONST
(111432.40687917286/8.0),

14355 
REAL_CONST
(111456.76834867468/8.0),

14356 
REAL_CONST
(111481.13114944073/8.0),

14357 
REAL_CONST
(111505.49528132551/8.0),

14358 
REAL_CONST
(111529.86074418361/8.0),

14359 
REAL_CONST
(111554.22753786964/8.0),

14360 
REAL_CONST
(111578.59566223821/8.0),

14361 
REAL_CONST
(111602.96511714405/8.0),

14362 
REAL_CONST
(111627.33590244185/8.0),

14363 
REAL_CONST
(111651.7080179864/8.0),

14364 
REAL_CONST
(111676.08146363248/8.0),

14365 
REAL_CONST
(111700.45623923496/8.0),

14366 
REAL_CONST
(111724.8323446487/8.0),

14367 
REAL_CONST
(111749.20977972864/8.0),

14368 
REAL_CONST
(111773.58854432974/8.0),

14369 
REAL_CONST
(111797.96863830699/8.0),

14370 
REAL_CONST
(111822.35006151545/8.0),

14371 
REAL_CONST
(111846.73281381019/8.0),

14372 
REAL_CONST
(111871.11689504632/8.0),

14373 
REAL_CONST
(111895.50230507903/8.0),

14374 
REAL_CONST
(111919.8890437635/8.0),

14375 
REAL_CONST
(111944.27711095495/8.0),

14376 
REAL_CONST
(111968.6665065087/8.0),

14377 
REAL_CONST
(111993.05723028004/8.0),

14378 
REAL_CONST
(112017.44928212435/8.0),

14379 
REAL_CONST
(112041.842661897/8.0),

14380 
REAL_CONST
(112066.23736945343/8.0),

14381 
REAL_CONST
(112090.63340464912/8.0),

14382 
REAL_CONST
(112115.03076733962/8.0),

14383 
REAL_CONST
(112139.42945738042/8.0),

14384 
REAL_CONST
(112163.82947462716/8.0),

14385 
REAL_CONST
(112188.23081893545/8.0),

14386 
REAL_CONST
(112212.63349016097/8.0),

14387 
REAL_CONST
(112237.03748815943/8.0),

14388 
REAL_CONST
(112261.44281278658/8.0),

14389 
REAL_CONST
(112285.84946389822/8.0),

14390 
REAL_CONST
(112310.25744135017/8.0),

14391 
REAL_CONST
(112334.66674499828/8.0),

14392 
REAL_CONST
(112359.07737469849/8.0),

14393 
REAL_CONST
(112383.48933030672/8.0),

14394 
REAL_CONST
(112407.90261167898/8.0),

14395 
REAL_CONST
(112432.31721867126/8.0),

14396 
REAL_CONST
(112456.73315113965/8.0),

14397 
REAL_CONST
(112481.15040894024/8.0),

14398 
REAL_CONST
(112505.56899192919/8.0),

14399 
REAL_CONST
(112529.98889996267/8.0),

14400 
REAL_CONST
(112554.41013289688/8.0),

14401 
REAL_CONST
(112578.8326905881/8.0),

14402 
REAL_CONST
(112603.25657289263/8.0),

14403 
REAL_CONST
(112627.68177966679/8.0),

14404 
REAL_CONST
(112652.10831076698/8.0),

14405 
REAL_CONST
(112676.53616604958/8.0),

14406 
REAL_CONST
(112700.96534537108/8.0),

14407 
REAL_CONST
(112725.39584858794/8.0),

14408 
REAL_CONST
(112749.82767555672/8.0),

14409 
REAL_CONST
(112774.26082613398/8.0),

14410 
REAL_CONST
(112798.6953001763/8.0),

14411 
REAL_CONST
(112823.13109754038/8.0),

14412 
REAL_CONST
(112847.56821808286/8.0),

14413 
REAL_CONST
(112872.00666166049/8.0),

14414 
REAL_CONST
(112896.44642813003/8.0),

14415 
REAL_CONST
(112920.88751734827/8.0),

14416 
REAL_CONST
(112945.32992917208/8.0),

14417 
REAL_CONST
(112969.77366345831/8.0),

14418 
REAL_CONST
(112994.21872006389/8.0),

14419 
REAL_CONST
(113018.66509884578/8.0),

14420 
REAL_CONST
(113043.11279966099/8.0),

14421 
REAL_CONST
(113067.56182236652/8.0),

14422 
REAL_CONST
(113092.01216681948/8.0),

14423 
REAL_CONST
(113116.46383287695/8.0),

14424 
REAL_CONST
(113140.9168203961/8.0),

14425 
REAL_CONST
(113165.37112923413/8.0),

14426 
REAL_CONST
(113189.82675924824/8.0),

14427 
REAL_CONST
(113214.28371029573/8.0),

14428 
REAL_CONST
(113238.74198223387/8.0),

14429 
REAL_CONST
(113263.20157492002/8.0),

14430 
REAL_CONST
(113287.66248821157/8.0),

14431 
REAL_CONST
(113312.12472196593/8.0),

14432 
REAL_CONST
(113336.58827604055/8.0),

14433 
REAL_CONST
(113361.05315029295/8.0),

14434 
REAL_CONST
(113385.51934458067/8.0),

14435 
REAL_CONST
(113409.98685876124/8.0),

14436 
REAL_CONST
(113434.45569269233/8.0),

14437 
REAL_CONST
(113458.92584623155/8.0),

14438 
REAL_CONST
(113483.39731923661/8.0),

14439 
REAL_CONST
(113507.87011156522/8.0),

14440 
REAL_CONST
(113532.34422307517/8.0),

14441 
REAL_CONST
(113556.81965362425/8.0),

14442 
REAL_CONST
(113581.2964030703/8.0),

14443 
REAL_CONST
(113605.77447127122/8.0),

14444 
REAL_CONST
(113630.25385808491/8.0),

14445 
REAL_CONST
(113654.73456336933/8.0),

14446 
REAL_CONST
(113679.2165869825/8.0),

14447 
REAL_CONST
(113703.69992878241/8.0),

14448 
REAL_CONST
(113728.18458862718/8.0),

14449 
REAL_CONST
(113752.67056637487/8.0),

14450 
REAL_CONST
(113777.15786188368/8.0),

14451 
REAL_CONST
(113801.64647501177/8.0),

14452 
REAL_CONST
(113826.13640561736/8.0),

14453 
REAL_CONST
(113850.62765355874/8.0),

14454 
REAL_CONST
(113875.12021869418/8.0),

14455 
REAL_CONST
(113899.61410088204/8.0),

14456 
REAL_CONST
(113924.1092999807/8.0),

14457 
REAL_CONST
(113948.60581584855/8.0),

14458 
REAL_CONST
(113973.10364834407/8.0),

14459 
REAL_CONST
(113997.60279732574/8.0),

14460 
REAL_CONST
(114022.1032626521/8.0),

14461 
REAL_CONST
(114046.60504418171/8.0),

14462 
REAL_CONST
(114071.10814177318/8.0),

14463 
REAL_CONST
(114095.61255528514/8.0),

14464 
REAL_CONST
(114120.11828457628/8.0),

14465 
REAL_CONST
(114144.62532950533/8.0),

14466 
REAL_CONST
(114169.13368993104/8.0),

14467 
REAL_CONST
(114193.6433657122/8.0),

14468 
REAL_CONST
(114218.15435670764/8.0),

14469 
REAL_CONST
(114242.66666277625/8.0),

14470 
REAL_CONST
(114267.18028377694/8.0),

14471 
REAL_CONST
(114291.69521956862/8.0),

14472 
REAL_CONST
(114316.21147001031/8.0),

14473 
REAL_CONST
(114340.72903496103/8.0),

14474 
REAL_CONST
(114365.24791427983/8.0),

14475 
REAL_CONST
(114389.7681078258/8.0),

14476 
REAL_CONST
(114414.2896154581/8.0),

14477 
REAL_CONST
(114438.81243703589/8.0),

14478 
REAL_CONST
(114463.33657241837/8.0),

14479 
REAL_CONST
(114487.8620214648/8.0),

14480 
REAL_CONST
(114512.38878403447/8.0),

14481 
REAL_CONST
(114536.91685998671/8.0),

14482 
REAL_CONST
(114561.44624918087/8.0),

14483 
REAL_CONST
(114585.97695147636/8.0),

14484 
REAL_CONST
(114610.5089667326/8.0),

14485 
REAL_CONST
(114635.04229480909/8.0),

14486 
REAL_CONST
(114659.57693556532/8.0),

14487 
REAL_CONST
(114684.11288886084/8.0),

14488 
REAL_CONST
(114708.65015455526/8.0),

14489 
REAL_CONST
(114733.18873250818/8.0),

14490 
REAL_CONST
(114757.72862257928/8.0),

14491 
REAL_CONST
(114782.26982462825/8.0),

14492 
REAL_CONST
(114806.81233851484/8.0),

14493 
REAL_CONST
(114831.35616409882/8.0),

14494 
REAL_CONST
(114855.90130123998/8.0),

14495 
REAL_CONST
(114880.44774979822/8.0),

14496 
REAL_CONST
(114904.99550963337/8.0),

14497 
REAL_CONST
(114929.5445806054/8.0),

14498 
REAL_CONST
(114954.09496257425/8.0),

14499 
REAL_CONST
(114978.64665539992/8.0),

14500 
REAL_CONST
(115003.19965894247/8.0),

14501 
REAL_CONST
(115027.75397306195/8.0),

14502 
REAL_CONST
(115052.30959761847/8.0),

14503 
REAL_CONST
(115076.86653247218/8.0),

14504 
REAL_CONST
(115101.42477748329/8.0),

14505 
REAL_CONST
(115125.984332512/8.0),

14506 
REAL_CONST
(115150.54519741859/8.0),

14507 
REAL_CONST
(115175.10737206334/8.0),

14508 
REAL_CONST
(115199.67085630659/8.0),

14509 
REAL_CONST
(115224.23565000873/8.0),

14510 
REAL_CONST
(115248.80175303014/8.0),

14511 
REAL_CONST
(115273.3691652313/8.0),

14512 
REAL_CONST
(115297.93788647266/8.0),

14513 
REAL_CONST
(115322.50791661476/8.0),

14514 
REAL_CONST
(115347.07925551817/8.0),

14515 
REAL_CONST
(115371.65190304347/8.0),

14516 
REAL_CONST
(115396.22585905129/8.0),

14517 
REAL_CONST
(115420.80112340231/8.0),

14518 
REAL_CONST
(115445.37769595724/8.0),

14519 
REAL_CONST
(115469.95557657682/8.0),

14520 
REAL_CONST
(115494.53476512182/8.0),

14521 
REAL_CONST
(115519.11526145306/8.0),

14522 
REAL_CONST
(115543.69706543141/8.0),

14523 
REAL_CONST
(115568.28017691776/8.0),

14524 
REAL_CONST
(115592.86459577303/8.0),

14525 
REAL_CONST
(115617.4503218582/8.0),

14526 
REAL_CONST
(115642.03735503425/8.0),

14527 
REAL_CONST
(115666.62569516223/8.0),

14528 
REAL_CONST
(115691.21534210323/8.0),

14529 
REAL_CONST
(115715.80629571836/8.0),

14530 
REAL_CONST
(115740.39855586876/8.0),

14531 
REAL_CONST
(115764.99212241563/8.0),

14532 
REAL_CONST
(115789.58699522018/8.0),

14533 
REAL_CONST
(115814.18317414368/8.0),

14534 
REAL_CONST
(115838.78065904744/8.0),

14535 
REAL_CONST
(115863.37944979276/8.0),

14536 
REAL_CONST
(115887.97954624105/8.0),

14537 
REAL_CONST
(115912.5809482537/8.0),

14538 
REAL_CONST
(115937.18365569216/8.0),

14539 
REAL_CONST
(115961.78766841792/8.0),

14540 
REAL_CONST
(115986.39298629249/8.0),

14541 
REAL_CONST
(116010.99960917742/8.0),

14542 
REAL_CONST
(116035.60753693432/8.0),

14543 
REAL_CONST
(116060.21676942479/8.0),

14544 
REAL_CONST
(116084.82730651053/8.0),

14545 
REAL_CONST
(116109.43914805322/8.0),

14546 
REAL_CONST
(116134.0522939146/8.0),

14547 
REAL_CONST
(116158.66674395646/8.0),

14548 
REAL_CONST
(116183.2824980406/8.0),

14549 
REAL_CONST
(116207.89955602887/8.0),

14550 
REAL_CONST
(116232.51791778316/8.0),

14551 
REAL_CONST
(116257.13758316539/8.0),

14552 
REAL_CONST
(116281.75855203751/8.0),

14553 
REAL_CONST
(116306.38082426153/8.0),

14554 
REAL_CONST
(116331.00439969949/8.0),

14555 
REAL_CONST
(116355.62927821343/8.0),

14556 
REAL_CONST
(116380.25545966547/8.0),

14557 
REAL_CONST
(116404.88294391775/8.0),

14558 
REAL_CONST
(116429.51173083246/8.0),

14559 
REAL_CONST
(116454.14182027178/8.0),

14560 
REAL_CONST
(116478.77321209799/8.0),

14561 
REAL_CONST
(116503.40590617337/8.0),

14562 
REAL_CONST
(116528.03990236025/8.0),

14563 
REAL_CONST
(116552.67520052097/8.0),

14564 
REAL_CONST
(116577.31180051794/8.0),

14565 
REAL_CONST
(116601.94970221359/8.0),

14566 
REAL_CONST
(116626.5889054704/8.0),

14567 
REAL_CONST
(116651.22941015086/8.0),

14568 
REAL_CONST
(116675.87121611751/8.0),

14569 
REAL_CONST
(116700.51432323294/8.0),

14570 
REAL_CONST
(116725.15873135976/8.0),

14571 
REAL_CONST
(116749.8044403606/8.0),

14572 
REAL_CONST
(116774.45145009817/8.0),

14573 
REAL_CONST
(116799.0997604352/8.0),

14574 
REAL_CONST
(116823.74937123443/8.0),

14575 
REAL_CONST
(116848.40028235866/8.0),

14576 
REAL_CONST
(116873.05249367072/8.0),

14577 
REAL_CONST
(116897.70600503348/8.0),

14578 
REAL_CONST
(116922.36081630984/8.0),

14579 
REAL_CONST
(116947.01692736275/8.0),

14580 
REAL_CONST
(116971.67433805518/8.0),

14581 
REAL_CONST
(116996.33304825013/8.0),

14582 
REAL_CONST
(117020.99305781067/8.0),

14583 
REAL_CONST
(117045.65436659988/8.0),

14584 
REAL_CONST
(117070.31697448085/8.0),

14585 
REAL_CONST
(117094.98088131678/8.0),

14586 
REAL_CONST
(117119.64608697082/8.0),

14587 
REAL_CONST
(117144.31259130624/8.0),

14588 
REAL_CONST
(117168.98039418629/8.0),

14589 
REAL_CONST
(117193.64949547425/8.0),

14590 
REAL_CONST
(117218.31989503348/8.0),

14591 
REAL_CONST
(117242.99159272734/8.0),

14592 
REAL_CONST
(117267.66458841923/8.0),

14593 
REAL_CONST
(117292.33888197262/8.0),

14594 
REAL_CONST
(117317.01447325097/8.0),

14595 
REAL_CONST
(117341.6913621178/8.0),

14596 
REAL_CONST
(117366.36954843666/8.0),

14597 
REAL_CONST
(117391.04903207115/8.0),

14598 
REAL_CONST
(117415.72981288488/8.0),

14599 
REAL_CONST
(117440.41189074152/8.0),

14600 
REAL_CONST
(117465.09526550474/8.0),

14601 
REAL_CONST
(117489.77993703831/8.0),

14602 
REAL_CONST
(117514.46590520597/8.0),

14603 
REAL_CONST
(117539.15316987153/8.0),

14604 
REAL_CONST
(117563.84173089883/8.0),

14605 
REAL_CONST
(117588.53158815173/8.0),

14606 
REAL_CONST
(117613.22274149416/8.0),

14607 
REAL_CONST
(117637.91519079007/8.0),

14608 
REAL_CONST
(117662.60893590341/8.0),

14609 
REAL_CONST
(117687.30397669821/8.0),

14610 
REAL_CONST
(117712.00031303853/8.0),

14611 
REAL_CONST
(117736.69794478847/8.0),

14612 
REAL_CONST
(117761.39687181212/8.0),

14613 
REAL_CONST
(117786.09709397367/8.0),

14614 
REAL_CONST
(117810.7986111373/8.0),

14615 
REAL_CONST
(117835.50142316725/8.0),

14616 
REAL_CONST
(117860.20552992777/8.0),

14617 
REAL_CONST
(117884.91093128319/8.0),

14618 
REAL_CONST
(117909.6176270978/8.0),

14619 
REAL_CONST
(117934.32561723603/8.0),

14620 
REAL_CONST
(117959.03490156225/8.0),

14621 
REAL_CONST
(117983.74547994092/8.0),

14622 
REAL_CONST
(118008.45735223651/8.0),

14623 
REAL_CONST
(118033.17051831353/8.0),

14624 
REAL_CONST
(118057.88497803656/8.0),

14625 
REAL_CONST
(118082.60073127014/8.0),

14626 
REAL_CONST
(118107.31777787894/8.0),

14627 
REAL_CONST
(118132.03611772758/8.0),

14628 
REAL_CONST
(118156.75575068076/8.0),

14629 
REAL_CONST
(118181.47667660323/8.0),

14630 
REAL_CONST
(118206.19889535972/8.0),

14631 
REAL_CONST
(118230.92240681504/8.0),

14632 
REAL_CONST
(118255.64721083404/8.0),

14633 
REAL_CONST
(118280.37330728157/8.0),

14634 
REAL_CONST
(118305.10069602253/8.0),

14635 
REAL_CONST
(118329.82937692189/8.0),

14636 
REAL_CONST
(118354.55934984458/8.0),

14637 
REAL_CONST
(118379.29061465565/8.0),

14638 
REAL_CONST
(118404.02317122012/8.0),

14639 
REAL_CONST
(118428.75701940308/8.0),

14640 
REAL_CONST
(118453.49215906965/8.0),

14641 
REAL_CONST
(118478.22859008498/8.0),

14642 
REAL_CONST
(118502.96631231424/8.0),

14643 
REAL_CONST
(118527.70532562268/8.0),

14644 
REAL_CONST
(118552.44562987552/8.0),

14645 
REAL_CONST
(118577.18722493808/8.0),

14646 
REAL_CONST
(118601.93011067568/8.0),

14647 
REAL_CONST
(118626.67428695368/8.0),

14648 
REAL_CONST
(118651.41975363747/8.0),

14649 
REAL_CONST
(118676.16651059251/8.0),

14650 
REAL_CONST
(118700.91455768423/8.0),

14651 
REAL_CONST
(118725.66389477813/8.0),

14652 
REAL_CONST
(118750.41452173979/8.0),

14653 
REAL_CONST
(118775.16643843475/8.0),

14654 
REAL_CONST
(118799.91964472862/8.0),

14655 
REAL_CONST
(118824.67414048707/8.0),

14656 
REAL_CONST
(118849.42992557574/8.0),

14657 
REAL_CONST
(118874.18699986035/8.0),

14658 
REAL_CONST
(118898.94536320666/8.0),

14659 
REAL_CONST
(118923.70501548045/8.0),

14660 
REAL_CONST
(118948.46595654752/8.0),

14661 
REAL_CONST
(118973.22818627374/8.0),

14662 
REAL_CONST
(118997.99170452499/8.0),

14663 
REAL_CONST
(119022.7565111672/8.0),

14664 
REAL_CONST
(119047.52260606633/8.0),

14665 
REAL_CONST
(119072.28998908834/8.0),

14666 
REAL_CONST
(119097.0586600993/8.0),

14667 
REAL_CONST
(119121.82861896523/8.0),

14668 
REAL_CONST
(119146.59986555226/8.0),

14669 
REAL_CONST
(119171.3723997265/8.0),

14670 
REAL_CONST
(119196.14622135412/8.0),

14671 
REAL_CONST
(119220.92133030134/8.0),

14672 
REAL_CONST
(119245.69772643436/8.0),

14673 
REAL_CONST
(119270.47540961947/8.0),

14674 
REAL_CONST
(119295.25437972297/8.0),

14675 
REAL_CONST
(119320.03463661121/8.0),

14676 
REAL_CONST
(119344.81618015055/8.0),

14677 
REAL_CONST
(119369.5990102074/8.0),

14678 
REAL_CONST
(119394.38312664822/8.0),

14679 
REAL_CONST
(119419.16852933947/8.0),

14680 
REAL_CONST
(119443.95521814766/8.0),

14681 
REAL_CONST
(119468.74319293935/8.0),

14682 
REAL_CONST
(119493.53245358112/8.0),

14683 
REAL_CONST
(119518.32299993958/8.0),

14684 
REAL_CONST
(119543.11483188139/8.0),

14685 
REAL_CONST
(119567.90794927324/8.0),

14686 
REAL_CONST
(119592.70235198183/8.0),

14687 
REAL_CONST
(119617.49803987393/8.0),

14688 
REAL_CONST
(119642.29501281632/8.0),

14689 
REAL_CONST
(119667.09327067583/8.0),

14690 
REAL_CONST
(119691.89281331931/8.0),

14691 
REAL_CONST
(119716.69364061367/8.0),

14692 
REAL_CONST
(119741.49575242582/8.0),

14693 
REAL_CONST
(119766.29914862274/8.0),

14694 
REAL_CONST
(119791.10382907141/8.0),

14695 
REAL_CONST
(119815.90979363887/8.0),

14696 
REAL_CONST
(119840.71704219218/8.0),

14697 
REAL_CONST
(119865.52557459843/8.0),

14698 
REAL_CONST
(119890.33539072477/8.0),

14699 
REAL_CONST
(119915.14649043836/8.0),

14700 
REAL_CONST
(119939.95887360642/8.0),

14701 
REAL_CONST
(119964.77254009615/8.0),

14702 
REAL_CONST
(119989.58748977486/8.0),

14703 
REAL_CONST
(120014.40372250983/8.0),

14704 
REAL_CONST
(120039.22123816841/8.0),

14705 
REAL_CONST
(120064.04003661797/8.0),

14706 
REAL_CONST
(120088.86011772591/8.0),

14707 
REAL_CONST
(120113.6814813597/8.0),

14708 
REAL_CONST
(120138.5041273868/8.0),

14709 
REAL_CONST
(120163.3280556747/8.0),

14710 
REAL_CONST
(120188.15326609099/8.0),

14711 
REAL_CONST
(120212.97975850321/8.0),

14712 
REAL_CONST
(120237.807532779/8.0),

14713 
REAL_CONST
(120262.63658878599/8.0),

14714 
REAL_CONST
(120287.46692639188/8.0),

14715 
REAL_CONST
(120312.29854546436/8.0),

14716 
REAL_CONST
(120337.13144587121/8.0),

14717 
REAL_CONST
(120361.9656274802/8.0),

14718 
REAL_CONST
(120386.80109015915/8.0),

14719 
REAL_CONST
(120411.63783377589/8.0),

14720 
REAL_CONST
(120436.47585819835/8.0),

14721 
REAL_CONST
(120461.31516329442/8.0),

14722 
REAL_CONST
(120486.15574893207/8.0),

14723 
REAL_CONST
(120510.99761497928/8.0),

14724 
REAL_CONST
(120535.84076130406/8.0),

14725 
REAL_CONST
(120560.68518777451/8.0),

14726 
REAL_CONST
(120585.53089425867/8.0),

14727 
REAL_CONST
(120610.3778806247/8.0),

14728 
REAL_CONST
(120635.22614674074/8.0),

14729 
REAL_CONST
(120660.07569247499/8.0),

14730 
REAL_CONST
(120684.92651769568/8.0),

14731 
REAL_CONST
(120709.77862227106/8.0),

14732 
REAL_CONST
(120734.63200606944/8.0),

14733 
REAL_CONST
(120759.48666895913/8.0),

14734 
REAL_CONST
(120784.3426108085/8.0),

14735 
REAL_CONST
(120809.19983148595/8.0),

14736 
REAL_CONST
(120834.05833085992/8.0),

14737 
REAL_CONST
(120858.91810879884/8.0),

14738 
REAL_CONST
(120883.77916517125/8.0),

14739 
REAL_CONST
(120908.64149984565/8.0),

14740 
REAL_CONST
(120933.5051126906/8.0),

14741 
REAL_CONST
(120958.37000357473/8.0),

14742 
REAL_CONST
(120983.23617236665/8.0),

14743 
REAL_CONST
(121008.10361893504/8.0),

14744 
REAL_CONST
(121032.97234314861/8.0),

14745 
REAL_CONST
(121057.84234487606/8.0),

14746 
REAL_CONST
(121082.71362398617/8.0),

14747 
REAL_CONST
(121107.58618034775/8.0),

14748 
REAL_CONST
(121132.46001382964/8.0),

14749 
REAL_CONST
(121157.33512430069/8.0),

14750 
REAL_CONST
(121182.21151162982/8.0),

14751 
REAL_CONST
(121207.08917568595/8.0),

14752 
REAL_CONST
(121231.96811633807/8.0),

14753 
REAL_CONST
(121256.84833345517/8.0),

14754 
REAL_CONST
(121281.72982690629/8.0),

14755 
REAL_CONST
(121306.61259656049/8.0),

14756 
REAL_CONST
(121331.49664228689/8.0),

14757 
REAL_CONST
(121356.38196395461/8.0),

14758 
REAL_CONST
(121381.26856143285/8.0),

14759 
REAL_CONST
(121406.15643459078/8.0),

14760 
REAL_CONST
(121431.04558329767/8.0),

14761 
REAL_CONST
(121455.93600742276/8.0),

14762 
REAL_CONST
(121480.82770683538/8.0),

14763 
REAL_CONST
(121505.72068140487/8.0),

14764 
REAL_CONST
(121530.61493100057/8.0),

14765 
REAL_CONST
(121555.51045549192/8.0),

14766 
REAL_CONST
(121580.40725474835/8.0),

14767 
REAL_CONST
(121605.30532863933/8.0),

14768 
REAL_CONST
(121630.20467703436/8.0),

14769 
REAL_CONST
(121655.10529980299/8.0),

14770 
REAL_CONST
(121680.00719681478/8.0),

14771 
REAL_CONST
(121704.91036793934/8.0),

14772 
REAL_CONST
(121729.81481304632/8.0),

14773 
REAL_CONST
(121754.72053200539/8.0),

14774 
REAL_CONST
(121779.62752468624/8.0),

14775 
REAL_CONST
(121804.53579095862/8.0),

14776 
REAL_CONST
(121829.44533069231/8.0),

14777 
REAL_CONST
(121854.3561437571/8.0),

14778 
REAL_CONST
(121879.26823002285/8.0),

14779 
REAL_CONST
(121904.1815893594/8.0),

14780 
REAL_CONST
(121929.09622163669/8.0),

14781 
REAL_CONST
(121954.01212672464/8.0),

14782 
REAL_CONST
(121978.92930449323/8.0),

14783 
REAL_CONST
(122003.84775481246/8.0),

14784 
REAL_CONST
(122028.76747755238/8.0),

14785 
REAL_CONST
(122053.68847258303/8.0),

14786 
REAL_CONST
(122078.61073977455/8.0),

14787 
REAL_CONST
(122103.53427899707/8.0),

14788 
REAL_CONST
(122128.45909012076/8.0),

14789 
REAL_CONST
(122153.38517301581/8.0),

14790 
REAL_CONST
(122178.31252755247/8.0),

14791 
REAL_CONST
(122203.24115360099/8.0),

14792 
REAL_CONST
(122228.17105103172/8.0),

14793 
REAL_CONST
(122253.10221971494/8.0),

14794 
REAL_CONST
(122278.03465952107/8.0),

14795 
REAL_CONST
(122302.96837032049/8.0),

14796 
REAL_CONST
(122327.90335198362/8.0),

14797 
REAL_CONST
(122352.83960438096/8.0),

14798 
REAL_CONST
(122377.777127383/8.0),

14799 
REAL_CONST
(122402.71592086025/8.0),

14800 
REAL_CONST
(122427.65598468333/8.0),

14801 
REAL_CONST
(122452.59731872278/8.0),

14802 
REAL_CONST
(122477.53992284928/8.0),

14803 
REAL_CONST
(122502.48379693348/8.0),

14804 
REAL_CONST
(122527.42894084606/8.0),

14805 
REAL_CONST
(122552.37535445779/8.0),

14806 
REAL_CONST
(122577.32303763942/8.0),

14807 
REAL_CONST
(122602.27199026172/8.0),

14808 
REAL_CONST
(122627.22221219557/8.0),

14809 
REAL_CONST
(122652.17370331181/8.0),

14810 
REAL_CONST
(122677.12646348133/8.0),

14811 
REAL_CONST
(122702.08049257506/8.0),

14812 
REAL_CONST
(122727.03579046397/8.0),

14813 
REAL_CONST
(122751.99235701906/8.0),

14814 
REAL_CONST
(122776.95019211136/8.0),

14815 
REAL_CONST
(122801.9092956119/8.0),

14816 
REAL_CONST
(122826.8696673918/8.0),

14817 
REAL_CONST
(122851.83130732219/8.0),

14818 
REAL_CONST
(122876.79421527422/8.0),

14819 
REAL_CONST
(122901.75839111909/8.0),

14820 
REAL_CONST
(122926.72383472799/8.0),

14821 
REAL_CONST
(122951.69054597223/8.0),

14822 
REAL_CONST
(122976.65852472307/8.0),

14823 
REAL_CONST
(123001.62777085182/8.0),

14824 
REAL_CONST
(123026.59828422987/8.0),

14825 
REAL_CONST
(123051.57006472857/8.0),

14826 
REAL_CONST
(123076.54311221937/8.0),

14827 
REAL_CONST
(123101.5174265737/8.0),

14828 
REAL_CONST
(123126.49300766307/8.0),

14829 
REAL_CONST
(123151.46985535898/8.0),

14830 
REAL_CONST
(123176.44796953299/8.0),

14831 
REAL_CONST
(123201.42735005668/8.0),

14832 
REAL_CONST
(123226.40799680166/8.0),

14833 
REAL_CONST
(123251.38990963959/8.0),

14834 
REAL_CONST
(123276.37308844214/8.0),

14835 
REAL_CONST
(123301.35753308103/8.0),

14836 
REAL_CONST
(123326.343243428/8.0),

14837 
REAL_CONST
(123351.33021935483/8.0),

14838 
REAL_CONST
(123376.31846073334/8.0),

14839 
REAL_CONST
(123401.30796743535/8.0),

14840 
REAL_CONST
(123426.29873933276/8.0),

14841 
REAL_CONST
(123451.29077629748/8.0),

14842 
REAL_CONST
(123476.28407820144/8.0),

14843 
REAL_CONST
(123501.2786449166/8.0),

14844 
REAL_CONST
(123526.27447631498/8.0),

14845 
REAL_CONST
(123551.27157226863/8.0),

14846 
REAL_CONST
(123576.26993264959/8.0),

14847 
REAL_CONST
(123601.26955732999/8.0),

14848 
REAL_CONST
(123626.27044618195/8.0),

14849 
REAL_CONST
(123651.27259907764/8.0),

14850 
REAL_CONST
(123676.27601588926/8.0),

14851 
REAL_CONST
(123701.28069648903/8.0),

14852 
REAL_CONST
(123726.28664074924/8.0),

14853 
REAL_CONST
(123751.29384854218/8.0),

14854 
REAL_CONST
(123776.30231974016/8.0),

14855 
REAL_CONST
(123801.31205421555/8.0),

14856 
REAL_CONST
(123826.32305184075/8.0),

14857 
REAL_CONST
(123851.33531248817/8.0),

14858 
REAL_CONST
(123876.34883603029/8.0),

14859 
REAL_CONST
(123901.36362233957/8.0),

14860 
REAL_CONST
(123926.37967128855/8.0),

14861 
REAL_CONST
(123951.39698274979/8.0),

14862 
REAL_CONST
(123976.41555659588/8.0),

14863 
REAL_CONST
(124001.43539269941/8.0),

14864 
REAL_CONST
(124026.45649093305/8.0),

14865 
REAL_CONST
(124051.47885116948/8.0),

14866 
REAL_CONST
(124076.50247328142/8.0),

14867 
REAL_CONST
(124101.5273571416/8.0),

14868 
REAL_CONST
(124126.55350262282/8.0),

14869 
REAL_CONST
(124151.58090959788/8.0),

14870 
REAL_CONST
(124176.60957793961/8.0),

14871 
REAL_CONST
(124201.63950752091/8.0),

14872 
REAL_CONST
(124226.67069821467/8.0),

14873 
REAL_CONST
(124251.70314989384/8.0),

14874 
REAL_CONST
(124276.73686243138/8.0),

14875 
REAL_CONST
(124301.7718357003/8.0),

14876 
REAL_CONST
(124326.80806957364/8.0),

14877 
REAL_CONST
(124351.84556392446/8.0),

14878 
REAL_CONST
(124376.88431862585/8.0),

14879 
REAL_CONST
(124401.92433355095/8.0),

14880 
REAL_CONST
(124426.96560857294/8.0),

14881 
REAL_CONST
(124452.00814356498/8.0),

14882 
REAL_CONST
(124477.05193840031/8.0),

14883 
REAL_CONST
(124502.0969929522/8.0),

14884 
REAL_CONST
(124527.14330709392/8.0),

14885 
REAL_CONST
(124552.19088069882/8.0),

14886 
REAL_CONST
(124577.23971364023/8.0),

14887 
REAL_CONST
(124602.28980579154/8.0),

14888 
REAL_CONST
(124627.34115702618/8.0),

14889 
REAL_CONST
(124652.3937672176/8.0),

14890 
REAL_CONST
(124677.44763623926/8.0),

14891 
REAL_CONST
(124702.50276396469/8.0),

14892 
REAL_CONST
(124727.55915026742/8.0),

14893 
REAL_CONST
(124752.61679502104/8.0),

14894 
REAL_CONST
(124777.67569809916/8.0),

14895 
REAL_CONST
(124802.73585937542/8.0),

14896 
REAL_CONST
(124827.79727872348/8.0),

14897 
REAL_CONST
(124852.85995601704/8.0),

14898 
REAL_CONST
(124877.92389112986/8.0),

14899 
REAL_CONST
(124902.98908393568/8.0),

14900 
REAL_CONST
(124928.05553430831/8.0),

14901 
REAL_CONST
(124953.1232421216/8.0),

14902 
REAL_CONST
(124978.19220724938/8.0),

14903 
REAL_CONST
(125003.26242956554/8.0),

14904 
REAL_CONST
(125028.33390894404/8.0),

14905 
REAL_CONST
(125053.40664525882/8.0),

14906 
REAL_CONST
(125078.48063838384/8.0),

14907 
REAL_CONST
(125103.55588819318/8.0),

14908 
REAL_CONST
(125128.63239456083/8.0),

14909 
REAL_CONST
(125153.71015736091/8.0),

14910 
REAL_CONST
(125178.78917646752/8.0),

14911 
REAL_CONST
(125203.86945175481/8.0),

14912 
REAL_CONST
(125228.95098309696/8.0),

14913 
REAL_CONST
(125254.03377036817/8.0),

14914 
REAL_CONST
(125279.1178134427/8.0),

14915 
REAL_CONST
(125304.20311219479/8.0),

14916 
REAL_CONST
(125329.28966649878/8.0),

14917 
REAL_CONST
(125354.37747622898/8.0),

14918 
REAL_CONST
(125379.46654125977/8.0),

14919 
REAL_CONST
(125404.55686146552/8.0),

14920 
REAL_CONST
(125429.6484367207/8.0),

14921 
REAL_CONST
(125454.74126689974/8.0),

14922 
REAL_CONST
(125479.83535187715/8.0),

14923 
REAL_CONST
(125504.93069152744/8.0),

14924 
REAL_CONST
(125530.02728572517/8.0),

14925 
REAL_CONST
(125555.12513434493/8.0),

14926 
REAL_CONST
(125580.22423726133/8.0),

14927 
REAL_CONST
(125605.32459434902/8.0),

14928 
REAL_CONST
(125630.4262054827/8.0),

14929 
REAL_CONST
(125655.52907053704/8.0),

14930 
REAL_CONST
(125680.63318938682/8.0),

14931 
REAL_CONST
(125705.73856190679/8.0),

14932 
REAL_CONST
(125730.84518797178/8.0),

14933 
REAL_CONST
(125755.9530674566/8.0),

14934 
REAL_CONST
(125781.06220023613/8.0),

14935 
REAL_CONST
(125806.17258618528/8.0),

14936 
REAL_CONST
(125831.28422517896/8.0),

14937 
REAL_CONST
(125856.39711709213/8.0),

14938 
REAL_CONST
(125881.51126179981/8.0),

14939 
REAL_CONST
(125906.62665917698/8.0),

14940 
REAL_CONST
(125931.74330909875/8.0),

14941 
REAL_CONST
(125956.86121144016/8.0),

14942 
REAL_CONST
(125981.98036607634/8.0),

14943 
REAL_CONST
(126007.10077288245/8.0),

14944 
REAL_CONST
(126032.22243173365/8.0),

14945 
REAL_CONST
(126057.34534250517/8.0),

14946 
REAL_CONST
(126082.46950507225/8.0),

14947 
REAL_CONST
(126107.59491931014/8.0),

14948 
REAL_CONST
(126132.72158509417/8.0),

14949 
REAL_CONST
(126157.84950229966/8.0),

14950 
REAL_CONST
(126182.97867080198/8.0),

14951 
REAL_CONST
(126208.10909047653/8.0),

14952 
REAL_CONST
(126233.24076119871/8.0),

14953 
REAL_CONST
(126258.37368284403/8.0),

14954 
REAL_CONST
(126283.50785528794/8.0),

14955 
REAL_CONST
(126308.64327840599/8.0),

14956 
REAL_CONST
(126333.77995207369/8.0),

14957 
REAL_CONST
(126358.91787616667/8.0),

14958 
REAL_CONST
(126384.0570505605/8.0),

14959 
REAL_CONST
(126409.19747513086/8.0),

14960 
REAL_CONST
(126434.3391497534/8.0),

14961 
REAL_CONST
(126459.48207430386/8.0),

14962 
REAL_CONST
(126484.62624865794/8.0),

14963 
REAL_CONST
(126509.77167269142/8.0),

14964 
REAL_CONST
(126534.9183462801/8.0),

14965 
REAL_CONST
(126560.06626929982/8.0),

14966 
REAL_CONST
(126585.21544162642/8.0),

14967 
REAL_CONST
(126610.36586313581/8.0),

14968 
REAL_CONST
(126635.51753370393/8.0),

14969 
REAL_CONST
(126660.67045320668/8.0),

14970 
REAL_CONST
(126685.82462152008/8.0),

14971 
REAL_CONST
(126710.98003852014/8.0),

14972 
REAL_CONST
(126736.13670408291/8.0),

14973 
REAL_CONST
(126761.29461808444/8.0),

14974 
REAL_CONST
(126786.45378040087/8.0),

14975 
REAL_CONST
(126811.61419090834/8.0),

14976 
REAL_CONST
(126836.77584948298/8.0),

14977 
REAL_CONST
(126861.93875600102/8.0),

14978 
REAL_CONST
(126887.10291033868/8.0),

14979 
REAL_CONST
(126912.26831237224/8.0),

14980 
REAL_CONST
(126937.43496197795/8.0),

14981 
REAL_CONST
(126962.60285903217/8.0),

14982 
REAL_CONST
(126987.77200341123/8.0),

14983 
REAL_CONST
(127012.94239499152/8.0),

14984 
REAL_CONST
(127038.11403364947/8.0),

14985 
REAL_CONST
(127063.2869192615/8.0),

14986 
REAL_CONST
(127088.46105170409/8.0),

14987 
REAL_CONST
(127113.63643085376/8.0),

14988 
REAL_CONST
(127138.81305658702/8.0),

14989 
REAL_CONST
(127163.99092878048/8.0),

14990 
REAL_CONST
(127189.17004731069/8.0),

14991 
REAL_CONST
(127214.35041205429/8.0),

14992 
REAL_CONST
(127239.53202288797/8.0),

14993 
REAL_CONST
(127264.71487968838/8.0),

14994 
REAL_CONST
(127289.89898233226/8.0),

14995 
REAL_CONST
(127315.08433069635/8.0),

14996 
REAL_CONST
(127340.27092465744/8.0),

14997 
REAL_CONST
(127365.45876409234/8.0),

14998 
REAL_CONST
(127390.64784887788/8.0),

14999 
REAL_CONST
(127415.83817889093/8.0),

15000 
REAL_CONST
(127441.02975400841/8.0),

15001 
REAL_CONST
(127466.22257410725/8.0),

15002 
REAL_CONST
(127491.41663906439/8.0),

15003 
REAL_CONST
(127516.61194875685/8.0),

15004 
REAL_CONST
(127541.80850306165/8.0),

15005 
REAL_CONST
(127567.00630185583/8.0),

15006 
REAL_CONST
(127592.20534501647/8.0),

15007 
REAL_CONST
(127617.4056324207/8.0),

15008 
REAL_CONST
(127642.60716394568/8.0),

15009 
REAL_CONST
(127667.80993946856/8.0),

15010 
REAL_CONST
(127693.01395886653/8.0),

15011 
REAL_CONST
(127718.21922201688/8.0),

15012 
REAL_CONST
(127743.42572879682/8.0),

15013 
REAL_CONST
(127768.63347908368/8.0),

15014 
REAL_CONST
(127793.84247275478/8.0),

15015 
REAL_CONST
(127819.05270968749/8.0),

15016 
REAL_CONST
(127844.26418975917/8.0),

15017 
REAL_CONST
(127869.47691284724/8.0),

15018 
REAL_CONST
(127894.69087882918/8.0),

15019 
REAL_CONST
(127919.90608758242/8.0),

15020 
REAL_CONST
(127945.12253898452/8.0),

15021 
REAL_CONST
(127970.34023291297/8.0),

15022 
REAL_CONST
(127995.55916924537/8.0),

15023 
REAL_CONST
(128020.77934785932/8.0),

15024 
REAL_CONST
(128046.00076863244/8.0),

15025 
REAL_CONST
(128071.22343144237/8.0),

15026 
REAL_CONST
(128096.44733616684/8.0),

15027 
REAL_CONST
(128121.67248268353/8.0),

15028 
REAL_CONST
(128146.89887087021/8.0),

15029 
REAL_CONST
(128172.12650060465/8.0),

15030 
REAL_CONST
(128197.35537176467/8.0),

15031 
REAL_CONST
(128222.5854842281/8.0),

15032 
REAL_CONST
(128247.81683787282/8.0),

15033 
REAL_CONST
(128273.04943257671/8.0),

15034 
REAL_CONST
(128298.28326821771/8.0),

15035 
REAL_CONST
(128323.51834467379/8.0),

15036 
REAL_CONST
(128348.75466182294/8.0),

15037 
REAL_CONST
(128373.99221954317/8.0),

15038 
REAL_CONST
(128399.23101771252/8.0),

15039 
REAL_CONST
(128424.47105620909/8.0),

15040 
REAL_CONST
(128449.71233491098/8.0),

15041 
REAL_CONST
(128474.95485369631/8.0),

15042 
REAL_CONST
(128500.19861244329/8.0),

15043 
REAL_CONST
(128525.44361103009/8.0),

15044 
REAL_CONST
(128550.68984933494/8.0),

15045 
REAL_CONST
(128575.93732723613/8.0),

15046 
REAL_CONST
(128601.18604461191/8.0),

15047 
REAL_CONST
(128626.43600134061/8.0),

15048 
REAL_CONST
(128651.68719730059/8.0),

15049 
REAL_CONST
(128676.93963237021/8.0),

15050 
REAL_CONST
(128702.1933064279/8.0),

15051 
REAL_CONST
(128727.44821935208/8.0),

15052 
REAL_CONST
(128752.70437102125/8.0),

15053 
REAL_CONST
(128777.96176131385/8.0),

15054 
REAL_CONST
(128803.22039010846/8.0),

15055 
REAL_CONST
(128828.48025728362/8.0),

15056 
REAL_CONST
(128853.74136271792/8.0),

15057 
REAL_CONST
(128879.00370628996/8.0),

15058 
REAL_CONST
(128904.26728787841/8.0),

15059 
REAL_CONST
(128929.53210736193/8.0),

15060 
REAL_CONST
(128954.79816461923/8.0),

15061 
REAL_CONST
(128980.06545952905/8.0),

15062 
REAL_CONST
(129005.33399197015/8.0),

15063 
REAL_CONST
(129030.60376182134/8.0),

15064 
REAL_CONST
(129055.87476896142/8.0),

15065 
REAL_CONST
(129081.14701326926/8.0),

15066 
REAL_CONST
(129106.42049462376/8.0),

15067 
REAL_CONST
(129131.6952129038/8.0),

15068 
REAL_CONST
(129156.97116798835/8.0),

15069 
REAL_CONST
(129182.24835975636/8.0),

15070 
REAL_CONST
(129207.52678808685/8.0),

15071 
REAL_CONST
(129232.80645285884/8.0),

15072 
REAL_CONST
(129258.08735395141/8.0),

15073 
REAL_CONST
(129283.36949124365/8.0),

15074 
REAL_CONST
(129308.65286461466/8.0),

15075 
REAL_CONST
(129333.9374739436/8.0),

15076 
REAL_CONST
(129359.22331910966/8.0),

15077 
REAL_CONST
(129384.51039999202/8.0),

15078 
REAL_CONST
(129409.79871646997/8.0),

15079 
REAL_CONST
(129435.08826842274/8.0),

15080 
REAL_CONST
(129460.37905572963/8.0),

15081 
REAL_CONST
(129485.67107826998/8.0),

15082 
REAL_CONST
(129510.96433592314/8.0),

15083 
REAL_CONST
(129536.25882856851/8.0),

15084 
REAL_CONST
(129561.55455608548/8.0),

15085 
REAL_CONST
(129586.85151835352/8.0),

15086 
REAL_CONST
(129612.14971525209/8.0),

15087 
REAL_CONST
(129637.4491466607/8.0),

15088 
REAL_CONST
(129662.74981245887/8.0),

15089 
REAL_CONST
(129688.0517125262/8.0),

15090 
REAL_CONST
(129713.35484674224/8.0),

15091 
REAL_CONST
(129738.65921498663/8.0),

15092 
REAL_CONST
(129763.96481713903/8.0),

15093 
REAL_CONST
(129789.27165307909/8.0),

15094 
REAL_CONST
(129814.57972268655/8.0),

15095 
REAL_CONST
(129839.88902584116/8.0),

15096 
REAL_CONST
(129865.19956242264/8.0),

15097 
REAL_CONST
(129890.51133231082/8.0),

15098 
REAL_CONST
(129915.82433538554/8.0),

15099 
REAL_CONST
(129941.13857152662/8.0),

15100 
REAL_CONST
(129966.45404061397/8.0),

15101 
REAL_CONST
(129991.7707425275/8.0),

15102 
REAL_CONST
(130017.08867714716/8.0),

15103 
REAL_CONST
(130042.4078443529/8.0),

15104 
REAL_CONST
(130067.72824402474/8.0),

15105 
REAL_CONST
(130093.04987604271/8.0),

15106 
REAL_CONST
(130118.37274028687/8.0),

15107 
REAL_CONST
(130143.69683663732/8.0),

15108 
REAL_CONST
(130169.02216497416/8.0),

15109 
REAL_CONST
(130194.34872517755/8.0),

15110 
REAL_CONST
(130219.67651712766/8.0),

15111 
REAL_CONST
(130245.0055407047/8.0),

15112 
REAL_CONST
(130270.33579578891/8.0),

15113 
REAL_CONST
(130295.66728226055/8.0),

15114 
REAL_CONST
(130320.99999999991/8.0),

15115 
REAL_CONST
(130346.33394888733/8.0),

15116 
REAL_CONST
(130371.66912880314/8.0),

15117 
REAL_CONST
(130397.00553962773/8.0),

15118 
REAL_CONST
(130422.34318124152/8.0),

15119 
REAL_CONST
(130447.68205352494/8.0),

15120 
REAL_CONST
(130473.02215635845/8.0),

15121 
REAL_CONST
(130498.36348962256/8.0),

15122 
REAL_CONST
(130523.70605319779/8.0),

15123 
REAL_CONST
(130549.0498469647/8.0),

15124 
REAL_CONST
(130574.39487080388/8.0),

15125 
REAL_CONST
(130599.74112459592/8.0),

15126 
REAL_CONST
(130625.08860822149/8.0),

15127 
REAL_CONST
(130650.43732156123/8.0),

15128 
REAL_CONST
(130675.78726449587/8.0),

15129 
REAL_CONST
(130701.13843690613/8.0),

15130 
REAL_CONST
(130726.49083867275/8.0),

15131 
REAL_CONST
(130751.84446967654/8.0),

15132 
REAL_CONST
(130777.19932979831/8.0),

15133 
REAL_CONST
(130802.5554189189/8.0),

15134 
REAL_CONST
(130827.91273691918/8.0),

15135 
REAL_CONST
(130853.27128368006/8.0),

15136 
REAL_CONST
(130878.63105908247/8.0),

15137 
REAL_CONST
(130903.99206300738/8.0),

15138 
REAL_CONST
(130929.35429533575/8.0),

15139 
REAL_CONST
(130954.71775594862/8.0),

15140 
REAL_CONST
(130980.08244472703/8.0),

15141 
REAL_CONST
(131005.44836155206/8.0),

15142 
REAL_CONST
(131030.81550630482/8.0),

15143 
REAL_CONST
(131056.18387886642/8.0),

15144 
REAL_CONST
(131081.55347911804/8.0),

15145 
REAL_CONST
(131106.92430694087/8.0),

15146 
REAL_CONST
(131132.29636221612/8.0),

15147 
REAL_CONST
(131157.66964482504/8.0),

15148 
REAL_CONST
(131183.0441546489/8.0),

15149 
REAL_CONST
(131208.41989156904/8.0),

15150 
REAL_CONST
(131233.79685546676/8.0),

15151 
REAL_CONST
(131259.17504622342/8.0),

15152 
REAL_CONST
(131284.55446372041/8.0),

15153 
REAL_CONST
(131309.93510783918/8.0),

15154 
REAL_CONST
(131335.31697846117/8.0),

15155 
REAL_CONST
(131360.70007546784/8.0),

15156 
REAL_CONST
(131386.0843987407/8.0),

15157 
REAL_CONST
(131411.46994816128/8.0),

15158 
REAL_CONST
(131436.85672361116/8.0),

15159 
REAL_CONST
(131462.24472497194/8.0),

15160 
REAL_CONST
(131487.63395212521/8.0),

15161 
REAL_CONST
(131513.02440495262/8.0),

15162 
REAL_CONST
(131538.41608333588/8.0),

15163 
REAL_CONST
(131563.80898715663/8.0),

15164 
REAL_CONST
(131589.2031162967/8.0),

15165 
REAL_CONST
(131614.59847063778/8.0),

15166 
REAL_CONST
(131639.9950500617/8.0),

15167 
REAL_CONST
(131665.39285445024/8.0),

15168 
REAL_CONST
(131690.79188368531/8.0),

15169 
REAL_CONST
(131716.19213764873/8.0),

15170 
REAL_CONST
(131741.59361622241/8.0),

15171 
REAL_CONST
(131766.99631928833/8.0),

15172 
REAL_CONST
(131792.40024672839/8.0),

15173 
REAL_CONST
(131817.80539842462/8.0),

15174 
REAL_CONST
(131843.21177425905/8.0),

15175 
REAL_CONST
(131868.61937411371/8.0),

15176 
REAL_CONST
(131894.02819787065/8.0),

15177 
REAL_CONST
(131919.43824541202/8.0),

15178 
REAL_CONST
(131944.84951661993/8.0),

15179 
REAL_CONST
(131970.26201137656/8.0),

15180 
REAL_CONST
(131995.67572956407/8.0),

15181 
REAL_CONST
(132021.09067106468/8.0),

15182 
REAL_CONST
(132046.50683576067/8.0),

15183 
REAL_CONST
(132071.9242235343/8.0),

15184 
REAL_CONST
(132097.34283426782/8.0),

15185 
REAL_CONST
(132122.76266784366/8.0),

15186 
REAL_CONST
(132148.1837241441/8.0),

15187 
REAL_CONST
(132173.60600305157/8.0),

15188 
REAL_CONST
(132199.02950444847/8.0),

15189 
REAL_CONST
(132224.45422821722/8.0),

15190 
REAL_CONST
(132249.88017424036/8.0),

15191 
REAL_CONST
(132275.30734240031/8.0),

15192 
REAL_CONST
(132300.73573257966/8.0),

15193 
REAL_CONST
(132326.16534466096/8.0),

15194 
REAL_CONST
(132351.59617852676/8.0),

15195 
REAL_CONST
(132377.02823405969/8.0),

15196 
REAL_CONST
(132402.46151114244/8.0),

15197 
REAL_CONST
(132427.89600965759/8.0),

15198 
REAL_CONST
(132453.33172948789/8.0),

15199 
REAL_CONST
(132478.76867051609/8.0),

15200 
REAL_CONST
(132504.20683262491/8.0),

15201 
REAL_CONST
(132529.64621569714/8.0),

15202 
REAL_CONST
(132555.08681961559/8.0),

15203 
REAL_CONST
(132580.5286442631/8.0),

15204 
REAL_CONST
(132605.97168952253/8.0),

15205 
REAL_CONST
(132631.41595527678/8.0),

15206 
REAL_CONST
(132656.86144140881/8.0),

15207 
REAL_CONST
(132682.30814780149/8.0),

15208 
REAL_CONST
(132707.75607433787/8.0),

15209 
REAL_CONST
(132733.20522090094/8.0),

15210 
REAL_CONST
(132758.65558737374/8.0),

15211 
REAL_CONST
(132784.10717363929/8.0),

15212 
REAL_CONST
(132809.55997958075/8.0),

15213 
REAL_CONST
(132835.01400508118/8.0),

15214 
REAL_CONST
(132860.46925002377/8.0),

15215 
REAL_CONST
(132885.92571429166/8.0),

15216 
REAL_CONST
(132911.38339776811/8.0),

15217 
REAL_CONST
(132936.84230033628/8.0),

15218 
REAL_CONST
(132962.30242187946/8.0),

15219 
REAL_CONST
(132987.76376228096/8.0),

15220 
REAL_CONST
(133013.22632142407/8.0),

15221 
REAL_CONST
(133038.69009919214/8.0),

15222 
REAL_CONST
(133064.15509546854/8.0),

15223 
REAL_CONST
(133089.62131013666/8.0),

15224 
REAL_CONST
(133115.08874307995/8.0),

15225 
REAL_CONST
(133140.55739418184/8.0),

15226 
REAL_CONST
(133166.02726332581/8.0),

15227 
REAL_CONST
(133191.49835039541/8.0),

15228 
REAL_CONST
(133216.97065527414/8.0),

15229 
REAL_CONST
(133242.44417784561/8.0),

15230 
REAL_CONST
(133267.91891799335/8.0),

15231 
REAL_CONST
(133293.39487560102/8.0),

15232 
REAL_CONST
(133318.87205055228/8.0),

15233 
REAL_CONST
(133344.35044273079/8.0),

15234 
REAL_CONST
(133369.83005202023/8.0),

15235 
REAL_CONST
(133395.31087830439/8.0),

15236 
REAL_CONST
(133420.79292146701/8.0),

15237 
REAL_CONST
(133446.27618139185/8.0),

15238 
REAL_CONST
(133471.76065796276/8.0),

15239 
REAL_CONST
(133497.24635106357/8.0),

15240 
REAL_CONST
(133522.73326057816/8.0),

15241 
REAL_CONST
(133548.22138639039/8.0),

15242 
REAL_CONST
(133573.71072838426/8.0),

15243 
REAL_CONST
(133599.20128644365/8.0),

15244 
REAL_CONST
(133624.69306045261/8.0),

15245 
REAL_CONST
(133650.1860502951/8.0),

15246 
REAL_CONST
(133675.68025585517/8.0),

15247 
REAL_CONST
(133701.1756770169/8.0),

15248 
REAL_CONST
(133726.67231366437/8.0),

15249 
REAL_CONST
(133752.17016568172/8.0),

15250 
REAL_CONST
(133777.66923295305/8.0),

15251 
REAL_CONST
(133803.16951536259/8.0),

15252 
REAL_CONST
(133828.67101279454/8.0),

15253 
REAL_CONST
(133854.17372513309/8.0),

15254 
REAL_CONST
(133879.67765226253/8.0),

15255 
REAL_CONST
(133905.18279406714/8.0),

15256 
REAL_CONST
(133930.68915043125/8.0),

15257 
REAL_CONST
(133956.19672123916/8.0),

15258 
REAL_CONST
(133981.70550637526/8.0),

15259 
REAL_CONST
(134007.21550572399/8.0),

15260 
REAL_CONST
(134032.7267191697/8.0),

15261 
REAL_CONST
(134058.23914659687/8.0),

15262 
REAL_CONST
(134083.75278789/8.0),

15263 
REAL_CONST
(134109.26764293358/8.0),

15264 
REAL_CONST
(134134.78371161217/8.0),

15265 
REAL_CONST
(134160.30099381026/8.0),

15266 
REAL_CONST
(134185.8194894125/8.0),

15267 
REAL_CONST
(134211.33919830353/8.0),

15268 
REAL_CONST
(134236.8601203679/8.0),

15269 
REAL_CONST
(134262.38225549037/8.0),

15270 
REAL_CONST
(134287.90560355558/8.0),

15271 
REAL_CONST
(134313.43016444831/8.0),

15272 
REAL_CONST
(134338.95593805326/8.0),

15273 
REAL_CONST
(134364.48292425525/8.0),

15274 
REAL_CONST
(134390.01112293909/8.0),

15275 
REAL_CONST
(134415.54053398955/8.0),

15276 
REAL_CONST
(134441.07115729159/8.0),

15277 
REAL_CONST
(134466.60299273001/8.0),

15278 
REAL_CONST
(134492.1360401898/8.0),

15279 
REAL_CONST
(134517.67029955584/8.0),

15280 
REAL_CONST
(134543.20577071316/8.0),

15281 
REAL_CONST
(134568.74245354676/8.0),

15282 
REAL_CONST
(134594.28034794159/8.0),

15283 
REAL_CONST
(134619.81945378278/8.0),

15284 
REAL_CONST
(134645.35977095537/8.0),

15285 
REAL_CONST
(134670.90129934452/8.0),

15286 
REAL_CONST
(134696.4440388353/8.0),

15287 
REAL_CONST
(134721.98798931291/8.0),

15288 
REAL_CONST
(134747.53315066252/8.0),

15289 
REAL_CONST
(134773.07952276937/8.0),

15290 
REAL_CONST
(134798.62710551871/8.0),

15291 
REAL_CONST
(134824.17589879577/8.0),

15292 
REAL_CONST
(134849.72590248589/8.0),

15293 
REAL_CONST
(134875.27711647438/8.0),

15294 
REAL_CONST
(134900.82954064661/8.0),

15295 
REAL_CONST
(134926.38317488792/8.0),

15296 
REAL_CONST
(134951.93801908373/8.0),

15297 
REAL_CONST
(134977.49407311951/8.0),

15298 
REAL_CONST
(135003.05133688069/8.0),

15299 
REAL_CONST
(135028.60981025276/8.0),

15300 
REAL_CONST
(135054.16949312127/8.0),

15301 
REAL_CONST
(135079.73038537172/8.0),

15302 
REAL_CONST
(135105.29248688967/8.0),

15303 
REAL_CONST
(135130.85579756077/8.0),

15304 
REAL_CONST
(135156.42031727062/8.0),

15305 
REAL_CONST
(135181.98604590484/8.0),

15306 
REAL_CONST
(135207.55298334916/8.0),

15307 
REAL_CONST
(135233.12112948924/8.0),

15308 
REAL_CONST
(135258.69048421088/8.0),

15309 
REAL_CONST
(135284.26104739975/8.0),

15310 
REAL_CONST
(135309.83281894168/8.0),

15311 
REAL_CONST
(135335.4057987225/8.0),

15312 
REAL_CONST
(135360.97998662802/8.0),

15313 
REAL_CONST
(135386.55538254412/8.0),

15314 
REAL_CONST
(135412.13198635669/8.0),

15315 
REAL_CONST
(135437.70979795168/8.0),

15316 
REAL_CONST
(135463.28881721498/8.0),

15317 
REAL_CONST
(135488.86904403262/8.0),

15318 
REAL_CONST
(135514.45047829056/8.0),

15319 
REAL_CONST
(135540.03311987486/8.0),

15320 
REAL_CONST
(135565.61696867159/8.0),

15321 
REAL_CONST
(135591.20202456677/8.0),

15322 
REAL_CONST
(135616.78828744654/8.0),

15323 
REAL_CONST
(135642.37575719706/8.0),

15324 
REAL_CONST
(135667.96443370447/8.0),

15325 
REAL_CONST
(135693.55431685498/8.0),

15326 
REAL_CONST
(135719.14540653475/8.0),

15327 
REAL_CONST
(135744.73770263011/8.0),

15328 
REAL_CONST
(135770.33120502727/8.0),

15329 
REAL_CONST
(135795.92591361253/8.0),

15330 
REAL_CONST
(135821.52182827223/8.0),

15331 
REAL_CONST
(135847.11894889272/8.0),

15332 
REAL_CONST
(135872.7172753604/8.0),

15333 
REAL_CONST
(135898.31680756161/8.0),

15334 
REAL_CONST
(135923.91754538284/8.0),

15335 
REAL_CONST
(135949.51948871053/8.0),

15336 
REAL_CONST
(135975.12263743114/8.0),

15337 
REAL_CONST
(136000.72699143123/8.0),

15338 
REAL_CONST
(136026.33255059729/8.0),

15339 
REAL_CONST
(136051.93931481591/8.0),

15340 
REAL_CONST
(136077.54728397369/8.0),

15341 
REAL_CONST
(136103.15645795723/8.0),

15342 
REAL_CONST
(136128.76683665317/8.0),

15343 
REAL_CONST
(136154.37841994822/8.0),

15344 
REAL_CONST
(136179.99120772901/8.0),

15345 
REAL_CONST
(136205.60519988232/8.0),

15346 
REAL_CONST
(136231.2203962949/8.0),

15347 
REAL_CONST
(136256.83679685349/8.0),

15348 
REAL_CONST
(136282.45440144493/8.0),

15349 
REAL_CONST
(136308.07320995603/8.0),

15350 
REAL_CONST
(136333.69322227367/8.0),

15351 
REAL_CONST
(136359.31443828469/8.0),

15352 
REAL_CONST
(136384.93685787608/8.0),

15353 
REAL_CONST
(136410.56048093468/8.0),

15354 
REAL_CONST
(136436.18530734754/8.0),

15355 
REAL_CONST
(136461.81133700156/8.0),

15356 
REAL_CONST
(136487.43856978384/8.0),

15357 
REAL_CONST
(136513.06700558143/8.0),

15358 
REAL_CONST
(136538.6966442813/8.0),

15359 
REAL_CONST
(136564.32748577066/8.0),

15360 
REAL_CONST
(136589.95952993655/8.0),

15361 
REAL_CONST
(136615.59277666616/8.0),

15362 
REAL_CONST
(136641.22722584667/8.0),

15363 
REAL_CONST
(136666.86287736523/8.0),

15364 
REAL_CONST
(136692.49973110916/8.0),

15365 
REAL_CONST
(136718.13778696564/8.0),

15366 
REAL_CONST
(136743.77704482197/8.0),

15367 
REAL_CONST
(136769.41750456547/8.0),

15368 
REAL_CONST
(136795.05916608346/8.0),

15369 
REAL_CONST
(136820.70202926331/8.0),

15370 
REAL_CONST
(136846.34609399244/8.0),

15371 
REAL_CONST
(136871.99136015819/8.0),

15372 
REAL_CONST
(136897.63782764805/8.0),

15373 
REAL_CONST
(136923.28549634948/8.0),

15374 
REAL_CONST
(136948.93436614997/8.0),

15375 
REAL_CONST
(136974.58443693706/8.0),

15376 
REAL_CONST
(137000.23570859825/8.0),

15377 
REAL_CONST
(137025.88818102115/8.0),

15378 
REAL_CONST
(137051.54185409332/8.0),

15379 
REAL_CONST
(137077.19672770242/8.0),

15380 
REAL_CONST
(137102.85280173609/8.0),

15381 
REAL_CONST
(137128.51007608202/8.0),

15382 
REAL_CONST
(137154.16855062786/8.0),

15383 
REAL_CONST
(137179.82822526142/8.0),

15384 
REAL_CONST
(137205.48909987041/8.0),

15385 
REAL_CONST
(137231.15117434258/8.0),

15386 
REAL_CONST
(137256.8144485658/8.0),

15387 
REAL_CONST
(137282.47892242789/8.0),

15388 
REAL_CONST
(137308.14459581667/8.0),

15389 
REAL_CONST
(137333.81146862009/8.0),

15390 
REAL_CONST
(137359.47954072602/8.0),

15391 
REAL_CONST
(137385.14881202241/8.0),

15392 
REAL_CONST
(137410.81928239719/8.0),

15393 
REAL_CONST
(137436.49095173844/8.0),

15394 
REAL_CONST
(137462.16381993407/8.0),

15395 
REAL_CONST
(137487.83788687221/8.0),

15396 
REAL_CONST
(137513.51315244089/8.0),

15397 
REAL_CONST
(137539.18961652822/8.0),

15398 
REAL_CONST
(137564.86727902229/8.0),

15399 
REAL_CONST
(137590.54613981131/8.0),

15400 
REAL_CONST
(137616.22619878338/8.0),

15401 
REAL_CONST
(137641.90745582676/8.0),

15402 
REAL_CONST
(137667.58991082967/8.0),

15403 
REAL_CONST
(137693.27356368033/8.0),

15404 
REAL_CONST
(137718.95841426702/8.0),

15405 
REAL_CONST
(137744.64446247809/8.0),

15406 
REAL_CONST
(137770.33170820182/8.0),

15407 
REAL_CONST
(137796.02015132661/8.0),

15408 
REAL_CONST
(137821.70979174081/8.0),

15409 
REAL_CONST
(137847.40062933284/8.0),

15410 
REAL_CONST
(137873.09266399115/8.0),

15411 
REAL_CONST
(137898.78589560417/8.0),

15412 
REAL_CONST
(137924.48032406042/8.0),

15413 
REAL_CONST
(137950.17594924837/8.0),

15414 
REAL_CONST
(137975.8727710566/8.0),

15415 
REAL_CONST
(138001.57078937365/8.0),

15416 
REAL_CONST
(138027.27000408815/8.0),

15417 
REAL_CONST
(138052.97041508864/8.0),

15418 
REAL_CONST
(138078.67202226384/8.0),

15419 
REAL_CONST
(138104.3748255024/8.0),

15420 
REAL_CONST
(138130.07882469296/8.0),

15421 
REAL_CONST
(138155.78401972432/8.0),

15422 
REAL_CONST
(138181.49041048516/8.0),

15423 
REAL_CONST
(138207.1979968643/8.0),

15424 
REAL_CONST
(138232.9067787505/8.0),

15425 
REAL_CONST
(138258.61675603263/8.0),

15426 
REAL_CONST
(138284.32792859949/8.0),

15427 
REAL_CONST
(138310.04029633995/8.0),

15428 
REAL_CONST
(138335.75385914298/8.0),

15429 
REAL_CONST
(138361.46861689744/8.0),

15430 
REAL_CONST
(138387.18456949232/8.0),

15431 
REAL_CONST
(138412.90171681659/8.0),

15432 
REAL_CONST
(138438.62005875923/8.0),

15433 
REAL_CONST
(138464.33959520931/8.0),

15434 
REAL_CONST
(138490.06032605586/8.0),

15435 
REAL_CONST
(138515.78225118798/8.0),

15436 
REAL_CONST
(138541.50537049473/8.0),

15437 
REAL_CONST
(138567.2296838653/8.0),

15438 
REAL_CONST
(138592.95519118884/8.0),

15439 
REAL_CONST
(138618.68189235451/8.0),

15440 
REAL_CONST
(138644.40978725153/8.0),

15441 
REAL_CONST
(138670.13887576913/8.0),

15442 
REAL_CONST
(138695.86915779658/8.0),

15443 
REAL_CONST
(138721.60063322316/8.0),

15444 
REAL_CONST
(138747.33330193823/8.0),

15445 
REAL_CONST
(138773.06716383106/8.0),

15446 
REAL_CONST
(138798.80221879104/8.0),

15447 
REAL_CONST
(138824.53846670757/8.0),

15448 
REAL_CONST
(138850.27590747006/8.0),

15449 
REAL_CONST
(138876.01454096794/8.0),

15450 
REAL_CONST
(138901.7543670907/8.0),

15451 
REAL_CONST
(138927.49538572782/8.0),

15452 
REAL_CONST
(138953.2375967688/8.0),

15453 
REAL_CONST
(138978.9810001032/8.0),

15454 
REAL_CONST
(139004.72559562061/8.0),

15455 
REAL_CONST
(139030.47138321059/8.0),

15456 
REAL_CONST
(139056.2183627628/8.0),

15457 
REAL_CONST
(139081.96653416683/8.0),

15458 
REAL_CONST
(139107.71589731239/8.0),

15459 
REAL_CONST
(139133.46645208917/8.0),

15460 
REAL_CONST
(139159.21819838689/8.0),

15461 
REAL_CONST
(139184.97113609532/8.0),

15462 
REAL_CONST
(139210.72526510421/8.0),

15463 
REAL_CONST
(139236.48058530336/8.0),

15464 
REAL_CONST
(139262.23709658257/8.0),

15465 
REAL_CONST
(139287.99479883176/8.0),

15466 
REAL_CONST
(139313.75369194071/8.0),

15467 
REAL_CONST
(139339.51377579942/8.0),

15468 
REAL_CONST
(139365.27505029776/8.0),

15469 
REAL_CONST
(139391.03751532568/8.0),

15470 
REAL_CONST
(139416.80117077316/8.0),

15471 
REAL_CONST
(139442.56601653024/8.0),

15472 
REAL_CONST
(139468.33205248689/8.0),

15473 
REAL_CONST
(139494.09927853322/8.0),

15474 
REAL_CONST
(139519.86769455927/8.0),

15475 
REAL_CONST
(139545.63730045516/8.0),

15476 
REAL_CONST
(139571.408096111/8.0),

15477 
REAL_CONST
(139597.18008141697/8.0),

15478 
REAL_CONST
(139622.95325626322/8.0),

15479 
REAL_CONST
(139648.72762054001/8.0),

15480 
REAL_CONST
(139674.5031741375/8.0),

15481 
REAL_CONST
(139700.27991694602/8.0),

15482 
REAL_CONST
(139726.05784885579/8.0),

15483 
REAL_CONST
(139751.83696975713/8.0),

15484 
REAL_CONST
(139777.61727954043/8.0),

15485 
REAL_CONST
(139803.39877809596/8.0),

15486 
REAL_CONST
(139829.18146531415/8.0),

15487 
REAL_CONST
(139854.96534108539/8.0),

15488 
REAL_CONST
(139880.75040530015/8.0),

15489 
REAL_CONST
(139906.53665784886/8.0),

15490 
REAL_CONST
(139932.32409862199/8.0),

15491 
REAL_CONST
(139958.11272751007/8.0),

15492 
REAL_CONST
(139983.90254440365/8.0),

15493 
REAL_CONST
(140009.69354919327/8.0),

15494 
REAL_CONST
(140035.48574176949/8.0),

15495 
REAL_CONST
(140061.27912202294/8.0),

15496 
REAL_CONST
(140087.07368984428/8.0),

15497 
REAL_CONST
(140112.86944512415/8.0),

15498 
REAL_CONST
(140138.66638775321/8.0),

15499 
REAL_CONST
(140164.4645176222/8.0),

15500 
REAL_CONST
(140190.26383462184/8.0),

15501 
REAL_CONST
(140216.06433864293/8.0),

15502 
REAL_CONST
(140241.86602957622/8.0),

15503 
REAL_CONST
(140267.66890731253/8.0),

15504 
REAL_CONST
(140293.47297174268/8.0),

15505 
REAL_CONST
(140319.27822275754/8.0),

15506 
REAL_CONST
(140345.08466024802/8.0),

15507 
REAL_CONST
(140370.89228410498/8.0),

15508 
REAL_CONST
(140396.70109421943/8.0),

15509 
REAL_CONST
(140422.51109048226/8.0),

15510 
REAL_CONST
(140448.32227278448/8.0),

15511 
REAL_CONST
(140474.13464101712/8.0),

15512 
REAL_CONST
(140499.94819507122/8.0),

15513 
REAL_CONST
(140525.76293483781/8.0),

15514 
REAL_CONST
(140551.57886020801/8.0),

15515 
REAL_CONST
(140577.3959710729/8.0),

15516 
REAL_CONST
(140603.21426732364/8.0),

15517 
REAL_CONST
(140629.03374885136/8.0),

15518 
REAL_CONST
(140654.85441554731/8.0),

15519 
REAL_CONST
(140680.67626730262/8.0),

15520 
REAL_CONST
(140706.49930400858/8.0),

15521 
REAL_CONST
(140732.32352555645/8.0),

15522 
REAL_CONST
(140758.1489318375/8.0),

15523 
REAL_CONST
(140783.97552274304/8.0),

15524 
REAL_CONST
(140809.80329816442/8.0),

15525 
REAL_CONST
(140835.63225799298/8.0),

15526 
REAL_CONST
(140861.46240212015/8.0),

15527 
REAL_CONST
(140887.29373043729/8.0),

15528 
REAL_CONST
(140913.12624283586/8.0),

15529 
REAL_CONST
(140938.95993920733/8.0),

15530 
REAL_CONST
(140964.79481944317/8.0),

15531 
REAL_CONST
(140990.63088343487/8.0),

15532 
REAL_CONST
(141016.46813107401/8.0),

15533 
REAL_CONST
(141042.30656225214/8.0),

15534 
REAL_CONST
(141068.14617686081/8.0),

15535 
REAL_CONST
(141093.98697479168/8.0),

15536 
REAL_CONST
(141119.82895593636/8.0),

15537 
REAL_CONST
(141145.6721201865/8.0),

15538 
REAL_CONST
(141171.51646743377/8.0),

15539 
REAL_CONST
(141197.36199756994/8.0),

15540 
REAL_CONST
(141223.20871048668/8.0),

15541 
REAL_CONST
(141249.05660607578/8.0),

15542 
REAL_CONST
(141274.90568422904/8.0),

15543 
REAL_CONST
(141300.75594483822/8.0),

15544 
REAL_CONST
(141326.6073877952/8.0),

15545 
REAL_CONST
(141352.4600129918/8.0),

15546 
REAL_CONST
(141378.31382031992/8.0),

15547 
REAL_CONST
(141404.16880967148/8.0),

15548 
REAL_CONST
(141430.02498093838/8.0),

15549 
REAL_CONST
(141455.8823340126/8.0),

15550 
REAL_CONST
(141481.74086878612/8.0),

15551 
REAL_CONST
(141507.60058515094/8.0),

15552 
REAL_CONST
(141533.46148299909/8.0),

15553 
REAL_CONST
(141559.32356222265/8.0),

15554 
REAL_CONST
(141585.18682271364/8.0),

15555 
REAL_CONST
(141611.05126436421/8.0),

15556 
REAL_CONST
(141636.9168870665/8.0),

15557 
REAL_CONST
(141662.78369071262/8.0),

15558 
REAL_CONST
(141688.65167519479/8.0),

15559 
REAL_CONST
(141714.5208404052/8.0),

15560 
REAL_CONST
(141740.39118623605/8.0),

15561 
REAL_CONST
(141766.26271257963/8.0),

15562 
REAL_CONST
(141792.1354193282/8.0),

15563 
REAL_CONST
(141818.00930637406/8.0),

15564 
REAL_CONST
(141843.88437360956/8.0),

15565 
REAL_CONST
(141869.760620927/8.0),

15566 
REAL_CONST
(141895.6380482188/8.0),

15567 
REAL_CONST
(141921.51665537735/8.0),

15568 
REAL_CONST
(141947.39644229505/8.0),

15569 
REAL_CONST
(141973.27740886438/8.0),

15570 
REAL_CONST
(141999.15955497778/8.0),

15571 
REAL_CONST
(142025.04288052776/8.0),

15572 
REAL_CONST
(142050.92738540689/8.0),

15573 
REAL_CONST
(142076.81306950765/8.0),

15574 
REAL_CONST
(142102.69993272264/8.0),

15575 
REAL_CONST
(142128.58797494444/8.0),

15576 
REAL_CONST
(142154.47719606571/8.0),

15577 
REAL_CONST
(142180.36759597904/8.0),

15578 
REAL_CONST
(142206.25917457714/8.0),

15579 
REAL_CONST
(142232.15193175265/8.0),

15580 
REAL_CONST
(142258.04586739838/8.0),

15581 
REAL_CONST
(142283.94098140698/8.0),

15582 
REAL_CONST
(142309.83727367126/8.0),

15583 
REAL_CONST
(142335.73474408401/8.0),

15584 
REAL_CONST
(142361.63339253806/8.0),

15585 
REAL_CONST
(142387.5332189262/8.0),

15586 
REAL_CONST
(142413.43422314132/8.0),

15587 
REAL_CONST
(142439.33640507635/8.0),

15588 
REAL_CONST
(142465.23976462413/8.0),

15589 
REAL_CONST
(142491.14430167765/8.0),

15590 
REAL_CONST
(142517.05001612983/8.0),

15591 
REAL_CONST
(142542.95690787368/8.0),

15592 
REAL_CONST
(142568.86497680223/8.0),

15593 
REAL_CONST
(142594.77422280848/8.0),

15594 
REAL_CONST
(142620.68464578551/8.0),

15595 
REAL_CONST
(142646.5962456264/8.0),

15596 
REAL_CONST
(142672.50902222423/8.0),

15597 
REAL_CONST
(142698.42297547215/8.0),

15598 
REAL_CONST
(142724.33810526333/8.0),

15599 
REAL_CONST
(142750.25441149093/8.0),

15600 
REAL_CONST
(142776.17189404817/8.0),

15601 
REAL_CONST
(142802.09055282827/8.0),

15602 
REAL_CONST
(142828.01038772447/8.0),

15603 
REAL_CONST
(142853.93139863008/8.0),

15604 
REAL_CONST
(142879.85358543837/8.0),

15605 
REAL_CONST
(142905.77694804268/8.0),

15606 
REAL_CONST
(142931.70148633636/8.0),

15607 
REAL_CONST
(142957.62720021277/8.0),

15608 
REAL_CONST
(142983.55408956532/8.0),

15609 
REAL_CONST
(143009.48215428743/8.0),

15610 
REAL_CONST
(143035.41139427255/8.0),

15611 
REAL_CONST
(143061.34180941415/8.0),

15612 
REAL_CONST
(143087.27339960571/8.0),

15613 
REAL_CONST
(143113.20616474075/8.0),

15614 
REAL_CONST
(143139.14010471283/8.0),

15615 
REAL_CONST
(143165.07521941551/8.0),

15616 
REAL_CONST
(143191.01150874238/8.0),

15617 
REAL_CONST
(143216.94897258704/8.0),

15618 
REAL_CONST
(143242.88761084314/8.0),

15619 
REAL_CONST
(143268.82742340435/8.0),

15620 
REAL_CONST
(143294.76841016437/8.0),

15621 
REAL_CONST
(143320.71057101688/8.0),

15622 
REAL_CONST
(143346.65390585564/8.0),

15623 
REAL_CONST
(143372.59841457437/8.0),

15624 
REAL_CONST
(143398.54409706692/8.0),

15625 
REAL_CONST
(143424.49095322701/8.0),

15626 
REAL_CONST
(143450.43898294857/8.0),

15627 
REAL_CONST
(143476.38818612538/8.0),

15628 
REAL_CONST
(143502.33856265133/8.0),

15629 
REAL_CONST
(143528.29011242036/8.0),

15630 
REAL_CONST
(143554.24283532638/8.0),

15631 
REAL_CONST
(143580.19673126334/8.0),

15632 
REAL_CONST
(143606.1518001252/8.0),

15633 
REAL_CONST
(143632.10804180597/8.0),

15634 
REAL_CONST
(143658.06545619969/8.0),

15635 
REAL_CONST
(143684.02404320039/8.0),

15636 
REAL_CONST
(143709.98380270213/8.0),

15637 
REAL_CONST
(143735.944734599/8.0),

15638 
REAL_CONST
(143761.90683878519/8.0),

15639 
REAL_CONST
(143787.87011515474/8.0),

15640 
REAL_CONST
(143813.83456360188/8.0),

15641 
REAL_CONST
(143839.8001840208/8.0),

15642 
REAL_CONST
(143865.76697630569/8.0),

15643 
REAL_CONST
(143891.73494035081/8.0),

15644 
REAL_CONST
(143917.7040760504/8.0),

15645 
REAL_CONST
(143943.67438329876/8.0),

15646 
REAL_CONST
(143969.6458619902/8.0),

15647 
REAL_CONST
(143995.61851201905/8.0),

15648 
REAL_CONST
(144021.59233327967/8.0),

15649 
REAL_CONST
(144047.56732566646/8.0),

15650 
REAL_CONST
(144073.54348907378/8.0),

15651 
REAL_CONST
(144099.52082339607/8.0),

15652 
REAL_CONST
(144125.49932852783/8.0),

15653 
REAL_CONST
(144151.4790043635/8.0),

15654 
REAL_CONST
(144177.45985079758/8.0),

15655 
REAL_CONST
(144203.44186772458/8.0),

15656 
REAL_CONST
(144229.42505503909/8.0),

15657 
REAL_CONST
(144255.40941263564/8.0),

15658 
REAL_CONST
(144281.39494040885/8.0),

15659 
REAL_CONST
(144307.38163825331/8.0),

15660 
REAL_CONST
(144333.36950606373/8.0),

15661 
REAL_CONST
(144359.35854373468/8.0),

15662 
REAL_CONST
(144385.34875116093/8.0),

15663 
REAL_CONST
(144411.34012823718/8.0),

15664 
REAL_CONST
(144437.33267485813/8.0),

15665 
REAL_CONST
(144463.32639091855/8.0),

15666 
REAL_CONST
(144489.32127631325/8.0),

15667 
REAL_CONST
(144515.31733093705/8.0),

15668 
REAL_CONST
(144541.31455468474/8.0),

15669 
REAL_CONST
(144567.3129474512/8.0),

15670 
REAL_CONST
(144593.3125091313/8.0),

15671 
REAL_CONST
(144619.31323961995/8.0),

15672 
REAL_CONST
(144645.31513881206/8.0),

15673 
REAL_CONST
(144671.31820660262/8.0),

15674 
REAL_CONST
(144697.32244288657/8.0),

15675 
REAL_CONST
(144723.32784755889/8.0),

15676 
REAL_CONST
(144749.33442051467/8.0),

15677 
REAL_CONST
(144775.34216164888/8.0),

15678 
REAL_CONST
(144801.35107085665/8.0),

15679 
REAL_CONST
(144827.36114803303/8.0),

15680 
REAL_CONST
(144853.37239307314/8.0),

15681 
REAL_CONST
(144879.38480587213/8.0),

15682 
REAL_CONST
(144905.39838632516/8.0),

15683 
REAL_CONST
(144931.41313432742/8.0),

15684 
REAL_CONST
(144957.4290497741/8.0),

15685 
REAL_CONST
(144983.44613256046/8.0),

15686 
REAL_CONST
(145009.46438258173/8.0),

15687 
REAL_CONST
(145035.48379973322/8.0),

15688 
REAL_CONST
(145061.50438391021/8.0),

15689 
REAL_CONST
(145087.52613500805/8.0),

15690 
REAL_CONST
(145113.54905292206/8.0),

15691 
REAL_CONST
(145139.57313754765/8.0),

15692 
REAL_CONST
(145165.59838878017/8.0),

15693 
REAL_CONST
(145191.62480651509/8.0),

15694 
REAL_CONST
(145217.65239064783/8.0),

15695 
REAL_CONST
(145243.68114107384/8.0),

15696 
REAL_CONST
(145269.71105768863/8.0),

15697 
REAL_CONST
(145295.74214038774/8.0),

15698 
REAL_CONST
(145321.77438906668/8.0),

15699 
REAL_CONST
(145347.80780362099/8.0),

15700 
REAL_CONST
(145373.84238394629/8.0),

15701 
REAL_CONST
(145399.87812993818/8.0),

15702 
REAL_CONST
(145425.91504149229/8.0),

15703 
REAL_CONST
(145451.95311850426/8.0),

15704 
REAL_CONST
(145477.9923608698/8.0),

15705 
REAL_CONST
(145504.03276848458/8.0),

15706 
REAL_CONST
(145530.07434124436/8.0),

15707 
REAL_CONST
(145556.11707904484/8.0),

15708 
REAL_CONST
(145582.16098178181/8.0),

15709 
REAL_CONST
(145608.20604935108/8.0),

15710 
REAL_CONST
(145634.25228164849/8.0),

15711 
REAL_CONST
(145660.29967856981/8.0),

15712 
REAL_CONST
(145686.34824001096/8.0),

15713 
REAL_CONST
(145712.39796586783/8.0),

15714 
REAL_CONST
(145738.4488560363/8.0),

15715 
REAL_CONST
(145764.50091041232/8.0),

15716 
REAL_CONST
(145790.55412889185/8.0),

15717 
REAL_CONST
(145816.60851137087/8.0),

15718 
REAL_CONST
(145842.66405774537/8.0),

15719 
REAL_CONST
(145868.72076791141/8.0),

15720 
REAL_CONST
(145894.77864176501/8.0),

15721 
REAL_CONST
(145920.83767920226/8.0),

15722 
REAL_CONST
(145946.89788011924/8.0),

15723 
REAL_CONST
(145972.95924441208/8.0),

15724 
REAL_CONST
(145999.02177197693/8.0),

15725 
REAL_CONST
(146025.08546270995/8.0),

15726 
REAL_CONST
(146051.15031650732/8.0),

15727 
REAL_CONST
(146077.21633326527/8.0),

15728 
REAL_CONST
(146103.28351288004/8.0),

15729 
REAL_CONST
(146129.35185524789/8.0),

15730 
REAL_CONST
(146155.42136026506/8.0),

15731 
REAL_CONST
(146181.49202782792/8.0),

15732 
REAL_CONST
(146207.56385783272/8.0),

15733 
REAL_CONST
(146233.63685017588/8.0),

15734 
REAL_CONST
(146259.71100475377/8.0),

15735 
REAL_CONST
(146285.78632146274/8.0),

15736 
REAL_CONST
(146311.86280019928/8.0),

15737 
REAL_CONST
(146337.94044085976/8.0),

15738 
REAL_CONST
(146364.01924334071/8.0),

15739 
REAL_CONST
(146390.09920753856/8.0),

15740 
REAL_CONST
(146416.18033334985/8.0),

15741 
REAL_CONST
(146442.26262067116/8.0),

15742 
REAL_CONST
(146468.34606939898/8.0),

15743 
REAL_CONST
(146494.43067942993/8.0),

15744 
REAL_CONST
(146520.51645066062/8.0),

15745 
REAL_CONST
(146546.60338298764/8.0),

15746 
REAL_CONST
(146572.69147630769/8.0),

15747 
REAL_CONST
(146598.78073051744/8.0),

15748 
REAL_CONST
(146624.87114551352/8.0),

15749 
REAL_CONST
(146650.96272119274/8.0),

15750 
REAL_CONST
(146677.05545745179/8.0),

15751 
REAL_CONST
(146703.14935418745/8.0),

15752 
REAL_CONST
(146729.2444112965/8.0),

15753 
REAL_CONST
(146755.34062867577/8.0),

15754 
REAL_CONST
(146781.43800622207/8.0),

15755 
REAL_CONST
(146807.53654383228/8.0),

15756 
REAL_CONST
(146833.63624140329/8.0),

15757 
REAL_CONST
(146859.73709883197/8.0),

15758 
REAL_CONST
(146885.83911601527/8.0),

15759 
REAL_CONST
(146911.94229285014/8.0),

15760 
REAL_CONST
(146938.04662923355/8.0),

15761 
REAL_CONST
(146964.15212506248/8.0),

15762 
REAL_CONST
(146990.25878023397/8.0),

15763 
REAL_CONST
(147016.36659464505/8.0),

15764 
REAL_CONST
(147042.47556819281/8.0),

15765 
REAL_CONST
(147068.58570077427/8.0),

15766 
REAL_CONST
(147094.6969922866/8.0),

15767 
REAL_CONST
(147120.80944262692/8.0),

15768 
REAL_CONST
(147146.92305169237/8.0),

15769 
REAL_CONST
(147173.03781938017/8.0),

15770 
REAL_CONST
(147199.15374558745/8.0),

15771 
REAL_CONST
(147225.27083021149/8.0),

15772 
REAL_CONST
(147251.38907314953/8.0),

15773 
REAL_CONST
(147277.50847429881/8.0),

15774 
REAL_CONST
(147303.62903355664/8.0),

15775 
REAL_CONST
(147329.75075082036/8.0),

15776 
REAL_CONST
(147355.87362598727/8.0),

15777 
REAL_CONST
(147381.99765895473/8.0),

15778 
REAL_CONST
(147408.12284962015/8.0),

15779 
REAL_CONST
(147434.24919788091/8.0),

15780 
REAL_CONST
(147460.37670363448/8.0),

15781 
REAL_CONST
(147486.50536677826/8.0),

15782 
REAL_CONST
(147512.63518720976/8.0),

15783 
REAL_CONST
(147538.76616482646/8.0),

15784 
REAL_CONST
(147564.89829952587/8.0),

15785 
REAL_CONST
(147591.03159120557/8.0),

15786 
REAL_CONST
(147617.16603976308/8.0),

15787 
REAL_CONST
(147643.30164509601/8.0),

15788 
REAL_CONST
(147669.43840710199/8.0),

15789 
REAL_CONST
(147695.57632567859/8.0),

15790 
REAL_CONST
(147721.71540072354/8.0),

15791 
REAL_CONST
(147747.85563213445/8.0),

15792 
REAL_CONST
(147773.99701980909/8.0),

15793 
REAL_CONST
(147800.13956364512/8.0),

15794 
REAL_CONST
(147826.28326354033/8.0),

15795 
REAL_CONST
(147852.42811939248/8.0),

15796 
REAL_CONST
(147878.57413109933/8.0),

15797 
REAL_CONST
(147904.72129855872/8.0),

15798 
REAL_CONST
(147930.86962166851/8.0),

15799 
REAL_CONST
(147957.01910032652/8.0),

15800 
REAL_CONST
(147983.16973443062/8.0),

15801 
REAL_CONST
(148009.32152387875/8.0),

15802 
REAL_CONST
(148035.47446856883/8.0),

15803 
REAL_CONST
(148061.62856839882/8.0),

15804 
REAL_CONST
(148087.78382326665/8.0),

15805 
REAL_CONST
(148113.94023307035/8.0),

15806 
REAL_CONST
(148140.09779770792/8.0),

15807 
REAL_CONST
(148166.25651707739/8.0),

15808 
REAL_CONST
(148192.41639107687/8.0),

15809 
REAL_CONST
(148218.57741960438/8.0),

15810 
REAL_CONST
(148244.73960255808/8.0),

15811 
REAL_CONST
(148270.90293983606/8.0),

15812 
REAL_CONST
(148297.0674313365/8.0),

15813 
REAL_CONST
(148323.23307695755/8.0),

15814 
REAL_CONST
(148349.39987659742/8.0),

15815 
REAL_CONST
(148375.56783015432/8.0),

15816 
REAL_CONST
(148401.73693752653/8.0),

15817 
REAL_CONST
(148427.90719861226/8.0),

15818 
REAL_CONST
(148454.07861330983/8.0),

15819 
REAL_CONST
(148480.25118151752/8.0),

15820 
REAL_CONST
(148506.42490313368/8.0),

15821 
REAL_CONST
(148532.59977805667/8.0),

15822 
REAL_CONST
(148558.77580618486/8.0),

15823 
REAL_CONST
(148584.95298741665/8.0),

15824 
REAL_CONST
(148611.13132165043/8.0),

15825 
REAL_CONST
(148637.31080878471/8.0),

15826 
REAL_CONST
(148663.49144871789/8.0),

15827 
REAL_CONST
(148689.6732413485/8.0),

15828 
REAL_CONST
(148715.85618657502/8.0),

15829 
REAL_CONST
(148742.040284296/8.0),

15830 
REAL_CONST
(148768.22553440998/8.0),

15831 
REAL_CONST
(148794.41193681557/8.0),

15832 
REAL_CONST
(148820.59949141133/8.0),

15833 
REAL_CONST
(148846.78819809589/8.0),

15834 
REAL_CONST
(148872.97805676793/8.0),

15835 
REAL_CONST
(148899.16906732606/8.0),

15836 
REAL_CONST
(148925.36122966901/8.0),

15837 
REAL_CONST
(148951.55454369547/8.0),

15838 
REAL_CONST
(148977.74900930419/8.0),

15839 
REAL_CONST
(149003.9446263939/8.0),

15840 
REAL_CONST
(149030.1413948634/8.0),

15841 
REAL_CONST
(149056.33931461151/8.0),

15842 
REAL_CONST
(149082.53838553699/8.0),

15843 
REAL_CONST
(149108.73860753875/8.0),

15844 
REAL_CONST
(149134.9399805156/8.0),

15845 
REAL_CONST
(149161.14250436646/8.0),

15846 
REAL_CONST
(149187.34617899026/8.0),

15847 
REAL_CONST
(149213.5510042859/8.0),

15848 
REAL_CONST
(149239.75698015234/8.0),

15849 
REAL_CONST
(149265.96410648854/8.0),

15850 
REAL_CONST
(149292.17238319354/8.0),

15851 
REAL_CONST
(149318.38181016635/8.0),

15852 
REAL_CONST
(149344.59238730598/8.0),

15853 
REAL_CONST
(149370.80411451156/8.0),

15854 
REAL_CONST
(149397.01699168212/8.0),

15855 
REAL_CONST
(149423.23101871679/8.0),

15856 
REAL_CONST
(149449.44619551473/8.0),

15857 
REAL_CONST
(149475.66252197503/8.0),

15858 
REAL_CONST
(149501.87999799693/8.0),

15859 
REAL_CONST
(149528.0986234796/8.0),

15860 
REAL_CONST
(149554.31839832227/8.0),

15861 
REAL_CONST
(149580.53932242419/8.0),

15862 
REAL_CONST
(149606.76139568459/8.0),

15863 
REAL_CONST
(149632.98461800278/8.0),

15864 
REAL_CONST
(149659.20898927809/8.0),

15865 
REAL_CONST
(149685.43450940982/8.0),

15866 
REAL_CONST
(149711.66117829733/8.0),

15867 
REAL_CONST
(149737.88899584001/8.0),

15868 
REAL_CONST
(149764.11796193724/8.0),

15869 
REAL_CONST
(149790.34807648844/8.0),

15870 
REAL_CONST
(149816.57933939309/8.0),

15871 
REAL_CONST
(149842.81175055061/8.0),

15872 
REAL_CONST
(149869.04530986046/8.0),

15873 
REAL_CONST
(149895.28001722222/8.0),

15874 
REAL_CONST
(149921.51587253538/8.0),

15875 
REAL_CONST
(149947.75287569952/8.0),

15876 
REAL_CONST
(149973.99102661415/8.0),

15877 
REAL_CONST
(150000.23032517891/8.0),

15878 
REAL_CONST
(150026.47077129342/8.0),

15879 
REAL_CONST
(150052.71236485732/8.0),

15880 
REAL_CONST
(150078.95510577026/8.0),

15881 
REAL_CONST
(150105.1989939319/8.0),

15882 
REAL_CONST
(150131.444029242/8.0),

15883 
REAL_CONST
(150157.69021160025/8.0),

15884 
REAL_CONST
(150183.93754090639/8.0),

15885 
REAL_CONST
(150210.18601706024/8.0),

15886 
REAL_CONST
(150236.43563996154/8.0),

15887 
REAL_CONST
(150262.68640951012/8.0),

15888 
REAL_CONST
(150288.93832560582/8.0),

15889 
REAL_CONST
(150315.19138814852/8.0),

15890 
REAL_CONST
(150341.44559703805/8.0),

15891 
REAL_CONST
(150367.70095217437/8.0),

15892 
REAL_CONST
(150393.95745345735/8.0),

15893 
REAL_CONST
(150420.21510078697/8.0),

15894 
REAL_CONST
(150446.47389406321/8.0),

15895 
REAL_CONST
(150472.73383318601/8.0),

15896 
REAL_CONST
(150498.99491805542/8.0),

15897 
REAL_CONST
(150525.25714857146/8.0),

15898 
REAL_CONST
(150551.52052463419/8.0),

15899 
REAL_CONST
(150577.78504614369/8.0),

15900 
REAL_CONST
(150604.05071300003/8.0),

15901 
REAL_CONST
(150630.31752510337/8.0),

15902 
REAL_CONST
(150656.58548235384/8.0),

15903 
REAL_CONST
(150682.85458465159/8.0),

15904 
REAL_CONST
(150709.1248318968/8.0),

15905 
REAL_CONST
(150735.39622398972/8.0),

15906 
REAL_CONST
(150761.66876083051/8.0),

15907 
REAL_CONST
(150787.9424423195/8.0),

15908 
REAL_CONST
(150814.21726835691/8.0),

15909 
REAL_CONST
(150840.49323884305/8.0),

15910 
REAL_CONST
(150866.77035367821/8.0),

15911 
REAL_CONST
(150893.04861276277/8.0),

15912 
REAL_CONST
(150919.32801599705/8.0),

15913 
REAL_CONST
(150945.60856328148/8.0),

15914 
REAL_CONST
(150971.89025451642/8.0),

15915 
REAL_CONST
(150998.17308960229/8.0),

15916 
REAL_CONST
(151024.45706843957/8.0),

15917 
REAL_CONST
(151050.74219092872/8.0),

15918 
REAL_CONST
(151077.02845697021/8.0),

15919 
REAL_CONST
(151103.31586646455/8.0),

15920 
REAL_CONST
(151129.60441931229/8.0),

15921 
REAL_CONST
(151155.894115414/8.0),

15922 
REAL_CONST
(151182.1849546702/8.0),

15923 
REAL_CONST
(151208.47693698155/8.0),

15924 
REAL_CONST
(151234.77006224863/8.0),

15925 
REAL_CONST
(151261.06433037209/8.0),

15926 
REAL_CONST
(151287.35974125259/8.0),

15927 
REAL_CONST
(151313.65629479082/8.0),

15928 
REAL_CONST
(151339.95399088747/8.0),

15929 
REAL_CONST
(151366.25282944329/8.0),

15930 
REAL_CONST
(151392.55281035902/8.0),

15931 
REAL_CONST
(151418.85393353543/8.0),

15932 
REAL_CONST
(151445.1561988733/8.0),

15933 
REAL_CONST
(151471.45960627345/8.0),

15934 
REAL_CONST
(151497.76415563675/8.0),

15935 
REAL_CONST
(151524.06984686397/8.0),

15936 
REAL_CONST
(151550.37667985607/8.0),

15937 
REAL_CONST
(151576.68465451393/8.0),

15938 
REAL_CONST
(151602.99377073845/8.0),

15939 
REAL_CONST
(151629.30402843058/8.0),

15940 
REAL_CONST
(151655.61542749128/8.0),

15941 
REAL_CONST
(151681.92796782157/8.0),

15942 
REAL_CONST
(151708.24164932242/8.0),

15943 
REAL_CONST
(151734.55647189484/8.0),

15944 
REAL_CONST
(151760.87243543993/8.0),

15945 
REAL_CONST
(151787.18953985872/8.0),

15946 
REAL_CONST
(151813.50778505235/8.0),

15947 
REAL_CONST
(151839.82717092187/8.0),

15948 
REAL_CONST
(151866.14769736846/8.0),

15949 
REAL_CONST
(151892.46936429327/8.0),

15950 
REAL_CONST
(151918.79217159748/8.0),

15951 
REAL_CONST
(151945.11611918229/8.0),

15952 
REAL_CONST
(151971.44120694889/8.0),

15953 
REAL_CONST
(151997.76743479856/8.0),

15954 
REAL_CONST
(152024.09480263255/8.0),

15955 
REAL_CONST
(152050.42331035214/8.0),

15956 
REAL_CONST
(152076.75295785864/8.0),

15957 
REAL_CONST
(152103.08374505339/8.0),

15958 
REAL_CONST
(152129.41567183775/8.0),

15959 
REAL_CONST
(152155.74873811303/8.0),

15960 
REAL_CONST
(152182.08294378067/8.0),

15961 
REAL_CONST
(152208.41828874208/8.0),

15962 
REAL_CONST
(152234.75477289871/8.0),

15963 
REAL_CONST
(152261.09239615197/8.0),

15964 
REAL_CONST
(152287.43115840337/8.0),

15965 
REAL_CONST
(152313.77105955439/8.0),

15966 
REAL_CONST
(152340.11209950657/8.0),

15967 
REAL_CONST
(152366.45427816146/8.0),

15968 
REAL_CONST
(152392.79759542056/8.0),

15969 
REAL_CONST
(152419.14205118554/8.0),

15970 
REAL_CONST
(152445.48764535793/8.0),

15971 
REAL_CONST
(152471.8343778394/8.0),

15972 
REAL_CONST
(152498.18224853161/8.0),

15973 
REAL_CONST
(152524.53125733617/8.0),

15974 
REAL_CONST
(152550.88140415482/8.0),

15975 
REAL_CONST
(152577.23268888926/8.0),

15976 
REAL_CONST
(152603.58511144121/8.0),

15977 
REAL_CONST
(152629.93867171241/8.0),

15978 
REAL_CONST
(152656.29336960468/8.0),

15979 
REAL_CONST
(152682.64920501978/8.0),

15980 
REAL_CONST
(152709.00617785956/8.0),

15981 
REAL_CONST
(152735.36428802583/8.0),

15982 
REAL_CONST
(152761.72353542043/8.0),

15983 
REAL_CONST
(152788.08391994529/8.0),

15984 
REAL_CONST
(152814.44544150229/8.0),

15985 
REAL_CONST
(152840.80809999333/8.0),

15986 
REAL_CONST
(152867.17189532038/8.0),

15987 
REAL_CONST
(152893.53682738543/8.0),

15988 
REAL_CONST
(152919.90289609041/8.0),

15989 
REAL_CONST
(152946.27010133737/8.0),

15990 
REAL_CONST
(152972.63844302832/8.0),

15991 
REAL_CONST
(152999.00792106529/8.0),

15992 
REAL_CONST
(153025.37853535041/8.0),

15993 
REAL_CONST
(153051.7502857857/8.0),

15994 
REAL_CONST
(153078.12317227334/8.0),

15995 
REAL_CONST
(153104.4971947154/8.0),

15996 
REAL_CONST
(153130.8723530141/8.0),

15997 
REAL_CONST
(153157.24864707157/8.0),

15998 
REAL_CONST
(153183.62607679001/8.0),

15999 
REAL_CONST
(153210.00464207167/8.0),

16000 
REAL_CONST
(153236.38434281875/8.0),

16001 
REAL_CONST
(153262.76517893354/8.0),

16002 
REAL_CONST
(153289.14715031831/8.0),

16003 
REAL_CONST
(153315.53025687535/8.0),

16004 
REAL_CONST
(153341.91449850702/8.0),

16005 
REAL_CONST
(153368.2998751156/8.0),

16006 
REAL_CONST
(153394.68638660354/8.0),

16007 
REAL_CONST
(153421.07403287315/8.0),

16008 
REAL_CONST
(153447.46281382689/8.0),

16009 
REAL_CONST
(153473.85272936718/8.0),

16010 
REAL_CONST
(153500.24377939643/8.0),

16011 
REAL_CONST
(153526.63596381716/8.0),

16012 
REAL_CONST
(153553.02928253182/8.0),

16013 
REAL_CONST
(153579.42373544298/8.0),

16014 
REAL_CONST
(153605.81932245308/8.0),

16015 
REAL_CONST
(153632.21604346478/8.0),

16016 
REAL_CONST
(153658.61389838057/8.0),

16017 
REAL_CONST
(153685.0128871031/8.0),

16018 
REAL_CONST
(153711.41300953497/8.0),

16019 
REAL_CONST
(153737.81426557881/8.0),

16020 
REAL_CONST
(153764.21665513728/8.0),

16021 
REAL_CONST
(153790.62017811305/8.0),

16022 
REAL_CONST
(153817.02483440886/8.0),

16023 
REAL_CONST
(153843.43062392739/8.0),

16024 
REAL_CONST
(153869.83754657139/8.0),

16025 
REAL_CONST
(153896.24560224367/8.0),

16026 
REAL_CONST
(153922.65479084692/8.0),

16027 
REAL_CONST
(153949.06511228404/8.0),

16028 
REAL_CONST
(153975.4765664578/8.0),

16029 
REAL_CONST
(154001.88915327107/8.0),

16030 
REAL_CONST
(154028.30287262669/8.0),

16031 
REAL_CONST
(154054.71772442761/8.0),

16032 
REAL_CONST
(154081.13370857667/8.0),

16033 
REAL_CONST
(154107.55082497682/8.0),

16034 
REAL_CONST
(154133.96907353101/8.0),

16035 
REAL_CONST
(154160.38845414223/8.0),

16036 
REAL_CONST
(154186.80896671346/8.0),

16037 
REAL_CONST
(154213.23061114774/8.0),

16038 
REAL_CONST
(154239.65338734805/8.0),

16039 
REAL_CONST
(154266.07729521746/8.0),

16040 
REAL_CONST
(154292.50233465908/8.0),

16041 
REAL_CONST
(154318.92850557598/8.0),

16042 
REAL_CONST
(154345.35580787127/8.0),

16043 
REAL_CONST
(154371.7842414481/8.0),

16044 
REAL_CONST
(154398.21380620965/8.0),

16045 
REAL_CONST
(154424.64450205903/8.0),

16046 
REAL_CONST
(154451.07632889951/8.0),

16047 
REAL_CONST
(154477.50928663427/8.0),

16048 
REAL_CONST
(154503.94337516659/8.0),

16049 
REAL_CONST
(154530.37859439969/8.0),

16050 
REAL_CONST
(154556.81494423689/8.0),

16051 
REAL_CONST
(154583.25242458144/8.0),

16052 
REAL_CONST
(154609.69103533673/8.0),

16053 
REAL_CONST
(154636.13077640603/8.0),

16054 
REAL_CONST
(154662.57164769279/8.0),

16055 
REAL_CONST
(154689.01364910032/8.0),

16056 
REAL_CONST
(154715.45678053208/8.0),

16057 
REAL_CONST
(154741.90104189145/8.0),

16058 
REAL_CONST
(154768.34643308193/8.0),

16059 
REAL_CONST
(154794.79295400696/8.0),

16060 
REAL_CONST
(154821.24060457002/8.0),

16061 
REAL_CONST
(154847.68938467462/8.0),

16062 
REAL_CONST
(154874.13929422433/8.0),

16063 
REAL_CONST
(154900.59033312264/8.0),

16064 
REAL_CONST
(154927.04250127316/8.0),

16065 
REAL_CONST
(154953.49579857948/8.0),

16066 
REAL_CONST
(154979.95022494521/8.0),

16067 
REAL_CONST
(155006.40578027396/8.0),

16068 
REAL_CONST
(155032.86246446942/8.0),

16069 
REAL_CONST
(155059.32027743524/8.0),

16070 
REAL_CONST
(155085.77921907514/8.0),

16071 
REAL_CONST
(155112.2392892928/8.0),

16072 
REAL_CONST
(155138.70048799197/8.0),

16073 
REAL_CONST
(155165.16281507642/8.0),

16074 
REAL_CONST
(155191.62627044989/8.0),

16075 
REAL_CONST
(155218.09085401625/8.0),

16076 
REAL_CONST
(155244.55656567923/8.0),

16077 
REAL_CONST
(155271.02340534274/8.0),

16078 
REAL_CONST
(155297.49137291059/8.0),

16079 
REAL_CONST
(155323.96046828668/8.0),

16080 
REAL_CONST
(155350.4306913749/8.0),

16081 
REAL_CONST
(155376.90204207919/8.0),

16082 
REAL_CONST
(155403.37452030348/8.0),

16083 
REAL_CONST
(155429.84812595171/8.0),

16084 
REAL_CONST
(155456.32285892789/8.0),

16085 
REAL_CONST
(155482.79871913602/8.0),

16086 
REAL_CONST
(155509.27570648011/8.0),

16087 
REAL_CONST
(155535.75382086422/8.0),

16088 
REAL_CONST
(155562.23306219239/8.0),

16089 
REAL_CONST
(155588.71343036872/8.0),

16090 
REAL_CONST
(155615.19492529731/8.0),

16091 
REAL_CONST
(155641.67754688227/8.0),

16092 
REAL_CONST
(155668.16129502779/8.0),

16093 
REAL_CONST
(155694.64616963797/8.0),

16094 
REAL_CONST
(155721.13217061706/8.0),

16095 
REAL_CONST
(155747.61929786921/8.0),

16096 
REAL_CONST
(155774.10755129869/8.0),

16097 
REAL_CONST
(155800.59693080973/8.0),

16098 
REAL_CONST
(155827.08743630661/8.0),

16099 
REAL_CONST
(155853.57906769359/8.0),

16100 
REAL_CONST
(155880.07182487496/8.0),

16101 
REAL_CONST
(155906.56570775513/8.0),

16102 
REAL_CONST
(155933.06071623837/8.0),

16103 
REAL_CONST
(155959.55685022907/8.0),

16104 
REAL_CONST
(155986.05410963166/8.0),

16105 
REAL_CONST
(156012.5524943505/8.0),

16106 
REAL_CONST
(156039.05200429002/8.0),

16107 
REAL_CONST
(156065.55263935472/8.0),

16108 
REAL_CONST
(156092.054399449/8.0),

16109 
REAL_CONST
(156118.5572844774/8.0),

16110 
REAL_CONST
(156145.06129434443/8.0),

16111 
REAL_CONST
(156171.5664289546/8.0),

16112 
REAL_CONST
(156198.07268821247/8.0),

16113 
REAL_CONST
(156224.5800720226/8.0),

16114 
REAL_CONST
(156251.08858028959/8.0),

16115 
REAL_CONST
(156277.59821291809/8.0),

16116 
REAL_CONST
(156304.10896981266/8.0),

16117 
REAL_CONST
(156330.62085087801/8.0),

16118 
REAL_CONST
(156357.1338560188/8.0),

16119 
REAL_CONST
(156383.64798513969/8.0),

16120 
REAL_CONST
(156410.16323814544/8.0),

16121 
REAL_CONST
(156436.67961494075/8.0),

16122 
REAL_CONST
(156463.1971154304/8.0),

16123 
REAL_CONST
(156489.71573951913/8.0),

16124 
REAL_CONST
(156516.23548711176/8.0),

16125 
REAL_CONST
(156542.75635811311/8.0),

16126 
REAL_CONST
(156569.27835242799/8.0),

16127 
REAL_CONST
(156595.80146996127/8.0),

16128 
REAL_CONST
(156622.32571061782/8.0),

16129 
REAL_CONST
(156648.85107430254/8.0),

16130 
REAL_CONST
(156675.37756092031/8.0),

16131 
REAL_CONST
(156701.90517037612/8.0),

16132 
REAL_CONST
(156728.43390257491/8.0),

16133 
REAL_CONST
(156754.96375742162/8.0),

16134 
REAL_CONST
(156781.49473482129/8.0),

16135 
REAL_CONST
(156808.02683467892/8.0),

16136 
REAL_CONST
(156834.5600568995/8.0),

16137 
REAL_CONST
(156861.09440138817/8.0),

16138 
REAL_CONST
(156887.62986804993/8.0),

16139 
REAL_CONST
(156914.16645678994/8.0),

16140 
REAL_CONST
(156940.70416751326/8.0),

16141 
REAL_CONST
(156967.24300012505/8.0),

16142 
REAL_CONST
(156993.78295453047/8.0),

16143 
REAL_CONST
(157020.32403063469/8.0),

16144 
REAL_CONST
(157046.8662283429/8.0),

16145 
REAL_CONST
(157073.40954756032/8.0),

16146 
REAL_CONST
(157099.9539881922/8.0),

16147 
REAL_CONST
(157126.49955014378/8.0),

16148 
REAL_CONST
(157153.04623332032/8.0),

16149 
REAL_CONST
(157179.59403762716/8.0),

16150 
REAL_CONST
(157206.14296296958/8.0),

16151 
REAL_CONST
(157232.69300925292/8.0),

16152 
REAL_CONST
(157259.24417638258/8.0),

16153 
REAL_CONST
(157285.79646426387/8.0),

16154 
REAL_CONST
(157312.34987280221/8.0),

16155 
REAL_CONST
(157338.90440190304/8.0),

16156 
REAL_CONST
(157365.46005147175/8.0),

16157 
REAL_CONST
(157392.01682141385/8.0),

16158 
REAL_CONST
(157418.57471163478/8.0),

16159 
REAL_CONST
(157445.13372204005/8.0),

16160 
REAL_CONST
(157471.69385253513/8.0),

16161 
REAL_CONST
(157498.25510302564/8.0),

16162 
REAL_CONST
(157524.81747341706/8.0),

16163 
REAL_CONST
(157551.38096361503/8.0),

16164 
REAL_CONST
(157577.9455735251/8.0),

16165 
REAL_CONST
(157604.51130305286/8.0),

16166 
REAL_CONST
(157631.07815210402/8.0),

16167 
REAL_CONST
(157657.64612058419/8.0),

16168 
REAL_CONST
(157684.21520839902/8.0),

16169 
REAL_CONST
(157710.78541545427/8.0),

16170 
REAL_CONST
(157737.35674165559/8.0),

16171 
REAL_CONST
(157763.92918690876/8.0),

16172 
REAL_CONST
(157790.50275111952/8.0),

16173 
REAL_CONST
(157817.07743419363/8.0),

16174 
REAL_CONST
(157843.65323603692/8.0),

16175 
REAL_CONST
(157870.23015655516/8.0),

16176 
REAL_CONST
(157896.80819565422/8.0),

16177 
REAL_CONST
(157923.3873532399/8.0),

16178 
REAL_CONST
(157949.96762921812/8.0),

16179 
REAL_CONST
(157976.54902349479/8.0),

16180 
REAL_CONST
(158003.13153597576/8.0),

16181 
REAL_CONST
(158029.71516656701/8.0),

16182 
REAL_CONST
(158056.29991517449/8.0),

16183 
REAL_CONST
(158082.88578170416/8.0),

16184 
REAL_CONST
(158109.47276606198/8.0),

16185 
REAL_CONST
(158136.06086815402/8.0),

16186 
REAL_CONST
(158162.65008788629/8.0),

16187 
REAL_CONST
(158189.24042516484/8.0),

16188 
REAL_CONST
(158215.83187989573/8.0),

16189 
REAL_CONST
(158242.42445198505/8.0),

16190 
REAL_CONST
(158269.01814133892/8.0),

16191 
REAL_CONST
(158295.61294786347/8.0),

16192 
REAL_CONST
(158322.20887146486/8.0),

16193 
REAL_CONST
(158348.80591204923/8.0),

16194 
REAL_CONST
(158375.4040695228/8.0),

16195 
REAL_CONST
(158402.00334379176/8.0),

16196 
REAL_CONST
(158428.60373476235/8.0),

16197 
REAL_CONST
(158455.2052423408/8.0),

16198 
REAL_CONST
(158481.80786643337/8.0),

16199 
REAL_CONST
(158508.41160694641/8.0),

16200 
REAL_CONST
(158535.01646378616/8.0),

16201 
REAL_CONST
(158561.62243685898/8.0),

16202 
REAL_CONST
(158588.2295260712/8.0),

16203 
REAL_CONST
(158614.8377313292/8.0),

16204 
REAL_CONST
(158641.44705253936/8.0),

16205 
REAL_CONST
(158668.05748960807/8.0),

16206 
REAL_CONST
(158694.66904244179/8.0),

16207 
REAL_CONST
(158721.28171094693/8.0),

16208 
REAL_CONST
(158747.89549502998/8.0),

16209 
REAL_CONST
(158774.5103945974/8.0),

16210 
REAL_CONST
(158801.12640955573/8.0),

16211 
REAL_CONST
(158827.74353981143/8.0),

16212 
REAL_CONST
(158854.36178527112/8.0),

16213 
REAL_CONST
(158880.9811458413/8.0),

16214 
REAL_CONST
(158907.60162142856/8.0),

16215 
REAL_CONST
(158934.22321193956/8.0),

16216 
REAL_CONST
(158960.84591728085/8.0),

16217 
REAL_CONST
(158987.46973735912/8.0),

16218 
REAL_CONST
(159014.09467208097/8.0),

16219 
REAL_CONST
(159040.72072135314/8.0),

16220 
REAL_CONST
(159067.3478850823/8.0),

16221 
REAL_CONST
(159093.97616317519/8.0),

16222 
REAL_CONST
(159120.60555553852/8.0),

16223 
REAL_CONST
(159147.23606207906/8.0),

16224 
REAL_CONST
(159173.8676827036/8.0),

16225 
REAL_CONST
(159200.50041731889/8.0),

16226 
REAL_CONST
(159227.13426583182/8.0),

16227 
REAL_CONST
(159253.76922814918/8.0),

16228 
REAL_CONST
(159280.40530417781/8.0),

16229 
REAL_CONST
(159307.04249382461/8.0),

16230 
REAL_CONST
(159333.68079699649/8.0),

16231 
REAL_CONST
(159360.32021360032/8.0),

16232 
REAL_CONST
(159386.96074354305/8.0),

16233 
REAL_CONST
(159413.60238673165/8.0),

16234 
REAL_CONST
(159440.24514307309/8.0),

16235 
REAL_CONST
(159466.88901247433/8.0),

16236 
REAL_CONST
(159493.53399484244/8.0),

16237 
REAL_CONST
(159520.18009008438/8.0),

16238 
REAL_CONST
(159546.82729810724/8.0),

16239 
REAL_CONST
(159573.47561881805/8.0),

16240 
REAL_CONST
(159600.12505212394/8.0),

16241 
REAL_CONST
(159626.77559793202/8.0),

16242 
REAL_CONST
(159653.42725614941/8.0),

16243 
REAL_CONST
(159680.08002668325/8.0),

16244 
REAL_CONST
(159706.73390944069/8.0),

16245 
REAL_CONST
(159733.38890432892/8.0),

16246 
REAL_CONST
(159760.04501125516/8.0),

16247 
REAL_CONST
(159786.70223012666/8.0),

16248 
REAL_CONST
(159813.36056085059/8.0),

16249 
REAL_CONST
(159840.02000333427/8.0),

16250 
REAL_CONST
(159866.68055748497/8.0),

16251 
REAL_CONST
(159893.34222320997/8.0),

16252 
REAL_CONST
(159920.00500041663/8.0),

16253 
REAL_CONST
(159946.66888901225/8.0),

16254 
REAL_CONST
(159973.33388890422/8.0),

16255 
REAL_CONST
(159999.99999999988/8.0),

16256 
REAL_CONST
(160026.66722220668/8.0),

16257 
REAL_CONST
(160053.33555543202/8.0),

16258 
REAL_CONST
(160080.0049995833/8.0),

16259 
REAL_CONST
(160106.67555456801/8.0),

16260 
REAL_CONST
(160133.3472202936/8.0),

16261 
REAL_CONST
(160160.0199966676/8.0),

16262 
REAL_CONST
(160186.6938835975/8.0),

16263 
REAL_CONST
(160213.36888099083/8.0),

16264 
REAL_CONST
(160240.04498875517/8.0),

16265 
REAL_CONST
(160266.72220679806/8.0),

16266 
REAL_CONST
(160293.40053502709/8.0),

16267 
REAL_CONST
(160320.07997334987/8.0),

16268 
REAL_CONST
(160346.76052167406/8.0),

16269 
REAL_CONST
(160373.44217990729/8.0),

16270 
REAL_CONST
(160400.1249479572/8.0),

16271 
REAL_CONST
(160426.80882573154/8.0),

16272 
REAL_CONST
(160453.49381313793/8.0),

16273 
REAL_CONST
(160480.17991008417/8.0),

16274 
REAL_CONST
(160506.86711647795/8.0),

16275 
REAL_CONST
(160533.55543222709/8.0),

16276 
REAL_CONST
(160560.24485723933/8.0),

16277 
REAL_CONST
(160586.93539142248/8.0),

16278 
REAL_CONST
(160613.62703468435/8.0),

16279 
REAL_CONST
(160640.31978693281/8.0),

16280 
REAL_CONST
(160667.01364807569/8.0),

16281 
REAL_CONST
(160693.70861802087/8.0),

16282 
REAL_CONST
(160720.40469667627/8.0),

16283 
REAL_CONST
(160747.1018839498/8.0),

16284 
REAL_CONST
(160773.80017974938/8.0),

16285 
REAL_CONST
(160800.49958398298/8.0),

16286 
REAL_CONST
(160827.20009655855/8.0),

16287 
REAL_CONST
(160853.90171738411/8.0),

16288 
REAL_CONST
(160880.60444636765/8.0),

16289 
REAL_CONST
(160907.30828341722/8.0),

16290 
REAL_CONST
(160934.01322844089/8.0),

16291 
REAL_CONST
(160960.71928134665/8.0),

16292 
REAL_CONST
(160987.42644204266/8.0),

16293 
REAL_CONST
(161014.13471043704/8.0),

16294 
REAL_CONST
(161040.84408643784/8.0),

16295 
REAL_CONST
(161067.55456995327/8.0),

16296 
REAL_CONST
(161094.26616089148/8.0),

16297 
REAL_CONST
(161120.97885916062/8.0),

16298 
REAL_CONST
(161147.69266466892/8.0),

16299 
REAL_CONST
(161174.40757732463/8.0),

16300 
REAL_CONST
(161201.12359703594/8.0),

16301 
REAL_CONST
(161227.84072371112/8.0),

16302 
REAL_CONST
(161254.55895725847/8.0),

16303 
REAL_CONST
(161281.27829758628/8.0),

16304 
REAL_CONST
(161307.99874460287/8.0),

16305 
REAL_CONST
(161334.72029821656/8.0),

16306 
REAL_CONST
(161361.44295833571/8.0),

16307 
REAL_CONST
(161388.1667248687/8.0),

16308 
REAL_CONST
(161414.89159772391/8.0),

16309 
REAL_CONST
(161441.61757680977/8.0),

16310 
REAL_CONST
(161468.34466203468/8.0),

16311 
REAL_CONST
(161495.07285330712/8.0),

16312 
REAL_CONST
(161521.80215053557/8.0),

16313 
REAL_CONST
(161548.53255362847/8.0),

16314 
REAL_CONST
(161575.26406249436/8.0),

16315 
REAL_CONST
(161601.99667704175/8.0),

16316 
REAL_CONST
(161628.7303971792/8.0),

16317 
REAL_CONST
(161655.46522281526/8.0),

16318 
REAL_CONST
(161682.20115385848/8.0),

16319 
REAL_CONST
(161708.93819021754/8.0),

16320 
REAL_CONST
(161735.67633180099/8.0),

16321 
REAL_CONST
(161762.41557851751/8.0),

16322 
REAL_CONST
(161789.15593027571/8.0),

16323 
REAL_CONST
(161815.89738698432/8.0),

16324 
REAL_CONST
(161842.63994855201/8.0),

16325 
REAL_CONST
(161869.38361488748/8.0),

16326 
REAL_CONST
(161896.1283858995/8.0),

16327 
REAL_CONST
(161922.87426149679/8.0),

16328 
REAL_CONST
(161949.62124158812/8.0),

16329 
REAL_CONST
(161976.36932608229/8.0),

16330 
REAL_CONST
(162003.1185148881/8.0),

16331 
REAL_CONST
(162029.8688079144/8.0),

16332 
REAL_CONST
(162056.62020507001/8.0),

16333 
REAL_CONST
(162083.37270626382/8.0),

16334 
REAL_CONST
(162110.12631140469/8.0),

16335 
REAL_CONST
(162136.88102040152/8.0),

16336 
REAL_CONST
(162163.63683316324/8.0),

16337 
REAL_CONST
(162190.39374959879/8.0),

16338 
REAL_CONST
(162217.15176961714/8.0),

16339 
REAL_CONST
(162243.91089312723/8.0),

16340 
REAL_CONST
(162270.67112003808/8.0),

16341 
REAL_CONST
(162297.43245025873/8.0),

16342 
REAL_CONST
(162324.19488369819/8.0),

16343 
REAL_CONST
(162350.9584202655/8.0),

16344 
REAL_CONST
(162377.72305986975/8.0),

16345 
REAL_CONST
(162404.48880242003/8.0),

16346 
REAL_CONST
(162431.25564782543/8.0),

16347 
REAL_CONST
(162458.02359599507/8.0),

16348 
REAL_CONST
(162484.79264683815/8.0),

16349 
REAL_CONST
(162511.56280026378/8.0),

16350 
REAL_CONST
(162538.33405618116/8.0),

16351 
REAL_CONST
(162565.10641449949/8.0),

16352 
REAL_CONST
(162591.87987512801/8.0),

16353 
REAL_CONST
(162618.65443797593/8.0),

16354 
REAL_CONST
(162645.43010295252/8.0),

16355 
REAL_CONST
(162672.20686996708/8.0),

16356 
REAL_CONST
(162698.98473892888/8.0),

16357 
REAL_CONST
(162725.76370974723/8.0),

16358 
REAL_CONST
(162752.54378233149/8.0),

16359 
REAL_CONST
(162779.32495659095/8.0),

16360 
REAL_CONST
(162806.10723243505/8.0),

16361 
REAL_CONST
(162832.89060977317/8.0),

16362 
REAL_CONST
(162859.67508851466/8.0),

16363 
REAL_CONST
(162886.46066856899/8.0),

16364 
REAL_CONST
(162913.24734984562/8.0),

16365 
REAL_CONST
(162940.03513225398/8.0),

16366 
REAL_CONST
(162966.82401570358/8.0),

16367 
REAL_CONST
(162993.6140001039/8.0),

16368 
REAL_CONST
(163020.40508536444/8.0),

16369 
REAL_CONST
(163047.19727139481/8.0),

16370 
REAL_CONST
(163073.99055810447/8.0),

16371 
REAL_CONST
(163100.78494540305/8.0),

16372 
REAL_CONST
(163127.58043320014/8.0),

16373 
REAL_CONST
(163154.37702140535/8.0),

16374 
REAL_CONST
(163181.17470992831/8.0),

16375 
REAL_CONST
(163207.97349867865/8.0),

16376 
REAL_CONST
(163234.77338756606/8.0),

16377 
REAL_CONST
(163261.57437650024/8.0),

16378 
REAL_CONST
(163288.37646539087/8.0),

16379 
REAL_CONST
(163315.17965414765/8.0),

16380 
REAL_CONST
(163341.98394268038/8.0),

16381 
REAL_CONST
(163368.78933089875/8.0),

16382 
REAL_CONST
(163395.59581871261/8.0),

16383 
REAL_CONST
(163422.40340603172/8.0),

16384 
REAL_CONST
(163449.2120927659/8.0),

16385 
REAL_CONST
(163476.02187882498/8.0),

16386 
REAL_CONST
(163502.83276411882/8.0),

16387 
REAL_CONST
(163529.6447485573/8.0),

16388 
REAL_CONST
(163556.45783205028/8.0),

16389 
REAL_CONST
(163583.2720145077/8.0),

16390 
REAL_CONST
(163610.08729583945/8.0),

16391 
REAL_CONST
(163636.90367595552/8.0),

16392 
REAL_CONST
(163663.72115476584/8.0),

16393 
REAL_CONST
(163690.53973218042/8.0),

16394 
REAL_CONST
(163717.35940810922/8.0),

16395 
REAL_CONST
(163744.18018246227/8.0),

16396 
REAL_CONST
(163771.00205514964/8.0),

16397 
REAL_CONST
(163797.82502608138/8.0),

16398 
REAL_CONST
(163824.64909516752/8.0),

16399 
REAL_CONST
(163851.4742623182/8.0),

16400 
REAL_CONST
(163878.3005274435/8.0),

16401 
REAL_CONST
(163905.12789045356/8.0),

16402 
REAL_CONST
(163931.95635125853/8.0),

16403 
REAL_CONST
(163958.78590976857/8.0),

16404 
REAL_CONST
(163985.61656589387/8.0),

16405 
REAL_CONST
(164012.44831954464/8.0),

16406 
REAL_CONST
(164039.28117063109/8.0),

16407 
REAL_CONST
(164066.11511906344/8.0),

16408 
REAL_CONST
(164092.95016475199/8.0),

16409 
REAL_CONST
(164119.78630760699/8.0),

16410 
REAL_CONST
(164146.62354753874/8.0),

16411 
REAL_CONST
(164173.46188445756/8.0),

16412 
REAL_CONST
(164200.30131827376/8.0),

16413 
REAL_CONST
(164227.14184889771/8.0),

16414 
REAL_CONST
(164253.98347623978/8.0),

16415 
REAL_CONST
(164280.82620021031/8.0),

16416 
REAL_CONST
(164307.67002071979/8.0),

16417 
REAL_CONST
(164334.51493767856/8.0),

16418 
REAL_CONST
(164361.3609509971/8.0),

16419 
REAL_CONST
(164388.20806058586/8.0),

16420 
REAL_CONST
(164415.05626635533/8.0),

16421 
REAL_CONST
(164441.905568216/8.0),

16422 
REAL_CONST
(164468.75596607837/8.0),

16423 
REAL_CONST
(164495.607459853/8.0),

16424 
REAL_CONST
(164522.4600494504/8.0),

16425 
REAL_CONST
(164549.31373478117/8.0),

16426 
REAL_CONST
(164576.16851575591/8.0),

16427 
REAL_CONST
(164603.02439228518/8.0),

16428 
REAL_CONST
(164629.88136427966/8.0),

16429 
REAL_CONST
(164656.73943164994/8.0),

16430 
REAL_CONST
(164683.59859430668/8.0),

16431 
REAL_CONST
(164710.45885216061/8.0),

16432 
REAL_CONST
(164737.32020512238/8.0),

16433 
REAL_CONST
(164764.1826531027/8.0),

16434 
REAL_CONST
(164791.04619601235/8.0),

16435 
REAL_CONST
(164817.91083376206/8.0),

16436 
REAL_CONST
(164844.77656626256/8.0),

16437 
REAL_CONST
(164871.64339342469/8.0),

16438 
REAL_CONST
(164898.51131515924/8.0),

16439 
REAL_CONST
(164925.38033137703/8.0),

16440 
REAL_CONST
(164952.25044198887/8.0),

16441 
REAL_CONST
(164979.1216469057/8.0),

16442 
REAL_CONST
(165005.9939460383/8.0),

16443 
REAL_CONST
(165032.86733929763/8.0),

16444 
REAL_CONST
(165059.7418265946/8.0),

16445 
REAL_CONST
(165086.61740784015/8.0),

16446 
REAL_CONST
(165113.4940829452/8.0)

16452 #ifde‡
__˝lu•lus


	@is.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 
	~"sy¡ax.h
"

32 
	~"is.h
"

34 #ifde‡
FIXED_POINT


35 
ªÆ_t
 
	gpow05_èbÀ
[] = {

36 
COEF_CONST
(1.68179283050743),

37 
COEF_CONST
(1.41421356237310),

38 
COEF_CONST
(1.18920711500272),

39 
COEF_CONST
(1.0),

40 
COEF_CONST
(0.84089641525371),

41 
COEF_CONST
(0.70710678118655),

42 
COEF_CONST
(0.59460355750136)

46 
	$is_decode
(
ic_°ªam
 *
ics
, ic_°ªam *
ic§
, 
ªÆ_t
 *
l_•ec
,Ñól_à*
r_•ec
,

47 
uöt16_t
 
‰ame_Àn
)

49 
uöt8_t
 
g
, 
sfb
, 
b
;

50 
uöt16_t
 
i
;

51 #i‚de‡
FIXED_POINT


52 
ªÆ_t
 
sˇÀ
;

54 
öt32_t
 
exp
, 
‰ac
;

57 
uöt16_t
 
nsh‹t
 = 
‰ame_Àn
/8;

58 
uöt8_t
 
group
 = 0;

60 
g
 = 0; g < 
ic§
->
num_wödow_groups
; g++)

63 
b
 = 0; b < 
ic§
->
wödow_group_Àngth
[
g
]; b++)

65 
sfb
 = 0; sfb < 
ic§
->
max_sfb
; sfb++)

67 i‡(
	`is_öãnsôy
(
ic§
, 
g
, 
sfb
))

69 #ifde‡
MAIN_DEC


74 
ics
->
¥ed
.
¥edi˘i⁄_u£d
[
sfb
] = 0;

75 
ic§
->
¥ed
.
¥edi˘i⁄_u£d
[
sfb
] = 0;

78 #i‚de‡
FIXED_POINT


79 
sˇÀ
 = (
ªÆ_t
)
	`pow
(0.5, (0.25*
ic§
->
sˇÀ_Á˘‹s
[
g
][
sfb
]));

81 
exp
 = 
ic§
->
sˇÀ_Á˘‹s
[
g
][
sfb
] >> 2;

82 
‰ac
 = 
ic§
->
sˇÀ_Á˘‹s
[
g
][
sfb
] & 3;

87 
i
 = 
ic§
->
swb_off£t
[
sfb
]; i < icsr->swb_offset[sfb+1]; i++)

89 #i‚de‡
FIXED_POINT


90 
r_•ec
[(
group
*
nsh‹t
)+
i
] = 
	`MUL_R
(
l_•ec
[(group*nsh‹t)+i], 
sˇÀ
);

92 i‡(
exp
 < 0)

93 
r_•ec
[(
group
*
nsh‹t
)+
i
] = 
l_•ec
[(group*nsh‹t)+i] << -
exp
;

95 
r_•ec
[(
group
*
nsh‹t
)+
i
] = 
l_•ec
[(group*nsh‹t)+i] >> 
exp
;

96 
r_•ec
[(
group
*
nsh‹t
)+
i
] = 
	`MUL_C
‘_•ec[(group*nsh‹t)+i], 
pow05_èbÀ
[
‰ac
 + 3]);

98 i‡(
	`is_öãnsôy
(
ic§
, 
g
, 
sfb
Ë!
	`övît_öãnsôy
(
ics
, g, sfb))

99 
r_•ec
[(
group
*
nsh‹t
)+
i
] = -r_spec[(group*nshort)+i];

103 
group
++;

106 
	}
}

	@is.h

28 #i‚de‡
__IS_H__


29 
	#__IS_H__


	)

31 #ifde‡
__˝lu•lus


35 
	~"sy¡ax.h
"

37 
is_decode
(
ic_°ªam
 *
ics
, ic_°ªam *
ic§
, 
ªÆ_t
 *
l_•ec
,Ñól_à*
r_•ec
,

38 
uöt16_t
 
‰ame_Àn
);

40 
INLINE
 
öt8_t
 
is_öãnsôy
(
ic_°ªam
 *
ics
, 
uöt8_t
 
group
, uöt8_à
sfb
)

42 
ics
->
sfb_cb
[
group
][
sfb
])

44 
INTENSITY_HCB
:

46 
INTENSITY_HCB2
:

53 
INLINE
 
öt8_t
 
övît_öãnsôy
(
ic_°ªam
 *
ics
, 
uöt8_t
 
group
, uöt8_à
sfb
)

55 i‡(
ics
->
ms_mask_¥e£¡
 == 1)

56  (1-2*
ics
->
ms_u£d
[
group
][
sfb
]);

61 #ifde‡
__˝lu•lus


	@kbd_win.h

28 #i‚de‡
__KBD_WIN_H__


29 
	#__KBD_WIN_H__


	)

31 #ifde‡
__˝lu•lus


35 #ifde‡
_MSC_VER


36 #¥agm®
w¨nög
(
dißbÀ
:4305)

37 #¥agm®
w¨nög
(
dißbÀ
:4244)

40 
ALIGN
 c⁄° 
ªÆ_t
 
kbd_l⁄g_1024
[] =

42 
FRAC_CONST
(0.00029256153896361),

43 
FRAC_CONST
(0.00042998567353047),

44 
FRAC_CONST
(0.00054674074589540),

45 
FRAC_CONST
(0.00065482304299792),

46 
FRAC_CONST
(0.00075870195068747),

47 
FRAC_CONST
(0.00086059331713336),

48 
FRAC_CONST
(0.00096177541439010),

49 
FRAC_CONST
(0.0010630609410878),

50 
FRAC_CONST
(0.0011650036308132),

51 
FRAC_CONST
(0.0012680012194148),

52 
FRAC_CONST
(0.0013723517232956),

53 
FRAC_CONST
(0.0014782864109136),

54 
FRAC_CONST
(0.0015859901976719),

55 
FRAC_CONST
(0.0016956148252373),

56 
FRAC_CONST
(0.0018072876903517),

57 
FRAC_CONST
(0.0019211179405514),

58 
FRAC_CONST
(0.0020372007924215),

59 
FRAC_CONST
(0.0021556206591754),

60 
FRAC_CONST
(0.0022764534599614),

61 
FRAC_CONST
(0.0023997683540995),

62 
FRAC_CONST
(0.0025256290631156),

63 
FRAC_CONST
(0.0026540948920831),

64 
FRAC_CONST
(0.0027852215281403),

65 
FRAC_CONST
(0.0029190616715331),

66 
FRAC_CONST
(0.0030556655443223),

67 
FRAC_CONST
(0.0031950812943391),

68 
FRAC_CONST
(0.0033373553240392),

69 
FRAC_CONST
(0.0034825325586930),

70 
FRAC_CONST
(0.0036306566699199),

71 
FRAC_CONST
(0.0037817702604646),

72 
FRAC_CONST
(0.0039359150179719),

73 
FRAC_CONST
(0.0040931318437260),

74 
FRAC_CONST
(0.0042534609610026),

75 
FRAC_CONST
(0.0044169420066964),

76 
FRAC_CONST
(0.0045836141091341),

77 
FRAC_CONST
(0.0047535159544086),

78 
FRAC_CONST
(0.0049266858431214),

79 
FRAC_CONST
(0.0051031617390698),

80 
FRAC_CONST
(0.0052829813111335),

81 
FRAC_CONST
(0.0054661819693975),

82 
FRAC_CONST
(0.0056528008963682),

83 
FRAC_CONST
(0.0058428750739943),

84 
FRAC_CONST
(0.0060364413070882),

85 
FRAC_CONST
(0.0062335362436492),

86 
FRAC_CONST
(0.0064341963925079),

87 
FRAC_CONST
(0.0066384581386503),

88 
FRAC_CONST
(0.0068463577565218),

89 
FRAC_CONST
(0.0070579314215715),

90 
FRAC_CONST
(0.0072732152202559),

91 
FRAC_CONST
(0.0074922451586909),

92 
FRAC_CONST
(0.0077150571701162),

93 
FRAC_CONST
(0.0079416871213115),

94 
FRAC_CONST
(0.0081721708180857),

95 
FRAC_CONST
(0.0084065440099458),

96 
FRAC_CONST
(0.0086448423940363),

97 
FRAC_CONST
(0.0088871016184291),

98 
FRAC_CONST
(0.0091333572848345),

99 
FRAC_CONST
(0.0093836449507939),

100 
FRAC_CONST
(0.0096380001314086),

101 
FRAC_CONST
(0.0098964583006517),

102 
FRAC_CONST
(0.010159054892306),

103 
FRAC_CONST
(0.010425825300561),

104 
FRAC_CONST
(0.010696804880310),

105 
FRAC_CONST
(0.010972028947167),

106 
FRAC_CONST
(0.011251532777236),

107 
FRAC_CONST
(0.011535351606646),

108 
FRAC_CONST
(0.011823520630897),

109 
FRAC_CONST
(0.012116075003993),

110 
FRAC_CONST
(0.012413049837429),

111 
FRAC_CONST
(0.012714480198999),

112 
FRAC_CONST
(0.013020401111478),

113 
FRAC_CONST
(0.013330847551161),

114 
FRAC_CONST
(0.013645854446288),

115 
FRAC_CONST
(0.013965456675352),

116 
FRAC_CONST
(0.014289689065314),

117 
FRAC_CONST
(0.014618586389712),

118 
FRAC_CONST
(0.014952183366697),

119 
FRAC_CONST
(0.015290514656976),

120 
FRAC_CONST
(0.015633614861688),

121 
FRAC_CONST
(0.015981518520214),

122 
FRAC_CONST
(0.016334260107915),

123 
FRAC_CONST
(0.016691874033817),

124 
FRAC_CONST
(0.017054394638241),

125 
FRAC_CONST
(0.017421856190380),

126 
FRAC_CONST
(0.017794292885832),

127 
FRAC_CONST
(0.018171738844085),

128 
FRAC_CONST
(0.018554228105962),

129 
FRAC_CONST
(0.018941794631032),

130 
FRAC_CONST
(0.019334472294980),

131 
FRAC_CONST
(0.019732294886947),

132 
FRAC_CONST
(0.020135296106839),

133 
FRAC_CONST
(0.020543509562604),

134 
FRAC_CONST
(0.020956968767488),

135 
FRAC_CONST
(0.021375707137257),

136 
FRAC_CONST
(0.021799757987407),

137 
FRAC_CONST
(0.022229154530343),

138 
FRAC_CONST
(0.022663929872540),

139 
FRAC_CONST
(0.023104117011689),

140 
FRAC_CONST
(0.023549748833816),

141 
FRAC_CONST
(0.024000858110398),

142 
FRAC_CONST
(0.024457477495451),

143 
FRAC_CONST
(0.024919639522613),

144 
FRAC_CONST
(0.025387376602207),

145 
FRAC_CONST
(0.025860721018295),

146 
FRAC_CONST
(0.026339704925726),

147 
FRAC_CONST
(0.026824360347160),

148 
FRAC_CONST
(0.027314719170100),

149 
FRAC_CONST
(0.027810813143900),

150 
FRAC_CONST
(0.028312673876775),

151 
FRAC_CONST
(0.028820332832801),

152 
FRAC_CONST
(0.029333821328905),

153 
FRAC_CONST
(0.029853170531859),

154 
FRAC_CONST
(0.030378411455255),

155 
FRAC_CONST
(0.030909574956490),

156 
FRAC_CONST
(0.031446691733739),

157 
FRAC_CONST
(0.031989792322926),

158 
FRAC_CONST
(0.032538907094693),

159 
FRAC_CONST
(0.033094066251369),

160 
FRAC_CONST
(0.033655299823935),

161 
FRAC_CONST
(0.034222637668991),

162 
FRAC_CONST
(0.034796109465717),

163 
FRAC_CONST
(0.035375744712844),

164 
FRAC_CONST
(0.035961572725616),

165 
FRAC_CONST
(0.036553622632758),

166 
FRAC_CONST
(0.037151923373446),

167 
FRAC_CONST
(0.037756503694277),

168 
FRAC_CONST
(0.038367392146243),

169 
FRAC_CONST
(0.038984617081711),

170 
FRAC_CONST
(0.039608206651398),

171 
FRAC_CONST
(0.040238188801359),

172 
FRAC_CONST
(0.040874591269976),

173 
FRAC_CONST
(0.041517441584950),

174 
FRAC_CONST
(0.042166767060301),

175 
FRAC_CONST
(0.042822594793376),

176 
FRAC_CONST
(0.043484951661852),

177 
FRAC_CONST
(0.044153864320760),

178 
FRAC_CONST
(0.044829359199509),

179 
FRAC_CONST
(0.045511462498913),

180 
FRAC_CONST
(0.046200200188234),

181 
FRAC_CONST
(0.046895598002228),

182 
FRAC_CONST
(0.047597681438201),

183 
FRAC_CONST
(0.048306475753074),

184 
FRAC_CONST
(0.049022005960455),

185 
FRAC_CONST
(0.049744296827725),

186 
FRAC_CONST
(0.050473372873129),

187 
FRAC_CONST
(0.051209258362879),

188 
FRAC_CONST
(0.051951977308273),

189 
FRAC_CONST
(0.052701553462813),

190 
FRAC_CONST
(0.053458010319350),

191 
FRAC_CONST
(0.054221371107223),

192 
FRAC_CONST
(0.054991658789428),

193 
FRAC_CONST
(0.055768896059787),

194 
FRAC_CONST
(0.056553105340134),

195 
FRAC_CONST
(0.057344308777513),

196 
FRAC_CONST
(0.058142528241393),

197 
FRAC_CONST
(0.058947785320893),

198 
FRAC_CONST
(0.059760101322019),

199 
FRAC_CONST
(0.060579497264926),

200 
FRAC_CONST
(0.061405993881180),

201 
FRAC_CONST
(0.062239611611049),

202 
FRAC_CONST
(0.063080370600799),

203 
FRAC_CONST
(0.063928290700012),

204 
FRAC_CONST
(0.064783391458919),

205 
FRAC_CONST
(0.065645692125747),

206 
FRAC_CONST
(0.066515211644086),

207 
FRAC_CONST
(0.067391968650269),

208 
FRAC_CONST
(0.068275981470777),

209 
FRAC_CONST
(0.069167268119652),

210 
FRAC_CONST
(0.070065846295935),

211 
FRAC_CONST
(0.070971733381121),

212 
FRAC_CONST
(0.071884946436630),

213 
FRAC_CONST
(0.072805502201299),

214 
FRAC_CONST
(0.073733417088896),

215 
FRAC_CONST
(0.074668707185649),

216 
FRAC_CONST
(0.075611388247794),

217 
FRAC_CONST
(0.076561475699152),

218 
FRAC_CONST
(0.077518984628715),

219 
FRAC_CONST
(0.078483929788261),

220 
FRAC_CONST
(0.079456325589986),

221 
FRAC_CONST
(0.080436186104162),

222 
FRAC_CONST
(0.081423525056808),

223 
FRAC_CONST
(0.082418355827392),

224 
FRAC_CONST
(0.083420691446553),

225 
FRAC_CONST
(0.084430544593841),

226 
FRAC_CONST
(0.085447927595483),

227 
FRAC_CONST
(0.086472852422178),

228 
FRAC_CONST
(0.087505330686900),

229 
FRAC_CONST
(0.088545373642744),

230 
FRAC_CONST
(0.089592992180780),

231 
FRAC_CONST
(0.090648196827937),

232 
FRAC_CONST
(0.091710997744919),

233 
FRAC_CONST
(0.092781404724131),

234 
FRAC_CONST
(0.093859427187640),

235 
FRAC_CONST
(0.094945074185163),

236 
FRAC_CONST
(0.096038354392069),

237 
FRAC_CONST
(0.097139276107423),

238 
FRAC_CONST
(0.098247847252041),

239 
FRAC_CONST
(0.099364075366580),

240 
FRAC_CONST
(0.10048796760965),

241 
FRAC_CONST
(0.10161953075597),

242 
FRAC_CONST
(0.10275877119451),

243 
FRAC_CONST
(0.10390569492671),

244 
FRAC_CONST
(0.10506030756469),

245 
FRAC_CONST
(0.10622261432949),

246 
FRAC_CONST
(0.10739262004941),

247 
FRAC_CONST
(0.10857032915821),

248 
FRAC_CONST
(0.10975574569357),

249 
FRAC_CONST
(0.11094887329534),

250 
FRAC_CONST
(0.11214971520402),

251 
FRAC_CONST
(0.11335827425914),

252 
FRAC_CONST
(0.11457455289772),

253 
FRAC_CONST
(0.11579855315274),

254 
FRAC_CONST
(0.11703027665170),

255 
FRAC_CONST
(0.11826972461510),

256 
FRAC_CONST
(0.11951689785504),

257 
FRAC_CONST
(0.12077179677383),

258 
FRAC_CONST
(0.12203442136263),

259 
FRAC_CONST
(0.12330477120008),

260 
FRAC_CONST
(0.12458284545102),

261 
FRAC_CONST
(0.12586864286523),

262 
FRAC_CONST
(0.12716216177615),

263 
FRAC_CONST
(0.12846340009971),

264 
FRAC_CONST
(0.12977235533312),

265 
FRAC_CONST
(0.13108902455375),

266 
FRAC_CONST
(0.13241340441801),

267 
FRAC_CONST
(0.13374549116025),

268 
FRAC_CONST
(0.13508528059173),

269 
FRAC_CONST
(0.13643276809961),

270 
FRAC_CONST
(0.13778794864595),

271 
FRAC_CONST
(0.13915081676677),

272 
FRAC_CONST
(0.14052136657114),

273 
FRAC_CONST
(0.14189959174027),

274 
FRAC_CONST
(0.14328548552671),

275 
FRAC_CONST
(0.14467904075349),

276 
FRAC_CONST
(0.14608024981336),

277 
FRAC_CONST
(0.14748910466804),

278 
FRAC_CONST
(0.14890559684750),

279 
FRAC_CONST
(0.15032971744929),

280 
FRAC_CONST
(0.15176145713790),

281 
FRAC_CONST
(0.15320080614414),

282 
FRAC_CONST
(0.15464775426459),

283 
FRAC_CONST
(0.15610229086100),

284 
FRAC_CONST
(0.15756440485987),

285 
FRAC_CONST
(0.15903408475193),

286 
FRAC_CONST
(0.16051131859170),

287 
FRAC_CONST
(0.16199609399712),

288 
FRAC_CONST
(0.16348839814917),

289 
FRAC_CONST
(0.16498821779156),

290 
FRAC_CONST
(0.16649553923042),

291 
FRAC_CONST
(0.16801034833404),

292 
FRAC_CONST
(0.16953263053270),

293 
FRAC_CONST
(0.17106237081842),

294 
FRAC_CONST
(0.17259955374484),

295 
FRAC_CONST
(0.17414416342714),

296 
FRAC_CONST
(0.17569618354193),

297 
FRAC_CONST
(0.17725559732720),

298 
FRAC_CONST
(0.17882238758238),

299 
FRAC_CONST
(0.18039653666830),

300 
FRAC_CONST
(0.18197802650733),

301 
FRAC_CONST
(0.18356683858343),

302 
FRAC_CONST
(0.18516295394233),

303 
FRAC_CONST
(0.18676635319174),

304 
FRAC_CONST
(0.18837701650148),

305 
FRAC_CONST
(0.18999492360384),

306 
FRAC_CONST
(0.19162005379380),

307 
FRAC_CONST
(0.19325238592940),

308 
FRAC_CONST
(0.19489189843209),

309 
FRAC_CONST
(0.19653856928714),

310 
FRAC_CONST
(0.19819237604409),

311 
FRAC_CONST
(0.19985329581721),

312 
FRAC_CONST
(0.20152130528605),

313 
FRAC_CONST
(0.20319638069594),

314 
FRAC_CONST
(0.20487849785865),

315 
FRAC_CONST
(0.20656763215298),

316 
FRAC_CONST
(0.20826375852540),

317 
FRAC_CONST
(0.20996685149083),

318 
FRAC_CONST
(0.21167688513330),

319 
FRAC_CONST
(0.21339383310678),

320 
FRAC_CONST
(0.21511766863598),

321 
FRAC_CONST
(0.21684836451719),

322 
FRAC_CONST
(0.21858589311922),

323 
FRAC_CONST
(0.22033022638425),

324 
FRAC_CONST
(0.22208133582887),

325 
FRAC_CONST
(0.22383919254503),

326 
FRAC_CONST
(0.22560376720111),

327 
FRAC_CONST
(0.22737503004300),

328 
FRAC_CONST
(0.22915295089517),

329 
FRAC_CONST
(0.23093749916189),

330 
FRAC_CONST
(0.23272864382838),

331 
FRAC_CONST
(0.23452635346201),

332 
FRAC_CONST
(0.23633059621364),

333 
FRAC_CONST
(0.23814133981883),

334 
FRAC_CONST
(0.23995855159925),

335 
FRAC_CONST
(0.24178219846403),

336 
FRAC_CONST
(0.24361224691114),

337 
FRAC_CONST
(0.24544866302890),

338 
FRAC_CONST
(0.24729141249740),

339 
FRAC_CONST
(0.24914046059007),

340 
FRAC_CONST
(0.25099577217522),

341 
FRAC_CONST
(0.25285731171763),

342 
FRAC_CONST
(0.25472504328019),

343 
FRAC_CONST
(0.25659893052556),

344 
FRAC_CONST
(0.25847893671788),

345 
FRAC_CONST
(0.26036502472451),

346 
FRAC_CONST
(0.26225715701781),

347 
FRAC_CONST
(0.26415529567692),

348 
FRAC_CONST
(0.26605940238966),

349 
FRAC_CONST
(0.26796943845439),

350 
FRAC_CONST
(0.26988536478190),

351 
FRAC_CONST
(0.27180714189742),

352 
FRAC_CONST
(0.27373472994256),

353 
FRAC_CONST
(0.27566808867736),

354 
FRAC_CONST
(0.27760717748238),

355 
FRAC_CONST
(0.27955195536071),

356 
FRAC_CONST
(0.28150238094021),

357 
FRAC_CONST
(0.28345841247557),

358 
FRAC_CONST
(0.28542000785059),

359 
FRAC_CONST
(0.28738712458038),

360 
FRAC_CONST
(0.28935971981364),

361 
FRAC_CONST
(0.29133775033492),

362 
FRAC_CONST
(0.29332117256704),

363 
FRAC_CONST
(0.29530994257338),

364 
FRAC_CONST
(0.29730401606034),

365 
FRAC_CONST
(0.29930334837974),

366 
FRAC_CONST
(0.30130789453132),

367 
FRAC_CONST
(0.30331760916521),

368 
FRAC_CONST
(0.30533244658452),

369 
FRAC_CONST
(0.30735236074785),

370 
FRAC_CONST
(0.30937730527195),

371 
FRAC_CONST
(0.31140723343430),

372 
FRAC_CONST
(0.31344209817583),

373 
FRAC_CONST
(0.31548185210356),

374 
FRAC_CONST
(0.31752644749341),

375 
FRAC_CONST
(0.31957583629288),

376 
FRAC_CONST
(0.32162997012390),

377 
FRAC_CONST
(0.32368880028565),

378 
FRAC_CONST
(0.32575227775738),

379 
FRAC_CONST
(0.32782035320134),

380 
FRAC_CONST
(0.32989297696566),

381 
FRAC_CONST
(0.33197009908736),

382 
FRAC_CONST
(0.33405166929523),

383 
FRAC_CONST
(0.33613763701295),

384 
FRAC_CONST
(0.33822795136203),

385 
FRAC_CONST
(0.34032256116495),

386 
FRAC_CONST
(0.34242141494820),

387 
FRAC_CONST
(0.34452446094547),

388 
FRAC_CONST
(0.34663164710072),

389 
FRAC_CONST
(0.34874292107143),

390 
FRAC_CONST
(0.35085823023181),

391 
FRAC_CONST
(0.35297752167598),

392 
FRAC_CONST
(0.35510074222129),

393 
FRAC_CONST
(0.35722783841160),

394 
FRAC_CONST
(0.35935875652060),

395 
FRAC_CONST
(0.36149344255514),

396 
FRAC_CONST
(0.36363184225864),

397 
FRAC_CONST
(0.36577390111444),

398 
FRAC_CONST
(0.36791956434930),

399 
FRAC_CONST
(0.37006877693676),

400 
FRAC_CONST
(0.37222148360070),

401 
FRAC_CONST
(0.37437762881878),

402 
FRAC_CONST
(0.37653715682603),

403 
FRAC_CONST
(0.37870001161834),

404 
FRAC_CONST
(0.38086613695607),

405 
FRAC_CONST
(0.38303547636766),

406 
FRAC_CONST
(0.38520797315322),

407 
FRAC_CONST
(0.38738357038821),

408 
FRAC_CONST
(0.38956221092708),

409 
FRAC_CONST
(0.39174383740701),

410 
FRAC_CONST
(0.39392839225157),

411 
FRAC_CONST
(0.39611581767449),

412 
FRAC_CONST
(0.39830605568342),

413 
FRAC_CONST
(0.40049904808370),

414 
FRAC_CONST
(0.40269473648218),

415 
FRAC_CONST
(0.40489306229101),

416 
FRAC_CONST
(0.40709396673153),

417 
FRAC_CONST
(0.40929739083810),

418 
FRAC_CONST
(0.41150327546197),

419 
FRAC_CONST
(0.41371156127524),

420 
FRAC_CONST
(0.41592218877472),

421 
FRAC_CONST
(0.41813509828594),

422 
FRAC_CONST
(0.42035022996702),

423 
FRAC_CONST
(0.42256752381274),

424 
FRAC_CONST
(0.42478691965848),

425 
FRAC_CONST
(0.42700835718423),

426 
FRAC_CONST
(0.42923177591866),

427 
FRAC_CONST
(0.43145711524314),

428 
FRAC_CONST
(0.43368431439580),

429 
FRAC_CONST
(0.43591331247564),

430 
FRAC_CONST
(0.43814404844658),

431 
FRAC_CONST
(0.44037646114161),

432 
FRAC_CONST
(0.44261048926688),

433 
FRAC_CONST
(0.44484607140589),

434 
FRAC_CONST
(0.44708314602359),

435 
FRAC_CONST
(0.44932165147057),

436 
FRAC_CONST
(0.45156152598727),

437 
FRAC_CONST
(0.45380270770813),

438 
FRAC_CONST
(0.45604513466581),

439 
FRAC_CONST
(0.45828874479543),

440 
FRAC_CONST
(0.46053347593880),

441 
FRAC_CONST
(0.46277926584861),

442 
FRAC_CONST
(0.46502605219277),

443 
FRAC_CONST
(0.46727377255861),

444 
FRAC_CONST
(0.46952236445718),

445 
FRAC_CONST
(0.47177176532752),

446 
FRAC_CONST
(0.47402191254100),

447 
FRAC_CONST
(0.47627274340557),

448 
FRAC_CONST
(0.47852419517009),

449 
FRAC_CONST
(0.48077620502869),

450 
FRAC_CONST
(0.48302871012505),

451 
FRAC_CONST
(0.48528164755674),

452 
FRAC_CONST
(0.48753495437962),

453 
FRAC_CONST
(0.48978856761212),

454 
FRAC_CONST
(0.49204242423966),

455 
FRAC_CONST
(0.49429646121898),

456 
FRAC_CONST
(0.49655061548250),

457 
FRAC_CONST
(0.49880482394273),

458 
FRAC_CONST
(0.50105902349665),

459 
FRAC_CONST
(0.50331315103004),

460 
FRAC_CONST
(0.50556714342194),

461 
FRAC_CONST
(0.50782093754901),

462 
FRAC_CONST
(0.51007447028990),

463 
FRAC_CONST
(0.51232767852971),

464 
FRAC_CONST
(0.51458049916433),

465 
FRAC_CONST
(0.51683286910489),

466 
FRAC_CONST
(0.51908472528213),

467 
FRAC_CONST
(0.52133600465083),

468 
FRAC_CONST
(0.52358664419420),

469 
FRAC_CONST
(0.52583658092832),

470 
FRAC_CONST
(0.52808575190648),

471 
FRAC_CONST
(0.53033409422367),

472 
FRAC_CONST
(0.53258154502092),

473 
FRAC_CONST
(0.53482804148974),

474 
FRAC_CONST
(0.53707352087652),

475 
FRAC_CONST
(0.53931792048690),

476 
FRAC_CONST
(0.54156117769021),

477 
FRAC_CONST
(0.54380322992385),

478 
FRAC_CONST
(0.54604401469766),

479 
FRAC_CONST
(0.54828346959835),

480 
FRAC_CONST
(0.55052153229384),

481 
FRAC_CONST
(0.55275814053768),

482 
FRAC_CONST
(0.55499323217338),

483 
FRAC_CONST
(0.55722674513883),

484 
FRAC_CONST
(0.55945861747062),

485 
FRAC_CONST
(0.56168878730842),

486 
FRAC_CONST
(0.56391719289930),

487 
FRAC_CONST
(0.56614377260214),

488 
FRAC_CONST
(0.56836846489188),

489 
FRAC_CONST
(0.57059120836390),

490 
FRAC_CONST
(0.57281194173835),

491 
FRAC_CONST
(0.57503060386439),

492 
FRAC_CONST
(0.57724713372458),

493 
FRAC_CONST
(0.57946147043912),

494 
FRAC_CONST
(0.58167355327012),

495 
FRAC_CONST
(0.58388332162591),

496 
FRAC_CONST
(0.58609071506528),

497 
FRAC_CONST
(0.58829567330173),

498 
FRAC_CONST
(0.59049813620770),

499 
FRAC_CONST
(0.59269804381879),

500 
FRAC_CONST
(0.59489533633802),

501 
FRAC_CONST
(0.59708995413996),

502 
FRAC_CONST
(0.59928183777495),

503 
FRAC_CONST
(0.60147092797329),

504 
FRAC_CONST
(0.60365716564937),

505 
FRAC_CONST
(0.60584049190582),

506 
FRAC_CONST
(0.60802084803764),

507 
FRAC_CONST
(0.61019817553632),

508 
FRAC_CONST
(0.61237241609393),

509 
FRAC_CONST
(0.61454351160718),

510 
FRAC_CONST
(0.61671140418155),

511 
FRAC_CONST
(0.61887603613527),

512 
FRAC_CONST
(0.62103735000336),

513 
FRAC_CONST
(0.62319528854167),

514 
FRAC_CONST
(0.62534979473088),

515 
FRAC_CONST
(0.62750081178042),

516 
FRAC_CONST
(0.62964828313250),

517 
FRAC_CONST
(0.63179215246597),

518 
FRAC_CONST
(0.63393236370030),

519 
FRAC_CONST
(0.63606886099946),

520 
FRAC_CONST
(0.63820158877577),

521 
FRAC_CONST
(0.64033049169379),

522 
FRAC_CONST
(0.64245551467413),

523 
FRAC_CONST
(0.64457660289729),

524 
FRAC_CONST
(0.64669370180740),

525 
FRAC_CONST
(0.64880675711607),

526 
FRAC_CONST
(0.65091571480603),

527 
FRAC_CONST
(0.65302052113494),

528 
FRAC_CONST
(0.65512112263906),

529 
FRAC_CONST
(0.65721746613689),

530 
FRAC_CONST
(0.65930949873289),

531 
FRAC_CONST
(0.66139716782102),

532 
FRAC_CONST
(0.66348042108842),

533 
FRAC_CONST
(0.66555920651892),

534 
FRAC_CONST
(0.66763347239664),

535 
FRAC_CONST
(0.66970316730947),

536 
FRAC_CONST
(0.67176824015260),

537 
FRAC_CONST
(0.67382864013196),

538 
FRAC_CONST
(0.67588431676768),

539 
FRAC_CONST
(0.67793521989751),

540 
FRAC_CONST
(0.67998129968017),

541 
FRAC_CONST
(0.68202250659876),

542 
FRAC_CONST
(0.68405879146403),

543 
FRAC_CONST
(0.68609010541774),

544 
FRAC_CONST
(0.68811639993588),

545 
FRAC_CONST
(0.69013762683195),

546 
FRAC_CONST
(0.69215373826012),

547 
FRAC_CONST
(0.69416468671849),

548 
FRAC_CONST
(0.69617042505214),

549 
FRAC_CONST
(0.69817090645634),

550 
FRAC_CONST
(0.70016608447958),

551 
FRAC_CONST
(0.70215591302664),

552 
FRAC_CONST
(0.70414034636163),

553 
FRAC_CONST
(0.70611933911096),

554 
FRAC_CONST
(0.70809284626630),

555 
FRAC_CONST
(0.71006082318751),

556 
FRAC_CONST
(0.71202322560554),

557 
FRAC_CONST
(0.71398000962530),

558 
FRAC_CONST
(0.71593113172842),

559 
FRAC_CONST
(0.71787654877613),

560 
FRAC_CONST
(0.71981621801195),

561 
FRAC_CONST
(0.72175009706445),

562 
FRAC_CONST
(0.72367814394990),

563 
FRAC_CONST
(0.72560031707496),

564 
FRAC_CONST
(0.72751657523927),

565 
FRAC_CONST
(0.72942687763803),

566 
FRAC_CONST
(0.73133118386457),

567 
FRAC_CONST
(0.73322945391280),

568 
FRAC_CONST
(0.73512164817975),

569 
FRAC_CONST
(0.73700772746796),

570 
FRAC_CONST
(0.73888765298787),

571 
FRAC_CONST
(0.74076138636020),

572 
FRAC_CONST
(0.74262888961827),

573 
FRAC_CONST
(0.74449012521027),

574 
FRAC_CONST
(0.74634505600152),

575 
FRAC_CONST
(0.74819364527663),

576 
FRAC_CONST
(0.75003585674175),

577 
FRAC_CONST
(0.75187165452661),

578 
FRAC_CONST
(0.75370100318668),

579 
FRAC_CONST
(0.75552386770515),

580 
FRAC_CONST
(0.75734021349500),

581 
FRAC_CONST
(0.75915000640095),

582 
FRAC_CONST
(0.76095321270137),

583 
FRAC_CONST
(0.76274979911019),

584 
FRAC_CONST
(0.76453973277875),

585 
FRAC_CONST
(0.76632298129757),

586 
FRAC_CONST
(0.76809951269819),

587 
FRAC_CONST
(0.76986929545481),

588 
FRAC_CONST
(0.77163229848604),

589 
FRAC_CONST
(0.77338849115651),

590 
FRAC_CONST
(0.77513784327849),

591 
FRAC_CONST
(0.77688032511340),

592 
FRAC_CONST
(0.77861590737340),

593 
FRAC_CONST
(0.78034456122283),

594 
FRAC_CONST
(0.78206625827961),

595 
FRAC_CONST
(0.78378097061667),

596 
FRAC_CONST
(0.78548867076330),

597 
FRAC_CONST
(0.78718933170643),

598 
FRAC_CONST
(0.78888292689189),

599 
FRAC_CONST
(0.79056943022564),

600 
FRAC_CONST
(0.79224881607494),

601 
FRAC_CONST
(0.79392105926949),

602 
FRAC_CONST
(0.79558613510249),

603 
FRAC_CONST
(0.79724401933170),

604 
FRAC_CONST
(0.79889468818046),

605 
FRAC_CONST
(0.80053811833858),

606 
FRAC_CONST
(0.80217428696334),

607 
FRAC_CONST
(0.80380317168028),

608 
FRAC_CONST
(0.80542475058405),

609 
FRAC_CONST
(0.80703900223920),

610 
FRAC_CONST
(0.80864590568089),

611 
FRAC_CONST
(0.81024544041560),

612 
FRAC_CONST
(0.81183758642175),

613 
FRAC_CONST
(0.81342232415032),

614 
FRAC_CONST
(0.81499963452540),

615 
FRAC_CONST
(0.81656949894467),

616 
FRAC_CONST
(0.81813189927991),

617 
FRAC_CONST
(0.81968681787738),

618 
FRAC_CONST
(0.82123423755821),

619 
FRAC_CONST
(0.82277414161874),

620 
FRAC_CONST
(0.82430651383076),

621 
FRAC_CONST
(0.82583133844180),

622 
FRAC_CONST
(0.82734860017528),

623 
FRAC_CONST
(0.82885828423070),

624 
FRAC_CONST
(0.83036037628369),

625 
FRAC_CONST
(0.83185486248609),

626 
FRAC_CONST
(0.83334172946597),

627 
FRAC_CONST
(0.83482096432759),

628 
FRAC_CONST
(0.83629255465130),

629 
FRAC_CONST
(0.83775648849344),

630 
FRAC_CONST
(0.83921275438615),

631 
FRAC_CONST
(0.84066134133716),

632 
FRAC_CONST
(0.84210223882952),

633 
FRAC_CONST
(0.84353543682130),

634 
FRAC_CONST
(0.84496092574524),

635 
FRAC_CONST
(0.84637869650833),

636 
FRAC_CONST
(0.84778874049138),

637 
FRAC_CONST
(0.84919104954855),

638 
FRAC_CONST
(0.85058561600677),

639 
FRAC_CONST
(0.85197243266520),

640 
FRAC_CONST
(0.85335149279457),

641 
FRAC_CONST
(0.85472279013653),

642 
FRAC_CONST
(0.85608631890295),

643 
FRAC_CONST
(0.85744207377513),

644 
FRAC_CONST
(0.85879004990298),

645 
FRAC_CONST
(0.86013024290422),

646 
FRAC_CONST
(0.86146264886346),

647 
FRAC_CONST
(0.86278726433124),

648 
FRAC_CONST
(0.86410408632306),

649 
FRAC_CONST
(0.86541311231838),

650 
FRAC_CONST
(0.86671434025950),

651 
FRAC_CONST
(0.86800776855046),

652 
FRAC_CONST
(0.86929339605590),

653 
FRAC_CONST
(0.87057122209981),

654 
FRAC_CONST
(0.87184124646433),

655 
FRAC_CONST
(0.87310346938840),

656 
FRAC_CONST
(0.87435789156650),

657 
FRAC_CONST
(0.87560451414719),

658 
FRAC_CONST
(0.87684333873173),

659 
FRAC_CONST
(0.87807436737261),

660 
FRAC_CONST
(0.87929760257204),

661 
FRAC_CONST
(0.88051304728038),

662 
FRAC_CONST
(0.88172070489456),

663 
FRAC_CONST
(0.88292057925645),

664 
FRAC_CONST
(0.88411267465117),

665 
FRAC_CONST
(0.88529699580537),

666 
FRAC_CONST
(0.88647354788545),

667 
FRAC_CONST
(0.88764233649580),

668 
FRAC_CONST
(0.88880336767692),

669 
FRAC_CONST
(0.88995664790351),

670 
FRAC_CONST
(0.89110218408260),

671 
FRAC_CONST
(0.89223998355154),

672 
FRAC_CONST
(0.89337005407600),

673 
FRAC_CONST
(0.89449240384793),

674 
FRAC_CONST
(0.89560704148345),

675 
FRAC_CONST
(0.89671397602074),

676 
FRAC_CONST
(0.89781321691786),

677 
FRAC_CONST
(0.89890477405053),

678 
FRAC_CONST
(0.89998865770993),

679 
FRAC_CONST
(0.90106487860034),

680 
FRAC_CONST
(0.90213344783689),

681 
FRAC_CONST
(0.90319437694315),

682 
FRAC_CONST
(0.90424767784873),

683 
FRAC_CONST
(0.90529336288690),

684 
FRAC_CONST
(0.90633144479201),

685 
FRAC_CONST
(0.90736193669708),

686 
FRAC_CONST
(0.90838485213119),

687 
FRAC_CONST
(0.90940020501694),

688 
FRAC_CONST
(0.91040800966776),

689 
FRAC_CONST
(0.91140828078533),

690 
FRAC_CONST
(0.91240103345685),

691 
FRAC_CONST
(0.91338628315231),

692 
FRAC_CONST
(0.91436404572173),

693 
FRAC_CONST
(0.91533433739238),

694 
FRAC_CONST
(0.91629717476594),

695 
FRAC_CONST
(0.91725257481564),

696 
FRAC_CONST
(0.91820055488334),

697 
FRAC_CONST
(0.91914113267664),

698 
FRAC_CONST
(0.92007432626589),

699 
FRAC_CONST
(0.92100015408120),

700 
FRAC_CONST
(0.92191863490944),

701 
FRAC_CONST
(0.92282978789113),

702 
FRAC_CONST
(0.92373363251740),

703 
FRAC_CONST
(0.92463018862687),

704 
FRAC_CONST
(0.92551947640245),

705 
FRAC_CONST
(0.92640151636824),

706 
FRAC_CONST
(0.92727632938624),

707 
FRAC_CONST
(0.92814393665320),

708 
FRAC_CONST
(0.92900435969727),

709 
FRAC_CONST
(0.92985762037477),

710 
FRAC_CONST
(0.93070374086684),

711 
FRAC_CONST
(0.93154274367610),

712 
FRAC_CONST
(0.93237465162328),

713 
FRAC_CONST
(0.93319948784382),

714 
FRAC_CONST
(0.93401727578443),

715 
FRAC_CONST
(0.93482803919967),

716 
FRAC_CONST
(0.93563180214841),

717 
FRAC_CONST
(0.93642858899043),

718 
FRAC_CONST
(0.93721842438279),

719 
FRAC_CONST
(0.93800133327637),

720 
FRAC_CONST
(0.93877734091223),

721 
FRAC_CONST
(0.93954647281807),

722 
FRAC_CONST
(0.94030875480458),

723 
FRAC_CONST
(0.94106421296182),

724 
FRAC_CONST
(0.94181287365556),

725 
FRAC_CONST
(0.94255476352362),

726 
FRAC_CONST
(0.94328990947213),

727 
FRAC_CONST
(0.94401833867184),

728 
FRAC_CONST
(0.94474007855439),

729 
FRAC_CONST
(0.94545515680855),

730 
FRAC_CONST
(0.94616360137644),

731 
FRAC_CONST
(0.94686544044975),

732 
FRAC_CONST
(0.94756070246592),

733 
FRAC_CONST
(0.94824941610434),

734 
FRAC_CONST
(0.94893161028248),

735 
FRAC_CONST
(0.94960731415209),

736 
FRAC_CONST
(0.95027655709525),

737 
FRAC_CONST
(0.95093936872056),

738 
FRAC_CONST
(0.95159577885924),

739 
FRAC_CONST
(0.95224581756115),

740 
FRAC_CONST
(0.95288951509097),

741 
FRAC_CONST
(0.95352690192417),

742 
FRAC_CONST
(0.95415800874314),

743 
FRAC_CONST
(0.95478286643320),

744 
FRAC_CONST
(0.95540150607863),

745 
FRAC_CONST
(0.95601395895871),

746 
FRAC_CONST
(0.95662025654373),

747 
FRAC_CONST
(0.95722043049100),

748 
FRAC_CONST
(0.95781451264084),

749 
FRAC_CONST
(0.95840253501260),

750 
FRAC_CONST
(0.95898452980058),

751 
FRAC_CONST
(0.95956052937008),

752 
FRAC_CONST
(0.96013056625336),

753 
FRAC_CONST
(0.96069467314557),

754 
FRAC_CONST
(0.96125288290073),

755 
FRAC_CONST
(0.96180522852773),

756 
FRAC_CONST
(0.96235174318622),

757 
FRAC_CONST
(0.96289246018262),

758 
FRAC_CONST
(0.96342741296604),

759 
FRAC_CONST
(0.96395663512424),

760 
FRAC_CONST
(0.96448016037959),

761 
FRAC_CONST
(0.96499802258499),

762 
FRAC_CONST
(0.96551025571985),

763 
FRAC_CONST
(0.96601689388602),

764 
FRAC_CONST
(0.96651797130376),

765 
FRAC_CONST
(0.96701352230768),

766 
FRAC_CONST
(0.96750358134269),

767 
FRAC_CONST
(0.96798818295998),

768 
FRAC_CONST
(0.96846736181297),

769 
FRAC_CONST
(0.96894115265327),

770 
FRAC_CONST
(0.96940959032667),

771 
FRAC_CONST
(0.96987270976912),

772 
FRAC_CONST
(0.97033054600270),

773 
FRAC_CONST
(0.97078313413161),

774 
FRAC_CONST
(0.97123050933818),

775 
FRAC_CONST
(0.97167270687887),

776 
FRAC_CONST
(0.97210976208030),

777 
FRAC_CONST
(0.97254171033525),

778 
FRAC_CONST
(0.97296858709871),

779 
FRAC_CONST
(0.97339042788392),

780 
FRAC_CONST
(0.97380726825843),

781 
FRAC_CONST
(0.97421914384017),

782 
FRAC_CONST
(0.97462609029350),

783 
FRAC_CONST
(0.97502814332534),

784 
FRAC_CONST
(0.97542533868127),

785 
FRAC_CONST
(0.97581771214160),

786 
FRAC_CONST
(0.97620529951759),

787 
FRAC_CONST
(0.97658813664749),

788 
FRAC_CONST
(0.97696625939282),

789 
FRAC_CONST
(0.97733970363445),

790 
FRAC_CONST
(0.97770850526884),

791 
FRAC_CONST
(0.97807270020427),

792 
FRAC_CONST
(0.97843232435704),

793 
FRAC_CONST
(0.97878741364771),

794 
FRAC_CONST
(0.97913800399743),

795 
FRAC_CONST
(0.97948413132414),

796 
FRAC_CONST
(0.97982583153895),

797 
FRAC_CONST
(0.98016314054243),

798 
FRAC_CONST
(0.98049609422096),

799 
FRAC_CONST
(0.98082472844313),

800 
FRAC_CONST
(0.98114907905608),

801 
FRAC_CONST
(0.98146918188197),

802 
FRAC_CONST
(0.98178507271438),

803 
FRAC_CONST
(0.98209678731477),

804 
FRAC_CONST
(0.98240436140902),

805 
FRAC_CONST
(0.98270783068385),

806 
FRAC_CONST
(0.98300723078342),

807 
FRAC_CONST
(0.98330259730589),

808 
FRAC_CONST
(0.98359396579995),

809 
FRAC_CONST
(0.98388137176152),

810 
FRAC_CONST
(0.98416485063031),

811 
FRAC_CONST
(0.98444443778651),

812 
FRAC_CONST
(0.98472016854752),

813 
FRAC_CONST
(0.98499207816463),

814 
FRAC_CONST
(0.98526020181980),

815 
FRAC_CONST
(0.98552457462240),

816 
FRAC_CONST
(0.98578523160609),

817 
FRAC_CONST
(0.98604220772560),

818 
FRAC_CONST
(0.98629553785362),

819 
FRAC_CONST
(0.98654525677772),

820 
FRAC_CONST
(0.98679139919726),

821 
FRAC_CONST
(0.98703399972035),

822 
FRAC_CONST
(0.98727309286089),

823 
FRAC_CONST
(0.98750871303556),

824 
FRAC_CONST
(0.98774089456089),

825 
FRAC_CONST
(0.98796967165036),

826 
FRAC_CONST
(0.98819507841154),

827 
FRAC_CONST
(0.98841714884323),

828 
FRAC_CONST
(0.98863591683269),

829 
FRAC_CONST
(0.98885141615285),

830 
FRAC_CONST
(0.98906368045957),

831 
FRAC_CONST
(0.98927274328896),

832 
FRAC_CONST
(0.98947863805473),

833 
FRAC_CONST
(0.98968139804554),

834 
FRAC_CONST
(0.98988105642241),

835 
FRAC_CONST
(0.99007764621618),

836 
FRAC_CONST
(0.99027120032501),

837 
FRAC_CONST
(0.99046175151186),

838 
FRAC_CONST
(0.99064933240208),

839 
FRAC_CONST
(0.99083397548099),

840 
FRAC_CONST
(0.99101571309153),

841 
FRAC_CONST
(0.99119457743191),

842 
FRAC_CONST
(0.99137060055337),

843 
FRAC_CONST
(0.99154381435784),

844 
FRAC_CONST
(0.99171425059582),

845 
FRAC_CONST
(0.99188194086414),

846 
FRAC_CONST
(0.99204691660388),

847 
FRAC_CONST
(0.99220920909823),

848 
FRAC_CONST
(0.99236884947045),

849 
FRAC_CONST
(0.99252586868186),

850 
FRAC_CONST
(0.99268029752989),

851 
FRAC_CONST
(0.99283216664606),

852 
FRAC_CONST
(0.99298150649419),

853 
FRAC_CONST
(0.99312834736847),

854 
FRAC_CONST
(0.99327271939167),

855 
FRAC_CONST
(0.99341465251338),

856 
FRAC_CONST
(0.99355417650825),

857 
FRAC_CONST
(0.99369132097430),

858 
FRAC_CONST
(0.99382611533130),

859 
FRAC_CONST
(0.99395858881910),

860 
FRAC_CONST
(0.99408877049612),

861 
FRAC_CONST
(0.99421668923778),

862 
FRAC_CONST
(0.99434237373503),

863 
FRAC_CONST
(0.99446585249289),

864 
FRAC_CONST
(0.99458715382906),

865 
FRAC_CONST
(0.99470630587254),

866 
FRAC_CONST
(0.99482333656229),

867 
FRAC_CONST
(0.99493827364600),

868 
FRAC_CONST
(0.99505114467878),

869 
FRAC_CONST
(0.99516197702200),

870 
FRAC_CONST
(0.99527079784214),

871 
FRAC_CONST
(0.99537763410962),

872 
FRAC_CONST
(0.99548251259777),

873 
FRAC_CONST
(0.99558545988178),

874 
FRAC_CONST
(0.99568650233767),

875 
FRAC_CONST
(0.99578566614138),

876 
FRAC_CONST
(0.99588297726783),

877 
FRAC_CONST
(0.99597846149005),

878 
FRAC_CONST
(0.99607214437834),

879 
FRAC_CONST
(0.99616405129947),

880 
FRAC_CONST
(0.99625420741595),

881 
FRAC_CONST
(0.99634263768527),

882 
FRAC_CONST
(0.99642936685928),

883 
FRAC_CONST
(0.99651441948352),

884 
FRAC_CONST
(0.99659781989663),

885 
FRAC_CONST
(0.99667959222978),

886 
FRAC_CONST
(0.99675976040620),

887 
FRAC_CONST
(0.99683834814063),

888 
FRAC_CONST
(0.99691537893895),

889 
FRAC_CONST
(0.99699087609774),

890 
FRAC_CONST
(0.99706486270391),

891 
FRAC_CONST
(0.99713736163442),

892 
FRAC_CONST
(0.99720839555593),

893 
FRAC_CONST
(0.99727798692461),

894 
FRAC_CONST
(0.99734615798589),

895 
FRAC_CONST
(0.99741293077431),

896 
FRAC_CONST
(0.99747832711337),

897 
FRAC_CONST
(0.99754236861541),

898 
FRAC_CONST
(0.99760507668158),

899 
FRAC_CONST
(0.99766647250181),

900 
FRAC_CONST
(0.99772657705478),

901 
FRAC_CONST
(0.99778541110799),

902 
FRAC_CONST
(0.99784299521785),

903 
FRAC_CONST
(0.99789934972976),

904 
FRAC_CONST
(0.99795449477828),

905 
FRAC_CONST
(0.99800845028730),

906 
FRAC_CONST
(0.99806123597027),

907 
FRAC_CONST
(0.99811287133042),

908 
FRAC_CONST
(0.99816337566108),

909 
FRAC_CONST
(0.99821276804596),

910 
FRAC_CONST
(0.99826106735952),

911 
FRAC_CONST
(0.99830829226732),

912 
FRAC_CONST
(0.99835446122649),

913 
FRAC_CONST
(0.99839959248609),

914 
FRAC_CONST
(0.99844370408765),

915 
FRAC_CONST
(0.99848681386566),

916 
FRAC_CONST
(0.99852893944805),

917 
FRAC_CONST
(0.99857009825685),

918 
FRAC_CONST
(0.99861030750869),

919 
FRAC_CONST
(0.99864958421549),

920 
FRAC_CONST
(0.99868794518504),

921 
FRAC_CONST
(0.99872540702178),

922 
FRAC_CONST
(0.99876198612738),

923 
FRAC_CONST
(0.99879769870160),

924 
FRAC_CONST
(0.99883256074295),

925 
FRAC_CONST
(0.99886658804953),

926 
FRAC_CONST
(0.99889979621983),

927 
FRAC_CONST
(0.99893220065356),

928 
FRAC_CONST
(0.99896381655254),

929 
FRAC_CONST
(0.99899465892154),

930 
FRAC_CONST
(0.99902474256924),

931 
FRAC_CONST
(0.99905408210916),

932 
FRAC_CONST
(0.99908269196056),

933 
FRAC_CONST
(0.99911058634952),

934 
FRAC_CONST
(0.99913777930986),

935 
FRAC_CONST
(0.99916428468421),

936 
FRAC_CONST
(0.99919011612505),

937 
FRAC_CONST
(0.99921528709576),

938 
FRAC_CONST
(0.99923981087174),

939 
FRAC_CONST
(0.99926370054150),

940 
FRAC_CONST
(0.99928696900779),

941 
FRAC_CONST
(0.99930962898876),

942 
FRAC_CONST
(0.99933169301910),

943 
FRAC_CONST
(0.99935317345126),

944 
FRAC_CONST
(0.99937408245662),

945 
FRAC_CONST
(0.99939443202674),

946 
FRAC_CONST
(0.99941423397457),

947 
FRAC_CONST
(0.99943349993572),

948 
FRAC_CONST
(0.99945224136972),

949 
FRAC_CONST
(0.99947046956130),

950 
FRAC_CONST
(0.99948819562171),

951 
FRAC_CONST
(0.99950543049000),

952 
FRAC_CONST
(0.99952218493439),

953 
FRAC_CONST
(0.99953846955355),

954 
FRAC_CONST
(0.99955429477803),

955 
FRAC_CONST
(0.99956967087154),

956 
FRAC_CONST
(0.99958460793242),

957 
FRAC_CONST
(0.99959911589494),

958 
FRAC_CONST
(0.99961320453077),

959 
FRAC_CONST
(0.99962688345035),

960 
FRAC_CONST
(0.99964016210433),

961 
FRAC_CONST
(0.99965304978499),

962 
FRAC_CONST
(0.99966555562769),

963 
FRAC_CONST
(0.99967768861231),

964 
FRAC_CONST
(0.99968945756473),

965 
FRAC_CONST
(0.99970087115825),

966 
FRAC_CONST
(0.99971193791510),

967 
FRAC_CONST
(0.99972266620792),

968 
FRAC_CONST
(0.99973306426121),

969 
FRAC_CONST
(0.99974314015288),

970 
FRAC_CONST
(0.99975290181568),

971 
FRAC_CONST
(0.99976235703876),

972 
FRAC_CONST
(0.99977151346914),

973 
FRAC_CONST
(0.99978037861326),

974 
FRAC_CONST
(0.99978895983845),

975 
FRAC_CONST
(0.99979726437448),

976 
FRAC_CONST
(0.99980529931507),

977 
FRAC_CONST
(0.99981307161943),

978 
FRAC_CONST
(0.99982058811377),

979 
FRAC_CONST
(0.99982785549283),

980 
FRAC_CONST
(0.99983488032144),

981 
FRAC_CONST
(0.99984166903600),

982 
FRAC_CONST
(0.99984822794606),

983 
FRAC_CONST
(0.99985456323584),

984 
FRAC_CONST
(0.99986068096572),

985 
FRAC_CONST
(0.99986658707386),

986 
FRAC_CONST
(0.99987228737764),

987 
FRAC_CONST
(0.99987778757524),

988 
FRAC_CONST
(0.99988309324717),

989 
FRAC_CONST
(0.99988820985777),

990 
FRAC_CONST
(0.99989314275675),

991 
FRAC_CONST
(0.99989789718072),

992 
FRAC_CONST
(0.99990247825468),

993 
FRAC_CONST
(0.99990689099357),

994 
FRAC_CONST
(0.99991114030376),

995 
FRAC_CONST
(0.99991523098456),

996 
FRAC_CONST
(0.99991916772971),

997 
FRAC_CONST
(0.99992295512891),

998 
FRAC_CONST
(0.99992659766930),

999 
FRAC_CONST
(0.99993009973692),

1000 
FRAC_CONST
(0.99993346561824),

1001 
FRAC_CONST
(0.99993669950161),

1002 
FRAC_CONST
(0.99993980547870),

1003 
FRAC_CONST
(0.99994278754604),

1004 
FRAC_CONST
(0.99994564960642),

1005 
FRAC_CONST
(0.99994839547033),

1006 
FRAC_CONST
(0.99995102885747),

1007 
FRAC_CONST
(0.99995355339809),

1008 
FRAC_CONST
(0.99995597263451),

1009 
FRAC_CONST
(0.99995829002249),

1010 
FRAC_CONST
(0.99996050893264),

1011 
FRAC_CONST
(0.99996263265183),

1012 
FRAC_CONST
(0.99996466438460),

1013 
FRAC_CONST
(0.99996660725452),

1014 
FRAC_CONST
(0.99996846430558),

1015 
FRAC_CONST
(0.99997023850356),

1016 
FRAC_CONST
(0.99997193273736),

1017 
FRAC_CONST
(0.99997354982037),

1018 
FRAC_CONST
(0.99997509249183),

1019 
FRAC_CONST
(0.99997656341810),

1020 
FRAC_CONST
(0.99997796519400),

1021 
FRAC_CONST
(0.99997930034415),

1022 
FRAC_CONST
(0.99998057132421),

1023 
FRAC_CONST
(0.99998178052220),

1024 
FRAC_CONST
(0.99998293025975),

1025 
FRAC_CONST
(0.99998402279338),

1026 
FRAC_CONST
(0.99998506031574),

1027 
FRAC_CONST
(0.99998604495686),

1028 
FRAC_CONST
(0.99998697878536),

1029 
FRAC_CONST
(0.99998786380966),

1030 
FRAC_CONST
(0.99998870197921),

1031 
FRAC_CONST
(0.99998949518567),

1032 
FRAC_CONST
(0.99999024526408),

1033 
FRAC_CONST
(0.99999095399401),

1034 
FRAC_CONST
(0.99999162310077),

1035 
FRAC_CONST
(0.99999225425649),

1036 
FRAC_CONST
(0.99999284908128),

1037 
FRAC_CONST
(0.99999340914435),

1038 
FRAC_CONST
(0.99999393596510),

1039 
FRAC_CONST
(0.99999443101421),

1040 
FRAC_CONST
(0.99999489571473),

1041 
FRAC_CONST
(0.99999533144314),

1042 
FRAC_CONST
(0.99999573953040),

1043 
FRAC_CONST
(0.99999612126300),

1044 
FRAC_CONST
(0.99999647788395),

1045 
FRAC_CONST
(0.99999681059383),

1046 
FRAC_CONST
(0.99999712055178),

1047 
FRAC_CONST
(0.99999740887647),

1048 
FRAC_CONST
(0.99999767664709),

1049 
FRAC_CONST
(0.99999792490431),

1050 
FRAC_CONST
(0.99999815465123),

1051 
FRAC_CONST
(0.99999836685427),

1052 
FRAC_CONST
(0.99999856244415),

1053 
FRAC_CONST
(0.99999874231676),

1054 
FRAC_CONST
(0.99999890733405),

1055 
FRAC_CONST
(0.99999905832493),

1056 
FRAC_CONST
(0.99999919608613),

1057 
FRAC_CONST
(0.99999932138304),

1058 
FRAC_CONST
(0.99999943495056),

1059 
FRAC_CONST
(0.99999953749392),

1060 
FRAC_CONST
(0.99999962968950),

1061 
FRAC_CONST
(0.99999971218563),

1062 
FRAC_CONST
(0.99999978560337),

1063 
FRAC_CONST
(0.99999985053727),

1064 
FRAC_CONST
(0.99999990755616),

1065 
FRAC_CONST
(0.99999995720387)

1068 #ifde‡
ALLOW_SMALL_FRAMELENGTH


1069 
ALIGN
 c⁄° 
ªÆ_t
 
kbd_l⁄g_960
[] = {

1070 
FRAC_CONST
(0.0003021562530949),

1071 
FRAC_CONST
(0.0004452267024786),

1072 
FRAC_CONST
(0.0005674947527496),

1073 
FRAC_CONST
(0.0006812465553466),

1074 
FRAC_CONST
(0.0007910496776387),

1075 
FRAC_CONST
(0.0008991655033895),

1076 
FRAC_CONST
(0.0010068978259384),

1077 
FRAC_CONST
(0.0011150758515751),

1078 
FRAC_CONST
(0.0012242653193642),

1079 
FRAC_CONST
(0.0013348735658205),

1080 
FRAC_CONST
(0.0014472068670273),

1081 
FRAC_CONST
(0.0015615039850448),

1082 
FRAC_CONST
(0.0016779568885263),

1083 
FRAC_CONST
(0.0017967241232412),

1084 
FRAC_CONST
(0.0019179397560955),

1085 
FRAC_CONST
(0.0020417195415393),

1086 
FRAC_CONST
(0.0021681652836642),

1087 
FRAC_CONST
(0.0022973679910599),

1088 
FRAC_CONST
(0.0024294102029937),

1089 
FRAC_CONST
(0.0025643677339078),

1090 
FRAC_CONST
(0.0027023110014772),

1091 
FRAC_CONST
(0.0028433060512612),

1092 
FRAC_CONST
(0.0029874153568025),

1093 
FRAC_CONST
(0.0031346984511728),

1094 
FRAC_CONST
(0.0032852124303662),

1095 
FRAC_CONST
(0.0034390123581190),

1096 
FRAC_CONST
(0.0035961515940931),

1097 
FRAC_CONST
(0.0037566820618961),

1098 
FRAC_CONST
(0.0039206544694386),

1099 
FRAC_CONST
(0.0040881184912194),

1100 
FRAC_CONST
(0.0042591229199617),

1101 
FRAC_CONST
(0.0044337157933972),

1102 
FRAC_CONST
(0.0046119445007641),

1103 
FRAC_CONST
(0.0047938558726415),

1104 
FRAC_CONST
(0.0049794962570131),

1105 
FRAC_CONST
(0.0051689115838900),

1106 
FRAC_CONST
(0.0053621474203763),

1107 
FRAC_CONST
(0.0055592490177131),

1108 
FRAC_CONST
(0.0057602613515573),

1109 
FRAC_CONST
(0.0059652291565289),

1110 
FRAC_CONST
(0.0061741969558843),

1111 
FRAC_CONST
(0.0063872090870253),

1112 
FRAC_CONST
(0.0066043097234387),

1113 
FRAC_CONST
(0.0068255428935640),

1114 
FRAC_CONST
(0.0070509524970088),

1115 
FRAC_CONST
(0.0072805823184660),

1116 
FRAC_CONST
(0.0075144760396340),

1117 
FRAC_CONST
(0.0077526772493942),

1118 
FRAC_CONST
(0.0079952294524673),

1119 
FRAC_CONST
(0.0082421760767325),

1120 
FRAC_CONST
(0.0084935604793733),

1121 
FRAC_CONST
(0.0087494259519870),

1122 
FRAC_CONST
(0.0090098157247792),

1123 
FRAC_CONST
(0.0092747729699467),

1124 
FRAC_CONST
(0.0095443408043399),

1125 
FRAC_CONST
(0.0098185622914832),

1126 
FRAC_CONST
(0.0100974804430226),

1127 
FRAC_CONST
(0.0103811382196612),

1128 
FRAC_CONST
(0.0106695785316351),

1129 
FRAC_CONST
(0.0109628442387771),

1130 
FRAC_CONST
(0.0112609781502091),

1131 
FRAC_CONST
(0.0115640230236993),

1132 
FRAC_CONST
(0.0118720215647169),

1133 
FRAC_CONST
(0.0121850164252137),

1134 
FRAC_CONST
(0.0125030502021561),

1135 
FRAC_CONST
(0.0128261654358321),

1136 
FRAC_CONST
(0.0131544046079532),

1137 
FRAC_CONST
(0.0134878101395681),

1138 
FRAC_CONST
(0.0138264243888068),

1139 
FRAC_CONST
(0.0141702896484671),

1140 
FRAC_CONST
(0.0145194481434592),

1141 
FRAC_CONST
(0.0148739420281182),

1142 
FRAC_CONST
(0.0152338133833959),

1143 
FRAC_CONST
(0.0155991042139432),

1144 
FRAC_CONST
(0.0159698564450882),

1145 
FRAC_CONST
(0.0163461119197227),

1146 
FRAC_CONST
(0.0167279123950996),

1147 
FRAC_CONST
(0.0171152995395520),

1148 
FRAC_CONST
(0.0175083149291368),

1149 
FRAC_CONST
(0.0179070000442104),

1150 
FRAC_CONST
(0.0183113962659409),

1151 
FRAC_CONST
(0.0187215448727609),

1152 
FRAC_CONST
(0.0191374870367659),

1153 
FRAC_CONST
(0.0195592638200623),

1154 
FRAC_CONST
(0.0199869161710679),

1155 
FRAC_CONST
(0.0204204849207691),

1156 
FRAC_CONST
(0.0208600107789370),

1157 
FRAC_CONST
(0.0213055343303066),

1158 
FRAC_CONST
(0.0217570960307201),

1159 
FRAC_CONST
(0.0222147362032386),

1160 
FRAC_CONST
(0.0226784950342228),

1161 
FRAC_CONST
(0.0231484125693867),

1162 
FRAC_CONST
(0.0236245287098244),

1163 
FRAC_CONST
(0.0241068832080138),

1164 
FRAC_CONST
(0.0245955156637973),

1165 
FRAC_CONST
(0.0250904655203431),

1166 
FRAC_CONST
(0.0255917720600868),

1167 
FRAC_CONST
(0.0260994744006559),

1168 
FRAC_CONST
(0.0266136114907790),

1169 
FRAC_CONST
(0.0271342221061795),

1170 
FRAC_CONST
(0.0276613448454576),

1171 
FRAC_CONST
(0.0281950181259587),

1172 
FRAC_CONST
(0.0287352801796329),

1173 
FRAC_CONST
(0.0292821690488833),

1174 
FRAC_CONST
(0.0298357225824074),

1175 
FRAC_CONST
(0.0303959784310299),

1176 
FRAC_CONST
(0.0309629740435296),

1177 
FRAC_CONST
(0.0315367466624615),

1178 
FRAC_CONST
(0.0321173333199732),

1179 
FRAC_CONST
(0.0327047708336193),

1180 
FRAC_CONST
(0.0332990958021720),

1181 
FRAC_CONST
(0.0339003446014307),

1182 
FRAC_CONST
(0.0345085533800302),

1183 
FRAC_CONST
(0.0351237580552491),

1184 
FRAC_CONST
(0.0357459943088193),

1185 
FRAC_CONST
(0.0363752975827358),

1186 
FRAC_CONST
(0.0370117030750704),

1187 
FRAC_CONST
(0.0376552457357870),

1188 
FRAC_CONST
(0.0383059602625614),

1189 
FRAC_CONST
(0.0389638810966056),

1190 
FRAC_CONST
(0.0396290424184964),

1191 
FRAC_CONST
(0.0403014781440112),

1192 
FRAC_CONST
(0.0409812219199691),

1193 
FRAC_CONST
(0.0416683071200799),

1194 
FRAC_CONST
(0.0423627668408009),

1195 
FRAC_CONST
(0.0430646338972016),

1196 
FRAC_CONST
(0.0437739408188385),

1197 
FRAC_CONST
(0.0444907198456388),

1198 
FRAC_CONST
(0.0452150029237951),

1199 
FRAC_CONST
(0.0459468217016708),

1200 
FRAC_CONST
(0.0466862075257170),

1201 
FRAC_CONST
(0.0474331914364021),

1202 
FRAC_CONST
(0.0481878041641539),

1203 
FRAC_CONST
(0.0489500761253148),

1204 
FRAC_CONST
(0.0497200374181119),

1205 
FRAC_CONST
(0.0504977178186404),

1206 
FRAC_CONST
(0.0512831467768636),

1207 
FRAC_CONST
(0.0520763534126273),

1208 
FRAC_CONST
(0.0528773665116913),

1209 
FRAC_CONST
(0.0536862145217772),

1210 
FRAC_CONST
(0.0545029255486345),

1211 
FRAC_CONST
(0.0553275273521232),

1212 
FRAC_CONST
(0.0561600473423164),

1213 
FRAC_CONST
(0.0570005125756209),

1214 
FRAC_CONST
(0.0578489497509179),

1215 
FRAC_CONST
(0.0587053852057233),

1216 
FRAC_CONST
(0.0595698449123695),

1217 
FRAC_CONST
(0.0604423544742077),

1218 
FRAC_CONST
(0.0613229391218317),

1219 
FRAC_CONST
(0.0622116237093247),

1220 
FRAC_CONST
(0.0631084327105284),

1221 
FRAC_CONST
(0.0640133902153352),

1222 
FRAC_CONST
(0.0649265199260043),

1223 
FRAC_CONST
(0.0658478451535027),

1224 
FRAC_CONST
(0.0667773888138695),

1225 
FRAC_CONST
(0.0677151734246072),

1226 
FRAC_CONST
(0.0686612211010977),

1227 
FRAC_CONST
(0.0696155535530446),

1228 
FRAC_CONST
(0.0705781920809429),

1229 
FRAC_CONST
(0.0715491575725758),

1230 
FRAC_CONST
(0.0725284704995383),

1231 
FRAC_CONST
(0.0735161509137906),

1232 
FRAC_CONST
(0.0745122184442388),

1233 
FRAC_CONST
(0.0755166922933461),

1234 
FRAC_CONST
(0.0765295912337720),

1235 
FRAC_CONST
(0.0775509336050437),

1236 
FRAC_CONST
(0.0785807373102561),

1237 
FRAC_CONST
(0.0796190198128044),

1238 
FRAC_CONST
(0.0806657981331473),

1239 
FRAC_CONST
(0.0817210888456026),

1240 
FRAC_CONST
(0.0827849080751753),

1241 
FRAC_CONST
(0.0838572714944183),

1242 
FRAC_CONST
(0.0849381943203265),

1243 
FRAC_CONST
(0.0860276913112652),

1244 
FRAC_CONST
(0.0871257767639319),

1245 
FRAC_CONST
(0.0882324645103534),

1246 
FRAC_CONST
(0.0893477679149177),

1247 
FRAC_CONST
(0.0904716998714418),

1248 
FRAC_CONST
(0.0916042728002747),

1249 
FRAC_CONST
(0.0927454986454381),

1250 
FRAC_CONST
(0.0938953888718020),

1251 
FRAC_CONST
(0.0950539544622996),

1252 
FRAC_CONST
(0.0962212059151784),

1253 
FRAC_CONST
(0.0973971532412897),

1254 
FRAC_CONST
(0.0985818059614169),

1255 
FRAC_CONST
(0.0997751731036425),

1256 
FRAC_CONST
(0.1009772632007537),

1257 
FRAC_CONST
(0.1021880842876888),

1258 
FRAC_CONST
(0.1034076438990227),

1259 
FRAC_CONST
(0.1046359490664932),

1260 
FRAC_CONST
(0.1058730063165681),

1261 
FRAC_CONST
(0.1071188216680533),

1262 
FRAC_CONST
(0.1083734006297428),

1263 
FRAC_CONST
(0.1096367481981100),

1264 
FRAC_CONST
(0.1109088688550422),

1265 
FRAC_CONST
(0.1121897665656167),

1266 
FRAC_CONST
(0.1134794447759207),

1267 
FRAC_CONST
(0.1147779064109143),

1268 
FRAC_CONST
(0.1160851538723372),

1269 
FRAC_CONST
(0.1174011890366591),

1270 
FRAC_CONST
(0.1187260132530751),

1271 
FRAC_CONST
(0.1200596273415457),

1272 
FRAC_CONST
(0.1214020315908810),

1273 
FRAC_CONST
(0.1227532257568719),

1274 
FRAC_CONST
(0.1241132090604651),

1275 
FRAC_CONST
(0.1254819801859856),

1276 
FRAC_CONST
(0.1268595372794049),

1277 
FRAC_CONST
(0.1282458779466558),

1278 
FRAC_CONST
(0.1296409992519942),

1279 
FRAC_CONST
(0.1310448977164081),

1280 
FRAC_CONST
(0.1324575693160745),

1281 
FRAC_CONST
(0.1338790094808633),

1282 
FRAC_CONST
(0.1353092130928902),

1283 
FRAC_CONST
(0.1367481744851168),

1284 
FRAC_CONST
(0.1381958874400010),

1285 
FRAC_CONST
(0.1396523451881945),

1286 
FRAC_CONST
(0.1411175404072910),

1287 
FRAC_CONST
(0.1425914652206223),

1288 
FRAC_CONST
(0.1440741111961058),

1289 
FRAC_CONST
(0.1455654693451402),

1290 
FRAC_CONST
(0.1470655301215526),

1291 
FRAC_CONST
(0.1485742834205956),

1292 
FRAC_CONST
(0.1500917185779945),

1293 
FRAC_CONST
(0.1516178243690463),

1294 
FRAC_CONST
(0.1531525890077689),

1295 
FRAC_CONST
(0.1546960001461024),

1296 
FRAC_CONST
(0.1562480448731608),

1297 
FRAC_CONST
(0.1578087097145364),

1298 
FRAC_CONST
(0.1593779806316558),

1299 
FRAC_CONST
(0.1609558430211876),

1300 
FRAC_CONST
(0.1625422817145027),

1301 
FRAC_CONST
(0.1641372809771871),

1302 
FRAC_CONST
(0.1657408245086070),

1303 
FRAC_CONST
(0.1673528954415270),

1304 
FRAC_CONST
(0.1689734763417811),

1305 
FRAC_CONST
(0.1706025492079969),

1306 
FRAC_CONST
(0.1722400954713725),

1307 
FRAC_CONST
(0.1738860959955082),

1308 
FRAC_CONST
(0.1755405310762898),

1309 
FRAC_CONST
(0.1772033804418275),

1310 
FRAC_CONST
(0.1788746232524467),

1311 
FRAC_CONST
(0.1805542381007349),

1312 
FRAC_CONST
(0.1822422030116404),

1313 
FRAC_CONST
(0.1839384954426268),

1314 
FRAC_CONST
(0.1856430922838810),

1315 
FRAC_CONST
(0.1873559698585756),

1316 
FRAC_CONST
(0.1890771039231862),

1317 
FRAC_CONST
(0.1908064696678625),

1318 
FRAC_CONST
(0.1925440417168546),

1319 
FRAC_CONST
(0.1942897941289937),

1320 
FRAC_CONST
(0.1960437003982277),

1321 
FRAC_CONST
(0.1978057334542116),

1322 
FRAC_CONST
(0.1995758656629525),

1323 
FRAC_CONST
(0.2013540688275098),

1324 
FRAC_CONST
(0.2031403141887507),

1325 
FRAC_CONST
(0.2049345724261595),

1326 
FRAC_CONST
(0.2067368136587033),

1327 
FRAC_CONST
(0.2085470074457521),

1328 
FRAC_CONST
(0.2103651227880538),

1329 
FRAC_CONST
(0.2121911281287646),

1330 
FRAC_CONST
(0.2140249913545346),

1331 
FRAC_CONST
(0.2158666797966480),

1332 
FRAC_CONST
(0.2177161602322188),

1333 
FRAC_CONST
(0.2195733988854414),

1334 
FRAC_CONST
(0.2214383614288963),

1335 
FRAC_CONST
(0.2233110129849106),

1336 
FRAC_CONST
(0.2251913181269740),

1337 
FRAC_CONST
(0.2270792408812093),

1338 
FRAC_CONST
(0.2289747447278976),

1339 
FRAC_CONST
(0.2308777926030592),

1340 
FRAC_CONST
(0.2327883469000885),

1341 
FRAC_CONST
(0.2347063694714437),

1342 
FRAC_CONST
(0.2366318216303919),

1343 
FRAC_CONST
(0.2385646641528076),

1344 
FRAC_CONST
(0.2405048572790267),

1345 
FRAC_CONST
(0.2424523607157545),

1346 
FRAC_CONST
(0.2444071336380283),

1347 
FRAC_CONST
(0.2463691346912334),

1348 
FRAC_CONST
(0.2483383219931741),

1349 
FRAC_CONST
(0.2503146531361985),

1350 
FRAC_CONST
(0.2522980851893767),

1351 
FRAC_CONST
(0.2542885747007335),

1352 
FRAC_CONST
(0.2562860776995335),

1353 
FRAC_CONST
(0.2582905496986215),

1354 
FRAC_CONST
(0.2603019456968142),

1355 
FRAC_CONST
(0.2623202201813464),

1356 
FRAC_CONST
(0.2643453271303700),

1357 
FRAC_CONST
(0.2663772200155053),

1358 
FRAC_CONST
(0.2684158518044454),

1359 
FRAC_CONST
(0.2704611749636135),

1360 
FRAC_CONST
(0.2725131414608710),

1361 
FRAC_CONST
(0.2745717027682799),

1362 
FRAC_CONST
(0.2766368098649151),

1363 
FRAC_CONST
(0.2787084132397296),

1364 
FRAC_CONST
(0.2807864628944707),

1365 
FRAC_CONST
(0.2828709083466482),

1366 
FRAC_CONST
(0.2849616986325523),

1367 
FRAC_CONST
(0.2870587823103237),

1368 
FRAC_CONST
(0.2891621074630737),

1369 
FRAC_CONST
(0.2912716217020546),

1370 
FRAC_CONST
(0.2933872721698803),

1371 
FRAC_CONST
(0.2955090055437973),

1372 
FRAC_CONST
(0.2976367680390041),

1373 
FRAC_CONST
(0.2997705054120213),

1374 
FRAC_CONST
(0.3019101629641097),

1375 
FRAC_CONST
(0.3040556855447379),

1376 
FRAC_CONST
(0.3062070175550981),

1377 
FRAC_CONST
(0.3083641029516701),

1378 
FRAC_CONST
(0.3105268852498334),

1379 
FRAC_CONST
(0.3126953075275265),

1380 
FRAC_CONST
(0.3148693124289546),

1381 
FRAC_CONST
(0.3170488421683428),

1382 
FRAC_CONST
(0.3192338385337370),

1383 
FRAC_CONST
(0.3214242428908514),

1384 
FRAC_CONST
(0.3236199961869606),

1385 
FRAC_CONST
(0.3258210389548392),

1386 
FRAC_CONST
(0.3280273113167459),

1387 
FRAC_CONST
(0.3302387529884521),

1388 
FRAC_CONST
(0.3324553032833160),

1389 
FRAC_CONST
(0.3346769011164010),

1390 
FRAC_CONST
(0.3369034850086373),

1391 
FRAC_CONST
(0.3391349930910280),

1392 
FRAC_CONST
(0.3413713631088974),

1393 
FRAC_CONST
(0.3436125324261830),

1394 
FRAC_CONST
(0.3458584380297697),

1395 
FRAC_CONST
(0.3481090165338656),

1396 
FRAC_CONST
(0.3503642041844199),

1397 
FRAC_CONST
(0.3526239368635820),

1398 
FRAC_CONST
(0.3548881500942010),

1399 
FRAC_CONST
(0.3571567790443668),

1400 
FRAC_CONST
(0.3594297585319891),

1401 
FRAC_CONST
(0.3617070230294185),

1402 
FRAC_CONST
(0.3639885066681048),

1403 
FRAC_CONST
(0.3662741432432950),

1404 
FRAC_CONST
(0.3685638662187693),

1405 
FRAC_CONST
(0.3708576087316147),

1406 
FRAC_CONST
(0.3731553035970366),

1407 
FRAC_CONST
(0.3754568833132069),

1408 
FRAC_CONST
(0.3777622800661488),

1409 
FRAC_CONST
(0.3800714257346570),

1410 
FRAC_CONST
(0.3823842518952546),

1411 
FRAC_CONST
(0.3847006898271841),

1412 
FRAC_CONST
(0.3870206705174334),

1413 
FRAC_CONST
(0.3893441246657958),

1414 
FRAC_CONST
(0.3916709826899639),

1415 
FRAC_CONST
(0.3940011747306560),

1416 
FRAC_CONST
(0.3963346306567764),

1417 
FRAC_CONST
(0.3986712800706062),

1418 
FRAC_CONST
(0.4010110523130271),

1419 
FRAC_CONST
(0.4033538764687756),

1420 
FRAC_CONST
(0.4056996813717284),

1421 
FRAC_CONST
(0.4080483956102172),

1422 
FRAC_CONST
(0.4103999475323736),

1423 
FRAC_CONST
(0.4127542652515031),

1424 
FRAC_CONST
(0.4151112766514873),

1425 
FRAC_CONST
(0.4174709093922143),

1426 
FRAC_CONST
(0.4198330909150365),

1427 
FRAC_CONST
(0.4221977484482556),

1428 
FRAC_CONST
(0.4245648090126334),

1429 
FRAC_CONST
(0.4269341994269293),

1430 
FRAC_CONST
(0.4293058463134616),

1431 
FRAC_CONST
(0.4316796761036958),

1432 
FRAC_CONST
(0.4340556150438547),

1433 
FRAC_CONST
(0.4364335892005536),

1434 
FRAC_CONST
(0.4388135244664580),

1435 
FRAC_CONST
(0.4411953465659639),

1436 
FRAC_CONST
(0.4435789810609000),

1437 
FRAC_CONST
(0.4459643533562509),

1438 
FRAC_CONST
(0.4483513887059016),

1439 
FRAC_CONST
(0.4507400122184019),

1440 
FRAC_CONST
(0.4531301488627497),

1441 
FRAC_CONST
(0.4555217234741947),

1442 
FRAC_CONST
(0.4579146607600593),

1443 
FRAC_CONST
(0.4603088853055777),

1444 
FRAC_CONST
(0.4627043215797521),

1445 
FRAC_CONST
(0.4651008939412254),

1446 
FRAC_CONST
(0.4674985266441709),

1447 
FRAC_CONST
(0.4698971438441951),

1448 
FRAC_CONST
(0.4722966696042580),

1449 
FRAC_CONST
(0.4746970279006055),

1450 
FRAC_CONST
(0.4770981426287164),

1451 
FRAC_CONST
(0.4794999376092619),

1452 
FRAC_CONST
(0.4819023365940778),

1453 
FRAC_CONST
(0.4843052632721476),

1454 
FRAC_CONST
(0.4867086412755978),

1455 
FRAC_CONST
(0.4891123941857028),

1456 
FRAC_CONST
(0.4915164455388997),

1457 
FRAC_CONST
(0.4939207188328126),

1458 
FRAC_CONST
(0.4963251375322855),

1459 
FRAC_CONST
(0.4987296250754225),

1460 
FRAC_CONST
(0.5011341048796359),

1461 
FRAC_CONST
(0.5035385003477012),

1462 
FRAC_CONST
(0.5059427348738168),

1463 
FRAC_CONST
(0.5083467318496706),

1464 
FRAC_CONST
(0.5107504146705106),

1465 
FRAC_CONST
(0.5131537067412193),

1466 
FRAC_CONST
(0.5155565314823923),

1467 
FRAC_CONST
(0.5179588123364193),

1468 
FRAC_CONST
(0.5203604727735667),

1469 
FRAC_CONST
(0.5227614362980630),

1470 
FRAC_CONST
(0.5251616264541841),

1471 
FRAC_CONST
(0.5275609668323384),

1472 
FRAC_CONST
(0.5299593810751532),

1473 
FRAC_CONST
(0.5323567928835578),

1474 
FRAC_CONST
(0.5347531260228663),

1475 
FRAC_CONST
(0.5371483043288580),

1476 
FRAC_CONST
(0.5395422517138538),

1477 
FRAC_CONST
(0.5419348921727899),

1478 
FRAC_CONST
(0.5443261497892862),

1479 
FRAC_CONST
(0.5467159487417104),

1480 
FRAC_CONST
(0.5491042133092364),

1481 
FRAC_CONST
(0.5514908678778958),

1482 
FRAC_CONST
(0.5538758369466227),

1483 
FRAC_CONST
(0.5562590451332913),

1484 
FRAC_CONST
(0.5586404171807443),

1485 
FRAC_CONST
(0.5610198779628133),

1486 
FRAC_CONST
(0.5633973524903286),

1487 
FRAC_CONST
(0.5657727659171199),

1488 
FRAC_CONST
(0.5681460435460047),

1489 
FRAC_CONST
(0.5705171108347663),

1490 
FRAC_CONST
(0.5728858934021188),

1491 
FRAC_CONST
(0.5752523170336598),

1492 
FRAC_CONST
(0.5776163076878088),

1493 
FRAC_CONST
(0.5799777915017323),

1494 
FRAC_CONST
(0.5823366947972535),

1495 
FRAC_CONST
(0.5846929440867458),

1496 
FRAC_CONST
(0.5870464660790119),

1497 
FRAC_CONST
(0.5893971876851449),

1498 
FRAC_CONST
(0.5917450360243719),

1499 
FRAC_CONST
(0.5940899384298793),

1500 
FRAC_CONST
(0.5964318224546208),

1501 
FRAC_CONST
(0.5987706158771039),

1502 
FRAC_CONST
(0.6011062467071583),

1503 
FRAC_CONST
(0.6034386431916822),

1504 
FRAC_CONST
(0.6057677338203681),

1505 
FRAC_CONST
(0.6080934473314057),

1506 
FRAC_CONST
(0.6104157127171639),

1507 
FRAC_CONST
(0.6127344592298474),

1508 
FRAC_CONST
(0.6150496163871310),

1509 
FRAC_CONST
(0.6173611139777690),

1510 
FRAC_CONST
(0.6196688820671789),

1511 
FRAC_CONST
(0.6219728510029997),

1512 
FRAC_CONST
(0.6242729514206247),

1513 
FRAC_CONST
(0.6265691142487051),

1514 
FRAC_CONST
(0.6288612707146283),

1515 
FRAC_CONST
(0.6311493523499663),

1516 
FRAC_CONST
(0.6334332909958958),

1517 
FRAC_CONST
(0.6357130188085891),

1518 
FRAC_CONST
(0.6379884682645743),

1519 
FRAC_CONST
(0.6402595721660647),

1520 
FRAC_CONST
(0.6425262636462578),

1521 
FRAC_CONST
(0.6447884761746012),

1522 
FRAC_CONST
(0.6470461435620266),

1523 
FRAC_CONST
(0.6492991999661505),

1524 
FRAC_CONST
(0.6515475798964411),

1525 
FRAC_CONST
(0.6537912182193508),

1526 
FRAC_CONST
(0.6560300501634142),

1527 
FRAC_CONST
(0.6582640113243098),

1528 
FRAC_CONST
(0.6604930376698862),

1529 
FRAC_CONST
(0.6627170655451516),

1530 
FRAC_CONST
(0.6649360316772256),

1531 
FRAC_CONST
(0.6671498731802533),

1532 
FRAC_CONST
(0.6693585275602818),

1533 
FRAC_CONST
(0.6715619327200959),

1534 
FRAC_CONST
(0.6737600269640164),

1535 
FRAC_CONST
(0.6759527490026566),

1536 
FRAC_CONST
(0.6781400379576392),

1537 
FRAC_CONST
(0.6803218333662715),

1538 
FRAC_CONST
(0.6824980751861787),

1539 
FRAC_CONST
(0.6846687037998949),

1540 
FRAC_CONST
(0.6868336600194123),

1541 
FRAC_CONST
(0.6889928850906855),

1542 
FRAC_CONST
(0.6911463206980928),

1543 
FRAC_CONST
(0.6932939089688525),

1544 
FRAC_CONST
(0.6954355924773949),

1545 
FRAC_CONST
(0.6975713142496884),

1546 
FRAC_CONST
(0.6997010177675195),

1547 
FRAC_CONST
(0.7018246469727265),

1548 
FRAC_CONST
(0.7039421462713862),

1549 
FRAC_CONST
(0.7060534605379528),

1550 
FRAC_CONST
(0.7081585351193496),

1551 
FRAC_CONST
(0.7102573158390105),

1552 
FRAC_CONST
(0.7123497490008750),

1553 
FRAC_CONST
(0.7144357813933307),

1554 
FRAC_CONST
(0.7165153602931092),

1555 
FRAC_CONST
(0.7185884334691287),

1556 
FRAC_CONST
(0.7206549491862871),

1557 
FRAC_CONST
(0.7227148562092042),

1558 
FRAC_CONST
(0.7247681038059106),

1559 
FRAC_CONST
(0.7268146417514855),

1560 
FRAC_CONST
(0.7288544203316418),

1561 
FRAC_CONST
(0.7308873903462577),

1562 
FRAC_CONST
(0.7329135031128549),

1563 
FRAC_CONST
(0.7349327104700221),

1564 
FRAC_CONST
(0.7369449647807855),

1565 
FRAC_CONST
(0.7389502189359237),

1566 
FRAC_CONST
(0.7409484263572271),

1567 
FRAC_CONST
(0.7429395410007016),

1568 
FRAC_CONST
(0.7449235173597176),

1569 
FRAC_CONST
(0.7469003104681008),

1570 
FRAC_CONST
(0.7488698759031670),

1571 
FRAC_CONST
(0.7508321697887005),

1572 
FRAC_CONST
(0.7527871487978728),

1573 
FRAC_CONST
(0.7547347701561059),

1574 
FRAC_CONST
(0.7566749916438754),

1575 
FRAC_CONST
(0.7586077715994560),

1576 
FRAC_CONST
(0.7605330689216074),

1577 
FRAC_CONST
(0.7624508430722016),

1578 
FRAC_CONST
(0.7643610540787891),

1579 
FRAC_CONST
(0.7662636625371070),

1580 
FRAC_CONST
(0.7681586296135255),

1581 
FRAC_CONST
(0.7700459170474343),

1582 
FRAC_CONST
(0.7719254871535672),

1583 
FRAC_CONST
(0.7737973028242671),

1584 
FRAC_CONST
(0.7756613275316875),

1585 
FRAC_CONST
(0.7775175253299340),

1586 
FRAC_CONST
(0.7793658608571425),

1587 
FRAC_CONST
(0.7812062993374951),

1588 
FRAC_CONST
(0.7830388065831744),

1589 
FRAC_CONST
(0.7848633489962533),

1590 
FRAC_CONST
(0.7866798935705233),

1591 
FRAC_CONST
(0.7884884078932579),

1592 
FRAC_CONST
(0.7902888601469138),

1593 
FRAC_CONST
(0.7920812191107668),

1594 
FRAC_CONST
(0.7938654541624850),

1595 
FRAC_CONST
(0.7956415352796368),

1596 
FRAC_CONST
(0.7974094330411343),

1597 
FRAC_CONST
(0.7991691186286133),

1598 
FRAC_CONST
(0.8009205638277465),

1599 
FRAC_CONST
(0.8026637410294932),

1600 
FRAC_CONST
(0.8043986232312831),

1601 
FRAC_CONST
(0.8061251840381346),

1602 
FRAC_CONST
(0.8078433976637077),

1603 
FRAC_CONST
(0.8095532389312917),

1604 
FRAC_CONST
(0.8112546832747255),

1605 
FRAC_CONST
(0.8129477067392539),

1606 
FRAC_CONST
(0.8146322859823164),

1607 
FRAC_CONST
(0.8163083982742698),

1608 
FRAC_CONST
(0.8179760214990457),

1609 
FRAC_CONST
(0.8196351341547393),

1610 
FRAC_CONST
(0.8212857153541345),

1611 
FRAC_CONST
(0.8229277448251595),

1612 
FRAC_CONST
(0.8245612029112778),

1613 
FRAC_CONST
(0.8261860705718113),

1614 
FRAC_CONST
(0.8278023293821971),

1615 
FRAC_CONST
(0.8294099615341773),

1616 
FRAC_CONST
(0.8310089498359212),

1617 
FRAC_CONST
(0.8325992777120815),

1618 
FRAC_CONST
(0.8341809292037831),

1619 
FRAC_CONST
(0.8357538889685445),

1620 
FRAC_CONST
(0.8373181422801330),

1621 
FRAC_CONST
(0.8388736750283521),

1622 
FRAC_CONST
(0.8404204737187619),

1623 
FRAC_CONST
(0.8419585254723335),

1624 
FRAC_CONST
(0.8434878180250348),

1625 
FRAC_CONST
(0.8450083397273509),

1626 
FRAC_CONST
(0.8465200795437368),

1627 
FRAC_CONST
(0.8480230270520029),

1628 
FRAC_CONST
(0.8495171724426350),

1629 
FRAC_CONST
(0.8510025065180464),

1630 
FRAC_CONST
(0.8524790206917633),

1631 
FRAC_CONST
(0.8539467069875448),

1632 
FRAC_CONST
(0.8554055580384357),

1633 
FRAC_CONST
(0.8568555670857525),

1634 
FRAC_CONST
(0.8582967279780043),

1635 
FRAC_CONST
(0.8597290351697464),

1636 
FRAC_CONST
(0.8611524837203691),

1637 
FRAC_CONST
(0.8625670692928198),

1638 
FRAC_CONST
(0.8639727881522599),

1639 
FRAC_CONST
(0.8653696371646555),

1640 
FRAC_CONST
(0.8667576137953045),

1641 
FRAC_CONST
(0.8681367161072958),

1642 
FRAC_CONST
(0.8695069427599065),

1643 
FRAC_CONST
(0.8708682930069319),

1644 
FRAC_CONST
(0.8722207666949527),

1645 
FRAC_CONST
(0.8735643642615368),

1646 
FRAC_CONST
(0.8748990867333771),

1647 
FRAC_CONST
(0.8762249357243662),

1648 
FRAC_CONST
(0.8775419134336067),

1649 
FRAC_CONST
(0.8788500226433579),

1650 
FRAC_CONST
(0.8801492667169208),

1651 
FRAC_CONST
(0.8814396495964587),

1652 
FRAC_CONST
(0.8827211758007560),

1653 
FRAC_CONST
(0.8839938504229149),

1654 
FRAC_CONST
(0.8852576791279895),

1655 
FRAC_CONST
(0.8865126681505587),

1656 
FRAC_CONST
(0.8877588242922386),

1657 
FRAC_CONST
(0.8889961549191320),

1658 
FRAC_CONST
(0.8902246679592184),

1659 
FRAC_CONST
(0.8914443718996848),

1660 
FRAC_CONST
(0.8926552757841945),

1661 
FRAC_CONST
(0.8938573892100969),

1662 
FRAC_CONST
(0.8950507223255798),

1663 
FRAC_CONST
(0.8962352858267605),

1664 
FRAC_CONST
(0.8974110909547198),

1665 
FRAC_CONST
(0.8985781494924783),

1666 
FRAC_CONST
(0.8997364737619142),

1667 
FRAC_CONST
(0.9008860766206249),

1668 
FRAC_CONST
(0.9020269714587307),

1669 
FRAC_CONST
(0.9031591721956235),

1670 
FRAC_CONST
(0.9042826932766591),

1671 
FRAC_CONST
(0.9053975496697941),

1672 
FRAC_CONST
(0.9065037568621681),

1673 
FRAC_CONST
(0.9076013308566311),

1674 
FRAC_CONST
(0.9086902881682180),

1675 
FRAC_CONST
(0.9097706458205682),

1676 
FRAC_CONST
(0.9108424213422940),

1677 
FRAC_CONST
(0.9119056327632955),

1678 
FRAC_CONST
(0.9129602986110235),

1679 
FRAC_CONST
(0.9140064379066919),

1680 
FRAC_CONST
(0.9150440701614393),

1681 
FRAC_CONST
(0.9160732153724396),

1682 
FRAC_CONST
(0.9170938940189634),

1683 
FRAC_CONST
(0.9181061270583908),

1684 
FRAC_CONST
(0.9191099359221748),

1685 
FRAC_CONST
(0.9201053425117579),

1686 
FRAC_CONST
(0.9210923691944400),

1687 
FRAC_CONST
(0.9220710387992010),

1688 
FRAC_CONST
(0.9230413746124764),

1689 
FRAC_CONST
(0.9240034003738882),

1690 
FRAC_CONST
(0.9249571402719298),

1691 
FRAC_CONST
(0.9259026189396085),

1692 
FRAC_CONST
(0.9268398614500427),

1693 
FRAC_CONST
(0.9277688933120170),

1694 
FRAC_CONST
(0.9286897404654957),

1695 
FRAC_CONST
(0.9296024292770939),

1696 
FRAC_CONST
(0.9305069865355076),

1697 
FRAC_CONST
(0.9314034394469048),

1698 
FRAC_CONST
(0.9322918156302762),

1699 
FRAC_CONST
(0.9331721431127471),

1700 
FRAC_CONST
(0.9340444503248519),

1701 
FRAC_CONST
(0.9349087660957711),

1702 
FRAC_CONST
(0.9357651196485313),

1703 
FRAC_CONST
(0.9366135405951697),

1704 
FRAC_CONST
(0.9374540589318637),

1705 
FRAC_CONST
(0.9382867050340261),

1706 
FRAC_CONST
(0.9391115096513655),

1707 
FRAC_CONST
(0.9399285039029165),

1708 
FRAC_CONST
(0.9407377192720349),

1709 
FRAC_CONST
(0.9415391876013639),

1710 
FRAC_CONST
(0.9423329410877687),

1711 
FRAC_CONST
(0.9431190122772415),

1712 
FRAC_CONST
(0.9438974340597782),

1713 
FRAC_CONST
(0.9446682396642262),

1714 
FRAC_CONST
(0.9454314626531054),

1715 
FRAC_CONST
(0.9461871369174033),

1716 
FRAC_CONST
(0.9469352966713429),

1717 
FRAC_CONST
(0.9476759764471278),

1718 
FRAC_CONST
(0.9484092110896616),

1719 
FRAC_CONST
(0.9491350357512457),

1720 
FRAC_CONST
(0.9498534858862532),

1721 
FRAC_CONST
(0.9505645972457831),

1722 
FRAC_CONST
(0.9512684058722927),

1723 
FRAC_CONST
(0.9519649480942105),

1724 
FRAC_CONST
(0.9526542605205314),

1725 
FRAC_CONST
(0.9533363800353921),

1726 
FRAC_CONST
(0.9540113437926313),

1727 
FRAC_CONST
(0.9546791892103320),

1728 
FRAC_CONST
(0.9553399539653500),

1729 
FRAC_CONST
(0.9559936759878265),

1730 
FRAC_CONST
(0.9566403934556893),

1731 
FRAC_CONST
(0.9572801447891388),

1732 
FRAC_CONST
(0.9579129686451244),

1733 
FRAC_CONST
(0.9585389039118085),

1734 
FRAC_CONST
(0.9591579897030224),

1735 
FRAC_CONST
(0.9597702653527108),

1736 
FRAC_CONST
(0.9603757704093711),

1737 
FRAC_CONST
(0.9609745446304828),

1738 
FRAC_CONST
(0.9615666279769324),

1739 
FRAC_CONST
(0.9621520606074324),

1740 
FRAC_CONST
(0.9627308828729358),

1741 
FRAC_CONST
(0.9633031353110477),

1742 
FRAC_CONST
(0.9638688586404335),

1743 
FRAC_CONST
(0.9644280937552258),

1744 
FRAC_CONST
(0.9649808817194311),

1745 
FRAC_CONST
(0.9655272637613366),

1746 
FRAC_CONST
(0.9660672812679171),

1747 
FRAC_CONST
(0.9666009757792454),

1748 
FRAC_CONST
(0.9671283889829055),

1749 
FRAC_CONST
(0.9676495627084089),

1750 
FRAC_CONST
(0.9681645389216160),

1751 
FRAC_CONST
(0.9686733597191652),

1752 
FRAC_CONST
(0.9691760673229058),

1753 
FRAC_CONST
(0.9696727040743406),

1754 
FRAC_CONST
(0.9701633124290767),

1755 
FRAC_CONST
(0.9706479349512860),

1756 
FRAC_CONST
(0.9711266143081750),

1757 
FRAC_CONST
(0.9715993932644684),

1758 
FRAC_CONST
(0.9720663146769026),

1759 
FRAC_CONST
(0.9725274214887337),

1760 
FRAC_CONST
(0.9729827567242596),

1761 
FRAC_CONST
(0.9734323634833574),

1762 
FRAC_CONST
(0.9738762849360358),

1763 
FRAC_CONST
(0.9743145643170059),

1764 
FRAC_CONST
(0.9747472449202687),

1765 
FRAC_CONST
(0.9751743700937215),

1766 
FRAC_CONST
(0.9755959832337850),

1767 
FRAC_CONST
(0.9760121277800496),

1768 
FRAC_CONST
(0.9764228472099433),

1769 
FRAC_CONST
(0.9768281850334235),

1770 
FRAC_CONST
(0.9772281847876897),

1771 
FRAC_CONST
(0.9776228900319223),

1772 
FRAC_CONST
(0.9780123443420448),

1773 
FRAC_CONST
(0.9783965913055132),

1774 
FRAC_CONST
(0.9787756745161313),

1775 
FRAC_CONST
(0.9791496375688939),

1776 
FRAC_CONST
(0.9795185240548578),

1777 
FRAC_CONST
(0.9798823775560431),

1778 
FRAC_CONST
(0.9802412416403639),

1779 
FRAC_CONST
(0.9805951598565897),

1780 
FRAC_CONST
(0.9809441757293399),

1781 
FRAC_CONST
(0.9812883327541090),

1782 
FRAC_CONST
(0.9816276743923267),

1783 
FRAC_CONST
(0.9819622440664515),

1784 
FRAC_CONST
(0.9822920851550995),

1785 
FRAC_CONST
(0.9826172409882086),

1786 
FRAC_CONST
(0.9829377548422400),

1787 
FRAC_CONST
(0.9832536699354163),

1788 
FRAC_CONST
(0.9835650294229984),

1789 
FRAC_CONST
(0.9838718763926001),

1790 
FRAC_CONST
(0.9841742538595437),

1791 
FRAC_CONST
(0.9844722047622547),

1792 
FRAC_CONST
(0.9847657719576983),

1793 
FRAC_CONST
(0.9850549982168574),

1794 
FRAC_CONST
(0.9853399262202529),

1795 
FRAC_CONST
(0.9856205985535073),

1796 
FRAC_CONST
(0.9858970577029519),

1797 
FRAC_CONST
(0.9861693460512790),

1798 
FRAC_CONST
(0.9864375058732389),

1799 
FRAC_CONST
(0.9867015793313820),

1800 
FRAC_CONST
(0.9869616084718489),

1801 
FRAC_CONST
(0.9872176352202061),

1802 
FRAC_CONST
(0.9874697013773301),

1803 
FRAC_CONST
(0.9877178486153397),

1804 
FRAC_CONST
(0.9879621184735767),

1805 
FRAC_CONST
(0.9882025523546365),

1806 
FRAC_CONST
(0.9884391915204485),

1807 
FRAC_CONST
(0.9886720770884069),

1808 
FRAC_CONST
(0.9889012500275530),

1809 
FRAC_CONST
(0.9891267511548089),

1810 
FRAC_CONST
(0.9893486211312621),

1811 
FRAC_CONST
(0.9895669004585049),

1812 
FRAC_CONST
(0.9897816294750255),

1813 
FRAC_CONST
(0.9899928483526520),

1814 
FRAC_CONST
(0.9902005970930525),

1815 
FRAC_CONST
(0.9904049155242876),

1816 
FRAC_CONST
(0.9906058432974180),

1817 
FRAC_CONST
(0.9908034198831690),

1818 
FRAC_CONST
(0.9909976845686489),

1819 
FRAC_CONST
(0.9911886764541239),

1820 
FRAC_CONST
(0.9913764344498495),

1821 
FRAC_CONST
(0.9915609972729590),

1822 
FRAC_CONST
(0.9917424034444086),

1823 
FRAC_CONST
(0.9919206912859797),

1824 
FRAC_CONST
(0.9920958989173397),

1825 
FRAC_CONST
(0.9922680642531603),

1826 
FRAC_CONST
(0.9924372250002933),

1827 
FRAC_CONST
(0.9926034186550070),

1828 
FRAC_CONST
(0.9927666825002789),

1829 
FRAC_CONST
(0.9929270536031491),

1830 
FRAC_CONST
(0.9930845688121325),

1831 
FRAC_CONST
(0.9932392647546895),

1832 
FRAC_CONST
(0.9933911778347579),

1833 
FRAC_CONST
(0.9935403442303433),

1834 
FRAC_CONST
(0.9936867998911693),

1835 
FRAC_CONST
(0.9938305805363887),

1836 
FRAC_CONST
(0.9939717216523539),

1837 
FRAC_CONST
(0.9941102584904481),

1838 
FRAC_CONST
(0.9942462260649764),

1839 
FRAC_CONST
(0.9943796591511174),

1840 
FRAC_CONST
(0.9945105922829353),

1841 
FRAC_CONST
(0.9946390597514524),

1842 
FRAC_CONST
(0.9947650956027824),

1843 
FRAC_CONST
(0.9948887336363228),

1844 
FRAC_CONST
(0.9950100074030103),

1845 
FRAC_CONST
(0.9951289502036336),

1846 
FRAC_CONST
(0.9952455950872091),

1847 
FRAC_CONST
(0.9953599748494155),

1848 
FRAC_CONST
(0.9954721220310890),

1849 
FRAC_CONST
(0.9955820689167787),

1850 
FRAC_CONST
(0.9956898475333619),

1851 
FRAC_CONST
(0.9957954896487196),

1852 
FRAC_CONST
(0.9958990267704713),

1853 
FRAC_CONST
(0.9960004901447701),

1854 
FRAC_CONST
(0.9960999107551559),

1855 
FRAC_CONST
(0.9961973193214694),

1856 
FRAC_CONST
(0.9962927462988245),

1857 
FRAC_CONST
(0.9963862218766388),

1858 
FRAC_CONST
(0.9964777759777242),

1859 
FRAC_CONST
(0.9965674382574342),

1860 
FRAC_CONST
(0.9966552381028704),

1861 
FRAC_CONST
(0.9967412046321465),

1862 
FRAC_CONST
(0.9968253666937095),

1863 
FRAC_CONST
(0.9969077528657186),

1864 
FRAC_CONST
(0.9969883914554805),

1865 
FRAC_CONST
(0.9970673104989413),

1866 
FRAC_CONST
(0.9971445377602348),

1867 
FRAC_CONST
(0.9972201007312871),

1868 
FRAC_CONST
(0.9972940266314749),

1869 
FRAC_CONST
(0.9973663424073412),

1870 
FRAC_CONST
(0.9974370747323638),

1871 
FRAC_CONST
(0.9975062500067785),

1872 
FRAC_CONST
(0.9975738943574574),

1873 
FRAC_CONST
(0.9976400336378379),

1874 
FRAC_CONST
(0.9977046934279079),

1875 
FRAC_CONST
(0.9977678990342401),

1876 
FRAC_CONST
(0.9978296754900812),

1877 
FRAC_CONST
(0.9978900475554902),

1878 
FRAC_CONST
(0.9979490397175296),

1879 
FRAC_CONST
(0.9980066761905056),

1880 
FRAC_CONST
(0.9980629809162593),

1881 
FRAC_CONST
(0.9981179775645063),

1882 
FRAC_CONST
(0.9981716895332257),

1883 
FRAC_CONST
(0.9982241399490979),

1884 
FRAC_CONST
(0.9982753516679893),

1885 
FRAC_CONST
(0.9983253472754841),

1886 
FRAC_CONST
(0.9983741490874634),

1887 
FRAC_CONST
(0.9984217791507299),

1888 
FRAC_CONST
(0.9984682592436778),

1889 
FRAC_CONST
(0.9985136108770075),

1890 
FRAC_CONST
(0.9985578552944850),

1891 
FRAC_CONST
(0.9986010134737439),

1892 
FRAC_CONST
(0.9986431061271304),

1893 
FRAC_CONST
(0.9986841537025921),

1894 
FRAC_CONST
(0.9987241763846056),

1895 
FRAC_CONST
(0.9987631940951476),

1896 
FRAC_CONST
(0.9988012264947044),

1897 
FRAC_CONST
(0.9988382929833222),

1898 
FRAC_CONST
(0.9988744127016956),

1899 
FRAC_CONST
(0.9989096045322947),

1900 
FRAC_CONST
(0.9989438871005292),

1901 
FRAC_CONST
(0.9989772787759494),

1902 
FRAC_CONST
(0.9990097976734847),

1903 
FRAC_CONST
(0.9990414616547146),

1904 
FRAC_CONST
(0.9990722883291779),

1905 
FRAC_CONST
(0.9991022950557125),

1906 
FRAC_CONST
(0.9991314989438310),

1907 
FRAC_CONST
(0.9991599168551279),

1908 
FRAC_CONST
(0.9991875654047181),

1909 
FRAC_CONST
(0.9992144609627068),

1910 
FRAC_CONST
(0.9992406196556911),

1911 
FRAC_CONST
(0.9992660573682882),

1912 
FRAC_CONST
(0.9992907897446957),

1913 
FRAC_CONST
(0.9993148321902777),

1914 
FRAC_CONST
(0.9993381998731797),

1915 
FRAC_CONST
(0.9993609077259696),

1916 
FRAC_CONST
(0.9993829704473038),

1917 
FRAC_CONST
(0.9994044025036201),

1918 
FRAC_CONST
(0.9994252181308537),

1919 
FRAC_CONST
(0.9994454313361775),

1920 
FRAC_CONST
(0.9994650558997651),

1921 
FRAC_CONST
(0.9994841053765757),

1922 
FRAC_CONST
(0.9995025930981609),

1923 
FRAC_CONST
(0.9995205321744921),

1924 
FRAC_CONST
(0.9995379354958073),

1925 
FRAC_CONST
(0.9995548157344778),

1926 
FRAC_CONST
(0.9995711853468930),

1927 
FRAC_CONST
(0.9995870565753632),

1928 
FRAC_CONST
(0.9996024414500382),

1929 
FRAC_CONST
(0.9996173517908444),

1930 
FRAC_CONST
(0.9996317992094352),

1931 
FRAC_CONST
(0.9996457951111574),

1932 
FRAC_CONST
(0.9996593506970310),

1933 
FRAC_CONST
(0.9996724769657434),

1934 
FRAC_CONST
(0.9996851847156547),

1935 
FRAC_CONST
(0.9996974845468164),

1936 
FRAC_CONST
(0.9997093868630000),

1937 
FRAC_CONST
(0.9997209018737374),

1938 
FRAC_CONST
(0.9997320395963699),

1939 
FRAC_CONST
(0.9997428098581069),

1940 
FRAC_CONST
(0.9997532222980933),

1941 
FRAC_CONST
(0.9997632863694836),

1942 
FRAC_CONST
(0.9997730113415246),

1943 
FRAC_CONST
(0.9997824063016426),

1944 
FRAC_CONST
(0.9997914801575380),

1945 
FRAC_CONST
(0.9998002416392840),

1946 
FRAC_CONST
(0.9998086993014300),

1947 
FRAC_CONST
(0.9998168615251084),

1948 
FRAC_CONST
(0.9998247365201450),

1949 
FRAC_CONST
(0.9998323323271717),

1950 
FRAC_CONST
(0.9998396568197407),

1951 
FRAC_CONST
(0.9998467177064404),

1952 
FRAC_CONST
(0.9998535225330116),

1953 
FRAC_CONST
(0.9998600786844637),

1954 
FRAC_CONST
(0.9998663933871905),

1955 
FRAC_CONST
(0.9998724737110845),

1956 
FRAC_CONST
(0.9998783265716498),

1957 
FRAC_CONST
(0.9998839587321121),

1958 
FRAC_CONST
(0.9998893768055266),

1959 
FRAC_CONST
(0.9998945872568815),

1960 
FRAC_CONST
(0.9998995964051983),

1961 
FRAC_CONST
(0.9999044104256269),

1962 
FRAC_CONST
(0.9999090353515359),

1963 
FRAC_CONST
(0.9999134770765971),

1964 
FRAC_CONST
(0.9999177413568642),

1965 
FRAC_CONST
(0.9999218338128448),

1966 
FRAC_CONST
(0.9999257599315647),

1967 
FRAC_CONST
(0.9999295250686255),

1968 
FRAC_CONST
(0.9999331344502529),

1969 
FRAC_CONST
(0.9999365931753376),

1970 
FRAC_CONST
(0.9999399062174669),

1971 
FRAC_CONST
(0.9999430784269460),

1972 
FRAC_CONST
(0.9999461145328103),

1973 
FRAC_CONST
(0.9999490191448277),

1974 
FRAC_CONST
(0.9999517967554878),

1975 
FRAC_CONST
(0.9999544517419835),

1976 
FRAC_CONST
(0.9999569883681778),

1977 
FRAC_CONST
(0.9999594107865607),

1978 
FRAC_CONST
(0.9999617230401926),

1979 
FRAC_CONST
(0.9999639290646355),

1980 
FRAC_CONST
(0.9999660326898712),

1981 
FRAC_CONST
(0.9999680376422052),

1982 
FRAC_CONST
(0.9999699475461585),

1983 
FRAC_CONST
(0.9999717659263435),

1984 
FRAC_CONST
(0.9999734962093266),

1985 
FRAC_CONST
(0.9999751417254756),

1986 
FRAC_CONST
(0.9999767057107922),

1987 
FRAC_CONST
(0.9999781913087290),

1988 
FRAC_CONST
(0.9999796015719915),

1989 
FRAC_CONST
(0.9999809394643231),

1990 
FRAC_CONST
(0.9999822078622751),

1991 
FRAC_CONST
(0.9999834095569596),

1992 
FRAC_CONST
(0.9999845472557860),

1993 
FRAC_CONST
(0.9999856235841805),

1994 
FRAC_CONST
(0.9999866410872889),

1995 
FRAC_CONST
(0.9999876022316609),

1996 
FRAC_CONST
(0.9999885094069193),

1997 
FRAC_CONST
(0.9999893649274085),

1998 
FRAC_CONST
(0.9999901710338274),

1999 
FRAC_CONST
(0.9999909298948430),

2000 
FRAC_CONST
(0.9999916436086862),

2001 
FRAC_CONST
(0.9999923142047299),

2002 
FRAC_CONST
(0.9999929436450469),

2003 
FRAC_CONST
(0.9999935338259505),

2004 
FRAC_CONST
(0.9999940865795161),

2005 
FRAC_CONST
(0.9999946036750835),

2006 
FRAC_CONST
(0.9999950868207405),

2007 
FRAC_CONST
(0.9999955376647868),

2008 
FRAC_CONST
(0.9999959577971798),

2009 
FRAC_CONST
(0.9999963487509599),

2010 
FRAC_CONST
(0.9999967120036571),

2011 
FRAC_CONST
(0.9999970489786785),

2012 
FRAC_CONST
(0.9999973610466748),

2013 
FRAC_CONST
(0.9999976495268890),

2014 
FRAC_CONST
(0.9999979156884846),

2015 
FRAC_CONST
(0.9999981607518545),

2016 
FRAC_CONST
(0.9999983858899099),

2017 
FRAC_CONST
(0.9999985922293493),

2018 
FRAC_CONST
(0.9999987808519092),

2019 
FRAC_CONST
(0.9999989527955938),

2020 
FRAC_CONST
(0.9999991090558848),

2021 
FRAC_CONST
(0.9999992505869332),

2022 
FRAC_CONST
(0.9999993783027293),

2023 
FRAC_CONST
(0.9999994930782556),

2024 
FRAC_CONST
(0.9999995957506171),

2025 
FRAC_CONST
(0.9999996871201549),

2026 
FRAC_CONST
(0.9999997679515386),

2027 
FRAC_CONST
(0.9999998389748399),

2028 
FRAC_CONST
(0.9999999008865869),

2029 
FRAC_CONST
(0.9999999543507984)

2033 
ALIGN
 c⁄° 
ªÆ_t
 
kbd_sh‹t_128
[] =

2035 
FRAC_CONST
(4.3795702929468881e-005),

2036 
FRAC_CONST
(0.00011867384265436617),

2037 
FRAC_CONST
(0.0002307165763996192),

2038 
FRAC_CONST
(0.00038947282760568383),

2039 
FRAC_CONST
(0.00060581272288302553),

2040 
FRAC_CONST
(0.00089199695169487453),

2041 
FRAC_CONST
(0.0012617254423430522),

2042 
FRAC_CONST
(0.0017301724373162003),

2043 
FRAC_CONST
(0.0023140071937421476),

2044 
FRAC_CONST
(0.0030313989666022221),

2045 
FRAC_CONST
(0.0039020049735530842),

2046 
FRAC_CONST
(0.0049469401815512024),

2047 
FRAC_CONST
(0.0061887279335368318),

2048 
FRAC_CONST
(0.0076512306364647726),

2049 
FRAC_CONST
(0.0093595599562652423),

2050 
FRAC_CONST
(0.011339966208377799),

2051 
FRAC_CONST
(0.013619706891715299),

2052 
FRAC_CONST
(0.016226894586323766),

2053 
FRAC_CONST
(0.019190324717288168),

2054 
FRAC_CONST
(0.022539283975960878),

2055 
FRAC_CONST
(0.026303340480472455),

2056 
FRAC_CONST
(0.030512117046644357),

2057 
FRAC_CONST
(0.03519504922365594),

2058 
FRAC_CONST
(0.040381130021856941),

2059 
FRAC_CONST
(0.046098643518702249),

2060 
FRAC_CONST
(0.052374889768730587),

2061 
FRAC_CONST
(0.059235903660769147),

2062 
FRAC_CONST
(0.066706170556282418),

2063 
FRAC_CONST
(0.074808341703430481),

2064 
FRAC_CONST
(0.083562952548726227),

2065 
FRAC_CONST
(0.092988147159339674),

2066 
FRAC_CONST
(0.1030994120216919),

2067 
FRAC_CONST
(0.11390932249409955),

2068 
FRAC_CONST
(0.12542730516149531),

2069 
FRAC_CONST
(0.13765941926783826),

2070 
FRAC_CONST
(0.15060816028651081),

2071 
FRAC_CONST
(0.16427228853114245),

2072 
FRAC_CONST
(0.17864668550988483),

2073 
FRAC_CONST
(0.19372224048676889),

2074 
FRAC_CONST
(0.20948576943658073),

2075 
FRAC_CONST
(0.22591996826744942),

2076 
FRAC_CONST
(0.24300340184133981),

2077 
FRAC_CONST
(0.26071052995068139),

2078 
FRAC_CONST
(0.27901177101369551),

2079 
FRAC_CONST
(0.29787360383626599),

2080 
FRAC_CONST
(0.3172587073594233),

2081 
FRAC_CONST
(0.33712613787396362),

2082 
FRAC_CONST
(0.35743154274286698),

2083 
FRAC_CONST
(0.37812740923363009),

2084 
FRAC_CONST
(0.39916334663203618),

2085 
FRAC_CONST
(0.42048639939189658),

2086 
FRAC_CONST
(0.4420413886774246),

2087 
FRAC_CONST
(0.4637712792815169),

2088 
FRAC_CONST
(0.4856175685594023),

2089 
FRAC_CONST
(0.50752069370766872),

2090 
FRAC_CONST
(0.52942045344797806),

2091 
FRAC_CONST
(0.55125643994680196),

2092 
FRAC_CONST
(0.57296847662071559),

2093 
FRAC_CONST
(0.59449705734411495),

2094 
FRAC_CONST
(0.61578378249506627),

2095 
FRAC_CONST
(0.63677178724712891),

2096 
FRAC_CONST
(0.65740615754163356),

2097 
FRAC_CONST
(0.67763432925662526),

2098 
FRAC_CONST
(0.69740646622548552),

2099 
FRAC_CONST
(0.71667581294953808),

2100 
FRAC_CONST
(0.73539901809352737),

2101 
FRAC_CONST
(0.75353642514900732),

2102 
FRAC_CONST
(0.77105232699609816),

2103 
FRAC_CONST
(0.78791518148597028),

2104 
FRAC_CONST
(0.80409778560147072),

2105 
FRAC_CONST
(0.81957740622770781),

2106 
FRAC_CONST
(0.83433586607383625),

2107 
FRAC_CONST
(0.84835958382689225),

2108 
FRAC_CONST
(0.86163956818294229),

2109 
FRAC_CONST
(0.87417136598406997),

2110 
FRAC_CONST
(0.88595496528524853),

2111 
FRAC_CONST
(0.89699465477567619),

2112 
FRAC_CONST
(0.90729884157670959),

2113 
FRAC_CONST
(0.91687983002436779),

2114 
FRAC_CONST
(0.92575356460899649),

2115 
FRAC_CONST
(0.93393934077779084),

2116 
FRAC_CONST
(0.94145948779657318),

2117 
FRAC_CONST
(0.94833902830402828),

2118 
FRAC_CONST
(0.95460531956280026),

2119 
FRAC_CONST
(0.96028768170574896),

2120 
FRAC_CONST
(0.96541701848104766),

2121 
FRAC_CONST
(0.97002543610646474),

2122 
FRAC_CONST
(0.97414586584250062),

2123 
FRAC_CONST
(0.97781169577969584),

2124 
FRAC_CONST
(0.98105641710392333),

2125 
FRAC_CONST
(0.98391328975491177),

2126 
FRAC_CONST
(0.98641503193166202),

2127 
FRAC_CONST
(0.98859353733226141),

2128 
FRAC_CONST
(0.99047962335771556),

2129 
FRAC_CONST
(0.9921028127769449),

2130 
FRAC_CONST
(0.99349115056397752),

2131 
FRAC_CONST
(0.99467105680259038),

2132 
FRAC_CONST
(0.9956672157341897),

2133 
FRAC_CONST
(0.99650250022834352),

2134 
FRAC_CONST
(0.99719793020823266),

2135 
FRAC_CONST
(0.99777266288955657),

2136 
FRAC_CONST
(0.99824401211201486),

2137 
FRAC_CONST
(0.99862749357391212),

2138 
FRAC_CONST
(0.99893689243401962),

2139 
FRAC_CONST
(0.99918434952623147),

2140 
FRAC_CONST
(0.99938046234161726),

2141 
FRAC_CONST
(0.99953439696357238),

2142 
FRAC_CONST
(0.99965400728430465),

2143 
FRAC_CONST
(0.99974595807027455),

2144 
FRAC_CONST
(0.99981584876278362),

2145 
FRAC_CONST
(0.99986833527824281),

2146 
FRAC_CONST
(0.99990724749057802),

2147 
FRAC_CONST
(0.99993570051598468),

2148 
FRAC_CONST
(0.99995619835942084),

2149 
FRAC_CONST
(0.99997072890647543),

2150 
FRAC_CONST
(0.9999808496399144),

2151 
FRAC_CONST
(0.99998776381655818),

2152 
FRAC_CONST
(0.99999238714961569),

2153 
FRAC_CONST
(0.99999540529959718),

2154 
FRAC_CONST
(0.99999732268176988),

2155 
FRAC_CONST
(0.99999850325054862),

2156 
FRAC_CONST
(0.99999920402413744),

2157 
FRAC_CONST
(0.9999996021706401),

2158 
FRAC_CONST
(0.99999981649545566),

2159 
FRAC_CONST
(0.99999992415545547),

2160 
FRAC_CONST
(0.99999997338493041),

2161 
FRAC_CONST
(0.99999999295825959),

2162 
FRAC_CONST
(0.99999999904096815)

2165 #ifde‡
ALLOW_SMALL_FRAMELENGTH


2166 
ALIGN
 c⁄° 
ªÆ_t
 
kbd_sh‹t_120
[] =

2168 
FRAC_CONST
(0.0000452320086910),

2169 
FRAC_CONST
(0.0001274564692111),

2170 
FRAC_CONST
(0.0002529398385345),

2171 
FRAC_CONST
(0.0004335140496648),

2172 
FRAC_CONST
(0.0006827100966952),

2173 
FRAC_CONST
(0.0010158708222246),

2174 
FRAC_CONST
(0.0014502162869659),

2175 
FRAC_CONST
(0.0020048865156264),

2176 
FRAC_CONST
(0.0027009618393178),

2177 
FRAC_CONST
(0.0035614590925043),

2178 
FRAC_CONST
(0.0046113018122711),

2179 
FRAC_CONST
(0.0058772627936484),

2180 
FRAC_CONST
(0.0073878776584103),

2181 
FRAC_CONST
(0.0091733284512589),

2182 
FRAC_CONST
(0.0112652966728373),

2183 
FRAC_CONST
(0.0136967855861945),

2184 
FRAC_CONST
(0.0165019120857793),

2185 
FRAC_CONST
(0.0197156688892217),

2186 
FRAC_CONST
(0.0233736582950619),

2187 
FRAC_CONST
(0.0275117992367496),

2188 
FRAC_CONST
(0.0321660098468534),

2189 
FRAC_CONST
(0.0373718682174417),

2190 
FRAC_CONST
(0.0431642544948834),

2191 
FRAC_CONST
(0.0495769778717676),

2192 
FRAC_CONST
(0.0566423924273392),

2193 
FRAC_CONST
(0.0643910061132260),

2194 
FRAC_CONST
(0.0728510874761729),

2195 
FRAC_CONST
(0.0820482749475221),

2196 
FRAC_CONST
(0.0920051937045235),

2197 
FRAC_CONST
(0.1027410852163450),

2198 
FRAC_CONST
(0.1142714546239370),

2199 
FRAC_CONST
(0.1266077410648368),

2200 
FRAC_CONST
(0.1397570159398145),

2201 
FRAC_CONST
(0.1537217139274270),

2202 
FRAC_CONST
(0.1684994012857075),

2203 
FRAC_CONST
(0.1840825856392944),

2204 
FRAC_CONST
(0.2004585710384133),

2205 
FRAC_CONST
(0.2176093615976121),

2206 
FRAC_CONST
(0.2355116164824983),

2207 
FRAC_CONST
(0.2541366584185075),

2208 
FRAC_CONST
(0.2734505372545160),

2209 
FRAC_CONST
(0.2934141494343369),

2210 
FRAC_CONST
(0.3139834135200387),

2211 
FRAC_CONST
(0.3351095011824163),

2212 
FRAC_CONST
(0.3567391223361566),

2213 
FRAC_CONST
(0.3788148623608774),

2214 
FRAC_CONST
(0.4012755686250732),

2215 
FRAC_CONST
(0.4240567828288110),

2216 
FRAC_CONST
(0.4470912150133537),

2217 
FRAC_CONST
(0.4703092544619664),

2218 
FRAC_CONST
(0.4936395121456694),

2219 
FRAC_CONST
(0.5170093888596962),

2220 
FRAC_CONST
(0.5403456627591340),

2221 
FRAC_CONST
(0.5635750896430154),

2222 
FRAC_CONST
(0.5866250090612892),

2223 
FRAC_CONST
(0.6094239491338723),

2224 
FRAC_CONST
(0.6319022228794100),

2225 
FRAC_CONST
(0.6539925088563087),

2226 
FRAC_CONST
(0.6756304090216887),

2227 
FRAC_CONST
(0.6967549769155277),

2228 
FRAC_CONST
(0.7173092095766250),

2229 
FRAC_CONST
(0.7372404969921184),

2230 
FRAC_CONST
(0.7565010233699827),

2231 
FRAC_CONST
(0.7750481150999984),

2232 
FRAC_CONST
(0.7928445309277697),

2233 
FRAC_CONST
(0.8098586906021583),

2234 
FRAC_CONST
(0.8260648390616000),

2235 
FRAC_CONST
(0.8414431440907889),

2236 
FRAC_CONST
(0.8559797262966709),

2237 
FRAC_CONST
(0.8696666212110165),

2238 
FRAC_CONST
(0.8825016743142358),

2239 
FRAC_CONST
(0.8944883707784486),

2240 
FRAC_CONST
(0.9056356027326216),

2241 
FRAC_CONST
(0.9159573778427816),

2242 
FRAC_CONST
(0.9254724739583072),

2243 
FRAC_CONST
(0.9342040454819434),

2244 
FRAC_CONST
(0.9421791879559176),

2245 
FRAC_CONST
(0.9494284680976784),

2246 
FRAC_CONST
(0.9559854271440150),

2247 
FRAC_CONST
(0.9618860658493898),

2248 
FRAC_CONST
(0.9671683198119525),

2249 
FRAC_CONST
(0.9718715339497299),

2250 
FRAC_CONST
(0.9760359449042233),

2251 
FRAC_CONST
(0.9797021798981759),

2252 
FRAC_CONST
(0.9829107801140203),

2253 
FRAC_CONST
(0.9857017559923277),

2254 
FRAC_CONST
(0.9881141809867999),

2255 
FRAC_CONST
(0.9901858292742826),

2256 
FRAC_CONST
(0.9919528617340944),

2257 
FRAC_CONST
(0.9934495632180476),

2258 
FRAC_CONST
(0.9947081327749199),

2259 
FRAC_CONST
(0.9957585271195989),

2260 
FRAC_CONST
(0.9966283562984427),

2261 
FRAC_CONST
(0.9973428292485683),

2262 
FRAC_CONST
(0.9979247458259197),

2263 
FRAC_CONST
(0.9983945309245774),

2264 
FRAC_CONST
(0.9987703055583410),

2265 
FRAC_CONST
(0.9990679892449266),

2266 
FRAC_CONST
(0.9993014277313617),

2267 
FRAC_CONST
(0.9994825400228521),

2268 
FRAC_CONST
(0.9996214788122335),

2269 
FRAC_CONST
(0.9997267987294857),

2270 
FRAC_CONST
(0.9998056273097539),

2271 
FRAC_CONST
(0.9998638341781910),

2272 
FRAC_CONST
(0.9999061946325793),

2273 
FRAC_CONST
(0.9999365445321382),

2274 
FRAC_CONST
(0.9999579241373735),

2275 
FRAC_CONST
(0.9999727092594598),

2276 
FRAC_CONST
(0.9999827287418790),

2277 
FRAC_CONST
(0.9999893678912771),

2278 
FRAC_CONST
(0.9999936579844555),

2279 
FRAC_CONST
(0.9999963523959187),

2280 
FRAC_CONST
(0.9999979902130101),

2281 
FRAC_CONST
(0.9999989484358076),

2282 
FRAC_CONST
(0.9999994840031031),

2283 
FRAC_CONST
(0.9999997669534347),

2284 
FRAC_CONST
(0.9999999060327799),

2285 
FRAC_CONST
(0.9999999680107184),

2286 
FRAC_CONST
(0.9999999918774242),

2287 
FRAC_CONST
(0.9999999989770326)

2291 #ifde‡
__˝lu•lus


	@lt_predict.c

29 
	~"comm⁄.h
"

30 
	~"°ru˘s.h
"

32 #ifde‡
LTP_DEC


34 
	~<°dlib.h
>

35 
	~"sy¡ax.h
"

36 
	~"…_¥edi˘.h
"

37 
	~"fûtb™k.h
"

38 
	~"äs.h
"

42 
öt16_t
 
ªÆ_to_öt16
(
ªÆ_t
 
sig_ö
);

46 
uöt8_t
 
	$is_…p_Ÿ
(
uöt8_t
 
obje˘_ty≥
)

48 #ifde‡
LTP_DEC


49 i‡((
obje˘_ty≥
 =
LTP
)

50 #ifde‡
ERROR_RESILIENCE


51 || (
obje˘_ty≥
 =
ER_LTP
)

53 #ifde‡
LD_DEC


54 || (
obje˘_ty≥
 =
LD
)

56 #ifde‡
SCALABLE_DEC


57 || (
obje˘_ty≥
 == 6)

66 
	}
}

68 
ALIGN
 c⁄° 
ªÆ_t
 
	gcodebook
[8] =

70 
REAL_CONST
(0.570829),

71 
REAL_CONST
(0.696616),

72 
REAL_CONST
(0.813004),

73 
REAL_CONST
(0.911304),

74 
REAL_CONST
(0.984900),

75 
REAL_CONST
(1.067894),

76 
REAL_CONST
(1.194601),

77 
REAL_CONST
(1.369533)

80 
	$…_¥edi˘i⁄
(
ic_°ªam
 *
ics
, 
…p_öfo
 *
…p
, 
ªÆ_t
 *
•ec
,

81 
öt16_t
 *
…_¥ed_°©
, 
fb_öfo
 *
fb
, 
uöt8_t
 
wö_sh≠e
,

82 
uöt8_t
 
wö_sh≠e_¥ev
, uöt8_à
§_ödex
,

83 
uöt8_t
 
obje˘_ty≥
, 
uöt16_t
 
‰ame_Àn
)

85 
uöt8_t
 
sfb
;

86 
uöt16_t
 
bö
, 
i
, 
num_ßm∂es
;

87 
ALIGN
 
ªÆ_t
 
x_e°
[2048];

88 
ALIGN
 
ªÆ_t
 
X_e°
[2048];

90 i‡(
ics
->
wödow_£quí˚
 !
EIGHT_SHORT_SEQUENCE
)

92 i‡(
…p
->
d©a_¥e£¡
)

94 
num_ßm∂es
 = 
‰ame_Àn
 << 1;

96 
i
 = 0; i < 
num_ßm∂es
; i++)

102 
x_e°
[
i
] = 
	`MUL_R_C
(
…_¥ed_°©
[
num_ßm∂es
 + i - 
…p
->
œg
],

103 
codebook
[
…p
->
c€f
]);

108 
x_e°
[
i
] = (
ªÆ_t
)
…_¥ed_°©
[
num_ßm∂es
 + i - 
…p
->
œg
] * 
codebook
[…p->
c€f
];

112 
	`fûãr_b™k_…p
(
fb
, 
ics
->
wödow_£quí˚
, 
wö_sh≠e
, 
wö_sh≠e_¥ev
,

113 
x_e°
, 
X_e°
, 
obje˘_ty≥
, 
‰ame_Àn
);

115 
	`äs_ícode_‰ame
(
ics
, &(ics->
äs
), 
§_ödex
, 
obje˘_ty≥
, 
X_e°
,

116 
‰ame_Àn
);

118 
sfb
 = 0; sfb < 
…p
->
œ°_b™d
; sfb++)

120 i‡(
…p
->
l⁄g_u£d
[
sfb
])

122 
uöt16_t
 
low
 = 
ics
->
swb_off£t
[
sfb
];

123 
uöt16_t
 
high
 = 
ics
->
swb_off£t
[
sfb
+1];

125 
bö
 = 
low
; bö < 
high
; bin++)

127 
•ec
[
bö
] +
X_e°
[bin];

133 
	}
}

135 #ifde‡
FIXED_POINT


136 
INLINE
 
öt16_t
 
	$ªÆ_to_öt16
(
ªÆ_t
 
sig_ö
)

138 i‡(
sig_ö
 >= 0)

140 
sig_ö
 +(1 << (
REAL_BITS
-1));

141 i‡(
sig_ö
 >
	`REAL_CONST
(32768))

144 
sig_ö
 +-(1 << (
REAL_BITS
-1));

145 i‡(
sig_ö
 <
	`REAL_CONST
(-32768))

149  (
sig_ö
 >> 
REAL_BITS
);

150 
	}
}

152 
INLINE
 
öt16_t
 
	$ªÆ_to_öt16
(
ªÆ_t
 
sig_ö
)

154 i‡(
sig_ö
 >= 0)

156 #i‚de‡
HAS_LRINTF


157 
sig_ö
 += 0.5f;

159 i‡(
sig_ö
 >= 32768.0f)

162 #i‚de‡
HAS_LRINTF


163 
sig_ö
 += -0.5f;

165 i‡(
sig_ö
 <= -32768.0f)

169  
	`Ãötf
(
sig_ö
);

170 
	}
}

173 
	$…_upd©e_°©e
(
öt16_t
 *
…_¥ed_°©
, 
ªÆ_t
 *
time
,Ñól_à*
ovîœp
,

174 
uöt16_t
 
‰ame_Àn
, 
uöt8_t
 
obje˘_ty≥
)

176 
uöt16_t
 
i
;

189 #ifde‡
LD_DEC


190 i‡(
obje˘_ty≥
 =
LD
)

192 
i
 = 0; i < 
‰ame_Àn
; i++)

194 
…_¥ed_°©
[
i
] =Üt_¥ed_°©[ò+ 
‰ame_Àn
];

195 
…_¥ed_°©
[
‰ame_Àn
 + 
i
] =Üt_pred_stat[i + (frame_len * 2)];

196 
…_¥ed_°©
[(
‰ame_Àn
 * 2Ë+ 
i
] = 
	`ªÆ_to_öt16
(
time
[i]);

197 
…_¥ed_°©
[(
‰ame_Àn
 * 3Ë+ 
i
] = 
	`ªÆ_to_öt16
(
ovîœp
[i]);

201 
i
 = 0; i < 
‰ame_Àn
; i++)

203 
…_¥ed_°©
[
i
] =Üt_¥ed_°©[ò+ 
‰ame_Àn
];

204 
…_¥ed_°©
[
‰ame_Àn
 + 
i
] = 
	`ªÆ_to_öt16
(
time
[i]);

205 
…_¥ed_°©
[(
‰ame_Àn
 * 2Ë+ 
i
] = 
	`ªÆ_to_öt16
(
ovîœp
[i]);

207 
…_¥ed_°©
[(
‰ame_Àn
 * 3Ë+ 
i
] = 0;

210 #ifde‡
LD_DEC


213 
	}
}

	@lt_predict.h

28 #ifde‡
LTP_DEC


30 #i‚de‡
__LT_PREDICT_H__


31 
	#__LT_PREDICT_H__


	)

33 #ifde‡
__˝lu•lus


37 
	~"fûtb™k.h
"

39 
uöt8_t
 
is_…p_Ÿ
(uöt8_à
obje˘_ty≥
);

41 
…_¥edi˘i⁄
(
ic_°ªam
 *
ics
,

42 
…p_öfo
 *
…p
,

43 
ªÆ_t
 *
•ec
,

44 
öt16_t
 *
…_¥ed_°©
,

45 
fb_öfo
 *
fb
,

46 
uöt8_t
 
wö_sh≠e
,

47 
uöt8_t
 
wö_sh≠e_¥ev
,

48 
uöt8_t
 
§_ödex
,

49 
uöt8_t
 
obje˘_ty≥
,

50 
uöt16_t
 
‰ame_Àn
);

52 
…_upd©e_°©e
(
öt16_t
 *
…_¥ed_°©
,

53 
ªÆ_t
 *
time
,

54 
ªÆ_t
 *
ovîœp
,

55 
uöt16_t
 
‰ame_Àn
,

56 
uöt8_t
 
obje˘_ty≥
);

58 #ifde‡
__˝lu•lus


	@mdct.c

44 
	~"comm⁄.h
"

45 
	~"°ru˘s.h
"

47 
	~<°dlib.h
>

48 #ifde‡
_WIN32_WCE


49 
	#as£π
(
x
)

	)

51 
	~<as£π.h
>

54 
	~"cf·.h
"

55 
	~"md˘.h
"

56 
	~"md˘_èb.h
"

59 
md˘_öfo
 *
	$Áad_md˘_öô
(
uöt16_t
 
N
)

61 
md˘_öfo
 *
md˘
 = (md˘_öfo*)
	`Áad_mÆloc
((mdct_info));

63 
	`as£π
(
N
 % 8 == 0);

65 
md˘
->
N
 = N;

73 
N
)

75 2048: 
md˘
->
söcos
 = (
com∂ex_t
*)
md˘_èb_2048
; ;

76 256: 
md˘
->
söcos
 = (
com∂ex_t
*)
md˘_èb_256
; ;

77 #ifde‡
LD_DEC


78 1024: 
md˘
->
söcos
 = (
com∂ex_t
*)
md˘_èb_1024
; ;

80 #ifde‡
ALLOW_SMALL_FRAMELENGTH


81 1920: 
md˘
->
söcos
 = (
com∂ex_t
*)
md˘_èb_1920
; ;

82 240: 
md˘
->
söcos
 = (
com∂ex_t
*)
md˘_èb_240
; ;

83 #ifde‡
LD_DEC


84 960: 
md˘
->
söcos
 = (
com∂ex_t
*)
md˘_èb_960
; ;

87 #ifde‡
SSR_DEC


88 512: 
md˘
->
söcos
 = (
com∂ex_t
*)
md˘_èb_512
; ;

89 64: 
md˘
->
söcos
 = (
com∂ex_t
*)
md˘_èb_64
; ;

94 
md˘
->
cf·
 = 
	`cf·i
(
N
/4);

96 #ifde‡
PROFILE


97 
md˘
->
cy˛es
 = 0;

98 
md˘
->
f·_cy˛es
 = 0;

101  
md˘
;

102 
	}
}

104 
	$Áad_md˘_íd
(
md˘_öfo
 *
md˘
)

106 i‡(
md˘
 !
NULL
)

108 #ifde‡
PROFILE


109 
	`¥ötf
("MDCT[%.4d]: %I64d cy˛es\n", 
md˘
->
N
, md˘->
cy˛es
);

110 
	`¥ötf
("CFFT[%.4d]: %I64d cy˛es\n", 
md˘
->
N
/4, md˘->
f·_cy˛es
);

113 
	`cf·u
(
md˘
->
cf·
);

115 
	`Áad_‰ì
(
md˘
);

117 
	}
}

119 
	$Áad_imd˘
(
md˘_öfo
 *
md˘
, 
ªÆ_t
 *
X_ö
,Ñól_à*
X_out
)

121 
uöt16_t
 
k
;

123 
com∂ex_t
 
x
;

124 #ifde‡
ALLOW_SMALL_FRAMELENGTH


125 #ifde‡
FIXED_POINT


126 
ªÆ_t
 
sˇÀ
, 
b_sˇÀ
 = 0;

129 
ALIGN
 
com∂ex_t
 
Z1
[512];

130 
com∂ex_t
 *
söcos
 = 
md˘
->sincos;

132 
uöt16_t
 
N
 = 
md˘
->N;

133 
uöt16_t
 
N2
 = 
N
 >> 1;

134 
uöt16_t
 
N4
 = 
N
 >> 2;

135 
uöt16_t
 
N8
 = 
N
 >> 3;

137 #ifde‡
PROFILE


138 
öt64_t
 
cou¡1
, 
cou¡2
 = 
	`Áad_gë_ts
();

141 #ifde‡
ALLOW_SMALL_FRAMELENGTH


142 #ifde‡
FIXED_POINT


144 i‡(
N
 & (N-1))

148 
b_sˇÀ
 = 1;

149 
sˇÀ
 = 
	`COEF_CONST
(1.0666666666666667);

155 
k
 = 0; k < 
N4
; k++)

157 
	`Com∂exMu…
(&
	`IM
(
Z1
[
k
]), &
	`RE
(Z1[k]),

158 
X_ö
[2*
k
], X_ö[
N2
 - 1 - 2*k], 
	`RE
(
söcos
[k]), 
	`IM
(sincos[k]));

161 #ifde‡
PROFILE


162 
cou¡1
 = 
	`Áad_gë_ts
();

166 
	`cf·b
(
md˘
->
cf·
, 
Z1
);

168 #ifde‡
PROFILE


169 
cou¡1
 = 
	`Áad_gë_ts
() - count1;

173 
k
 = 0; k < 
N4
; k++)

175 
	`RE
(
x
ËRE(
Z1
[
k
]);

176 
	`IM
(
x
ËIM(
Z1
[
k
]);

177 
	`Com∂exMu…
(&
	`IM
(
Z1
[
k
]), &
	`RE
(Z1[k]),

178 
	`IM
(
x
), 
	`RE
(x), RE(
söcos
[
k
]), IM(sincos[k]));

180 #ifde‡
ALLOW_SMALL_FRAMELENGTH


181 #ifde‡
FIXED_POINT


183 i‡(
b_sˇÀ
)

185 
	`RE
(
Z1
[
k
]Ë
	`MUL_C
(RE(Z1[k]), 
sˇÀ
);

186 
	`IM
(
Z1
[
k
]Ë
	`MUL_C
(IM(Z1[k]), 
sˇÀ
);

193 
k
 = 0; k < 
N8
; k+=2)

195 
X_out
[ 2*
k
] = 
	`IM
(
Z1
[
N8
 + k]);

196 
X_out
[ 2 + 2*
k
] = 
	`IM
(
Z1
[
N8
 + 1 + k]);

198 
X_out
[ 1 + 2*
k
] = -
	`RE
(
Z1
[
N8
 - 1 - k]);

199 
X_out
[ 3 + 2*
k
] = -
	`RE
(
Z1
[
N8
 - 2 - k]);

201 
X_out
[
N4
 + 2*
k
] = 
	`RE
(
Z1
[ k]);

202 
X_out
[
N4
 + + 2 + 2*
k
] = 
	`RE
(
Z1
[ 1 + k]);

204 
X_out
[
N4
 + 1 + 2*
k
] = -
	`IM
(
Z1
[N4 - 1 - k]);

205 
X_out
[
N4
 + 3 + 2*
k
] = -
	`IM
(
Z1
[N4 - 2 - k]);

207 
X_out
[
N2
 + 2*
k
] = 
	`RE
(
Z1
[
N8
 + k]);

208 
X_out
[
N2
 + + 2 + 2*
k
] = 
	`RE
(
Z1
[
N8
 + 1 + k]);

210 
X_out
[
N2
 + 1 + 2*
k
] = -
	`IM
(
Z1
[
N8
 - 1 - k]);

211 
X_out
[
N2
 + 3 + 2*
k
] = -
	`IM
(
Z1
[
N8
 - 2 - k]);

213 
X_out
[
N2
 + 
N4
 + 2*
k
] = -
	`IM
(
Z1
[ k]);

214 
X_out
[
N2
 + 
N4
 + 2 + 2*
k
] = -
	`IM
(
Z1
[ 1 + k]);

216 
X_out
[
N2
 + 
N4
 + 1 + 2*
k
] = 
	`RE
(
Z1
[N4 - 1 - k]);

217 
X_out
[
N2
 + 
N4
 + 3 + 2*
k
] = 
	`RE
(
Z1
[N4 - 2 - k]);

220 #ifde‡
PROFILE


221 
cou¡2
 = 
	`Áad_gë_ts
() - count2;

222 
md˘
->
f·_cy˛es
 +
cou¡1
;

223 
md˘
->
cy˛es
 +(
cou¡2
 - 
cou¡1
);

225 
	}
}

227 #ifde‡
LTP_DEC


228 
	$Áad_md˘
(
md˘_öfo
 *
md˘
, 
ªÆ_t
 *
X_ö
,Ñól_à*
X_out
)

230 
uöt16_t
 
k
;

232 
com∂ex_t
 
x
;

233 
ALIGN
 
com∂ex_t
 
Z1
[512];

234 
com∂ex_t
 *
söcos
 = 
md˘
->sincos;

236 
uöt16_t
 
N
 = 
md˘
->N;

237 
uöt16_t
 
N2
 = 
N
 >> 1;

238 
uöt16_t
 
N4
 = 
N
 >> 2;

239 
uöt16_t
 
N8
 = 
N
 >> 3;

241 #i‚de‡
FIXED_POINT


242 
ªÆ_t
 
sˇÀ
 = 
	`REAL_CONST
(
N
);

244 
ªÆ_t
 
sˇÀ
 = 
	`REAL_CONST
(4.0/
N
);

247 #ifde‡
ALLOW_SMALL_FRAMELENGTH


248 #ifde‡
FIXED_POINT


250 i‡(
N
 & (N-1))

254 
sˇÀ
 = 
	`MUL_C
(sˇÀ, 
	`COEF_CONST
(1.0327955589886444));

260 
k
 = 0; k < 
N8
; k++)

262 
uöt16_t
 
n
 = 
k
 << 1;

263 
	`RE
(
x
Ë
X_ö
[
N
 - 
N4
 - 1 - 
n
] + X_in[N - N4 +Ç];

264 
	`IM
(
x
Ë
X_ö
[ 
N4
 + 
n
] - X_in[ N4 - 1 -Ç];

266 
	`Com∂exMu…
(&
	`RE
(
Z1
[
k
]), &
	`IM
(Z1[k]),

267 
	`RE
(
x
), 
	`IM
(x), RE(
söcos
[
k
]), IM(sincos[k]));

269 
	`RE
(
Z1
[
k
]Ë
	`MUL_R
(RE(Z1[k]), 
sˇÀ
);

270 
	`IM
(
Z1
[
k
]Ë
	`MUL_R
(IM(Z1[k]), 
sˇÀ
);

272 
	`RE
(
x
Ë
X_ö
[
N2
 - 1 - 
n
] - X_in[Ç];

273 
	`IM
(
x
Ë
X_ö
[
N2
 + 
n
] + X_ö[
N
 - 1 -Ç];

275 
	`Com∂exMu…
(&
	`RE
(
Z1
[
k
 + 
N8
]), &
	`IM
(Z1[k + N8]),

276 
	`RE
(
x
), 
	`IM
(x), RE(
söcos
[
k
 + 
N8
]), IM(sincos[k + N8]));

278 
	`RE
(
Z1
[
k
 + 
N8
]Ë
	`MUL_R
(RE(Z1[k + N8]), 
sˇÀ
);

279 
	`IM
(
Z1
[
k
 + 
N8
]Ë
	`MUL_R
(IM(Z1[k + N8]), 
sˇÀ
);

283 
	`cf·f
(
md˘
->
cf·
, 
Z1
);

286 
k
 = 0; k < 
N4
; k++)

288 
uöt16_t
 
n
 = 
k
 << 1;

289 
	`Com∂exMu…
(&
	`RE
(
x
), &
	`IM
(x),

290 
	`RE
(
Z1
[
k
]), 
	`IM
(Z1[k]), RE(
söcos
[k]), IM(sincos[k]));

292 
X_out
[ 
n
] = -
	`RE
(
x
);

293 
X_out
[
N2
 - 1 - 
n
] = 
	`IM
(
x
);

294 
X_out
[
N2
 + 
n
] = -
	`IM
(
x
);

295 
X_out
[
N
 - 1 - 
n
] = 
	`RE
(
x
);

297 
	}
}

	@mdct.h

28 #i‚de‡
__MDCT_H__


29 
	#__MDCT_H__


	)

31 #ifde‡
__˝lu•lus


36 
md˘_öfo
 *
Áad_md˘_öô
(
uöt16_t
 
N
);

37 
Áad_md˘_íd
(
md˘_öfo
 *
md˘
);

38 
Áad_imd˘
(
md˘_öfo
 *
md˘
, 
ªÆ_t
 *
X_ö
,Ñól_à*
X_out
);

39 
Áad_md˘
(
md˘_öfo
 *
md˘
, 
ªÆ_t
 *
X_ö
,Ñól_à*
X_out
);

42 #ifde‡
__˝lu•lus


	@mdct_tab.h

28 #i‚de‡
__MDCT_TAB_H__


29 
	#__MDCT_TAB_H__


	)

31 #ifde‡
__˝lu•lus


35 #ifde‡
FIXED_POINT


38 
ALIGN
 c⁄° 
com∂ex_t
 
md˘_èb_2048
[] =

40 { 
FRAC_CONST
(0.999999926465718), FRAC_CONST(0.000383495187571) },

41 { 
FRAC_CONST
(0.999994043728986), FRAC_CONST(0.003451449920136) },

42 { 
FRAC_CONST
(0.999978748667469), FRAC_CONST(0.006519372166339) },

43 { 
FRAC_CONST
(0.999954041425130), FRAC_CONST(0.009587233049729) },

44 { 
FRAC_CONST
(0.999919922234523), FRAC_CONST(0.012655003694430) },

45 { 
FRAC_CONST
(0.999876391416790), FRAC_CONST(0.015722655225417) },

46 { 
FRAC_CONST
(0.999823449381662), FRAC_CONST(0.018790158768785) },

47 { 
FRAC_CONST
(0.999761096627447), FRAC_CONST(0.021857485452022) },

48 { 
FRAC_CONST
(0.999689333741034), FRAC_CONST(0.024924606404281) },

49 { 
FRAC_CONST
(0.999608161397882), FRAC_CONST(0.027991492756653) },

50 { 
FRAC_CONST
(0.999517580362017), FRAC_CONST(0.031058115642435) },

51 { 
FRAC_CONST
(0.999417591486022), FRAC_CONST(0.034124446197403) },

52 { 
FRAC_CONST
(0.999308195711029), FRAC_CONST(0.037190455560088) },

53 { 
FRAC_CONST
(0.999189394066715), FRAC_CONST(0.040256114872041) },

54 { 
FRAC_CONST
(0.999061187671285), FRAC_CONST(0.043321395278110) },

55 { 
FRAC_CONST
(0.998923577731466), FRAC_CONST(0.046386267926707) },

56 { 
FRAC_CONST
(0.998776565542496), FRAC_CONST(0.049450703970085) },

57 { 
FRAC_CONST
(0.998620152488109), FRAC_CONST(0.052514674564603) },

58 { 
FRAC_CONST
(0.998454340040525), FRAC_CONST(0.055578150871005) },

59 { 
FRAC_CONST
(0.998279129760433), FRAC_CONST(0.058641104054683) },

60 { 
FRAC_CONST
(0.998094523296980), FRAC_CONST(0.061703505285957) },

61 { 
FRAC_CONST
(0.997900522387752), FRAC_CONST(0.064765325740340) },

62 { 
FRAC_CONST
(0.997697128858759), FRAC_CONST(0.067826536598811) },

63 { 
FRAC_CONST
(0.997484344624418), FRAC_CONST(0.070887109048088) },

64 { 
FRAC_CONST
(0.997262171687536), FRAC_CONST(0.073947014280897) },

65 { 
FRAC_CONST
(0.997030612139289), FRAC_CONST(0.077006223496246) },

66 { 
FRAC_CONST
(0.996789668159205), FRAC_CONST(0.080064707899691) },

67 { 
FRAC_CONST
(0.996539342015138), FRAC_CONST(0.083122438703613) },

68 { 
FRAC_CONST
(0.996279636063255), FRAC_CONST(0.086179387127485) },

69 { 
FRAC_CONST
(0.996010552748006), FRAC_CONST(0.089235524398144) },

70 { 
FRAC_CONST
(0.995732094602106), FRAC_CONST(0.092290821750062) },

71 { 
FRAC_CONST
(0.995444264246510), FRAC_CONST(0.095345250425618) },

72 { 
FRAC_CONST
(0.995147064390386), FRAC_CONST(0.098398781675364) },

73 { 
FRAC_CONST
(0.994840497831093), FRAC_CONST(0.101451386758302) },

74 { 
FRAC_CONST
(0.994524567454152), FRAC_CONST(0.104503036942151) },

75 { 
FRAC_CONST
(0.994199276233219), FRAC_CONST(0.107553703503616) },

76 { 
FRAC_CONST
(0.993864627230060), FRAC_CONST(0.110603357728662) },

77 { 
FRAC_CONST
(0.993520623594518), FRAC_CONST(0.113651970912782) },

78 { 
FRAC_CONST
(0.993167268564487), FRAC_CONST(0.116699514361268) },

79 { 
FRAC_CONST
(0.992804565465879), FRAC_CONST(0.119745959389480) },

80 { 
FRAC_CONST
(0.992432517712594), FRAC_CONST(0.122791277323117) },

81 { 
FRAC_CONST
(0.992051128806486), FRAC_CONST(0.125835439498487) },

82 { 
FRAC_CONST
(0.991660402337333), FRAC_CONST(0.128878417262777) },

83 { 
FRAC_CONST
(0.991260341982802), FRAC_CONST(0.131920181974320) },

84 { 
FRAC_CONST
(0.990850951508414), FRAC_CONST(0.134960705002869) },

85 { 
FRAC_CONST
(0.990432234767506), FRAC_CONST(0.137999957729863) },

86 { 
FRAC_CONST
(0.990004195701201), FRAC_CONST(0.141037911548698) },

87 { 
FRAC_CONST
(0.989566838338365), FRAC_CONST(0.144074537864995) },

88 { 
FRAC_CONST
(0.989120166795573), FRAC_CONST(0.147109808096872) },

89 { 
FRAC_CONST
(0.988664185277066), FRAC_CONST(0.150143693675208) },

90 { 
FRAC_CONST
(0.988198898074718), FRAC_CONST(0.153176166043918) },

91 { 
FRAC_CONST
(0.987724309567987), FRAC_CONST(0.156207196660216) },

92 { 
FRAC_CONST
(0.987240424223882), FRAC_CONST(0.159236756994888) },

93 { 
FRAC_CONST
(0.986747246596917), FRAC_CONST(0.162264818532558) },

94 { 
FRAC_CONST
(0.986244781329065), FRAC_CONST(0.165291352771958) },

95 { 
FRAC_CONST
(0.985733033149723), FRAC_CONST(0.168316331226195) },

96 { 
FRAC_CONST
(0.985212006875659), FRAC_CONST(0.171339725423019) },

97 { 
FRAC_CONST
(0.984681707410971), FRAC_CONST(0.174361506905094) },

98 { 
FRAC_CONST
(0.984142139747039), FRAC_CONST(0.177381647230260) },

99 { 
FRAC_CONST
(0.983593308962479), FRAC_CONST(0.180400117971807) },

100 { 
FRAC_CONST
(0.983035220223096), FRAC_CONST(0.183416890718739) },

101 { 
FRAC_CONST
(0.982467878781833), FRAC_CONST(0.186431937076042) },

102 { 
FRAC_CONST
(0.981891289978725), FRAC_CONST(0.189445228664950) },

103 { 
FRAC_CONST
(0.981305459240845), FRAC_CONST(0.192456737123217) },

104 { 
FRAC_CONST
(0.980710392082254), FRAC_CONST(0.195466434105377) },

105 { 
FRAC_CONST
(0.980106094103952), FRAC_CONST(0.198474291283016) },

106 { 
FRAC_CONST
(0.979492570993821), FRAC_CONST(0.201480280345038) },

107 { 
FRAC_CONST
(0.978869828526574), FRAC_CONST(0.204484372997927) },

108 { 
FRAC_CONST
(0.978237872563701), FRAC_CONST(0.207486540966021) },

109 { 
FRAC_CONST
(0.977596709053412), FRAC_CONST(0.210486755991770) },

110 { 
FRAC_CONST
(0.976946344030582), FRAC_CONST(0.213484989836008) },

111 { 
FRAC_CONST
(0.976286783616694), FRAC_CONST(0.216481214278217) },

112 { 
FRAC_CONST
(0.975618034019782), FRAC_CONST(0.219475401116790) },

113 { 
FRAC_CONST
(0.974940101534372), FRAC_CONST(0.222467522169302) },

114 { 
FRAC_CONST
(0.974252992541423), FRAC_CONST(0.225457549272769) },

115 { 
FRAC_CONST
(0.973556713508266), FRAC_CONST(0.228445454283916) },

116 { 
FRAC_CONST
(0.972851270988544), FRAC_CONST(0.231431209079446) },

117 { 
FRAC_CONST
(0.972136671622152), FRAC_CONST(0.234414785556295) },

118 { 
FRAC_CONST
(0.971412922135171), FRAC_CONST(0.237396155631907) },

119 { 
FRAC_CONST
(0.970680029339806), FRAC_CONST(0.240375291244489) },

120 { 
FRAC_CONST
(0.969938000134324), FRAC_CONST(0.243352164353285) },

121 { 
FRAC_CONST
(0.969186841502986), FRAC_CONST(0.246326746938829) },

122 { 
FRAC_CONST
(0.968426560515983), FRAC_CONST(0.249299011003218) },

123 { 
FRAC_CONST
(0.967657164329370), FRAC_CONST(0.252268928570371) },

124 { 
FRAC_CONST
(0.966878660184996), FRAC_CONST(0.255236471686292) },

125 { 
FRAC_CONST
(0.966091055410439), FRAC_CONST(0.258201612419335) },

126 { 
FRAC_CONST
(0.965294357418935), FRAC_CONST(0.261164322860466) },

127 { 
FRAC_CONST
(0.964488573709308), FRAC_CONST(0.264124575123528) },

128 { 
FRAC_CONST
(0.963673711865903), FRAC_CONST(0.267082341345496) },

129 { 
FRAC_CONST
(0.962849779558509), FRAC_CONST(0.270037593686751) },

130 { 
FRAC_CONST
(0.962016784542291), FRAC_CONST(0.272990304331330) },

131 { 
FRAC_CONST
(0.961174734657714), FRAC_CONST(0.275940445487197) },

132 { 
FRAC_CONST
(0.960323637830474), FRAC_CONST(0.278887989386500) },

133 { 
FRAC_CONST
(0.959463502071418), FRAC_CONST(0.281832908285833) },

134 { 
FRAC_CONST
(0.958594335476470), FRAC_CONST(0.284775174466498) },

135 { 
FRAC_CONST
(0.957716146226559), FRAC_CONST(0.287714760234765) },

136 { 
FRAC_CONST
(0.956828942587535), FRAC_CONST(0.290651637922133) },

137 { 
FRAC_CONST
(0.955932732910098), FRAC_CONST(0.293585779885591) },

138 { 
FRAC_CONST
(0.955027525629714), FRAC_CONST(0.296517158507877) },

139 { 
FRAC_CONST
(0.954113329266539), FRAC_CONST(0.299445746197740) },

140 { 
FRAC_CONST
(0.953190152425337), FRAC_CONST(0.302371515390196) },

141 { 
FRAC_CONST
(0.952258003795400), FRAC_CONST(0.305294438546792) },

142 { 
FRAC_CONST
(0.951316892150466), FRAC_CONST(0.308214488155861) },

143 { 
FRAC_CONST
(0.950366826348636), FRAC_CONST(0.311131636732785) },

144 { 
FRAC_CONST
(0.949407815332292), FRAC_CONST(0.314045856820251) },

145 { 
FRAC_CONST
(0.948439868128010), FRAC_CONST(0.316957120988508) },

146 { 
FRAC_CONST
(0.947462993846478), FRAC_CONST(0.319865401835631) },

147 { 
FRAC_CONST
(0.946477201682409), FRAC_CONST(0.322770671987771) },

148 { 
FRAC_CONST
(0.945482500914454), FRAC_CONST(0.325672904099420) },

149 { 
FRAC_CONST
(0.944478900905116), FRAC_CONST(0.328572070853664) },

150 { 
FRAC_CONST
(0.943466411100659), FRAC_CONST(0.331468144962441) },

151 { 
FRAC_CONST
(0.942445041031025), FRAC_CONST(0.334361099166799) },

152 { 
FRAC_CONST
(0.941414800309736), FRAC_CONST(0.337250906237151) },

153 { 
FRAC_CONST
(0.940375698633812), FRAC_CONST(0.340137538973532) },

154 { 
FRAC_CONST
(0.939327745783671), FRAC_CONST(0.343020970205856) },

155 { 
FRAC_CONST
(0.938270951623047), FRAC_CONST(0.345901172794169) },

156 { 
FRAC_CONST
(0.937205326098888), FRAC_CONST(0.348778119628908) },

157 { 
FRAC_CONST
(0.936130879241267), FRAC_CONST(0.351651783631155) },

158 { 
FRAC_CONST
(0.935047621163287), FRAC_CONST(0.354522137752887) },

159 { 
FRAC_CONST
(0.933955562060987), FRAC_CONST(0.357389154977241) },

160 { 
FRAC_CONST
(0.932854712213241), FRAC_CONST(0.360252808318757) },

161 { 
FRAC_CONST
(0.931745081981669), FRAC_CONST(0.363113070823639) },

162 { 
FRAC_CONST
(0.930626681810532), FRAC_CONST(0.365969915570009) },

163 { 
FRAC_CONST
(0.929499522226639), FRAC_CONST(0.368823315668154) },

164 { 
FRAC_CONST
(0.928363613839244), FRAC_CONST(0.371673244260787) },

165 { 
FRAC_CONST
(0.927218967339952), FRAC_CONST(0.374519674523293) },

166 { 
FRAC_CONST
(0.926065593502609), FRAC_CONST(0.377362579663988) },

167 { 
FRAC_CONST
(0.924903503183211), FRAC_CONST(0.380201932924366) },

168 { 
FRAC_CONST
(0.923732707319793), FRAC_CONST(0.383037707579352) },

169 { 
FRAC_CONST
(0.922553216932333), FRAC_CONST(0.385869876937555) },

170 { 
FRAC_CONST
(0.921365043122642), FRAC_CONST(0.388698414341519) },

171 { 
FRAC_CONST
(0.920168197074266), FRAC_CONST(0.391523293167972) },

172 { 
FRAC_CONST
(0.918962690052376), FRAC_CONST(0.394344486828080) },

173 { 
FRAC_CONST
(0.917748533403661), FRAC_CONST(0.397161968767692) },

174 { 
FRAC_CONST
(0.916525738556228), FRAC_CONST(0.399975712467595) },

175 { 
FRAC_CONST
(0.915294317019487), FRAC_CONST(0.402785691443764) },

176 { 
FRAC_CONST
(0.914054280384047), FRAC_CONST(0.405591879247604) },

177 { 
FRAC_CONST
(0.912805640321604), FRAC_CONST(0.408394249466208) },

178 { 
FRAC_CONST
(0.911548408584834), FRAC_CONST(0.411192775722600) },

179 { 
FRAC_CONST
(0.910282597007282), FRAC_CONST(0.413987431675985) },

180 { 
FRAC_CONST
(0.909008217503247), FRAC_CONST(0.416778191021998) },

181 { 
FRAC_CONST
(0.907725282067676), FRAC_CONST(0.419565027492947) },

182 { 
FRAC_CONST
(0.906433802776045), FRAC_CONST(0.422347914858067) },

183 { 
FRAC_CONST
(0.905133791784250), FRAC_CONST(0.425126826923762) },

184 { 
FRAC_CONST
(0.903825261328488), FRAC_CONST(0.427901737533854) },

185 { 
FRAC_CONST
(0.902508223725146), FRAC_CONST(0.430672620569827) },

186 { 
FRAC_CONST
(0.901182691370685), FRAC_CONST(0.433439449951074) },

187 { 
FRAC_CONST
(0.899848676741519), FRAC_CONST(0.436202199635144) },

188 { 
FRAC_CONST
(0.898506192393902), FRAC_CONST(0.438960843617984) },

189 { 
FRAC_CONST
(0.897155250963809), FRAC_CONST(0.441715355934187) },

190 { 
FRAC_CONST
(0.895795865166814), FRAC_CONST(0.444465710657234) },

191 { 
FRAC_CONST
(0.894428047797974), FRAC_CONST(0.447211881899738) },

192 { 
FRAC_CONST
(0.893051811731707), FRAC_CONST(0.449953843813691) },

193 { 
FRAC_CONST
(0.891667169921672), FRAC_CONST(0.452691570590701) },

194 { 
FRAC_CONST
(0.890274135400645), FRAC_CONST(0.455425036462242) },

195 { 
FRAC_CONST
(0.888872721280396), FRAC_CONST(0.458154215699893) },

196 { 
FRAC_CONST
(0.887462940751569), FRAC_CONST(0.460879082615579) },

197 { 
FRAC_CONST
(0.886044807083556), FRAC_CONST(0.463599611561814) },

198 { 
FRAC_CONST
(0.884618333624370), FRAC_CONST(0.466315776931944) },

199 { 
FRAC_CONST
(0.883183533800523), FRAC_CONST(0.469027553160387) },

200 { 
FRAC_CONST
(0.881740421116898), FRAC_CONST(0.471734914722871) },

201 { 
FRAC_CONST
(0.880289009156621), FRAC_CONST(0.474437836136679) },

202 { 
FRAC_CONST
(0.878829311580933), FRAC_CONST(0.477136291960885) },

203 { 
FRAC_CONST
(0.877361342129065), FRAC_CONST(0.479830256796594) },

204 { 
FRAC_CONST
(0.875885114618104), FRAC_CONST(0.482519705287184) },

205 { 
FRAC_CONST
(0.874400642942865), FRAC_CONST(0.485204612118542) },

206 { 
FRAC_CONST
(0.872907941075761), FRAC_CONST(0.487884952019301) },

207 { 
FRAC_CONST
(0.871407023066671), FRAC_CONST(0.490560699761082) },

208 { 
FRAC_CONST
(0.869897903042806), FRAC_CONST(0.493231830158728) },

209 { 
FRAC_CONST
(0.868380595208580), FRAC_CONST(0.495898318070542) },

210 { 
FRAC_CONST
(0.866855113845470), FRAC_CONST(0.498560138398525) },

211 { 
FRAC_CONST
(0.865321473311890), FRAC_CONST(0.501217266088610) },

212 { 
FRAC_CONST
(0.863779688043047), FRAC_CONST(0.503869676130899) },

213 { 
FRAC_CONST
(0.862229772550811), FRAC_CONST(0.506517343559899) },

214 { 
FRAC_CONST
(0.860671741423578), FRAC_CONST(0.509160243454755) },

215 { 
FRAC_CONST
(0.859105609326130), FRAC_CONST(0.511798350939487) },

216 { 
FRAC_CONST
(0.857531390999499), FRAC_CONST(0.514431641183223) },

217 { 
FRAC_CONST
(0.855949101260827), FRAC_CONST(0.517060089400432) },

218 { 
FRAC_CONST
(0.854358755003227), FRAC_CONST(0.519683670851158) },

219 { 
FRAC_CONST
(0.852760367195645), FRAC_CONST(0.522302360841255) },

220 { 
FRAC_CONST
(0.851153952882715), FRAC_CONST(0.524916134722613) },

221 { 
FRAC_CONST
(0.849539527184621), FRAC_CONST(0.527524967893398) },

222 { 
FRAC_CONST
(0.847917105296951), FRAC_CONST(0.530128835798279) },

223 { 
FRAC_CONST
(0.846286702490560), FRAC_CONST(0.532727713928659) },

224 { 
FRAC_CONST
(0.844648334111418), FRAC_CONST(0.535321577822907) },

225 { 
FRAC_CONST
(0.843002015580473), FRAC_CONST(0.537910403066589) },

226 { 
FRAC_CONST
(0.841347762393502), FRAC_CONST(0.540494165292695) },

227 { 
FRAC_CONST
(0.839685590120966), FRAC_CONST(0.543072840181872) },

228 { 
FRAC_CONST
(0.838015514407864), FRAC_CONST(0.545646403462649) },

229 { 
FRAC_CONST
(0.836337550973584), FRAC_CONST(0.548214830911668) },

230 { 
FRAC_CONST
(0.834651715611756), FRAC_CONST(0.550778098353912) },

231 { 
FRAC_CONST
(0.832958024190107), FRAC_CONST(0.553336181662932) },

232 { 
FRAC_CONST
(0.831256492650303), FRAC_CONST(0.555889056761074) },

233 { 
FRAC_CONST
(0.829547137007809), FRAC_CONST(0.558436699619704) },

234 { 
FRAC_CONST
(0.827829973351730), FRAC_CONST(0.560979086259438) },

235 { 
FRAC_CONST
(0.826105017844665), FRAC_CONST(0.563516192750365) },

236 { 
FRAC_CONST
(0.824372286722551), FRAC_CONST(0.566047995212271) },

237 { 
FRAC_CONST
(0.822631796294515), FRAC_CONST(0.568574469814869) },

238 { 
FRAC_CONST
(0.820883562942715), FRAC_CONST(0.571095592778017) },

239 { 
FRAC_CONST
(0.819127603122188), FRAC_CONST(0.573611340371945) },

240 { 
FRAC_CONST
(0.817363933360698), FRAC_CONST(0.576121688917478) },

241 { 
FRAC_CONST
(0.815592570258577), FRAC_CONST(0.578626614786261) },

242 { 
FRAC_CONST
(0.813813530488567), FRAC_CONST(0.581126094400978) },

243 { 
FRAC_CONST
(0.812026830795670), FRAC_CONST(0.583620104235573) },

244 { 
FRAC_CONST
(0.810232487996982), FRAC_CONST(0.586108620815476) },

245 { 
FRAC_CONST
(0.808430518981543), FRAC_CONST(0.588591620717823) },

246 { 
FRAC_CONST
(0.806620940710170), FRAC_CONST(0.591069080571671) },

247 { 
FRAC_CONST
(0.804803770215303), FRAC_CONST(0.593540977058226) },

248 { 
FRAC_CONST
(0.802979024600843), FRAC_CONST(0.596007286911057) },

249 { 
FRAC_CONST
(0.801146721041991), FRAC_CONST(0.598467986916314) },

250 { 
FRAC_CONST
(0.799306876785086), FRAC_CONST(0.600923053912954) },

251 { 
FRAC_CONST
(0.797459509147442), FRAC_CONST(0.603372464792950) },

252 { 
FRAC_CONST
(0.795604635517188), FRAC_CONST(0.605816196501515) },

253 { 
FRAC_CONST
(0.793742273353100), FRAC_CONST(0.608254226037314) },

254 { 
FRAC_CONST
(0.791872440184440), FRAC_CONST(0.610686530452686) },

255 { 
FRAC_CONST
(0.789995153610791), FRAC_CONST(0.613113086853855) },

256 { 
FRAC_CONST
(0.788110431301888), FRAC_CONST(0.615533872401147) },

257 { 
FRAC_CONST
(0.786218290997456), FRAC_CONST(0.617948864309208) },

258 { 
FRAC_CONST
(0.784318750507039), FRAC_CONST(0.620358039847214) },

259 { 
FRAC_CONST
(0.782411827709837), FRAC_CONST(0.622761376339086) },

260 { 
FRAC_CONST
(0.780497540554532), FRAC_CONST(0.625158851163708) },

261 { 
FRAC_CONST
(0.778575907059125), FRAC_CONST(0.627550441755132) },

262 { 
FRAC_CONST
(0.776646945310762), FRAC_CONST(0.629936125602796) },

263 { 
FRAC_CONST
(0.774710673465566), FRAC_CONST(0.632315880251738) },

264 { 
FRAC_CONST
(0.772767109748464), FRAC_CONST(0.634689683302798) },

265 { 
FRAC_CONST
(0.770816272453019), FRAC_CONST(0.637057512412839) },

266 { 
FRAC_CONST
(0.768858179941253), FRAC_CONST(0.639419345294951) },

267 { 
FRAC_CONST
(0.766892850643481), FRAC_CONST(0.641775159718664) },

268 { 
FRAC_CONST
(0.764920303058128), FRAC_CONST(0.644124933510155) },

269 { 
FRAC_CONST
(0.762940555751566), FRAC_CONST(0.646468644552458) },

270 { 
FRAC_CONST
(0.760953627357928), FRAC_CONST(0.648806270785673) },

271 { 
FRAC_CONST
(0.758959536578942), FRAC_CONST(0.651137790207170) },

272 { 
FRAC_CONST
(0.756958302183750), FRAC_CONST(0.653463180871802) },

273 { 
FRAC_CONST
(0.754949943008733), FRAC_CONST(0.655782420892106) },

274 { 
FRAC_CONST
(0.752934477957330), FRAC_CONST(0.658095488438511) },

275 { 
FRAC_CONST
(0.750911925999868), FRAC_CONST(0.660402361739545) },

276 { 
FRAC_CONST
(0.748882306173375), FRAC_CONST(0.662703019082037) },

277 { 
FRAC_CONST
(0.746845637581407), FRAC_CONST(0.664997438811325) },

278 { 
FRAC_CONST
(0.744801939393863), FRAC_CONST(0.667285599331456) },

279 { 
FRAC_CONST
(0.742751230846809), FRAC_CONST(0.669567479105392) },

280 { 
FRAC_CONST
(0.740693531242296), FRAC_CONST(0.671843056655212) },

281 { 
FRAC_CONST
(0.738628859948175), FRAC_CONST(0.674112310562312) },

282 { 
FRAC_CONST
(0.736557236397919), FRAC_CONST(0.676375219467612) },

283 { 
FRAC_CONST
(0.734478680090438), FRAC_CONST(0.678631762071749) },

284 { 
FRAC_CONST
(0.732393210589896), FRAC_CONST(0.680881917135287) },

285 { 
FRAC_CONST
(0.730300847525525), FRAC_CONST(0.683125663478909) },

286 { 
FRAC_CONST
(0.728201610591445), FRAC_CONST(0.685362979983619) },

287 { 
FRAC_CONST
(0.726095519546471), FRAC_CONST(0.687593845590942) },

288 { 
FRAC_CONST
(0.723982594213936), FRAC_CONST(0.689818239303122) },

289 { 
FRAC_CONST
(0.721862854481496), FRAC_CONST(0.692036140183319) },

290 { 
FRAC_CONST
(0.719736320300951), FRAC_CONST(0.694247527355803) },

291 { 
FRAC_CONST
(0.717603011688049), FRAC_CONST(0.696452380006158) },

292 { 
FRAC_CONST
(0.715462948722304), FRAC_CONST(0.698650677381469) },

293 { 
FRAC_CONST
(0.713316151546803), FRAC_CONST(0.700842398790526) },

294 { 
FRAC_CONST
(0.711162640368018), FRAC_CONST(0.703027523604011) },

295 { 
FRAC_CONST
(0.709002435455618), FRAC_CONST(0.705206031254698) },

296 { 
FRAC_CONST
(0.706835557142274), FRAC_CONST(0.707377901237642) },

297 { 
FRAC_CONST
(0.704662025823469), FRAC_CONST(0.709543113110377) },

298 { 
FRAC_CONST
(0.702481861957308), FRAC_CONST(0.711701646493103) },

299 { 
FRAC_CONST
(0.700295086064324), FRAC_CONST(0.713853481068882) },

300 { 
FRAC_CONST
(0.698101718727284), FRAC_CONST(0.715998596583829) },

301 { 
FRAC_CONST
(0.695901780590997), FRAC_CONST(0.718136972847297) },

302 { 
FRAC_CONST
(0.693695292362118), FRAC_CONST(0.720268589732077) },

303 { 
FRAC_CONST
(0.691482274808956), FRAC_CONST(0.722393427174578) },

304 { 
FRAC_CONST
(0.689262748761273), FRAC_CONST(0.724511465175020) },

305 { 
FRAC_CONST
(0.687036735110096), FRAC_CONST(0.726622683797623) },

306 { 
FRAC_CONST
(0.684804254807511), FRAC_CONST(0.728727063170794) },

307 { 
FRAC_CONST
(0.682565328866473), FRAC_CONST(0.730824583487312) },

308 { 
FRAC_CONST
(0.680319978360607), FRAC_CONST(0.732915225004518) },

309 { 
FRAC_CONST
(0.678068224424007), FRAC_CONST(0.734998968044497) },

310 { 
FRAC_CONST
(0.675810088251037), FRAC_CONST(0.737075792994266) },

311 { 
FRAC_CONST
(0.673545591096136), FRAC_CONST(0.739145680305957) },

312 { 
FRAC_CONST
(0.671274754273613), FRAC_CONST(0.741208610497004) },

313 { 
FRAC_CONST
(0.668997599157450), FRAC_CONST(0.743264564150321) },

314 { 
FRAC_CONST
(0.666714147181098), FRAC_CONST(0.745313521914490) },

315 { 
FRAC_CONST
(0.664424419837275), FRAC_CONST(0.747355464503940) },

316 { 
FRAC_CONST
(0.662128438677769), FRAC_CONST(0.749390372699130) },

317 { 
FRAC_CONST
(0.659826225313227), FRAC_CONST(0.751418227346727) },

318 { 
FRAC_CONST
(0.657517801412960), FRAC_CONST(0.753439009359794) },

319 { 
FRAC_CONST
(0.655203188704732), FRAC_CONST(0.755452699717958) },

320 { 
FRAC_CONST
(0.652882408974559), FRAC_CONST(0.757459279467601) },

321 { 
FRAC_CONST
(0.650555484066504), FRAC_CONST(0.759458729722028) },

322 { 
FRAC_CONST
(0.648222435882470), FRAC_CONST(0.761451031661654) },

323 { 
FRAC_CONST
(0.645883286381996), FRAC_CONST(0.763436166534172) },

324 { 
FRAC_CONST
(0.643538057582048), FRAC_CONST(0.765414115654738) },

325 { 
FRAC_CONST
(0.641186771556811), FRAC_CONST(0.767384860406142) },

326 { 
FRAC_CONST
(0.638829450437486), FRAC_CONST(0.769348382238982) },

327 { 
FRAC_CONST
(0.636466116412077), FRAC_CONST(0.771304662671845) },

328 { 
FRAC_CONST
(0.634096791725184), FRAC_CONST(0.773253683291473) },

329 { 
FRAC_CONST
(0.631721498677792), FRAC_CONST(0.775195425752941) },

330 { 
FRAC_CONST
(0.629340259627066), FRAC_CONST(0.777129871779832) },

331 { 
FRAC_CONST
(0.626953096986133), FRAC_CONST(0.779057003164401) },

332 { 
FRAC_CONST
(0.624560033223877), FRAC_CONST(0.780976801767754) },

333 { 
FRAC_CONST
(0.622161090864727), FRAC_CONST(0.782889249520015) },

334 { 
FRAC_CONST
(0.619756292488441), FRAC_CONST(0.784794328420499) },

335 { 
FRAC_CONST
(0.617345660729897), FRAC_CONST(0.786692020537877) },

336 { 
FRAC_CONST
(0.614929218278880), FRAC_CONST(0.788582308010347) },

337 { 
FRAC_CONST
(0.612506987879866), FRAC_CONST(0.790465173045805) },

338 { 
FRAC_CONST
(0.610078992331810), FRAC_CONST(0.792340597922007) },

339 { 
FRAC_CONST
(0.607645254487931), FRAC_CONST(0.794208564986741) },

340 { 
FRAC_CONST
(0.605205797255497), FRAC_CONST(0.796069056657988) },

341 { 
FRAC_CONST
(0.602760643595607), FRAC_CONST(0.797922055424093) },

342 { 
FRAC_CONST
(0.600309816522980), FRAC_CONST(0.799767543843926) },

343 { 
FRAC_CONST
(0.597853339105734), FRAC_CONST(0.801605504547046) },

344 { 
FRAC_CONST
(0.595391234465169), FRAC_CONST(0.803435920233868) },

345 { 
FRAC_CONST
(0.592923525775551), FRAC_CONST(0.805258773675822) },

346 { 
FRAC_CONST
(0.590450236263896), FRAC_CONST(0.807074047715518) },

347 { 
FRAC_CONST
(0.587971389209745), FRAC_CONST(0.808881725266904) },

348 { 
FRAC_CONST
(0.585487007944951), FRAC_CONST(0.810681789315431) },

349 { 
FRAC_CONST
(0.582997115853458), FRAC_CONST(0.812474222918210) },

350 { 
FRAC_CONST
(0.580501736371077), FRAC_CONST(0.814259009204175) },

351 { 
FRAC_CONST
(0.578000892985270), FRAC_CONST(0.816036131374237) },

352 { 
FRAC_CONST
(0.575494609234928), FRAC_CONST(0.817805572701444) },

353 { 
FRAC_CONST
(0.572982908710149), FRAC_CONST(0.819567316531142) },

354 { 
FRAC_CONST
(0.570465815052013), FRAC_CONST(0.821321346281127) },

355 { 
FRAC_CONST
(0.567943351952366), FRAC_CONST(0.823067645441802) },

356 { 
FRAC_CONST
(0.565415543153590), FRAC_CONST(0.824806197576334) },

357 { 
FRAC_CONST
(0.562882412448385), FRAC_CONST(0.826536986320810) },

358 { 
FRAC_CONST
(0.560343983679541), FRAC_CONST(0.828259995384386) },

359 { 
FRAC_CONST
(0.557800280739717), FRAC_CONST(0.829975208549444) },

360 { 
FRAC_CONST
(0.555251327571214), FRAC_CONST(0.831682609671745) },

361 { 
FRAC_CONST
(0.552697148165750), FRAC_CONST(0.833382182680580) },

362 { 
FRAC_CONST
(0.550137766564234), FRAC_CONST(0.835073911578919) },

363 { 
FRAC_CONST
(0.547573206856540), FRAC_CONST(0.836757780443567) },

364 { 
FRAC_CONST
(0.545003493181281), FRAC_CONST(0.838433773425308) },

365 { 
FRAC_CONST
(0.542428649725581), FRAC_CONST(0.840101874749058) },

366 { 
FRAC_CONST
(0.539848700724848), FRAC_CONST(0.841762068714012) },

367 { 
FRAC_CONST
(0.537263670462543), FRAC_CONST(0.843414339693793) },

368 { 
FRAC_CONST
(0.534673583269956), FRAC_CONST(0.845058672136595) },

369 { 
FRAC_CONST
(0.532078463525974), FRAC_CONST(0.846695050565337) },

370 { 
FRAC_CONST
(0.529478335656852), FRAC_CONST(0.848323459577802) },

371 { 
FRAC_CONST
(0.526873224135985), FRAC_CONST(0.849943883846782) },

372 { 
FRAC_CONST
(0.524263153483673), FRAC_CONST(0.851556308120229) },

373 { 
FRAC_CONST
(0.521648148266897), FRAC_CONST(0.853160717221390) },

374 { 
FRAC_CONST
(0.519028233099081), FRAC_CONST(0.854757096048957) },

375 { 
FRAC_CONST
(0.516403432639864), FRAC_CONST(0.856345429577204) },

376 { 
FRAC_CONST
(0.513773771594868), FRAC_CONST(0.857925702856130) },

377 { 
FRAC_CONST
(0.511139274715464), FRAC_CONST(0.859497901011602) },

378 { 
FRAC_CONST
(0.508499966798541), FRAC_CONST(0.861062009245491) },

379 { 
FRAC_CONST
(0.505855872686269), FRAC_CONST(0.862618012835817) },

380 { 
FRAC_CONST
(0.503207017265869), FRAC_CONST(0.864165897136879) },

381 { 
FRAC_CONST
(0.500553425469378), FRAC_CONST(0.865705647579402) },

382 { 
FRAC_CONST
(0.497895122273411), FRAC_CONST(0.867237249670668) },

383 { 
FRAC_CONST
(0.495232132698931), FRAC_CONST(0.868760688994655) },

384 { 
FRAC_CONST
(0.492564481811011), FRAC_CONST(0.870275951212172) },

385 { 
FRAC_CONST
(0.489892194718595), FRAC_CONST(0.871783022060993) },

386 { 
FRAC_CONST
(0.487215296574269), FRAC_CONST(0.873281887355994) },

387 { 
FRAC_CONST
(0.484533812574016), FRAC_CONST(0.874772532989284) },

388 { 
FRAC_CONST
(0.481847767956986), FRAC_CONST(0.876254944930338) },

389 { 
FRAC_CONST
(0.479157188005253), FRAC_CONST(0.877729109226132) },

390 { 
FRAC_CONST
(0.476462098043581), FRAC_CONST(0.879195012001267) },

391 { 
FRAC_CONST
(0.473762523439183), FRAC_CONST(0.880652639458111) },

392 { 
FRAC_CONST
(0.471058489601483), FRAC_CONST(0.882101977876918) },

393 { 
FRAC_CONST
(0.468350021981877), FRAC_CONST(0.883543013615962) },

394 { 
FRAC_CONST
(0.465637146073494), FRAC_CONST(0.884975733111667) },

395 { 
FRAC_CONST
(0.462919887410955), FRAC_CONST(0.886400122878730) },

396 { 
FRAC_CONST
(0.460198271570134), FRAC_CONST(0.887816169510255) },

397 { 
FRAC_CONST
(0.457472324167916), FRAC_CONST(0.889223859677868) },

398 { 
FRAC_CONST
(0.454742070861955), FRAC_CONST(0.890623180131856) },

399 { 
FRAC_CONST
(0.452007537350437), FRAC_CONST(0.892014117701280) },

400 { 
FRAC_CONST
(0.449268749371830), FRAC_CONST(0.893396659294108) },

401 { 
FRAC_CONST
(0.446525732704651), FRAC_CONST(0.894770791897330) },

402 { 
FRAC_CONST
(0.443778513167218), FRAC_CONST(0.896136502577087) },

403 { 
FRAC_CONST
(0.441027116617407), FRAC_CONST(0.897493778478790) },

404 { 
FRAC_CONST
(0.438271568952410), FRAC_CONST(0.898842606827242) },

405 { 
FRAC_CONST
(0.435511896108492), FRAC_CONST(0.900182974926757) },

406 { 
FRAC_CONST
(0.432748124060744), FRAC_CONST(0.901514870161279) },

407 { 
FRAC_CONST
(0.429980278822841), FRAC_CONST(0.902838279994503) },

408 { 
FRAC_CONST
(0.427208386446796), FRAC_CONST(0.904153191969992) },

409 { 
FRAC_CONST
(0.424432473022717), FRAC_CONST(0.905459593711293) },

410 { 
FRAC_CONST
(0.421652564678558), FRAC_CONST(0.906757472922057) },

411 { 
FRAC_CONST
(0.418868687579875), FRAC_CONST(0.908046817386148) },

412 { 
FRAC_CONST
(0.416080867929579), FRAC_CONST(0.909327614967767) },

413 { 
FRAC_CONST
(0.413289131967691), FRAC_CONST(0.910599853611559) },

414 { 
FRAC_CONST
(0.410493505971093), FRAC_CONST(0.911863521342729) },

415 { 
FRAC_CONST
(0.407694016253280), FRAC_CONST(0.913118606267154) },

416 { 
FRAC_CONST
(0.404890689164118), FRAC_CONST(0.914365096571498) },

417 { 
FRAC_CONST
(0.402083551089587), FRAC_CONST(0.915602980523320) },

418 { 
FRAC_CONST
(0.399272628451541), FRAC_CONST(0.916832246471184) },

419 { 
FRAC_CONST
(0.396457947707454), FRAC_CONST(0.918052882844770) },

420 { 
FRAC_CONST
(0.393639535350173), FRAC_CONST(0.919264878154985) },

421 { 
FRAC_CONST
(0.390817417907669), FRAC_CONST(0.920468220994067) },

422 { 
FRAC_CONST
(0.387991621942785), FRAC_CONST(0.921662900035695) },

423 { 
FRAC_CONST
(0.385162174052990), FRAC_CONST(0.922848904035094) },

424 { 
FRAC_CONST
(0.382329100870125), FRAC_CONST(0.924026221829144) },

425 { 
FRAC_CONST
(0.379492429060153), FRAC_CONST(0.925194842336480) },

426 { 
FRAC_CONST
(0.376652185322910), FRAC_CONST(0.926354754557603) },

427 { 
FRAC_CONST
(0.373808396391851), FRAC_CONST(0.927505947574975) },

428 { 
FRAC_CONST
(0.370961089033802), FRAC_CONST(0.928648410553131) },

429 { 
FRAC_CONST
(0.368110290048703), FRAC_CONST(0.929782132738772) },

430 { 
FRAC_CONST
(0.365256026269360), FRAC_CONST(0.930907103460875) },

431 { 
FRAC_CONST
(0.362398324561191), FRAC_CONST(0.932023312130786) },

432 { 
FRAC_CONST
(0.359537211821973), FRAC_CONST(0.933130748242325) },

433 { 
FRAC_CONST
(0.356672714981588), FRAC_CONST(0.934229401371881) },

434 { 
FRAC_CONST
(0.353804861001772), FRAC_CONST(0.935319261178512) },

435 { 
FRAC_CONST
(0.350933676875858), FRAC_CONST(0.936400317404042) },

436 { 
FRAC_CONST
(0.348059189628526), FRAC_CONST(0.937472559873159) },

437 { 
FRAC_CONST
(0.345181426315543), FRAC_CONST(0.938535978493509) },

438 { 
FRAC_CONST
(0.342300414023514), FRAC_CONST(0.939590563255789) },

439 { 
FRAC_CONST
(0.339416179869623), FRAC_CONST(0.940636304233848) },

440 { 
FRAC_CONST
(0.336528751001382), FRAC_CONST(0.941673191584771) },

441 { 
FRAC_CONST
(0.333638154596371), FRAC_CONST(0.942701215548982) },

442 { 
FRAC_CONST
(0.330744417861983), FRAC_CONST(0.943720366450326) },

443 { 
FRAC_CONST
(0.327847568035171), FRAC_CONST(0.944730634696168) },

444 { 
FRAC_CONST
(0.324947632382188), FRAC_CONST(0.945732010777477) },

445 { 
FRAC_CONST
(0.322044638198335), FRAC_CONST(0.946724485268921) },

446 { 
FRAC_CONST
(0.319138612807696), FRAC_CONST(0.947708048828952) },

447 { 
FRAC_CONST
(0.316229583562890), FRAC_CONST(0.948682692199895) },

448 { 
FRAC_CONST
(0.313317577844809), FRAC_CONST(0.949648406208035) },

449 { 
FRAC_CONST
(0.310402623062359), FRAC_CONST(0.950605181763705) },

450 { 
FRAC_CONST
(0.307484746652204), FRAC_CONST(0.951553009861369) },

451 { 
FRAC_CONST
(0.304563976078509), FRAC_CONST(0.952491881579706) },

452 { 
FRAC_CONST
(0.301640338832679), FRAC_CONST(0.953421788081700) },

453 { 
FRAC_CONST
(0.298713862433100), FRAC_CONST(0.954342720614716) },

454 { 
FRAC_CONST
(0.295784574424884), FRAC_CONST(0.955254670510587) },

455 { 
FRAC_CONST
(0.292852502379605), FRAC_CONST(0.956157629185692) },

456 { 
FRAC_CONST
(0.289917673895041), FRAC_CONST(0.957051588141041) },

457 { 
FRAC_CONST
(0.286980116594916), FRAC_CONST(0.957936538962351) },

458 { 
FRAC_CONST
(0.284039858128637), FRAC_CONST(0.958812473320129) },

459 { 
FRAC_CONST
(0.281096926171038), FRAC_CONST(0.959679382969747) },

460 { 
FRAC_CONST
(0.278151348422115), FRAC_CONST(0.960537259751520) },

461 { 
FRAC_CONST
(0.275203152606767), FRAC_CONST(0.961386095590786) },

462 { 
FRAC_CONST
(0.272252366474537), FRAC_CONST(0.962225882497979) },

463 { 
FRAC_CONST
(0.269299017799346), FRAC_CONST(0.963056612568704) },

464 { 
FRAC_CONST
(0.266343134379238), FRAC_CONST(0.963878277983814) },

465 { 
FRAC_CONST
(0.263384744036113), FRAC_CONST(0.964690871009481) },

466 { 
FRAC_CONST
(0.260423874615468), FRAC_CONST(0.965494383997270) },

467 { 
FRAC_CONST
(0.257460553986133), FRAC_CONST(0.966288809384210) },

468 { 
FRAC_CONST
(0.254494810040011), FRAC_CONST(0.967074139692867) },

469 { 
FRAC_CONST
(0.251526670691813), FRAC_CONST(0.967850367531414) },

470 { 
FRAC_CONST
(0.248556163878797), FRAC_CONST(0.968617485593698) },

471 { 
FRAC_CONST
(0.245583317560504), FRAC_CONST(0.969375486659311) },

472 { 
FRAC_CONST
(0.242608159718497), FRAC_CONST(0.970124363593660) },

473 { 
FRAC_CONST
(0.239630718356094), FRAC_CONST(0.970864109348029) },

474 { 
FRAC_CONST
(0.236651021498106), FRAC_CONST(0.971594716959650) },

475 { 
FRAC_CONST
(0.233669097190577), FRAC_CONST(0.972316179551765) },

476 { 
FRAC_CONST
(0.230684973500512), FRAC_CONST(0.973028490333694) },

477 { 
FRAC_CONST
(0.227698678515621), FRAC_CONST(0.973731642600896) },

478 { 
FRAC_CONST
(0.224710240344050), FRAC_CONST(0.974425629735035) },

479 { 
FRAC_CONST
(0.221719687114115), FRAC_CONST(0.975110445204039) },

480 { 
FRAC_CONST
(0.218727046974045), FRAC_CONST(0.975786082562164) },

481 { 
FRAC_CONST
(0.215732348091706), FRAC_CONST(0.976452535450054) },

482 { 
FRAC_CONST
(0.212735618654346), FRAC_CONST(0.977109797594801) },

483 { 
FRAC_CONST
(0.209736886868323), FRAC_CONST(0.977757862810003) },

484 { 
FRAC_CONST
(0.206736180958844), FRAC_CONST(0.978396724995823) },

485 { 
FRAC_CONST
(0.203733529169694), FRAC_CONST(0.979026378139048) },

486 { 
FRAC_CONST
(0.200728959762976), FRAC_CONST(0.979646816313141) },

487 { 
FRAC_CONST
(0.197722501018842), FRAC_CONST(0.980258033678304) },

488 { 
FRAC_CONST
(0.194714181235226), FRAC_CONST(0.980860024481524) },

489 { 
FRAC_CONST
(0.191704028727580), FRAC_CONST(0.981452783056636) },

490 { 
FRAC_CONST
(0.188692071828605), FRAC_CONST(0.982036303824369) },

491 { 
FRAC_CONST
(0.185678338887988), FRAC_CONST(0.982610581292405) },

492 { 
FRAC_CONST
(0.182662858272129), FRAC_CONST(0.983175610055424) },

493 { 
FRAC_CONST
(0.179645658363882), FRAC_CONST(0.983731384795162) },

494 { 
FRAC_CONST
(0.176626767562281), FRAC_CONST(0.984277900280454) },

495 { 
FRAC_CONST
(0.173606214282275), FRAC_CONST(0.984815151367289) },

496 { 
FRAC_CONST
(0.170584026954464), FRAC_CONST(0.985343132998855) },

497 { 
FRAC_CONST
(0.167560234024824), FRAC_CONST(0.985861840205587) },

498 { 
FRAC_CONST
(0.164534863954446), FRAC_CONST(0.986371268105216) },

499 { 
FRAC_CONST
(0.161507945219266), FRAC_CONST(0.986871411902812) },

500 { 
FRAC_CONST
(0.158479506309796), FRAC_CONST(0.987362266890832) },

501 { 
FRAC_CONST
(0.155449575730856), FRAC_CONST(0.987843828449162) },

502 { 
FRAC_CONST
(0.152418182001307), FRAC_CONST(0.988316092045160) },

503 { 
FRAC_CONST
(0.149385353653780), FRAC_CONST(0.988779053233702) },

504 { 
FRAC_CONST
(0.146351119234411), FRAC_CONST(0.989232707657220) },

505 { 
FRAC_CONST
(0.143315507302572), FRAC_CONST(0.989677051045747) },

506 { 
FRAC_CONST
(0.140278546430595), FRAC_CONST(0.990112079216954) },

507 { 
FRAC_CONST
(0.137240265203516), FRAC_CONST(0.990537788076189) },

508 { 
FRAC_CONST
(0.134200692218792), FRAC_CONST(0.990954173616519) },

509 { 
FRAC_CONST
(0.131159856086043), FRAC_CONST(0.991361231918763) },

510 { 
FRAC_CONST
(0.128117785426777), FRAC_CONST(0.991758959151536) },

511 { 
FRAC_CONST
(0.125074508874121), FRAC_CONST(0.992147351571276) },

512 { 
FRAC_CONST
(0.122030055072553), FRAC_CONST(0.992526405522286) },

513 { 
FRAC_CONST
(0.118984452677633), FRAC_CONST(0.992896117436766) },

514 { 
FRAC_CONST
(0.115937730355728), FRAC_CONST(0.993256483834846) },

515 { 
FRAC_CONST
(0.112889916783750), FRAC_CONST(0.993607501324622) },

516 { 
FRAC_CONST
(0.109841040648883), FRAC_CONST(0.993949166602181) },

517 { 
FRAC_CONST
(0.106791130648307), FRAC_CONST(0.994281476451642) },

518 { 
FRAC_CONST
(0.103740215488939), FRAC_CONST(0.994604427745176) },

519 { 
FRAC_CONST
(0.100688323887154), FRAC_CONST(0.994918017443043) },

520 { 
FRAC_CONST
(0.097635484568517), FRAC_CONST(0.995222242593618) },

521 { 
FRAC_CONST
(0.094581726267515), FRAC_CONST(0.995517100333418) },

522 { 
FRAC_CONST
(0.091527077727285), FRAC_CONST(0.995802587887129) },

523 { 
FRAC_CONST
(0.088471567699341), FRAC_CONST(0.996078702567634) },

524 { 
FRAC_CONST
(0.085415224943307), FRAC_CONST(0.996345441776036) },

525 { 
FRAC_CONST
(0.082358078226647), FRAC_CONST(0.996602803001684) },

526 { 
FRAC_CONST
(0.079300156324388), FRAC_CONST(0.996850783822197) },

527 { 
FRAC_CONST
(0.076241488018856), FRAC_CONST(0.997089381903483) },

528 { 
FRAC_CONST
(0.073182102099403), FRAC_CONST(0.997318594999769) },

529 { 
FRAC_CONST
(0.070122027362134), FRAC_CONST(0.997538420953611) },

530 { 
FRAC_CONST
(0.067061292609637), FRAC_CONST(0.997748857695926) },

531 { 
FRAC_CONST
(0.063999926650714), FRAC_CONST(0.997949903246001) },

532 { 
FRAC_CONST
(0.060937958300107), FRAC_CONST(0.998141555711521) },

533 { 
FRAC_CONST
(0.057875416378229), FRAC_CONST(0.998323813288578) },

534 { 
FRAC_CONST
(0.054812329710890), FRAC_CONST(0.998496674261695) },

535 { 
FRAC_CONST
(0.051748727129028), FRAC_CONST(0.998660137003838) },

536 { 
FRAC_CONST
(0.048684637468439), FRAC_CONST(0.998814199976435) },

537 { 
FRAC_CONST
(0.045620089569500), FRAC_CONST(0.998958861729386) },

538 { 
FRAC_CONST
(0.042555112276904), FRAC_CONST(0.999094120901079) },

539 { 
FRAC_CONST
(0.039489734439384), FRAC_CONST(0.999219976218404) },

540 { 
FRAC_CONST
(0.036423984909444), FRAC_CONST(0.999336426496761) },

541 { 
FRAC_CONST
(0.033357892543086), FRAC_CONST(0.999443470640078) },

542 { 
FRAC_CONST
(0.030291486199539), FRAC_CONST(0.999541107640813) },

543 { 
FRAC_CONST
(0.027224794740988), FRAC_CONST(0.999629336579970) },

544 { 
FRAC_CONST
(0.024157847032300), FRAC_CONST(0.999708156627105) },

545 { 
FRAC_CONST
(0.021090671940755), FRAC_CONST(0.999777567040333) },

546 { 
FRAC_CONST
(0.018023298335774), FRAC_CONST(0.999837567166337) },

547 { 
FRAC_CONST
(0.014955755088644), FRAC_CONST(0.999888156440373) },

548 { 
FRAC_CONST
(0.011888071072252), FRAC_CONST(0.999929334386276) },

549 { 
FRAC_CONST
(0.008820275160808), FRAC_CONST(0.999961100616463) },

550 { 
FRAC_CONST
(0.005752396229574), FRAC_CONST(0.999983454831938) },

551 { 
FRAC_CONST
(0.002684463154596), FRAC_CONST(0.999996396822294) }

555 
ALIGN
 c⁄° 
com∂ex_t
 
	gmd˘_èb_256
[] =

557 { 
FRAC_CONST
(0.999995293809576), FRAC_CONST(0.003067956762966) },

558 { 
FRAC_CONST
(0.999618822495179), FRAC_CONST(0.027608145778966) },

559 { 
FRAC_CONST
(0.998640218180265), FRAC_CONST(0.052131704680283) },

560 { 
FRAC_CONST
(0.997060070339483), FRAC_CONST(0.076623861392031) },

561 { 
FRAC_CONST
(0.994879330794806), FRAC_CONST(0.101069862754828) },

562 { 
FRAC_CONST
(0.992099313142192), FRAC_CONST(0.125454983411546) },

563 { 
FRAC_CONST
(0.988721691960324), FRAC_CONST(0.149764534677322) },

564 { 
FRAC_CONST
(0.984748501801904), FRAC_CONST(0.173983873387464) },

565 { 
FRAC_CONST
(0.980182135968117), FRAC_CONST(0.198098410717954) },

566 { 
FRAC_CONST
(0.975025345066994), FRAC_CONST(0.222093620973204) },

567 { 
FRAC_CONST
(0.969281235356549), FRAC_CONST(0.245955050335795) },

568 { 
FRAC_CONST
(0.962953266873684), FRAC_CONST(0.269668325572915) },

569 { 
FRAC_CONST
(0.956045251349996), FRAC_CONST(0.293219162694259) },

570 { 
FRAC_CONST
(0.948561349915730), FRAC_CONST(0.316593375556166) },

571 { 
FRAC_CONST
(0.940506070593268), FRAC_CONST(0.339776884406827) },

572 { 
FRAC_CONST
(0.931884265581668), FRAC_CONST(0.362755724367397) },

573 { 
FRAC_CONST
(0.922701128333879), FRAC_CONST(0.385516053843919) },

574 { 
FRAC_CONST
(0.912962190428398), FRAC_CONST(0.408044162864979) },

575 { 
FRAC_CONST
(0.902673318237259), FRAC_CONST(0.430326481340083) },

576 { 
FRAC_CONST
(0.891840709392343), FRAC_CONST(0.452349587233771) },

577 { 
FRAC_CONST
(0.880470889052161), FRAC_CONST(0.474100214650550) },

578 { 
FRAC_CONST
(0.868570705971341), FRAC_CONST(0.495565261825773) },

579 { 
FRAC_CONST
(0.856147328375194), FRAC_CONST(0.516731799017650) },

580 { 
FRAC_CONST
(0.843208239641845), FRAC_CONST(0.537587076295645) },

581 { 
FRAC_CONST
(0.829761233794523), FRAC_CONST(0.558118531220556) },

582 { 
FRAC_CONST
(0.815814410806734), FRAC_CONST(0.578313796411656) },

583 { 
FRAC_CONST
(0.801376171723140), FRAC_CONST(0.598160706996342) },

584 { 
FRAC_CONST
(0.786455213599086), FRAC_CONST(0.617647307937804) },

585 { 
FRAC_CONST
(0.771060524261814), FRAC_CONST(0.636761861236284) },

586 { 
FRAC_CONST
(0.755201376896537), FRAC_CONST(0.655492852999615) },

587 { 
FRAC_CONST
(0.738887324460615), FRAC_CONST(0.673829000378756) },

588 { 
FRAC_CONST
(0.722128193929215), FRAC_CONST(0.691759258364158) },

589 { 
FRAC_CONST
(0.704934080375905), FRAC_CONST(0.709272826438866) },

590 { 
FRAC_CONST
(0.687315340891759), FRAC_CONST(0.726359155084346) },

591 { 
FRAC_CONST
(0.669282588346636), FRAC_CONST(0.743007952135122) },

592 { 
FRAC_CONST
(0.650846684996381), FRAC_CONST(0.759209188978388) },

593 { 
FRAC_CONST
(0.632018735939809), FRAC_CONST(0.774953106594874) },

594 { 
FRAC_CONST
(0.612810082429410), FRAC_CONST(0.790230221437310) },

595 { 
FRAC_CONST
(0.593232295039800), FRAC_CONST(0.805031331142964) },

596 { 
FRAC_CONST
(0.573297166698042), FRAC_CONST(0.819347520076797) },

597 { 
FRAC_CONST
(0.553016705580028), FRAC_CONST(0.833170164701913) },

598 { 
FRAC_CONST
(0.532403127877198), FRAC_CONST(0.846490938774052) },

599 { 
FRAC_CONST
(0.511468850437971), FRAC_CONST(0.859301818357008) },

600 { 
FRAC_CONST
(0.490226483288291), FRAC_CONST(0.871595086655951) },

601 { 
FRAC_CONST
(0.468688822035828), FRAC_CONST(0.883363338665732) },

602 { 
FRAC_CONST
(0.446868840162374), FRAC_CONST(0.894599485631383) },

603 { 
FRAC_CONST
(0.424779681209109), FRAC_CONST(0.905296759318119) },

604 { 
FRAC_CONST
(0.402434650859419), FRAC_CONST(0.915448716088268) },

605 { 
FRAC_CONST
(0.379847208924051), FRAC_CONST(0.925049240782678) },

606 { 
FRAC_CONST
(0.357030961233430), FRAC_CONST(0.934092550404259) },

607 { 
FRAC_CONST
(0.333999651442009), FRAC_CONST(0.942573197601447) },

608 { 
FRAC_CONST
(0.310767152749611), FRAC_CONST(0.950486073949482) },

609 { 
FRAC_CONST
(0.287347459544730), FRAC_CONST(0.957826413027533) },

610 { 
FRAC_CONST
(0.263754678974832), FRAC_CONST(0.964589793289813) },

611 { 
FRAC_CONST
(0.240003022448742), FRAC_CONST(0.970772140728950) },

612 { 
FRAC_CONST
(0.216106797076220), FRAC_CONST(0.976369731330021) },

613 { 
FRAC_CONST
(0.192080397049892), FRAC_CONST(0.981379193313755) },

614 { 
FRAC_CONST
(0.167938294974731), FRAC_CONST(0.985797509167567) },

615 { 
FRAC_CONST
(0.143695033150295), FRAC_CONST(0.989622017463201) },

616 { 
FRAC_CONST
(0.119365214810991), FRAC_CONST(0.992850414459865) },

617 { 
FRAC_CONST
(0.094963495329639), FRAC_CONST(0.995480755491927) },

618 { 
FRAC_CONST
(0.070504573389614), FRAC_CONST(0.997511456140303) },

619 { 
FRAC_CONST
(0.046003182130915), FRAC_CONST(0.998941293186857) },

620 { 
FRAC_CONST
(0.021474080275470), FRAC_CONST(0.999769405351215) }

623 #ifde‡
LD_DEC


625 
ALIGN
 c⁄° 
com∂ex_t
 
	gmd˘_èb_1024
[] =

627 { 
FRAC_CONST
(0.999999705862882), FRAC_CONST(0.000766990318743) },

628 { 
FRAC_CONST
(0.999976174986898), FRAC_CONST(0.006902858724730) },

629 { 
FRAC_CONST
(0.999914995573113), FRAC_CONST(0.013038467241987) },

630 { 
FRAC_CONST
(0.999816169924900), FRAC_CONST(0.019173584868323) },

631 { 
FRAC_CONST
(0.999679701762988), FRAC_CONST(0.025307980620025) },

632 { 
FRAC_CONST
(0.999505596225325), FRAC_CONST(0.031441423540560) },

633 { 
FRAC_CONST
(0.999293859866888), FRAC_CONST(0.037573682709270) },

634 { 
FRAC_CONST
(0.999044500659429), FRAC_CONST(0.043704527250063) },

635 { 
FRAC_CONST
(0.998757527991183), FRAC_CONST(0.049833726340107) },

636 { 
FRAC_CONST
(0.998432952666508), FRAC_CONST(0.055961049218521) },

637 { 
FRAC_CONST
(0.998070786905482), FRAC_CONST(0.062086265195060) },

638 { 
FRAC_CONST
(0.997671044343441), FRAC_CONST(0.068209143658806) },

639 { 
FRAC_CONST
(0.997233740030466), FRAC_CONST(0.074329454086846) },

640 { 
FRAC_CONST
(0.996758890430818), FRAC_CONST(0.080446966052950) },

641 { 
FRAC_CONST
(0.996246513422316), FRAC_CONST(0.086561449236251) },

642 { 
FRAC_CONST
(0.995696628295664), FRAC_CONST(0.092672673429913) },

643 { 
FRAC_CONST
(0.995109255753726), FRAC_CONST(0.098780408549800) },

644 { 
FRAC_CONST
(0.994484417910748), FRAC_CONST(0.104884424643135) },

645 { 
FRAC_CONST
(0.993822138291520), FRAC_CONST(0.110984491897163) },

646 { 
FRAC_CONST
(0.993122441830496), FRAC_CONST(0.117080380647801) },

647 { 
FRAC_CONST
(0.992385354870852), FRAC_CONST(0.123171861388280) },

648 { 
FRAC_CONST
(0.991610905163495), FRAC_CONST(0.129258704777796) },

649 { 
FRAC_CONST
(0.990799121866020), FRAC_CONST(0.135340681650134) },

650 { 
FRAC_CONST
(0.989950035541609), FRAC_CONST(0.141417563022303) },

651 { 
FRAC_CONST
(0.989063678157882), FRAC_CONST(0.147489120103154) },

652 { 
FRAC_CONST
(0.988140083085693), FRAC_CONST(0.153555124301993) },

653 { 
FRAC_CONST
(0.987179285097874), FRAC_CONST(0.159615347237193) },

654 { 
FRAC_CONST
(0.986181320367928), FRAC_CONST(0.165669560744784) },

655 { 
FRAC_CONST
(0.985146226468662), FRAC_CONST(0.171717536887050) },

656 { 
FRAC_CONST
(0.984074042370776), FRAC_CONST(0.177759047961107) },

657 { 
FRAC_CONST
(0.982964808441396), FRAC_CONST(0.183793866507478) },

658 { 
FRAC_CONST
(0.981818566442553), FRAC_CONST(0.189821765318656) },

659 { 
FRAC_CONST
(0.980635359529608), FRAC_CONST(0.195842517447658) },

660 { 
FRAC_CONST
(0.979415232249635), FRAC_CONST(0.201855896216568) },

661 { 
FRAC_CONST
(0.978158230539735), FRAC_CONST(0.207861675225075) },

662 { 
FRAC_CONST
(0.976864401725313), FRAC_CONST(0.213859628358994) },

663 { 
FRAC_CONST
(0.975533794518291), FRAC_CONST(0.219849529798779) },

664 { 
FRAC_CONST
(0.974166459015280), FRAC_CONST(0.225831154028026) },

665 { 
FRAC_CONST
(0.972762446695689), FRAC_CONST(0.231804275841965) },

666 { 
FRAC_CONST
(0.971321810419786), FRAC_CONST(0.237768670355934) },

667 { 
FRAC_CONST
(0.969844604426715), FRAC_CONST(0.243724113013852) },

668 { 
FRAC_CONST
(0.968330884332445), FRAC_CONST(0.249670379596669) },

669 { 
FRAC_CONST
(0.966780707127683), FRAC_CONST(0.255607246230807) },

670 { 
FRAC_CONST
(0.965194131175725), FRAC_CONST(0.261534489396596) },

671 { 
FRAC_CONST
(0.963571216210257), FRAC_CONST(0.267451885936678) },

672 { 
FRAC_CONST
(0.961912023333112), FRAC_CONST(0.273359213064419) },

673 { 
FRAC_CONST
(0.960216615011963), FRAC_CONST(0.279256248372291) },

674 { 
FRAC_CONST
(0.958485055077976), FRAC_CONST(0.285142769840249) },

675 { 
FRAC_CONST
(0.956717408723403), FRAC_CONST(0.291018555844085) },

676 { 
FRAC_CONST
(0.954913742499131), FRAC_CONST(0.296883385163778) },

677 { 
FRAC_CONST
(0.953074124312172), FRAC_CONST(0.302737036991819) },

678 { 
FRAC_CONST
(0.951198623423113), FRAC_CONST(0.308579290941525) },

679 { 
FRAC_CONST
(0.949287310443502), FRAC_CONST(0.314409927055337) },

680 { 
FRAC_CONST
(0.947340257333192), FRAC_CONST(0.320228725813100) },

681 { 
FRAC_CONST
(0.945357537397632), FRAC_CONST(0.326035468140330) },

682 { 
FRAC_CONST
(0.943339225285108), FRAC_CONST(0.331829935416461) },

683 { 
FRAC_CONST
(0.941285396983929), FRAC_CONST(0.337611909483075) },

684 { 
FRAC_CONST
(0.939196129819570), FRAC_CONST(0.343381172652115) },

685 { 
FRAC_CONST
(0.937071502451759), FRAC_CONST(0.349137507714085) },

686 { 
FRAC_CONST
(0.934911594871516), FRAC_CONST(0.354880697946223) },

687 { 
FRAC_CONST
(0.932716488398140), FRAC_CONST(0.360610527120662) },

688 { 
FRAC_CONST
(0.930486265676150), FRAC_CONST(0.366326779512574) },

689 { 
FRAC_CONST
(0.928221010672169), FRAC_CONST(0.372029239908285) },

690 { 
FRAC_CONST
(0.925920808671770), FRAC_CONST(0.377717693613386) },

691 { 
FRAC_CONST
(0.923585746276257), FRAC_CONST(0.383391926460809) },

692 { 
FRAC_CONST
(0.921215911399409), FRAC_CONST(0.389051724818894) },

693 { 
FRAC_CONST
(0.918811393264170), FRAC_CONST(0.394696875599434) },

694 { 
FRAC_CONST
(0.916372282399289), FRAC_CONST(0.400327166265690) },

695 { 
FRAC_CONST
(0.913898670635912), FRAC_CONST(0.405942384840403) },

696 { 
FRAC_CONST
(0.911390651104122), FRAC_CONST(0.411542319913765) },

697 { 
FRAC_CONST
(0.908848318229439), FRAC_CONST(0.417126760651388) },

698 { 
FRAC_CONST
(0.906271767729258), FRAC_CONST(0.422695496802233) },

699 { 
FRAC_CONST
(0.903661096609248), FRAC_CONST(0.428248318706532) },

700 { 
FRAC_CONST
(0.901016403159702), FRAC_CONST(0.433785017303679) },

701 { 
FRAC_CONST
(0.898337786951834), FRAC_CONST(0.439305384140100) },

702 { 
FRAC_CONST
(0.895625348834030), FRAC_CONST(0.444809211377105) },

703 { 
FRAC_CONST
(0.892879190928052), FRAC_CONST(0.450296291798709) },

704 { 
FRAC_CONST
(0.890099416625192), FRAC_CONST(0.455766418819435) },

705 { 
FRAC_CONST
(0.887286130582383), FRAC_CONST(0.461219386492092) },

706 { 
FRAC_CONST
(0.884439438718254), FRAC_CONST(0.466654989515531) },

707 { 
FRAC_CONST
(0.881559448209144), FRAC_CONST(0.472073023242369) },

708 { 
FRAC_CONST
(0.878646267485068), FRAC_CONST(0.477473283686698) },

709 { 
FRAC_CONST
(0.875700006225635), FRAC_CONST(0.482855567531766) },

710 { 
FRAC_CONST
(0.872720775355914), FRAC_CONST(0.488219672137627) },

711 { 
FRAC_CONST
(0.869708687042266), FRAC_CONST(0.493565395548775) },

712 { 
FRAC_CONST
(0.866663854688111), FRAC_CONST(0.498892536501745) },

713 { 
FRAC_CONST
(0.863586392929668), FRAC_CONST(0.504200894432690) },

714 { 
FRAC_CONST
(0.860476417631632), FRAC_CONST(0.509490269484936) },

715 { 
FRAC_CONST
(0.857334045882816), FRAC_CONST(0.514760462516501) },

716 { 
FRAC_CONST
(0.854159395991739), FRAC_CONST(0.520011275107596) },

717 { 
FRAC_CONST
(0.850952587482176), FRAC_CONST(0.525242509568095) },

718 { 
FRAC_CONST
(0.847713741088654), FRAC_CONST(0.530453968944976) },

719 { 
FRAC_CONST
(0.844442978751911), FRAC_CONST(0.535645457029741) },

720 { 
FRAC_CONST
(0.841140423614298), FRAC_CONST(0.540816778365797) },

721 { 
FRAC_CONST
(0.837806200015151), FRAC_CONST(0.545967738255818) },

722 { 
FRAC_CONST
(0.834440433486103), FRAC_CONST(0.551098142769075) },

723 { 
FRAC_CONST
(0.831043250746362), FRAC_CONST(0.556207798748740) },

724 { 
FRAC_CONST
(0.827614779697938), FRAC_CONST(0.561296513819151) },

725 { 
FRAC_CONST
(0.824155149420829), FRAC_CONST(0.566364096393064) },

726 { 
FRAC_CONST
(0.820664490168157), FRAC_CONST(0.571410355678857) },

727 { 
FRAC_CONST
(0.817142933361273), FRAC_CONST(0.576435101687722) },

728 { 
FRAC_CONST
(0.813590611584799), FRAC_CONST(0.581438145240810) },

729 { 
FRAC_CONST
(0.810007658581641), FRAC_CONST(0.586419297976361) },

730 { 
FRAC_CONST
(0.806394209247956), FRAC_CONST(0.591378372356788) },

731 { 
FRAC_CONST
(0.802750399628069), FRAC_CONST(0.596315181675744) },

732 { 
FRAC_CONST
(0.799076366909352), FRAC_CONST(0.601229540065149) },

733 { 
FRAC_CONST
(0.795372249417061), FRAC_CONST(0.606121262502186) },

734 { 
FRAC_CONST
(0.791638186609126), FRAC_CONST(0.610990164816272) },

735 { 
FRAC_CONST
(0.787874319070900), FRAC_CONST(0.615836063695985) },

736 { 
FRAC_CONST
(0.784080788509870), FRAC_CONST(0.620658776695972) },

737 { 
FRAC_CONST
(0.780257737750317), FRAC_CONST(0.625458122243814) },

738 { 
FRAC_CONST
(0.776405310727940), FRAC_CONST(0.630233919646864) },

739 { 
FRAC_CONST
(0.772523652484441), FRAC_CONST(0.634985989099049) },

740 { 
FRAC_CONST
(0.768612909162058), FRAC_CONST(0.639714151687640) },

741 { 
FRAC_CONST
(0.764673227998067), FRAC_CONST(0.644418229399988) },

742 { 
FRAC_CONST
(0.760704757319237), FRAC_CONST(0.649098045130226) },

743 { 
FRAC_CONST
(0.756707646536246), FRAC_CONST(0.653753422685936) },

744 { 
FRAC_CONST
(0.752682046138055), FRAC_CONST(0.658384186794785) },

745 { 
FRAC_CONST
(0.748628107686245), FRAC_CONST(0.662990163111121) },

746 { 
FRAC_CONST
(0.744545983809307), FRAC_CONST(0.667571178222540) },

747 { 
FRAC_CONST
(0.740435828196898), FRAC_CONST(0.672127059656412) },

748 { 
FRAC_CONST
(0.736297795594053), FRAC_CONST(0.676657635886375) },

749 { 
FRAC_CONST
(0.732132041795361), FRAC_CONST(0.681162736338795) },

750 { 
FRAC_CONST
(0.727938723639099), FRAC_CONST(0.685642191399187) },

751 { 
FRAC_CONST
(0.723717999001324), FRAC_CONST(0.690095832418600) },

752 { 
FRAC_CONST
(0.719470026789933), FRAC_CONST(0.694523491719966) },

753 { 
FRAC_CONST
(0.715194966938680), FRAC_CONST(0.698925002604414) },

754 { 
FRAC_CONST
(0.710892980401152), FRAC_CONST(0.703300199357549) },

755 { 
FRAC_CONST
(0.706564229144710), FRAC_CONST(0.707648917255684) },

756 { 
FRAC_CONST
(0.702208876144392), FRAC_CONST(0.711970992572050) },

757 { 
FRAC_CONST
(0.697827085376777), FRAC_CONST(0.716266262582953) },

758 { 
FRAC_CONST
(0.693419021813812), FRAC_CONST(0.720534565573905) },

759 { 
FRAC_CONST
(0.688984851416597), FRAC_CONST(0.724775740845711) },

760 { 
FRAC_CONST
(0.684524741129142), FRAC_CONST(0.728989628720519) },

761 { 
FRAC_CONST
(0.680038858872079), FRAC_CONST(0.733176070547833) },

762 { 
FRAC_CONST
(0.675527373536339), FRAC_CONST(0.737334908710483) },

763 { 
FRAC_CONST
(0.670990454976794), FRAC_CONST(0.741465986630563) },

764 { 
FRAC_CONST
(0.666428274005865), FRAC_CONST(0.745569148775325) },

765 { 
FRAC_CONST
(0.661841002387087), FRAC_CONST(0.749644240663033) },

766 { 
FRAC_CONST
(0.657228812828643), FRAC_CONST(0.753691108868781) },

767 { 
FRAC_CONST
(0.652591878976863), FRAC_CONST(0.757709601030268) },

768 { 
FRAC_CONST
(0.647930375409685), FRAC_CONST(0.761699565853535) },

769 { 
FRAC_CONST
(0.643244477630086), FRAC_CONST(0.765660853118662) },

770 { 
FRAC_CONST
(0.638534362059467), FRAC_CONST(0.769593313685423) },

771 { 
FRAC_CONST
(0.633800206031017), FRAC_CONST(0.773496799498899) },

772 { 
FRAC_CONST
(0.629042187783036), FRAC_CONST(0.777371163595056) },

773 { 
FRAC_CONST
(0.624260486452221), FRAC_CONST(0.781216260106276) },

774 { 
FRAC_CONST
(0.619455282066924), FRAC_CONST(0.785031944266848) },

775 { 
FRAC_CONST
(0.614626755540375), FRAC_CONST(0.788818072418420) },

776 { 
FRAC_CONST
(0.609775088663868), FRAC_CONST(0.792574502015408) },

777 { 
FRAC_CONST
(0.604900464099920), FRAC_CONST(0.796301091630359) },

778 { 
FRAC_CONST
(0.600003065375389), FRAC_CONST(0.799997700959282) },

779 { 
FRAC_CONST
(0.595083076874570), FRAC_CONST(0.803664190826924) },

780 { 
FRAC_CONST
(0.590140683832249), FRAC_CONST(0.807300423192014) },

781 { 
FRAC_CONST
(0.585176072326730), FRAC_CONST(0.810906261152460) },

782 { 
FRAC_CONST
(0.580189429272832), FRAC_CONST(0.814481568950499) },

783 { 
FRAC_CONST
(0.575180942414845), FRAC_CONST(0.818026211977813) },

784 { 
FRAC_CONST
(0.570150800319470), FRAC_CONST(0.821540056780598) },

785 { 
FRAC_CONST
(0.565099192368714), FRAC_CONST(0.825022971064580) },

786 { 
FRAC_CONST
(0.560026308752760), FRAC_CONST(0.828474823700007) },

787 { 
FRAC_CONST
(0.554932340462810), FRAC_CONST(0.831895484726578) },

788 { 
FRAC_CONST
(0.549817479283891), FRAC_CONST(0.835284825358337) },

789 { 
FRAC_CONST
(0.544681917787635), FRAC_CONST(0.838642717988527) },

790 { 
FRAC_CONST
(0.539525849325029), FRAC_CONST(0.841969036194388) },

791 { 
FRAC_CONST
(0.534349468019138), FRAC_CONST(0.845263654741918) },

792 { 
FRAC_CONST
(0.529152968757791), FRAC_CONST(0.848526449590593) },

793 { 
FRAC_CONST
(0.523936547186249), FRAC_CONST(0.851757297898029) },

794 { 
FRAC_CONST
(0.518700399699835), FRAC_CONST(0.854956078024615) },

795 { 
FRAC_CONST
(0.513444723436544), FRAC_CONST(0.858122669538086) },

796 { 
FRAC_CONST
(0.508169716269615), FRAC_CONST(0.861256953218062) },

797 { 
FRAC_CONST
(0.502875576800087), FRAC_CONST(0.864358811060534) },

798 { 
FRAC_CONST
(0.497562504349319), FRAC_CONST(0.867428126282307) },

799 { 
FRAC_CONST
(0.492230698951486), FRAC_CONST(0.870464783325398) },

800 { 
FRAC_CONST
(0.486880361346047), FRAC_CONST(0.873468667861385) },

801 { 
FRAC_CONST
(0.481511692970190), FRAC_CONST(0.876439666795714) },

802 { 
FRAC_CONST
(0.476124895951244), FRAC_CONST(0.879377668271953) },

803 { 
FRAC_CONST
(0.470720173099072), FRAC_CONST(0.882282561676009) },

804 { 
FRAC_CONST
(0.465297727898435), FRAC_CONST(0.885154237640285) },

805 { 
FRAC_CONST
(0.459857764501330), FRAC_CONST(0.887992588047806) },

806 { 
FRAC_CONST
(0.454400487719304), FRAC_CONST(0.890797506036281) },

807 { 
FRAC_CONST
(0.448926103015743), FRAC_CONST(0.893568886002136) },

808 { 
FRAC_CONST
(0.443434816498138), FRAC_CONST(0.896306623604480) },

809 { 
FRAC_CONST
(0.437926834910323), FRAC_CONST(0.899010615769039) },

810 { 
FRAC_CONST
(0.432402365624690), FRAC_CONST(0.901680760692038) },

811 { 
FRAC_CONST
(0.426861616634386), FRAC_CONST(0.904316957844028) },

812 { 
FRAC_CONST
(0.421304796545480), FRAC_CONST(0.906919107973678) },

813 { 
FRAC_CONST
(0.415732114569105), FRAC_CONST(0.909487113111505) },

814 { 
FRAC_CONST
(0.410143780513590), FRAC_CONST(0.912020876573568) },

815 { 
FRAC_CONST
(0.404540004776553), FRAC_CONST(0.914520302965104) },

816 { 
FRAC_CONST
(0.398920998336983), FRAC_CONST(0.916985298184123) },

817 { 
FRAC_CONST
(0.393286972747297), FRAC_CONST(0.919415769424947) },

818 { 
FRAC_CONST
(0.387638140125373), FRAC_CONST(0.921811625181708) },

819 { 
FRAC_CONST
(0.381974713146567), FRAC_CONST(0.924172775251791) },

820 { 
FRAC_CONST
(0.376296905035705), FRAC_CONST(0.926499130739231) },

821 { 
FRAC_CONST
(0.370604929559052), FRAC_CONST(0.928790604058057) },

822 { 
FRAC_CONST
(0.364899001016267), FRAC_CONST(0.931047108935595) },

823 { 
FRAC_CONST
(0.359179334232337), FRAC_CONST(0.933268560415712) },

824 { 
FRAC_CONST
(0.353446144549481), FRAC_CONST(0.935454874862015) },

825 { 
FRAC_CONST
(0.347699647819051), FRAC_CONST(0.937605969961000) },

826 { 
FRAC_CONST
(0.341940060393402), FRAC_CONST(0.939721764725153) },

827 { 
FRAC_CONST
(0.336167599117745), FRAC_CONST(0.941802179495998) },

828 { 
FRAC_CONST
(0.330382481321983), FRAC_CONST(0.943847135947093) },

829 { 
FRAC_CONST
(0.324584924812532), FRAC_CONST(0.945856557086984) },

830 { 
FRAC_CONST
(0.318775147864118), FRAC_CONST(0.947830367262101) },

831 { 
FRAC_CONST
(0.312953369211560), FRAC_CONST(0.949768492159607) },

832 { 
FRAC_CONST
(0.307119808041533), FRAC_CONST(0.951670858810194) },

833 { 
FRAC_CONST
(0.301274683984318), FRAC_CONST(0.953537395590833) },

834 { 
FRAC_CONST
(0.295418217105532), FRAC_CONST(0.955368032227470) },

835 { 
FRAC_CONST
(0.289550627897843), FRAC_CONST(0.957162699797670) },

836 { 
FRAC_CONST
(0.283672137272669), FRAC_CONST(0.958921330733213) },

837 { 
FRAC_CONST
(0.277782966551858), FRAC_CONST(0.960643858822638) },

838 { 
FRAC_CONST
(0.271883337459360), FRAC_CONST(0.962330219213737) },

839 { 
FRAC_CONST
(0.265973472112876), FRAC_CONST(0.963980348415994) },

840 { 
FRAC_CONST
(0.260053593015495), FRAC_CONST(0.965594184302977) },

841 { 
FRAC_CONST
(0.254123923047321), FRAC_CONST(0.967171666114677) },

842 { 
FRAC_CONST
(0.248184685457075), FRAC_CONST(0.968712734459795) },

843 { 
FRAC_CONST
(0.242236103853696), FRAC_CONST(0.970217331317979) },

844 { 
FRAC_CONST
(0.236278402197920), FRAC_CONST(0.971685400042009) },

845 { 
FRAC_CONST
(0.230311804793846), FRAC_CONST(0.973116885359925) },

846 { 
FRAC_CONST
(0.224336536280494), FRAC_CONST(0.974511733377116) },

847 { 
FRAC_CONST
(0.218352821623346), FRAC_CONST(0.975869891578341) },

848 { 
FRAC_CONST
(0.212360886105879), FRAC_CONST(0.977191308829712) },

849 { 
FRAC_CONST
(0.206360955321076), FRAC_CONST(0.978475935380617) },

850 { 
FRAC_CONST
(0.200353255162940), FRAC_CONST(0.979723722865591) },

851 { 
FRAC_CONST
(0.194338011817989), FRAC_CONST(0.980934624306142) },

852 { 
FRAC_CONST
(0.188315451756732), FRAC_CONST(0.982108594112514) },

853 { 
FRAC_CONST
(0.182285801725153), FRAC_CONST(0.983245588085407) },

854 { 
FRAC_CONST
(0.176249288736168), FRAC_CONST(0.984345563417642) },

855 { 
FRAC_CONST
(0.170206140061078), FRAC_CONST(0.985408478695768) },

856 { 
FRAC_CONST
(0.164156583221016), FRAC_CONST(0.986434293901627) },

857 { 
FRAC_CONST
(0.158100845978377), FRAC_CONST(0.987422970413855) },

858 { 
FRAC_CONST
(0.152039156328246), FRAC_CONST(0.988374471009341) },

859 { 
FRAC_CONST
(0.145971742489812), FRAC_CONST(0.989288759864625) },

860 { 
FRAC_CONST
(0.139898832897777), FRAC_CONST(0.990165802557248) },

861 { 
FRAC_CONST
(0.133820656193755), FRAC_CONST(0.991005566067049) },

862 { 
FRAC_CONST
(0.127737441217662), FRAC_CONST(0.991808018777406) },

863 { 
FRAC_CONST
(0.121649416999106), FRAC_CONST(0.992573130476429) },

864 { 
FRAC_CONST
(0.115556812748755), FRAC_CONST(0.993300872358093) },

865 { 
FRAC_CONST
(0.109459857849718), FRAC_CONST(0.993991217023329) },

866 { 
FRAC_CONST
(0.103358781848900), FRAC_CONST(0.994644138481051) },

867 { 
FRAC_CONST
(0.097253814448363), FRAC_CONST(0.995259612149133) },

868 { 
FRAC_CONST
(0.091145185496681), FRAC_CONST(0.995837614855342) },

869 { 
FRAC_CONST
(0.085033124980280), FRAC_CONST(0.996378124838200) },

870 { 
FRAC_CONST
(0.078917863014785), FRAC_CONST(0.996881121747814) },

871 { 
FRAC_CONST
(0.072799629836352), FRAC_CONST(0.997346586646633) },

872 { 
FRAC_CONST
(0.066678655793002), FRAC_CONST(0.997774502010168) },

873 { 
FRAC_CONST
(0.060555171335948), FRAC_CONST(0.998164851727646) },

874 { 
FRAC_CONST
(0.054429407010919), FRAC_CONST(0.998517621102622) },

875 { 
FRAC_CONST
(0.048301593449480), FRAC_CONST(0.998832796853528) },

876 { 
FRAC_CONST
(0.042171961360348), FRAC_CONST(0.999110367114175) },

877 { 
FRAC_CONST
(0.036040741520706), FRAC_CONST(0.999350321434199) },

878 { 
FRAC_CONST
(0.029908164767517), FRAC_CONST(0.999552650779457) },

879 { 
FRAC_CONST
(0.023774461988828), FRAC_CONST(0.999717347532362) },

880 { 
FRAC_CONST
(0.017639864115082), FRAC_CONST(0.999844405492175) },

881 { 
FRAC_CONST
(0.011504602110423), FRAC_CONST(0.999933819875236) },

882 { 
FRAC_CONST
(0.005368906963996), FRAC_CONST(0.999985587315143) }

886 #ifde‡
ALLOW_SMALL_FRAMELENGTH


888 
ALIGN
 c⁄° 
com∂ex_t
 
	gmd˘_èb_1920
[] =

890 { 
FRAC_CONST
(0.999999916334328), FRAC_CONST(0.000409061532028) },

891 { 
FRAC_CONST
(0.999993223088129), FRAC_CONST(0.003681545574400) },

892 { 
FRAC_CONST
(0.999975820717897), FRAC_CONST(0.006953990190376) },

893 { 
FRAC_CONST
(0.999947709409999), FRAC_CONST(0.010226360334704) },

894 { 
FRAC_CONST
(0.999908889465485), FRAC_CONST(0.013498620962929) },

895 { 
FRAC_CONST
(0.999859361300084), FRAC_CONST(0.016770737031768) },

896 { 
FRAC_CONST
(0.999799125444203), FRAC_CONST(0.020042673499487) },

897 { 
FRAC_CONST
(0.999728182542920), FRAC_CONST(0.023314395326274) },

898 { 
FRAC_CONST
(0.999646533355977), FRAC_CONST(0.026585867474619) },

899 { 
FRAC_CONST
(0.999554178757770), FRAC_CONST(0.029857054909681) },

900 { 
FRAC_CONST
(0.999451119737344), FRAC_CONST(0.033127922599673) },

901 { 
FRAC_CONST
(0.999337357398377), FRAC_CONST(0.036398435516228) },

902 { 
FRAC_CONST
(0.999212892959173), FRAC_CONST(0.039668558634781) },

903 { 
FRAC_CONST
(0.999077727752645), FRAC_CONST(0.042938256934941) },

904 { 
FRAC_CONST
(0.998931863226306), FRAC_CONST(0.046207495400865) },

905 { 
FRAC_CONST
(0.998775300942246), FRAC_CONST(0.049476239021636) },

906 { 
FRAC_CONST
(0.998608042577122), FRAC_CONST(0.052744452791636) },

907 { 
FRAC_CONST
(0.998430089922136), FRAC_CONST(0.056012101710921) },

908 { 
FRAC_CONST
(0.998241444883019), FRAC_CONST(0.059279150785597) },

909 { 
FRAC_CONST
(0.998042109480008), FRAC_CONST(0.062545565028192) },

910 { 
FRAC_CONST
(0.997832085847824), FRAC_CONST(0.065811309458034) },

911 { 
FRAC_CONST
(0.997611376235651), FRAC_CONST(0.069076349101624) },

912 { 
FRAC_CONST
(0.997379983007114), FRAC_CONST(0.072340648993011) },

913 { 
FRAC_CONST
(0.997137908640245), FRAC_CONST(0.075604174174166) },

914 { 
FRAC_CONST
(0.996885155727469), FRAC_CONST(0.078866889695354) },

915 { 
FRAC_CONST
(0.996621726975566), FRAC_CONST(0.082128760615515) },

916 { 
FRAC_CONST
(0.996347625205645), FRAC_CONST(0.085389752002632) },

917 { 
FRAC_CONST
(0.996062853353117), FRAC_CONST(0.088649828934106) },

918 { 
FRAC_CONST
(0.995767414467660), FRAC_CONST(0.091908956497133) },

919 { 
FRAC_CONST
(0.995461311713186), FRAC_CONST(0.095167099789075) },

920 { 
FRAC_CONST
(0.995144548367810), FRAC_CONST(0.098424223917834) },

921 { 
FRAC_CONST
(0.994817127823813), FRAC_CONST(0.101680294002229) },

922 { 
FRAC_CONST
(0.994479053587606), FRAC_CONST(0.104935275172364) },

923 { 
FRAC_CONST
(0.994130329279692), FRAC_CONST(0.108189132570007) },

924 { 
FRAC_CONST
(0.993770958634630), FRAC_CONST(0.111441831348957) },

925 { 
FRAC_CONST
(0.993400945500988), FRAC_CONST(0.114693336675426) },

926 { 
FRAC_CONST
(0.993020293841312), FRAC_CONST(0.117943613728403) },

927 { 
FRAC_CONST
(0.992629007732074), FRAC_CONST(0.121192627700032) },

928 { 
FRAC_CONST
(0.992227091363634), FRAC_CONST(0.124440343795983) },

929 { 
FRAC_CONST
(0.991814549040194), FRAC_CONST(0.127686727235827) },

930 { 
FRAC_CONST
(0.991391385179751), FRAC_CONST(0.130931743253405) },

931 { 
FRAC_CONST
(0.990957604314048), FRAC_CONST(0.134175357097202) },

932 { 
FRAC_CONST
(0.990513211088533), FRAC_CONST(0.137417534030720) },

933 { 
FRAC_CONST
(0.990058210262297), FRAC_CONST(0.140658239332849) },

934 { 
FRAC_CONST
(0.989592606708036), FRAC_CONST(0.143897438298239) },

935 { 
FRAC_CONST
(0.989116405411988), FRAC_CONST(0.147135096237670) },

936 { 
FRAC_CONST
(0.988629611473887), FRAC_CONST(0.150371178478428) },

937 { 
FRAC_CONST
(0.988132230106905), FRAC_CONST(0.153605650364672) },

938 { 
FRAC_CONST
(0.987624266637598), FRAC_CONST(0.156838477257806) },

939 { 
FRAC_CONST
(0.987105726505845), FRAC_CONST(0.160069624536852) },

940 { 
FRAC_CONST
(0.986576615264794), FRAC_CONST(0.163299057598817) },

941 { 
FRAC_CONST
(0.986036938580803), FRAC_CONST(0.166526741859069) },

942 { 
FRAC_CONST
(0.985486702233375), FRAC_CONST(0.169752642751702) },

943 { 
FRAC_CONST
(0.984925912115099), FRAC_CONST(0.172976725729910) },

944 { 
FRAC_CONST
(0.984354574231587), FRAC_CONST(0.176198956266353) },

945 { 
FRAC_CONST
(0.983772694701407), FRAC_CONST(0.179419299853531) },

946 { 
FRAC_CONST
(0.983180279756024), FRAC_CONST(0.182637722004152) },

947 { 
FRAC_CONST
(0.982577335739725), FRAC_CONST(0.185854188251500) },

948 { 
FRAC_CONST
(0.981963869109555), FRAC_CONST(0.189068664149806) },

949 { 
FRAC_CONST
(0.981339886435250), FRAC_CONST(0.192281115274616) },

950 { 
FRAC_CONST
(0.980705394399163), FRAC_CONST(0.195491507223158) },

951 { 
FRAC_CONST
(0.980060399796194), FRAC_CONST(0.198699805614714) },

952 { 
FRAC_CONST
(0.979404909533716), FRAC_CONST(0.201905976090986) },

953 { 
FRAC_CONST
(0.978738930631504), FRAC_CONST(0.205109984316464) },

954 { 
FRAC_CONST
(0.978062470221657), FRAC_CONST(0.208311795978794) },

955 { 
FRAC_CONST
(0.977375535548522), FRAC_CONST(0.211511376789145) },

956 { 
FRAC_CONST
(0.976678133968618), FRAC_CONST(0.214708692482577) },

957 { 
FRAC_CONST
(0.975970272950556), FRAC_CONST(0.217903708818409) },

958 { 
FRAC_CONST
(0.975251960074958), FRAC_CONST(0.221096391580581) },

959 { 
FRAC_CONST
(0.974523203034377), FRAC_CONST(0.224286706578026) },

960 { 
FRAC_CONST
(0.973784009633218), FRAC_CONST(0.227474619645035) },

961 { 
FRAC_CONST
(0.973034387787646), FRAC_CONST(0.230660096641619) },

962 { 
FRAC_CONST
(0.972274345525510), FRAC_CONST(0.233843103453878) },

963 { 
FRAC_CONST
(0.971503890986252), FRAC_CONST(0.237023605994367) },

964 { 
FRAC_CONST
(0.970723032420820), FRAC_CONST(0.240201570202459) },

965 { 
FRAC_CONST
(0.969931778191584), FRAC_CONST(0.243376962044711) },

966 { 
FRAC_CONST
(0.969130136772239), FRAC_CONST(0.246549747515226) },

967 { 
FRAC_CONST
(0.968318116747721), FRAC_CONST(0.249719892636022) },

968 { 
FRAC_CONST
(0.967495726814114), FRAC_CONST(0.252887363457390) },

969 { 
FRAC_CONST
(0.966662975778551), FRAC_CONST(0.256052126058264) },

970 { 
FRAC_CONST
(0.965819872559127), FRAC_CONST(0.259214146546579) },

971 { 
FRAC_CONST
(0.964966426184802), FRAC_CONST(0.262373391059634) },

972 { 
FRAC_CONST
(0.964102645795299), FRAC_CONST(0.265529825764461) },

973 { 
FRAC_CONST
(0.963228540641012), FRAC_CONST(0.268683416858178) },

974 { 
FRAC_CONST
(0.962344120082907), FRAC_CONST(0.271834130568359) },

975 { 
FRAC_CONST
(0.961449393592416), FRAC_CONST(0.274981933153391) },

976 { 
FRAC_CONST
(0.960544370751341), FRAC_CONST(0.278126790902837) },

977 { 
FRAC_CONST
(0.959629061251750), FRAC_CONST(0.281268670137799) },

978 { 
FRAC_CONST
(0.958703474895872), FRAC_CONST(0.284407537211272) },

979 { 
FRAC_CONST
(0.957767621595993), FRAC_CONST(0.287543358508512) },

980 { 
FRAC_CONST
(0.956821511374351), FRAC_CONST(0.290676100447394) },

981 { 
FRAC_CONST
(0.955865154363025), FRAC_CONST(0.293805729478766) },

982 { 
FRAC_CONST
(0.954898560803832), FRAC_CONST(0.296932212086818) },

983 { 
FRAC_CONST
(0.953921741048211), FRAC_CONST(0.300055514789431) },

984 { 
FRAC_CONST
(0.952934705557117), FRAC_CONST(0.303175604138543) },

985 { 
FRAC_CONST
(0.951937464900908), FRAC_CONST(0.306292446720504) },

986 { 
FRAC_CONST
(0.950930029759229), FRAC_CONST(0.309406009156434) },

987 { 
FRAC_CONST
(0.949912410920903), FRAC_CONST(0.312516258102580) },

988 { 
FRAC_CONST
(0.948884619283808), FRAC_CONST(0.315623160250676) },

989 { 
FRAC_CONST
(0.947846665854767), FRAC_CONST(0.318726682328294) },

990 { 
FRAC_CONST
(0.946798561749429), FRAC_CONST(0.321826791099207) },

991 { 
FRAC_CONST
(0.945740318192145), FRAC_CONST(0.324923453363742) },

992 { 
FRAC_CONST
(0.944671946515855), FRAC_CONST(0.328016635959131) },

993 { 
FRAC_CONST
(0.943593458161960), FRAC_CONST(0.331106305759876) },

994 { 
FRAC_CONST
(0.942504864680205), FRAC_CONST(0.334192429678095) },

995 { 
FRAC_CONST
(0.941406177728551), FRAC_CONST(0.337274974663880) },

996 { 
FRAC_CONST
(0.940297409073052), FRAC_CONST(0.340353907705650) },

997 { 
FRAC_CONST
(0.939178570587730), FRAC_CONST(0.343429195830507) },

998 { 
FRAC_CONST
(0.938049674254446), FRAC_CONST(0.346500806104585) },

999 { 
FRAC_CONST
(0.936910732162774), FRAC_CONST(0.349568705633406) },

1000 { 
FRAC_CONST
(0.935761756509868), FRAC_CONST(0.352632861562230) },

1001 { 
FRAC_CONST
(0.934602759600334), FRAC_CONST(0.355693241076410) },

1002 { 
FRAC_CONST
(0.933433753846097), FRAC_CONST(0.358749811401739) },

1003 { 
FRAC_CONST
(0.932254751766271), FRAC_CONST(0.361802539804806) },

1004 { 
FRAC_CONST
(0.931065765987021), FRAC_CONST(0.364851393593340) },

1005 { 
FRAC_CONST
(0.929866809241428), FRAC_CONST(0.367896340116568) },

1006 { 
FRAC_CONST
(0.928657894369357), FRAC_CONST(0.370937346765559) },

1007 { 
FRAC_CONST
(0.927439034317314), FRAC_CONST(0.373974380973575) },

1008 { 
FRAC_CONST
(0.926210242138311), FRAC_CONST(0.377007410216418) },

1009 { 
FRAC_CONST
(0.924971530991726), FRAC_CONST(0.380036402012783) },

1010 { 
FRAC_CONST
(0.923722914143160), FRAC_CONST(0.383061323924602) },

1011 { 
FRAC_CONST
(0.922464404964295), FRAC_CONST(0.386082143557389) },

1012 { 
FRAC_CONST
(0.921196016932755), FRAC_CONST(0.389098828560595) },

1013 { 
FRAC_CONST
(0.919917763631956), FRAC_CONST(0.392111346627946) },

1014 { 
FRAC_CONST
(0.918629658750963), FRAC_CONST(0.395119665497795) },

1015 { 
FRAC_CONST
(0.917331716084346), FRAC_CONST(0.398123752953462) },

1016 { 
FRAC_CONST
(0.916023949532027), FRAC_CONST(0.401123576823585) },

1017 { 
FRAC_CONST
(0.914706373099136), FRAC_CONST(0.404119104982459) },

1018 { 
FRAC_CONST
(0.913379000895858), FRAC_CONST(0.407110305350386) },

1019 { 
FRAC_CONST
(0.912041847137282), FRAC_CONST(0.410097145894012) },

1020 { 
FRAC_CONST
(0.910694926143251), FRAC_CONST(0.413079594626675) },

1021 { 
FRAC_CONST
(0.909338252338207), FRAC_CONST(0.416057619608744) },

1022 { 
FRAC_CONST
(0.907971840251037), FRAC_CONST(0.419031188947965) },

1023 { 
FRAC_CONST
(0.906595704514915), FRAC_CONST(0.422000270799800) },

1024 { 
FRAC_CONST
(0.905209859867151), FRAC_CONST(0.424964833367766) },

1025 { 
FRAC_CONST
(0.903814321149027), FRAC_CONST(0.427924844903780) },

1026 { 
FRAC_CONST
(0.902409103305641), FRAC_CONST(0.430880273708497) },

1027 { 
FRAC_CONST
(0.900994221385748), FRAC_CONST(0.433831088131649) },

1028 { 
FRAC_CONST
(0.899569690541596), FRAC_CONST(0.436777256572384) },

1029 { 
FRAC_CONST
(0.898135526028766), FRAC_CONST(0.439718747479604) },

1030 { 
FRAC_CONST
(0.896691743206008), FRAC_CONST(0.442655529352306) },

1031 { 
FRAC_CONST
(0.895238357535076), FRAC_CONST(0.445587570739915) },

1032 { 
FRAC_CONST
(0.893775384580563), FRAC_CONST(0.448514840242624) },

1033 { 
FRAC_CONST
(0.892302840009734), FRAC_CONST(0.451437306511726) },

1034 { 
FRAC_CONST
(0.890820739592359), FRAC_CONST(0.454354938249958) },

1035 { 
FRAC_CONST
(0.889329099200541), FRAC_CONST(0.457267704211826) },

1036 { 
FRAC_CONST
(0.887827934808551), FRAC_CONST(0.460175573203949) },

1037 { 
FRAC_CONST
(0.886317262492655), FRAC_CONST(0.463078514085383) },

1038 { 
FRAC_CONST
(0.884797098430938), FRAC_CONST(0.465976495767966) },

1039 { 
FRAC_CONST
(0.883267458903136), FRAC_CONST(0.468869487216642) },

1040 { 
FRAC_CONST
(0.881728360290461), FRAC_CONST(0.471757457449795) },

1041 { 
FRAC_CONST
(0.880179819075421), FRAC_CONST(0.474640375539586) },

1042 { 
FRAC_CONST
(0.878621851841649), FRAC_CONST(0.477518210612278) },

1043 { 
FRAC_CONST
(0.877054475273722), FRAC_CONST(0.480390931848569) },

1044 { 
FRAC_CONST
(0.875477706156984), FRAC_CONST(0.483258508483922) },

1045 { 
FRAC_CONST
(0.873891561377366), FRAC_CONST(0.486120909808896) },

1046 { 
FRAC_CONST
(0.872296057921204), FRAC_CONST(0.488978105169472) },

1047 { 
FRAC_CONST
(0.870691212875058), FRAC_CONST(0.491830063967383) },

1048 { 
FRAC_CONST
(0.869077043425529), FRAC_CONST(0.494676755660442) },

1049 { 
FRAC_CONST
(0.867453566859076), FRAC_CONST(0.497518149762867) },

1050 { 
FRAC_CONST
(0.865820800561827), FRAC_CONST(0.500354215845611) },

1051 { 
FRAC_CONST
(0.864178762019399), FRAC_CONST(0.503184923536685) },

1052 { 
FRAC_CONST
(0.862527468816704), FRAC_CONST(0.506010242521482) },

1053 { 
FRAC_CONST
(0.860866938637767), FRAC_CONST(0.508830142543107) },

1054 { 
FRAC_CONST
(0.859197189265532), FRAC_CONST(0.511644593402696) },

1055 { 
FRAC_CONST
(0.857518238581672), FRAC_CONST(0.514453564959741) },

1056 { 
FRAC_CONST
(0.855830104566401), FRAC_CONST(0.517257027132414) },

1057 { 
FRAC_CONST
(0.854132805298278), FRAC_CONST(0.520054949897887) },

1058 { 
FRAC_CONST
(0.852426358954015), FRAC_CONST(0.522847303292655) },

1059 { 
FRAC_CONST
(0.850710783808280), FRAC_CONST(0.525634057412856) },

1060 { 
FRAC_CONST
(0.848986098233506), FRAC_CONST(0.528415182414593) },

1061 { 
FRAC_CONST
(0.847252320699689), FRAC_CONST(0.531190648514252) },

1062 { 
FRAC_CONST
(0.845509469774194), FRAC_CONST(0.533960425988819) },

1063 { 
FRAC_CONST
(0.843757564121554), FRAC_CONST(0.536724485176205) },

1064 { 
FRAC_CONST
(0.841996622503271), FRAC_CONST(0.539482796475555) },

1065 { 
FRAC_CONST
(0.840226663777615), FRAC_CONST(0.542235330347571) },

1066 { 
FRAC_CONST
(0.838447706899422), FRAC_CONST(0.544982057314827) },

1067 { 
FRAC_CONST
(0.836659770919891), FRAC_CONST(0.547722947962084) },

1068 { 
FRAC_CONST
(0.834862874986380), FRAC_CONST(0.550457972936605) },

1069 { 
FRAC_CONST
(0.833057038342201), FRAC_CONST(0.553187102948470) },

1070 { 
FRAC_CONST
(0.831242280326413), FRAC_CONST(0.555910308770889) },

1071 { 
FRAC_CONST
(0.829418620373617), FRAC_CONST(0.558627561240515) },

1072 { 
FRAC_CONST
(0.827586078013746), FRAC_CONST(0.561338831257758) },

1073 { 
FRAC_CONST
(0.825744672871856), FRAC_CONST(0.564044089787093) },

1074 { 
FRAC_CONST
(0.823894424667918), FRAC_CONST(0.566743307857377) },

1075 { 
FRAC_CONST
(0.822035353216601), FRAC_CONST(0.569436456562150) },

1076 { 
FRAC_CONST
(0.820167478427070), FRAC_CONST(0.572123507059955) },

1077 { 
FRAC_CONST
(0.818290820302761), FRAC_CONST(0.574804430574639) },

1078 { 
FRAC_CONST
(0.816405398941175), FRAC_CONST(0.577479198395666) },

1079 { 
FRAC_CONST
(0.814511234533661), FRAC_CONST(0.580147781878420) },

1080 { 
FRAC_CONST
(0.812608347365198), FRAC_CONST(0.582810152444517) },

1081 { 
FRAC_CONST
(0.810696757814178), FRAC_CONST(0.585466281582107) },

1082 { 
FRAC_CONST
(0.808776486352191), FRAC_CONST(0.588116140846181) },

1083 { 
FRAC_CONST
(0.806847553543799), FRAC_CONST(0.590759701858874) },

1084 { 
FRAC_CONST
(0.804909980046325), FRAC_CONST(0.593396936309773) },

1085 { 
FRAC_CONST
(0.802963786609623), FRAC_CONST(0.596027815956215) },

1086 { 
FRAC_CONST
(0.801008994075862), FRAC_CONST(0.598652312623592) },

1087 { 
FRAC_CONST
(0.799045623379300), FRAC_CONST(0.601270398205654) },

1088 { 
FRAC_CONST
(0.797073695546059), FRAC_CONST(0.603882044664808) },

1089 { 
FRAC_CONST
(0.795093231693901), FRAC_CONST(0.606487224032418) },

1090 { 
FRAC_CONST
(0.793104253032005), FRAC_CONST(0.609085908409106) },

1091 { 
FRAC_CONST
(0.791106780860733), FRAC_CONST(0.611678069965050) },

1092 { 
FRAC_CONST
(0.789100836571407), FRAC_CONST(0.614263680940283) },

1093 { 
FRAC_CONST
(0.787086441646080), FRAC_CONST(0.616842713644988) },

1094 { 
FRAC_CONST
(0.785063617657302), FRAC_CONST(0.619415140459796) },

1095 { 
FRAC_CONST
(0.783032386267894), FRAC_CONST(0.621980933836084) },

1096 { 
FRAC_CONST
(0.780992769230711), FRAC_CONST(0.624540066296266) },

1097 { 
FRAC_CONST
(0.778944788388414), FRAC_CONST(0.627092510434089) },

1098 { 
FRAC_CONST
(0.776888465673232), FRAC_CONST(0.629638238914927) },

1099 { 
FRAC_CONST
(0.774823823106730), FRAC_CONST(0.632177224476073) },

1100 { 
FRAC_CONST
(0.772750882799570), FRAC_CONST(0.634709439927031) },

1101 { 
FRAC_CONST
(0.770669666951277), FRAC_CONST(0.637234858149809) },

1102 { 
FRAC_CONST
(0.768580197850002), FRAC_CONST(0.639753452099206) },

1103 { 
FRAC_CONST
(0.766482497872280), FRAC_CONST(0.642265194803105) },

1104 { 
FRAC_CONST
(0.764376589482793), FRAC_CONST(0.644770059362758) },

1105 { 
FRAC_CONST
(0.762262495234126), FRAC_CONST(0.647268018953079) },

1106 { 
FRAC_CONST
(0.760140237766532), FRAC_CONST(0.649759046822928) },

1107 { 
FRAC_CONST
(0.758009839807683), FRAC_CONST(0.652243116295397) },

1108 { 
FRAC_CONST
(0.755871324172429), FRAC_CONST(0.654720200768098) },

1109 { 
FRAC_CONST
(0.753724713762555), FRAC_CONST(0.657190273713446) },

1110 { 
FRAC_CONST
(0.751570031566534), FRAC_CONST(0.659653308678945) },

1111 { 
FRAC_CONST
(0.749407300659280), FRAC_CONST(0.662109279287469) },

1112 { 
FRAC_CONST
(0.747236544201905), FRAC_CONST(0.664558159237545) },

1113 { 
FRAC_CONST
(0.745057785441466), FRAC_CONST(0.666999922303638) },

1114 { 
FRAC_CONST
(0.742871047710719), FRAC_CONST(0.669434542336425) },

1115 { 
FRAC_CONST
(0.740676354427868), FRAC_CONST(0.671861993263083) },

1116 { 
FRAC_CONST
(0.738473729096316), FRAC_CONST(0.674282249087562) },

1117 { 
FRAC_CONST
(0.736263195304409), FRAC_CONST(0.676695283890867) },

1118 { 
FRAC_CONST
(0.734044776725190), FRAC_CONST(0.679101071831334) },

1119 { 
FRAC_CONST
(0.731818497116138), FRAC_CONST(0.681499587144906) },

1120 { 
FRAC_CONST
(0.729584380318920), FRAC_CONST(0.683890804145412) },

1121 { 
FRAC_CONST
(0.727342450259131), FRAC_CONST(0.686274697224838) },

1122 { 
FRAC_CONST
(0.725092730946042), FRAC_CONST(0.688651240853606) },

1123 { 
FRAC_CONST
(0.722835246472338), FRAC_CONST(0.691020409580841) },

1124 { 
FRAC_CONST
(0.720570021013866), FRAC_CONST(0.693382178034651) },

1125 { 
FRAC_CONST
(0.718297078829369), FRAC_CONST(0.695736520922392) },

1126 { 
FRAC_CONST
(0.716016444260233), FRAC_CONST(0.698083413030944) },

1127 { 
FRAC_CONST
(0.713728141730222), FRAC_CONST(0.700422829226978) },

1128 { 
FRAC_CONST
(0.711432195745216), FRAC_CONST(0.702754744457225) },

1129 { 
FRAC_CONST
(0.709128630892954), FRAC_CONST(0.705079133748748) },

1130 { 
FRAC_CONST
(0.706817471842764), FRAC_CONST(0.707395972209203) },

1131 { 
FRAC_CONST
(0.704498743345302), FRAC_CONST(0.709705235027113) },

1132 { 
FRAC_CONST
(0.702172470232289), FRAC_CONST(0.712006897472128) },

1133 { 
FRAC_CONST
(0.699838677416240), FRAC_CONST(0.714300934895292) },

1134 { 
FRAC_CONST
(0.697497389890200), FRAC_CONST(0.716587322729308) },

1135 { 
FRAC_CONST
(0.695148632727480), FRAC_CONST(0.718866036488799) },

1136 { 
FRAC_CONST
(0.692792431081381), FRAC_CONST(0.721137051770570) },

1137 { 
FRAC_CONST
(0.690428810184929), FRAC_CONST(0.723400344253874) },

1138 { 
FRAC_CONST
(0.688057795350606), FRAC_CONST(0.725655889700665) },

1139 { 
FRAC_CONST
(0.685679411970075), FRAC_CONST(0.727903663955865) },

1140 { 
FRAC_CONST
(0.683293685513912), FRAC_CONST(0.730143642947616) },

1141 { 
FRAC_CONST
(0.680900641531330), FRAC_CONST(0.732375802687543) },

1142 { 
FRAC_CONST
(0.678500305649909), FRAC_CONST(0.734600119271009) },

1143 { 
FRAC_CONST
(0.676092703575316), FRAC_CONST(0.736816568877370) },

1144 { 
FRAC_CONST
(0.673677861091036), FRAC_CONST(0.739025127770231) },

1145 { 
FRAC_CONST
(0.671255804058092), FRAC_CONST(0.741225772297702) },

1146 { 
FRAC_CONST
(0.668826558414768), FRAC_CONST(0.743418478892647) },

1147 { 
FRAC_CONST
(0.666390150176334), FRAC_CONST(0.745603224072940) },

1148 { 
FRAC_CONST
(0.663946605434765), FRAC_CONST(0.747779984441716) },

1149 { 
FRAC_CONST
(0.661495950358462), FRAC_CONST(0.749948736687619) },

1150 { 
FRAC_CONST
(0.659038211191971), FRAC_CONST(0.752109457585056) },

1151 { 
FRAC_CONST
(0.656573414255705), FRAC_CONST(0.754262123994441) },

1152 { 
FRAC_CONST
(0.654101585945659), FRAC_CONST(0.756406712862448) },

1153 { 
FRAC_CONST
(0.651622752733128), FRAC_CONST(0.758543201222251) },

1154 { 
FRAC_CONST
(0.649136941164425), FRAC_CONST(0.760671566193777) },

1155 { 
FRAC_CONST
(0.646644177860593), FRAC_CONST(0.762791784983948) },

1156 { 
FRAC_CONST
(0.644144489517126), FRAC_CONST(0.764903834886923) },

1157 { 
FRAC_CONST
(0.641637902903677), FRAC_CONST(0.767007693284345) },

1158 { 
FRAC_CONST
(0.639124444863776), FRAC_CONST(0.769103337645580) },

1159 { 
FRAC_CONST
(0.636604142314538), FRAC_CONST(0.771190745527961) },

1160 { 
FRAC_CONST
(0.634077022246379), FRAC_CONST(0.773269894577026) },

1161 { 
FRAC_CONST
(0.631543111722725), FRAC_CONST(0.775340762526760) },

1162 { 
FRAC_CONST
(0.629002437879721), FRAC_CONST(0.777403327199831) },

1163 { 
FRAC_CONST
(0.626455027925944), FRAC_CONST(0.779457566507828) },

1164 { 
FRAC_CONST
(0.623900909142107), FRAC_CONST(0.781503458451498) },

1165 { 
FRAC_CONST
(0.621340108880771), FRAC_CONST(0.783540981120982) },

1166 { 
FRAC_CONST
(0.618772654566049), FRAC_CONST(0.785570112696050) },

1167 { 
FRAC_CONST
(0.616198573693314), FRAC_CONST(0.787590831446332) },

1168 { 
FRAC_CONST
(0.613617893828905), FRAC_CONST(0.789603115731555) },

1169 { 
FRAC_CONST
(0.611030642609828), FRAC_CONST(0.791606944001769) },

1170 { 
FRAC_CONST
(0.608436847743468), FRAC_CONST(0.793602294797585) },

1171 { 
FRAC_CONST
(0.605836537007281), FRAC_CONST(0.795589146750397) },

1172 { 
FRAC_CONST
(0.603229738248508), FRAC_CONST(0.797567478582619) },

1173 { 
FRAC_CONST
(0.600616479383869), FRAC_CONST(0.799537269107905) },

1174 { 
FRAC_CONST
(0.597996788399267), FRAC_CONST(0.801498497231381) },

1175 { 
FRAC_CONST
(0.595370693349487), FRAC_CONST(0.803451141949871) },

1176 { 
FRAC_CONST
(0.592738222357898), FRAC_CONST(0.805395182352117) },

1177 { 
FRAC_CONST
(0.590099403616149), FRAC_CONST(0.807330597619008) },

1178 { 
FRAC_CONST
(0.587454265383869), FRAC_CONST(0.809257367023803) },

1179 { 
FRAC_CONST
(0.584802835988364), FRAC_CONST(0.811175469932349) },

1180 { 
FRAC_CONST
(0.582145143824311), FRAC_CONST(0.813084885803304) },

1181 { 
FRAC_CONST
(0.579481217353460), FRAC_CONST(0.814985594188359) },

1182 { 
FRAC_CONST
(0.576811085104321), FRAC_CONST(0.816877574732454) },

1183 { 
FRAC_CONST
(0.574134775671867), FRAC_CONST(0.818760807173997) },

1184 { 
FRAC_CONST
(0.571452317717222), FRAC_CONST(0.820635271345081) },

1185 { 
FRAC_CONST
(0.568763739967354), FRAC_CONST(0.822500947171703) },

1186 { 
FRAC_CONST
(0.566069071214772), FRAC_CONST(0.824357814673971) },

1187 { 
FRAC_CONST
(0.563368340317214), FRAC_CONST(0.826205853966327) },

1188 { 
FRAC_CONST
(0.560661576197336), FRAC_CONST(0.828045045257756) },

1189 { 
FRAC_CONST
(0.557948807842409), FRAC_CONST(0.829875368851995) },

1190 { 
FRAC_CONST
(0.555230064304002), FRAC_CONST(0.831696805147750) },

1191 { 
FRAC_CONST
(0.552505374697674), FRAC_CONST(0.833509334638900) },

1192 { 
FRAC_CONST
(0.549774768202663), FRAC_CONST(0.835312937914713) },

1193 { 
FRAC_CONST
(0.547038274061568), FRAC_CONST(0.837107595660044) },

1194 { 
FRAC_CONST
(0.544295921580046), FRAC_CONST(0.838893288655553) },

1195 { 
FRAC_CONST
(0.541547740126486), FRAC_CONST(0.840669997777901) },

1196 { 
FRAC_CONST
(0.538793759131706), FRAC_CONST(0.842437703999961) },

1197 { 
FRAC_CONST
(0.536034008088628), FRAC_CONST(0.844196388391019) },

1198 { 
FRAC_CONST
(0.533268516551970), FRAC_CONST(0.845946032116980) },

1199 { 
FRAC_CONST
(0.530497314137923), FRAC_CONST(0.847686616440563) },

1200 { 
FRAC_CONST
(0.527720430523840), FRAC_CONST(0.849418122721510) },

1201 { 
FRAC_CONST
(0.524937895447912), FRAC_CONST(0.851140532416778) },

1202 { 
FRAC_CONST
(0.522149738708856), FRAC_CONST(0.852853827080745) },

1203 { 
FRAC_CONST
(0.519355990165590), FRAC_CONST(0.854557988365401) },

1204 { 
FRAC_CONST
(0.516556679736915), FRAC_CONST(0.856252998020546) },

1205 { 
FRAC_CONST
(0.513751837401199), FRAC_CONST(0.857938837893991) },

1206 { 
FRAC_CONST
(0.510941493196049), FRAC_CONST(0.859615489931744) },

1207 { 
FRAC_CONST
(0.508125677217994), FRAC_CONST(0.861282936178208) },

1208 { 
FRAC_CONST
(0.505304419622159), FRAC_CONST(0.862941158776375) },

1209 { 
FRAC_CONST
(0.502477750621949), FRAC_CONST(0.864590139968012) },

1210 { 
FRAC_CONST
(0.499645700488717), FRAC_CONST(0.866229862093855) },

1211 { 
FRAC_CONST
(0.496808299551444), FRAC_CONST(0.867860307593799) },

1212 { 
FRAC_CONST
(0.493965578196415), FRAC_CONST(0.869481459007080) },

1213 { 
FRAC_CONST
(0.491117566866892), FRAC_CONST(0.871093298972471) },

1214 { 
FRAC_CONST
(0.488264296062789), FRAC_CONST(0.872695810228461) },

1215 { 
FRAC_CONST
(0.485405796340343), FRAC_CONST(0.874288975613440) },

1216 { 
FRAC_CONST
(0.482542098311789), FRAC_CONST(0.875872778065888) },

1217 { 
FRAC_CONST
(0.479673232645033), FRAC_CONST(0.877447200624553) },

1218 { 
FRAC_CONST
(0.476799230063322), FRAC_CONST(0.879012226428633) },

1219 { 
FRAC_CONST
(0.473920121344914), FRAC_CONST(0.880567838717962) },

1220 { 
FRAC_CONST
(0.471035937322751), FRAC_CONST(0.882114020833179) },

1221 { 
FRAC_CONST
(0.468146708884125), FRAC_CONST(0.883650756215917) },

1222 { 
FRAC_CONST
(0.465252466970353), FRAC_CONST(0.885178028408975) },

1223 { 
FRAC_CONST
(0.462353242576441), FRAC_CONST(0.886695821056495) },

1224 { 
FRAC_CONST
(0.459449066750752), FRAC_CONST(0.888204117904136) },

1225 { 
FRAC_CONST
(0.456539970594675), FRAC_CONST(0.889702902799251) },

1226 { 
FRAC_CONST
(0.453625985262295), FRAC_CONST(0.891192159691058) },

1227 { 
FRAC_CONST
(0.450707141960053), FRAC_CONST(0.892671872630812) },

1228 { 
FRAC_CONST
(0.447783471946415), FRAC_CONST(0.894142025771977) },

1229 { 
FRAC_CONST
(0.444855006531538), FRAC_CONST(0.895602603370393) },

1230 { 
FRAC_CONST
(0.441921777076935), FRAC_CONST(0.897053589784447) },

1231 { 
FRAC_CONST
(0.438983814995137), FRAC_CONST(0.898494969475242) },

1232 { 
FRAC_CONST
(0.436041151749356), FRAC_CONST(0.899926727006758) },

1233 { 
FRAC_CONST
(0.433093818853152), FRAC_CONST(0.901348847046022) },

1234 { 
FRAC_CONST
(0.430141847870093), FRAC_CONST(0.902761314363272) },

1235 { 
FRAC_CONST
(0.427185270413416), FRAC_CONST(0.904164113832116) },

1236 { 
FRAC_CONST
(0.424224118145690), FRAC_CONST(0.905557230429701) },

1237 { 
FRAC_CONST
(0.421258422778478), FRAC_CONST(0.906940649236866) },

1238 { 
FRAC_CONST
(0.418288216071994), FRAC_CONST(0.908314355438308) },

1239 { 
FRAC_CONST
(0.415313529834766), FRAC_CONST(0.909678334322736) },

1240 { 
FRAC_CONST
(0.412334395923293), FRAC_CONST(0.911032571283032) },

1241 { 
FRAC_CONST
(0.409350846241706), FRAC_CONST(0.912377051816407) },

1242 { 
FRAC_CONST
(0.406362912741425), FRAC_CONST(0.913711761524555) },

1243 { 
FRAC_CONST
(0.403370627420818), FRAC_CONST(0.915036686113806) },

1244 { 
FRAC_CONST
(0.400374022324857), FRAC_CONST(0.916351811395282) },

1245 { 
FRAC_CONST
(0.397373129544774), FRAC_CONST(0.917657123285050) },

1246 { 
FRAC_CONST
(0.394367981217720), FRAC_CONST(0.918952607804266) },

1247 { 
FRAC_CONST
(0.391358609526420), FRAC_CONST(0.920238251079332) },

1248 { 
FRAC_CONST
(0.388345046698826), FRAC_CONST(0.921514039342042) },

1249 { 
FRAC_CONST
(0.385327325007776), FRAC_CONST(0.922779958929729) },

1250 { 
FRAC_CONST
(0.382305476770645), FRAC_CONST(0.924035996285410) },

1251 { 
FRAC_CONST
(0.379279534348999), FRAC_CONST(0.925282137957935) },

1252 { 
FRAC_CONST
(0.376249530148250), FRAC_CONST(0.926518370602127) },

1253 { 
FRAC_CONST
(0.373215496617310), FRAC_CONST(0.927744680978929) },

1254 { 
FRAC_CONST
(0.370177466248239), FRAC_CONST(0.928961055955541) },

1255 { 
FRAC_CONST
(0.367135471575903), FRAC_CONST(0.930167482505564) },

1256 { 
FRAC_CONST
(0.364089545177621), FRAC_CONST(0.931363947709140) },

1257 { 
FRAC_CONST
(0.361039719672816), FRAC_CONST(0.932550438753087) },

1258 { 
FRAC_CONST
(0.357986027722671), FRAC_CONST(0.933726942931039) },

1259 { 
FRAC_CONST
(0.354928502029772), FRAC_CONST(0.934893447643582) },

1260 { 
FRAC_CONST
(0.351867175337763), FRAC_CONST(0.936049940398387) },

1261 { 
FRAC_CONST
(0.348802080430994), FRAC_CONST(0.937196408810347) },

1262 { 
FRAC_CONST
(0.345733250134169), FRAC_CONST(0.938332840601705) },

1263 { 
FRAC_CONST
(0.342660717311994), FRAC_CONST(0.939459223602190) },

1264 { 
FRAC_CONST
(0.339584514868829), FRAC_CONST(0.940575545749145) },

1265 { 
FRAC_CONST
(0.336504675748328), FRAC_CONST(0.941681795087657) },

1266 { 
FRAC_CONST
(0.333421232933097), FRAC_CONST(0.942777959770684) },

1267 { 
FRAC_CONST
(0.330334219444328), FRAC_CONST(0.943864028059183) },

1268 { 
FRAC_CONST
(0.327243668341457), FRAC_CONST(0.944939988322235) },

1269 { 
FRAC_CONST
(0.324149612721804), FRAC_CONST(0.946005829037171) },

1270 { 
FRAC_CONST
(0.321052085720218), FRAC_CONST(0.947061538789691) },

1271 { 
FRAC_CONST
(0.317951120508725), FRAC_CONST(0.948107106273994) },

1272 { 
FRAC_CONST
(0.314846750296171), FRAC_CONST(0.949142520292891) },

1273 { 
FRAC_CONST
(0.311739008327867), FRAC_CONST(0.950167769757930) },

1274 { 
FRAC_CONST
(0.308627927885232), FRAC_CONST(0.951182843689513) },

1275 { 
FRAC_CONST
(0.305513542285440), FRAC_CONST(0.952187731217013) },

1276 { 
FRAC_CONST
(0.302395884881056), FRAC_CONST(0.953182421578893) },

1277 { 
FRAC_CONST
(0.299274989059689), FRAC_CONST(0.954166904122818) },

1278 { 
FRAC_CONST
(0.296150888243624), FRAC_CONST(0.955141168305771) },

1279 { 
FRAC_CONST
(0.293023615889471), FRAC_CONST(0.956105203694164) },

1280 { 
FRAC_CONST
(0.289893205487806), FRAC_CONST(0.957058999963955) },

1281 { 
FRAC_CONST
(0.286759690562807), FRAC_CONST(0.958002546900750) },

1282 { 
FRAC_CONST
(0.283623104671904), FRAC_CONST(0.958935834399920) },

1283 { 
FRAC_CONST
(0.280483481405410), FRAC_CONST(0.959858852466706) },

1284 { 
FRAC_CONST
(0.277340854386169), FRAC_CONST(0.960771591216325) },

1285 { 
FRAC_CONST
(0.274195257269191), FRAC_CONST(0.961674040874080) },

1286 { 
FRAC_CONST
(0.271046723741295), FRAC_CONST(0.962566191775459) },

1287 { 
FRAC_CONST
(0.267895287520743), FRAC_CONST(0.963448034366243) },

1288 { 
FRAC_CONST
(0.264740982356888), FRAC_CONST(0.964319559202607) },

1289 { 
FRAC_CONST
(0.261583842029803), FRAC_CONST(0.965180756951218) },

1290 { 
FRAC_CONST
(0.258423900349924), FRAC_CONST(0.966031618389343) },

1291 { 
FRAC_CONST
(0.255261191157689), FRAC_CONST(0.966872134404937) },

1292 { 
FRAC_CONST
(0.252095748323171), FRAC_CONST(0.967702295996750) },

1293 { 
FRAC_CONST
(0.248927605745720), FRAC_CONST(0.968522094274417) },

1294 { 
FRAC_CONST
(0.245756797353599), FRAC_CONST(0.969331520458559) },

1295 { 
FRAC_CONST
(0.242583357103617), FRAC_CONST(0.970130565880871) },

1296 { 
FRAC_CONST
(0.239407318980770), FRAC_CONST(0.970919221984218) },

1297 { 
FRAC_CONST
(0.236228716997876), FRAC_CONST(0.971697480322728) },

1298 { 
FRAC_CONST
(0.233047585195206), FRAC_CONST(0.972465332561878) },

1299 { 
FRAC_CONST
(0.229863957640129), FRAC_CONST(0.973222770478587) },

1300 { 
FRAC_CONST
(0.226677868426735), FRAC_CONST(0.973969785961306) },

1301 { 
FRAC_CONST
(0.223489351675482), FRAC_CONST(0.974706371010097) },

1302 { 
FRAC_CONST
(0.220298441532823), FRAC_CONST(0.975432517736727) },

1303 { 
FRAC_CONST
(0.217105172170841), FRAC_CONST(0.976148218364747) },

1304 { 
FRAC_CONST
(0.213909577786886), FRAC_CONST(0.976853465229579) },

1305 { 
FRAC_CONST
(0.210711692603206), FRAC_CONST(0.977548250778596) },

1306 { 
FRAC_CONST
(0.207511550866582), FRAC_CONST(0.978232567571202) },

1307 { 
FRAC_CONST
(0.204309186847962), FRAC_CONST(0.978906408278914) },

1308 { 
FRAC_CONST
(0.201104634842092), FRAC_CONST(0.979569765685441) },

1309 { 
FRAC_CONST
(0.197897929167148), FRAC_CONST(0.980222632686756) },

1310 { 
FRAC_CONST
(0.194689104164373), FRAC_CONST(0.980865002291179) },

1311 { 
FRAC_CONST
(0.191478194197704), FRAC_CONST(0.981496867619447) },

1312 { 
FRAC_CONST
(0.188265233653407), FRAC_CONST(0.982118221904791) },

1313 { 
FRAC_CONST
(0.185050256939710), FRAC_CONST(0.982729058493005) },

1314 { 
FRAC_CONST
(0.181833298486427), FRAC_CONST(0.983329370842520) },

1315 { 
FRAC_CONST
(0.178614392744603), FRAC_CONST(0.983919152524473) },

1316 { 
FRAC_CONST
(0.175393574186129), FRAC_CONST(0.984498397222776) },

1317 { 
FRAC_CONST
(0.172170877303385), FRAC_CONST(0.985067098734184) },

1318 { 
FRAC_CONST
(0.168946336608867), FRAC_CONST(0.985625250968360) },

1319 { 
FRAC_CONST
(0.165719986634814), FRAC_CONST(0.986172847947943) },

1320 { 
FRAC_CONST
(0.162491861932842), FRAC_CONST(0.986709883808609) },

1321 { 
FRAC_CONST
(0.159261997073573), FRAC_CONST(0.987236352799134) },

1322 { 
FRAC_CONST
(0.156030426646266), FRAC_CONST(0.987752249281460) },

1323 { 
FRAC_CONST
(0.152797185258443), FRAC_CONST(0.988257567730749) },

1324 { 
FRAC_CONST
(0.149562307535523), FRAC_CONST(0.988752302735447) },

1325 { 
FRAC_CONST
(0.146325828120446), FRAC_CONST(0.989236448997339) },

1326 { 
FRAC_CONST
(0.143087781673307), FRAC_CONST(0.989710001331608) },

1327 { 
FRAC_CONST
(0.139848202870981), FRAC_CONST(0.990172954666889) },

1328 { 
FRAC_CONST
(0.136607126406757), FRAC_CONST(0.990625304045323) },

1329 { 
FRAC_CONST
(0.133364586989957), FRAC_CONST(0.991067044622612) },

1330 { 
FRAC_CONST
(0.130120619345575), FRAC_CONST(0.991498171668069) },

1331 { 
FRAC_CONST
(0.126875258213898), FRAC_CONST(0.991918680564670) },

1332 { 
FRAC_CONST
(0.123628538350136), FRAC_CONST(0.992328566809103) },

1333 { 
FRAC_CONST
(0.120380494524051), FRAC_CONST(0.992727826011815) },

1334 { 
FRAC_CONST
(0.117131161519582), FRAC_CONST(0.993116453897061) },

1335 { 
FRAC_CONST
(0.113880574134475), FRAC_CONST(0.993494446302948) },

1336 { 
FRAC_CONST
(0.110628767179910), FRAC_CONST(0.993861799181482) },

1337 { 
FRAC_CONST
(0.107375775480128), FRAC_CONST(0.994218508598608) },

1338 { 
FRAC_CONST
(0.104121633872055), FRAC_CONST(0.994564570734255) },

1339 { 
FRAC_CONST
(0.100866377204933), FRAC_CONST(0.994899981882376) },

1340 { 
FRAC_CONST
(0.097610040339947), FRAC_CONST(0.995224738450986) },

1341 { 
FRAC_CONST
(0.094352658149849), FRAC_CONST(0.995538836962204) },

1342 { 
FRAC_CONST
(0.091094265518583), FRAC_CONST(0.995842274052287) },

1343 { 
FRAC_CONST
(0.087834897340919), FRAC_CONST(0.996135046471667) },

1344 { 
FRAC_CONST
(0.084574588522070), FRAC_CONST(0.996417151084987) },

1345 { 
FRAC_CONST
(0.081313373977324), FRAC_CONST(0.996688584871134) },

1346 { 
FRAC_CONST
(0.078051288631670), FRAC_CONST(0.996949344923269) },

1347 { 
FRAC_CONST
(0.074788367419420), FRAC_CONST(0.997199428448862) },

1348 { 
FRAC_CONST
(0.071524645283840), FRAC_CONST(0.997438832769720) },

1349 { 
FRAC_CONST
(0.068260157176771), FRAC_CONST(0.997667555322013) },

1350 { 
FRAC_CONST
(0.064994938058259), FRAC_CONST(0.997885593656308) },

1351 { 
FRAC_CONST
(0.061729022896176), FRAC_CONST(0.998092945437590) },

1352 { 
FRAC_CONST
(0.058462446665851), FRAC_CONST(0.998289608445286) },

1353 { 
FRAC_CONST
(0.055195244349690), FRAC_CONST(0.998475580573295) },

1354 { 
FRAC_CONST
(0.051927450936806), FRAC_CONST(0.998650859830004) },

1355 { 
FRAC_CONST
(0.048659101422640), FRAC_CONST(0.998815444338313) },

1356 { 
FRAC_CONST
(0.045390230808591), FRAC_CONST(0.998969332335654) },

1357 { 
FRAC_CONST
(0.042120874101635), FRAC_CONST(0.999112522174011) },

1358 { 
FRAC_CONST
(0.038851066313958), FRAC_CONST(0.999245012319936) },

1359 { 
FRAC_CONST
(0.035580842462574), FRAC_CONST(0.999366801354564) },

1360 { 
FRAC_CONST
(0.032310237568951), FRAC_CONST(0.999477887973635) },

1361 { 
FRAC_CONST
(0.029039286658643), FRAC_CONST(0.999578270987499) },

1362 { 
FRAC_CONST
(0.025768024760904), FRAC_CONST(0.999667949321134) },

1363 { 
FRAC_CONST
(0.022496486908322), FRAC_CONST(0.999746922014158) },

1364 { 
FRAC_CONST
(0.019224708136438), FRAC_CONST(0.999815188220837) },

1365 { 
FRAC_CONST
(0.015952723483375), FRAC_CONST(0.999872747210095) },

1366 { 
FRAC_CONST
(0.012680567989461), FRAC_CONST(0.999919598365521) },

1367 { 
FRAC_CONST
(0.009408276696850), FRAC_CONST(0.999955741185376) },

1368 { 
FRAC_CONST
(0.006135884649155), FRAC_CONST(0.999981175282601) },

1369 { 
FRAC_CONST
(0.002863426891064), FRAC_CONST(0.999995900384816) }

1372 #ifde‡
LD_DEC


1374 
ALIGN
 c⁄° 
com∂ex_t
 
	gmd˘_èb_960
[] =

1376 { 
FRAC_CONST
(0.999999665337326), FRAC_CONST(0.000818122995607) },

1377 { 
FRAC_CONST
(0.999972892444367), FRAC_CONST(0.007363041249780) },

1378 { 
FRAC_CONST
(0.999903284040864), FRAC_CONST(0.013907644095771) },

1379 { 
FRAC_CONST
(0.999790843108610), FRAC_CONST(0.020451651184577) },

1380 { 
FRAC_CONST
(0.999635574464198), FRAC_CONST(0.026994782192715) },

1381 { 
FRAC_CONST
(0.999437484758823), FRAC_CONST(0.033536756834230) },

1382 { 
FRAC_CONST
(0.999196582477986), FRAC_CONST(0.040077294872701) },

1383 { 
FRAC_CONST
(0.998912877941140), FRAC_CONST(0.046616116133247) },

1384 { 
FRAC_CONST
(0.998586383301244), FRAC_CONST(0.053152940514528) },

1385 { 
FRAC_CONST
(0.998217112544241), FRAC_CONST(0.059687488000744) },

1386 { 
FRAC_CONST
(0.997805081488460), FRAC_CONST(0.066219478673630) },

1387 { 
FRAC_CONST
(0.997350307783942), FRAC_CONST(0.072748632724445) },

1388 { 
FRAC_CONST
(0.996852810911678), FRAC_CONST(0.079274670465961) },

1389 { 
FRAC_CONST
(0.996312612182778), FRAC_CONST(0.085797312344440) },

1390 { 
FRAC_CONST
(0.995729734737558), FRAC_CONST(0.092316278951614) },

1391 { 
FRAC_CONST
(0.995104203544548), FRAC_CONST(0.098831291036650) },

1392 { 
FRAC_CONST
(0.994436045399422), FRAC_CONST(0.105342069518114) },

1393 { 
FRAC_CONST
(0.993725288923851), FRAC_CONST(0.111848335495926) },

1394 { 
FRAC_CONST
(0.992971964564277), FRAC_CONST(0.118349810263305) },

1395 { 
FRAC_CONST
(0.992176104590608), FRAC_CONST(0.124846215318711) },

1396 { 
FRAC_CONST
(0.991337743094838), FRAC_CONST(0.131337272377774) },

1397 { 
FRAC_CONST
(0.990456915989581), FRAC_CONST(0.137822703385212) },

1398 { 
FRAC_CONST
(0.989533661006540), FRAC_CONST(0.144302230526747) },

1399 { 
FRAC_CONST
(0.988568017694885), FRAC_CONST(0.150775576241001) },

1400 { 
FRAC_CONST
(0.987560027419562), FRAC_CONST(0.157242463231389) },

1401 { 
FRAC_CONST
(0.986509733359519), FRAC_CONST(0.163702614477995) },

1402 { 
FRAC_CONST
(0.985417180505858), FRAC_CONST(0.170155753249442) },

1403 { 
FRAC_CONST
(0.984282415659907), FRAC_CONST(0.176601603114742) },

1404 { 
FRAC_CONST
(0.983105487431216), FRAC_CONST(0.183039887955141) },

1405 { 
FRAC_CONST
(0.981886446235473), FRAC_CONST(0.189470331975943) },

1406 { 
FRAC_CONST
(0.980625344292344), FRAC_CONST(0.195892659718330) },

1407 { 
FRAC_CONST
(0.979322235623241), FRAC_CONST(0.202306596071156) },

1408 { 
FRAC_CONST
(0.977977176049000), FRAC_CONST(0.208711866282735) },

1409 { 
FRAC_CONST
(0.976590223187499), FRAC_CONST(0.215108195972610) },

1410 { 
FRAC_CONST
(0.975161436451181), FRAC_CONST(0.221495311143304) },

1411 { 
FRAC_CONST
(0.973690877044515), FRAC_CONST(0.227872938192063) },

1412 { 
FRAC_CONST
(0.972178607961371), FRAC_CONST(0.234240803922570) },

1413 { 
FRAC_CONST
(0.970624693982323), FRAC_CONST(0.240598635556650) },

1414 { 
FRAC_CONST
(0.969029201671875), FRAC_CONST(0.246946160745958) },

1415 { 
FRAC_CONST
(0.967392199375607), FRAC_CONST(0.253283107583640) },

1416 { 
FRAC_CONST
(0.965713757217249), FRAC_CONST(0.259609204615985) },

1417 { 
FRAC_CONST
(0.963993947095677), FRAC_CONST(0.265924180854051) },

1418 { 
FRAC_CONST
(0.962232842681832), FRAC_CONST(0.272227765785273) },

1419 { 
FRAC_CONST
(0.960430519415566), FRAC_CONST(0.278519689385053) },

1420 { 
FRAC_CONST
(0.958587054502409), FRAC_CONST(0.284799682128326) },

1421 { 
FRAC_CONST
(0.956702526910263), FRAC_CONST(0.291067475001103) },

1422 { 
FRAC_CONST
(0.954777017366017), FRAC_CONST(0.297322799511998) },

1423 { 
FRAC_CONST
(0.952810608352092), FRAC_CONST(0.303565387703730) },

1424 { 
FRAC_CONST
(0.950803384102905), FRAC_CONST(0.309794972164597) },

1425 { 
FRAC_CONST
(0.948755430601263), FRAC_CONST(0.316011286039934) },

1426 { 
FRAC_CONST
(0.946666835574676), FRAC_CONST(0.322214063043544) },

1427 { 
FRAC_CONST
(0.944537688491606), FRAC_CONST(0.328403037469105) },

1428 { 
FRAC_CONST
(0.942368080557626), FRAC_CONST(0.334577944201551) },

1429 { 
FRAC_CONST
(0.940158104711519), FRAC_CONST(0.340738518728429) },

1430 { 
FRAC_CONST
(0.937907855621296), FRAC_CONST(0.346884497151231) },

1431 { 
FRAC_CONST
(0.935617429680138), FRAC_CONST(0.353015616196696) },

1432 { 
FRAC_CONST
(0.933286925002268), FRAC_CONST(0.359131613228090) },

1433 { 
FRAC_CONST
(0.930916441418752), FRAC_CONST(0.365232226256457) },

1434 { 
FRAC_CONST
(0.928506080473216), FRAC_CONST(0.371317193951838) },

1435 { 
FRAC_CONST
(0.926055945417500), FRAC_CONST(0.377386255654469) },

1436 { 
FRAC_CONST
(0.923566141207236), FRAC_CONST(0.383439151385947) },

1437 { 
FRAC_CONST
(0.921036774497350), FRAC_CONST(0.389475621860365) },

1438 { 
FRAC_CONST
(0.918467953637492), FRAC_CONST(0.395495408495417) },

1439 { 
FRAC_CONST
(0.915859788667400), FRAC_CONST(0.401498253423481) },

1440 { 
FRAC_CONST
(0.913212391312179), FRAC_CONST(0.407483899502658) },

1441 { 
FRAC_CONST
(0.910525874977521), FRAC_CONST(0.413452090327791) },

1442 { 
FRAC_CONST
(0.907800354744844), FRAC_CONST(0.419402570241451) },

1443 { 
FRAC_CONST
(0.905035947366364), FRAC_CONST(0.425335084344881) },

1444 { 
FRAC_CONST
(0.902232771260093), FRAC_CONST(0.431249378508924) },

1445 { 
FRAC_CONST
(0.899390946504764), FRAC_CONST(0.437145199384900) },

1446 { 
FRAC_CONST
(0.896510594834693), FRAC_CONST(0.443022294415467) },

1447 { 
FRAC_CONST
(0.893591839634558), FRAC_CONST(0.448880411845433) },

1448 { 
FRAC_CONST
(0.890634805934118), FRAC_CONST(0.454719300732547) },

1449 { 
FRAC_CONST
(0.887639620402854), FRAC_CONST(0.460538710958240) },

1450 { 
FRAC_CONST
(0.884606411344546), FRAC_CONST(0.466338393238348) },

1451 { 
FRAC_CONST
(0.881535308691775), FRAC_CONST(0.472118099133784) },

1452 { 
FRAC_CONST
(0.878426444000357), FRAC_CONST(0.477877581061184) },

1453 { 
FRAC_CONST
(0.875279950443708), FRAC_CONST(0.483616592303511) },

1454 { 
FRAC_CONST
(0.872095962807140), FRAC_CONST(0.489334887020625) },

1455 { 
FRAC_CONST
(0.868874617482085), FRAC_CONST(0.495032220259813) },

1456 { 
FRAC_CONST
(0.865616052460258), FRAC_CONST(0.500708347966279) },

1457 { 
FRAC_CONST
(0.862320407327736), FRAC_CONST(0.506363026993605) },

1458 { 
FRAC_CONST
(0.858987823258990), FRAC_CONST(0.511996015114162) },

1459 { 
FRAC_CONST
(0.855618443010829), FRAC_CONST(0.517607071029487) },

1460 { 
FRAC_CONST
(0.852212410916289), FRAC_CONST(0.523195954380619) },

1461 { 
FRAC_CONST
(0.848769872878448), FRAC_CONST(0.528762425758396) },

1462 { 
FRAC_CONST
(0.845290976364179), FRAC_CONST(0.534306246713712) },

1463 { 
FRAC_CONST
(0.841775870397828), FRAC_CONST(0.539827179767727) },

1464 { 
FRAC_CONST
(0.838224705554838), FRAC_CONST(0.545324988422046) },

1465 { 
FRAC_CONST
(0.834637633955290), FRAC_CONST(0.550799437168844) },

1466 { 
FRAC_CONST
(0.831014809257393), FRAC_CONST(0.556250291500956) },

1467 { 
FRAC_CONST
(0.827356386650900), FRAC_CONST(0.561677317921925) },

1468 { 
FRAC_CONST
(0.823662522850458), FRAC_CONST(0.567080283956001) },

1469 { 
FRAC_CONST
(0.819933376088899), FRAC_CONST(0.572458958158102) },

1470 { 
FRAC_CONST
(0.816169106110459), FRAC_CONST(0.577813110123727) },

1471 { 
FRAC_CONST
(0.812369874163934), FRAC_CONST(0.583142510498826) },

1472 { 
FRAC_CONST
(0.808535842995778), FRAC_CONST(0.588446930989624) },

1473 { 
FRAC_CONST
(0.804667176843123), FRAC_CONST(0.593726144372402) },

1474 { 
FRAC_CONST
(0.800764041426753), FRAC_CONST(0.598979924503229) },

1475 { 
FRAC_CONST
(0.796826603943998), FRAC_CONST(0.604208046327650) },

1476 { 
FRAC_CONST
(0.792855033061574), FRAC_CONST(0.609410285890327) },

1477 { 
FRAC_CONST
(0.788849498908361), FRAC_CONST(0.614586420344631) },

1478 { 
FRAC_CONST
(0.784810173068109), FRAC_CONST(0.619736227962191) },

1479 { 
FRAC_CONST
(0.780737228572094), FRAC_CONST(0.624859488142386) },

1480 { 
FRAC_CONST
(0.776630839891703), FRAC_CONST(0.629955981421804) },

1481 { 
FRAC_CONST
(0.772491182930959), FRAC_CONST(0.635025489483633) },

1482 { 
FRAC_CONST
(0.768318435018988), FRAC_CONST(0.640067795167023) },

1483 { 
FRAC_CONST
(0.764112774902423), FRAC_CONST(0.645082682476378) },

1484 { 
FRAC_CONST
(0.759874382737746), FRAC_CONST(0.650069936590618) },

1485 { 
FRAC_CONST
(0.755603440083571), FRAC_CONST(0.655029343872374) },

1486 { 
FRAC_CONST
(0.751300129892866), FRAC_CONST(0.659960691877147) },

1487 { 
FRAC_CONST
(0.746964636505118), FRAC_CONST(0.664863769362399) },

1488 { 
FRAC_CONST
(0.742597145638433), FRAC_CONST(0.669738366296610) },

1489 { 
FRAC_CONST
(0.738197844381584), FRAC_CONST(0.674584273868271) },

1490 { 
FRAC_CONST
(0.733766921185995), FRAC_CONST(0.679401284494831) },

1491 { 
FRAC_CONST
(0.729304565857668), FRAC_CONST(0.684189191831585) },

1492 { 
FRAC_CONST
(0.724810969549055), FRAC_CONST(0.688947790780520) },

1493 { 
FRAC_CONST
(0.720286324750863), FRAC_CONST(0.693676877499095) },

1494 { 
FRAC_CONST
(0.715730825283819), FRAC_CONST(0.698376249408973) },

1495 { 
FRAC_CONST
(0.711144666290356), FRAC_CONST(0.703045705204703) },

1496 { 
FRAC_CONST
(0.706528044226263), FRAC_CONST(0.707685044862340) },

1497 { 
FRAC_CONST
(0.701881156852263), FRAC_CONST(0.712294069648014) },

1498 { 
FRAC_CONST
(0.697204203225545), FRAC_CONST(0.716872582126442) },

1499 { 
FRAC_CONST
(0.692497383691237), FRAC_CONST(0.721420386169390) },

1500 { 
FRAC_CONST
(0.687760899873822), FRAC_CONST(0.725937286964068) },

1501 { 
FRAC_CONST
(0.682994954668502), FRAC_CONST(0.730423091021479) },

1502 { 
FRAC_CONST
(0.678199752232508), FRAC_CONST(0.734877606184707) },

1503 { 
FRAC_CONST
(0.673375497976352), FRAC_CONST(0.739300641637149) },

1504 { 
FRAC_CONST
(0.668522398555031), FRAC_CONST(0.743692007910687) },

1505 { 
FRAC_CONST
(0.663640661859171), FRAC_CONST(0.748051516893805) },

1506 { 
FRAC_CONST
(0.658730497006124), FRAC_CONST(0.752378981839648) },

1507 { 
FRAC_CONST
(0.653792114331011), FRAC_CONST(0.756674217374021) },

1508 { 
FRAC_CONST
(0.648825725377709), FRAC_CONST(0.760937039503328) },

1509 { 
FRAC_CONST
(0.643831542889792), FRAC_CONST(0.765167265622459) },

1510 { 
FRAC_CONST
(0.638809780801414), FRAC_CONST(0.769364714522605) },

1511 { 
FRAC_CONST
(0.633760654228152), FRAC_CONST(0.773529206399025) },

1512 { 
FRAC_CONST
(0.628684379457781), FRAC_CONST(0.777660562858748) },

1513 { 
FRAC_CONST
(0.623581173941019), FRAC_CONST(0.781758606928213) },

1514 { 
FRAC_CONST
(0.618451256282204), FRAC_CONST(0.785823163060853) },

1515 { 
FRAC_CONST
(0.613294846229936), FRAC_CONST(0.789854057144609) },

1516 { 
FRAC_CONST
(0.608112164667659), FRAC_CONST(0.793851116509396) },

1517 { 
FRAC_CONST
(0.602903433604202), FRAC_CONST(0.797814169934493) },

1518 { 
FRAC_CONST
(0.597668876164268), FRAC_CONST(0.801743047655882) },

1519 { 
FRAC_CONST
(0.592408716578875), FRAC_CONST(0.805637581373517) },

1520 { 
FRAC_CONST
(0.587123180175754), FRAC_CONST(0.809497604258536) },

1521 { 
FRAC_CONST
(0.581812493369691), FRAC_CONST(0.813322950960406) },

1522 { 
FRAC_CONST
(0.576476883652835), FRAC_CONST(0.817113457614006) },

1523 { 
FRAC_CONST
(0.571116579584947), FRAC_CONST(0.820868961846646) },

1524 { 
FRAC_CONST
(0.565731810783613), FRAC_CONST(0.824589302785025) },

1525 { 
FRAC_CONST
(0.560322807914407), FRAC_CONST(0.828274321062119) },

1526 { 
FRAC_CONST
(0.554889802681009), FRAC_CONST(0.831923858824010) },

1527 { 
FRAC_CONST
(0.549433027815281), FRAC_CONST(0.835537759736646) },

1528 { 
FRAC_CONST
(0.543952717067296), FRAC_CONST(0.839115868992540) },

1529 { 
FRAC_CONST
(0.538449105195327), FRAC_CONST(0.842658033317402) },

1530 { 
FRAC_CONST
(0.532922427955790), FRAC_CONST(0.846164100976699) },

1531 { 
FRAC_CONST
(0.527372922093142), FRAC_CONST(0.849633921782164) },

1532 { 
FRAC_CONST
(0.521800825329746), FRAC_CONST(0.853067347098221) },

1533 { 
FRAC_CONST
(0.516206376355680), FRAC_CONST(0.856464229848356) },

1534 { 
FRAC_CONST
(0.510589814818519), FRAC_CONST(0.859824424521420) },

1535 { 
FRAC_CONST
(0.504951381313066), FRAC_CONST(0.863147787177854) },

1536 { 
FRAC_CONST
(0.499291317371047), FRAC_CONST(0.866434175455865) },

1537 { 
FRAC_CONST
(0.493609865450762), FRAC_CONST(0.869683448577516) },

1538 { 
FRAC_CONST
(0.487907268926702), FRAC_CONST(0.872895467354761) },

1539 { 
FRAC_CONST
(0.482183772079123), FRAC_CONST(0.876070094195407) },

1540 { 
FRAC_CONST
(0.476439620083580), FRAC_CONST(0.879207193109004) },

1541 { 
FRAC_CONST
(0.470675059000427), FRAC_CONST(0.882306629712678) },

1542 { 
FRAC_CONST
(0.464890335764274), FRAC_CONST(0.885368271236879) },

1543 { 
FRAC_CONST
(0.459085698173413), FRAC_CONST(0.888391986531075) },

1544 { 
FRAC_CONST
(0.453261394879198), FRAC_CONST(0.891377646069366) },

1545 { 
FRAC_CONST
(0.447417675375397), FRAC_CONST(0.894325121956035) },

1546 { 
FRAC_CONST
(0.441554789987504), FRAC_CONST(0.897234287931024) },

1547 { 
FRAC_CONST
(0.435672989862017), FRAC_CONST(0.900105019375345) },

1548 { 
FRAC_CONST
(0.429772526955677), FRAC_CONST(0.902937193316419) },

1549 { 
FRAC_CONST
(0.423853654024676), FRAC_CONST(0.905730688433339) },

1550 { 
FRAC_CONST
(0.417916624613831), FRAC_CONST(0.908485385062073) },

1551 { 
FRAC_CONST
(0.411961693045722), FRAC_CONST(0.911201165200584) },

1552 { 
FRAC_CONST
(0.405989114409798), FRAC_CONST(0.913877912513892) },

1553 { 
FRAC_CONST
(0.399999144551449), FRAC_CONST(0.916515512339049) },

1554 { 
FRAC_CONST
(0.393992040061048), FRAC_CONST(0.919113851690058) },

1555 { 
FRAC_CONST
(0.387968058262959), FRAC_CONST(0.921672819262709) },

1556 { 
FRAC_CONST
(0.381927457204511), FRAC_CONST(0.924192305439348) },

1557 { 
FRAC_CONST
(0.375870495644949), FRAC_CONST(0.926672202293573) },

1558 { 
FRAC_CONST
(0.369797433044349), FRAC_CONST(0.929112403594856) },

1559 { 
FRAC_CONST
(0.363708529552499), FRAC_CONST(0.931512804813095) },

1560 { 
FRAC_CONST
(0.357604045997758), FRAC_CONST(0.933873303123091) },

1561 { 
FRAC_CONST
(0.351484243875885), FRAC_CONST(0.936193797408954) },

1562 { 
FRAC_CONST
(0.345349385338836), FRAC_CONST(0.938474188268430) },

1563 { 
FRAC_CONST
(0.339199733183530), FRAC_CONST(0.940714378017165) },

1564 { 
FRAC_CONST
(0.333035550840599), FRAC_CONST(0.942914270692887) },

1565 { 
FRAC_CONST
(0.326857102363098), FRAC_CONST(0.945073772059514) },

1566 { 
FRAC_CONST
(0.320664652415198), FRAC_CONST(0.947192789611197) },

1567 { 
FRAC_CONST
(0.314458466260842), FRAC_CONST(0.949271232576274) },

1568 { 
FRAC_CONST
(0.308238809752391), FRAC_CONST(0.951309011921168) },

1569 { 
FRAC_CONST
(0.302005949319228), FRAC_CONST(0.953306040354194) },

1570 { 
FRAC_CONST
(0.295760151956351), FRAC_CONST(0.955262232329299) },

1571 { 
FRAC_CONST
(0.289501685212929), FRAC_CONST(0.957177504049732) },

1572 { 
FRAC_CONST
(0.283230817180850), FRAC_CONST(0.959051773471624) },

1573 { 
FRAC_CONST
(0.276947816483228), FRAC_CONST(0.960884960307514) },

1574 { 
FRAC_CONST
(0.270652952262902), FRAC_CONST(0.962676986029777) },

1575 { 
FRAC_CONST
(0.264346494170904), FRAC_CONST(0.964427773873996) },

1576 { 
FRAC_CONST
(0.258028712354909), FRAC_CONST(0.966137248842248) },

1577 { 
FRAC_CONST
(0.251699877447663), FRAC_CONST(0.967805337706313) },

1578 { 
FRAC_CONST
(0.245360260555389), FRAC_CONST(0.969431969010818) },

1579 { 
FRAC_CONST
(0.239010133246176), FRAC_CONST(0.971017073076290) },

1580 { 
FRAC_CONST
(0.232649767538342), FRAC_CONST(0.972560582002147) },

1581 { 
FRAC_CONST
(0.226279435888785), FRAC_CONST(0.974062429669605) },

1582 { 
FRAC_CONST
(0.219899411181310), FRAC_CONST(0.975522551744506) },

1583 { 
FRAC_CONST
(0.213509966714943), FRAC_CONST(0.976940885680082) },

1584 { 
FRAC_CONST
(0.207111376192219), FRAC_CONST(0.978317370719628) },

1585 { 
FRAC_CONST
(0.200703913707458), FRAC_CONST(0.979651947899104) },

1586 { 
FRAC_CONST
(0.194287853735029), FRAC_CONST(0.980944560049668) },

1587 { 
FRAC_CONST
(0.187863471117585), FRAC_CONST(0.982195151800116) },

1588 { 
FRAC_CONST
(0.181431041054297), FRAC_CONST(0.983403669579260) },

1589 { 
FRAC_CONST
(0.174990839089060), FRAC_CONST(0.984570061618221) },

1590 { 
FRAC_CONST
(0.168543141098691), FRAC_CONST(0.985694277952645) },

1591 { 
FRAC_CONST
(0.162088223281113), FRAC_CONST(0.986776270424848) },

1592 { 
FRAC_CONST
(0.155626362143520), FRAC_CONST(0.987815992685872) },

1593 { 
FRAC_CONST
(0.149157834490539), FRAC_CONST(0.988813400197476) },

1594 { 
FRAC_CONST
(0.142682917412363), FRAC_CONST(0.989768450234042) },

1595 { 
FRAC_CONST
(0.136201888272891), FRAC_CONST(0.990681101884405) },

1596 { 
FRAC_CONST
(0.129715024697841), FRAC_CONST(0.991551316053606) },

1597 { 
FRAC_CONST
(0.123222604562857), FRAC_CONST(0.992379055464567) },

1598 { 
FRAC_CONST
(0.116724905981611), FRAC_CONST(0.993164284659685) },

1599 { 
FRAC_CONST
(0.110222207293883), FRAC_CONST(0.993906970002356) },

1600 { 
FRAC_CONST
(0.103714787053643), FRAC_CONST(0.994607079678411) },

1601 { 
FRAC_CONST
(0.097202924017115), FRAC_CONST(0.995264583697482) },

1602 { 
FRAC_CONST
(0.090686897130838), FRAC_CONST(0.995879453894286) },

1603 { 
FRAC_CONST
(0.084166985519718), FRAC_CONST(0.996451663929828) },

1604 { 
FRAC_CONST
(0.077643468475068), FRAC_CONST(0.996981189292537) },

1605 { 
FRAC_CONST
(0.071116625442645), FRAC_CONST(0.997468007299307) },

1606 { 
FRAC_CONST
(0.064586736010684), FRAC_CONST(0.997912097096476) },

1607 { 
FRAC_CONST
(0.058054079897912), FRAC_CONST(0.998313439660714) },

1608 { 
FRAC_CONST
(0.051518936941578), FRAC_CONST(0.998672017799843) },

1609 { 
FRAC_CONST
(0.044981587085452), FRAC_CONST(0.998987816153567) },

1610 { 
FRAC_CONST
(0.038442310367847), FRAC_CONST(0.999260821194138) },

1611 { 
FRAC_CONST
(0.031901386909611), FRAC_CONST(0.999491021226926) },

1612 { 
FRAC_CONST
(0.025359096902136), FRAC_CONST(0.999678406390929) },

1613 { 
FRAC_CONST
(0.018815720595351), FRAC_CONST(0.999822968659191) },

1614 { 
FRAC_CONST
(0.012271538285720), FRAC_CONST(0.999924701839145) },

1615 { 
FRAC_CONST
(0.005726830304231), FRAC_CONST(0.999983601572879) }

1620 
ALIGN
 c⁄° 
com∂ex_t
 
	gmd˘_èb_240
[] =

1622 { 
FRAC_CONST
(0.999994645401696), FRAC_CONST(0.003272486506527) },

1623 { 
FRAC_CONST
(0.999566308502021), FRAC_CONST(0.029448173247963) },

1624 { 
FRAC_CONST
(0.998452918783950), FRAC_CONST(0.055603677682425) },

1625 { 
FRAC_CONST
(0.996655239309180), FRAC_CONST(0.081721074133668) },

1626 { 
FRAC_CONST
(0.994174502117428), FRAC_CONST(0.107782463042759) },

1627 { 
FRAC_CONST
(0.991012407382049), FRAC_CONST(0.133769983235535) },

1628 { 
FRAC_CONST
(0.987171122244825), FRAC_CONST(0.159665824163761) },

1629 { 
FRAC_CONST
(0.982653279330712), FRAC_CONST(0.185452238111591) },

1630 { 
FRAC_CONST
(0.977461974943572), FRAC_CONST(0.211111552358965) },

1631 { 
FRAC_CONST
(0.971600766944121), FRAC_CONST(0.236626181293610) },

1632 { 
FRAC_CONST
(0.965073672311547), FRAC_CONST(0.261978638463337) },

1633 { 
FRAC_CONST
(0.957885164390477), FRAC_CONST(0.287151548560387) },

1634 { 
FRAC_CONST
(0.950040169825165), FRAC_CONST(0.312127659329594) },

1635 { 
FRAC_CONST
(0.941544065183021), FRAC_CONST(0.336889853392220) },

1636 { 
FRAC_CONST
(0.932402673269775), FRAC_CONST(0.361421159977355) },

1637 { 
FRAC_CONST
(0.922622259138823), FRAC_CONST(0.385704766552831) },

1638 { 
FRAC_CONST
(0.912209525797468), FRAC_CONST(0.409724030347695) },

1639 { 
FRAC_CONST
(0.901171609613013), FRAC_CONST(0.433462489758331) },

1640 { 
FRAC_CONST
(0.889516075421856), FRAC_CONST(0.456903875630421) },

1641 { 
FRAC_CONST
(0.877250911344924), FRAC_CONST(0.480032122409011) },

1642 { 
FRAC_CONST
(0.864384523313017), FRAC_CONST(0.502831379149042) },

1643 { 
FRAC_CONST
(0.850925729305802), FRAC_CONST(0.525286020378792) },

1644 { 
FRAC_CONST
(0.836883753308409), FRAC_CONST(0.547380656808797) },

1645 { 
FRAC_CONST
(0.822268218989775), FRAC_CONST(0.569100145878898) },

1646 { 
FRAC_CONST
(0.807089143107059), FRAC_CONST(0.590429602136201) },

1647 { 
FRAC_CONST
(0.791356928640660), FRAC_CONST(0.611354407436816) },

1648 { 
FRAC_CONST
(0.775082357664531), FRAC_CONST(0.631860220964409) },

1649 { 
FRAC_CONST
(0.758276583956687), FRAC_CONST(0.651932989058674) },

1650 { 
FRAC_CONST
(0.740951125354959), FRAC_CONST(0.671558954847018) },

1651 { 
FRAC_CONST
(0.723117855863248), FRAC_CONST(0.690724667672829) },

1652 { 
FRAC_CONST
(0.704788997513670), FRAC_CONST(0.709416992313883) },

1653 { 
FRAC_CONST
(0.685977111990193), FRAC_CONST(0.727623117984575) },

1654 { 
FRAC_CONST
(0.666695092019479), FRAC_CONST(0.745330567115786) },

1655 { 
FRAC_CONST
(0.646956152534857), FRAC_CONST(0.762527203906388) },

1656 { 
FRAC_CONST
(0.626773821619469), FRAC_CONST(0.779201242640517) },

1657 { 
FRAC_CONST
(0.606161931234795), FRAC_CONST(0.795341255764910) },

1658 { 
FRAC_CONST
(0.585134607740916), FRAC_CONST(0.810936181720784) },

1659 { 
FRAC_CONST
(0.563706262215017), FRAC_CONST(0.825975332524873) },

1660 { 
FRAC_CONST
(0.541891580574752), FRAC_CONST(0.840448401094438) },

1661 { 
FRAC_CONST
(0.519705513513249), FRAC_CONST(0.854345468311227) },

1662 { 
FRAC_CONST
(0.497163266252654), FRAC_CONST(0.867657009819544) },

1663 { 
FRAC_CONST
(0.474280288123229), FRAC_CONST(0.880373902553765) },

1664 { 
FRAC_CONST
(0.451072261975153), FRAC_CONST(0.892487430990834) },

1665 { 
FRAC_CONST
(0.427555093430282), FRAC_CONST(0.903989293123443) },

1666 { 
FRAC_CONST
(0.403744899981227), FRAC_CONST(0.914871606149819) },

1667 { 
FRAC_CONST
(0.379657999945233), FRAC_CONST(0.925126911876195) },

1668 { 
FRAC_CONST
(0.355310901280416), FRAC_CONST(0.934748181828292) },

1669 { 
FRAC_CONST
(0.330720290272038), FRAC_CONST(0.943728822068278) },

1670 { 
FRAC_CONST
(0.305903020096554), FRAC_CONST(0.952062677713924) },

1671 { 
FRAC_CONST
(0.280876099271292), FRAC_CONST(0.959744037156857) },

1672 { 
FRAC_CONST
(0.255656679997665), FRAC_CONST(0.966767635977008) },

1673 { 
FRAC_CONST
(0.230262046405902), FRAC_CONST(0.973128660550580) },

1674 { 
FRAC_CONST
(0.204709602709380), FRAC_CONST(0.978822751349072) },

1675 { 
FRAC_CONST
(0.179016861276633), FRAC_CONST(0.983846005927077) },

1676 { 
FRAC_CONST
(0.153201430629259), FRAC_CONST(0.988194981596825) },

1677 { 
FRAC_CONST
(0.127281003373913), FRAC_CONST(0.991866697787626) },

1678 { 
FRAC_CONST
(0.101273344076683), FRAC_CONST(0.994858638088611) },

1679 { 
FRAC_CONST
(0.075196277088140), FRAC_CONST(0.997168751973348) },

1680 { 
FRAC_CONST
(0.049067674327418), FRAC_CONST(0.998795456205172) },

1681 { 
FRAC_CONST
(0.022905443033697), FRAC_CONST(0.999737635922260) }

1685 #ifde‡
SSR_DEC


1687 
ALIGN
 c⁄° 
com∂ex_t
 
	gmd˘_èb_512
[] =

1689 { 
FRAC_CONST
(0.999998823451702), FRAC_CONST(0.001533980186285) },

1690 { 
FRAC_CONST
(0.999904701082853), FRAC_CONST(0.013805388528060) },

1691 { 
FRAC_CONST
(0.999659996743959), FRAC_CONST(0.026074717829104) },

1692 { 
FRAC_CONST
(0.999264747286594), FRAC_CONST(0.038340120373553) },

1693 { 
FRAC_CONST
(0.998719012233873), FRAC_CONST(0.050599749036899) },

1694 { 
FRAC_CONST
(0.998022873771486), FRAC_CONST(0.062851757564161) },

1695 { 
FRAC_CONST
(0.997176436735326), FRAC_CONST(0.075094300847921) },

1696 { 
FRAC_CONST
(0.996179828595697), FRAC_CONST(0.087325535206192) },

1697 { 
FRAC_CONST
(0.995033199438119), FRAC_CONST(0.099543618660069) },

1698 { 
FRAC_CONST
(0.993736721940725), FRAC_CONST(0.111746711211127) },

1699 { 
FRAC_CONST
(0.992290591348257), FRAC_CONST(0.123932975118512) },

1700 { 
FRAC_CONST
(0.990695025442665), FRAC_CONST(0.136100575175706) },

1701 { 
FRAC_CONST
(0.988950264510303), FRAC_CONST(0.148247678986896) },

1702 { 
FRAC_CONST
(0.987056571305751), FRAC_CONST(0.160372457242928) },

1703 { 
FRAC_CONST
(0.985014231012240), FRAC_CONST(0.172473083996796) },

1704 { 
FRAC_CONST
(0.982823551198705), FRAC_CONST(0.184547736938620) },

1705 { 
FRAC_CONST
(0.980484861773469), FRAC_CONST(0.196594597670080) },

1706 { 
FRAC_CONST
(0.977998514934557), FRAC_CONST(0.208611851978263) },

1707 { 
FRAC_CONST
(0.975364885116657), FRAC_CONST(0.220597690108874) },

1708 { 
FRAC_CONST
(0.972584368934732), FRAC_CONST(0.232550307038775) },

1709 { 
FRAC_CONST
(0.969657385124292), FRAC_CONST(0.244467902747824) },

1710 { 
FRAC_CONST
(0.966584374478333), FRAC_CONST(0.256348682489943) },

1711 { 
FRAC_CONST
(0.963365799780954), FRAC_CONST(0.268190857063403) },

1712 { 
FRAC_CONST
(0.960002145737666), FRAC_CONST(0.279992643080273) },

1713 { 
FRAC_CONST
(0.956493918902395), FRAC_CONST(0.291752263234989) },

1714 { 
FRAC_CONST
(0.952841647601199), FRAC_CONST(0.303467946572011) },

1715 { 
FRAC_CONST
(0.949045881852701), FRAC_CONST(0.315137928752522) },

1716 { 
FRAC_CONST
(0.945107193285261), FRAC_CONST(0.326760452320132) },

1717 { 
FRAC_CONST
(0.941026175050889), FRAC_CONST(0.338333766965541) },

1718 { 
FRAC_CONST
(0.936803441735922), FRAC_CONST(0.349856129790135) },

1719 { 
FRAC_CONST
(0.932439629268462), FRAC_CONST(0.361325805568454) },

1720 { 
FRAC_CONST
(0.927935394822618), FRAC_CONST(0.372741067009516) },

1721 { 
FRAC_CONST
(0.923291416719528), FRAC_CONST(0.384100195016935) },

1722 { 
FRAC_CONST
(0.918508394325212), FRAC_CONST(0.395401478947816) },

1723 { 
FRAC_CONST
(0.913587047945251), FRAC_CONST(0.406643216870369) },

1724 { 
FRAC_CONST
(0.908528118716306), FRAC_CONST(0.417823715820212) },

1725 { 
FRAC_CONST
(0.903332368494512), FRAC_CONST(0.428941292055329) },

1726 { 
FRAC_CONST
(0.898000579740740), FRAC_CONST(0.439994271309633) },

1727 { 
FRAC_CONST
(0.892533555402765), FRAC_CONST(0.450980989045104) },

1728 { 
FRAC_CONST
(0.886932118794342), FRAC_CONST(0.461899790702463) },

1729 { 
FRAC_CONST
(0.881197113471222), FRAC_CONST(0.472749031950343) },

1730 { 
FRAC_CONST
(0.875329403104111), FRAC_CONST(0.483527078932919) },

1731 { 
FRAC_CONST
(0.869329871348607), FRAC_CONST(0.494232308515960) },

1732 { 
FRAC_CONST
(0.863199421712124), FRAC_CONST(0.504863108531268) },

1733 { 
FRAC_CONST
(0.856938977417829), FRAC_CONST(0.515417878019463) },

1734 { 
FRAC_CONST
(0.850549481265603), FRAC_CONST(0.525895027471085) },

1735 { 
FRAC_CONST
(0.844031895490066), FRAC_CONST(0.536292979065963) },

1736 { 
FRAC_CONST
(0.837387201615662), FRAC_CONST(0.546610166910835) },

1737 { 
FRAC_CONST
(0.830616400308846), FRAC_CONST(0.556845037275160) },

1738 { 
FRAC_CONST
(0.823720511227391), FRAC_CONST(0.566996048825109) },

1739 { 
FRAC_CONST
(0.816700572866828), FRAC_CONST(0.577061672855679) },

1740 { 
FRAC_CONST
(0.809557642404051), FRAC_CONST(0.587040393520918) },

1741 { 
FRAC_CONST
(0.802292795538116), FRAC_CONST(0.596930708062197) },

1742 { 
FRAC_CONST
(0.794907126328237), FRAC_CONST(0.606731127034524) },

1743 { 
FRAC_CONST
(0.787401747029031), FRAC_CONST(0.616440174530854) },

1744 { 
FRAC_CONST
(0.779777787923015), FRAC_CONST(0.626056388404344) },

1745 { 
FRAC_CONST
(0.772036397150385), FRAC_CONST(0.635578320488556) },

1746 { 
FRAC_CONST
(0.764178740536117), FRAC_CONST(0.645004536815544) },

1747 { 
FRAC_CONST
(0.756206001414395), FRAC_CONST(0.654333617831800) },

1748 { 
FRAC_CONST
(0.748119380450404), FRAC_CONST(0.663564158612040) },

1749 { 
FRAC_CONST
(0.739920095459516), FRAC_CONST(0.672694769070773) },

1750 { 
FRAC_CONST
(0.731609381223893), FRAC_CONST(0.681724074171650) },

1751 { 
FRAC_CONST
(0.723188489306527), FRAC_CONST(0.690650714134535) },

1752 { 
FRAC_CONST
(0.714658687862769), FRAC_CONST(0.699473344640284) },

1753 { 
FRAC_CONST
(0.706021261449340), FRAC_CONST(0.708190637033195) },

1754 { 
FRAC_CONST
(0.697277510830887), FRAC_CONST(0.716801278521100) },

1755 { 
FRAC_CONST
(0.688428752784091), FRAC_CONST(0.725303972373061) },

1756 { 
FRAC_CONST
(0.679476319899365), FRAC_CONST(0.733697438114660) },

1757 { 
FRAC_CONST
(0.670421560380173), FRAC_CONST(0.741980411720831) },

1758 { 
FRAC_CONST
(0.661265837839992), FRAC_CONST(0.750151645806215) },

1759 { 
FRAC_CONST
(0.652010531096960), FRAC_CONST(0.758209909813015) },

1760 { 
FRAC_CONST
(0.642657033966227), FRAC_CONST(0.766153990196313) },

1761 { 
FRAC_CONST
(0.633206755050057), FRAC_CONST(0.773982690606823) },

1762 { 
FRAC_CONST
(0.623661117525695), FRAC_CONST(0.781694832071059) },

1763 { 
FRAC_CONST
(0.614021558931038), FRAC_CONST(0.789289253168886) },

1764 { 
FRAC_CONST
(0.604289530948156), FRAC_CONST(0.796764810208419) },

1765 { 
FRAC_CONST
(0.594466499184665), FRAC_CONST(0.804120377398266) },

1766 { 
FRAC_CONST
(0.584553942953015), FRAC_CONST(0.811354847017064) },

1767 { 
FRAC_CONST
(0.574553355047716), FRAC_CONST(0.818467129580299) },

1768 { 
FRAC_CONST
(0.564466241520520), FRAC_CONST(0.825456154004377) },

1769 { 
FRAC_CONST
(0.554294121453620), FRAC_CONST(0.832320867767930) },

1770 { 
FRAC_CONST
(0.544038526730884), FRAC_CONST(0.839060237070313) },

1771 { 
FRAC_CONST
(0.533701001807153), FRAC_CONST(0.845673246987299) },

1772 { 
FRAC_CONST
(0.523283103475656), FRAC_CONST(0.852158901623920) },

1773 { 
FRAC_CONST
(0.512786400633563), FRAC_CONST(0.858516224264443) },

1774 { 
FRAC_CONST
(0.502212474045711), FRAC_CONST(0.864744257519462) },

1775 { 
FRAC_CONST
(0.491562916106550), FRAC_CONST(0.870842063470079) },

1776 { 
FRAC_CONST
(0.480839330600334), FRAC_CONST(0.876808723809146) },

1777 { 
FRAC_CONST
(0.470043332459596), FRAC_CONST(0.882643339979563) },

1778 { 
FRAC_CONST
(0.459176547521944), FRAC_CONST(0.888345033309596) },

1779 { 
FRAC_CONST
(0.448240612285220), FRAC_CONST(0.893912945145203) },

1780 { 
FRAC_CONST
(0.437237173661044), FRAC_CONST(0.899346236979341) },

1781 { 
FRAC_CONST
(0.426167888726800), FRAC_CONST(0.904644090578246) },

1782 { 
FRAC_CONST
(0.415034424476082), FRAC_CONST(0.909805708104652) },

1783 { 
FRAC_CONST
(0.403838457567654), FRAC_CONST(0.914830312237946) },

1784 { 
FRAC_CONST
(0.392581674072952), FRAC_CONST(0.919717146291227) },

1785 { 
FRAC_CONST
(0.381265769222162), FRAC_CONST(0.924465474325263) },

1786 { 
FRAC_CONST
(0.369892447148934), FRAC_CONST(0.929074581259316) },

1787 { 
FRAC_CONST
(0.358463420633737), FRAC_CONST(0.933543772978836) },

1788 { 
FRAC_CONST
(0.346980410845924), FRAC_CONST(0.937872376439990) },

1789 { 
FRAC_CONST
(0.335445147084532), FRAC_CONST(0.942059739771017) },

1790 { 
FRAC_CONST
(0.323859366517853), FRAC_CONST(0.946105232370403) },

1791 { 
FRAC_CONST
(0.312224813921825), FRAC_CONST(0.950008245001843) },

1792 { 
FRAC_CONST
(0.300543241417273), FRAC_CONST(0.953768189885990) },

1793 { 
FRAC_CONST
(0.288816408206049), FRAC_CONST(0.957384500788976) },

1794 { 
FRAC_CONST
(0.277046080306100), FRAC_CONST(0.960856633107680) },

1795 { 
FRAC_CONST
(0.265234030285512), FRAC_CONST(0.964184063951746) },

1796 { 
FRAC_CONST
(0.253382036995570), FRAC_CONST(0.967366292222329) },

1797 { 
FRAC_CONST
(0.241491885302869), FRAC_CONST(0.970402838687556) },

1798 { 
FRAC_CONST
(0.229565365820519), FRAC_CONST(0.973293246054698) },

1799 { 
FRAC_CONST
(0.217604274638484), FRAC_CONST(0.976037079039039) },

1800 { 
FRAC_CONST
(0.205610413053099), FRAC_CONST(0.978633924429423) },

1801 { 
FRAC_CONST
(0.193585587295804), FRAC_CONST(0.981083391150487) },

1802 { 
FRAC_CONST
(0.181531608261125), FRAC_CONST(0.983385110321551) },

1803 { 
FRAC_CONST
(0.169450291233968), FRAC_CONST(0.985538735312176) },

1804 { 
FRAC_CONST
(0.157343455616238), FRAC_CONST(0.987543941794359) },

1805 { 
FRAC_CONST
(0.145212924652848), FRAC_CONST(0.989400427791380) },

1806 { 
FRAC_CONST
(0.133060525157139), FRAC_CONST(0.991107913723277) },

1807 { 
FRAC_CONST
(0.120888087235777), FRAC_CONST(0.992666142448948) },

1808 { 
FRAC_CONST
(0.108697444013139), FRAC_CONST(0.994074879304879) },

1809 { 
FRAC_CONST
(0.096490431355253), FRAC_CONST(0.995333912140482) },

1810 { 
FRAC_CONST
(0.084268887593324), FRAC_CONST(0.996443051350043) },

1811 { 
FRAC_CONST
(0.072034653246889), FRAC_CONST(0.997402129901275) },

1812 { 
FRAC_CONST
(0.059789570746640), FRAC_CONST(0.998211003360478) },

1813 { 
FRAC_CONST
(0.047535484156959), FRAC_CONST(0.998869549914284) },

1814 { 
FRAC_CONST
(0.035274238898214), FRAC_CONST(0.999377670388003) },

1815 { 
FRAC_CONST
(0.023007681468839), FRAC_CONST(0.999735288260562) },

1816 { 
FRAC_CONST
(0.010737659167265), FRAC_CONST(0.999942349676024) }

1820 
ALIGN
 c⁄° 
com∂ex_t
 
	gmd˘_èb_64
[] =

1822 { 
FRAC_CONST
(0.999924701839145), FRAC_CONST(0.012271538285720) },

1823 { 
FRAC_CONST
(0.993906970002356), FRAC_CONST(0.110222207293883) },

1824 { 
FRAC_CONST
(0.978317370719628), FRAC_CONST(0.207111376192219) },

1825 { 
FRAC_CONST
(0.953306040354194), FRAC_CONST(0.302005949319228) },

1826 { 
FRAC_CONST
(0.919113851690058), FRAC_CONST(0.393992040061048) },

1827 { 
FRAC_CONST
(0.876070094195407), FRAC_CONST(0.482183772079123) },

1828 { 
FRAC_CONST
(0.824589302785025), FRAC_CONST(0.565731810783613) },

1829 { 
FRAC_CONST
(0.765167265622459), FRAC_CONST(0.643831542889791) },

1830 { 
FRAC_CONST
(0.698376249408973), FRAC_CONST(0.715730825283819) },

1831 { 
FRAC_CONST
(0.624859488142386), FRAC_CONST(0.780737228572094) },

1832 { 
FRAC_CONST
(0.545324988422046), FRAC_CONST(0.838224705554838) },

1833 { 
FRAC_CONST
(0.460538710958240), FRAC_CONST(0.887639620402854) },

1834 { 
FRAC_CONST
(0.371317193951838), FRAC_CONST(0.928506080473215) },

1835 { 
FRAC_CONST
(0.278519689385053), FRAC_CONST(0.960430519415566) },

1836 { 
FRAC_CONST
(0.183039887955141), FRAC_CONST(0.983105487431216) },

1837 { 
FRAC_CONST
(0.085797312344440), FRAC_CONST(0.996312612182778) }

1844 
ALIGN
 c⁄° 
com∂ex_t
 
	gmd˘_èb_2048
[] =

1846 { 
FRAC_CONST
(0.031249997702054), FRAC_CONST(0.000011984224612) },

1847 { 
FRAC_CONST
(0.031249813866531), FRAC_CONST(0.000107857810004) },

1848 { 
FRAC_CONST
(0.031249335895858), FRAC_CONST(0.000203730380198) },

1849 { 
FRAC_CONST
(0.031248563794535), FRAC_CONST(0.000299601032804) },

1850 { 
FRAC_CONST
(0.031247497569829), FRAC_CONST(0.000395468865451) },

1851 { 
FRAC_CONST
(0.031246137231775), FRAC_CONST(0.000491332975794) },

1852 { 
FRAC_CONST
(0.031244482793177), FRAC_CONST(0.000587192461525) },

1853 { 
FRAC_CONST
(0.031242534269608), FRAC_CONST(0.000683046420376) },

1854 { 
FRAC_CONST
(0.031240291679407), FRAC_CONST(0.000778893950134) },

1855 { 
FRAC_CONST
(0.031237755043684), FRAC_CONST(0.000874734148645) },

1856 { 
FRAC_CONST
(0.031234924386313), FRAC_CONST(0.000970566113826) },

1857 { 
FRAC_CONST
(0.031231799733938), FRAC_CONST(0.001066388943669) },

1858 { 
FRAC_CONST
(0.031228381115970), FRAC_CONST(0.001162201736253) },

1859 { 
FRAC_CONST
(0.031224668564585), FRAC_CONST(0.001258003589751) },

1860 { 
FRAC_CONST
(0.031220662114728), FRAC_CONST(0.001353793602441) },

1861 { 
FRAC_CONST
(0.031216361804108), FRAC_CONST(0.001449570872710) },

1862 { 
FRAC_CONST
(0.031211767673203), FRAC_CONST(0.001545334499065) },

1863 { 
FRAC_CONST
(0.031206879765253), FRAC_CONST(0.001641083580144) },

1864 { 
FRAC_CONST
(0.031201698126266), FRAC_CONST(0.001736817214719) },

1865 { 
FRAC_CONST
(0.031196222805014), FRAC_CONST(0.001832534501709) },

1866 { 
FRAC_CONST
(0.031190453853031), FRAC_CONST(0.001928234540186) },

1867 { 
FRAC_CONST
(0.031184391324617), FRAC_CONST(0.002023916429386) },

1868 { 
FRAC_CONST
(0.031178035276836), FRAC_CONST(0.002119579268713) },

1869 { 
FRAC_CONST
(0.031171385769513), FRAC_CONST(0.002215222157753) },

1870 { 
FRAC_CONST
(0.031164442865236), FRAC_CONST(0.002310844196278) },

1871 { 
FRAC_CONST
(0.031157206629353), FRAC_CONST(0.002406444484258) },

1872 { 
FRAC_CONST
(0.031149677129975), FRAC_CONST(0.002502022121865) },

1873 { 
FRAC_CONST
(0.031141854437973), FRAC_CONST(0.002597576209488) },

1874 { 
FRAC_CONST
(0.031133738626977), FRAC_CONST(0.002693105847734) },

1875 { 
FRAC_CONST
(0.031125329773375), FRAC_CONST(0.002788610137442) },

1876 { 
FRAC_CONST
(0.031116627956316), FRAC_CONST(0.002884088179689) },

1877 { 
FRAC_CONST
(0.031107633257703), FRAC_CONST(0.002979539075801) },

1878 { 
FRAC_CONST
(0.031098345762200), FRAC_CONST(0.003074961927355) },

1879 { 
FRAC_CONST
(0.031088765557222), FRAC_CONST(0.003170355836197) },

1880 { 
FRAC_CONST
(0.031078892732942), FRAC_CONST(0.003265719904442) },

1881 { 
FRAC_CONST
(0.031068727382288), FRAC_CONST(0.003361053234488) },

1882 { 
FRAC_CONST
(0.031058269600939), FRAC_CONST(0.003456354929021) },

1883 { 
FRAC_CONST
(0.031047519487329), FRAC_CONST(0.003551624091024) },

1884 { 
FRAC_CONST
(0.031036477142640), FRAC_CONST(0.003646859823790) },

1885 { 
FRAC_CONST
(0.031025142670809), FRAC_CONST(0.003742061230921) },

1886 { 
FRAC_CONST
(0.031013516178519), FRAC_CONST(0.003837227416347) },

1887 { 
FRAC_CONST
(0.031001597775203), FRAC_CONST(0.003932357484328) },

1888 { 
FRAC_CONST
(0.030989387573042), FRAC_CONST(0.004027450539462) },

1889 { 
FRAC_CONST
(0.030976885686963), FRAC_CONST(0.004122505686697) },

1890 { 
FRAC_CONST
(0.030964092234638), FRAC_CONST(0.004217522031340) },

1891 { 
FRAC_CONST
(0.030951007336485), FRAC_CONST(0.004312498679058) },

1892 { 
FRAC_CONST
(0.030937631115663), FRAC_CONST(0.004407434735897) },

1893 { 
FRAC_CONST
(0.030923963698074), FRAC_CONST(0.004502329308281) },

1894 { 
FRAC_CONST
(0.030910005212362), FRAC_CONST(0.004597181503027) },

1895 { 
FRAC_CONST
(0.030895755789908), FRAC_CONST(0.004691990427350) },

1896 { 
FRAC_CONST
(0.030881215564835), FRAC_CONST(0.004786755188872) },

1897 { 
FRAC_CONST
(0.030866384674000), FRAC_CONST(0.004881474895632) },

1898 { 
FRAC_CONST
(0.030851263256996), FRAC_CONST(0.004976148656090) },

1899 { 
FRAC_CONST
(0.030835851456154), FRAC_CONST(0.005070775579142) },

1900 { 
FRAC_CONST
(0.030820149416533), FRAC_CONST(0.005165354774124) },

1901 { 
FRAC_CONST
(0.030804157285929), FRAC_CONST(0.005259885350819) },

1902 { 
FRAC_CONST
(0.030787875214864), FRAC_CONST(0.005354366419469) },

1903 { 
FRAC_CONST
(0.030771303356593), FRAC_CONST(0.005448797090784) },

1904 { 
FRAC_CONST
(0.030754441867095), FRAC_CONST(0.005543176475946) },

1905 { 
FRAC_CONST
(0.030737290905077), FRAC_CONST(0.005637503686619) },

1906 { 
FRAC_CONST
(0.030719850631972), FRAC_CONST(0.005731777834961) },

1907 { 
FRAC_CONST
(0.030702121211932), FRAC_CONST(0.005825998033626) },

1908 { 
FRAC_CONST
(0.030684102811835), FRAC_CONST(0.005920163395780) },

1909 { 
FRAC_CONST
(0.030665795601276), FRAC_CONST(0.006014273035101) },

1910 { 
FRAC_CONST
(0.030647199752570), FRAC_CONST(0.006108326065793) },

1911 { 
FRAC_CONST
(0.030628315440748), FRAC_CONST(0.006202321602594) },

1912 { 
FRAC_CONST
(0.030609142843557), FRAC_CONST(0.006296258760782) },

1913 { 
FRAC_CONST
(0.030589682141455), FRAC_CONST(0.006390136656185) },

1914 { 
FRAC_CONST
(0.030569933517616), FRAC_CONST(0.006483954405188) },

1915 { 
FRAC_CONST
(0.030549897157919), FRAC_CONST(0.006577711124743) },

1916 { 
FRAC_CONST
(0.030529573250956), FRAC_CONST(0.006671405932375) },

1917 { 
FRAC_CONST
(0.030508961988022), FRAC_CONST(0.006765037946194) },

1918 { 
FRAC_CONST
(0.030488063563118), FRAC_CONST(0.006858606284900) },

1919 { 
FRAC_CONST
(0.030466878172949), FRAC_CONST(0.006952110067791) },

1920 { 
FRAC_CONST
(0.030445406016919), FRAC_CONST(0.007045548414774) },

1921 { 
FRAC_CONST
(0.030423647297133), FRAC_CONST(0.007138920446372) },

1922 { 
FRAC_CONST
(0.030401602218392), FRAC_CONST(0.007232225283733) },

1923 { 
FRAC_CONST
(0.030379270988192), FRAC_CONST(0.007325462048634) },

1924 { 
FRAC_CONST
(0.030356653816724), FRAC_CONST(0.007418629863497) },

1925 { 
FRAC_CONST
(0.030333750916869), FRAC_CONST(0.007511727851390) },

1926 { 
FRAC_CONST
(0.030310562504198), FRAC_CONST(0.007604755136040) },

1927 { 
FRAC_CONST
(0.030287088796968), FRAC_CONST(0.007697710841838) },

1928 { 
FRAC_CONST
(0.030263330016124), FRAC_CONST(0.007790594093851) },

1929 { 
FRAC_CONST
(0.030239286385293), FRAC_CONST(0.007883404017824) },

1930 { 
FRAC_CONST
(0.030214958130781), FRAC_CONST(0.007976139740197) },

1931 { 
FRAC_CONST
(0.030190345481576), FRAC_CONST(0.008068800388104) },

1932 { 
FRAC_CONST
(0.030165448669342), FRAC_CONST(0.008161385089390) },

1933 { 
FRAC_CONST
(0.030140267928416), FRAC_CONST(0.008253892972610) },

1934 { 
FRAC_CONST
(0.030114803495809), FRAC_CONST(0.008346323167047) },

1935 { 
FRAC_CONST
(0.030089055611203), FRAC_CONST(0.008438674802711) },

1936 { 
FRAC_CONST
(0.030063024516947), FRAC_CONST(0.008530947010354) },

1937 { 
FRAC_CONST
(0.030036710458054), FRAC_CONST(0.008623138921475) },

1938 { 
FRAC_CONST
(0.030010113682202), FRAC_CONST(0.008715249668328) },

1939 { 
FRAC_CONST
(0.029983234439732), FRAC_CONST(0.008807278383932) },

1940 { 
FRAC_CONST
(0.029956072983640), FRAC_CONST(0.008899224202078) },

1941 { 
FRAC_CONST
(0.029928629569580), FRAC_CONST(0.008991086257336) },

1942 { 
FRAC_CONST
(0.029900904455860), FRAC_CONST(0.009082863685067) },

1943 { 
FRAC_CONST
(0.029872897903441), FRAC_CONST(0.009174555621425) },

1944 { 
FRAC_CONST
(0.029844610175929), FRAC_CONST(0.009266161203371) },

1945 { 
FRAC_CONST
(0.029816041539579), FRAC_CONST(0.009357679568679) },

1946 { 
FRAC_CONST
(0.029787192263292), FRAC_CONST(0.009449109855944) },

1947 { 
FRAC_CONST
(0.029758062618606), FRAC_CONST(0.009540451204587) },

1948 { 
FRAC_CONST
(0.029728652879702), FRAC_CONST(0.009631702754871) },

1949 { 
FRAC_CONST
(0.029698963323395), FRAC_CONST(0.009722863647900) },

1950 { 
FRAC_CONST
(0.029668994229134), FRAC_CONST(0.009813933025633) },

1951 { 
FRAC_CONST
(0.029638745879000), FRAC_CONST(0.009904910030891) },

1952 { 
FRAC_CONST
(0.029608218557702), FRAC_CONST(0.009995793807363) },

1953 { 
FRAC_CONST
(0.029577412552575), FRAC_CONST(0.010086583499618) },

1954 { 
FRAC_CONST
(0.029546328153577), FRAC_CONST(0.010177278253107) },

1955 { 
FRAC_CONST
(0.029514965653285), FRAC_CONST(0.010267877214177) },

1956 { 
FRAC_CONST
(0.029483325346896), FRAC_CONST(0.010358379530076) },

1957 { 
FRAC_CONST
(0.029451407532220), FRAC_CONST(0.010448784348962) },

1958 { 
FRAC_CONST
(0.029419212509679), FRAC_CONST(0.010539090819911) },

1959 { 
FRAC_CONST
(0.029386740582307), FRAC_CONST(0.010629298092923) },

1960 { 
FRAC_CONST
(0.029353992055740), FRAC_CONST(0.010719405318933) },

1961 { 
FRAC_CONST
(0.029320967238220), FRAC_CONST(0.010809411649818) },

1962 { 
FRAC_CONST
(0.029287666440590), FRAC_CONST(0.010899316238403) },

1963 { 
FRAC_CONST
(0.029254089976290), FRAC_CONST(0.010989118238474) },

1964 { 
FRAC_CONST
(0.029220238161353), FRAC_CONST(0.011078816804778) },

1965 { 
FRAC_CONST
(0.029186111314406), FRAC_CONST(0.011168411093039) },

1966 { 
FRAC_CONST
(0.029151709756664), FRAC_CONST(0.011257900259961) },

1967 { 
FRAC_CONST
(0.029117033811927), FRAC_CONST(0.011347283463239) },

1968 { 
FRAC_CONST
(0.029082083806579), FRAC_CONST(0.011436559861563) },

1969 { 
FRAC_CONST
(0.029046860069582), FRAC_CONST(0.011525728614630) },

1970 { 
FRAC_CONST
(0.029011362932476), FRAC_CONST(0.011614788883150) },

1971 { 
FRAC_CONST
(0.028975592729373), FRAC_CONST(0.011703739828853) },

1972 { 
FRAC_CONST
(0.028939549796957), FRAC_CONST(0.011792580614500) },

1973 { 
FRAC_CONST
(0.028903234474475), FRAC_CONST(0.011881310403886) },

1974 { 
FRAC_CONST
(0.028866647103744), FRAC_CONST(0.011969928361855) },

1975 { 
FRAC_CONST
(0.028829788029135), FRAC_CONST(0.012058433654299) },

1976 { 
FRAC_CONST
(0.028792657597583), FRAC_CONST(0.012146825448172) },

1977 { 
FRAC_CONST
(0.028755256158571), FRAC_CONST(0.012235102911499) },

1978 { 
FRAC_CONST
(0.028717584064137), FRAC_CONST(0.012323265213377) },

1979 { 
FRAC_CONST
(0.028679641668864), FRAC_CONST(0.012411311523990) },

1980 { 
FRAC_CONST
(0.028641429329882), FRAC_CONST(0.012499241014612) },

1981 { 
FRAC_CONST
(0.028602947406859), FRAC_CONST(0.012587052857618) },

1982 { 
FRAC_CONST
(0.028564196262001), FRAC_CONST(0.012674746226488) },

1983 { 
FRAC_CONST
(0.028525176260050), FRAC_CONST(0.012762320295819) },

1984 { 
FRAC_CONST
(0.028485887768276), FRAC_CONST(0.012849774241331) },

1985 { 
FRAC_CONST
(0.028446331156478), FRAC_CONST(0.012937107239875) },

1986 { 
FRAC_CONST
(0.028406506796976), FRAC_CONST(0.013024318469437) },

1987 { 
FRAC_CONST
(0.028366415064615), FRAC_CONST(0.013111407109155) },

1988 { 
FRAC_CONST
(0.028326056336751), FRAC_CONST(0.013198372339315) },

1989 { 
FRAC_CONST
(0.028285430993258), FRAC_CONST(0.013285213341368) },

1990 { 
FRAC_CONST
(0.028244539416515), FRAC_CONST(0.013371929297933) },

1991 { 
FRAC_CONST
(0.028203381991411), FRAC_CONST(0.013458519392807) },

1992 { 
FRAC_CONST
(0.028161959105334), FRAC_CONST(0.013544982810971) },

1993 { 
FRAC_CONST
(0.028120271148172), FRAC_CONST(0.013631318738598) },

1994 { 
FRAC_CONST
(0.028078318512309), FRAC_CONST(0.013717526363062) },

1995 { 
FRAC_CONST
(0.028036101592619), FRAC_CONST(0.013803604872943) },

1996 { 
FRAC_CONST
(0.027993620786463), FRAC_CONST(0.013889553458039) },

1997 { 
FRAC_CONST
(0.027950876493687), FRAC_CONST(0.013975371309367) },

1998 { 
FRAC_CONST
(0.027907869116616), FRAC_CONST(0.014061057619178) },

1999 { 
FRAC_CONST
(0.027864599060052), FRAC_CONST(0.014146611580959) },

2000 { 
FRAC_CONST
(0.027821066731270), FRAC_CONST(0.014232032389445) },

2001 { 
FRAC_CONST
(0.027777272540012), FRAC_CONST(0.014317319240622) },

2002 { 
FRAC_CONST
(0.027733216898487), FRAC_CONST(0.014402471331737) },

2003 { 
FRAC_CONST
(0.027688900221361), FRAC_CONST(0.014487487861307) },

2004 { 
FRAC_CONST
(0.027644322925762), FRAC_CONST(0.014572368029123) },

2005 { 
FRAC_CONST
(0.027599485431266), FRAC_CONST(0.014657111036262) },

2006 { 
FRAC_CONST
(0.027554388159903), FRAC_CONST(0.014741716085090) },

2007 { 
FRAC_CONST
(0.027509031536144), FRAC_CONST(0.014826182379271) },

2008 { 
FRAC_CONST
(0.027463415986904), FRAC_CONST(0.014910509123778) },

2009 { 
FRAC_CONST
(0.027417541941533), FRAC_CONST(0.014994695524894) },

2010 { 
FRAC_CONST
(0.027371409831816), FRAC_CONST(0.015078740790225) },

2011 { 
FRAC_CONST
(0.027325020091965), FRAC_CONST(0.015162644128704) },

2012 { 
FRAC_CONST
(0.027278373158618), FRAC_CONST(0.015246404750603) },

2013 { 
FRAC_CONST
(0.027231469470833), FRAC_CONST(0.015330021867534) },

2014 { 
FRAC_CONST
(0.027184309470088), FRAC_CONST(0.015413494692460) },

2015 { 
FRAC_CONST
(0.027136893600268), FRAC_CONST(0.015496822439704) },

2016 { 
FRAC_CONST
(0.027089222307671), FRAC_CONST(0.015580004324954) },

2017 { 
FRAC_CONST
(0.027041296040997), FRAC_CONST(0.015663039565269) },

2018 { 
FRAC_CONST
(0.026993115251345), FRAC_CONST(0.015745927379091) },

2019 { 
FRAC_CONST
(0.026944680392213), FRAC_CONST(0.015828666986247) },

2020 { 
FRAC_CONST
(0.026895991919487), FRAC_CONST(0.015911257607961) },

2021 { 
FRAC_CONST
(0.026847050291442), FRAC_CONST(0.015993698466859) },

2022 { 
FRAC_CONST
(0.026797855968734), FRAC_CONST(0.016075988786976) },

2023 { 
FRAC_CONST
(0.026748409414401), FRAC_CONST(0.016158127793763) },

2024 { 
FRAC_CONST
(0.026698711093851), FRAC_CONST(0.016240114714099) },

2025 { 
FRAC_CONST
(0.026648761474864), FRAC_CONST(0.016321948776289) },

2026 { 
FRAC_CONST
(0.026598561027585), FRAC_CONST(0.016403629210082) },

2027 { 
FRAC_CONST
(0.026548110224519), FRAC_CONST(0.016485155246669) },

2028 { 
FRAC_CONST
(0.026497409540530), FRAC_CONST(0.016566526118696) },

2029 { 
FRAC_CONST
(0.026446459452830), FRAC_CONST(0.016647741060271) },

2030 { 
FRAC_CONST
(0.026395260440982), FRAC_CONST(0.016728799306966) },

2031 { 
FRAC_CONST
(0.026343812986890), FRAC_CONST(0.016809700095831) },

2032 { 
FRAC_CONST
(0.026292117574797), FRAC_CONST(0.016890442665397) },

2033 { 
FRAC_CONST
(0.026240174691280), FRAC_CONST(0.016971026255683) },

2034 { 
FRAC_CONST
(0.026187984825246), FRAC_CONST(0.017051450108208) },

2035 { 
FRAC_CONST
(0.026135548467924), FRAC_CONST(0.017131713465990) },

2036 { 
FRAC_CONST
(0.026082866112867), FRAC_CONST(0.017211815573560) },

2037 { 
FRAC_CONST
(0.026029938255941), FRAC_CONST(0.017291755676967) },

2038 { 
FRAC_CONST
(0.025976765395322), FRAC_CONST(0.017371533023784) },

2039 { 
FRAC_CONST
(0.025923348031494), FRAC_CONST(0.017451146863116) },

2040 { 
FRAC_CONST
(0.025869686667242), FRAC_CONST(0.017530596445607) },

2041 { 
FRAC_CONST
(0.025815781807646), FRAC_CONST(0.017609881023449) },

2042 { 
FRAC_CONST
(0.025761633960080), FRAC_CONST(0.017688999850383) },

2043 { 
FRAC_CONST
(0.025707243634204), FRAC_CONST(0.017767952181715) },

2044 { 
FRAC_CONST
(0.025652611341960), FRAC_CONST(0.017846737274313) },

2045 { 
FRAC_CONST
(0.025597737597568), FRAC_CONST(0.017925354386623) },

2046 { 
FRAC_CONST
(0.025542622917522), FRAC_CONST(0.018003802778671) },

2047 { 
FRAC_CONST
(0.025487267820581), FRAC_CONST(0.018082081712071) },

2048 { 
FRAC_CONST
(0.025431672827768), FRAC_CONST(0.018160190450031) },

2049 { 
FRAC_CONST
(0.025375838462365), FRAC_CONST(0.018238128257362) },

2050 { 
FRAC_CONST
(0.025319765249906), FRAC_CONST(0.018315894400484) },

2051 { 
FRAC_CONST
(0.025263453718173), FRAC_CONST(0.018393488147432) },

2052 { 
FRAC_CONST
(0.025206904397193), FRAC_CONST(0.018470908767865) },

2053 { 
FRAC_CONST
(0.025150117819228), FRAC_CONST(0.018548155533070) },

2054 { 
FRAC_CONST
(0.025093094518776), FRAC_CONST(0.018625227715971) },

2055 { 
FRAC_CONST
(0.025035835032562), FRAC_CONST(0.018702124591135) },

2056 { 
FRAC_CONST
(0.024978339899534), FRAC_CONST(0.018778845434780) },

2057 { 
FRAC_CONST
(0.024920609660858), FRAC_CONST(0.018855389524780) },

2058 { 
FRAC_CONST
(0.024862644859912), FRAC_CONST(0.018931756140672) },

2059 { 
FRAC_CONST
(0.024804446042284), FRAC_CONST(0.019007944563666) },

2060 { 
FRAC_CONST
(0.024746013755764), FRAC_CONST(0.019083954076646) },

2061 { 
FRAC_CONST
(0.024687348550337), FRAC_CONST(0.019159783964183) },

2062 { 
FRAC_CONST
(0.024628450978184), FRAC_CONST(0.019235433512536) },

2063 { 
FRAC_CONST
(0.024569321593670), FRAC_CONST(0.019310902009663) },

2064 { 
FRAC_CONST
(0.024509960953345), FRAC_CONST(0.019386188745225) },

2065 { 
FRAC_CONST
(0.024450369615932), FRAC_CONST(0.019461293010596) },

2066 { 
FRAC_CONST
(0.024390548142329), FRAC_CONST(0.019536214098866) },

2067 { 
FRAC_CONST
(0.024330497095598), FRAC_CONST(0.019610951304848) },

2068 { 
FRAC_CONST
(0.024270217040961), FRAC_CONST(0.019685503925087) },

2069 { 
FRAC_CONST
(0.024209708545799), FRAC_CONST(0.019759871257867) },

2070 { 
FRAC_CONST
(0.024148972179639), FRAC_CONST(0.019834052603212) },

2071 { 
FRAC_CONST
(0.024088008514157), FRAC_CONST(0.019908047262901) },

2072 { 
FRAC_CONST
(0.024026818123164), FRAC_CONST(0.019981854540467) },

2073 { 
FRAC_CONST
(0.023965401582609), FRAC_CONST(0.020055473741208) },

2074 { 
FRAC_CONST
(0.023903759470567), FRAC_CONST(0.020128904172192) },

2075 { 
FRAC_CONST
(0.023841892367236), FRAC_CONST(0.020202145142264) },

2076 { 
FRAC_CONST
(0.023779800854935), FRAC_CONST(0.020275195962052) },

2077 { 
FRAC_CONST
(0.023717485518092), FRAC_CONST(0.020348055943974) },

2078 { 
FRAC_CONST
(0.023654946943242), FRAC_CONST(0.020420724402244) },

2079 { 
FRAC_CONST
(0.023592185719023), FRAC_CONST(0.020493200652878) },

2080 { 
FRAC_CONST
(0.023529202436167), FRAC_CONST(0.020565484013703) },

2081 { 
FRAC_CONST
(0.023465997687496), FRAC_CONST(0.020637573804361) },

2082 { 
FRAC_CONST
(0.023402572067918), FRAC_CONST(0.020709469346314) },

2083 { 
FRAC_CONST
(0.023338926174419), FRAC_CONST(0.020781169962854) },

2084 { 
FRAC_CONST
(0.023275060606058), FRAC_CONST(0.020852674979108) },

2085 { 
FRAC_CONST
(0.023210975963963), FRAC_CONST(0.020923983722044) },

2086 { 
FRAC_CONST
(0.023146672851322), FRAC_CONST(0.020995095520475) },

2087 { 
FRAC_CONST
(0.023082151873380), FRAC_CONST(0.021066009705072) },

2088 { 
FRAC_CONST
(0.023017413637435), FRAC_CONST(0.021136725608363) },

2089 { 
FRAC_CONST
(0.022952458752826), FRAC_CONST(0.021207242564742) },

2090 { 
FRAC_CONST
(0.022887287830934), FRAC_CONST(0.021277559910478) },

2091 { 
FRAC_CONST
(0.022821901485173), FRAC_CONST(0.021347676983716) },

2092 { 
FRAC_CONST
(0.022756300330983), FRAC_CONST(0.021417593124488) },

2093 { 
FRAC_CONST
(0.022690484985827), FRAC_CONST(0.021487307674717) },

2094 { 
FRAC_CONST
(0.022624456069185), FRAC_CONST(0.021556819978223) },

2095 { 
FRAC_CONST
(0.022558214202547), FRAC_CONST(0.021626129380729) },

2096 { 
FRAC_CONST
(0.022491760009405), FRAC_CONST(0.021695235229869) },

2097 { 
FRAC_CONST
(0.022425094115252), FRAC_CONST(0.021764136875192) },

2098 { 
FRAC_CONST
(0.022358217147572), FRAC_CONST(0.021832833668171) },

2099 { 
FRAC_CONST
(0.022291129735838), FRAC_CONST(0.021901324962204) },

2100 { 
FRAC_CONST
(0.022223832511501), FRAC_CONST(0.021969610112625) },

2101 { 
FRAC_CONST
(0.022156326107988), FRAC_CONST(0.022037688476709) },

2102 { 
FRAC_CONST
(0.022088611160696), FRAC_CONST(0.022105559413676) },

2103 { 
FRAC_CONST
(0.022020688306983), FRAC_CONST(0.022173222284699) },

2104 { 
FRAC_CONST
(0.021952558186166), FRAC_CONST(0.022240676452909) },

2105 { 
FRAC_CONST
(0.021884221439510), FRAC_CONST(0.022307921283403) },

2106 { 
FRAC_CONST
(0.021815678710228), FRAC_CONST(0.022374956143245) },

2107 { 
FRAC_CONST
(0.021746930643469), FRAC_CONST(0.022441780401478) },

2108 { 
FRAC_CONST
(0.021677977886316), FRAC_CONST(0.022508393429127) },

2109 { 
FRAC_CONST
(0.021608821087780), FRAC_CONST(0.022574794599206) },

2110 { 
FRAC_CONST
(0.021539460898790), FRAC_CONST(0.022640983286719) },

2111 { 
FRAC_CONST
(0.021469897972190), FRAC_CONST(0.022706958868676) },

2112 { 
FRAC_CONST
(0.021400132962735), FRAC_CONST(0.022772720724087) },

2113 { 
FRAC_CONST
(0.021330166527077), FRAC_CONST(0.022838268233979) },

2114 { 
FRAC_CONST
(0.021259999323769), FRAC_CONST(0.022903600781391) },

2115 { 
FRAC_CONST
(0.021189632013250), FRAC_CONST(0.022968717751391) },

2116 { 
FRAC_CONST
(0.021119065257845), FRAC_CONST(0.023033618531071) },

2117 { 
FRAC_CONST
(0.021048299721754), FRAC_CONST(0.023098302509561) },

2118 { 
FRAC_CONST
(0.020977336071050), FRAC_CONST(0.023162769078031) },

2119 { 
FRAC_CONST
(0.020906174973670), FRAC_CONST(0.023227017629698) },

2120 { 
FRAC_CONST
(0.020834817099409), FRAC_CONST(0.023291047559828) },

2121 { 
FRAC_CONST
(0.020763263119915), FRAC_CONST(0.023354858265748) },

2122 { 
FRAC_CONST
(0.020691513708680), FRAC_CONST(0.023418449146848) },

2123 { 
FRAC_CONST
(0.020619569541038), FRAC_CONST(0.023481819604585) },

2124 { 
FRAC_CONST
(0.020547431294155), FRAC_CONST(0.023544969042494) },

2125 { 
FRAC_CONST
(0.020475099647023), FRAC_CONST(0.023607896866186) },

2126 { 
FRAC_CONST
(0.020402575280455), FRAC_CONST(0.023670602483363) },

2127 { 
FRAC_CONST
(0.020329858877078), FRAC_CONST(0.023733085303813) },

2128 { 
FRAC_CONST
(0.020256951121327), FRAC_CONST(0.023795344739427) },

2129 { 
FRAC_CONST
(0.020183852699437), FRAC_CONST(0.023857380204193) },

2130 { 
FRAC_CONST
(0.020110564299439), FRAC_CONST(0.023919191114211) },

2131 { 
FRAC_CONST
(0.020037086611150), FRAC_CONST(0.023980776887692) },

2132 { 
FRAC_CONST
(0.019963420326171), FRAC_CONST(0.024042136944968) },

2133 { 
FRAC_CONST
(0.019889566137877), FRAC_CONST(0.024103270708495) },

2134 { 
FRAC_CONST
(0.019815524741412), FRAC_CONST(0.024164177602859) },

2135 { 
FRAC_CONST
(0.019741296833681), FRAC_CONST(0.024224857054779) },

2136 { 
FRAC_CONST
(0.019666883113346), FRAC_CONST(0.024285308493120) },

2137 { 
FRAC_CONST
(0.019592284280817), FRAC_CONST(0.024345531348888) },

2138 { 
FRAC_CONST
(0.019517501038246), FRAC_CONST(0.024405525055242) },

2139 { 
FRAC_CONST
(0.019442534089523), FRAC_CONST(0.024465289047500) },

2140 { 
FRAC_CONST
(0.019367384140264), FRAC_CONST(0.024524822763141) },

2141 { 
FRAC_CONST
(0.019292051897809), FRAC_CONST(0.024584125641809) },

2142 { 
FRAC_CONST
(0.019216538071215), FRAC_CONST(0.024643197125323) },

2143 { 
FRAC_CONST
(0.019140843371246), FRAC_CONST(0.024702036657681) },

2144 { 
FRAC_CONST
(0.019064968510369), FRAC_CONST(0.024760643685063) },

2145 { 
FRAC_CONST
(0.018988914202748), FRAC_CONST(0.024819017655836) },

2146 { 
FRAC_CONST
(0.018912681164234), FRAC_CONST(0.024877158020562) },

2147 { 
FRAC_CONST
(0.018836270112363), FRAC_CONST(0.024935064232003) },

2148 { 
FRAC_CONST
(0.018759681766343), FRAC_CONST(0.024992735745123) },

2149 { 
FRAC_CONST
(0.018682916847054), FRAC_CONST(0.025050172017095) },

2150 { 
FRAC_CONST
(0.018605976077037), FRAC_CONST(0.025107372507308) },

2151 { 
FRAC_CONST
(0.018528860180486), FRAC_CONST(0.025164336677369) },

2152 { 
FRAC_CONST
(0.018451569883247), FRAC_CONST(0.025221063991110) },

2153 { 
FRAC_CONST
(0.018374105912805), FRAC_CONST(0.025277553914591) },

2154 { 
FRAC_CONST
(0.018296468998280), FRAC_CONST(0.025333805916107) },

2155 { 
FRAC_CONST
(0.018218659870421), FRAC_CONST(0.025389819466194) },

2156 { 
FRAC_CONST
(0.018140679261596), FRAC_CONST(0.025445594037630) },

2157 { 
FRAC_CONST
(0.018062527905790), FRAC_CONST(0.025501129105445) },

2158 { 
FRAC_CONST
(0.017984206538592), FRAC_CONST(0.025556424146920) },

2159 { 
FRAC_CONST
(0.017905715897192), FRAC_CONST(0.025611478641598) },

2160 { 
FRAC_CONST
(0.017827056720375), FRAC_CONST(0.025666292071285) },

2161 { 
FRAC_CONST
(0.017748229748511), FRAC_CONST(0.025720863920056) },

2162 { 
FRAC_CONST
(0.017669235723550), FRAC_CONST(0.025775193674260) },

2163 { 
FRAC_CONST
(0.017590075389012), FRAC_CONST(0.025829280822525) },

2164 { 
FRAC_CONST
(0.017510749489986), FRAC_CONST(0.025883124855762) },

2165 { 
FRAC_CONST
(0.017431258773116), FRAC_CONST(0.025936725267170) },

2166 { 
FRAC_CONST
(0.017351603986600), FRAC_CONST(0.025990081552242) },

2167 { 
FRAC_CONST
(0.017271785880180), FRAC_CONST(0.026043193208768) },

2168 { 
FRAC_CONST
(0.017191805205132), FRAC_CONST(0.026096059736841) },

2169 { 
FRAC_CONST
(0.017111662714267), FRAC_CONST(0.026148680638861) },

2170 { 
FRAC_CONST
(0.017031359161915), FRAC_CONST(0.026201055419541) },

2171 { 
FRAC_CONST
(0.016950895303924), FRAC_CONST(0.026253183585908) },

2172 { 
FRAC_CONST
(0.016870271897651), FRAC_CONST(0.026305064647313) },

2173 { 
FRAC_CONST
(0.016789489701954), FRAC_CONST(0.026356698115431) },

2174 { 
FRAC_CONST
(0.016708549477186), FRAC_CONST(0.026408083504269) },

2175 { 
FRAC_CONST
(0.016627451985187), FRAC_CONST(0.026459220330167) },

2176 { 
FRAC_CONST
(0.016546197989277), FRAC_CONST(0.026510108111806) },

2177 { 
FRAC_CONST
(0.016464788254250), FRAC_CONST(0.026560746370212) },

2178 { 
FRAC_CONST
(0.016383223546365), FRAC_CONST(0.026611134628757) },

2179 { 
FRAC_CONST
(0.016301504633341), FRAC_CONST(0.026661272413168) },

2180 { 
FRAC_CONST
(0.016219632284346), FRAC_CONST(0.026711159251530) },

2181 { 
FRAC_CONST
(0.016137607269996), FRAC_CONST(0.026760794674288) },

2182 { 
FRAC_CONST
(0.016055430362340), FRAC_CONST(0.026810178214254) },

2183 { 
FRAC_CONST
(0.015973102334858), FRAC_CONST(0.026859309406613) },

2184 { 
FRAC_CONST
(0.015890623962454), FRAC_CONST(0.026908187788922) },

2185 { 
FRAC_CONST
(0.015807996021446), FRAC_CONST(0.026956812901119) },

2186 { 
FRAC_CONST
(0.015725219289558), FRAC_CONST(0.027005184285527) },

2187 { 
FRAC_CONST
(0.015642294545918), FRAC_CONST(0.027053301486856) },

2188 { 
FRAC_CONST
(0.015559222571044), FRAC_CONST(0.027101164052208) },

2189 { 
FRAC_CONST
(0.015476004146842), FRAC_CONST(0.027148771531083) },

2190 { 
FRAC_CONST
(0.015392640056594), FRAC_CONST(0.027196123475380) },

2191 { 
FRAC_CONST
(0.015309131084956), FRAC_CONST(0.027243219439406) },

2192 { 
FRAC_CONST
(0.015225478017946), FRAC_CONST(0.027290058979875) },

2193 { 
FRAC_CONST
(0.015141681642938), FRAC_CONST(0.027336641655915) },

2194 { 
FRAC_CONST
(0.015057742748656), FRAC_CONST(0.027382967029073) },

2195 { 
FRAC_CONST
(0.014973662125164), FRAC_CONST(0.027429034663317) },

2196 { 
FRAC_CONST
(0.014889440563862), FRAC_CONST(0.027474844125040) },

2197 { 
FRAC_CONST
(0.014805078857474), FRAC_CONST(0.027520394983066) },

2198 { 
FRAC_CONST
(0.014720577800046), FRAC_CONST(0.027565686808654) },

2199 { 
FRAC_CONST
(0.014635938186934), FRAC_CONST(0.027610719175499) },

2200 { 
FRAC_CONST
(0.014551160814797), FRAC_CONST(0.027655491659740) },

2201 { 
FRAC_CONST
(0.014466246481592), FRAC_CONST(0.027700003839960) },

2202 { 
FRAC_CONST
(0.014381195986567), FRAC_CONST(0.027744255297195) },

2203 { 
FRAC_CONST
(0.014296010130247), FRAC_CONST(0.027788245614933) },

2204 { 
FRAC_CONST
(0.014210689714436), FRAC_CONST(0.027831974379120) },

2205 { 
FRAC_CONST
(0.014125235542201), FRAC_CONST(0.027875441178165) },

2206 { 
FRAC_CONST
(0.014039648417870), FRAC_CONST(0.027918645602941) },

2207 { 
FRAC_CONST
(0.013953929147020), FRAC_CONST(0.027961587246792) },

2208 { 
FRAC_CONST
(0.013868078536476), FRAC_CONST(0.028004265705534) },

2209 { 
FRAC_CONST
(0.013782097394294), FRAC_CONST(0.028046680577462) },

2210 { 
FRAC_CONST
(0.013695986529763), FRAC_CONST(0.028088831463351) },

2211 { 
FRAC_CONST
(0.013609746753390), FRAC_CONST(0.028130717966461) },

2212 { 
FRAC_CONST
(0.013523378876898), FRAC_CONST(0.028172339692540) },

2213 { 
FRAC_CONST
(0.013436883713214), FRAC_CONST(0.028213696249828) },

2214 { 
FRAC_CONST
(0.013350262076462), FRAC_CONST(0.028254787249062) },

2215 { 
FRAC_CONST
(0.013263514781960), FRAC_CONST(0.028295612303478) },

2216 { 
FRAC_CONST
(0.013176642646205), FRAC_CONST(0.028336171028814) },

2217 { 
FRAC_CONST
(0.013089646486871), FRAC_CONST(0.028376463043317) },

2218 { 
FRAC_CONST
(0.013002527122799), FRAC_CONST(0.028416487967743) },

2219 { 
FRAC_CONST
(0.012915285373990), FRAC_CONST(0.028456245425361) },

2220 { 
FRAC_CONST
(0.012827922061597), FRAC_CONST(0.028495735041960) },

2221 { 
FRAC_CONST
(0.012740438007915), FRAC_CONST(0.028534956445849) },

2222 { 
FRAC_CONST
(0.012652834036379), FRAC_CONST(0.028573909267859) },

2223 { 
FRAC_CONST
(0.012565110971550), FRAC_CONST(0.028612593141354) },

2224 { 
FRAC_CONST
(0.012477269639111), FRAC_CONST(0.028651007702224) },

2225 { 
FRAC_CONST
(0.012389310865858), FRAC_CONST(0.028689152588899) },

2226 { 
FRAC_CONST
(0.012301235479693), FRAC_CONST(0.028727027442343) },

2227 { 
FRAC_CONST
(0.012213044309615), FRAC_CONST(0.028764631906065) },

2228 { 
FRAC_CONST
(0.012124738185712), FRAC_CONST(0.028801965626115) },

2229 { 
FRAC_CONST
(0.012036317939156), FRAC_CONST(0.028839028251097) },

2230 { 
FRAC_CONST
(0.011947784402191), FRAC_CONST(0.028875819432161) },

2231 { 
FRAC_CONST
(0.011859138408130), FRAC_CONST(0.028912338823015) },

2232 { 
FRAC_CONST
(0.011770380791341), FRAC_CONST(0.028948586079925) },

2233 { 
FRAC_CONST
(0.011681512387245), FRAC_CONST(0.028984560861718) },

2234 { 
FRAC_CONST
(0.011592534032306), FRAC_CONST(0.029020262829785) },

2235 { 
FRAC_CONST
(0.011503446564022), FRAC_CONST(0.029055691648087) },

2236 { 
FRAC_CONST
(0.011414250820918), FRAC_CONST(0.029090846983152) },

2237 { 
FRAC_CONST
(0.011324947642537), FRAC_CONST(0.029125728504087) },

2238 { 
FRAC_CONST
(0.011235537869437), FRAC_CONST(0.029160335882573) },

2239 { 
FRAC_CONST
(0.011146022343175), FRAC_CONST(0.029194668792871) },

2240 { 
FRAC_CONST
(0.011056401906305), FRAC_CONST(0.029228726911828) },

2241 { 
FRAC_CONST
(0.010966677402371), FRAC_CONST(0.029262509918876) },

2242 { 
FRAC_CONST
(0.010876849675891), FRAC_CONST(0.029296017496036) },

2243 { 
FRAC_CONST
(0.010786919572361), FRAC_CONST(0.029329249327922) },

2244 { 
FRAC_CONST
(0.010696887938235), FRAC_CONST(0.029362205101743) },

2245 { 
FRAC_CONST
(0.010606755620926), FRAC_CONST(0.029394884507308) },

2246 { 
FRAC_CONST
(0.010516523468793), FRAC_CONST(0.029427287237024) },

2247 { 
FRAC_CONST
(0.010426192331137), FRAC_CONST(0.029459412985906) },

2248 { 
FRAC_CONST
(0.010335763058187), FRAC_CONST(0.029491261451573) },

2249 { 
FRAC_CONST
(0.010245236501099), FRAC_CONST(0.029522832334255) },

2250 { 
FRAC_CONST
(0.010154613511943), FRAC_CONST(0.029554125336796) },

2251 { 
FRAC_CONST
(0.010063894943698), FRAC_CONST(0.029585140164654) },

2252 { 
FRAC_CONST
(0.009973081650240), FRAC_CONST(0.029615876525905) },

2253 { 
FRAC_CONST
(0.009882174486340), FRAC_CONST(0.029646334131247) },

2254 { 
FRAC_CONST
(0.009791174307650), FRAC_CONST(0.029676512694001) },

2255 { 
FRAC_CONST
(0.009700081970699), FRAC_CONST(0.029706411930116) },

2256 { 
FRAC_CONST
(0.009608898332881), FRAC_CONST(0.029736031558168) },

2257 { 
FRAC_CONST
(0.009517624252453), FRAC_CONST(0.029765371299366) },

2258 { 
FRAC_CONST
(0.009426260588521), FRAC_CONST(0.029794430877553) },

2259 { 
FRAC_CONST
(0.009334808201034), FRAC_CONST(0.029823210019210) },

2260 { 
FRAC_CONST
(0.009243267950778), FRAC_CONST(0.029851708453456) },

2261 { 
FRAC_CONST
(0.009151640699363), FRAC_CONST(0.029879925912053) },

2262 { 
FRAC_CONST
(0.009059927309220), FRAC_CONST(0.029907862129408) },

2263 { 
FRAC_CONST
(0.008968128643591), FRAC_CONST(0.029935516842573) },

2264 { 
FRAC_CONST
(0.008876245566520), FRAC_CONST(0.029962889791254) },

2265 { 
FRAC_CONST
(0.008784278942845), FRAC_CONST(0.029989980717805) },

2266 { 
FRAC_CONST
(0.008692229638191), FRAC_CONST(0.030016789367235) },

2267 { 
FRAC_CONST
(0.008600098518961), FRAC_CONST(0.030043315487212) },

2268 { 
FRAC_CONST
(0.008507886452329), FRAC_CONST(0.030069558828062) },

2269 { 
FRAC_CONST
(0.008415594306230), FRAC_CONST(0.030095519142772) },

2270 { 
FRAC_CONST
(0.008323222949351), FRAC_CONST(0.030121196186994) },

2271 { 
FRAC_CONST
(0.008230773251129), FRAC_CONST(0.030146589719046) },

2272 { 
FRAC_CONST
(0.008138246081733), FRAC_CONST(0.030171699499915) },

2273 { 
FRAC_CONST
(0.008045642312067), FRAC_CONST(0.030196525293257) },

2274 { 
FRAC_CONST
(0.007952962813750), FRAC_CONST(0.030221066865402) },

2275 { 
FRAC_CONST
(0.007860208459119), FRAC_CONST(0.030245323985357) },

2276 { 
FRAC_CONST
(0.007767380121212), FRAC_CONST(0.030269296424803) },

2277 { 
FRAC_CONST
(0.007674478673766), FRAC_CONST(0.030292983958103) },

2278 { 
FRAC_CONST
(0.007581504991203), FRAC_CONST(0.030316386362302) },

2279 { 
FRAC_CONST
(0.007488459948628), FRAC_CONST(0.030339503417126) },

2280 { 
FRAC_CONST
(0.007395344421816), FRAC_CONST(0.030362334904989) },

2281 { 
FRAC_CONST
(0.007302159287206), FRAC_CONST(0.030384880610993) },

2282 { 
FRAC_CONST
(0.007208905421891), FRAC_CONST(0.030407140322928) },

2283 { 
FRAC_CONST
(0.007115583703613), FRAC_CONST(0.030429113831278) },

2284 { 
FRAC_CONST
(0.007022195010752), FRAC_CONST(0.030450800929220) },

2285 { 
FRAC_CONST
(0.006928740222316), FRAC_CONST(0.030472201412626) },

2286 { 
FRAC_CONST
(0.006835220217939), FRAC_CONST(0.030493315080068) },

2287 { 
FRAC_CONST
(0.006741635877866), FRAC_CONST(0.030514141732814) },

2288 { 
FRAC_CONST
(0.006647988082948), FRAC_CONST(0.030534681174838) },

2289 { 
FRAC_CONST
(0.006554277714635), FRAC_CONST(0.030554933212813) },

2290 { 
FRAC_CONST
(0.006460505654964), FRAC_CONST(0.030574897656119) },

2291 { 
FRAC_CONST
(0.006366672786553), FRAC_CONST(0.030594574316845) },

2292 { 
FRAC_CONST
(0.006272779992593), FRAC_CONST(0.030613963009786) },

2293 { 
FRAC_CONST
(0.006178828156839), FRAC_CONST(0.030633063552447) },

2294 { 
FRAC_CONST
(0.006084818163601), FRAC_CONST(0.030651875765048) },

2295 { 
FRAC_CONST
(0.005990750897737), FRAC_CONST(0.030670399470520) },

2296 { 
FRAC_CONST
(0.005896627244644), FRAC_CONST(0.030688634494512) },

2297 { 
FRAC_CONST
(0.005802448090250), FRAC_CONST(0.030706580665388) },

2298 { 
FRAC_CONST
(0.005708214321004), FRAC_CONST(0.030724237814232) },

2299 { 
FRAC_CONST
(0.005613926823871), FRAC_CONST(0.030741605774849) },

2300 { 
FRAC_CONST
(0.005519586486321), FRAC_CONST(0.030758684383764) },

2301 { 
FRAC_CONST
(0.005425194196321), FRAC_CONST(0.030775473480228) },

2302 { 
FRAC_CONST
(0.005330750842327), FRAC_CONST(0.030791972906214) },

2303 { 
FRAC_CONST
(0.005236257313276), FRAC_CONST(0.030808182506425) },

2304 { 
FRAC_CONST
(0.005141714498576), FRAC_CONST(0.030824102128288) },

2305 { 
FRAC_CONST
(0.005047123288102), FRAC_CONST(0.030839731621963) },

2306 { 
FRAC_CONST
(0.004952484572181), FRAC_CONST(0.030855070840339) },

2307 { 
FRAC_CONST
(0.004857799241589), FRAC_CONST(0.030870119639036) },

2308 { 
FRAC_CONST
(0.004763068187541), FRAC_CONST(0.030884877876411) },

2309 { 
FRAC_CONST
(0.004668292301681), FRAC_CONST(0.030899345413553) },

2310 { 
FRAC_CONST
(0.004573472476075), FRAC_CONST(0.030913522114288) },

2311 { 
FRAC_CONST
(0.004478609603205), FRAC_CONST(0.030927407845180) },

2312 { 
FRAC_CONST
(0.004383704575956), FRAC_CONST(0.030941002475530) },

2313 { 
FRAC_CONST
(0.004288758287610), FRAC_CONST(0.030954305877381) },

2314 { 
FRAC_CONST
(0.004193771631837), FRAC_CONST(0.030967317925516) },

2315 { 
FRAC_CONST
(0.004098745502689), FRAC_CONST(0.030980038497461) },

2316 { 
FRAC_CONST
(0.004003680794587), FRAC_CONST(0.030992467473486) },

2317 { 
FRAC_CONST
(0.003908578402316), FRAC_CONST(0.031004604736602) },

2318 { 
FRAC_CONST
(0.003813439221017), FRAC_CONST(0.031016450172571) },

2319 { 
FRAC_CONST
(0.003718264146176), FRAC_CONST(0.031028003669899) },

2320 { 
FRAC_CONST
(0.003623054073616), FRAC_CONST(0.031039265119839) },

2321 { 
FRAC_CONST
(0.003527809899492), FRAC_CONST(0.031050234416394) },

2322 { 
FRAC_CONST
(0.003432532520278), FRAC_CONST(0.031060911456318) },

2323 { 
FRAC_CONST
(0.003337222832760), FRAC_CONST(0.031071296139114) },

2324 { 
FRAC_CONST
(0.003241881734029), FRAC_CONST(0.031081388367037) },

2325 { 
FRAC_CONST
(0.003146510121474), FRAC_CONST(0.031091188045095) },

2326 { 
FRAC_CONST
(0.003051108892766), FRAC_CONST(0.031100695081051) },

2327 { 
FRAC_CONST
(0.002955678945860), FRAC_CONST(0.031109909385419) },

2328 { 
FRAC_CONST
(0.002860221178978), FRAC_CONST(0.031118830871473) },

2329 { 
FRAC_CONST
(0.002764736490604), FRAC_CONST(0.031127459455239) },

2330 { 
FRAC_CONST
(0.002669225779478), FRAC_CONST(0.031135795055501) },

2331 { 
FRAC_CONST
(0.002573689944583), FRAC_CONST(0.031143837593803) },

2332 { 
FRAC_CONST
(0.002478129885137), FRAC_CONST(0.031151586994444) },

2333 { 
FRAC_CONST
(0.002382546500589), FRAC_CONST(0.031159043184484) },

2334 { 
FRAC_CONST
(0.002286940690606), FRAC_CONST(0.031166206093743) },

2335 { 
FRAC_CONST
(0.002191313355067), FRAC_CONST(0.031173075654800) },

2336 { 
FRAC_CONST
(0.002095665394051), FRAC_CONST(0.031179651802998) },

2337 { 
FRAC_CONST
(0.001999997707835), FRAC_CONST(0.031185934476438) },

2338 { 
FRAC_CONST
(0.001904311196878), FRAC_CONST(0.031191923615985) },

2339 { 
FRAC_CONST
(0.001808606761820), FRAC_CONST(0.031197619165268) },

2340 { 
FRAC_CONST
(0.001712885303465), FRAC_CONST(0.031203021070678) },

2341 { 
FRAC_CONST
(0.001617147722782), FRAC_CONST(0.031208129281370) },

2342 { 
FRAC_CONST
(0.001521394920889), FRAC_CONST(0.031212943749264) },

2343 { 
FRAC_CONST
(0.001425627799047), FRAC_CONST(0.031217464429043) },

2344 { 
FRAC_CONST
(0.001329847258653), FRAC_CONST(0.031221691278159) },

2345 { 
FRAC_CONST
(0.001234054201231), FRAC_CONST(0.031225624256825) },

2346 { 
FRAC_CONST
(0.001138249528420), FRAC_CONST(0.031229263328024) },

2347 { 
FRAC_CONST
(0.001042434141971), FRAC_CONST(0.031232608457502) },

2348 { 
FRAC_CONST
(0.000946608943736), FRAC_CONST(0.031235659613775) },

2349 { 
FRAC_CONST
(0.000850774835656), FRAC_CONST(0.031238416768124) },

2350 { 
FRAC_CONST
(0.000754932719759), FRAC_CONST(0.031240879894597) },

2351 { 
FRAC_CONST
(0.000659083498149), FRAC_CONST(0.031243048970010) },

2352 { 
FRAC_CONST
(0.000563228072993), FRAC_CONST(0.031244923973948) },

2353 { 
FRAC_CONST
(0.000467367346520), FRAC_CONST(0.031246504888762) },

2354 { 
FRAC_CONST
(0.000371502221008), FRAC_CONST(0.031247791699571) },

2355 { 
FRAC_CONST
(0.000275633598775), FRAC_CONST(0.031248784394264) },

2356 { 
FRAC_CONST
(0.000179762382174), FRAC_CONST(0.031249482963498) },

2357 { 
FRAC_CONST
(0.000083889473581), FRAC_CONST(0.031249887400697) }

2361 
ALIGN
 c⁄° 
com∂ex_t
 
	gmd˘_èb_256
[] =

2363 { 
FRAC_CONST
(0.088387931675923), FRAC_CONST(0.000271171628935) },

2364 { 
FRAC_CONST
(0.088354655998507), FRAC_CONST(0.002440238387037) },

2365 { 
FRAC_CONST
(0.088268158780110), FRAC_CONST(0.004607835236780) },

2366 { 
FRAC_CONST
(0.088128492123423), FRAC_CONST(0.006772656498875) },

2367 { 
FRAC_CONST
(0.087935740158418), FRAC_CONST(0.008933398165942) },

2368 { 
FRAC_CONST
(0.087690018991670), FRAC_CONST(0.011088758687994) },

2369 { 
FRAC_CONST
(0.087391476636423), FRAC_CONST(0.013237439756448) },

2370 { 
FRAC_CONST
(0.087040292923427), FRAC_CONST(0.015378147086172) },

2371 { 
FRAC_CONST
(0.086636679392621), FRAC_CONST(0.017509591195118) },

2372 { 
FRAC_CONST
(0.086180879165703), FRAC_CONST(0.019630488181053) },

2373 { 
FRAC_CONST
(0.085673166799686), FRAC_CONST(0.021739560494940) },

2374 { 
FRAC_CONST
(0.085113848121515), FRAC_CONST(0.023835537710479) },

2375 { 
FRAC_CONST
(0.084503260043847), FRAC_CONST(0.025917157289369) },

2376 { 
FRAC_CONST
(0.083841770362110), FRAC_CONST(0.027983165341813) },

2377 { 
FRAC_CONST
(0.083129777532952), FRAC_CONST(0.030032317381813) },

2378 { 
FRAC_CONST
(0.082367710434230), FRAC_CONST(0.032063379076803) },

2379 { 
FRAC_CONST
(0.081556028106671), FRAC_CONST(0.034075126991164) },

2380 { 
FRAC_CONST
(0.080695219477356), FRAC_CONST(0.036066349323177) },

2381 { 
FRAC_CONST
(0.079785803065216), FRAC_CONST(0.038035846634965) },

2382 { 
FRAC_CONST
(0.078828326668693), FRAC_CONST(0.039982432574992) },

2383 { 
FRAC_CONST
(0.077823367035766), FRAC_CONST(0.041904934592675) },

2384 { 
FRAC_CONST
(0.076771529516540), FRAC_CONST(0.043802194644686) },

2385 { 
FRAC_CONST
(0.075673447698606), FRAC_CONST(0.045673069892513) },

2386 { 
FRAC_CONST
(0.074529783025390), FRAC_CONST(0.047516433390863) },

2387 { 
FRAC_CONST
(0.073341224397728), FRAC_CONST(0.049331174766491) },

2388 { 
FRAC_CONST
(0.072108487758894), FRAC_CONST(0.051116200887052) },

2389 { 
FRAC_CONST
(0.070832315663343), FRAC_CONST(0.052870436519557) },

2390 { 
FRAC_CONST
(0.069513476829429), FRAC_CONST(0.054592824978055) },

2391 { 
FRAC_CONST
(0.068152765676348), FRAC_CONST(0.056282328760143) },

2392 { 
FRAC_CONST
(0.066751001845620), FRAC_CONST(0.057937930171918) },

2393 { 
FRAC_CONST
(0.065309029707361), FRAC_CONST(0.059558631940996) },

2394 { 
FRAC_CONST
(0.063827717851668), FRAC_CONST(0.061143457817234) },

2395 { 
FRAC_CONST
(0.062307958565413), FRAC_CONST(0.062691453160784) },

2396 { 
FRAC_CONST
(0.060750667294763), FRAC_CONST(0.064201685517134) },

2397 { 
FRAC_CONST
(0.059156782093749), FRAC_CONST(0.065673245178784) },

2398 { 
FRAC_CONST
(0.057527263059216), FRAC_CONST(0.067105245733220) },

2399 { 
FRAC_CONST
(0.055863091752499), FRAC_CONST(0.068496824596852) },

2400 { 
FRAC_CONST
(0.054165270608165), FRAC_CONST(0.069847143534609) },

2401 { 
FRAC_CONST
(0.052434822330188), FRAC_CONST(0.071155389164853) },

2402 { 
FRAC_CONST
(0.050672789275903), FRAC_CONST(0.072420773449336) },

2403 { 
FRAC_CONST
(0.048880232828135), FRAC_CONST(0.073642534167879) },

2404 { 
FRAC_CONST
(0.047058232755862), FRAC_CONST(0.074819935377512) },

2405 { 
FRAC_CONST
(0.045207886563797), FRAC_CONST(0.075952267855771) },

2406 { 
FRAC_CONST
(0.043330308831298), FRAC_CONST(0.077038849527912) },

2407 { 
FRAC_CONST
(0.041426630540984), FRAC_CONST(0.078079025877766) },

2408 { 
FRAC_CONST
(0.039497998397473), FRAC_CONST(0.079072170341994) },

2409 { 
FRAC_CONST
(0.037545574136653), FRAC_CONST(0.080017684687506) },

2410 { 
FRAC_CONST
(0.035570533825892), FRAC_CONST(0.080914999371817) },

2411 { 
FRAC_CONST
(0.033574067155622), FRAC_CONST(0.081763573886112) },

2412 { 
FRAC_CONST
(0.031557376722714), FRAC_CONST(0.082562897080836) },

2413 { 
FRAC_CONST
(0.029521677306074), FRAC_CONST(0.083312487473584) },

2414 { 
FRAC_CONST
(0.027468195134911), FRAC_CONST(0.084011893539132) },

2415 { 
FRAC_CONST
(0.025398167150101), FRAC_CONST(0.084660693981419) },

2416 { 
FRAC_CONST
(0.023312840259098), FRAC_CONST(0.085258497987320) },

2417 { 
FRAC_CONST
(0.021213470584847), FRAC_CONST(0.085804945462053) },

2418 { 
FRAC_CONST
(0.019101322709138), FRAC_CONST(0.086299707246093) },

2419 { 
FRAC_CONST
(0.016977668910873), FRAC_CONST(0.086742485313442) },

2420 { 
FRAC_CONST
(0.014843788399692), FRAC_CONST(0.087133012951149) },

2421 { 
FRAC_CONST
(0.012700966545425), FRAC_CONST(0.087471054919968) },

2422 { 
FRAC_CONST
(0.010550494103830), FRAC_CONST(0.087756407596056) },

2423 { 
FRAC_CONST
(0.008393666439096), FRAC_CONST(0.087988899093631) },

2424 { 
FRAC_CONST
(0.006231782743558), FRAC_CONST(0.088168389368510) },

2425 { 
FRAC_CONST
(0.004066145255116), FRAC_CONST(0.088294770302461) },

2426 { 
FRAC_CONST
(0.001898058472816), FRAC_CONST(0.088367965768336) }

2429 #ifde‡
LD_DEC


2431 
ALIGN
 c⁄° 
com∂ex_t
 
	gmd˘_èb_1024
[] =

2433 { 
FRAC_CONST
(0.044194160825012), FRAC_CONST(0.000033896503468) },

2434 { 
FRAC_CONST
(0.044193120897389), FRAC_CONST(0.000305066138364) },

2435 { 
FRAC_CONST
(0.044190417123742), FRAC_CONST(0.000576224287693) },

2436 { 
FRAC_CONST
(0.044186049605866), FRAC_CONST(0.000847360742503) },

2437 { 
FRAC_CONST
(0.044180018508197), FRAC_CONST(0.001118465294660) },

2438 { 
FRAC_CONST
(0.044172324057802), FRAC_CONST(0.001389527737231) },

2439 { 
FRAC_CONST
(0.044162966544372), FRAC_CONST(0.001660537864867) },

2440 { 
FRAC_CONST
(0.044151946320213), FRAC_CONST(0.001931485474192) },

2441 { 
FRAC_CONST
(0.044139263800230), FRAC_CONST(0.002202360364180) },

2442 { 
FRAC_CONST
(0.044124919461912), FRAC_CONST(0.002473152336546) },

2443 { 
FRAC_CONST
(0.044108913845316), FRAC_CONST(0.002743851196123) },

2444 { 
FRAC_CONST
(0.044091247553044), FRAC_CONST(0.003014446751254) },

2445 { 
FRAC_CONST
(0.044071921250223), FRAC_CONST(0.003284928814169) },

2446 { 
FRAC_CONST
(0.044050935664476), FRAC_CONST(0.003555287201370) },

2447 { 
FRAC_CONST
(0.044028291585898), FRAC_CONST(0.003825511734018) },

2448 { 
FRAC_CONST
(0.044003989867028), FRAC_CONST(0.004095592238311) },

2449 { 
FRAC_CONST
(0.043978031422810), FRAC_CONST(0.004365518545871) },

2450 { 
FRAC_CONST
(0.043950417230565), FRAC_CONST(0.004635280494126) },

2451 { 
FRAC_CONST
(0.043921148329953), FRAC_CONST(0.004904867926689) },

2452 { 
FRAC_CONST
(0.043890225822930), FRAC_CONST(0.005174270693748) },

2453 { 
FRAC_CONST
(0.043857650873712), FRAC_CONST(0.005443478652439) },

2454 { 
FRAC_CONST
(0.043823424708727), FRAC_CONST(0.005712481667236) },

2455 { 
FRAC_CONST
(0.043787548616571), FRAC_CONST(0.005981269610326) },

2456 { 
FRAC_CONST
(0.043750023947958), FRAC_CONST(0.006249832361997) },

2457 { 
FRAC_CONST
(0.043710852115672), FRAC_CONST(0.006518159811011) },

2458 { 
FRAC_CONST
(0.043670034594508), FRAC_CONST(0.006786241854993) },

2459 { 
FRAC_CONST
(0.043627572921225), FRAC_CONST(0.007054068400804) },

2460 { 
FRAC_CONST
(0.043583468694479), FRAC_CONST(0.007321629364927) },

2461 { 
FRAC_CONST
(0.043537723574771), FRAC_CONST(0.007588914673843) },

2462 { 
FRAC_CONST
(0.043490339284377), FRAC_CONST(0.007855914264410) },

2463 { 
FRAC_CONST
(0.043441317607290), FRAC_CONST(0.008122618084246) },

2464 { 
FRAC_CONST
(0.043390660389149), FRAC_CONST(0.008389016092101) },

2465 { 
FRAC_CONST
(0.043338369537168), FRAC_CONST(0.008655098258243) },

2466 { 
FRAC_CONST
(0.043284447020070), FRAC_CONST(0.008920854564826) },

2467 { 
FRAC_CONST
(0.043228894868005), FRAC_CONST(0.009186275006278) },

2468 { 
FRAC_CONST
(0.043171715172482), FRAC_CONST(0.009451349589667) },

2469 { 
FRAC_CONST
(0.043112910086283), FRAC_CONST(0.009716068335087) },

2470 { 
FRAC_CONST
(0.043052481823387), FRAC_CONST(0.009980421276025) },

2471 { 
FRAC_CONST
(0.042990432658884), FRAC_CONST(0.010244398459743) },

2472 { 
FRAC_CONST
(0.042926764928889), FRAC_CONST(0.010507989947649) },

2473 { 
FRAC_CONST
(0.042861481030457), FRAC_CONST(0.010771185815673) },

2474 { 
FRAC_CONST
(0.042794583421490), FRAC_CONST(0.011033976154639) },

2475 { 
FRAC_CONST
(0.042726074620644), FRAC_CONST(0.011296351070639) },

2476 { 
FRAC_CONST
(0.042655957207238), FRAC_CONST(0.011558300685406) },

2477 { 
FRAC_CONST
(0.042584233821153), FRAC_CONST(0.011819815136685) },

2478 { 
FRAC_CONST
(0.042510907162732), FRAC_CONST(0.012080884578604) },

2479 { 
FRAC_CONST
(0.042435979992684), FRAC_CONST(0.012341499182048) },

2480 { 
FRAC_CONST
(0.042359455131975), FRAC_CONST(0.012601649135022) },

2481 { 
FRAC_CONST
(0.042281335461721), FRAC_CONST(0.012861324643029) },

2482 { 
FRAC_CONST
(0.042201623923085), FRAC_CONST(0.013120515929433) },

2483 { 
FRAC_CONST
(0.042120323517160), FRAC_CONST(0.013379213235827) },

2484 { 
FRAC_CONST
(0.042037437304862), FRAC_CONST(0.013637406822406) },

2485 { 
FRAC_CONST
(0.041952968406809), FRAC_CONST(0.013895086968325) },

2486 { 
FRAC_CONST
(0.041866920003207), FRAC_CONST(0.014152243972073) },

2487 { 
FRAC_CONST
(0.041779295333730), FRAC_CONST(0.014408868151835) },

2488 { 
FRAC_CONST
(0.041690097697398), FRAC_CONST(0.014664949845855) },

2489 { 
FRAC_CONST
(0.041599330452450), FRAC_CONST(0.014920479412801) },

2490 { 
FRAC_CONST
(0.041506997016224), FRAC_CONST(0.015175447232131) },

2491 { 
FRAC_CONST
(0.041413100865019), FRAC_CONST(0.015429843704450) },

2492 { 
FRAC_CONST
(0.041317645533974), FRAC_CONST(0.015683659251874) },

2493 { 
FRAC_CONST
(0.041220634616927), FRAC_CONST(0.015936884318392) },

2494 { 
FRAC_CONST
(0.041122071766285), FRAC_CONST(0.016189509370223) },

2495 { 
FRAC_CONST
(0.041021960692883), FRAC_CONST(0.016441524896177) },

2496 { 
FRAC_CONST
(0.040920305165846), FRAC_CONST(0.016692921408010) },

2497 { 
FRAC_CONST
(0.040817109012449), FRAC_CONST(0.016943689440788) },

2498 { 
FRAC_CONST
(0.040712376117967), FRAC_CONST(0.017193819553235) },

2499 { 
FRAC_CONST
(0.040606110425535), FRAC_CONST(0.017443302328094) },

2500 { 
FRAC_CONST
(0.040498315935996), FRAC_CONST(0.017692128372479) },

2501 { 
FRAC_CONST
(0.040388996707752), FRAC_CONST(0.017940288318230) },

2502 { 
FRAC_CONST
(0.040278156856609), FRAC_CONST(0.018187772822267) },

2503 { 
FRAC_CONST
(0.040165800555627), FRAC_CONST(0.018434572566936) },

2504 { 
FRAC_CONST
(0.040051932034955), FRAC_CONST(0.018680678260367) },

2505 { 
FRAC_CONST
(0.039936555581679), FRAC_CONST(0.018926080636820) },

2506 { 
FRAC_CONST
(0.039819675539659), FRAC_CONST(0.019170770457035) },

2507 { 
FRAC_CONST
(0.039701296309360), FRAC_CONST(0.019414738508577) },

2508 { 
FRAC_CONST
(0.039581422347694), FRAC_CONST(0.019657975606187) },

2509 { 
FRAC_CONST
(0.039460058167849), FRAC_CONST(0.019900472592126) },

2510 { 
FRAC_CONST
(0.039337208339116), FRAC_CONST(0.020142220336521) },

2511 { 
FRAC_CONST
(0.039212877486723), FRAC_CONST(0.020383209737704) },

2512 { 
FRAC_CONST
(0.039087070291656), FRAC_CONST(0.020623431722561) },

2513 { 
FRAC_CONST
(0.038959791490485), FRAC_CONST(0.020862877246870) },

2514 { 
FRAC_CONST
(0.038831045875184), FRAC_CONST(0.021101537295642) },

2515 { 
FRAC_CONST
(0.038700838292953), FRAC_CONST(0.021339402883462) },

2516 { 
FRAC_CONST
(0.038569173646034), FRAC_CONST(0.021576465054824) },

2517 { 
FRAC_CONST
(0.038436056891527), FRAC_CONST(0.021812714884472) },

2518 { 
FRAC_CONST
(0.038301493041202), FRAC_CONST(0.022048143477734) },

2519 { 
FRAC_CONST
(0.038165487161312), FRAC_CONST(0.022282741970855) },

2520 { 
FRAC_CONST
(0.038028044372402), FRAC_CONST(0.022516501531335) },

2521 { 
FRAC_CONST
(0.037889169849115), FRAC_CONST(0.022749413358259) },

2522 { 
FRAC_CONST
(0.037748868819998), FRAC_CONST(0.022981468682628) },

2523 { 
FRAC_CONST
(0.037607146567305), FRAC_CONST(0.023212658767690) },

2524 { 
FRAC_CONST
(0.037464008426800), FRAC_CONST(0.023442974909269) },

2525 { 
FRAC_CONST
(0.037319459787553), FRAC_CONST(0.023672408436094) },

2526 { 
FRAC_CONST
(0.037173506091737), FRAC_CONST(0.023900950710120) },

2527 { 
FRAC_CONST
(0.037026152834428), FRAC_CONST(0.024128593126861) },

2528 { 
FRAC_CONST
(0.036877405563392), FRAC_CONST(0.024355327115708) },

2529 { 
FRAC_CONST
(0.036727269878879), FRAC_CONST(0.024581144140255) },

2530 { 
FRAC_CONST
(0.036575751433414), FRAC_CONST(0.024806035698618) },

2531 { 
FRAC_CONST
(0.036422855931580), FRAC_CONST(0.025029993323758) },

2532 { 
FRAC_CONST
(0.036268589129807), FRAC_CONST(0.025253008583796) },

2533 { 
FRAC_CONST
(0.036112956836151), FRAC_CONST(0.025475073082334) },

2534 { 
FRAC_CONST
(0.035955964910083), FRAC_CONST(0.025696178458769) },

2535 { 
FRAC_CONST
(0.035797619262257), FRAC_CONST(0.025916316388609) },

2536 { 
FRAC_CONST
(0.035637925854300), FRAC_CONST(0.026135478583784) },

2537 { 
FRAC_CONST
(0.035476890698576), FRAC_CONST(0.026353656792963) },

2538 { 
FRAC_CONST
(0.035314519857970), FRAC_CONST(0.026570842801858) },

2539 { 
FRAC_CONST
(0.035150819445650), FRAC_CONST(0.026787028433540) },

2540 { 
FRAC_CONST
(0.034985795624846), FRAC_CONST(0.027002205548742) },

2541 { 
FRAC_CONST
(0.034819454608610), FRAC_CONST(0.027216366046166) },

2542 { 
FRAC_CONST
(0.034651802659589), FRAC_CONST(0.027429501862792) },

2543 { 
FRAC_CONST
(0.034482846089783), FRAC_CONST(0.027641604974175) },

2544 { 
FRAC_CONST
(0.034312591260311), FRAC_CONST(0.027852667394755) },

2545 { 
FRAC_CONST
(0.034141044581172), FRAC_CONST(0.028062681178149) },

2546 { 
FRAC_CONST
(0.033968212511001), FRAC_CONST(0.028271638417458) },

2547 { 
FRAC_CONST
(0.033794101556828), FRAC_CONST(0.028479531245560) },

2548 { 
FRAC_CONST
(0.033618718273831), FRAC_CONST(0.028686351835407) },

2549 { 
FRAC_CONST
(0.033442069265093), FRAC_CONST(0.028892092400321) },

2550 { 
FRAC_CONST
(0.033264161181349), FRAC_CONST(0.029096745194286) },

2551 { 
FRAC_CONST
(0.033085000720737), FRAC_CONST(0.029300302512241) },

2552 { 
FRAC_CONST
(0.032904594628548), FRAC_CONST(0.029502756690366) },

2553 { 
FRAC_CONST
(0.032722949696969), FRAC_CONST(0.029704100106376) },

2554 { 
FRAC_CONST
(0.032540072764829), FRAC_CONST(0.029904325179807) },

2555 { 
FRAC_CONST
(0.032355970717341), FRAC_CONST(0.030103424372297) },

2556 { 
FRAC_CONST
(0.032170650485843), FRAC_CONST(0.030301390187873) },

2557 { 
FRAC_CONST
(0.031984119047537), FRAC_CONST(0.030498215173235) },

2558 { 
FRAC_CONST
(0.031796383425227), FRAC_CONST(0.030693891918034) },

2559 { 
FRAC_CONST
(0.031607450687052), FRAC_CONST(0.030888413055150) },

2560 { 
FRAC_CONST
(0.031417327946223), FRAC_CONST(0.031081771260973) },

2561 { 
FRAC_CONST
(0.031226022360754), FRAC_CONST(0.031273959255676) },

2562 { 
FRAC_CONST
(0.031033541133193), FRAC_CONST(0.031464969803488) },

2563 { 
FRAC_CONST
(0.030839891510348), FRAC_CONST(0.031654795712972) },

2564 { 
FRAC_CONST
(0.030645080783018), FRAC_CONST(0.031843429837288) },

2565 { 
FRAC_CONST
(0.030449116285718), FRAC_CONST(0.032030865074469) },

2566 { 
FRAC_CONST
(0.030252005396399), FRAC_CONST(0.032217094367684) },

2567 { 
FRAC_CONST
(0.030053755536176), FRAC_CONST(0.032402110705505) },

2568 { 
FRAC_CONST
(0.029854374169043), FRAC_CONST(0.032585907122172) },

2569 { 
FRAC_CONST
(0.029653868801596), FRAC_CONST(0.032768476697853) },

2570 { 
FRAC_CONST
(0.029452246982750), FRAC_CONST(0.032949812558907) },

2571 { 
FRAC_CONST
(0.029249516303451), FRAC_CONST(0.033129907878142) },

2572 { 
FRAC_CONST
(0.029045684396395), FRAC_CONST(0.033308755875070) },

2573 { 
FRAC_CONST
(0.028840758935738), FRAC_CONST(0.033486349816166) },

2574 { 
FRAC_CONST
(0.028634747636808), FRAC_CONST(0.033662683015118) },

2575 { 
FRAC_CONST
(0.028427658255815), FRAC_CONST(0.033837748833080) },

2576 { 
FRAC_CONST
(0.028219498589555), FRAC_CONST(0.034011540678924) },

2577 { 
FRAC_CONST
(0.028010276475123), FRAC_CONST(0.034184052009485) },

2578 { 
FRAC_CONST
(0.027799999789613), FRAC_CONST(0.034355276329809) },

2579 { 
FRAC_CONST
(0.027588676449824), FRAC_CONST(0.034525207193396) },

2580 { 
FRAC_CONST
(0.027376314411959), FRAC_CONST(0.034693838202447) },

2581 { 
FRAC_CONST
(0.027162921671330), FRAC_CONST(0.034861163008098) },

2582 { 
FRAC_CONST
(0.026948506262053), FRAC_CONST(0.035027175310665) },

2583 { 
FRAC_CONST
(0.026733076256746), FRAC_CONST(0.035191868859880) },

2584 { 
FRAC_CONST
(0.026516639766228), FRAC_CONST(0.035355237455122) },

2585 { 
FRAC_CONST
(0.026299204939210), FRAC_CONST(0.035517274945657) },

2586 { 
FRAC_CONST
(0.026080779961991), FRAC_CONST(0.035677975230865) },

2587 { 
FRAC_CONST
(0.025861373058146), FRAC_CONST(0.035837332260471) },

2588 { 
FRAC_CONST
(0.025640992488223), FRAC_CONST(0.035995340034772) },

2589 { 
FRAC_CONST
(0.025419646549425), FRAC_CONST(0.036151992604866) },

2590 { 
FRAC_CONST
(0.025197343575302), FRAC_CONST(0.036307284072871) },

2591 { 
FRAC_CONST
(0.024974091935435), FRAC_CONST(0.036461208592152) },

2592 { 
FRAC_CONST
(0.024749900035122), FRAC_CONST(0.036613760367538) },

2593 { 
FRAC_CONST
(0.024524776315061), FRAC_CONST(0.036764933655540) },

2594 { 
FRAC_CONST
(0.024298729251033), FRAC_CONST(0.036914722764569) },

2595 { 
FRAC_CONST
(0.024071767353583), FRAC_CONST(0.037063122055150) },

2596 { 
FRAC_CONST
(0.023843899167697), FRAC_CONST(0.037210125940135) },

2597 { 
FRAC_CONST
(0.023615133272485), FRAC_CONST(0.037355728884908) },

2598 { 
FRAC_CONST
(0.023385478280852), FRAC_CONST(0.037499925407603) },

2599 { 
FRAC_CONST
(0.023154942839179), FRAC_CONST(0.037642710079302) },

2600 { 
FRAC_CONST
(0.022923535626995), FRAC_CONST(0.037784077524241) },

2601 { 
FRAC_CONST
(0.022691265356652), FRAC_CONST(0.037924022420018) },

2602 { 
FRAC_CONST
(0.022458140772993), FRAC_CONST(0.038062539497785) },

2603 { 
FRAC_CONST
(0.022224170653027), FRAC_CONST(0.038199623542453) },

2604 { 
FRAC_CONST
(0.021989363805598), FRAC_CONST(0.038335269392885) },

2605 { 
FRAC_CONST
(0.021753729071049), FRAC_CONST(0.038469471942092) },

2606 { 
FRAC_CONST
(0.021517275320897), FRAC_CONST(0.038602226137423) },

2607 { 
FRAC_CONST
(0.021280011457490), FRAC_CONST(0.038733526980758) },

2608 { 
FRAC_CONST
(0.021041946413679), FRAC_CONST(0.038863369528695) },

2609 { 
FRAC_CONST
(0.020803089152479), FRAC_CONST(0.038991748892734) },

2610 { 
FRAC_CONST
(0.020563448666730), FRAC_CONST(0.039118660239466) },

2611 { 
FRAC_CONST
(0.020323033978761), FRAC_CONST(0.039244098790750) },

2612 { 
FRAC_CONST
(0.020081854140050), FRAC_CONST(0.039368059823895) },

2613 { 
FRAC_CONST
(0.019839918230880), FRAC_CONST(0.039490538671839) },

2614 { 
FRAC_CONST
(0.019597235360003), FRAC_CONST(0.039611530723322) },

2615 { 
FRAC_CONST
(0.019353814664291), FRAC_CONST(0.039731031423061) },

2616 { 
FRAC_CONST
(0.019109665308395), FRAC_CONST(0.039849036271924) },

2617 { 
FRAC_CONST
(0.018864796484402), FRAC_CONST(0.039965540827094) },

2618 { 
FRAC_CONST
(0.018619217411483), FRAC_CONST(0.040080540702240) },

2619 { 
FRAC_CONST
(0.018372937335552), FRAC_CONST(0.040194031567683) },

2620 { 
FRAC_CONST
(0.018125965528915), FRAC_CONST(0.040306009150554) },

2621 { 
FRAC_CONST
(0.017878311289921), FRAC_CONST(0.040416469234963) },

2622 { 
FRAC_CONST
(0.017629983942612), FRAC_CONST(0.040525407662148) },

2623 { 
FRAC_CONST
(0.017380992836371), FRAC_CONST(0.040632820330639) },

2624 { 
FRAC_CONST
(0.017131347345575), FRAC_CONST(0.040738703196411) },

2625 { 
FRAC_CONST
(0.016881056869233), FRAC_CONST(0.040843052273033) },

2626 { 
FRAC_CONST
(0.016630130830641), FRAC_CONST(0.040945863631822) },

2627 { 
FRAC_CONST
(0.016378578677023), FRAC_CONST(0.041047133401988) },

2628 { 
FRAC_CONST
(0.016126409879175), FRAC_CONST(0.041146857770781) },

2629 { 
FRAC_CONST
(0.015873633931110), FRAC_CONST(0.041245032983635) },

2630 { 
FRAC_CONST
(0.015620260349699), FRAC_CONST(0.041341655344309) },

2631 { 
FRAC_CONST
(0.015366298674314), FRAC_CONST(0.041436721215026) },

2632 { 
FRAC_CONST
(0.015111758466470), FRAC_CONST(0.041530227016609) },

2633 { 
FRAC_CONST
(0.014856649309460), FRAC_CONST(0.041622169228618) },

2634 { 
FRAC_CONST
(0.014600980808001), FRAC_CONST(0.041712544389481) },

2635 { 
FRAC_CONST
(0.014344762587867), FRAC_CONST(0.041801349096623) },

2636 { 
FRAC_CONST
(0.014088004295529), FRAC_CONST(0.041888580006598) },

2637 { 
FRAC_CONST
(0.013830715597792), FRAC_CONST(0.041974233835211) },

2638 { 
FRAC_CONST
(0.013572906181430), FRAC_CONST(0.042058307357645) },

2639 { 
FRAC_CONST
(0.013314585752822), FRAC_CONST(0.042140797408577) },

2640 { 
FRAC_CONST
(0.013055764037585), FRAC_CONST(0.042221700882306) },

2641 { 
FRAC_CONST
(0.012796450780212), FRAC_CONST(0.042301014732860) },

2642 { 
FRAC_CONST
(0.012536655743699), FRAC_CONST(0.042378735974118) },

2643 { 
FRAC_CONST
(0.012276388709183), FRAC_CONST(0.042454861679919) },

2644 { 
FRAC_CONST
(0.012015659475571), FRAC_CONST(0.042529388984173) },

2645 { 
FRAC_CONST
(0.011754477859172), FRAC_CONST(0.042602315080970) },

2646 { 
FRAC_CONST
(0.011492853693324), FRAC_CONST(0.042673637224683) },

2647 { 
FRAC_CONST
(0.011230796828031), FRAC_CONST(0.042743352730074) },

2648 { 
FRAC_CONST
(0.010968317129584), FRAC_CONST(0.042811458972393) },

2649 { 
FRAC_CONST
(0.010705424480197), FRAC_CONST(0.042877953387479) },

2650 { 
FRAC_CONST
(0.010442128777629), FRAC_CONST(0.042942833471854) },

2651 { 
FRAC_CONST
(0.010178439934815), FRAC_CONST(0.043006096782821) },

2652 { 
FRAC_CONST
(0.009914367879490), FRAC_CONST(0.043067740938551) },

2653 { 
FRAC_CONST
(0.009649922553818), FRAC_CONST(0.043127763618177) },

2654 { 
FRAC_CONST
(0.009385113914016), FRAC_CONST(0.043186162561878) },

2655 { 
FRAC_CONST
(0.009119951929979), FRAC_CONST(0.043242935570968) },

2656 { 
FRAC_CONST
(0.008854446584907), FRAC_CONST(0.043298080507974) },

2657 { 
FRAC_CONST
(0.008588607874926), FRAC_CONST(0.043351595296722) },

2658 { 
FRAC_CONST
(0.008322445808712), FRAC_CONST(0.043403477922409) },

2659 { 
FRAC_CONST
(0.008055970407118), FRAC_CONST(0.043453726431684) },

2660 { 
FRAC_CONST
(0.007789191702791), FRAC_CONST(0.043502338932719) },

2661 { 
FRAC_CONST
(0.007522119739798), FRAC_CONST(0.043549313595281) },

2662 { 
FRAC_CONST
(0.007254764573250), FRAC_CONST(0.043594648650800) },

2663 { 
FRAC_CONST
(0.006987136268915), FRAC_CONST(0.043638342392438) },

2664 { 
FRAC_CONST
(0.006719244902849), FRAC_CONST(0.043680393175148) },

2665 { 
FRAC_CONST
(0.006451100561010), FRAC_CONST(0.043720799415744) },

2666 { 
FRAC_CONST
(0.006182713338881), FRAC_CONST(0.043759559592953) },

2667 { 
FRAC_CONST
(0.005914093341090), FRAC_CONST(0.043796672247476) },

2668 { 
FRAC_CONST
(0.005645250681027), FRAC_CONST(0.043832135982044) },

2669 { 
FRAC_CONST
(0.005376195480466), FRAC_CONST(0.043865949461465) },

2670 { 
FRAC_CONST
(0.005106937869184), FRAC_CONST(0.043898111412683) },

2671 { 
FRAC_CONST
(0.004837487984578), FRAC_CONST(0.043928620624817) },

2672 { 
FRAC_CONST
(0.004567855971284), FRAC_CONST(0.043957475949213) },

2673 { 
FRAC_CONST
(0.004298051980793), FRAC_CONST(0.043984676299484) },

2674 { 
FRAC_CONST
(0.004028086171076), FRAC_CONST(0.044010220651553) },

2675 { 
FRAC_CONST
(0.003757968706190), FRAC_CONST(0.044034108043689) },

2676 { 
FRAC_CONST
(0.003487709755907), FRAC_CONST(0.044056337576546) },

2677 { 
FRAC_CONST
(0.003217319495322), FRAC_CONST(0.044076908413193) },

2678 { 
FRAC_CONST
(0.002946808104477), FRAC_CONST(0.044095819779151) },

2679 { 
FRAC_CONST
(0.002676185767973), FRAC_CONST(0.044113070962418) },

2680 { 
FRAC_CONST
(0.002405462674586), FRAC_CONST(0.044128661313495) },

2681 { 
FRAC_CONST
(0.002134649016890), FRAC_CONST(0.044142590245416) },

2682 { 
FRAC_CONST
(0.001863754990865), FRAC_CONST(0.044154857233763) },

2683 { 
FRAC_CONST
(0.001592790795518), FRAC_CONST(0.044165461816692) },

2684 { 
FRAC_CONST
(0.001321766632497), FRAC_CONST(0.044174403594946) },

2685 { 
FRAC_CONST
(0.001050692705710), FRAC_CONST(0.044181682231873) },

2686 { 
FRAC_CONST
(0.000779579220936), FRAC_CONST(0.044187297453434) },

2687 { 
FRAC_CONST
(0.000508436385446), FRAC_CONST(0.044191249048222) },

2688 { 
FRAC_CONST
(0.000237274407613), FRAC_CONST(0.044193536867459) }

2692 #ifde‡
ALLOW_SMALL_FRAMELENGTH


2694 
ALIGN
 c⁄° 
com∂ex_t
 
	gmd˘_èb_1920
[] =

2696 { 
FRAC_CONST
(0.032274858518097), FRAC_CONST(0.000013202404176) },

2697 { 
FRAC_CONST
(0.032274642494505), FRAC_CONST(0.000118821372483) },

2698 { 
FRAC_CONST
(0.032274080835421), FRAC_CONST(0.000224439068308) },

2699 { 
FRAC_CONST
(0.032273173546860), FRAC_CONST(0.000330054360572) },

2700 { 
FRAC_CONST
(0.032271920638538), FRAC_CONST(0.000435666118218) },

2701 { 
FRAC_CONST
(0.032270322123873), FRAC_CONST(0.000541273210231) },

2702 { 
FRAC_CONST
(0.032268378019984), FRAC_CONST(0.000646874505642) },

2703 { 
FRAC_CONST
(0.032266088347691), FRAC_CONST(0.000752468873546) },

2704 { 
FRAC_CONST
(0.032263453131514), FRAC_CONST(0.000858055183114) },

2705 { 
FRAC_CONST
(0.032260472399674), FRAC_CONST(0.000963632303600) },

2706 { 
FRAC_CONST
(0.032257146184092), FRAC_CONST(0.001069199104358) },

2707 { 
FRAC_CONST
(0.032253474520390), FRAC_CONST(0.001174754454853) },

2708 { 
FRAC_CONST
(0.032249457447888), FRAC_CONST(0.001280297224671) },

2709 { 
FRAC_CONST
(0.032245095009606), FRAC_CONST(0.001385826283535) },

2710 { 
FRAC_CONST
(0.032240387252262), FRAC_CONST(0.001491340501313) },

2711 { 
FRAC_CONST
(0.032235334226272), FRAC_CONST(0.001596838748031) },

2712 { 
FRAC_CONST
(0.032229935985750), FRAC_CONST(0.001702319893890) },

2713 { 
FRAC_CONST
(0.032224192588507), FRAC_CONST(0.001807782809271) },

2714 { 
FRAC_CONST
(0.032218104096050), FRAC_CONST(0.001913226364749) },

2715 { 
FRAC_CONST
(0.032211670573582), FRAC_CONST(0.002018649431111) },

2716 { 
FRAC_CONST
(0.032204892090000), FRAC_CONST(0.002124050879359) },

2717 { 
FRAC_CONST
(0.032197768717898), FRAC_CONST(0.002229429580728) },

2718 { 
FRAC_CONST
(0.032190300533560), FRAC_CONST(0.002334784406698) },

2719 { 
FRAC_CONST
(0.032182487616965), FRAC_CONST(0.002440114229003) },

2720 { 
FRAC_CONST
(0.032174330051782), FRAC_CONST(0.002545417919644) },

2721 { 
FRAC_CONST
(0.032165827925374), FRAC_CONST(0.002650694350905) },

2722 { 
FRAC_CONST
(0.032156981328790), FRAC_CONST(0.002755942395358) },

2723 { 
FRAC_CONST
(0.032147790356771), FRAC_CONST(0.002861160925883) },

2724 { 
FRAC_CONST
(0.032138255107744), FRAC_CONST(0.002966348815672) },

2725 { 
FRAC_CONST
(0.032128375683825), FRAC_CONST(0.003071504938250) },

2726 { 
FRAC_CONST
(0.032118152190814), FRAC_CONST(0.003176628167476) },

2727 { 
FRAC_CONST
(0.032107584738196), FRAC_CONST(0.003281717377568) },

2728 { 
FRAC_CONST
(0.032096673439141), FRAC_CONST(0.003386771443102) },

2729 { 
FRAC_CONST
(0.032085418410500), FRAC_CONST(0.003491789239036) },

2730 { 
FRAC_CONST
(0.032073819772804), FRAC_CONST(0.003596769640711) },

2731 { 
FRAC_CONST
(0.032061877650267), FRAC_CONST(0.003701711523874) },

2732 { 
FRAC_CONST
(0.032049592170778), FRAC_CONST(0.003806613764680) },

2733 { 
FRAC_CONST
(0.032036963465906), FRAC_CONST(0.003911475239711) },

2734 { 
FRAC_CONST
(0.032023991670893), FRAC_CONST(0.004016294825985) },

2735 { 
FRAC_CONST
(0.032010676924657), FRAC_CONST(0.004121071400967) },

2736 { 
FRAC_CONST
(0.031997019369789), FRAC_CONST(0.004225803842586) },

2737 { 
FRAC_CONST
(0.031983019152549), FRAC_CONST(0.004330491029241) },

2738 { 
FRAC_CONST
(0.031968676422869), FRAC_CONST(0.004435131839816) },

2739 { 
FRAC_CONST
(0.031953991334348), FRAC_CONST(0.004539725153692) },

2740 { 
FRAC_CONST
(0.031938964044252), FRAC_CONST(0.004644269850758) },

2741 { 
FRAC_CONST
(0.031923594713510), FRAC_CONST(0.004748764811426) },

2742 { 
FRAC_CONST
(0.031907883506716), FRAC_CONST(0.004853208916638) },

2743 { 
FRAC_CONST
(0.031891830592124), FRAC_CONST(0.004957601047881) },

2744 { 
FRAC_CONST
(0.031875436141648), FRAC_CONST(0.005061940087200) },

2745 { 
FRAC_CONST
(0.031858700330859), FRAC_CONST(0.005166224917208) },

2746 { 
FRAC_CONST
(0.031841623338985), FRAC_CONST(0.005270454421097) },

2747 { 
FRAC_CONST
(0.031824205348907), FRAC_CONST(0.005374627482653) },

2748 { 
FRAC_CONST
(0.031806446547156), FRAC_CONST(0.005478742986267) },

2749 { 
FRAC_CONST
(0.031788347123916), FRAC_CONST(0.005582799816945) },

2750 { 
FRAC_CONST
(0.031769907273017), FRAC_CONST(0.005686796860323) },

2751 { 
FRAC_CONST
(0.031751127191935), FRAC_CONST(0.005790733002674) },

2752 { 
FRAC_CONST
(0.031732007081789), FRAC_CONST(0.005894607130928) },

2753 { 
FRAC_CONST
(0.031712547147340), FRAC_CONST(0.005998418132675) },

2754 { 
FRAC_CONST
(0.031692747596989), FRAC_CONST(0.006102164896182) },

2755 { 
FRAC_CONST
(0.031672608642773), FRAC_CONST(0.006205846310406) },

2756 { 
FRAC_CONST
(0.031652130500364), FRAC_CONST(0.006309461265002) },

2757 { 
FRAC_CONST
(0.031631313389067), FRAC_CONST(0.006413008650337) },

2758 { 
FRAC_CONST
(0.031610157531816), FRAC_CONST(0.006516487357501) },

2759 { 
FRAC_CONST
(0.031588663155172), FRAC_CONST(0.006619896278321) },

2760 { 
FRAC_CONST
(0.031566830489325), FRAC_CONST(0.006723234305370) },

2761 { 
FRAC_CONST
(0.031544659768083), FRAC_CONST(0.006826500331981) },

2762 { 
FRAC_CONST
(0.031522151228878), FRAC_CONST(0.006929693252258) },

2763 { 
FRAC_CONST
(0.031499305112758), FRAC_CONST(0.007032811961088) },

2764 { 
FRAC_CONST
(0.031476121664387), FRAC_CONST(0.007135855354151) },

2765 { 
FRAC_CONST
(0.031452601132040), FRAC_CONST(0.007238822327937) },

2766 { 
FRAC_CONST
(0.031428743767604), FRAC_CONST(0.007341711779751) },

2767 { 
FRAC_CONST
(0.031404549826572), FRAC_CONST(0.007444522607730) },

2768 { 
FRAC_CONST
(0.031380019568042), FRAC_CONST(0.007547253710853) },

2769 { 
FRAC_CONST
(0.031355153254712), FRAC_CONST(0.007649903988952) },

2770 { 
FRAC_CONST
(0.031329951152882), FRAC_CONST(0.007752472342725) },

2771 { 
FRAC_CONST
(0.031304413532445), FRAC_CONST(0.007854957673748) },

2772 { 
FRAC_CONST
(0.031278540666888), FRAC_CONST(0.007957358884484) },

2773 { 
FRAC_CONST
(0.031252332833290), FRAC_CONST(0.008059674878300) },

2774 { 
FRAC_CONST
(0.031225790312316), FRAC_CONST(0.008161904559473) },

2775 { 
FRAC_CONST
(0.031198913388214), FRAC_CONST(0.008264046833205) },

2776 { 
FRAC_CONST
(0.031171702348814), FRAC_CONST(0.008366100605636) },

2777 { 
FRAC_CONST
(0.031144157485525), FRAC_CONST(0.008468064783849) },

2778 { 
FRAC_CONST
(0.031116279093331), FRAC_CONST(0.008569938275893) },

2779 { 
FRAC_CONST
(0.031088067470786), FRAC_CONST(0.008671719990782) },

2780 { 
FRAC_CONST
(0.031059522920014), FRAC_CONST(0.008773408838517) },

2781 { 
FRAC_CONST
(0.031030645746705), FRAC_CONST(0.008875003730092) },

2782 { 
FRAC_CONST
(0.031001436260110), FRAC_CONST(0.008976503577507) },

2783 { 
FRAC_CONST
(0.030971894773039), FRAC_CONST(0.009077907293780) },

2784 { 
FRAC_CONST
(0.030942021601857), FRAC_CONST(0.009179213792959) },

2785 { 
FRAC_CONST
(0.030911817066483), FRAC_CONST(0.009280421990133) },

2786 { 
FRAC_CONST
(0.030881281490382), FRAC_CONST(0.009381530801444) },

2787 { 
FRAC_CONST
(0.030850415200566), FRAC_CONST(0.009482539144097) },

2788 { 
FRAC_CONST
(0.030819218527589), FRAC_CONST(0.009583445936373) },

2789 { 
FRAC_CONST
(0.030787691805541), FRAC_CONST(0.009684250097643) },

2790 { 
FRAC_CONST
(0.030755835372048), FRAC_CONST(0.009784950548375) },

2791 { 
FRAC_CONST
(0.030723649568268), FRAC_CONST(0.009885546210147) },

2792 { 
FRAC_CONST
(0.030691134738883), FRAC_CONST(0.009986036005661) },

2793 { 
FRAC_CONST
(0.030658291232103), FRAC_CONST(0.010086418858753) },

2794 { 
FRAC_CONST
(0.030625119399655), FRAC_CONST(0.010186693694402) },

2795 { 
FRAC_CONST
(0.030591619596781), FRAC_CONST(0.010286859438745) },

2796 { 
FRAC_CONST
(0.030557792182239), FRAC_CONST(0.010386915019088) },

2797 { 
FRAC_CONST
(0.030523637518292), FRAC_CONST(0.010486859363916) },

2798 { 
FRAC_CONST
(0.030489155970710), FRAC_CONST(0.010586691402906) },

2799 { 
FRAC_CONST
(0.030454347908763), FRAC_CONST(0.010686410066936) },

2800 { 
FRAC_CONST
(0.030419213705216), FRAC_CONST(0.010786014288099) },

2801 { 
FRAC_CONST
(0.030383753736329), FRAC_CONST(0.010885502999714) },

2802 { 
FRAC_CONST
(0.030347968381849), FRAC_CONST(0.010984875136338) },

2803 { 
FRAC_CONST
(0.030311858025010), FRAC_CONST(0.011084129633775) },

2804 { 
FRAC_CONST
(0.030275423052523), FRAC_CONST(0.011183265429088) },

2805 { 
FRAC_CONST
(0.030238663854579), FRAC_CONST(0.011282281460612) },

2806 { 
FRAC_CONST
(0.030201580824838), FRAC_CONST(0.011381176667967) },

2807 { 
FRAC_CONST
(0.030164174360430), FRAC_CONST(0.011479949992062) },

2808 { 
FRAC_CONST
(0.030126444861948), FRAC_CONST(0.011578600375117) },

2809 { 
FRAC_CONST
(0.030088392733446), FRAC_CONST(0.011677126760663) },

2810 { 
FRAC_CONST
(0.030050018382430), FRAC_CONST(0.011775528093563) },

2811 { 
FRAC_CONST
(0.030011322219859), FRAC_CONST(0.011873803320018) },

2812 { 
FRAC_CONST
(0.029972304660138), FRAC_CONST(0.011971951387578) },

2813 { 
FRAC_CONST
(0.029932966121114), FRAC_CONST(0.012069971245157) },

2814 { 
FRAC_CONST
(0.029893307024070), FRAC_CONST(0.012167861843041) },

2815 { 
FRAC_CONST
(0.029853327793724), FRAC_CONST(0.012265622132901) },

2816 { 
FRAC_CONST
(0.029813028858222), FRAC_CONST(0.012363251067801) },

2817 { 
FRAC_CONST
(0.029772410649132), FRAC_CONST(0.012460747602215) },

2818 { 
FRAC_CONST
(0.029731473601443), FRAC_CONST(0.012558110692033) },

2819 { 
FRAC_CONST
(0.029690218153558), FRAC_CONST(0.012655339294575) },

2820 { 
FRAC_CONST
(0.029648644747289), FRAC_CONST(0.012752432368600) },

2821 { 
FRAC_CONST
(0.029606753827855), FRAC_CONST(0.012849388874320) },

2822 { 
FRAC_CONST
(0.029564545843872), FRAC_CONST(0.012946207773407) },

2823 { 
FRAC_CONST
(0.029522021247356), FRAC_CONST(0.013042888029011) },

2824 { 
FRAC_CONST
(0.029479180493710), FRAC_CONST(0.013139428605762) },

2825 { 
FRAC_CONST
(0.029436024041725), FRAC_CONST(0.013235828469789) },

2826 { 
FRAC_CONST
(0.029392552353570), FRAC_CONST(0.013332086588727) },

2827 { 
FRAC_CONST
(0.029348765894794), FRAC_CONST(0.013428201931728) },

2828 { 
FRAC_CONST
(0.029304665134313), FRAC_CONST(0.013524173469475) },

2829 { 
FRAC_CONST
(0.029260250544412), FRAC_CONST(0.013620000174189) },

2830 { 
FRAC_CONST
(0.029215522600735), FRAC_CONST(0.013715681019643) },

2831 { 
FRAC_CONST
(0.029170481782283), FRAC_CONST(0.013811214981173) },

2832 { 
FRAC_CONST
(0.029125128571406), FRAC_CONST(0.013906601035686) },

2833 { 
FRAC_CONST
(0.029079463453801), FRAC_CONST(0.014001838161674) },

2834 { 
FRAC_CONST
(0.029033486918505), FRAC_CONST(0.014096925339225) },

2835 { 
FRAC_CONST
(0.028987199457889), FRAC_CONST(0.014191861550031) },

2836 { 
FRAC_CONST
(0.028940601567655), FRAC_CONST(0.014286645777401) },

2837 { 
FRAC_CONST
(0.028893693746829), FRAC_CONST(0.014381277006273) },

2838 { 
FRAC_CONST
(0.028846476497755), FRAC_CONST(0.014475754223221) },

2839 { 
FRAC_CONST
(0.028798950326094), FRAC_CONST(0.014570076416472) },

2840 { 
FRAC_CONST
(0.028751115740811), FRAC_CONST(0.014664242575910) },

2841 { 
FRAC_CONST
(0.028702973254178), FRAC_CONST(0.014758251693091) },

2842 { 
FRAC_CONST
(0.028654523381760), FRAC_CONST(0.014852102761253) },

2843 { 
FRAC_CONST
(0.028605766642418), FRAC_CONST(0.014945794775326) },

2844 { 
FRAC_CONST
(0.028556703558297), FRAC_CONST(0.015039326731945) },

2845 { 
FRAC_CONST
(0.028507334654823), FRAC_CONST(0.015132697629457) },

2846 { 
FRAC_CONST
(0.028457660460698), FRAC_CONST(0.015225906467935) },

2847 { 
FRAC_CONST
(0.028407681507891), FRAC_CONST(0.015318952249187) },

2848 { 
FRAC_CONST
(0.028357398331639), FRAC_CONST(0.015411833976768) },

2849 { 
FRAC_CONST
(0.028306811470432), FRAC_CONST(0.015504550655988) },

2850 { 
FRAC_CONST
(0.028255921466016), FRAC_CONST(0.015597101293927) },

2851 { 
FRAC_CONST
(0.028204728863381), FRAC_CONST(0.015689484899442) },

2852 { 
FRAC_CONST
(0.028153234210760), FRAC_CONST(0.015781700483179) },

2853 { 
FRAC_CONST
(0.028101438059619), FRAC_CONST(0.015873747057582) },

2854 { 
FRAC_CONST
(0.028049340964652), FRAC_CONST(0.015965623636907) },

2855 { 
FRAC_CONST
(0.027996943483779), FRAC_CONST(0.016057329237229) },

2856 { 
FRAC_CONST
(0.027944246178133), FRAC_CONST(0.016148862876456) },

2857 { 
FRAC_CONST
(0.027891249612061), FRAC_CONST(0.016240223574335) },

2858 { 
FRAC_CONST
(0.027837954353113), FRAC_CONST(0.016331410352467) },

2859 { 
FRAC_CONST
(0.027784360972039), FRAC_CONST(0.016422422234315) },

2860 { 
FRAC_CONST
(0.027730470042780), FRAC_CONST(0.016513258245214) },

2861 { 
FRAC_CONST
(0.027676282142466), FRAC_CONST(0.016603917412384) },

2862 { 
FRAC_CONST
(0.027621797851405), FRAC_CONST(0.016694398764938) },

2863 { 
FRAC_CONST
(0.027567017753080), FRAC_CONST(0.016784701333894) },

2864 { 
FRAC_CONST
(0.027511942434143), FRAC_CONST(0.016874824152183) },

2865 { 
FRAC_CONST
(0.027456572484404), FRAC_CONST(0.016964766254662) },

2866 { 
FRAC_CONST
(0.027400908496833), FRAC_CONST(0.017054526678124) },

2867 { 
FRAC_CONST
(0.027344951067546), FRAC_CONST(0.017144104461307) },

2868 { 
FRAC_CONST
(0.027288700795801), FRAC_CONST(0.017233498644904) },

2869 { 
FRAC_CONST
(0.027232158283994), FRAC_CONST(0.017322708271577) },

2870 { 
FRAC_CONST
(0.027175324137651), FRAC_CONST(0.017411732385960) },

2871 { 
FRAC_CONST
(0.027118198965418), FRAC_CONST(0.017500570034678) },

2872 { 
FRAC_CONST
(0.027060783379060), FRAC_CONST(0.017589220266351) },

2873 { 
FRAC_CONST
(0.027003077993454), FRAC_CONST(0.017677682131607) },

2874 { 
FRAC_CONST
(0.026945083426576), FRAC_CONST(0.017765954683088) },

2875 { 
FRAC_CONST
(0.026886800299502), FRAC_CONST(0.017854036975468) },

2876 { 
FRAC_CONST
(0.026828229236397), FRAC_CONST(0.017941928065456) },

2877 { 
FRAC_CONST
(0.026769370864511), FRAC_CONST(0.018029627011808) },

2878 { 
FRAC_CONST
(0.026710225814170), FRAC_CONST(0.018117132875340) },

2879 { 
FRAC_CONST
(0.026650794718768), FRAC_CONST(0.018204444718934) },

2880 { 
FRAC_CONST
(0.026591078214767), FRAC_CONST(0.018291561607551) },

2881 { 
FRAC_CONST
(0.026531076941680), FRAC_CONST(0.018378482608238) },

2882 { 
FRAC_CONST
(0.026470791542075), FRAC_CONST(0.018465206790142) },

2883 { 
FRAC_CONST
(0.026410222661558), FRAC_CONST(0.018551733224515) },

2884 { 
FRAC_CONST
(0.026349370948775), FRAC_CONST(0.018638060984730) },

2885 { 
FRAC_CONST
(0.026288237055398), FRAC_CONST(0.018724189146286) },

2886 { 
FRAC_CONST
(0.026226821636121), FRAC_CONST(0.018810116786819) },

2887 { 
FRAC_CONST
(0.026165125348656), FRAC_CONST(0.018895842986112) },

2888 { 
FRAC_CONST
(0.026103148853718), FRAC_CONST(0.018981366826109) },

2889 { 
FRAC_CONST
(0.026040892815028), FRAC_CONST(0.019066687390916) },

2890 { 
FRAC_CONST
(0.025978357899296), FRAC_CONST(0.019151803766819) },

2891 { 
FRAC_CONST
(0.025915544776223), FRAC_CONST(0.019236715042290) },

2892 { 
FRAC_CONST
(0.025852454118485), FRAC_CONST(0.019321420307998) },

2893 { 
FRAC_CONST
(0.025789086601733), FRAC_CONST(0.019405918656817) },

2894 { 
FRAC_CONST
(0.025725442904582), FRAC_CONST(0.019490209183837) },

2895 { 
FRAC_CONST
(0.025661523708606), FRAC_CONST(0.019574290986376) },

2896 { 
FRAC_CONST
(0.025597329698327), FRAC_CONST(0.019658163163984) },

2897 { 
FRAC_CONST
(0.025532861561211), FRAC_CONST(0.019741824818458) },

2898 { 
FRAC_CONST
(0.025468119987662), FRAC_CONST(0.019825275053848) },

2899 { 
FRAC_CONST
(0.025403105671008), FRAC_CONST(0.019908512976470) },

2900 { 
FRAC_CONST
(0.025337819307501), FRAC_CONST(0.019991537694913) },

2901 { 
FRAC_CONST
(0.025272261596305), FRAC_CONST(0.020074348320047) },

2902 { 
FRAC_CONST
(0.025206433239491), FRAC_CONST(0.020156943965039) },

2903 { 
FRAC_CONST
(0.025140334942028), FRAC_CONST(0.020239323745355) },

2904 { 
FRAC_CONST
(0.025073967411776), FRAC_CONST(0.020321486778774) },

2905 { 
FRAC_CONST
(0.025007331359476), FRAC_CONST(0.020403432185395) },

2906 { 
FRAC_CONST
(0.024940427498748), FRAC_CONST(0.020485159087650) },

2907 { 
FRAC_CONST
(0.024873256546079), FRAC_CONST(0.020566666610309) },

2908 { 
FRAC_CONST
(0.024805819220816), FRAC_CONST(0.020647953880491) },

2909 { 
FRAC_CONST
(0.024738116245157), FRAC_CONST(0.020729020027676) },

2910 { 
FRAC_CONST
(0.024670148344147), FRAC_CONST(0.020809864183709) },

2911 { 
FRAC_CONST
(0.024601916245669), FRAC_CONST(0.020890485482816) },

2912 { 
FRAC_CONST
(0.024533420680433), FRAC_CONST(0.020970883061607) },

2913 { 
FRAC_CONST
(0.024464662381971), FRAC_CONST(0.021051056059087) },

2914 { 
FRAC_CONST
(0.024395642086630), FRAC_CONST(0.021131003616670) },

2915 { 
FRAC_CONST
(0.024326360533561), FRAC_CONST(0.021210724878181) },

2916 { 
FRAC_CONST
(0.024256818464715), FRAC_CONST(0.021290218989868) },

2917 { 
FRAC_CONST
(0.024187016624830), FRAC_CONST(0.021369485100415) },

2918 { 
FRAC_CONST
(0.024116955761430), FRAC_CONST(0.021448522360944) },

2919 { 
FRAC_CONST
(0.024046636624808), FRAC_CONST(0.021527329925030) },

2920 { 
FRAC_CONST
(0.023976059968027), FRAC_CONST(0.021605906948708) },

2921 { 
FRAC_CONST
(0.023905226546906), FRAC_CONST(0.021684252590480) },

2922 { 
FRAC_CONST
(0.023834137120014), FRAC_CONST(0.021762366011328) },

2923 { 
FRAC_CONST
(0.023762792448662), FRAC_CONST(0.021840246374720) },

2924 { 
FRAC_CONST
(0.023691193296893), FRAC_CONST(0.021917892846620) },

2925 { 
FRAC_CONST
(0.023619340431478), FRAC_CONST(0.021995304595495) },

2926 { 
FRAC_CONST
(0.023547234621902), FRAC_CONST(0.022072480792330) },

2927 { 
FRAC_CONST
(0.023474876640361), FRAC_CONST(0.022149420610628) },

2928 { 
FRAC_CONST
(0.023402267261751), FRAC_CONST(0.022226123226426) },

2929 { 
FRAC_CONST
(0.023329407263659), FRAC_CONST(0.022302587818300) },

2930 { 
FRAC_CONST
(0.023256297426359), FRAC_CONST(0.022378813567377) },

2931 { 
FRAC_CONST
(0.023182938532797), FRAC_CONST(0.022454799657339) },

2932 { 
FRAC_CONST
(0.023109331368588), FRAC_CONST(0.022530545274437) },

2933 { 
FRAC_CONST
(0.023035476722006), FRAC_CONST(0.022606049607496) },

2934 { 
FRAC_CONST
(0.022961375383975), FRAC_CONST(0.022681311847926) },

2935 { 
FRAC_CONST
(0.022887028148061), FRAC_CONST(0.022756331189727) },

2936 { 
FRAC_CONST
(0.022812435810462), FRAC_CONST(0.022831106829504) },

2937 { 
FRAC_CONST
(0.022737599170003), FRAC_CONST(0.022905637966469) },

2938 { 
FRAC_CONST
(0.022662519028125), FRAC_CONST(0.022979923802453) },

2939 { 
FRAC_CONST
(0.022587196188874), FRAC_CONST(0.023053963541915) },

2940 { 
FRAC_CONST
(0.022511631458899), FRAC_CONST(0.023127756391950) },

2941 { 
FRAC_CONST
(0.022435825647437), FRAC_CONST(0.023201301562294) },

2942 { 
FRAC_CONST
(0.022359779566306), FRAC_CONST(0.023274598265338) },

2943 { 
FRAC_CONST
(0.022283494029900), FRAC_CONST(0.023347645716133) },

2944 { 
FRAC_CONST
(0.022206969855176), FRAC_CONST(0.023420443132400) },

2945 { 
FRAC_CONST
(0.022130207861645), FRAC_CONST(0.023492989734537) },

2946 { 
FRAC_CONST
(0.022053208871367), FRAC_CONST(0.023565284745628) },

2947 { 
FRAC_CONST
(0.021975973708940), FRAC_CONST(0.023637327391451) },

2948 { 
FRAC_CONST
(0.021898503201489), FRAC_CONST(0.023709116900488) },

2949 { 
FRAC_CONST
(0.021820798178663), FRAC_CONST(0.023780652503931) },

2950 { 
FRAC_CONST
(0.021742859472618), FRAC_CONST(0.023851933435691) },

2951 { 
FRAC_CONST
(0.021664687918017), FRAC_CONST(0.023922958932406) },

2952 { 
FRAC_CONST
(0.021586284352013), FRAC_CONST(0.023993728233451) },

2953 { 
FRAC_CONST
(0.021507649614247), FRAC_CONST(0.024064240580942) },

2954 { 
FRAC_CONST
(0.021428784546832), FRAC_CONST(0.024134495219750) },

2955 { 
FRAC_CONST
(0.021349689994350), FRAC_CONST(0.024204491397504) },

2956 { 
FRAC_CONST
(0.021270366803840), FRAC_CONST(0.024274228364600) },

2957 { 
FRAC_CONST
(0.021190815824791), FRAC_CONST(0.024343705374213) },

2958 { 
FRAC_CONST
(0.021111037909128), FRAC_CONST(0.024412921682298) },

2959 { 
FRAC_CONST
(0.021031033911210), FRAC_CONST(0.024481876547605) },

2960 { 
FRAC_CONST
(0.020950804687815), FRAC_CONST(0.024550569231683) },

2961 { 
FRAC_CONST
(0.020870351098134), FRAC_CONST(0.024618998998889) },

2962 { 
FRAC_CONST
(0.020789674003759), FRAC_CONST(0.024687165116394) },

2963 { 
FRAC_CONST
(0.020708774268678), FRAC_CONST(0.024755066854194) },

2964 { 
FRAC_CONST
(0.020627652759262), FRAC_CONST(0.024822703485116) },

2965 { 
FRAC_CONST
(0.020546310344257), FRAC_CONST(0.024890074284826) },

2966 { 
FRAC_CONST
(0.020464747894775), FRAC_CONST(0.024957178531837) },

2967 { 
FRAC_CONST
(0.020382966284284), FRAC_CONST(0.025024015507516) },

2968 { 
FRAC_CONST
(0.020300966388600), FRAC_CONST(0.025090584496093) },

2969 { 
FRAC_CONST
(0.020218749085876), FRAC_CONST(0.025156884784668) },

2970 { 
FRAC_CONST
(0.020136315256592), FRAC_CONST(0.025222915663218) },

2971 { 
FRAC_CONST
(0.020053665783549), FRAC_CONST(0.025288676424605) },

2972 { 
FRAC_CONST
(0.019970801551857), FRAC_CONST(0.025354166364584) },

2973 { 
FRAC_CONST
(0.019887723448925), FRAC_CONST(0.025419384781811) },

2974 { 
FRAC_CONST
(0.019804432364452), FRAC_CONST(0.025484330977848) },

2975 { 
FRAC_CONST
(0.019720929190419), FRAC_CONST(0.025549004257175) },

2976 { 
FRAC_CONST
(0.019637214821078), FRAC_CONST(0.025613403927192) },

2977 { 
FRAC_CONST
(0.019553290152943), FRAC_CONST(0.025677529298230) },

2978 { 
FRAC_CONST
(0.019469156084779), FRAC_CONST(0.025741379683559) },

2979 { 
FRAC_CONST
(0.019384813517595), FRAC_CONST(0.025804954399392) },

2980 { 
FRAC_CONST
(0.019300263354632), FRAC_CONST(0.025868252764895) },

2981 { 
FRAC_CONST
(0.019215506501354), FRAC_CONST(0.025931274102193) },

2982 { 
FRAC_CONST
(0.019130543865439), FRAC_CONST(0.025994017736379) },

2983 { 
FRAC_CONST
(0.019045376356769), FRAC_CONST(0.026056482995518) },

2984 { 
FRAC_CONST
(0.018960004887419), FRAC_CONST(0.026118669210657) },

2985 { 
FRAC_CONST
(0.018874430371648), FRAC_CONST(0.026180575715833) },

2986 { 
FRAC_CONST
(0.018788653725892), FRAC_CONST(0.026242201848076) },

2987 { 
FRAC_CONST
(0.018702675868750), FRAC_CONST(0.026303546947421) },

2988 { 
FRAC_CONST
(0.018616497720974), FRAC_CONST(0.026364610356909) },

2989 { 
FRAC_CONST
(0.018530120205464), FRAC_CONST(0.026425391422602) },

2990 { 
FRAC_CONST
(0.018443544247254), FRAC_CONST(0.026485889493583) },

2991 { 
FRAC_CONST
(0.018356770773502), FRAC_CONST(0.026546103921965) },

2992 { 
FRAC_CONST
(0.018269800713483), FRAC_CONST(0.026606034062902) },

2993 { 
FRAC_CONST
(0.018182634998576), FRAC_CONST(0.026665679274589) },

2994 { 
FRAC_CONST
(0.018095274562256), FRAC_CONST(0.026725038918274) },

2995 { 
FRAC_CONST
(0.018007720340083), FRAC_CONST(0.026784112358263) },

2996 { 
FRAC_CONST
(0.017919973269692), FRAC_CONST(0.026842898961926) },

2997 { 
FRAC_CONST
(0.017832034290785), FRAC_CONST(0.026901398099707) },

2998 { 
FRAC_CONST
(0.017743904345116), FRAC_CONST(0.026959609145127) },

2999 { 
FRAC_CONST
(0.017655584376488), FRAC_CONST(0.027017531474792) },

3000 { 
FRAC_CONST
(0.017567075330734), FRAC_CONST(0.027075164468401) },

3001 { 
FRAC_CONST
(0.017478378155718), FRAC_CONST(0.027132507508750) },

3002 { 
FRAC_CONST
(0.017389493801313), FRAC_CONST(0.027189559981742) },

3003 { 
FRAC_CONST
(0.017300423219401), FRAC_CONST(0.027246321276391) },

3004 { 
FRAC_CONST
(0.017211167363854), FRAC_CONST(0.027302790784828) },

3005 { 
FRAC_CONST
(0.017121727190533), FRAC_CONST(0.027358967902310) },

3006 { 
FRAC_CONST
(0.017032103657269), FRAC_CONST(0.027414852027226) },

3007 { 
FRAC_CONST
(0.016942297723858), FRAC_CONST(0.027470442561102) },

3008 { 
FRAC_CONST
(0.016852310352050), FRAC_CONST(0.027525738908608) },

3009 { 
FRAC_CONST
(0.016762142505537), FRAC_CONST(0.027580740477564) },

3010 { 
FRAC_CONST
(0.016671795149944), FRAC_CONST(0.027635446678948) },

3011 { 
FRAC_CONST
(0.016581269252819), FRAC_CONST(0.027689856926900) },

3012 { 
FRAC_CONST
(0.016490565783622), FRAC_CONST(0.027743970638730) },

3013 { 
FRAC_CONST
(0.016399685713714), FRAC_CONST(0.027797787234924) },

3014 { 
FRAC_CONST
(0.016308630016347), FRAC_CONST(0.027851306139149) },

3015 { 
FRAC_CONST
(0.016217399666655), FRAC_CONST(0.027904526778260) },

3016 { 
FRAC_CONST
(0.016125995641641), FRAC_CONST(0.027957448582309) },

3017 { 
FRAC_CONST
(0.016034418920170), FRAC_CONST(0.028010070984544) },

3018 { 
FRAC_CONST
(0.015942670482954), FRAC_CONST(0.028062393421421) },

3019 { 
FRAC_CONST
(0.015850751312545), FRAC_CONST(0.028114415332610) },

3020 { 
FRAC_CONST
(0.015758662393324), FRAC_CONST(0.028166136160998) },

3021 { 
FRAC_CONST
(0.015666404711489), FRAC_CONST(0.028217555352697) },

3022 { 
FRAC_CONST
(0.015573979255046), FRAC_CONST(0.028268672357047) },

3023 { 
FRAC_CONST
(0.015481387013797), FRAC_CONST(0.028319486626627) },

3024 { 
FRAC_CONST
(0.015388628979331), FRAC_CONST(0.028369997617257) },

3025 { 
FRAC_CONST
(0.015295706145012), FRAC_CONST(0.028420204788004) },

3026 { 
FRAC_CONST
(0.015202619505968), FRAC_CONST(0.028470107601191) },

3027 { 
FRAC_CONST
(0.015109370059084), FRAC_CONST(0.028519705522399) },

3028 { 
FRAC_CONST
(0.015015958802984), FRAC_CONST(0.028568998020472) },

3029 { 
FRAC_CONST
(0.014922386738030), FRAC_CONST(0.028617984567529) },

3030 { 
FRAC_CONST
(0.014828654866302), FRAC_CONST(0.028666664638963) },

3031 { 
FRAC_CONST
(0.014734764191593), FRAC_CONST(0.028715037713449) },

3032 { 
FRAC_CONST
(0.014640715719398), FRAC_CONST(0.028763103272951) },

3033 { 
FRAC_CONST
(0.014546510456900), FRAC_CONST(0.028810860802724) },

3034 { 
FRAC_CONST
(0.014452149412962), FRAC_CONST(0.028858309791325) },

3035 { 
FRAC_CONST
(0.014357633598114), FRAC_CONST(0.028905449730613) },

3036 { 
FRAC_CONST
(0.014262964024545), FRAC_CONST(0.028952280115756) },

3037 { 
FRAC_CONST
(0.014168141706090), FRAC_CONST(0.028998800445240) },

3038 { 
FRAC_CONST
(0.014073167658220), FRAC_CONST(0.029045010220868) },

3039 { 
FRAC_CONST
(0.013978042898030), FRAC_CONST(0.029090908947771) },

3040 { 
FRAC_CONST
(0.013882768444231), FRAC_CONST(0.029136496134411) },

3041 { 
FRAC_CONST
(0.013787345317136), FRAC_CONST(0.029181771292585) },

3042 { 
FRAC_CONST
(0.013691774538648), FRAC_CONST(0.029226733937433) },

3043 { 
FRAC_CONST
(0.013596057132255), FRAC_CONST(0.029271383587441) },

3044 { 
FRAC_CONST
(0.013500194123014), FRAC_CONST(0.029315719764447) },

3045 { 
FRAC_CONST
(0.013404186537539), FRAC_CONST(0.029359741993647) },

3046 { 
FRAC_CONST
(0.013308035403995), FRAC_CONST(0.029403449803598) },

3047 { 
FRAC_CONST
(0.013211741752084), FRAC_CONST(0.029446842726223) },

3048 { 
FRAC_CONST
(0.013115306613032), FRAC_CONST(0.029489920296820) },

3049 { 
FRAC_CONST
(0.013018731019584), FRAC_CONST(0.029532682054063) },

3050 { 
FRAC_CONST
(0.012922016005985), FRAC_CONST(0.029575127540008) },

3051 { 
FRAC_CONST
(0.012825162607977), FRAC_CONST(0.029617256300097) },

3052 { 
FRAC_CONST
(0.012728171862781), FRAC_CONST(0.029659067883165) },

3053 { 
FRAC_CONST
(0.012631044809089), FRAC_CONST(0.029700561841444) },

3054 { 
FRAC_CONST
(0.012533782487056), FRAC_CONST(0.029741737730567) },

3055 { 
FRAC_CONST
(0.012436385938281), FRAC_CONST(0.029782595109573) },

3056 { 
FRAC_CONST
(0.012338856205805), FRAC_CONST(0.029823133540913) },

3057 { 
FRAC_CONST
(0.012241194334091), FRAC_CONST(0.029863352590452) },

3058 { 
FRAC_CONST
(0.012143401369021), FRAC_CONST(0.029903251827477) },

3059 { 
FRAC_CONST
(0.012045478357878), FRAC_CONST(0.029942830824699) },

3060 { 
FRAC_CONST
(0.011947426349339), FRAC_CONST(0.029982089158259) },

3061 { 
FRAC_CONST
(0.011849246393462), FRAC_CONST(0.030021026407731) },

3062 { 
FRAC_CONST
(0.011750939541676), FRAC_CONST(0.030059642156129) },

3063 { 
FRAC_CONST
(0.011652506846768), FRAC_CONST(0.030097935989909) },

3064 { 
FRAC_CONST
(0.011553949362874), FRAC_CONST(0.030135907498976) },

3065 { 
FRAC_CONST
(0.011455268145464), FRAC_CONST(0.030173556276684) },

3066 { 
FRAC_CONST
(0.011356464251335), FRAC_CONST(0.030210881919845) },

3067 { 
FRAC_CONST
(0.011257538738598), FRAC_CONST(0.030247884028732) },

3068 { 
FRAC_CONST
(0.011158492666665), FRAC_CONST(0.030284562207083) },

3069 { 
FRAC_CONST
(0.011059327096240), FRAC_CONST(0.030320916062102) },

3070 { 
FRAC_CONST
(0.010960043089307), FRAC_CONST(0.030356945204470) },

3071 { 
FRAC_CONST
(0.010860641709118), FRAC_CONST(0.030392649248343) },

3072 { 
FRAC_CONST
(0.010761124020182), FRAC_CONST(0.030428027811361) },

3073 { 
FRAC_CONST
(0.010661491088253), FRAC_CONST(0.030463080514646) },

3074 { 
FRAC_CONST
(0.010561743980319), FRAC_CONST(0.030497806982812) },

3075 { 
FRAC_CONST
(0.010461883764593), FRAC_CONST(0.030532206843968) },

3076 { 
FRAC_CONST
(0.010361911510496), FRAC_CONST(0.030566279729717) },

3077 { 
FRAC_CONST
(0.010261828288652), FRAC_CONST(0.030600025275167) },

3078 { 
FRAC_CONST
(0.010161635170872), FRAC_CONST(0.030633443118931) },

3079 { 
FRAC_CONST
(0.010061333230142), FRAC_CONST(0.030666532903129) },

3080 { 
FRAC_CONST
(0.009960923540617), FRAC_CONST(0.030699294273397) },

3081 { 
FRAC_CONST
(0.009860407177603), FRAC_CONST(0.030731726878888) },

3082 { 
FRAC_CONST
(0.009759785217550), FRAC_CONST(0.030763830372273) },

3083 { 
FRAC_CONST
(0.009659058738038), FRAC_CONST(0.030795604409750) },

3084 { 
FRAC_CONST
(0.009558228817767), FRAC_CONST(0.030827048651045) },

3085 { 
FRAC_CONST
(0.009457296536545), FRAC_CONST(0.030858162759415) },

3086 { 
FRAC_CONST
(0.009356262975275), FRAC_CONST(0.030888946401653) },

3087 { 
FRAC_CONST
(0.009255129215945), FRAC_CONST(0.030919399248091) },

3088 { 
FRAC_CONST
(0.009153896341616), FRAC_CONST(0.030949520972603) },

3089 { 
FRAC_CONST
(0.009052565436412), FRAC_CONST(0.030979311252611) },

3090 { 
FRAC_CONST
(0.008951137585505), FRAC_CONST(0.031008769769084) },

3091 { 
FRAC_CONST
(0.008849613875105), FRAC_CONST(0.031037896206544) },

3092 { 
FRAC_CONST
(0.008747995392451), FRAC_CONST(0.031066690253072) },

3093 { 
FRAC_CONST
(0.008646283225794), FRAC_CONST(0.031095151600306) },

3094 { 
FRAC_CONST
(0.008544478464390), FRAC_CONST(0.031123279943448) },

3095 { 
FRAC_CONST
(0.008442582198486), FRAC_CONST(0.031151074981266) },

3096 { 
FRAC_CONST
(0.008340595519310), FRAC_CONST(0.031178536416098) },

3097 { 
FRAC_CONST
(0.008238519519057), FRAC_CONST(0.031205663953853) },

3098 { 
FRAC_CONST
(0.008136355290878), FRAC_CONST(0.031232457304017) },

3099 { 
FRAC_CONST
(0.008034103928871), FRAC_CONST(0.031258916179656) },

3100 { 
FRAC_CONST
(0.007931766528065), FRAC_CONST(0.031285040297416) },

3101 { 
FRAC_CONST
(0.007829344184412), FRAC_CONST(0.031310829377528) },

3102 { 
FRAC_CONST
(0.007726837994772), FRAC_CONST(0.031336283143813) },

3103 { 
FRAC_CONST
(0.007624249056906), FRAC_CONST(0.031361401323680) },

3104 { 
FRAC_CONST
(0.007521578469457), FRAC_CONST(0.031386183648135) },

3105 { 
FRAC_CONST
(0.007418827331946), FRAC_CONST(0.031410629851778) },

3106 { 
FRAC_CONST
(0.007315996744755), FRAC_CONST(0.031434739672811) },

3107 { 
FRAC_CONST
(0.007213087809115), FRAC_CONST(0.031458512853036) },

3108 { 
FRAC_CONST
(0.007110101627101), FRAC_CONST(0.031481949137863) },

3109 { 
FRAC_CONST
(0.007007039301610), FRAC_CONST(0.031505048276306) },

3110 { 
FRAC_CONST
(0.006903901936357), FRAC_CONST(0.031527810020993) },

3111 { 
FRAC_CONST
(0.006800690635862), FRAC_CONST(0.031550234128164) },

3112 { 
FRAC_CONST
(0.006697406505433), FRAC_CONST(0.031572320357675) },

3113 { 
FRAC_CONST
(0.006594050651161), FRAC_CONST(0.031594068473000) },

3114 { 
FRAC_CONST
(0.006490624179905), FRAC_CONST(0.031615478241233) },

3115 { 
FRAC_CONST
(0.006387128199278), FRAC_CONST(0.031636549433095) },

3116 { 
FRAC_CONST
(0.006283563817639), FRAC_CONST(0.031657281822929) },

3117 { 
FRAC_CONST
(0.006179932144080), FRAC_CONST(0.031677675188707) },

3118 { 
FRAC_CONST
(0.006076234288412), FRAC_CONST(0.031697729312034) },

3119 { 
FRAC_CONST
(0.005972471361157), FRAC_CONST(0.031717443978146) },

3120 { 
FRAC_CONST
(0.005868644473532), FRAC_CONST(0.031736818975914) },

3121 { 
FRAC_CONST
(0.005764754737440), FRAC_CONST(0.031755854097848) },

3122 { 
FRAC_CONST
(0.005660803265456), FRAC_CONST(0.031774549140098) },

3123 { 
FRAC_CONST
(0.005556791170816), FRAC_CONST(0.031792903902453) },

3124 { 
FRAC_CONST
(0.005452719567407), FRAC_CONST(0.031810918188350) },

3125 { 
FRAC_CONST
(0.005348589569753), FRAC_CONST(0.031828591804869) },

3126 { 
FRAC_CONST
(0.005244402293001), FRAC_CONST(0.031845924562742) },

3127 { 
FRAC_CONST
(0.005140158852914), FRAC_CONST(0.031862916276347) },

3128 { 
FRAC_CONST
(0.005035860365855), FRAC_CONST(0.031879566763717) },

3129 { 
FRAC_CONST
(0.004931507948778), FRAC_CONST(0.031895875846539) },

3130 { 
FRAC_CONST
(0.004827102719212), FRAC_CONST(0.031911843350155) },

3131 { 
FRAC_CONST
(0.004722645795254), FRAC_CONST(0.031927469103567) },

3132 { 
FRAC_CONST
(0.004618138295554), FRAC_CONST(0.031942752939435) },

3133 { 
FRAC_CONST
(0.004513581339303), FRAC_CONST(0.031957694694082) },

3134 { 
FRAC_CONST
(0.004408976046222), FRAC_CONST(0.031972294207493) },

3135 { 
FRAC_CONST
(0.004304323536549), FRAC_CONST(0.031986551323320) },

3136 { 
FRAC_CONST
(0.004199624931030), FRAC_CONST(0.032000465888879) },

3137 { 
FRAC_CONST
(0.004094881350902), FRAC_CONST(0.032014037755158) },

3138 { 
FRAC_CONST
(0.003990093917884), FRAC_CONST(0.032027266776813) },

3139 { 
FRAC_CONST
(0.003885263754166), FRAC_CONST(0.032040152812170) },

3140 { 
FRAC_CONST
(0.003780391982394), FRAC_CONST(0.032052695723232) },

3141 { 
FRAC_CONST
(0.003675479725661), FRAC_CONST(0.032064895375674) },

3142 { 
FRAC_CONST
(0.003570528107494), FRAC_CONST(0.032076751638847) },

3143 { 
FRAC_CONST
(0.003465538251839), FRAC_CONST(0.032088264385780) },

3144 { 
FRAC_CONST
(0.003360511283053), FRAC_CONST(0.032099433493181) },

3145 { 
FRAC_CONST
(0.003255448325892), FRAC_CONST(0.032110258841438) },

3146 { 
FRAC_CONST
(0.003150350505494), FRAC_CONST(0.032120740314619) },

3147 { 
FRAC_CONST
(0.003045218947373), FRAC_CONST(0.032130877800478) },

3148 { 
FRAC_CONST
(0.002940054777404), FRAC_CONST(0.032140671190449) },

3149 { 
FRAC_CONST
(0.002834859121810), FRAC_CONST(0.032150120379653) },

3150 { 
FRAC_CONST
(0.002729633107153), FRAC_CONST(0.032159225266897) },

3151 { 
FRAC_CONST
(0.002624377860318), FRAC_CONST(0.032167985754674) },

3152 { 
FRAC_CONST
(0.002519094508504), FRAC_CONST(0.032176401749168) },

3153 { 
FRAC_CONST
(0.002413784179212), FRAC_CONST(0.032184473160250) },

3154 { 
FRAC_CONST
(0.002308448000231), FRAC_CONST(0.032192199901481) },

3155 { 
FRAC_CONST
(0.002203087099626), FRAC_CONST(0.032199581890114) },

3156 { 
FRAC_CONST
(0.002097702605728), FRAC_CONST(0.032206619047093) },

3157 { 
FRAC_CONST
(0.001992295647121), FRAC_CONST(0.032213311297057) },

3158 { 
FRAC_CONST
(0.001886867352628), FRAC_CONST(0.032219658568338) },

3159 { 
FRAC_CONST
(0.001781418851302), FRAC_CONST(0.032225660792960) },

3160 { 
FRAC_CONST
(0.001675951272410), FRAC_CONST(0.032231317906644) },

3161 { 
FRAC_CONST
(0.001570465745428), FRAC_CONST(0.032236629848809) },

3162 { 
FRAC_CONST
(0.001464963400018), FRAC_CONST(0.032241596562566) },

3163 { 
FRAC_CONST
(0.001359445366028), FRAC_CONST(0.032246217994727) },

3164 { 
FRAC_CONST
(0.001253912773470), FRAC_CONST(0.032250494095799) },

3165 { 
FRAC_CONST
(0.001148366752513), FRAC_CONST(0.032254424819990) },

3166 { 
FRAC_CONST
(0.001042808433471), FRAC_CONST(0.032258010125204) },

3167 { 
FRAC_CONST
(0.000937238946789), FRAC_CONST(0.032261249973045) },

3168 { 
FRAC_CONST
(0.000831659423030), FRAC_CONST(0.032264144328817) },

3169 { 
FRAC_CONST
(0.000726070992868), FRAC_CONST(0.032266693161525) },

3170 { 
FRAC_CONST
(0.000620474787068), FRAC_CONST(0.032268896443871) },

3171 { 
FRAC_CONST
(0.000514871936481), FRAC_CONST(0.032270754152261) },

3172 { 
FRAC_CONST
(0.000409263572030), FRAC_CONST(0.032272266266801) },

3173 { 
FRAC_CONST
(0.000303650824695), FRAC_CONST(0.032273432771295) },

3174 { 
FRAC_CONST
(0.000198034825504), FRAC_CONST(0.032274253653254) },

3175 { 
FRAC_CONST
(0.000092416705518), FRAC_CONST(0.032274728903884) }

3178 #ifde‡
LD_DEC


3180 
ALIGN
 c⁄° 
com∂ex_t
 
	gmd˘_èb_960
[] =

3182 { 
FRAC_CONST
(0.045643531183573), FRAC_CONST(0.000037342034959) },

3183 { 
FRAC_CONST
(0.045642309173789), FRAC_CONST(0.000336075315362) },

3184 { 
FRAC_CONST
(0.045639131999390), FRAC_CONST(0.000634794199417) },

3185 { 
FRAC_CONST
(0.045633999796474), FRAC_CONST(0.000933485891002) },

3186 { 
FRAC_CONST
(0.045626912784890), FRAC_CONST(0.001232137595157) },

3187 { 
FRAC_CONST
(0.045617871268219), FRAC_CONST(0.001530736518639) },

3188 { 
FRAC_CONST
(0.045606875633772), FRAC_CONST(0.001829269870464) },

3189 { 
FRAC_CONST
(0.045593926352564), FRAC_CONST(0.002127724862455) },

3190 { 
FRAC_CONST
(0.045579023979299), FRAC_CONST(0.002426088709795) },

3191 { 
FRAC_CONST
(0.045562169152346), FRAC_CONST(0.002724348631569) },

3192 { 
FRAC_CONST
(0.045543362593709), FRAC_CONST(0.003022491851315) },

3193 { 
FRAC_CONST
(0.045522605108999), FRAC_CONST(0.003320505597570) },

3194 { 
FRAC_CONST
(0.045499897587396), FRAC_CONST(0.003618377104416) },

3195 { 
FRAC_CONST
(0.045475241001617), FRAC_CONST(0.003916093612031) },

3196 { 
FRAC_CONST
(0.045448636407866), FRAC_CONST(0.004213642367228) },

3197 { 
FRAC_CONST
(0.045420084945797), FRAC_CONST(0.004511010624011) },

3198 { 
FRAC_CONST
(0.045389587838458), FRAC_CONST(0.004808185644112) },

3199 { 
FRAC_CONST
(0.045357146392244), FRAC_CONST(0.005105154697544) },

3200 { 
FRAC_CONST
(0.045322761996840), FRAC_CONST(0.005401905063139) },

3201 { 
FRAC_CONST
(0.045286436125157), FRAC_CONST(0.005698424029100) },

3202 { 
FRAC_CONST
(0.045248170333275), FRAC_CONST(0.005994698893542) },

3203 { 
FRAC_CONST
(0.045207966260374), FRAC_CONST(0.006290716965035) },

3204 { 
FRAC_CONST
(0.045165825628663), FRAC_CONST(0.006586465563151) },

3205 { 
FRAC_CONST
(0.045121750243305), FRAC_CONST(0.006881932019003) },

3206 { 
FRAC_CONST
(0.045075741992343), FRAC_CONST(0.007177103675792) },

3207 { 
FRAC_CONST
(0.045027802846618), FRAC_CONST(0.007471967889347) },

3208 { 
FRAC_CONST
(0.044977934859683), FRAC_CONST(0.007766512028667) },

3209 { 
FRAC_CONST
(0.044926140167717), FRAC_CONST(0.008060723476460) },

3210 { 
FRAC_CONST
(0.044872420989432), FRAC_CONST(0.008354589629687) },

3211 { 
FRAC_CONST
(0.044816779625979), FRAC_CONST(0.008648097900101) },

3212 { 
FRAC_CONST
(0.044759218460849), FRAC_CONST(0.008941235714784) },

3213 { 
FRAC_CONST
(0.044699739959770), FRAC_CONST(0.009233990516688) },

3214 { 
FRAC_CONST
(0.044638346670603), FRAC_CONST(0.009526349765171) },

3215 { 
FRAC_CONST
(0.044575041223233), FRAC_CONST(0.009818300936537) },

3216 { 
FRAC_CONST
(0.044509826329454), FRAC_CONST(0.010109831524568) },

3217 { 
FRAC_CONST
(0.044442704782856), FRAC_CONST(0.010400929041064) },

3218 { 
FRAC_CONST
(0.044373679458701), FRAC_CONST(0.010691581016378) },

3219 { 
FRAC_CONST
(0.044302753313806), FRAC_CONST(0.010981774999945) },

3220 { 
FRAC_CONST
(0.044229929386409), FRAC_CONST(0.011271498560822) },

3221 { 
FRAC_CONST
(0.044155210796046), FRAC_CONST(0.011560739288214) },

3222 { 
FRAC_CONST
(0.044078600743413), FRAC_CONST(0.011849484792012) },

3223 { 
FRAC_CONST
(0.044000102510229), FRAC_CONST(0.012137722703321) },

3224 { 
FRAC_CONST
(0.043919719459097), FRAC_CONST(0.012425440674986) },

3225 { 
FRAC_CONST
(0.043837455033359), FRAC_CONST(0.012712626382127) },

3226 { 
FRAC_CONST
(0.043753312756950), FRAC_CONST(0.012999267522665) },

3227 { 
FRAC_CONST
(0.043667296234245), FRAC_CONST(0.013285351817848) },

3228 { 
FRAC_CONST
(0.043579409149906), FRAC_CONST(0.013570867012776) },

3229 { 
FRAC_CONST
(0.043489655268722), FRAC_CONST(0.013855800876928) },

3230 { 
FRAC_CONST
(0.043398038435451), FRAC_CONST(0.014140141204686) },

3231 { 
FRAC_CONST
(0.043304562574653), FRAC_CONST(0.014423875815857) },

3232 { 
FRAC_CONST
(0.043209231690524), FRAC_CONST(0.014706992556195) },

3233 { 
FRAC_CONST
(0.043112049866720), FRAC_CONST(0.014989479297920) },

3234 { 
FRAC_CONST
(0.043013021266188), FRAC_CONST(0.015271323940241) },

3235 { 
FRAC_CONST
(0.042912150130984), FRAC_CONST(0.015552514409871) },

3236 { 
FRAC_CONST
(0.042809440782090), FRAC_CONST(0.015833038661547) },

3237 { 
FRAC_CONST
(0.042704897619235), FRAC_CONST(0.016112884678543) },

3238 { 
FRAC_CONST
(0.042598525120698), FRAC_CONST(0.016392040473187) },

3239 { 
FRAC_CONST
(0.042490327843124), FRAC_CONST(0.016670494087374) },

3240 { 
FRAC_CONST
(0.042380310421324), FRAC_CONST(0.016948233593079) },

3241 { 
FRAC_CONST
(0.042268477568078), FRAC_CONST(0.017225247092864) },

3242 { 
FRAC_CONST
(0.042154834073934), FRAC_CONST(0.017501522720393) },

3243 { 
FRAC_CONST
(0.042039384807000), FRAC_CONST(0.017777048640940) },

3244 { 
FRAC_CONST
(0.041922134712739), FRAC_CONST(0.018051813051888) },

3245 { 
FRAC_CONST
(0.041803088813754), FRAC_CONST(0.018325804183247) },

3246 { 
FRAC_CONST
(0.041682252209576), FRAC_CONST(0.018599010298148) },

3247 { 
FRAC_CONST
(0.041559630076443), FRAC_CONST(0.018871419693350) },

3248 { 
FRAC_CONST
(0.041435227667079), FRAC_CONST(0.019143020699741) },

3249 { 
FRAC_CONST
(0.041309050310468), FRAC_CONST(0.019413801682838) },

3250 { 
FRAC_CONST
(0.041181103411629), FRAC_CONST(0.019683751043285) },

3251 { 
FRAC_CONST
(0.041051392451382), FRAC_CONST(0.019952857217350) },

3252 { 
FRAC_CONST
(0.040919922986111), FRAC_CONST(0.020221108677421) },

3253 { 
FRAC_CONST
(0.040786700647532), FRAC_CONST(0.020488493932496) },

3254 { 
FRAC_CONST
(0.040651731142446), FRAC_CONST(0.020755001528683) },

3255 { 
FRAC_CONST
(0.040515020252497), FRAC_CONST(0.021020620049682) },

3256 { 
FRAC_CONST
(0.040376573833925), FRAC_CONST(0.021285338117280) },

3257 { 
FRAC_CONST
(0.040236397817314), FRAC_CONST(0.021549144391836) },

3258 { 
FRAC_CONST
(0.040094498207337), FRAC_CONST(0.021812027572768) },

3259 { 
FRAC_CONST
(0.039950881082502), FRAC_CONST(0.022073976399034) },

3260 { 
FRAC_CONST
(0.039805552594888), FRAC_CONST(0.022334979649620) },

3261 { 
FRAC_CONST
(0.039658518969884), FRAC_CONST(0.022595026144014) },

3262 { 
FRAC_CONST
(0.039509786505922), FRAC_CONST(0.022854104742690) },

3263 { 
FRAC_CONST
(0.039359361574204), FRAC_CONST(0.023112204347583) },

3264 { 
FRAC_CONST
(0.039207250618434), FRAC_CONST(0.023369313902565) },

3265 { 
FRAC_CONST
(0.039053460154540), FRAC_CONST(0.023625422393919) },

3266 { 
FRAC_CONST
(0.038897996770393), FRAC_CONST(0.023880518850809) },

3267 { 
FRAC_CONST
(0.038740867125527), FRAC_CONST(0.024134592345752) },

3268 { 
FRAC_CONST
(0.038582077950852), FRAC_CONST(0.024387631995085) },

3269 { 
FRAC_CONST
(0.038421636048370), FRAC_CONST(0.024639626959432) },

3270 { 
FRAC_CONST
(0.038259548290876), FRAC_CONST(0.024890566444167) },

3271 { 
FRAC_CONST
(0.038095821621671), FRAC_CONST(0.025140439699877) },

3272 { 
FRAC_CONST
(0.037930463054261), FRAC_CONST(0.025389236022825) },

3273 { 
FRAC_CONST
(0.037763479672055), FRAC_CONST(0.025636944755403) },

3274 { 
FRAC_CONST
(0.037594878628068), FRAC_CONST(0.025883555286595) },

3275 { 
FRAC_CONST
(0.037424667144605), FRAC_CONST(0.026129057052425) },

3276 { 
FRAC_CONST
(0.037252852512960), FRAC_CONST(0.026373439536415) },

3277 { 
FRAC_CONST
(0.037079442093102), FRAC_CONST(0.026616692270033) },

3278 { 
FRAC_CONST
(0.036904443313354), FRAC_CONST(0.026858804833142) },

3279 { 
FRAC_CONST
(0.036727863670081), FRAC_CONST(0.027099766854444) },

3280 { 
FRAC_CONST
(0.036549710727369), FRAC_CONST(0.027339568011930) },

3281 { 
FRAC_CONST
(0.036369992116697), FRAC_CONST(0.027578198033315) },

3282 { 
FRAC_CONST
(0.036188715536611), FRAC_CONST(0.027815646696484) },

3283 { 
FRAC_CONST
(0.036005888752396), FRAC_CONST(0.028051903829926) },

3284 { 
FRAC_CONST
(0.035821519595745), FRAC_CONST(0.028286959313171) },

3285 { 
FRAC_CONST
(0.035635615964417), FRAC_CONST(0.028520803077226) },

3286 { 
FRAC_CONST
(0.035448185821906), FRAC_CONST(0.028753425105002) },

3287 { 
FRAC_CONST
(0.035259237197095), FRAC_CONST(0.028984815431745) },

3288 { 
FRAC_CONST
(0.035068778183914), FRAC_CONST(0.029214964145465) },

3289 { 
FRAC_CONST
(0.034876816940994), FRAC_CONST(0.029443861387355) },

3290 { 
FRAC_CONST
(0.034683361691315), FRAC_CONST(0.029671497352220) },

3291 { 
FRAC_CONST
(0.034488420721856), FRAC_CONST(0.029897862288892) },

3292 { 
FRAC_CONST
(0.034292002383240), FRAC_CONST(0.030122946500652) },

3293 { 
FRAC_CONST
(0.034094115089375), FRAC_CONST(0.030346740345641) },

3294 { 
FRAC_CONST
(0.033894767317093), FRAC_CONST(0.030569234237276) },

3295 { 
FRAC_CONST
(0.033693967605790), FRAC_CONST(0.030790418644658) },

3296 { 
FRAC_CONST
(0.033491724557057), FRAC_CONST(0.031010284092984) },

3297 { 
FRAC_CONST
(0.033288046834313), FRAC_CONST(0.031228821163949) },

3298 { 
FRAC_CONST
(0.033082943162434), FRAC_CONST(0.031446020496153) },

3299 { 
FRAC_CONST
(0.032876422327378), FRAC_CONST(0.031661872785500) },

3300 { 
FRAC_CONST
(0.032668493175811), FRAC_CONST(0.031876368785596) },

3301 { 
FRAC_CONST
(0.032459164614726), FRAC_CONST(0.032089499308145) },

3302 { 
FRAC_CONST
(0.032248445611061), FRAC_CONST(0.032301255223347) },

3303 { 
FRAC_CONST
(0.032036345191317), FRAC_CONST(0.032511627460281) },

3304 { 
FRAC_CONST
(0.031822872441171), FRAC_CONST(0.032720607007302) },

3305 { 
FRAC_CONST
(0.031608036505083), FRAC_CONST(0.032928184912422) },

3306 { 
FRAC_CONST
(0.031391846585912), FRAC_CONST(0.033134352283693) },

3307 { 
FRAC_CONST
(0.031174311944513), FRAC_CONST(0.033339100289593) },

3308 { 
FRAC_CONST
(0.030955441899347), FRAC_CONST(0.033542420159397) },

3309 { 
FRAC_CONST
(0.030735245826077), FRAC_CONST(0.033744303183559) },

3310 { 
FRAC_CONST
(0.030513733157171), FRAC_CONST(0.033944740714083) },

3311 { 
FRAC_CONST
(0.030290913381494), FRAC_CONST(0.034143724164891) },

3312 { 
FRAC_CONST
(0.030066796043904), FRAC_CONST(0.034341245012195) },

3313 { 
FRAC_CONST
(0.029841390744841), FRAC_CONST(0.034537294794860) },

3314 { 
FRAC_CONST
(0.029614707139919), FRAC_CONST(0.034731865114764) },

3315 { 
FRAC_CONST
(0.029386754939508), FRAC_CONST(0.034924947637164) },

3316 { 
FRAC_CONST
(0.029157543908322), FRAC_CONST(0.035116534091046) },

3317 { 
FRAC_CONST
(0.028927083864999), FRAC_CONST(0.035306616269485) },

3318 { 
FRAC_CONST
(0.028695384681680), FRAC_CONST(0.035495186029992) },

3319 { 
FRAC_CONST
(0.028462456283587), FRAC_CONST(0.035682235294866) },

3320 { 
FRAC_CONST
(0.028228308648598), FRAC_CONST(0.035867756051541) },

3321 { 
FRAC_CONST
(0.027992951806817), FRAC_CONST(0.036051740352923) },

3322 { 
FRAC_CONST
(0.027756395840148), FRAC_CONST(0.036234180317738) },

3323 { 
FRAC_CONST
(0.027518650881862), FRAC_CONST(0.036415068130865) },

3324 { 
FRAC_CONST
(0.027279727116161), FRAC_CONST(0.036594396043672) },

3325 { 
FRAC_CONST
(0.027039634777745), FRAC_CONST(0.036772156374348) },

3326 { 
FRAC_CONST
(0.026798384151369), FRAC_CONST(0.036948341508233) },

3327 { 
FRAC_CONST
(0.026555985571409), FRAC_CONST(0.037122943898140) },

3328 { 
FRAC_CONST
(0.026312449421412), FRAC_CONST(0.037295956064686) },

3329 { 
FRAC_CONST
(0.026067786133656), FRAC_CONST(0.037467370596605) },

3330 { 
FRAC_CONST
(0.025822006188702), FRAC_CONST(0.037637180151068) },

3331 { 
FRAC_CONST
(0.025575120114946), FRAC_CONST(0.037805377454000) },

3332 { 
FRAC_CONST
(0.025327138488165), FRAC_CONST(0.037971955300388) },

3333 { 
FRAC_CONST
(0.025078071931066), FRAC_CONST(0.038136906554591) },

3334 { 
FRAC_CONST
(0.024827931112832), FRAC_CONST(0.038300224150647) },

3335 { 
FRAC_CONST
(0.024576726748663), FRAC_CONST(0.038461901092573) },

3336 { 
FRAC_CONST
(0.024324469599317), FRAC_CONST(0.038621930454668) },

3337 { 
FRAC_CONST
(0.024071170470652), FRAC_CONST(0.038780305381806) },

3338 { 
FRAC_CONST
(0.023816840213160), FRAC_CONST(0.038937019089732) },

3339 { 
FRAC_CONST
(0.023561489721501), FRAC_CONST(0.039092064865353) },

3340 { 
FRAC_CONST
(0.023305129934041), FRAC_CONST(0.039245436067023) },

3341 { 
FRAC_CONST
(0.023047771832380), FRAC_CONST(0.039397126124832) },

3342 { 
FRAC_CONST
(0.022789426440883), FRAC_CONST(0.039547128540881) },

3343 { 
FRAC_CONST
(0.022530104826206), FRAC_CONST(0.039695436889566) },

3344 { 
FRAC_CONST
(0.022269818096825), FRAC_CONST(0.039842044817851) },

3345 { 
FRAC_CONST
(0.022008577402555), FRAC_CONST(0.039986946045542) },

3346 { 
FRAC_CONST
(0.021746393934081), FRAC_CONST(0.040130134365550) },

3347 { 
FRAC_CONST
(0.021483278922467), FRAC_CONST(0.040271603644166) },

3348 { 
FRAC_CONST
(0.021219243638687), FRAC_CONST(0.040411347821316) },

3349 { 
FRAC_CONST
(0.020954299393132), FRAC_CONST(0.040549360910825) },

3350 { 
FRAC_CONST
(0.020688457535133), FRAC_CONST(0.040685637000671) },

3351 { 
FRAC_CONST
(0.020421729452469), FRAC_CONST(0.040820170253240) },

3352 { 
FRAC_CONST
(0.020154126570884), FRAC_CONST(0.040952954905576) },

3353 { 
FRAC_CONST
(0.019885660353596), FRAC_CONST(0.041083985269625) },

3354 { 
FRAC_CONST
(0.019616342300802), FRAC_CONST(0.041213255732484) },

3355 { 
FRAC_CONST
(0.019346183949192), FRAC_CONST(0.041340760756635) },

3356 { 
FRAC_CONST
(0.019075196871451), FRAC_CONST(0.041466494880189) },

3357 { 
FRAC_CONST
(0.018803392675763), FRAC_CONST(0.041590452717113) },

3358 { 
FRAC_CONST
(0.018530783005316), FRAC_CONST(0.041712628957466) },

3359 { 
FRAC_CONST
(0.018257379537800), FRAC_CONST(0.041833018367625) },

3360 { 
FRAC_CONST
(0.017983193984910), FRAC_CONST(0.041951615790509) },

3361 { 
FRAC_CONST
(0.017708238091842), FRAC_CONST(0.042068416145797) },

3362 { 
FRAC_CONST
(0.017432523636792), FRAC_CONST(0.042183414430153) },

3363 { 
FRAC_CONST
(0.017156062430449), FRAC_CONST(0.042296605717432) },

3364 { 
FRAC_CONST
(0.016878866315491), FRAC_CONST(0.042407985158896) },

3365 { 
FRAC_CONST
(0.016600947166078), FRAC_CONST(0.042517547983420) },

3366 { 
FRAC_CONST
(0.016322316887341), FRAC_CONST(0.042625289497698) },

3367 { 
FRAC_CONST
(0.016042987414872), FRAC_CONST(0.042731205086442) },

3368 { 
FRAC_CONST
(0.015762970714219), FRAC_CONST(0.042835290212581) },

3369 { 
FRAC_CONST
(0.015482278780363), FRAC_CONST(0.042937540417454) },

3370 { 
FRAC_CONST
(0.015200923637213), FRAC_CONST(0.043037951321002) },

3371 { 
FRAC_CONST
(0.014918917337087), FRAC_CONST(0.043136518621958) },

3372 { 
FRAC_CONST
(0.014636271960196), FRAC_CONST(0.043233238098025) },

3373 { 
FRAC_CONST
(0.014352999614128), FRAC_CONST(0.043328105606063) },

3374 { 
FRAC_CONST
(0.014069112433327), FRAC_CONST(0.043421117082265) },

3375 { 
FRAC_CONST
(0.013784622578575), FRAC_CONST(0.043512268542327) },

3376 { 
FRAC_CONST
(0.013499542236471), FRAC_CONST(0.043601556081625) },

3377 { 
FRAC_CONST
(0.013213883618907), FRAC_CONST(0.043688975875378) },

3378 { 
FRAC_CONST
(0.012927658962548), FRAC_CONST(0.043774524178812) },

3379 { 
FRAC_CONST
(0.012640880528305), FRAC_CONST(0.043858197327323) },

3380 { 
FRAC_CONST
(0.012353560600813), FRAC_CONST(0.043939991736633) },

3381 { 
FRAC_CONST
(0.012065711487901), FRAC_CONST(0.044019903902940) },

3382 { 
FRAC_CONST
(0.011777345520066), FRAC_CONST(0.044097930403073) },

3383 { 
FRAC_CONST
(0.011488475049948), FRAC_CONST(0.044174067894638) },

3384 { 
FRAC_CONST
(0.011199112451794), FRAC_CONST(0.044248313116156) },

3385 { 
FRAC_CONST
(0.010909270120937), FRAC_CONST(0.044320662887211) },

3386 { 
FRAC_CONST
(0.010618960473257), FRAC_CONST(0.044391114108577) },

3387 { 
FRAC_CONST
(0.010328195944653), FRAC_CONST(0.044459663762361) },

3388 { 
FRAC_CONST
(0.010036988990509), FRAC_CONST(0.044526308912122) },

3389 { 
FRAC_CONST
(0.009745352085163), FRAC_CONST(0.044591046703005) },

3390 { 
FRAC_CONST
(0.009453297721368), FRAC_CONST(0.044653874361857) },

3391 { 
FRAC_CONST
(0.009160838409762), FRAC_CONST(0.044714789197351) },

3392 { 
FRAC_CONST
(0.008867986678328), FRAC_CONST(0.044773788600099) },

3393 { 
FRAC_CONST
(0.008574755071860), FRAC_CONST(0.044830870042761) },

3394 { 
FRAC_CONST
(0.008281156151424), FRAC_CONST(0.044886031080160) },

3395 { 
FRAC_CONST
(0.007987202493820), FRAC_CONST(0.044939269349379) },

3396 { 
FRAC_CONST
(0.007692906691044), FRAC_CONST(0.044990582569869) },

3397 { 
FRAC_CONST
(0.007398281349750), FRAC_CONST(0.045039968543542) },

3398 { 
FRAC_CONST
(0.007103339090706), FRAC_CONST(0.045087425154868) },

3399 { 
FRAC_CONST
(0.006808092548258), FRAC_CONST(0.045132950370962) },

3400 { 
FRAC_CONST
(0.006512554369783), FRAC_CONST(0.045176542241676) },

3401 { 
FRAC_CONST
(0.006216737215155), FRAC_CONST(0.045218198899680) },

3402 { 
FRAC_CONST
(0.005920653756196), FRAC_CONST(0.045257918560541) },

3403 { 
FRAC_CONST
(0.005624316676135), FRAC_CONST(0.045295699522801) },

3404 { 
FRAC_CONST
(0.005327738669067), FRAC_CONST(0.045331540168049) },

3405 { 
FRAC_CONST
(0.005030932439406), FRAC_CONST(0.045365438960992) },

3406 { 
FRAC_CONST
(0.004733910701344), FRAC_CONST(0.045397394449517) },

3407 { 
FRAC_CONST
(0.004436686178303), FRAC_CONST(0.045427405264758) },

3408 { 
FRAC_CONST
(0.004139271602393), FRAC_CONST(0.045455470121152) },

3409 { 
FRAC_CONST
(0.003841679713863), FRAC_CONST(0.045481587816494) },

3410 { 
FRAC_CONST
(0.003543923260561), FRAC_CONST(0.045505757231988) },

3411 { 
FRAC_CONST
(0.003246014997382), FRAC_CONST(0.045527977332297) },

3412 { 
FRAC_CONST
(0.002947967685724), FRAC_CONST(0.045548247165585) },

3413 { 
FRAC_CONST
(0.002649794092941), FRAC_CONST(0.045566565863562) },

3414 { 
FRAC_CONST
(0.002351506991799), FRAC_CONST(0.045582932641515) },

3415 { 
FRAC_CONST
(0.002053119159924), FRAC_CONST(0.045597346798344) },

3416 { 
FRAC_CONST
(0.001754643379257), FRAC_CONST(0.045609807716597) },

3417 { 
FRAC_CONST
(0.001456092435508), FRAC_CONST(0.045620314862489) },

3418 { 
FRAC_CONST
(0.001157479117605), FRAC_CONST(0.045628867785927) },

3419 { 
FRAC_CONST
(0.000858816217149), FRAC_CONST(0.045635466120535) },

3420 { 
FRAC_CONST
(0.000560116527865), FRAC_CONST(0.045640109583661) },

3421 { 
FRAC_CONST
(0.000261392845053), FRAC_CONST(0.045642797976394) }

3426 
ALIGN
 c⁄° 
com∂ex_t
 
	gmd˘_èb_240
[] =

3428 { 
FRAC_CONST
(0.091286604111815), FRAC_CONST(0.000298735779793) },

3429 { 
FRAC_CONST
(0.091247502481454), FRAC_CONST(0.002688238127538) },

3430 { 
FRAC_CONST
(0.091145864370807), FRAC_CONST(0.005075898091152) },

3431 { 
FRAC_CONST
(0.090981759437558), FRAC_CONST(0.007460079287760) },

3432 { 
FRAC_CONST
(0.090755300151030), FRAC_CONST(0.009839147718664) },

3433 { 
FRAC_CONST
(0.090466641715108), FRAC_CONST(0.012211472889198) },

3434 { 
FRAC_CONST
(0.090115981961863), FRAC_CONST(0.014575428926191) },

3435 { 
FRAC_CONST
(0.089703561215976), FRAC_CONST(0.016929395692256) },

3436 { 
FRAC_CONST
(0.089229662130024), FRAC_CONST(0.019271759896156) },

3437 { 
FRAC_CONST
(0.088694609490769), FRAC_CONST(0.021600916198470) },

3438 { 
FRAC_CONST
(0.088098769996564), FRAC_CONST(0.023915268311810) },

3439 { 
FRAC_CONST
(0.087442552006035), FRAC_CONST(0.026213230094844) },

3440 { 
FRAC_CONST
(0.086726405258214), FRAC_CONST(0.028493226639351) },

3441 { 
FRAC_CONST
(0.085950820564309), FRAC_CONST(0.030753695349588) },

3442 { 
FRAC_CONST
(0.085116329471329), FRAC_CONST(0.032993087013213) },

3443 { 
FRAC_CONST
(0.084223503897785), FRAC_CONST(0.035209866863042) },

3444 { 
FRAC_CONST
(0.083272955741727), FRAC_CONST(0.037402515628894) },

3445 { 
FRAC_CONST
(0.082265336461381), FRAC_CONST(0.039569530578832) },

3446 { 
FRAC_CONST
(0.081201336628670), FRAC_CONST(0.041709426549053) },

3447 { 
FRAC_CONST
(0.080081685455930), FRAC_CONST(0.043820736961749) },

3448 { 
FRAC_CONST
(0.078907150296148), FRAC_CONST(0.045902014830227) },

3449 { 
FRAC_CONST
(0.077678536117054), FRAC_CONST(0.047951833750597) },

3450 { 
FRAC_CONST
(0.076396684949434), FRAC_CONST(0.049968788879362) },

3451 { 
FRAC_CONST
(0.075062475310050), FRAC_CONST(0.051951497896226) },

3452 { 
FRAC_CONST
(0.073676821599542), FRAC_CONST(0.053898601951466) },

3453 { 
FRAC_CONST
(0.072240673475749), FRAC_CONST(0.055808766597225) },

3454 { 
FRAC_CONST
(0.070755015202858), FRAC_CONST(0.057680682702068) },

3455 { 
FRAC_CONST
(0.069220864976840), FRAC_CONST(0.059513067348201) },

3456 { 
FRAC_CONST
(0.067639274227625), FRAC_CONST(0.061304664710718) },

3457 { 
FRAC_CONST
(0.066011326898512), FRAC_CONST(0.063054246918278) },

3458 { 
FRAC_CONST
(0.064338138703282), FRAC_CONST(0.064760614894630) },

3459 { 
FRAC_CONST
(0.062620856361546), FRAC_CONST(0.066422599180399) },

3460 { 
FRAC_CONST
(0.060860656812842), FRAC_CONST(0.068039060734572) },

3461 { 
FRAC_CONST
(0.059058746410016), FRAC_CONST(0.069608891715145) },

3462 { 
FRAC_CONST
(0.057216360092450), FRAC_CONST(0.071131016238378) },

3463 { 
FRAC_CONST
(0.055334760539699), FRAC_CONST(0.072604391116154) },

3464 { 
FRAC_CONST
(0.053415237306106), FRAC_CONST(0.074028006570930) },

3465 { 
FRAC_CONST
(0.051459105937014), FRAC_CONST(0.075400886927784) },

3466 { 
FRAC_CONST
(0.049467707067153), FRAC_CONST(0.076722091283096) },

3467 { 
FRAC_CONST
(0.047442405501835), FRAC_CONST(0.077990714149396) },

3468 { 
FRAC_CONST
(0.045384589281588), FRAC_CONST(0.079205886075941) },

3469 { 
FRAC_CONST
(0.043295668730857), FRAC_CONST(0.080366774244592) },

3470 { 
FRAC_CONST
(0.041177075491445), FRAC_CONST(0.081472583040586) },

3471 { 
FRAC_CONST
(0.039030261541332), FRAC_CONST(0.082522554597810) },

3472 { 
FRAC_CONST
(0.036856698199564), FRAC_CONST(0.083515969318206) },

3473 { 
FRAC_CONST
(0.034657875117883), FRAC_CONST(0.084452146364948) },

3474 { 
FRAC_CONST
(0.032435299259796), FRAC_CONST(0.085330444129049) },

3475 { 
FRAC_CONST
(0.030190493867775), FRAC_CONST(0.086150260669096) },

3476 { 
FRAC_CONST
(0.027924997419306), FRAC_CONST(0.086911034123781) },

3477 { 
FRAC_CONST
(0.025640362572491), FRAC_CONST(0.087612243096981) },

3478 { 
FRAC_CONST
(0.023338155101933), FRAC_CONST(0.088253407015092) },

3479 { 
FRAC_CONST
(0.021019952825636), FRAC_CONST(0.088834086456390) },

3480 { 
FRAC_CONST
(0.018687344523641), FRAC_CONST(0.089353883452193) },

3481 { 
FRAC_CONST
(0.016341928849164), FRAC_CONST(0.089812441759604) },

3482 { 
FRAC_CONST
(0.013985313232951), FRAC_CONST(0.090209447105664) },

3483 { 
FRAC_CONST
(0.011619112781631), FRAC_CONST(0.090544627402740) },

3484 { 
FRAC_CONST
(0.009244949170797), FRAC_CONST(0.090817752935000) },

3485 { 
FRAC_CONST
(0.006864449533597), FRAC_CONST(0.091028636515846) },

3486 { 
FRAC_CONST
(0.004479245345574), FRAC_CONST(0.091177133616206) },

3487 { 
FRAC_CONST
(0.002090971306534), FRAC_CONST(0.091263142463585) }

3491 #ifde‡
SSR_DEC


3493 
ALIGN
 c⁄° 
com∂ex_t
 
	gmd˘_èb_512
[] =

3495 { 
FRAC_CONST
(0.062499926465731), FRAC_CONST(0.000095873761643) },

3496 { 
FRAC_CONST
(0.062494043817678), FRAC_CONST(0.000862836783004) },

3497 { 
FRAC_CONST
(0.062478749796497), FRAC_CONST(0.001629669864319) },

3498 { 
FRAC_CONST
(0.062454046705412), FRAC_CONST(0.002396257523347) },

3499 { 
FRAC_CONST
(0.062419938264617), FRAC_CONST(0.003162484314806) },

3500 { 
FRAC_CONST
(0.062376429610718), FRAC_CONST(0.003928234847760) },

3501 { 
FRAC_CONST
(0.062323527295958), FRAC_CONST(0.004693393802995) },

3502 { 
FRAC_CONST
(0.062261239287231), FRAC_CONST(0.005457845950387) },

3503 { 
FRAC_CONST
(0.062189574964882), FRAC_CONST(0.006221476166254) },

3504 { 
FRAC_CONST
(0.062108545121295), FRAC_CONST(0.006984169450695) },

3505 { 
FRAC_CONST
(0.062018161959266), FRAC_CONST(0.007745810944907) },

3506 { 
FRAC_CONST
(0.061918439090167), FRAC_CONST(0.008506285948482) },

3507 { 
FRAC_CONST
(0.061809391531894), FRAC_CONST(0.009265479936681) },

3508 { 
FRAC_CONST
(0.061691035706609), FRAC_CONST(0.010023278577683) },

3509 { 
FRAC_CONST
(0.061563389438265), FRAC_CONST(0.010779567749800) },

3510 { 
FRAC_CONST
(0.061426471949919), FRAC_CONST(0.011534233558664) },

3511 { 
FRAC_CONST
(0.061280303860842), FRAC_CONST(0.012287162354380) },

3512 { 
FRAC_CONST
(0.061124907183410), FRAC_CONST(0.013038240748641) },

3513 { 
FRAC_CONST
(0.060960305319791), FRAC_CONST(0.013787355631805) },

3514 { 
FRAC_CONST
(0.060786523058421), FRAC_CONST(0.014534394189923) },

3515 { 
FRAC_CONST
(0.060603586570268), FRAC_CONST(0.015279243921739) },

3516 { 
FRAC_CONST
(0.060411523404896), FRAC_CONST(0.016021792655621) },

3517 { 
FRAC_CONST
(0.060210362486310), FRAC_CONST(0.016761928566463) },

3518 { 
FRAC_CONST
(0.060000134108604), FRAC_CONST(0.017499540192517) },

3519 { 
FRAC_CONST
(0.059780869931400), FRAC_CONST(0.018234516452187) },

3520 { 
FRAC_CONST
(0.059552602975075), FRAC_CONST(0.018966746660751) },

3521 { 
FRAC_CONST
(0.059315367615794), FRAC_CONST(0.019696120547033) },

3522 { 
FRAC_CONST
(0.059069199580329), FRAC_CONST(0.020422528270008) },

3523 { 
FRAC_CONST
(0.058814135940681), FRAC_CONST(0.021145860435346) },

3524 { 
FRAC_CONST
(0.058550215108495), FRAC_CONST(0.021866008111883) },

3525 { 
FRAC_CONST
(0.058277476829279), FRAC_CONST(0.022582862848028) },

3526 { 
FRAC_CONST
(0.057995962176414), FRAC_CONST(0.023296316688095) },

3527 { 
FRAC_CONST
(0.057705713544970), FRAC_CONST(0.024006262188558) },

3528 { 
FRAC_CONST
(0.057406774645326), FRAC_CONST(0.024712592434239) },

3529 { 
FRAC_CONST
(0.057099190496578), FRAC_CONST(0.025415201054398) },

3530 { 
FRAC_CONST
(0.056783007419769), FRAC_CONST(0.026113982238763) },

3531 { 
FRAC_CONST
(0.056458273030907), FRAC_CONST(0.026808830753458) },

3532 { 
FRAC_CONST
(0.056125036233796), FRAC_CONST(0.027499641956852) },

3533 { 
FRAC_CONST
(0.055783347212673), FRAC_CONST(0.028186311815319) },

3534 { 
FRAC_CONST
(0.055433257424646), FRAC_CONST(0.028868736918904) },

3535 { 
FRAC_CONST
(0.055074819591951), FRAC_CONST(0.029546814496896) },

3536 { 
FRAC_CONST
(0.054708087694007), FRAC_CONST(0.030220442433307) },

3537 { 
FRAC_CONST
(0.054333116959288), FRAC_CONST(0.030889519282247) },

3538 { 
FRAC_CONST
(0.053949963857008), FRAC_CONST(0.031553944283204) },

3539 { 
FRAC_CONST
(0.053558686088614), FRAC_CONST(0.032213617376216) },

3540 { 
FRAC_CONST
(0.053159342579100), FRAC_CONST(0.032868439216943) },

3541 { 
FRAC_CONST
(0.052751993468129), FRAC_CONST(0.033518311191623) },

3542 { 
FRAC_CONST
(0.052336700100979), FRAC_CONST(0.034163135431927) },

3543 { 
FRAC_CONST
(0.051913525019303), FRAC_CONST(0.034802814829698) },

3544 { 
FRAC_CONST
(0.051482531951712), FRAC_CONST(0.035437253051569) },

3545 { 
FRAC_CONST
(0.051043785804177), FRAC_CONST(0.036066354553480) },

3546 { 
FRAC_CONST
(0.050597352650253), FRAC_CONST(0.036690024595057) },

3547 { 
FRAC_CONST
(0.050143299721132), FRAC_CONST(0.037308169253887) },

3548 { 
FRAC_CONST
(0.049681695395515), FRAC_CONST(0.037920695439658) },

3549 { 
FRAC_CONST
(0.049212609189314), FRAC_CONST(0.038527510908178) },

3550 { 
FRAC_CONST
(0.048736111745188), FRAC_CONST(0.039128524275271) },

3551 { 
FRAC_CONST
(0.048252274821899), FRAC_CONST(0.039723645030535) },

3552 { 
FRAC_CONST
(0.047761171283507), FRAC_CONST(0.040312783550971) },

3553 { 
FRAC_CONST
(0.047262875088400), FRAC_CONST(0.040895851114488) },

3554 { 
FRAC_CONST
(0.046757461278150), FRAC_CONST(0.041472759913252) },

3555 { 
FRAC_CONST
(0.046245005966220), FRAC_CONST(0.042043423066923) },

3556 { 
FRAC_CONST
(0.045725586326493), FRAC_CONST(0.042607754635728) },

3557 { 
FRAC_CONST
(0.045199280581658), FRAC_CONST(0.043165669633408) },

3558 { 
FRAC_CONST
(0.044666167991423), FRAC_CONST(0.043717084040018) },

3559 { 
FRAC_CONST
(0.044126328840584), FRAC_CONST(0.044261914814575) },

3560 { 
FRAC_CONST
(0.043579844426930), FRAC_CONST(0.044800079907569) },

3561 { 
FRAC_CONST
(0.043026797049006), FRAC_CONST(0.045331498273316) },

3562 { 
FRAC_CONST
(0.042467269993710), FRAC_CONST(0.045856089882166) },

3563 { 
FRAC_CONST
(0.041901347523761), FRAC_CONST(0.046373775732552) },

3564 { 
FRAC_CONST
(0.041329114865000), FRAC_CONST(0.046884477862888) },

3565 { 
FRAC_CONST
(0.040750658193560), FRAC_CONST(0.047388119363313) },

3566 { 
FRAC_CONST
(0.040166064622889), FRAC_CONST(0.047884624387270) },

3567 { 
FRAC_CONST
(0.039575422190629), FRAC_CONST(0.048373918162926) },

3568 { 
FRAC_CONST
(0.038978819845356), FRAC_CONST(0.048855927004441) },

3569 { 
FRAC_CONST
(0.038376347433190), FRAC_CONST(0.049330578323055) },

3570 { 
FRAC_CONST
(0.037768095684260), FRAC_CONST(0.049797800638026) },

3571 { 
FRAC_CONST
(0.037154156199042), FRAC_CONST(0.050257523587392) },

3572 { 
FRAC_CONST
(0.036534621434563), FRAC_CONST(0.050709677938566) },

3573 { 
FRAC_CONST
(0.035909584690482), FRAC_CONST(0.051154195598769) },

3574 { 
FRAC_CONST
(0.035279140095032), FRAC_CONST(0.051591009625274) },

3575 { 
FRAC_CONST
(0.034643382590851), FRAC_CONST(0.052020054235496) },

3576 { 
FRAC_CONST
(0.034002407920680), FRAC_CONST(0.052441264816895) },

3577 { 
FRAC_CONST
(0.033356312612947), FRAC_CONST(0.052854577936706) },

3578 { 
FRAC_CONST
(0.032705193967229), FRAC_CONST(0.053259931351495) },

3579 { 
FRAC_CONST
(0.032049150039598), FRAC_CONST(0.053657264016528) },

3580 { 
FRAC_CONST
(0.031388279627857), FRAC_CONST(0.054046516094966) },

3581 { 
FRAC_CONST
(0.030722682256659), FRAC_CONST(0.054427628966880) },

3582 { 
FRAC_CONST
(0.030052458162521), FRAC_CONST(0.054800545238072) },

3583 { 
FRAC_CONST
(0.029377708278725), FRAC_CONST(0.055165208748723) },

3584 { 
FRAC_CONST
(0.028698534220122), FRAC_CONST(0.055521564581850) },

3585 { 
FRAC_CONST
(0.028015038267826), FRAC_CONST(0.055869559071575) },

3586 { 
FRAC_CONST
(0.027327323353815), FRAC_CONST(0.056209139811209) },

3587 { 
FRAC_CONST
(0.026635493045425), FRAC_CONST(0.056540255661140) },

3588 { 
FRAC_CONST
(0.025939651529755), FRAC_CONST(0.056862856756541) },

3589 { 
FRAC_CONST
(0.025239903597978), FRAC_CONST(0.057176894514872) },

3590 { 
FRAC_CONST
(0.024536354629559), FRAC_CONST(0.057482321643202) },

3591 { 
FRAC_CONST
(0.023829110576385), FRAC_CONST(0.057779092145329) },

3592 { 
FRAC_CONST
(0.023118277946808), FRAC_CONST(0.058067161328707) },

3593 { 
FRAC_CONST
(0.022403963789609), FRAC_CONST(0.058346485811177) },

3594 { 
FRAC_CONST
(0.021686275677870), FRAC_CONST(0.058617023527499) },

3595 { 
FRAC_CONST
(0.020965321692783), FRAC_CONST(0.058878733735689) },

3596 { 
FRAC_CONST
(0.020241210407366), FRAC_CONST(0.059131577023150) },

3597 { 
FRAC_CONST
(0.019514050870114), FRAC_CONST(0.059375515312615) },

3598 { 
FRAC_CONST
(0.018783952588580), FRAC_CONST(0.059610511867874) },

3599 { 
FRAC_CONST
(0.018051025512878), FRAC_CONST(0.059836531299311) },

3600 { 
FRAC_CONST
(0.017315380019131), FRAC_CONST(0.060053539569230) },

3601 { 
FRAC_CONST
(0.016577126892844), FRAC_CONST(0.060261503996984) },

3602 { 
FRAC_CONST
(0.015836377312223), FRAC_CONST(0.060460393263896) },

3603 { 
FRAC_CONST
(0.015093242831429), FRAC_CONST(0.060650177417972) },

3604 { 
FRAC_CONST
(0.014347835363782), FRAC_CONST(0.060830827878419) },

3605 { 
FRAC_CONST
(0.013600267164905), FRAC_CONST(0.061002317439940) },

3606 { 
FRAC_CONST
(0.012850650815819), FRAC_CONST(0.061164620276839) },

3607 { 
FRAC_CONST
(0.012099099205988), FRAC_CONST(0.061317711946905) },

3608 { 
FRAC_CONST
(0.011345725516320), FRAC_CONST(0.061461569395097) },

3609 { 
FRAC_CONST
(0.010590643202123), FRAC_CONST(0.061596170957011) },

3610 { 
FRAC_CONST
(0.009833965976015), FRAC_CONST(0.061721496362147) },

3611 { 
FRAC_CONST
(0.009075807790803), FRAC_CONST(0.061837526736961) },

3612 { 
FRAC_CONST
(0.008316282822321), FRAC_CONST(0.061944244607705) },

3613 { 
FRAC_CONST
(0.007555505452236), FRAC_CONST(0.062041633903059) },

3614 { 
FRAC_CONST
(0.006793590250821), FRAC_CONST(0.062129679956555) },

3615 { 
FRAC_CONST
(0.006030651959703), FRAC_CONST(0.062208369508780) },

3616 { 
FRAC_CONST
(0.005266805474583), FRAC_CONST(0.062277690709378) },

3617 { 
FRAC_CONST
(0.004502165827931), FRAC_CONST(0.062337633118830) },

3618 { 
FRAC_CONST
(0.003736848171665), FRAC_CONST(0.062388187710030) },

3619 { 
FRAC_CONST
(0.002970967759810), FRAC_CONST(0.062429346869643) },

3620 { 
FRAC_CONST
(0.002204639931138), FRAC_CONST(0.062461104399250) },

3621 { 
FRAC_CONST
(0.001437980091802), FRAC_CONST(0.062483455516285) },

3622 { 
FRAC_CONST
(0.000671103697954), FRAC_CONST(0.062496396854751) }

3626 
ALIGN
 c⁄° 
com∂ex_t
 
	gmd˘_èb_64
[] =

3628 { 
FRAC_CONST
(0.176763384336599), FRAC_CONST(0.002169321984356) },

3629 { 
FRAC_CONST
(0.175699589589310), FRAC_CONST(0.019484717553714) },

3630 { 
FRAC_CONST
(0.172943711747111), FRAC_CONST(0.036612464641599) },

3631 { 
FRAC_CONST
(0.168522291420137), FRAC_CONST(0.053387613680577) },

3632 { 
FRAC_CONST
(0.162477909303132), FRAC_CONST(0.069648610815172) },

3633 { 
FRAC_CONST
(0.154868776100077), FRAC_CONST(0.085238853753814) },

3634 { 
FRAC_CONST
(0.145768171923295), FRAC_CONST(0.100008199934509) },

3635 { 
FRAC_CONST
(0.135263740565902), FRAC_CONST(0.113814412479792) },

3636 { 
FRAC_CONST
(0.123456645444178), FRAC_CONST(0.126524530015608) },

3637 { 
FRAC_CONST
(0.110460595338559), FRAC_CONST(0.138016147162030) },

3638 { 
FRAC_CONST
(0.096400749315926), FRAC_CONST(0.148178593363981) },

3639 { 
FRAC_CONST
(0.081412511379371), FRAC_CONST(0.156913998709178) },

3640 { 
FRAC_CONST
(0.065640226453626), FRAC_CONST(0.164138236468888) },

3641 { 
FRAC_CONST
(0.049235790264535), FRAC_CONST(0.169781733284316) },

3642 { 
FRAC_CONST
(0.032357186500177), FRAC_CONST(0.173790139196080) },

3643 { 
FRAC_CONST
(0.015166965341583), FRAC_CONST(0.176124851064031) }

3649 #ifde‡
__˝lu•lus


	@mp4.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 
	~<°dlib.h
>

33 
	~"bôs.h
"

34 
	~"mp4.h
"

35 
	~"sy¡ax.h
"

38 
uöt8_t
 
	gObje˘Ty≥sTabÀ
[32] = {

40 #ifde‡
MAIN_DEC


46 #ifde‡
SSR_DEC


51 #ifde‡
LTP_DEC


56 #ifde‡
SBR_DEC


61 #ifde‡
SCALABLE_DEC


78 #ifde‡
ERROR_RESILIENCE


81 #ifde‡
LTP_DEC


86 #ifde‡
SCALABLE_DEC


93 #ifde‡
LD_DEC


122 
öt8_t
 
NEAACDECAPI
 
	$NeAACDecAudioS≥cificC⁄fig
(
uöt8_t
 *
pBuf„r
,

123 
uöt32_t
 
buf„r_size
,

124 
mp4AudioS≥cificC⁄fig
 *
mp4ASC
)

126  
	`AudioS≥cificC⁄fig2
(
pBuf„r
, 
buf„r_size
, 
mp4ASC
, 
NULL
);

127 
	}
}

129 
öt8_t
 
	$AudioS≥cificC⁄fig2
(
uöt8_t
 *
pBuf„r
,

130 
uöt32_t
 
buf„r_size
,

131 
mp4AudioS≥cificC⁄fig
 *
mp4ASC
,

132 
¥ogøm_c⁄fig
 *
p˚
)

134 
bôfûe
 
ld
;

135 
öt8_t
 
ªsu…
 = 0;

136 #ifde‡
SBR_DEC


137 
öt8_t
 
bôs_to_decode
 = 0;

140 i‡(
pBuf„r
 =
NULL
)

142 i‡(
mp4ASC
 =
NULL
)

145 
	`mem£t
(
mp4ASC
, 0, (
mp4AudioS≥cificC⁄fig
));

147 
	`Áad_öôbôs
(&
ld
, 
pBuf„r
, 
buf„r_size
);

148 
	`Áad_byã_Æign
(&
ld
);

150 
mp4ASC
->
obje˘Ty≥Index
 = (
uöt8_t
)
	`Áad_gëbôs
(&
ld
, 5

151 
	`DEBUGVAR
(1,1,"parse_audio_decoder_specific_info(): ObjectTypeIndex"));

153 
mp4ASC
->
ßm∂ögFªquícyIndex
 = (
uöt8_t
)
	`Áad_gëbôs
(&
ld
, 4

154 
	`DEBUGVAR
(1,2,"parse_audio_decoder_specific_info(): SamplingFrequencyIndex"));

156 
mp4ASC
->
ch™√lsC⁄figuøti⁄
 = (
uöt8_t
)
	`Áad_gëbôs
(&
ld
, 4

157 
	`DEBUGVAR
(1,3,"parse_audio_decoder_specific_info(): ChannelsConfiguration"));

159 
mp4ASC
->
ßm∂ögFªquícy
 = 
	`gë_ßm∂e_øã
(mp4ASC->
ßm∂ögFªquícyIndex
);

161 i‡(
Obje˘Ty≥sTabÀ
[
mp4ASC
->
obje˘Ty≥Index
] != 1)

163 
	`Áad_ídbôs
(&
ld
);

167 i‡(
mp4ASC
->
ßm∂ögFªquícy
 == 0)

169 
	`Áad_ídbôs
(&
ld
);

173 i‡(
mp4ASC
->
ch™√lsC⁄figuøti⁄
 > 7)

175 
	`Áad_ídbôs
(&
ld
);

179 #i‡(
	`deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

181 i‡(
mp4ASC
->
ch™√lsC⁄figuøti⁄
 == 1)

184 
mp4ASC
->
ch™√lsC⁄figuøti⁄
 = 2;

188 #ifde‡
SBR_DEC


189 
mp4ASC
->
sbr_¥e£¡_Êag
 = -1;

190 i‡(
mp4ASC
->
obje˘Ty≥Index
 == 5)

192 
uöt8_t
 
tmp
;

194 
mp4ASC
->
sbr_¥e£¡_Êag
 = 1;

195 
tmp
 = (
uöt8_t
)
	`Áad_gëbôs
(&
ld
, 4

196 
	`DEBUGVAR
(1,5,"parse_audio_decoder_specific_info():ÉxtensionSamplingFrequencyIndex"));

198 i‡(
tmp
 =
mp4ASC
->
ßm∂ögFªquícyIndex
)

199 
mp4ASC
->
downSam∂edSBR
 = 1;

200 
mp4ASC
->
ßm∂ögFªquícyIndex
 = 
tmp
;

201 i‡(
mp4ASC
->
ßm∂ögFªquícyIndex
 == 15)

203 
mp4ASC
->
ßm∂ögFªquícy
 = (
uöt32_t
)
	`Áad_gëbôs
(&
ld
, 24

204 
	`DEBUGVAR
(1,6,"parse_audio_decoder_specific_info():ÉxtensionSamplingFrequencyIndex"));

206 
mp4ASC
->
ßm∂ögFªquícy
 = 
	`gë_ßm∂e_øã
(mp4ASC->
ßm∂ögFªquícyIndex
);

208 
mp4ASC
->
obje˘Ty≥Index
 = (
uöt8_t
)
	`Áad_gëbôs
(&
ld
, 5

209 
	`DEBUGVAR
(1,7,"parse_audio_decoder_specific_info(): ObjectTypeIndex"));

214 i‡(
mp4ASC
->
obje˘Ty≥Index
 == 1 || mp4ASC->objectTypeIndex == 2 ||

215 
mp4ASC
->
obje˘Ty≥Index
 == 3 || mp4ASC->objectTypeIndex == 4 ||

216 
mp4ASC
->
obje˘Ty≥Index
 == 6 || mp4ASC->objectTypeIndex == 7)

218 
ªsu…
 = 
	`GAS≥cificC⁄fig
(&
ld
, 
mp4ASC
, 
p˚
);

220 #ifde‡
ERROR_RESILIENCE


221 } i‡(
mp4ASC
->
obje˘Ty≥Index
 >
ER_OBJECT_START
) {

222 
ªsu…
 = 
	`GAS≥cificC⁄fig
(&
ld
, 
mp4ASC
, 
p˚
);

223 
mp4ASC
->
ïC⁄fig
 = (
uöt8_t
)
	`Áad_gëbôs
(&
ld
, 2

224 
	`DEBUGVAR
(1,143,"parse_audio_decoder_specific_info():ÉpConfig"));

226 i‡(
mp4ASC
->
ïC⁄fig
 != 0)

227 
ªsu…
 = -5;

231 
ªsu…
 = -4;

234 #ifde‡
SSR_DEC


236 i‡((
mp4ASC
->
obje˘Ty≥Index
 =4Ë&& mp4ASC->
‰ameLígthFœg
)

241 #ifde‡
SBR_DEC


242 
bôs_to_decode
 = (
öt8_t
)(
buf„r_size
*8 - 
	`Áad_gë_¥o˚s£d_bôs
(&
ld
));

244 i‡((
mp4ASC
->
obje˘Ty≥Index
 !5Ë&& (
bôs_to_decode
 >= 16))

246 
öt16_t
 
syncExãnsi⁄Ty≥
 = (öt16_t)
	`Áad_gëbôs
(&
ld
, 11

247 
	`DEBUGVAR
(1,9,"parse_audio_decoder_specific_info(): syncExtensionType"));

249 i‡(
syncExãnsi⁄Ty≥
 == 0x2b7)

251 
mp4ASC
->
obje˘Ty≥Index
 = (
uöt8_t
)
	`Áad_gëbôs
(&
ld
, 5

252 
	`DEBUGVAR
(1,10,"parse_audio_decoder_specific_info():ÉxtensionAudioObjectType"));

254 i‡(
mp4ASC
->
obje˘Ty≥Index
 == 5)

256 
mp4ASC
->
sbr_¥e£¡_Êag
 = (
uöt8_t
)
	`Áad_gë1bô
(&
ld


257 
	`DEBUGVAR
(1,11,"parse_audio_decoder_specific_info(): sbr_present_flag"));

259 i‡(
mp4ASC
->
sbr_¥e£¡_Êag
)

261 
uöt8_t
 
tmp
;

262 
tmp
 = (
uöt8_t
)
	`Áad_gëbôs
(&
ld
, 4

263 
	`DEBUGVAR
(1,12,"parse_audio_decoder_specific_info():ÉxtensionSamplingFrequencyIndex"));

266 i‡(
tmp
 =
mp4ASC
->
ßm∂ögFªquícyIndex
)

267 
mp4ASC
->
downSam∂edSBR
 = 1;

268 
mp4ASC
->
ßm∂ögFªquícyIndex
 = 
tmp
;

270 i‡(
mp4ASC
->
ßm∂ögFªquícyIndex
 == 15)

272 
mp4ASC
->
ßm∂ögFªquícy
 = (
uöt32_t
)
	`Áad_gëbôs
(&
ld
, 24

273 
	`DEBUGVAR
(1,13,"parse_audio_decoder_specific_info():ÉxtensionSamplingFrequencyIndex"));

275 
mp4ASC
->
ßm∂ögFªquícy
 = 
	`gë_ßm∂e_øã
(mp4ASC->
ßm∂ögFªquícyIndex
);

284 i‡(
mp4ASC
->
sbr_¥e£¡_Êag
 == -1)

286 i‡(
mp4ASC
->
ßm∂ögFªquícy
 <= 24000)

288 
mp4ASC
->
ßm∂ögFªquícy
 *= 2;

289 
mp4ASC
->
f‹˚UpSam∂ög
 = 1;

291 
mp4ASC
->
downSam∂edSBR
 = 1;

296 
	`Áad_ídbôs
(&
ld
);

298  
ªsu…
;

299 
	}
}

	@mp4.h

28 #i‚de‡
__MP4_H__


29 
	#__MP4_H__


	)

31 #ifde‡
__˝lu•lus


35 
	~"decodî.h
"

37 
öt8_t
 
NEAACDECAPI
 
NeAACDecAudioS≥cificC⁄fig
(
uöt8_t
 *
pBuf„r
,

38 
uöt32_t
 
buf„r_size
,

39 
mp4AudioS≥cificC⁄fig
 *
mp4ASC
);

41 
öt8_t
 
AudioS≥cificC⁄fig2
(
uöt8_t
 *
pBuf„r
,

42 
uöt32_t
 
buf„r_size
,

43 
mp4AudioS≥cificC⁄fig
 *
mp4ASC
,

44 
¥ogøm_c⁄fig
 *
p˚
);

46 #ifde‡
__˝lu•lus


	@ms.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 
	~"sy¡ax.h
"

32 
	~"ms.h
"

33 
	~"is.h
"

34 
	~"≤s.h
"

36 
	$ms_decode
(
ic_°ªam
 *
ics
, ic_°ªam *
ic§
, 
ªÆ_t
 *
l_•ec
,Ñól_à*
r_•ec
,

37 
uöt16_t
 
‰ame_Àn
)

39 
uöt8_t
 
g
, 
b
, 
sfb
;

40 
uöt8_t
 
group
 = 0;

41 
uöt16_t
 
nsh‹t
 = 
‰ame_Àn
/8;

43 
uöt16_t
 
i
, 
k
;

44 
ªÆ_t
 
tmp
;

46 i‡(
ics
->
ms_mask_¥e£¡
 >= 1)

48 
g
 = 0; g < 
ics
->
num_wödow_groups
; g++)

50 
b
 = 0; b < 
ics
->
wödow_group_Àngth
[
g
]; b++)

52 
sfb
 = 0; sfb < 
ics
->
max_sfb
; sfb++)

58 i‡((
ics
->
ms_u£d
[
g
][
sfb
] || ics->
ms_mask_¥e£¡
 == 2) &&

59 !
	`is_öãnsôy
(
ic§
, 
g
, 
sfb
Ë&& !
	`is_noi£
(
ics
, g, sfb))

61 
i
 = 
ics
->
swb_off£t
[
sfb
]; i < ics->swb_offset[sfb+1]; i++)

63 
k
 = (
group
*
nsh‹t
Ë+ 
i
;

64 
tmp
 = 
l_•ec
[
k
] - 
r_•ec
[k];

65 
l_•ec
[
k
] =Ü_•ec[k] + 
r_•ec
[k];

66 
r_•ec
[
k
] = 
tmp
;

70 
group
++;

74 
	}
}

	@ms.h

28 #i‚de‡
__MS_H__


29 
	#__MS_H__


	)

31 #ifde‡
__˝lu•lus


35 
ms_decode
(
ic_°ªam
 *
ics
, ic_°ªam *
ic§
, 
ªÆ_t
 *
l_•ec
,Ñól_à*
r_•ec
,

36 
uöt16_t
 
‰ame_Àn
);

38 #ifde‡
__˝lu•lus


	@output.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 
	~"ouçut.h
"

32 
	~"decodî.h
"

34 #i‚de‡
FIXED_POINT


37 
	#FLOAT_SCALE
 (1.0f/(1<<15))

	)

39 
	#DM_MUL
 
	`REAL_CONST
(0.3203772410170407)

40 
	#RSQRT2
 
	`REAL_CONST
(0.7071067811865475244)

41 

	)

43 
INLINE
 
ªÆ_t
 
	$gë_ßm∂e
(
ªÆ_t
 **
öput
, 
uöt8_t
 
ch™√l
, 
uöt16_t
 
ßm∂e
,

44 
uöt8_t
 
down_m©rix
, uöt8_à*
öã∫Æ_ch™√l
)

46 i‡(!
down_m©rix
)

47  
öput
[
öã∫Æ_ch™√l
[
ch™√l
]][
ßm∂e
];

49 i‡(
ch™√l
 == 0)

51  
DM_MUL
 * (
öput
[
öã∫Æ_ch™√l
[1]][
ßm∂e
] +

52 
öput
[
öã∫Æ_ch™√l
[0]][
ßm∂e
] * 
RSQRT2
 +

53 
öput
[
öã∫Æ_ch™√l
[3]][
ßm∂e
] * 
RSQRT2
);

55  
DM_MUL
 * (
öput
[
öã∫Æ_ch™√l
[2]][
ßm∂e
] +

56 
öput
[
öã∫Æ_ch™√l
[0]][
ßm∂e
] * 
RSQRT2
 +

57 
öput
[
öã∫Æ_ch™√l
[4]][
ßm∂e
] * 
RSQRT2
);

59 
	}
}

61 #i‚de‡
HAS_LRINTF


62 
	#CLIP
(
ßm∂e
, 
max
, 
mö
) \

63 i‡(
ßm∂e
 >= 0.0f) \

65 
ßm∂e
 += 0.5f; \

66 i‡(
ßm∂e
 >
max
) \

67 
ßm∂e
 = 
max
; \

69 
ßm∂e
 += -0.5f; \

70 i‡(
ßm∂e
 <
mö
) \

71 
ßm∂e
 = 
mö
; \

72 }

	)

74 
	#CLIP
(
ßm∂e
, 
max
, 
mö
) \

75 i‡(
ßm∂e
 >= 0.0f) \

77 i‡(
ßm∂e
 >
max
) \

78 
ßm∂e
 = 
max
; \

80 i‡(
ßm∂e
 <
mö
) \

81 
ßm∂e
 = 
mö
; \

82 }

	)

85 
	#CONV
(
a
,
b
Ë(◊<<1)|(b&0x1))

	)

87 
	$to_PCM_16bô
(
NeAACDecH™dÀ
 
hDecodî
, 
ªÆ_t
 **
öput
,

88 
uöt8_t
 
ch™√ls
, 
uöt16_t
 
‰ame_Àn
,

89 
öt16_t
 **
ßm∂e_buf„r
)

91 
uöt8_t
 
ch
, 
ch1
;

92 
uöt16_t
 
i
;

94 
	`CONV
(
ch™√ls
,
hDecodî
->
downM©rix
))

96 
	`CONV
(1,0):

97 
	`CONV
(1,1):

98 
i
 = 0; i < 
‰ame_Àn
; i++)

100 
ªÆ_t
 
öp
 = 
öput
[
hDecodî
->
öã∫Æ_ch™√l
[0]][
i
];

102 
	`CLIP
(
öp
, 32767.0f, -32768.0f);

104 (*
ßm∂e_buf„r
)[
i
] = (
öt16_t
)
	`Ãötf
(
öp
);

107 
	`CONV
(2,0):

108 i‡(
hDecodî
->
upM©rix
)

110 
ch
 = 
hDecodî
->
öã∫Æ_ch™√l
[0];

111 
i
 = 0; i < 
‰ame_Àn
; i++)

113 
ªÆ_t
 
öp0
 = 
öput
[
ch
][
i
];

115 
	`CLIP
(
öp0
, 32767.0f, -32768.0f);

117 (*
ßm∂e_buf„r
)[(
i
*2)+0] = (
öt16_t
)
	`Ãötf
(
öp0
);

118 (*
ßm∂e_buf„r
)[(
i
*2)+1] = (
öt16_t
)
	`Ãötf
(
öp0
);

121 
ch
 = 
hDecodî
->
öã∫Æ_ch™√l
[0];

122 
ch1
 = 
hDecodî
->
öã∫Æ_ch™√l
[1];

123 
i
 = 0; i < 
‰ame_Àn
; i++)

125 
ªÆ_t
 
öp0
 = 
öput
[
ch
 ][
i
];

126 
ªÆ_t
 
öp1
 = 
öput
[
ch1
][
i
];

128 
	`CLIP
(
öp0
, 32767.0f, -32768.0f);

129 
	`CLIP
(
öp1
, 32767.0f, -32768.0f);

131 (*
ßm∂e_buf„r
)[(
i
*2)+0] = (
öt16_t
)
	`Ãötf
(
öp0
);

132 (*
ßm∂e_buf„r
)[(
i
*2)+1] = (
öt16_t
)
	`Ãötf
(
öp1
);

137 
ch
 = 0; ch < 
ch™√ls
; ch++)

139 
i
 = 0; i < 
‰ame_Àn
; i++)

141 
ªÆ_t
 
öp
 = 
	`gë_ßm∂e
(
öput
, 
ch
, 
i
, 
hDecodî
->
downM©rix
, hDecodî->
öã∫Æ_ch™√l
);

143 
	`CLIP
(
öp
, 32767.0f, -32768.0f);

145 (*
ßm∂e_buf„r
)[(
i
*
ch™√ls
)+
ch
] = (
öt16_t
)
	`Ãötf
(
öp
);

150 
	}
}

152 
	$to_PCM_24bô
(
NeAACDecH™dÀ
 
hDecodî
, 
ªÆ_t
 **
öput
,

153 
uöt8_t
 
ch™√ls
, 
uöt16_t
 
‰ame_Àn
,

154 
öt32_t
 **
ßm∂e_buf„r
)

156 
uöt8_t
 
ch
, 
ch1
;

157 
uöt16_t
 
i
;

159 
	`CONV
(
ch™√ls
,
hDecodî
->
downM©rix
))

161 
	`CONV
(1,0):

162 
	`CONV
(1,1):

163 
i
 = 0; i < 
‰ame_Àn
; i++)

165 
ªÆ_t
 
öp
 = 
öput
[
hDecodî
->
öã∫Æ_ch™√l
[0]][
i
];

167 
öp
 *= 256.0f;

168 
	`CLIP
(
öp
, 8388607.0f, -8388608.0f);

170 (*
ßm∂e_buf„r
)[
i
] = (
öt32_t
)
	`Ãötf
(
öp
);

173 
	`CONV
(2,0):

174 i‡(
hDecodî
->
upM©rix
)

176 
ch
 = 
hDecodî
->
öã∫Æ_ch™√l
[0];

177 
i
 = 0; i < 
‰ame_Àn
; i++)

179 
ªÆ_t
 
öp0
 = 
öput
[
ch
][
i
];

181 
öp0
 *= 256.0f;

182 
	`CLIP
(
öp0
, 8388607.0f, -8388608.0f);

184 (*
ßm∂e_buf„r
)[(
i
*2)+0] = (
öt32_t
)
	`Ãötf
(
öp0
);

185 (*
ßm∂e_buf„r
)[(
i
*2)+1] = (
öt32_t
)
	`Ãötf
(
öp0
);

188 
ch
 = 
hDecodî
->
öã∫Æ_ch™√l
[0];

189 
ch1
 = 
hDecodî
->
öã∫Æ_ch™√l
[1];

190 
i
 = 0; i < 
‰ame_Àn
; i++)

192 
ªÆ_t
 
öp0
 = 
öput
[
ch
 ][
i
];

193 
ªÆ_t
 
öp1
 = 
öput
[
ch1
][
i
];

195 
öp0
 *= 256.0f;

196 
öp1
 *= 256.0f;

197 
	`CLIP
(
öp0
, 8388607.0f, -8388608.0f);

198 
	`CLIP
(
öp1
, 8388607.0f, -8388608.0f);

200 (*
ßm∂e_buf„r
)[(
i
*2)+0] = (
öt32_t
)
	`Ãötf
(
öp0
);

201 (*
ßm∂e_buf„r
)[(
i
*2)+1] = (
öt32_t
)
	`Ãötf
(
öp1
);

206 
ch
 = 0; ch < 
ch™√ls
; ch++)

208 
i
 = 0; i < 
‰ame_Àn
; i++)

210 
ªÆ_t
 
öp
 = 
	`gë_ßm∂e
(
öput
, 
ch
, 
i
, 
hDecodî
->
downM©rix
, hDecodî->
öã∫Æ_ch™√l
);

212 
öp
 *= 256.0f;

213 
	`CLIP
(
öp
, 8388607.0f, -8388608.0f);

215 (*
ßm∂e_buf„r
)[(
i
*
ch™√ls
)+
ch
] = (
öt32_t
)
	`Ãötf
(
öp
);

220 
	}
}

222 
	$to_PCM_32bô
(
NeAACDecH™dÀ
 
hDecodî
, 
ªÆ_t
 **
öput
,

223 
uöt8_t
 
ch™√ls
, 
uöt16_t
 
‰ame_Àn
,

224 
öt32_t
 **
ßm∂e_buf„r
)

226 
uöt8_t
 
ch
, 
ch1
;

227 
uöt16_t
 
i
;

229 
	`CONV
(
ch™√ls
,
hDecodî
->
downM©rix
))

231 
	`CONV
(1,0):

232 
	`CONV
(1,1):

233 
i
 = 0; i < 
‰ame_Àn
; i++)

235 
ªÆ_t
 
öp
 = 
öput
[
hDecodî
->
öã∫Æ_ch™√l
[0]][
i
];

237 
öp
 *= 65536.0f;

238 
	`CLIP
(
öp
, 2147483647.0f, -2147483648.0f);

240 (*
ßm∂e_buf„r
)[
i
] = (
öt32_t
)
	`Ãötf
(
öp
);

243 
	`CONV
(2,0):

244 i‡(
hDecodî
->
upM©rix
)

246 
ch
 = 
hDecodî
->
öã∫Æ_ch™√l
[0];

247 
i
 = 0; i < 
‰ame_Àn
; i++)

249 
ªÆ_t
 
öp0
 = 
öput
[
ch
][
i
];

251 
öp0
 *= 65536.0f;

252 
	`CLIP
(
öp0
, 2147483647.0f, -2147483648.0f);

254 (*
ßm∂e_buf„r
)[(
i
*2)+0] = (
öt32_t
)
	`Ãötf
(
öp0
);

255 (*
ßm∂e_buf„r
)[(
i
*2)+1] = (
öt32_t
)
	`Ãötf
(
öp0
);

258 
ch
 = 
hDecodî
->
öã∫Æ_ch™√l
[0];

259 
ch1
 = 
hDecodî
->
öã∫Æ_ch™√l
[1];

260 
i
 = 0; i < 
‰ame_Àn
; i++)

262 
ªÆ_t
 
öp0
 = 
öput
[
ch
 ][
i
];

263 
ªÆ_t
 
öp1
 = 
öput
[
ch1
][
i
];

265 
öp0
 *= 65536.0f;

266 
öp1
 *= 65536.0f;

267 
	`CLIP
(
öp0
, 2147483647.0f, -2147483648.0f);

268 
	`CLIP
(
öp1
, 2147483647.0f, -2147483648.0f);

270 (*
ßm∂e_buf„r
)[(
i
*2)+0] = (
öt32_t
)
	`Ãötf
(
öp0
);

271 (*
ßm∂e_buf„r
)[(
i
*2)+1] = (
öt32_t
)
	`Ãötf
(
öp1
);

276 
ch
 = 0; ch < 
ch™√ls
; ch++)

278 
i
 = 0; i < 
‰ame_Àn
; i++)

280 
ªÆ_t
 
öp
 = 
	`gë_ßm∂e
(
öput
, 
ch
, 
i
, 
hDecodî
->
downM©rix
, hDecodî->
öã∫Æ_ch™√l
);

282 
öp
 *= 65536.0f;

283 
	`CLIP
(
öp
, 2147483647.0f, -2147483648.0f);

285 (*
ßm∂e_buf„r
)[(
i
*
ch™√ls
)+
ch
] = (
öt32_t
)
	`Ãötf
(
öp
);

290 
	}
}

292 
	$to_PCM_Êﬂt
(
NeAACDecH™dÀ
 
hDecodî
, 
ªÆ_t
 **
öput
,

293 
uöt8_t
 
ch™√ls
, 
uöt16_t
 
‰ame_Àn
,

294 
Êﬂt32_t
 **
ßm∂e_buf„r
)

296 
uöt8_t
 
ch
, 
ch1
;

297 
uöt16_t
 
i
;

299 
	`CONV
(
ch™√ls
,
hDecodî
->
downM©rix
))

301 
	`CONV
(1,0):

302 
	`CONV
(1,1):

303 
i
 = 0; i < 
‰ame_Àn
; i++)

305 
ªÆ_t
 
öp
 = 
öput
[
hDecodî
->
öã∫Æ_ch™√l
[0]][
i
];

306 (*
ßm∂e_buf„r
)[
i
] = 
öp
*
FLOAT_SCALE
;

309 
	`CONV
(2,0):

310 i‡(
hDecodî
->
upM©rix
)

312 
ch
 = 
hDecodî
->
öã∫Æ_ch™√l
[0];

313 
i
 = 0; i < 
‰ame_Àn
; i++)

315 
ªÆ_t
 
öp0
 = 
öput
[
ch
][
i
];

316 (*
ßm∂e_buf„r
)[(
i
*2)+0] = 
öp0
*
FLOAT_SCALE
;

317 (*
ßm∂e_buf„r
)[(
i
*2)+1] = 
öp0
*
FLOAT_SCALE
;

320 
ch
 = 
hDecodî
->
öã∫Æ_ch™√l
[0];

321 
ch1
 = 
hDecodî
->
öã∫Æ_ch™√l
[1];

322 
i
 = 0; i < 
‰ame_Àn
; i++)

324 
ªÆ_t
 
öp0
 = 
öput
[
ch
 ][
i
];

325 
ªÆ_t
 
öp1
 = 
öput
[
ch1
][
i
];

326 (*
ßm∂e_buf„r
)[(
i
*2)+0] = 
öp0
*
FLOAT_SCALE
;

327 (*
ßm∂e_buf„r
)[(
i
*2)+1] = 
öp1
*
FLOAT_SCALE
;

332 
ch
 = 0; ch < 
ch™√ls
; ch++)

334 
i
 = 0; i < 
‰ame_Àn
; i++)

336 
ªÆ_t
 
öp
 = 
	`gë_ßm∂e
(
öput
, 
ch
, 
i
, 
hDecodî
->
downM©rix
, hDecodî->
öã∫Æ_ch™√l
);

337 (*
ßm∂e_buf„r
)[(
i
*
ch™√ls
)+
ch
] = 
öp
*
FLOAT_SCALE
;

342 
	}
}

344 
	$to_PCM_doubÀ
(
NeAACDecH™dÀ
 
hDecodî
, 
ªÆ_t
 **
öput
,

345 
uöt8_t
 
ch™√ls
, 
uöt16_t
 
‰ame_Àn
,

346 **
ßm∂e_buf„r
)

348 
uöt8_t
 
ch
, 
ch1
;

349 
uöt16_t
 
i
;

351 
	`CONV
(
ch™√ls
,
hDecodî
->
downM©rix
))

353 
	`CONV
(1,0):

354 
	`CONV
(1,1):

355 
i
 = 0; i < 
‰ame_Àn
; i++)

357 
ªÆ_t
 
öp
 = 
öput
[
hDecodî
->
öã∫Æ_ch™√l
[0]][
i
];

358 (*
ßm∂e_buf„r
)[
i
] = ()
öp
*
FLOAT_SCALE
;

361 
	`CONV
(2,0):

362 i‡(
hDecodî
->
upM©rix
)

364 
ch
 = 
hDecodî
->
öã∫Æ_ch™√l
[0];

365 
i
 = 0; i < 
‰ame_Àn
; i++)

367 
ªÆ_t
 
öp0
 = 
öput
[
ch
][
i
];

368 (*
ßm∂e_buf„r
)[(
i
*2)+0] = ()
öp0
*
FLOAT_SCALE
;

369 (*
ßm∂e_buf„r
)[(
i
*2)+1] = ()
öp0
*
FLOAT_SCALE
;

372 
ch
 = 
hDecodî
->
öã∫Æ_ch™√l
[0];

373 
ch1
 = 
hDecodî
->
öã∫Æ_ch™√l
[1];

374 
i
 = 0; i < 
‰ame_Àn
; i++)

376 
ªÆ_t
 
öp0
 = 
öput
[
ch
 ][
i
];

377 
ªÆ_t
 
öp1
 = 
öput
[
ch1
][
i
];

378 (*
ßm∂e_buf„r
)[(
i
*2)+0] = ()
öp0
*
FLOAT_SCALE
;

379 (*
ßm∂e_buf„r
)[(
i
*2)+1] = ()
öp1
*
FLOAT_SCALE
;

384 
ch
 = 0; ch < 
ch™√ls
; ch++)

386 
i
 = 0; i < 
‰ame_Àn
; i++)

388 
ªÆ_t
 
öp
 = 
	`gë_ßm∂e
(
öput
, 
ch
, 
i
, 
hDecodî
->
downM©rix
, hDecodî->
öã∫Æ_ch™√l
);

389 (*
ßm∂e_buf„r
)[(
i
*
ch™√ls
)+
ch
] = ()
öp
*
FLOAT_SCALE
;

394 
	}
}

396 *
	$ouçut_to_PCM
(
NeAACDecH™dÀ
 
hDecodî
,

397 
ªÆ_t
 **
öput
, *
ßm∂e_buf„r
, 
uöt8_t
 
ch™√ls
,

398 
uöt16_t
 
‰ame_Àn
, 
uöt8_t
 
f‹m©
)

400 
öt16_t
 *
sh‹t_ßm∂e_buf„r
 = (öt16_t*)
ßm∂e_buf„r
;

401 
öt32_t
 *
öt_ßm∂e_buf„r
 = (öt32_t*)
ßm∂e_buf„r
;

402 
Êﬂt32_t
 *
Êﬂt_ßm∂e_buf„r
 = (Êﬂt32_t*)
ßm∂e_buf„r
;

403 *
doubÀ_ßm∂e_buf„r
 = (*)
ßm∂e_buf„r
;

405 #ifde‡
PROFILE


406 
öt64_t
 
cou¡
 = 
	`Áad_gë_ts
();

410 
f‹m©
)

412 
FAAD_FMT_16BIT
:

413 
	`to_PCM_16bô
(
hDecodî
, 
öput
, 
ch™√ls
, 
‰ame_Àn
, &
sh‹t_ßm∂e_buf„r
);

415 
FAAD_FMT_24BIT
:

416 
	`to_PCM_24bô
(
hDecodî
, 
öput
, 
ch™√ls
, 
‰ame_Àn
, &
öt_ßm∂e_buf„r
);

418 
FAAD_FMT_32BIT
:

419 
	`to_PCM_32bô
(
hDecodî
, 
öput
, 
ch™√ls
, 
‰ame_Àn
, &
öt_ßm∂e_buf„r
);

421 
FAAD_FMT_FLOAT
:

422 
	`to_PCM_Êﬂt
(
hDecodî
, 
öput
, 
ch™√ls
, 
‰ame_Àn
, &
Êﬂt_ßm∂e_buf„r
);

424 
FAAD_FMT_DOUBLE
:

425 
	`to_PCM_doubÀ
(
hDecodî
, 
öput
, 
ch™√ls
, 
‰ame_Àn
, &
doubÀ_ßm∂e_buf„r
);

429 #ifde‡
PROFILE


430 
cou¡
 = 
	`Áad_gë_ts
() - count;

431 
hDecodî
->
ouçut_cy˛es
 +
cou¡
;

434  
ßm∂e_buf„r
;

435 
	}
}

439 
	#DM_MUL
 
	`FRAC_CONST
(0.3203772410170407)

440 
	#RSQRT2
 
	`FRAC_CONST
(0.7071067811865475244)

441 

	)

442 
INLINE
 
ªÆ_t
 
	$gë_ßm∂e
(
ªÆ_t
 **
öput
, 
uöt8_t
 
ch™√l
, 
uöt16_t
 
ßm∂e
,

443 
uöt8_t
 
down_m©rix
, uöt8_à
up_m©rix
,

444 
uöt8_t
 *
öã∫Æ_ch™√l
)

446 i‡(
up_m©rix
 == 1)

447  
öput
[
öã∫Æ_ch™√l
[0]][
ßm∂e
];

449 i‡(!
down_m©rix
)

450  
öput
[
öã∫Æ_ch™√l
[
ch™√l
]][
ßm∂e
];

452 i‡(
ch™√l
 == 0)

454 
ªÆ_t
 
C
 = 
	`MUL_F
(
öput
[
öã∫Æ_ch™√l
[0]][
ßm∂e
], 
RSQRT2
);

455 
ªÆ_t
 
L_S
 = 
	`MUL_F
(
öput
[
öã∫Æ_ch™√l
[3]][
ßm∂e
], 
RSQRT2
);

456 
ªÆ_t
 
cum
 = 
öput
[
öã∫Æ_ch™√l
[1]][
ßm∂e
] + 
C
 + 
L_S
;

457  
	`MUL_F
(
cum
, 
DM_MUL
);

459 
ªÆ_t
 
C
 = 
	`MUL_F
(
öput
[
öã∫Æ_ch™√l
[0]][
ßm∂e
], 
RSQRT2
);

460 
ªÆ_t
 
R_S
 = 
	`MUL_F
(
öput
[
öã∫Æ_ch™√l
[4]][
ßm∂e
], 
RSQRT2
);

461 
ªÆ_t
 
cum
 = 
öput
[
öã∫Æ_ch™√l
[2]][
ßm∂e
] + 
C
 + 
R_S
;

462  
	`MUL_F
(
cum
, 
DM_MUL
);

464 
	}
}

466 * 
	$ouçut_to_PCM
(
NeAACDecH™dÀ
 
hDecodî
,

467 
ªÆ_t
 **
öput
, *
ßm∂e_buf„r
, 
uöt8_t
 
ch™√ls
,

468 
uöt16_t
 
‰ame_Àn
, 
uöt8_t
 
f‹m©
)

470 
uöt8_t
 
ch
;

471 
uöt16_t
 
i
;

472 
öt16_t
 *
sh‹t_ßm∂e_buf„r
 = (öt16_t*)
ßm∂e_buf„r
;

473 
öt32_t
 *
öt_ßm∂e_buf„r
 = (öt32_t*)
ßm∂e_buf„r
;

476 
ch
 = 0; ch < 
ch™√ls
; ch++)

478 
f‹m©
)

480 
FAAD_FMT_16BIT
:

481 
i
 = 0; i < 
‰ame_Àn
; i++)

483 
öt32_t
 
tmp
 = 
	`gë_ßm∂e
(
öput
, 
ch
, 
i
, 
hDecodî
->
downM©rix
, hDecodî->
upM©rix
,

484 
hDecodî
->
öã∫Æ_ch™√l
);

485 i‡(
tmp
 >= 0)

487 
tmp
 +(1 << (
REAL_BITS
-1));

488 i‡(
tmp
 >
	`REAL_CONST
(32767))

490 
tmp
 = 
	`REAL_CONST
(32767);

493 
tmp
 +-(1 << (
REAL_BITS
-1));

494 i‡(
tmp
 <
	`REAL_CONST
(-32768))

496 
tmp
 = 
	`REAL_CONST
(-32768);

499 
tmp
 >>
REAL_BITS
;

500 
sh‹t_ßm∂e_buf„r
[(
i
*
ch™√ls
)+
ch
] = (
öt16_t
)
tmp
;

503 
FAAD_FMT_24BIT
:

504 
i
 = 0; i < 
‰ame_Àn
; i++)

506 
öt32_t
 
tmp
 = 
	`gë_ßm∂e
(
öput
, 
ch
, 
i
, 
hDecodî
->
downM©rix
, hDecodî->
upM©rix
,

507 
hDecodî
->
öã∫Æ_ch™√l
);

508 i‡(
tmp
 >= 0)

510 
tmp
 +(1 << (
REAL_BITS
-9));

511 
tmp
 >>(
REAL_BITS
-8);

512 i‡(
tmp
 >= 8388607)

514 
tmp
 = 8388607;

517 
tmp
 +-(1 << (
REAL_BITS
-9));

518 
tmp
 >>(
REAL_BITS
-8);

519 i‡(
tmp
 <= -8388608)

521 
tmp
 = -8388608;

524 
öt_ßm∂e_buf„r
[(
i
*
ch™√ls
)+
ch
] = (
öt32_t
)
tmp
;

527 
FAAD_FMT_32BIT
:

528 
i
 = 0; i < 
‰ame_Àn
; i++)

530 
öt32_t
 
tmp
 = 
	`gë_ßm∂e
(
öput
, 
ch
, 
i
, 
hDecodî
->
downM©rix
, hDecodî->
upM©rix
,

531 
hDecodî
->
öã∫Æ_ch™√l
);

532 i‡(
tmp
 >= 0)

534 
tmp
 +(1 << (16-
REAL_BITS
-1));

535 
tmp
 <<(16-
REAL_BITS
);

537 
tmp
 +-(1 << (16-
REAL_BITS
-1));

538 
tmp
 <<(16-
REAL_BITS
);

540 
öt_ßm∂e_buf„r
[(
i
*
ch™√ls
)+
ch
] = (
öt32_t
)
tmp
;

543 
FAAD_FMT_FIXED
:

544 
i
 = 0; i < 
‰ame_Àn
; i++)

546 
ªÆ_t
 
tmp
 = 
	`gë_ßm∂e
(
öput
, 
ch
, 
i
, 
hDecodî
->
downM©rix
, hDecodî->
upM©rix
,

547 
hDecodî
->
öã∫Æ_ch™√l
);

548 
öt_ßm∂e_buf„r
[(
i
*
ch™√ls
)+
ch
] = (
öt32_t
)
tmp
;

554  
ßm∂e_buf„r
;

555 
	}
}

	@output.h

28 #i‚de‡
__OUTPUT_H__


29 
	#__OUTPUT_H__


	)

31 #ifde‡
__˝lu•lus


35 * 
ouçut_to_PCM
(
NeAACDecH™dÀ
 
hDecodî
,

36 
ªÆ_t
 **
öput
,

37 *
ßm∂ebuf„r
,

38 
uöt8_t
 
ch™√ls
,

39 
uöt16_t
 
‰ame_Àn
,

40 
uöt8_t
 
f‹m©
);

42 #ifde‡
__˝lu•lus


	@pns.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 
	~"≤s.h
"

35 
gí_ønd_ve˘‹
(
ªÆ_t
 *
•ec
, 
öt16_t
 
sˇÀ_Á˘‹
, 
uöt16_t
 
size
,

36 
uöt8_t
 
sub
);

39 #ifde‡
FIXED_POINT


41 
	#DIV
(
A
, 
B
Ë(((
öt64_t
)A << 
REAL_BITS
)/B)

	)

43 
	#°ï
(
shi·
) \

44 i‡((0x40000000»>> 
shi·
Ë+ 
roŸ
 <
vÆue
) \

46 
vÆue
 -(0x40000000»>> 
shi·
Ë+ 
roŸ
; \

47 
roŸ
 = (roŸ >> 1Ë| (0x40000000»>> 
shi·
); \

49 
roŸ
 =Ñoot >> 1; \

50 }

	)

54 
ªÆ_t
 
	$Â_sqπ
(
ªÆ_t
 
vÆue
)

56 
ªÆ_t
 
roŸ
 = 0;

58 
	`°ï
( 0); step( 2); step( 4); step( 6);

59 
	`°ï
( 8); step(10); step(12); step(14);

60 
	`°ï
(16); step(18); step(20); step(22);

61 
	`°ï
(24); step(26); step(28); step(30);

63 i‡(
roŸ
 < 
vÆue
)

64 ++
roŸ
;

66 
roŸ
 <<(
REAL_BITS
/2);

68  
roŸ
;

69 
	}
}

71 
ªÆ_t
 
	gpow2_èbÀ
[] =

73 
COEF_CONST
(1.0),

74 
COEF_CONST
(1.18920711500272),

75 
COEF_CONST
(1.41421356237310),

76 
COEF_CONST
(1.68179283050743)

85 
INLINE
 
	$gí_ønd_ve˘‹
(
ªÆ_t
 *
•ec
, 
öt16_t
 
sˇÀ_Á˘‹
, 
uöt16_t
 
size
,

86 
uöt8_t
 
sub
)

88 #i‚de‡
FIXED_POINT


89 
uöt16_t
 
i
;

90 
ªÆ_t
 
íîgy
 = 0.0;

92 
ªÆ_t
 
sˇÀ
 = (ªÆ_t)1.0/‘ól_t)
size
;

94 
i
 = 0; i < 
size
; i++)

96 
ªÆ_t
 
tmp
 = 
sˇÀ
*‘ól_t)(
öt32_t
)
	`øndom_öt
();

97 
•ec
[
i
] = 
tmp
;

98 
íîgy
 +
tmp
*tmp;

101 
sˇÀ
 = (
ªÆ_t
)1.0/‘ól_t)
	`sqπ
(
íîgy
);

102 
sˇÀ
 *(
ªÆ_t
)
	`pow
(2.0, 0.25 * 
sˇÀ_Á˘‹
);

103 
i
 = 0; i < 
size
; i++)

105 
•ec
[
i
] *
sˇÀ
;

108 
uöt16_t
 
i
;

109 
ªÆ_t
 
íîgy
 = 0, 
sˇÀ
;

110 
öt32_t
 
exp
, 
‰ac
;

112 
i
 = 0; i < 
size
; i++)

115 
ªÆ_t
 
tmp
 = (
öt32_t
)
	`øndom_öt
();

116 i‡(
tmp
 < 0)

117 
tmp
 = -—m∞& ((1<<(
REAL_BITS
-1))-1));

119 
tmp
 = (tm∞& ((1<<(
REAL_BITS
-1))-1));

121 
íîgy
 +
	`MUL_R
(
tmp
,tmp);

123 
•ec
[
i
] = 
tmp
;

126 
íîgy
 = 
	`Â_sqπ
(energy);

127 i‡(
íîgy
 > 0)

129 
sˇÀ
 = 
	`DIV
(
	`REAL_CONST
(1),
íîgy
);

131 
exp
 = 
sˇÀ_Á˘‹
 >> 2;

132 
‰ac
 = 
sˇÀ_Á˘‹
 & 3;

135 
exp
 -
sub
;

137 i‡(
exp
 < 0)

138 
sˇÀ
 >>-
exp
;

140 
sˇÀ
 <<
exp
;

142 i‡(
‰ac
)

143 
sˇÀ
 = 
	`MUL_C
(sˇÀ, 
pow2_èbÀ
[
‰ac
]);

145 
i
 = 0; i < 
size
; i++)

147 
•ec
[
i
] = 
	`MUL_R
(•ec[i], 
sˇÀ
);

151 
	}
}

153 
	$≤s_decode
(
ic_°ªam
 *
ics_À·
, ic_°ªam *
ics_right
,

154 
ªÆ_t
 *
•ec_À·
,Ñól_à*
•ec_right
, 
uöt16_t
 
‰ame_Àn
,

155 
uöt8_t
 
ch™√l_∑ú
, uöt8_à
obje˘_ty≥
)

157 
uöt8_t
 
g
, 
sfb
, 
b
;

158 
uöt16_t
 
size
, 
offs
;

160 
uöt8_t
 
group
 = 0;

161 
uöt16_t
 
nsh‹t
 = 
‰ame_Àn
 >> 3;

163 
uöt8_t
 
sub
 = 0;

165 #ifde‡
FIXED_POINT


167 i‡(
obje˘_ty≥
 =
LD
)

169 
sub
 = 9 ;

171 i‡(
ics_À·
->
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
)

172 
sub
 = 7 ;

174 
sub
 = 10 ;

178 
g
 = 0; g < 
ics_À·
->
num_wödow_groups
; g++)

181 
b
 = 0; b < 
ics_À·
->
wödow_group_Àngth
[
g
]; b++)

183 
sfb
 = 0; sfb < 
ics_À·
->
max_sfb
; sfb++)

185 i‡(
	`is_noi£
(
ics_À·
, 
g
, 
sfb
))

187 #ifde‡
LTP_DEC


193 
ics_À·
->
…p
.
l⁄g_u£d
[
sfb
] = 0;

194 
ics_À·
->
…p2
.
l⁄g_u£d
[
sfb
] = 0;

197 #ifde‡
MAIN_DEC


201 
ics_À·
->
¥ed
.
¥edi˘i⁄_u£d
[
sfb
] = 0;

204 
offs
 = 
ics_À·
->
swb_off£t
[
sfb
];

205 
size
 = 
ics_À·
->
swb_off£t
[
sfb
+1] - 
offs
;

208 
	`gí_ønd_ve˘‹
(&
•ec_À·
[(
group
*
nsh‹t
)+
offs
],

209 
ics_À·
->
sˇÀ_Á˘‹s
[
g
][
sfb
], 
size
, 
sub
);

225 i‡(
ch™√l_∑ú
)

227 i‡(
	`is_noi£
(
ics_right
, 
g
, 
sfb
))

229 i‡(((
ics_À·
->
ms_mask_¥e£¡
 == 1) &&

230 (
ics_À·
->
ms_u£d
[
g
][
sfb
])) ||

231 (
ics_À·
->
ms_mask_¥e£¡
 == 2))

233 
uöt16_t
 
c
;

235 
offs
 = 
ics_right
->
swb_off£t
[
sfb
];

236 
size
 = 
ics_right
->
swb_off£t
[
sfb
+1] - 
offs
;

238 
c
 = 0; c < 
size
; c++)

240 
•ec_right
[(
group
*
nsh‹t
Ë+ 
offs
 + 
c
] =

241 
•ec_À·
[(
group
*
nsh‹t
Ë+ 
offs
 + 
c
];

244 #ifde‡
LTP_DEC


245 
ics_right
->
…p
.
l⁄g_u£d
[
sfb
] = 0;

246 
ics_right
->
…p2
.
l⁄g_u£d
[
sfb
] = 0;

248 #ifde‡
MAIN_DEC


249 
ics_right
->
¥ed
.
¥edi˘i⁄_u£d
[
sfb
] = 0;

252 
offs
 = 
ics_right
->
swb_off£t
[
sfb
];

253 
size
 = 
ics_right
->
swb_off£t
[
sfb
+1] - 
offs
;

256 
	`gí_ønd_ve˘‹
(&
•ec_right
[(
group
*
nsh‹t
)+
offs
],

257 
ics_right
->
sˇÀ_Á˘‹s
[
g
][
sfb
], 
size
, 
sub
);

262 
group
++;

265 
	}
}

	@pns.h

28 #i‚de‡
__PNS_H__


29 
	#__PNS_H__


	)

31 #ifde‡
__˝lu•lus


35 
	~"sy¡ax.h
"

37 
	#NOISE_OFFSET
 90

	)

39 
≤s_decode
(
ic_°ªam
 *
ics_À·
, ic_°ªam *
ics_right
,

40 
ªÆ_t
 *
•ec_À·
,Ñól_à*
•ec_right
, 
uöt16_t
 
‰ame_Àn
,

41 
uöt8_t
 
ch™√l_∑ú
, uöt8_à
obje˘_ty≥
);

43 
INLINE
 
uöt8_t
 
is_noi£
(
ic_°ªam
 *
ics
, uöt8_à
group
, uöt8_à
sfb
)

45 i‡(
ics
->
sfb_cb
[
group
][
sfb
] =
NOISE_HCB
)

50 #ifde‡
__˝lu•lus


	@ps_dec.c

28 
	~"comm⁄.h
"

30 #ifde‡
PS_DEC


32 
	~<°dlib.h
>

33 
	~"ps_dec.h
"

34 
	~"ps_èbÀs.h
"

37 
	#NEGATE_IPD_MASK
 (0x1000)

	)

38 
	#DECAY_SLOPE
 
	`FRAC_CONST
(0.05)

	)

39 
	#COEF_SQRT2
 
	`COEF_CONST
(1.4142135623731)

	)

43 c⁄° 
ªÆ_t
 
	gp8_13_20
[7] =

45 
FRAC_CONST
(0.00746082949812),

46 
FRAC_CONST
(0.02270420949825),

47 
FRAC_CONST
(0.04546865930473),

48 
FRAC_CONST
(0.07266113929591),

49 
FRAC_CONST
(0.09885108575264),

50 
FRAC_CONST
(0.11793710567217),

51 
FRAC_CONST
(0.125)

54 c⁄° 
ªÆ_t
 
	gp2_13_20
[7] =

56 
FRAC_CONST
(0.0),

57 
FRAC_CONST
(0.01899487526049),

58 
FRAC_CONST
(0.0),

59 
FRAC_CONST
(-0.07293139167538),

60 
FRAC_CONST
(0.0),

61 
FRAC_CONST
(0.30596630545168),

62 
FRAC_CONST
(0.5)

65 c⁄° 
ªÆ_t
 
	gp12_13_34
[7] =

67 
FRAC_CONST
(0.04081179924692),

68 
FRAC_CONST
(0.03812810994926),

69 
FRAC_CONST
(0.05144908135699),

70 
FRAC_CONST
(0.06399831151592),

71 
FRAC_CONST
(0.07428313801106),

72 
FRAC_CONST
(0.08100347892914),

73 
FRAC_CONST
(0.08333333333333)

76 c⁄° 
ªÆ_t
 
	gp8_13_34
[7] =

78 
FRAC_CONST
(0.01565675600122),

79 
FRAC_CONST
(0.03752716391991),

80 
FRAC_CONST
(0.05417891378782),

81 
FRAC_CONST
(0.08417044116767),

82 
FRAC_CONST
(0.10307344158036),

83 
FRAC_CONST
(0.12222452249753),

84 
FRAC_CONST
(0.125)

87 c⁄° 
ªÆ_t
 
	gp4_13_34
[7] =

89 
FRAC_CONST
(-0.05908211155639),

90 
FRAC_CONST
(-0.04871498374946),

91 
FRAC_CONST
(0.0),

92 
FRAC_CONST
(0.07778723915851),

93 
FRAC_CONST
(0.16486303567403),

94 
FRAC_CONST
(0.23279856662996),

95 
FRAC_CONST
(0.25)

98 #ifde‡
PARAM_32KHZ


99 c⁄° 
uöt8_t
 
	gdñay_Àngth_d
[2][
NO_ALLPASS_LINKS
] = {

104 c⁄° 
uöt8_t
 
	gdñay_Àngth_d
[
NO_ALLPASS_LINKS
] = {

108 c⁄° 
ªÆ_t
 
	gfûãr_a
[
NO_ALLPASS_LINKS
] = {

109 
FRAC_CONST
(0.65143905753106),

110 
FRAC_CONST
(0.56471812200776),

111 
FRAC_CONST
(0.48954165955695)

114 c⁄° 
uöt8_t
 
	ggroup_b‹dî20
[10+12 + 1] =

122 c⁄° 
uöt8_t
 
	ggroup_b‹dî34
[32+18 + 1] =

132 c⁄° 
uöt16_t
 
	gm≠_group2bk20
[10+12] =

134 (
NEGATE_IPD_MASK
 | 1), (NEGATE_IPD_MASK | 0),

138 c⁄° 
uöt16_t
 
	gm≠_group2bk34
[32+18] =

140 0, 1, 2, 3, 4, 5, 6, 6, 7, (
NEGATE_IPD_MASK
 | 2), (NEGATE_IPD_MASK | 1), (NEGATE_IPD_MASK | 0),

151 
uöt8_t
 
	m‰ame_Àn
;

152 
uöt8_t
 
	mªsﬁuti⁄20
[3];

153 
uöt8_t
 
	mªsﬁuti⁄34
[5];

155 
qmf_t
 *
	mw‹k
;

156 
qmf_t
 **
	mbuf„r
;

157 
qmf_t
 **
	mãmp
;

158 } 
	thyb_öfo
;

161 
ps_d©a_decode
(
ps_öfo
 *
ps
);

162 
hyb_öfo
 *
hybrid_öô
();

163 
ch™√l_fûãr2
(
hyb_öfo
 *
hyb
, 
uöt8_t
 
‰ame_Àn
, c⁄° 
ªÆ_t
 *
fûãr
,

164 
qmf_t
 *
buf„r
, qmf_à**
X_hybrid
);

165 
INLINE
 
DCT3_4_unsˇÀd
(
ªÆ_t
 *
y
,Ñól_à*
x
);

166 
ch™√l_fûãr8
(
hyb_öfo
 *
hyb
, 
uöt8_t
 
‰ame_Àn
, c⁄° 
ªÆ_t
 *
fûãr
,

167 
qmf_t
 *
buf„r
, qmf_à**
X_hybrid
);

168 
hybrid_™Æysis
(
hyb_öfo
 *
hyb
, 
qmf_t
 
X
[32][64], qmf_à
X_hybrid
[32][32],

169 
uöt8_t
 
u£34
);

170 
hybrid_sy¡hesis
(
hyb_öfo
 *
hyb
, 
qmf_t
 
X
[32][64], qmf_à
X_hybrid
[32][32],

171 
uöt8_t
 
u£34
);

172 
öt8_t
 
dñè_˛ù
(öt8_à
i
, i¡8_à
mö
, i¡8_à
max
);

173 
dñè_decode
(
uöt8_t
 
íabÀ
, 
öt8_t
 *
ödex
, i¡8_à*
ödex_¥ev
,

174 
uöt8_t
 
dt_Êag
, uöt8_à
ƒ_∑r
, uöt8_à
°ride
,

175 
öt8_t
 
mö_ödex
, i¡8_à
max_ödex
);

176 
dñè_modulo_decode
(
uöt8_t
 
íabÀ
, 
öt8_t
 *
ödex
, i¡8_à*
ödex_¥ev
,

177 
uöt8_t
 
dt_Êag
, uöt8_à
ƒ_∑r
, uöt8_à
°ride
,

178 
öt8_t
 
log2modulo
);

179 
m≠20ödexto34
(
öt8_t
 *
ödex
, 
uöt8_t
 
bös
);

180 #ifde‡
PS_LOW_POWER


181 
m≠34ödexto20
(
öt8_t
 *
ödex
, 
uöt8_t
 
bös
);

183 
ps_d©a_decode
(
ps_öfo
 *
ps
);

184 
ps_dec‹ªœã
(
ps_öfo
 *
ps
, 
qmf_t
 
X_À·
[38][64], qmf_à
X_right
[38][64],

185 
qmf_t
 
X_hybrid_À·
[32][32], qmf_à
X_hybrid_right
[32][32]);

186 
ps_mix_pha£
(
ps_öfo
 *
ps
, 
qmf_t
 
X_À·
[38][64], qmf_à
X_right
[38][64],

187 
qmf_t
 
X_hybrid_À·
[32][32], qmf_à
X_hybrid_right
[32][32]);

192 
hyb_öfo
 *
	$hybrid_öô
()

194 
uöt8_t
 
i
;

196 
hyb_öfo
 *
hyb
 = (hyb_öfo*)
	`Áad_mÆloc
((hyb_info));

198 
hyb
->
ªsﬁuti⁄34
[0] = 12;

199 
hyb
->
ªsﬁuti⁄34
[1] = 8;

200 
hyb
->
ªsﬁuti⁄34
[2] = 4;

201 
hyb
->
ªsﬁuti⁄34
[3] = 4;

202 
hyb
->
ªsﬁuti⁄34
[4] = 4;

204 
hyb
->
ªsﬁuti⁄20
[0] = 8;

205 
hyb
->
ªsﬁuti⁄20
[1] = 2;

206 
hyb
->
ªsﬁuti⁄20
[2] = 2;

208 
hyb
->
‰ame_Àn
 = 32;

210 
hyb
->
w‹k
 = (
qmf_t
*)
	`Áad_mÆloc
((hyb->
‰ame_Àn
+12) * (qmf_t));

211 
	`mem£t
(
hyb
->
w‹k
, 0, (hyb->
‰ame_Àn
+12Ë* (
qmf_t
));

213 
hyb
->
buf„r
 = (
qmf_t
**)
	`Áad_mÆloc
(5 * (qmf_t*));

214 
i
 = 0; i < 5; i++)

216 
hyb
->
buf„r
[
i
] = (
qmf_t
*)
	`Áad_mÆloc
(hyb->
‰ame_Àn
 * (qmf_t));

217 
	`mem£t
(
hyb
->
buf„r
[
i
], 0, hyb->
‰ame_Àn
 * (
qmf_t
));

220 
hyb
->
ãmp
 = (
qmf_t
**)
	`Áad_mÆloc
(hyb->
‰ame_Àn
 * (qmf_t*));

221 
i
 = 0; i < 
hyb
->
‰ame_Àn
; i++)

223 
hyb
->
ãmp
[
i
] = (
qmf_t
*)
	`Áad_mÆloc
(12 * (qmf_t));

226  
hyb
;

227 
	}
}

229 
	$hybrid_‰ì
(
hyb_öfo
 *
hyb
)

231 
uöt8_t
 
i
;

233 i‡(
hyb
->
w‹k
)

234 
	`Áad_‰ì
(
hyb
->
w‹k
);

236 
i
 = 0; i < 5; i++)

238 i‡(
hyb
->
buf„r
[
i
])

239 
	`Áad_‰ì
(
hyb
->
buf„r
[
i
]);

241 i‡(
hyb
->
buf„r
)

242 
	`Áad_‰ì
(
hyb
->
buf„r
);

244 
i
 = 0; i < 
hyb
->
‰ame_Àn
; i++)

246 i‡(
hyb
->
ãmp
[
i
])

247 
	`Áad_‰ì
(
hyb
->
ãmp
[
i
]);

249 i‡(
hyb
->
ãmp
)

250 
	`Áad_‰ì
(
hyb
->
ãmp
);

251 
	}
}

254 
	$ch™√l_fûãr2
(
hyb_öfo
 *
hyb
, 
uöt8_t
 
‰ame_Àn
, c⁄° 
ªÆ_t
 *
fûãr
,

255 
qmf_t
 *
buf„r
, qmf_à**
X_hybrid
)

257 
uöt8_t
 
i
;

259 
i
 = 0; i < 
‰ame_Àn
; i++)

261 
ªÆ_t
 
r0
 = 
	`MUL_F
(
fûãr
[0],(
	`QMF_RE
(
buf„r
[0+
i
]) + QMF_RE(buffer[12+i])));

262 
ªÆ_t
 
r1
 = 
	`MUL_F
(
fûãr
[1],(
	`QMF_RE
(
buf„r
[1+
i
]) + QMF_RE(buffer[11+i])));

263 
ªÆ_t
 
r2
 = 
	`MUL_F
(
fûãr
[2],(
	`QMF_RE
(
buf„r
[2+
i
]) + QMF_RE(buffer[10+i])));

264 
ªÆ_t
 
r3
 = 
	`MUL_F
(
fûãr
[3],(
	`QMF_RE
(
buf„r
[3+
i
]) + QMF_RE(buffer[9+i])));

265 
ªÆ_t
 
r4
 = 
	`MUL_F
(
fûãr
[4],(
	`QMF_RE
(
buf„r
[4+
i
]) + QMF_RE(buffer[8+i])));

266 
ªÆ_t
 
r5
 = 
	`MUL_F
(
fûãr
[5],(
	`QMF_RE
(
buf„r
[5+
i
]) + QMF_RE(buffer[7+i])));

267 
ªÆ_t
 
r6
 = 
	`MUL_F
(
fûãr
[6],
	`QMF_RE
(
buf„r
[6+
i
]));

268 
ªÆ_t
 
i0
 = 
	`MUL_F
(
fûãr
[0],(
	`QMF_IM
(
buf„r
[0+
i
]) + QMF_IM(buffer[12+i])));

269 
ªÆ_t
 
i1
 = 
	`MUL_F
(
fûãr
[1],(
	`QMF_IM
(
buf„r
[1+
i
]) + QMF_IM(buffer[11+i])));

270 
ªÆ_t
 
i2
 = 
	`MUL_F
(
fûãr
[2],(
	`QMF_IM
(
buf„r
[2+
i
]) + QMF_IM(buffer[10+i])));

271 
ªÆ_t
 
i3
 = 
	`MUL_F
(
fûãr
[3],(
	`QMF_IM
(
buf„r
[3+
i
]) + QMF_IM(buffer[9+i])));

272 
ªÆ_t
 
i4
 = 
	`MUL_F
(
fûãr
[4],(
	`QMF_IM
(
buf„r
[4+
i
]) + QMF_IM(buffer[8+i])));

273 
ªÆ_t
 
i5
 = 
	`MUL_F
(
fûãr
[5],(
	`QMF_IM
(
buf„r
[5+
i
]) + QMF_IM(buffer[7+i])));

274 
ªÆ_t
 
i6
 = 
	`MUL_F
(
fûãr
[6],
	`QMF_IM
(
buf„r
[6+
i
]));

277 
	`QMF_RE
(
X_hybrid
[
i
][0]Ë
r0
 + 
r1
 + 
r2
 + 
r3
 + 
r4
 + 
r5
 + 
r6
;

278 
	`QMF_IM
(
X_hybrid
[
i
][0]Ë
i0
 + 
i1
 + 
i2
 + 
i3
 + 
i4
 + 
i5
 + 
i6
;

281 
	`QMF_RE
(
X_hybrid
[
i
][1]Ë
r0
 - 
r1
 + 
r2
 - 
r3
 + 
r4
 - 
r5
 + 
r6
;

282 
	`QMF_IM
(
X_hybrid
[
i
][1]Ë
i0
 - 
i1
 + 
i2
 - 
i3
 + 
i4
 - 
i5
 + 
i6
;

284 
	}
}

287 
	$ch™√l_fûãr4
(
hyb_öfo
 *
hyb
, 
uöt8_t
 
‰ame_Àn
, c⁄° 
ªÆ_t
 *
fûãr
,

288 
qmf_t
 *
buf„r
, qmf_à**
X_hybrid
)

290 
uöt8_t
 
i
;

291 
ªÆ_t
 
öput_ª1
[2], 
öput_ª2
[2], 
öput_im1
[2], 
öput_im2
[2];

293 
i
 = 0; i < 
‰ame_Àn
; i++)

295 
öput_ª1
[0] = -
	`MUL_F
(
fûãr
[2], (
	`QMF_RE
(
buf„r
[
i
+2]) + QMF_RE(buffer[i+10]))) +

296 
	`MUL_F
(
fûãr
[6], 
	`QMF_RE
(
buf„r
[
i
+6]));

297 
öput_ª1
[1] = 
	`MUL_F
(
	`FRAC_CONST
(-0.70710678118655),

298 (
	`MUL_F
(
fûãr
[1], (
	`QMF_RE
(
buf„r
[
i
+1]) + QMF_RE(buffer[i+11]))) +

299 
	`MUL_F
(
fûãr
[3], (
	`QMF_RE
(
buf„r
[
i
+3]) + QMF_RE(buffer[i+9]))) -

300 
	`MUL_F
(
fûãr
[5], (
	`QMF_RE
(
buf„r
[
i
+5]) + QMF_RE(buffer[i+7])))));

302 
öput_im1
[0] = 
	`MUL_F
(
fûãr
[0], (
	`QMF_IM
(
buf„r
[
i
+0]) - QMF_IM(buffer[i+12]))) -

303 
	`MUL_F
(
fûãr
[4], (
	`QMF_IM
(
buf„r
[
i
+4]) - QMF_IM(buffer[i+8])));

304 
öput_im1
[1] = 
	`MUL_F
(
	`FRAC_CONST
(0.70710678118655),

305 (
	`MUL_F
(
fûãr
[1], (
	`QMF_IM
(
buf„r
[
i
+1]) - QMF_IM(buffer[i+11]))) -

306 
	`MUL_F
(
fûãr
[3], (
	`QMF_IM
(
buf„r
[
i
+3]) - QMF_IM(buffer[i+9]))) -

307 
	`MUL_F
(
fûãr
[5], (
	`QMF_IM
(
buf„r
[
i
+5]) - QMF_IM(buffer[i+7])))));

309 
öput_ª2
[0] = 
	`MUL_F
(
fûãr
[0], (
	`QMF_RE
(
buf„r
[
i
+0]) - QMF_RE(buffer[i+12]))) -

310 
	`MUL_F
(
fûãr
[4], (
	`QMF_RE
(
buf„r
[
i
+4]) - QMF_RE(buffer[i+8])));

311 
öput_ª2
[1] = 
	`MUL_F
(
	`FRAC_CONST
(0.70710678118655),

312 (
	`MUL_F
(
fûãr
[1], (
	`QMF_RE
(
buf„r
[
i
+1]) - QMF_RE(buffer[i+11]))) -

313 
	`MUL_F
(
fûãr
[3], (
	`QMF_RE
(
buf„r
[
i
+3]) - QMF_RE(buffer[i+9]))) -

314 
	`MUL_F
(
fûãr
[5], (
	`QMF_RE
(
buf„r
[
i
+5]) - QMF_RE(buffer[i+7])))));

316 
öput_im2
[0] = -
	`MUL_F
(
fûãr
[2], (
	`QMF_IM
(
buf„r
[
i
+2]) + QMF_IM(buffer[i+10]))) +

317 
	`MUL_F
(
fûãr
[6], 
	`QMF_IM
(
buf„r
[
i
+6]));

318 
öput_im2
[1] = 
	`MUL_F
(
	`FRAC_CONST
(-0.70710678118655),

319 (
	`MUL_F
(
fûãr
[1], (
	`QMF_IM
(
buf„r
[
i
+1]) + QMF_IM(buffer[i+11]))) +

320 
	`MUL_F
(
fûãr
[3], (
	`QMF_IM
(
buf„r
[
i
+3]) + QMF_IM(buffer[i+9]))) -

321 
	`MUL_F
(
fûãr
[5], (
	`QMF_IM
(
buf„r
[
i
+5]) + QMF_IM(buffer[i+7])))));

324 
	`QMF_RE
(
X_hybrid
[
i
][0]Ë
öput_ª1
[0] + i≈ut_ª1[1] + 
öput_im1
[0] + input_im1[1];

325 
	`QMF_IM
(
X_hybrid
[
i
][0]Ë-
öput_ª2
[0] - i≈ut_ª2[1] + 
öput_im2
[0] + input_im2[1];

328 
	`QMF_RE
(
X_hybrid
[
i
][1]Ë
öput_ª1
[0] - i≈ut_ª1[1] - 
öput_im1
[0] + input_im1[1];

329 
	`QMF_IM
(
X_hybrid
[
i
][1]Ë
öput_ª2
[0] - i≈ut_ª2[1] + 
öput_im2
[0] - input_im2[1];

332 
	`QMF_RE
(
X_hybrid
[
i
][2]Ë
öput_ª1
[0] - i≈ut_ª1[1] + 
öput_im1
[0] - input_im1[1];

333 
	`QMF_IM
(
X_hybrid
[
i
][2]Ë-
öput_ª2
[0] + i≈ut_ª2[1] + 
öput_im2
[0] - input_im2[1];

336 
	`QMF_RE
(
X_hybrid
[
i
][3]Ë
öput_ª1
[0] + i≈ut_ª1[1] - 
öput_im1
[0] - input_im1[1];

337 
	`QMF_IM
(
X_hybrid
[
i
][3]Ë
öput_ª2
[0] + i≈ut_ª2[1] + 
öput_im2
[0] + input_im2[1];

339 
	}
}

341 
INLINE
 
	$DCT3_4_unsˇÀd
(
ªÆ_t
 *
y
,Ñól_à*
x
)

343 
ªÆ_t
 
f0
, 
f1
, 
f2
, 
f3
, 
f4
, 
f5
, 
f6
, 
f7
, 
f8
;

345 
f0
 = 
	`MUL_F
(
x
[2], 
	`FRAC_CONST
(0.7071067811865476));

346 
f1
 = 
x
[0] - 
f0
;

347 
f2
 = 
x
[0] + 
f0
;

348 
f3
 = 
x
[1] + x[3];

349 
f4
 = 
	`MUL_C
(
x
[1], 
	`COEF_CONST
(1.3065629648763766));

350 
f5
 = 
	`MUL_F
(
f3
, 
	`FRAC_CONST
(-0.9238795325112866));

351 
f6
 = 
	`MUL_F
(
x
[3], 
	`FRAC_CONST
(-0.5411961001461967));

352 
f7
 = 
f4
 + 
f5
;

353 
f8
 = 
f6
 - 
f5
;

354 
y
[3] = 
f2
 - 
f8
;

355 
y
[0] = 
f2
 + 
f8
;

356 
y
[2] = 
f1
 - 
f7
;

357 
y
[1] = 
f1
 + 
f7
;

358 
	}
}

361 
	$ch™√l_fûãr8
(
hyb_öfo
 *
hyb
, 
uöt8_t
 
‰ame_Àn
, c⁄° 
ªÆ_t
 *
fûãr
,

362 
qmf_t
 *
buf„r
, qmf_à**
X_hybrid
)

364 
uöt8_t
 
i
, 
n
;

365 
ªÆ_t
 
öput_ª1
[4], 
öput_ª2
[4], 
öput_im1
[4], 
öput_im2
[4];

366 
ªÆ_t
 
x
[4];

368 
i
 = 0; i < 
‰ame_Àn
; i++)

370 
öput_ª1
[0] = 
	`MUL_F
(
fûãr
[6],
	`QMF_RE
(
buf„r
[6+
i
]));

371 
öput_ª1
[1] = 
	`MUL_F
(
fûãr
[5],(
	`QMF_RE
(
buf„r
[5+
i
]) + QMF_RE(buffer[7+i])));

372 
öput_ª1
[2] = -
	`MUL_F
(
fûãr
[0],(
	`QMF_RE
(
buf„r
[0+
i
]) + QMF_RE(buffer[12+i]))) + MUL_F(filter[4],(QMF_RE(buffer[4+i]) + QMF_RE(buffer[8+i])));

373 
öput_ª1
[3] = -
	`MUL_F
(
fûãr
[1],(
	`QMF_RE
(
buf„r
[1+
i
]) + QMF_RE(buffer[11+i]))) + MUL_F(filter[3],(QMF_RE(buffer[3+i]) + QMF_RE(buffer[9+i])));

375 
öput_im1
[0] = 
	`MUL_F
(
fûãr
[5],(
	`QMF_IM
(
buf„r
[7+
i
]) - QMF_IM(buffer[5+i])));

376 
öput_im1
[1] = 
	`MUL_F
(
fûãr
[0],(
	`QMF_IM
(
buf„r
[12+
i
]) - QMF_IM(buffer[0+i]))) + MUL_F(filter[4],(QMF_IM(buffer[8+i]) - QMF_IM(buffer[4+i])));

377 
öput_im1
[2] = 
	`MUL_F
(
fûãr
[1],(
	`QMF_IM
(
buf„r
[11+
i
]) - QMF_IM(buffer[1+i]))) + MUL_F(filter[3],(QMF_IM(buffer[9+i]) - QMF_IM(buffer[3+i])));

378 
öput_im1
[3] = 
	`MUL_F
(
fûãr
[2],(
	`QMF_IM
(
buf„r
[10+
i
]) - QMF_IM(buffer[2+i])));

380 
n
 = 0;Ç < 4;Ç++)

382 
x
[
n
] = 
öput_ª1
[n] - 
öput_im1
[3-n];

384 
	`DCT3_4_unsˇÀd
(
x
, x);

385 
	`QMF_RE
(
X_hybrid
[
i
][7]Ë
x
[0];

386 
	`QMF_RE
(
X_hybrid
[
i
][5]Ë
x
[2];

387 
	`QMF_RE
(
X_hybrid
[
i
][3]Ë
x
[3];

388 
	`QMF_RE
(
X_hybrid
[
i
][1]Ë
x
[1];

390 
n
 = 0;Ç < 4;Ç++)

392 
x
[
n
] = 
öput_ª1
[n] + 
öput_im1
[3-n];

394 
	`DCT3_4_unsˇÀd
(
x
, x);

395 
	`QMF_RE
(
X_hybrid
[
i
][6]Ë
x
[1];

396 
	`QMF_RE
(
X_hybrid
[
i
][4]Ë
x
[3];

397 
	`QMF_RE
(
X_hybrid
[
i
][2]Ë
x
[2];

398 
	`QMF_RE
(
X_hybrid
[
i
][0]Ë
x
[0];

400 
öput_im2
[0] = 
	`MUL_F
(
fûãr
[6],
	`QMF_IM
(
buf„r
[6+
i
]));

401 
öput_im2
[1] = 
	`MUL_F
(
fûãr
[5],(
	`QMF_IM
(
buf„r
[5+
i
]) + QMF_IM(buffer[7+i])));

402 
öput_im2
[2] = -
	`MUL_F
(
fûãr
[0],(
	`QMF_IM
(
buf„r
[0+
i
]) + QMF_IM(buffer[12+i]))) + MUL_F(filter[4],(QMF_IM(buffer[4+i]) + QMF_IM(buffer[8+i])));

403 
öput_im2
[3] = -
	`MUL_F
(
fûãr
[1],(
	`QMF_IM
(
buf„r
[1+
i
]) + QMF_IM(buffer[11+i]))) + MUL_F(filter[3],(QMF_IM(buffer[3+i]) + QMF_IM(buffer[9+i])));

405 
öput_ª2
[0] = 
	`MUL_F
(
fûãr
[5],(
	`QMF_RE
(
buf„r
[7+
i
]) - QMF_RE(buffer[5+i])));

406 
öput_ª2
[1] = 
	`MUL_F
(
fûãr
[0],(
	`QMF_RE
(
buf„r
[12+
i
]) - QMF_RE(buffer[0+i]))) + MUL_F(filter[4],(QMF_RE(buffer[8+i]) - QMF_RE(buffer[4+i])));

407 
öput_ª2
[2] = 
	`MUL_F
(
fûãr
[1],(
	`QMF_RE
(
buf„r
[11+
i
]) - QMF_RE(buffer[1+i]))) + MUL_F(filter[3],(QMF_RE(buffer[9+i]) - QMF_RE(buffer[3+i])));

408 
öput_ª2
[3] = 
	`MUL_F
(
fûãr
[2],(
	`QMF_RE
(
buf„r
[10+
i
]) - QMF_RE(buffer[2+i])));

410 
n
 = 0;Ç < 4;Ç++)

412 
x
[
n
] = 
öput_im2
[n] + 
öput_ª2
[3-n];

414 
	`DCT3_4_unsˇÀd
(
x
, x);

415 
	`QMF_IM
(
X_hybrid
[
i
][7]Ë
x
[0];

416 
	`QMF_IM
(
X_hybrid
[
i
][5]Ë
x
[2];

417 
	`QMF_IM
(
X_hybrid
[
i
][3]Ë
x
[3];

418 
	`QMF_IM
(
X_hybrid
[
i
][1]Ë
x
[1];

420 
n
 = 0;Ç < 4;Ç++)

422 
x
[
n
] = 
öput_im2
[n] - 
öput_ª2
[3-n];

424 
	`DCT3_4_unsˇÀd
(
x
, x);

425 
	`QMF_IM
(
X_hybrid
[
i
][6]Ë
x
[1];

426 
	`QMF_IM
(
X_hybrid
[
i
][4]Ë
x
[3];

427 
	`QMF_IM
(
X_hybrid
[
i
][2]Ë
x
[2];

428 
	`QMF_IM
(
X_hybrid
[
i
][0]Ë
x
[0];

430 
	}
}

432 
INLINE
 
	$DCT3_6_unsˇÀd
(
ªÆ_t
 *
y
,Ñól_à*
x
)

434 
ªÆ_t
 
f0
, 
f1
, 
f2
, 
f3
, 
f4
, 
f5
, 
f6
, 
f7
;

436 
f0
 = 
	`MUL_F
(
x
[3], 
	`FRAC_CONST
(0.70710678118655));

437 
f1
 = 
x
[0] + 
f0
;

438 
f2
 = 
x
[0] - 
f0
;

439 
f3
 = 
	`MUL_F
((
x
[1] - x[5]), 
	`FRAC_CONST
(0.70710678118655));

440 
f4
 = 
	`MUL_F
(
x
[2], 
	`FRAC_CONST
(0.86602540378444)) + MUL_F(x[4], FRAC_CONST(0.5));

441 
f5
 = 
f4
 - 
x
[4];

442 
f6
 = 
	`MUL_F
(
x
[1], 
	`FRAC_CONST
(0.96592582628907)) + MUL_F(x[5], FRAC_CONST(0.25881904510252));

443 
f7
 = 
f6
 - 
f3
;

444 
y
[0] = 
f1
 + 
f6
 + 
f4
;

445 
y
[1] = 
f2
 + 
f3
 - 
x
[4];

446 
y
[2] = 
f7
 + 
f2
 - 
f5
;

447 
y
[3] = 
f1
 - 
f7
 - 
f5
;

448 
y
[4] = 
f1
 - 
f3
 - 
x
[4];

449 
y
[5] = 
f2
 - 
f6
 + 
f4
;

450 
	}
}

453 
	$ch™√l_fûãr12
(
hyb_öfo
 *
hyb
, 
uöt8_t
 
‰ame_Àn
, c⁄° 
ªÆ_t
 *
fûãr
,

454 
qmf_t
 *
buf„r
, qmf_à**
X_hybrid
)

456 
uöt8_t
 
i
, 
n
;

457 
ªÆ_t
 
öput_ª1
[6], 
öput_ª2
[6], 
öput_im1
[6], 
öput_im2
[6];

458 
ªÆ_t
 
out_ª1
[6], 
out_ª2
[6], 
out_im1
[6], 
out_im2
[6];

460 
i
 = 0; i < 
‰ame_Àn
; i++)

462 
n
 = 0;Ç < 6;Ç++)

464 i‡(
n
 == 0)

466 
öput_ª1
[0] = 
	`MUL_F
(
	`QMF_RE
(
buf„r
[6+
i
]), 
fûãr
[6]);

467 
öput_ª2
[0] = 
	`MUL_F
(
	`QMF_IM
(
buf„r
[6+
i
]), 
fûãr
[6]);

469 
öput_ª1
[6-
n
] = 
	`MUL_F
((
	`QMF_RE
(
buf„r
[n+
i
]Ë+ QMF_RE(buf„r[12-n+i])), 
fûãr
[n]);

470 
öput_ª2
[6-
n
] = 
	`MUL_F
((
	`QMF_IM
(
buf„r
[n+
i
]Ë+ QMF_IM(buf„r[12-n+i])), 
fûãr
[n]);

472 
öput_im2
[
n
] = 
	`MUL_F
((
	`QMF_RE
(
buf„r
[n+
i
]Ë- QMF_RE(buf„r[12-n+i])), 
fûãr
[n]);

473 
öput_im1
[
n
] = 
	`MUL_F
((
	`QMF_IM
(
buf„r
[n+
i
]Ë- QMF_IM(buf„r[12-n+i])), 
fûãr
[n]);

476 
	`DCT3_6_unsˇÀd
(
out_ª1
, 
öput_ª1
);

477 
	`DCT3_6_unsˇÀd
(
out_ª2
, 
öput_ª2
);

479 
	`DCT3_6_unsˇÀd
(
out_im1
, 
öput_im1
);

480 
	`DCT3_6_unsˇÀd
(
out_im2
, 
öput_im2
);

482 
n
 = 0;Ç < 6;Ç += 2)

484 
	`QMF_RE
(
X_hybrid
[
i
][
n
]Ë
out_ª1
[n] - 
out_im1
[n];

485 
	`QMF_IM
(
X_hybrid
[
i
][
n
]Ë
out_ª2
[n] + 
out_im2
[n];

486 
	`QMF_RE
(
X_hybrid
[
i
][
n
+1]Ë
out_ª1
[n+1] + 
out_im1
[n+1];

487 
	`QMF_IM
(
X_hybrid
[
i
][
n
+1]Ë
out_ª2
[n+1] - 
out_im2
[n+1];

489 
	`QMF_RE
(
X_hybrid
[
i
][10-
n
]Ë
out_ª1
[n+1] - 
out_im1
[n+1];

490 
	`QMF_IM
(
X_hybrid
[
i
][10-
n
]Ë
out_ª2
[n+1] + 
out_im2
[n+1];

491 
	`QMF_RE
(
X_hybrid
[
i
][11-
n
]Ë
out_ª1
[n] + 
out_im1
[n];

492 
	`QMF_IM
(
X_hybrid
[
i
][11-
n
]Ë
out_ª2
[n] - 
out_im2
[n];

495 
	}
}

500 
hybrid_™Æysis
(
hyb_öfo
 *
hyb
, 
qmf_t
 
X
[32][64], qmf_à
X_hybrid
[32][32],

501 
uöt8_t
 
u£34
)

503 
uöt8_t
 
	gk
, 
	gn
, 
	gb™d
;

504 
uöt8_t
 
	goff£t
 = 0;

505 
uöt8_t
 
	gqmf_b™ds
 = (
u£34
) ? 5 : 3;

506 
uöt8_t
 *
	gªsﬁuti⁄
 = (
u£34
Ë? 
hyb
->
ªsﬁuti⁄34
 : hyb->
ªsﬁuti⁄20
;

508 
	gb™d
 = 0; b™d < 
	gqmf_b™ds
; band++)

511 
mem˝y
(
hyb
->
w‹k
, hyb->
buf„r
[
b™d
], 12 * (
qmf_t
));

514 
	gn
 = 0;Ç < 
	ghyb
->
	g‰ame_Àn
;Ç++)

516 
QMF_RE
(
hyb
->
w‹k
[12 + 
n
]ËQMF_RE(
X
[¿+ 6 ][
b™d
]);

517 
QMF_IM
(
hyb
->
w‹k
[12 + 
n
]ËQMF_IM(
X
[¿+ 6 ][
b™d
]);

521 
mem˝y
(
hyb
->
buf„r
[
b™d
], hyb->
w‹k
 + hyb->
‰ame_Àn
, 12 * (
qmf_t
));

524 
	gªsﬁuti⁄
[
b™d
])

528 
ch™√l_fûãr2
(
hyb
, hyb->
‰ame_Àn
, 
p2_13_20
, hyb->
w‹k
, hyb->
ãmp
);

532 
ch™√l_fûãr4
(
hyb
, hyb->
‰ame_Àn
, 
p4_13_34
, hyb->
w‹k
, hyb->
ãmp
);

536 
ch™√l_fûãr8
(
hyb
, hyb->
‰ame_Àn
, (
u£34
Ë? 
p8_13_34
 : 
p8_13_20
,

537 
hyb
->
w‹k
, hyb->
ãmp
);

541 
ch™√l_fûãr12
(
hyb
, hyb->
‰ame_Àn
, 
p12_13_34
, hyb->
w‹k
, hyb->
ãmp
);

545 
	gn
 = 0;Ç < 
	ghyb
->
	g‰ame_Àn
;Ç++)

547 
	gk
 = 0; k < 
	gªsﬁuti⁄
[
b™d
]; k++)

549 
QMF_RE
(
X_hybrid
[
n
][
off£t
 + 
k
]ËQMF_RE(
hyb
->
ãmp
[n][k]);

550 
QMF_IM
(
X_hybrid
[
n
][
off£t
 + 
k
]ËQMF_IM(
hyb
->
ãmp
[n][k]);

553 
	goff£t
 +
ªsﬁuti⁄
[
b™d
];

557 i‡(!
	gu£34
)

559 
	gn
 = 0;Ç < 32 ;Ç++)

561 
QMF_RE
(
X_hybrid
[
n
][3]) += QMF_RE(X_hybrid[n][4]);

562 
QMF_IM
(
X_hybrid
[
n
][3]) += QMF_IM(X_hybrid[n][4]);

563 
QMF_RE
(
X_hybrid
[
n
][4]) = 0;

564 
QMF_IM
(
X_hybrid
[
n
][4]) = 0;

566 
QMF_RE
(
X_hybrid
[
n
][2]) += QMF_RE(X_hybrid[n][5]);

567 
QMF_IM
(
X_hybrid
[
n
][2]) += QMF_IM(X_hybrid[n][5]);

568 
QMF_RE
(
X_hybrid
[
n
][5]) = 0;

569 
QMF_IM
(
X_hybrid
[
n
][5]) = 0;

574 
hybrid_sy¡hesis
(
hyb_öfo
 *
hyb
, 
qmf_t
 
X
[32][64], qmf_à
X_hybrid
[32][32],

575 
uöt8_t
 
u£34
)

577 
uöt8_t
 
	gk
, 
	gn
, 
	gb™d
;

578 
uöt8_t
 
	goff£t
 = 0;

579 
uöt8_t
 
	gqmf_b™ds
 = (
u£34
) ? 5 : 3;

580 
uöt8_t
 *
	gªsﬁuti⁄
 = (
u£34
Ë? 
hyb
->
ªsﬁuti⁄34
 : hyb->
ªsﬁuti⁄20
;

582 
	gb™d
 = 0; b™d < 
	gqmf_b™ds
; band++)

584 
	gn
 = 0;Ç < 
	ghyb
->
	g‰ame_Àn
;Ç++)

586 
QMF_RE
(
X
[
n
][
b™d
]) = 0;

587 
QMF_IM
(
X
[
n
][
b™d
]) = 0;

589 
	gk
 = 0; k < 
	gªsﬁuti⁄
[
b™d
]; k++)

591 
QMF_RE
(
X
[
n
][
b™d
]Ë+QMF_RE(
X_hybrid
[n][
off£t
 + 
k
]);

592 
QMF_IM
(
X
[
n
][
b™d
]Ë+QMF_IM(
X_hybrid
[n][
off£t
 + 
k
]);

595 
	goff£t
 +
ªsﬁuti⁄
[
b™d
];

600 
öt8_t
 
	$dñè_˛ù
(
öt8_t
 
i
, i¡8_à
mö
, i¡8_à
max
)

602 i‡(
i
 < 
mö
)

603  
mö
;

604 i‡(
i
 > 
max
)

605  
max
;

607  
i
;

608 
	}
}

613 
	$dñè_decode
(
uöt8_t
 
íabÀ
, 
öt8_t
 *
ödex
, i¡8_à*
ödex_¥ev
,

614 
uöt8_t
 
dt_Êag
, uöt8_à
ƒ_∑r
, uöt8_à
°ride
,

615 
öt8_t
 
mö_ödex
, i¡8_à
max_ödex
)

617 
öt8_t
 
i
;

619 i‡(
íabÀ
 == 1)

621 i‡(
dt_Êag
 == 0)

624 
ödex
[0] = 0 + index[0];

625 
ödex
[0] = 
	`dñè_˛ù
(ödex[0], 
mö_ödex
, 
max_ödex
);

627 
i
 = 1; i < 
ƒ_∑r
; i++)

629 
ödex
[
i
] = index[i-1] + index[i];

630 
ödex
[
i
] = 
	`dñè_˛ù
(ödex[i], 
mö_ödex
, 
max_ödex
);

634 
i
 = 0; i < 
ƒ_∑r
; i++)

642 
ödex
[
i
] = 
ödex_¥ev
[i*
°ride
] + index[i];

644 
ödex
[
i
] = 
	`dñè_˛ù
(ödex[i], 
mö_ödex
, 
max_ödex
);

657 
i
 = 0; i < 
ƒ_∑r
; i++)

659 
ödex
[
i
] = 0;

664 i‡(
°ride
 == 2)

666 
i
 = (
ƒ_∑r
<<1)-1; i > 0; i--)

668 
ödex
[
i
] = index[i>>1];

671 
	}
}

675 
	$dñè_modulo_decode
(
uöt8_t
 
íabÀ
, 
öt8_t
 *
ödex
, i¡8_à*
ödex_¥ev
,

676 
uöt8_t
 
dt_Êag
, uöt8_à
ƒ_∑r
, uöt8_à
°ride
,

677 
öt8_t
 
log2modulo
)

679 
öt8_t
 
i
;

681 i‡(
íabÀ
 == 1)

683 i‡(
dt_Êag
 == 0)

686 
ödex
[0] = 0 + index[0];

687 
ödex
[0] &
log2modulo
;

689 
i
 = 1; i < 
ƒ_∑r
; i++)

691 
ödex
[
i
] = index[i-1] + index[i];

692 
ödex
[
i
] &
log2modulo
;

696 
i
 = 0; i < 
ƒ_∑r
; i++)

698 
ödex
[
i
] = 
ödex_¥ev
[i*
°ride
] + index[i];

699 
ödex
[
i
] &
log2modulo
;

704 
i
 = 0; i < 
ƒ_∑r
; i++)

706 
ödex
[
i
] = 0;

711 i‡(
°ride
 == 2)

713 
ödex
[0] = 0;

714 
i
 = (
ƒ_∑r
<<1)-1; i > 0; i--)

716 
ödex
[
i
] = index[i>>1];

719 
	}
}

721 #ifde‡
PS_LOW_POWER


722 
	$m≠34ödexto20
(
öt8_t
 *
ödex
, 
uöt8_t
 
bös
)

724 
ödex
[0] = (2*index[0]+index[1])/3;

725 
ödex
[1] = (index[1]+2*index[2])/3;

726 
ödex
[2] = (2*index[3]+index[4])/3;

727 
ödex
[3] = (index[4]+2*index[5])/3;

728 
ödex
[4] = (index[6]+index[7])/2;

729 
ödex
[5] = (index[8]+index[9])/2;

730 
ödex
[6] = index[10];

731 
ödex
[7] = index[11];

732 
ödex
[8] = (index[12]+index[13])/2;

733 
ödex
[9] = (index[14]+index[15])/2;

734 
ödex
[10] = index[16];

736 i‡(
bös
 == 34)

738 
ödex
[11] = index[17];

739 
ödex
[12] = index[18];

740 
ödex
[13] = index[19];

741 
ödex
[14] = (index[20]+index[21])/2;

742 
ödex
[15] = (index[22]+index[23])/2;

743 
ödex
[16] = (index[24]+index[25])/2;

744 
ödex
[17] = (index[26]+index[27])/2;

745 
ödex
[18] = (index[28]+index[29]+index[30]+index[31])/4;

746 
ödex
[19] = (index[32]+index[33])/2;

748 
	}
}

751 
	$m≠20ödexto34
(
öt8_t
 *
ödex
, 
uöt8_t
 
bös
)

753 
ödex
[0] = index[0];

754 
ödex
[1] = (index[0] + index[1])/2;

755 
ödex
[2] = index[1];

756 
ödex
[3] = index[2];

757 
ödex
[4] = (index[2] + index[3])/2;

758 
ödex
[5] = index[3];

759 
ödex
[6] = index[4];

760 
ödex
[7] = index[4];

761 
ödex
[8] = index[5];

762 
ödex
[9] = index[5];

763 
ödex
[10] = index[6];

764 
ödex
[11] = index[7];

765 
ödex
[12] = index[8];

766 
ödex
[13] = index[8];

767 
ödex
[14] = index[9];

768 
ödex
[15] = index[9];

769 
ödex
[16] = index[10];

771 i‡(
bös
 == 34)

773 
ödex
[17] = index[11];

774 
ödex
[18] = index[12];

775 
ödex
[19] = index[13];

776 
ödex
[20] = index[14];

777 
ödex
[21] = index[14];

778 
ödex
[22] = index[15];

779 
ödex
[23] = index[15];

780 
ödex
[24] = index[16];

781 
ödex
[25] = index[16];

782 
ödex
[26] = index[17];

783 
ödex
[27] = index[17];

784 
ödex
[28] = index[18];

785 
ödex
[29] = index[18];

786 
ödex
[30] = index[18];

787 
ödex
[31] = index[18];

788 
ödex
[32] = index[19];

789 
ödex
[33] = index[19];

791 
	}
}

794 
	$ps_d©a_decode
(
ps_öfo
 *
ps
)

796 
uöt8_t
 
ív
, 
bö
;

799 i‡(
ps
->
ps_d©a_avaûabÀ
 == 0)

801 
ps
->
num_ív
 = 0;

804 
ív
 = 0;Énv < 
ps
->
num_ív
;Énv++)

806 
öt8_t
 *
iid_ödex_¥ev
;

807 
öt8_t
 *
icc_ödex_¥ev
;

808 
öt8_t
 *
ùd_ödex_¥ev
;

809 
öt8_t
 *
›d_ödex_¥ev
;

811 
öt8_t
 
num_iid_°ïs
 = (
ps
->
iid_mode
 < 3) ? 7 : 15 ;

813 i‡(
ív
 == 0)

816 
iid_ödex_¥ev
 = 
ps
->iid_index_prev;

817 
icc_ödex_¥ev
 = 
ps
->icc_index_prev;

818 
ùd_ödex_¥ev
 = 
ps
->ipd_index_prev;

819 
›d_ödex_¥ev
 = 
ps
->opd_index_prev;

822 
iid_ödex_¥ev
 = 
ps
->
iid_ödex
[
ív
 - 1];

823 
icc_ödex_¥ev
 = 
ps
->
icc_ödex
[
ív
 - 1];

824 
ùd_ödex_¥ev
 = 
ps
->
ùd_ödex
[
ív
 - 1];

825 
›d_ödex_¥ev
 = 
ps
->
›d_ödex
[
ív
 - 1];

830 
	`dñè_decode
(
ps
->
íabÀ_iid
,Ös->
iid_ödex
[
ív
], 
iid_ödex_¥ev
,

831 
ps
->
iid_dt
[
ív
],Ös->
ƒ_iid_∑r
,

832 (
ps
->
iid_mode
 == 0 ||Ös->iid_mode == 3) ? 2 : 1,

833 -
num_iid_°ïs
,Çum_iid_steps);

837 
	`dñè_decode
(
ps
->
íabÀ_icc
,Ös->
icc_ödex
[
ív
], 
icc_ödex_¥ev
,

838 
ps
->
icc_dt
[
ív
],Ös->
ƒ_icc_∑r
,

839 (
ps
->
icc_mode
 == 0 ||Ös->icc_mode == 3) ? 2 : 1,

843 
	`dñè_modulo_decode
(
ps
->
íabÀ_ùd›d
,Ös->
ùd_ödex
[
ív
], 
ùd_ödex_¥ev
,

844 
ps
->
ùd_dt
[
ív
],Ös->
ƒ_ùd›d_∑r
, 1, 3);

847 
	`dñè_modulo_decode
(
ps
->
íabÀ_ùd›d
,Ös->
›d_ödex
[
ív
], 
›d_ödex_¥ev
,

848 
ps
->
›d_dt
[
ív
],Ös->
ƒ_ùd›d_∑r
, 1, 3);

852 i‡(
ps
->
num_ív
 == 0)

855 
ps
->
num_ív
 = 1;

857 i‡(
ps
->
íabÀ_iid
)

859 
bö
 = 0; bin < 34; bin++)

860 
ps
->
iid_ödex
[0][
bö
] =Ös->
iid_ödex_¥ev
[bin];

862 
bö
 = 0; bin < 34; bin++)

863 
ps
->
iid_ödex
[0][
bö
] = 0;

866 i‡(
ps
->
íabÀ_icc
)

868 
bö
 = 0; bin < 34; bin++)

869 
ps
->
icc_ödex
[0][
bö
] =Ös->
icc_ödex_¥ev
[bin];

871 
bö
 = 0; bin < 34; bin++)

872 
ps
->
icc_ödex
[0][
bö
] = 0;

875 i‡(
ps
->
íabÀ_ùd›d
)

877 
bö
 = 0; bin < 17; bin++)

879 
ps
->
ùd_ödex
[0][
bö
] =Ös->
ùd_ödex_¥ev
[bin];

880 
ps
->
›d_ödex
[0][
bö
] =Ös->
›d_ödex_¥ev
[bin];

883 
bö
 = 0; bin < 17; bin++)

885 
ps
->
ùd_ödex
[0][
bö
] = 0;

886 
ps
->
›d_ödex
[0][
bö
] = 0;

892 
bö
 = 0; bin < 34; bin++)

893 
ps
->
iid_ödex_¥ev
[
bö
] =Ös->
iid_ödex
[ps->
num_ív
-1][bin];

894 
bö
 = 0; bin < 34; bin++)

895 
ps
->
icc_ödex_¥ev
[
bö
] =Ös->
icc_ödex
[ps->
num_ív
-1][bin];

896 
bö
 = 0; bin < 17; bin++)

898 
ps
->
ùd_ödex_¥ev
[
bö
] =Ös->
ùd_ödex
[ps->
num_ív
-1][bin];

899 
ps
->
›d_ödex_¥ev
[
bö
] =Ös->
›d_ödex
[ps->
num_ív
-1][bin];

902 
ps
->
ps_d©a_avaûabÀ
 = 0;

904 i‡(
ps
->
‰ame_˛ass
 == 0)

906 
ps
->
b‹dî_posôi⁄
[0] = 0;

907 
ív
 = 1;Énv < 
ps
->
num_ív
;Énv++)

909 
ps
->
b‹dî_posôi⁄
[
ív
] = (ív * 32 ) /Ös->
num_ív
;

911 
ps
->
b‹dî_posôi⁄
[ps->
num_ív
] = 32 ;

913 
ps
->
b‹dî_posôi⁄
[0] = 0;

915 i‡(
ps
->
b‹dî_posôi⁄
[ps->
num_ív
] < 32 )

917 
ps
->
num_ív
++;

918 
ps
->
b‹dî_posôi⁄
[ps->
num_ív
] = 32 ;

919 
bö
 = 0; bin < 34; bin++)

921 
ps
->
iid_ödex
[ps->
num_ív
][
bö
] =Ös->iid_index[ps->num_env-1][bin];

922 
ps
->
icc_ödex
[ps->
num_ív
][
bö
] =Ös->icc_index[ps->num_env-1][bin];

924 
bö
 = 0; bin < 17; bin++)

926 
ps
->
ùd_ödex
[ps->
num_ív
][
bö
] =Ös->ipd_index[ps->num_env-1][bin];

927 
ps
->
›d_ödex
[ps->
num_ív
][
bö
] =Ös->opd_index[ps->num_env-1][bin];

931 
ív
 = 1;Énv < 
ps
->
num_ív
;Énv++)

933 
öt8_t
 
thr
 = 32 - (
ps
->
num_ív
 - 
ív
);

935 i‡(
ps
->
b‹dî_posôi⁄
[
ív
] > 
thr
)

937 
ps
->
b‹dî_posôi⁄
[
ív
] = 
thr
;

939 
thr
 = 
ps
->
b‹dî_posôi⁄
[
ív
-1]+1;

940 i‡(
ps
->
b‹dî_posôi⁄
[
ív
] < 
thr
)

942 
ps
->
b‹dî_posôi⁄
[
ív
] = 
thr
;

951 #ifde‡
PS_LOW_POWER


952 
ív
 = 0;Énv < 
ps
->
num_ív
;Énv++)

954 i‡(
ps
->
iid_mode
 == 2 ||Ös->iid_mode == 5)

955 
	`m≠34ödexto20
(
ps
->
iid_ödex
[
ív
], 34);

956 i‡(
ps
->
icc_mode
 == 2 ||Ös->icc_mode == 5)

957 
	`m≠34ödexto20
(
ps
->
icc_ödex
[
ív
], 34);

960 
bö
 = 0; bin < 17; bin++)

962 
ps
->
ØIpdIndex
[
ív
][
bö
] = 0;

963 
ps
->
ØOpdIndex
[
ív
][
bö
] = 0;

967 i‡(
ps
->
u£34hybrid_b™ds
)

969 
ív
 = 0;Énv < 
ps
->
num_ív
;Énv++)

971 i‡(
ps
->
iid_mode
 != 2 &&Ös->iid_mode != 5)

972 
	`m≠20ödexto34
(
ps
->
iid_ödex
[
ív
], 34);

973 i‡(
ps
->
icc_mode
 != 2 &&Ös->icc_mode != 5)

974 
	`m≠20ödexto34
(
ps
->
icc_ödex
[
ív
], 34);

975 i‡(
ps
->
ùd_mode
 != 2 &&Ös->ipd_mode != 5)

977 
	`m≠20ödexto34
(
ps
->
ùd_ödex
[
ív
], 17);

978 
	`m≠20ödexto34
(
ps
->
›d_ödex
[
ív
], 17);

985 
ív
 = 0;Énv < 
ps
->
num_ív
;Énv++)

987 
	`¥ötf
("iid[ív:%d]:", 
ív
);

988 
bö
 = 0; bin < 34; bin++)

990 
	`¥ötf
(" %d", 
ps
->
iid_ödex
[
ív
][
bö
]);

992 
	`¥ötf
("\n");

994 
ív
 = 0;Énv < 
ps
->
num_ív
;Énv++)

996 
	`¥ötf
("icc[ív:%d]:", 
ív
);

997 
bö
 = 0; bin < 34; bin++)

999 
	`¥ötf
(" %d", 
ps
->
icc_ödex
[
ív
][
bö
]);

1001 
	`¥ötf
("\n");

1003 
ív
 = 0;Énv < 
ps
->
num_ív
;Énv++)

1005 
	`¥ötf
("ùd[ív:%d]:", 
ív
);

1006 
bö
 = 0; bin < 17; bin++)

1008 
	`¥ötf
(" %d", 
ps
->
ùd_ödex
[
ív
][
bö
]);

1010 
	`¥ötf
("\n");

1012 
ív
 = 0;Énv < 
ps
->
num_ív
;Énv++)

1014 
	`¥ötf
("›d[ív:%d]:", 
ív
);

1015 
bö
 = 0; bin < 17; bin++)

1017 
	`¥ötf
(" %d", 
ps
->
›d_ödex
[
ív
][
bö
]);

1019 
	`¥ötf
("\n");

1021 
	`¥ötf
("\n");

1023 
	}
}

1026 
ps_dec‹ªœã
(
ps_öfo
 *
ps
, 
qmf_t
 
X_À·
[38][64], qmf_à
X_right
[38][64],

1027 
qmf_t
 
X_hybrid_À·
[32][32], qmf_à
X_hybrid_right
[32][32])

1029 
uöt8_t
 
	ggr
, 
	gn
, 
	gm
, 
	gbk
;

1030 
uöt8_t
 
	gãmp_dñay
;

1031 
uöt8_t
 
	gsb
, 
	gmaxsb
;

1032 c⁄° 
com∂ex_t
 *
	gPhi_Fø˘_SubQmf
;

1033 
uöt8_t
 
	gãmp_dñay_£r
[
NO_ALLPASS_LINKS
];

1034 
ªÆ_t
 
	gP_SmoŸhPókDeˇyDiffNrg
, 
	gƒg
;

1035 
ªÆ_t
 
	gP
[32][34];

1036 
ªÆ_t
 
	gG_Tønsõ¡R©io
[32][34] = {{0}};

1037 
com∂ex_t
 
	göputLe·
;

1041 i‡(
	gps
->
	gu£34hybrid_b™ds
)

1043 
	gPhi_Fø˘_SubQmf
 = 
Phi_Fø˘_SubQmf34
;

1045 
	gPhi_Fø˘_SubQmf
 = 
Phi_Fø˘_SubQmf20
;

1049 
	gn
 = 0;Ç < 32;Ç++)

1051 
	gbk
 = 0; bk < 34; bk++)

1053 
	gP
[
n
][
bk
] = 0;

1058 
	ggr
 = 0; g∏< 
	gps
->
	gnum_groups
; gr++)

1061 
	gbk
 = (~
NEGATE_IPD_MASK
Ë& 
ps
->
m≠_group2bk
[
gr
];

1064 
	gmaxsb
 = (
gr
 < 
ps
->
num_hybrid_groups
Ë?Ös->
group_b‹dî
[gr]+1 :Ös->group_border[gr+1];

1066 
	gsb
 = 
ps
->
group_b‹dî
[
gr
]; sb < 
	gmaxsb
; sb++)

1068 
	gn
 = 
ps
->
b‹dî_posôi⁄
[0];Ç < 
	gps
->
	gb‹dî_posôi⁄
[ps->
num_ív
];Ç++)

1070 #ifde‡
FIXED_POINT


1071 
uöt32_t
 
	gö_ª
, 
	gö_im
;

1075 i‡(
	ggr
 < 
	gps
->
	gnum_hybrid_groups
)

1077 
RE
(
öputLe·
Ë
QMF_RE
(
X_hybrid_À·
[
n
][
sb
]);

1078 
IM
(
öputLe·
Ë
QMF_IM
(
X_hybrid_À·
[
n
][
sb
]);

1080 
RE
(
öputLe·
Ë
QMF_RE
(
X_À·
[
n
][
sb
]);

1081 
IM
(
öputLe·
Ë
QMF_IM
(
X_À·
[
n
][
sb
]);

1085 #ifde‡
FIXED_POINT


1089 
	gö_ª
 = ((
abs
(
RE
(
öputLe·
))+(1<<(
REAL_BITS
-1)))>>REAL_BITS);

1090 
	gö_im
 = ((
abs
(
IM
(
öputLe·
))+(1<<(
REAL_BITS
-1)))>>REAL_BITS);

1091 
	gP
[
n
][
bk
] +
ö_ª
*ö_ª + 
ö_im
*in_im;

1093 
	gP
[
n
][
bk
] +
MUL_R
(
RE
(
öputLe·
),RE(öputLe·)Ë+ MUL_R(
IM
(inputLeft),IM(inputLeft));

1100 
	gn
 = 0;Ç < 32;Ç++)

1102 
	gbk
 = 0; bk < 34; bk++)

1104 #ifde‡
FIXED_POINT


1105 
¥ötf
("%d %d: %d\n", 
n
, 
bk
, 
P
[n][bk] );

1107 
¥ötf
("%d %d: %f\n", 
n
, 
bk
, 
P
[n][bk]/1024.0);

1114 
	gbk
 = 0; bk < 
	gps
->
	gƒ_∑r_b™ds
; bk++)

1116 
	gn
 = 
ps
->
b‹dî_posôi⁄
[0];Ç < 
	gps
->
	gb‹dî_posôi⁄
[ps->
num_ív
];Ç++)

1118 c⁄° 
ªÆ_t
 
	ggamma
 = 
COEF_CONST
(1.5);

1120 
	gps
->
	gP_PókDeˇyNrg
[
bk
] = 
MUL_F
(
ps
->
P_PókDeˇyNrg
[bk],Ös->
Æpha_deˇy
);

1121 i‡(
	gps
->
	gP_PókDeˇyNrg
[
bk
] < 
	gP
[
n
][bk])

1122 
	gps
->
	gP_PókDeˇyNrg
[
bk
] = 
P
[
n
][bk];

1125 
	gP_SmoŸhPókDeˇyDiffNrg
 = 
ps
->
P_SmoŸhPókDeˇyDiffNrg_¥ev
[
bk
];

1126 
	gP_SmoŸhPókDeˇyDiffNrg
 +
MUL_F
((
ps
->
P_PókDeˇyNrg
[
bk
] - 
P
[
n
][bk] -Ös->
P_SmoŸhPókDeˇyDiffNrg_¥ev
[bk]),Ös->
Æpha_smoŸh
);

1127 
	gps
->
	gP_SmoŸhPókDeˇyDiffNrg_¥ev
[
bk
] = 
P_SmoŸhPókDeˇyDiffNrg
;

1130 
	gƒg
 = 
ps
->
P_¥ev
[
bk
];

1131 
	gƒg
 +
MUL_F
((
P
[
n
][
bk
] - 
ps
->
P_¥ev
[bk]),Ös->
Æpha_smoŸh
);

1132 
	gps
->
	gP_¥ev
[
bk
] = 
ƒg
;

1135 i‡(
MUL_C
(
P_SmoŸhPókDeˇyDiffNrg
, 
gamma
Ë<
ƒg
)

1137 
G_Tønsõ¡R©io
[
n
][
bk
] = 
REAL_CONST
(1.0);

1139 
	gG_Tønsõ¡R©io
[
n
][
bk
] = 
DIV_R
(
ƒg
, (
MUL_C
(
P_SmoŸhPókDeˇyDiffNrg
, 
gamma
)));

1145 
	gn
 = 0;Ç < 32;Ç++)

1147 
	gbk
 = 0; bk < 34; bk++)

1149 #ifde‡
FIXED_POINT


1150 
¥ötf
("%d %d: %f\n", 
n
, 
bk
, 
G_Tønsõ¡R©io
[n][bk]/()
REAL_PRECISION
);

1152 
¥ötf
("%d %d: %f\n", 
n
, 
bk
, 
G_Tønsõ¡R©io
[n][bk]);

1159 
	ggr
 = 0; g∏< 
	gps
->
	gnum_groups
; gr++)

1161 i‡(
	ggr
 < 
	gps
->
	gnum_hybrid_groups
)

1162 
	gmaxsb
 = 
ps
->
group_b‹dî
[
gr
] + 1;

1164 
	gmaxsb
 = 
ps
->
group_b‹dî
[
gr
 + 1];

1167 
	gsb
 = 
ps
->
group_b‹dî
[
gr
]; sb < 
	gmaxsb
; sb++)

1169 
ªÆ_t
 
	gg_DeˇySl›e
;

1170 
ªÆ_t
 
	gg_DeˇySl›e_fût
[
NO_ALLPASS_LINKS
];

1173 i‡(
	ggr
 < 
	gps
->
	gnum_hybrid_groups
 || 
	gsb
 <
ps
->
deˇy_cutoff
)

1175 
g_DeˇySl›e
 = 
FRAC_CONST
(1.0);

1177 
öt8_t
 
	gdeˇy
 = 
ps
->
deˇy_cutoff
 - 
sb
;

1178 i‡(
	gdeˇy
 <= -20 )

1180 
g_DeˇySl›e
 = 0;

1183 
	gg_DeˇySl›e
 = 
FRAC_CONST
(1.0Ë+ 
DECAY_SLOPE
 * 
deˇy
;

1188 
	gm
 = 0; m < 
	gNO_ALLPASS_LINKS
; m++)

1190 
	gg_DeˇySl›e_fût
[
m
] = 
MUL_F
(
g_DeˇySl›e
, 
fûãr_a
[m]);

1195 
	gãmp_dñay
 = 
ps
->
ßved_dñay
;

1196 
	gn
 = 0;Ç < 
	gNO_ALLPASS_LINKS
;Ç++)

1197 
	gãmp_dñay_£r
[
n
] = 
ps
->
dñay_buf_ödex_£r
[n];

1199 
	gn
 = 
ps
->
b‹dî_posôi⁄
[0];Ç < 
	gps
->
	gb‹dî_posôi⁄
[ps->
num_ív
];Ç++)

1201 
com∂ex_t
 
	gtmp
, 
	gtmp0
, 
	gR0
;

1203 i‡(
	ggr
 < 
	gps
->
	gnum_hybrid_groups
)

1206 
RE
(
öputLe·
Ë
QMF_RE
(
X_hybrid_À·
[
n
][
sb
]);

1207 
IM
(
öputLe·
Ë
QMF_IM
(
X_hybrid_À·
[
n
][
sb
]);

1210 
RE
(
öputLe·
Ë
QMF_RE
(
X_À·
[
n
][
sb
]);

1211 
IM
(
öputLe·
Ë
QMF_IM
(
X_À·
[
n
][
sb
]);

1214 i‡(
	gsb
 > 
	gps
->
	gƒ_ÆÕass_b™ds
 && 
	ggr
 >
ps
->
num_hybrid_groups
)

1219 
RE
(
tmp
ËRE(
ps
->
dñay_Qmf
[ps->
dñay_buf_ödex_dñay
[
sb
]][sb]);

1220 
IM
(
tmp
ËIM(
ps
->
dñay_Qmf
[ps->
dñay_buf_ödex_dñay
[
sb
]][sb]);

1221 
RE
(
R0
ËRE(
tmp
);

1222 
IM
(
R0
ËIM(
tmp
);

1223 
RE
(
ps
->
dñay_Qmf
[ps->
dñay_buf_ödex_dñay
[
sb
]][sb]ËRE(
öputLe·
);

1224 
IM
(
ps
->
dñay_Qmf
[ps->
dñay_buf_ödex_dñay
[
sb
]][sb]ËIM(
öputLe·
);

1227 
uöt8_t
 
	gm
;

1228 
com∂ex_t
 
	gPhi_Fø˘
;

1231 i‡(
	ggr
 < 
	gps
->
	gnum_hybrid_groups
)

1234 
RE
(
tmp0
ËRE(
ps
->
dñay_SubQmf
[
ãmp_dñay
][
sb
]);

1235 
IM
(
tmp0
ËIM(
ps
->
dñay_SubQmf
[
ãmp_dñay
][
sb
]);

1237 
RE
(
ps
->
dñay_SubQmf
[
ãmp_dñay
][
sb
]ËRE(
öputLe·
);

1238 
IM
(
ps
->
dñay_SubQmf
[
ãmp_dñay
][
sb
]ËIM(
öputLe·
);

1240 
RE
(
Phi_Fø˘
ËRE(
Phi_Fø˘_SubQmf
[
sb
]);

1241 
IM
(
Phi_Fø˘
ËIM(
Phi_Fø˘_SubQmf
[
sb
]);

1244 
RE
(
tmp0
ËRE(
ps
->
dñay_Qmf
[
ãmp_dñay
][
sb
]);

1245 
IM
(
tmp0
ËIM(
ps
->
dñay_Qmf
[
ãmp_dñay
][
sb
]);

1247 
RE
(
ps
->
dñay_Qmf
[
ãmp_dñay
][
sb
]ËRE(
öputLe·
);

1248 
IM
(
ps
->
dñay_Qmf
[
ãmp_dñay
][
sb
]ËIM(
öputLe·
);

1250 
RE
(
Phi_Fø˘
ËRE(
Phi_Fø˘_Qmf
[
sb
]);

1251 
IM
(
Phi_Fø˘
ËIM(
Phi_Fø˘_Qmf
[
sb
]);

1255 
Com∂exMu…
(&
RE
(
tmp
), &
IM
—mp), RE(
tmp0
), IM—mp0), RE(
Phi_Fø˘
), IM(Phi_Fract));

1257 
RE
(
R0
ËRE(
tmp
);

1258 
IM
(
R0
ËIM(
tmp
);

1259 
	gm
 = 0; m < 
	gNO_ALLPASS_LINKS
; m++)

1261 
com∂ex_t
 
	gQ_Fø˘_ÆÕass
, 
	gtmp2
;

1264 i‡(
	ggr
 < 
	gps
->
	gnum_hybrid_groups
)

1267 
RE
(
tmp0
ËRE(
ps
->
dñay_SubQmf_£r
[
m
][
ãmp_dñay_£r
[m]][
sb
]);

1268 
IM
(
tmp0
ËIM(
ps
->
dñay_SubQmf_£r
[
m
][
ãmp_dñay_£r
[m]][
sb
]);

1270 i‡(
	gps
->
	gu£34hybrid_b™ds
)

1272 
RE
(
Q_Fø˘_ÆÕass
ËRE(
Q_Fø˘_ÆÕass_SubQmf34
[
sb
][
m
]);

1273 
IM
(
Q_Fø˘_ÆÕass
ËIM(
Q_Fø˘_ÆÕass_SubQmf34
[
sb
][
m
]);

1275 
RE
(
Q_Fø˘_ÆÕass
ËRE(
Q_Fø˘_ÆÕass_SubQmf20
[
sb
][
m
]);

1276 
IM
(
Q_Fø˘_ÆÕass
ËIM(
Q_Fø˘_ÆÕass_SubQmf20
[
sb
][
m
]);

1280 
RE
(
tmp0
ËRE(
ps
->
dñay_Qmf_£r
[
m
][
ãmp_dñay_£r
[m]][
sb
]);

1281 
IM
(
tmp0
ËIM(
ps
->
dñay_Qmf_£r
[
m
][
ãmp_dñay_£r
[m]][
sb
]);

1283 
RE
(
Q_Fø˘_ÆÕass
ËRE(
Q_Fø˘_ÆÕass_Qmf
[
sb
][
m
]);

1284 
IM
(
Q_Fø˘_ÆÕass
ËIM(
Q_Fø˘_ÆÕass_Qmf
[
sb
][
m
]);

1289 
Com∂exMu…
(&
RE
(
tmp
), &
IM
—mp), RE(
tmp0
), IM—mp0), RE(
Q_Fø˘_ÆÕass
), IM(Q_Fract_allpass));

1292 
RE
(
tmp
Ë+-
MUL_F
(
g_DeˇySl›e_fût
[
m
], RE(
R0
));

1293 
IM
(
tmp
Ë+-
MUL_F
(
g_DeˇySl›e_fût
[
m
], IM(
R0
));

1296 
RE
(
tmp2
ËRE(
R0
Ë+ 
MUL_F
(
g_DeˇySl›e_fût
[
m
], RE(
tmp
));

1297 
IM
(
tmp2
ËIM(
R0
Ë+ 
MUL_F
(
g_DeˇySl›e_fût
[
m
], IM(
tmp
));

1300 i‡(
	ggr
 < 
	gps
->
	gnum_hybrid_groups
)

1302 
RE
(
ps
->
dñay_SubQmf_£r
[
m
][
ãmp_dñay_£r
[m]][
sb
]ËRE(
tmp2
);

1303 
IM
(
ps
->
dñay_SubQmf_£r
[
m
][
ãmp_dñay_£r
[m]][
sb
]ËIM(
tmp2
);

1305 
RE
(
ps
->
dñay_Qmf_£r
[
m
][
ãmp_dñay_£r
[m]][
sb
]ËRE(
tmp2
);

1306 
IM
(
ps
->
dñay_Qmf_£r
[
m
][
ãmp_dñay_£r
[m]][
sb
]ËIM(
tmp2
);

1310 
RE
(
R0
ËRE(
tmp
);

1311 
IM
(
R0
ËIM(
tmp
);

1316 
	gbk
 = (~
NEGATE_IPD_MASK
Ë& 
ps
->
m≠_group2bk
[
gr
];

1319 
RE
(
R0
Ë
MUL_R
(
G_Tønsõ¡R©io
[
n
][
bk
], RE(R0));

1320 
IM
(
R0
Ë
MUL_R
(
G_Tønsõ¡R©io
[
n
][
bk
], IM(R0));

1322 i‡(
	ggr
 < 
	gps
->
	gnum_hybrid_groups
)

1325 
QMF_RE
(
X_hybrid_right
[
n
][
sb
]Ë
RE
(
R0
);

1326 
QMF_IM
(
X_hybrid_right
[
n
][
sb
]Ë
IM
(
R0
);

1329 
QMF_RE
(
X_right
[
n
][
sb
]Ë
RE
(
R0
);

1330 
QMF_IM
(
X_right
[
n
][
sb
]Ë
IM
(
R0
);

1334 i‡(++
	gãmp_dñay
 >= 2)

1336 
ãmp_dñay
 = 0;

1340 i‡(
	gsb
 > 
	gps
->
	gƒ_ÆÕass_b™ds
 && 
	ggr
 >
ps
->
num_hybrid_groups
)

1343 i‡(++
ps
->
dñay_buf_ödex_dñay
[
sb
] >ps->
dñay_D
[sb])

1345 
ps
->
dñay_buf_ödex_dñay
[
sb
] = 0;

1349 
	gm
 = 0; m < 
	gNO_ALLPASS_LINKS
; m++)

1351 i‡(++
	gãmp_dñay_£r
[
m
] >
ps
->
num_ßm∂e_dñay_£r
[m])

1353 
ãmp_dñay_£r
[
m
] = 0;

1361 
	gps
->
	gßved_dñay
 = 
ãmp_dñay
;

1362 
	gm
 = 0; m < 
	gNO_ALLPASS_LINKS
; m++)

1363 
	gps
->
	gdñay_buf_ödex_£r
[
m
] = 
ãmp_dñay_£r
[m];

1366 #ifde‡
FIXED_POINT


1367 
	#°ï
(
shi·
) \

1368 i‡((0x40000000»>> 
shi·
Ë+ 
roŸ
 <
vÆue
) \

1370 
vÆue
 -(0x40000000»>> 
shi·
Ë+ 
roŸ
; \

1371 
roŸ
 = (roŸ >> 1Ë| (0x40000000»>> 
shi·
); \

1373 
roŸ
 =Ñoot >> 1; \

1374 }

	)

1377 
ªÆ_t
 
	$ps_sqπ
(
ªÆ_t
 
vÆue
)

1379 
ªÆ_t
 
roŸ
 = 0;

1381 
	`°ï
( 0); step( 2); step( 4); step( 6);

1382 
	`°ï
( 8); step(10); step(12); step(14);

1383 
	`°ï
(16); step(18); step(20); step(22);

1384 
	`°ï
(24); step(26); step(28); step(30);

1386 i‡(
roŸ
 < 
vÆue
)

1387 ++
roŸ
;

1389 
roŸ
 <<(
REAL_BITS
/2);

1391  
roŸ
;

1392 
	}
}

1394 
	#ps_sqπ
(
A
Ë
	`sqπ
(A)

	)

1397 c⁄° 
ªÆ_t
 
	gùd›d_cos_èb
[] = {

1398 
FRAC_CONST
(1.000000000000000),

1399 
FRAC_CONST
(0.707106781186548),

1400 
FRAC_CONST
(0.000000000000000),

1401 
FRAC_CONST
(-0.707106781186547),

1402 
FRAC_CONST
(-1.000000000000000),

1403 
FRAC_CONST
(-0.707106781186548),

1404 
FRAC_CONST
(-0.000000000000000),

1405 
FRAC_CONST
(0.707106781186547),

1406 
FRAC_CONST
(1.000000000000000)

1409 c⁄° 
ªÆ_t
 
	gùd›d_sö_èb
[] = {

1410 
FRAC_CONST
(0.000000000000000),

1411 
FRAC_CONST
(0.707106781186547),

1412 
FRAC_CONST
(1.000000000000000),

1413 
FRAC_CONST
(0.707106781186548),

1414 
FRAC_CONST
(0.000000000000000),

1415 
FRAC_CONST
(-0.707106781186547),

1416 
FRAC_CONST
(-1.000000000000000),

1417 
FRAC_CONST
(-0.707106781186548),

1418 
FRAC_CONST
(-0.000000000000000)

1421 
ps_mix_pha£
(
ps_öfo
 *
ps
, 
qmf_t
 
X_À·
[38][64], qmf_à
X_right
[38][64],

1422 
qmf_t
 
X_hybrid_À·
[32][32], qmf_à
X_hybrid_right
[32][32])

1424 
uöt8_t
 
	gn
;

1425 
uöt8_t
 
	ggr
;

1426 
uöt8_t
 
	gbk
 = 0;

1427 
uöt8_t
 
	gsb
, 
	gmaxsb
;

1428 
uöt8_t
 
	gív
;

1429 
uöt8_t
 
	gƒ_ùd›d_∑r
;

1430 
com∂ex_t
 
	gh11
, 
	gh12
, 
	gh21
, 
	gh22
;

1431 
com∂ex_t
 
	gH11
, 
	gH12
, 
	gH21
, 
	gH22
;

1432 
com∂ex_t
 
	gdñèH11
, 
	gdñèH12
, 
	gdñèH21
, 
	gdñèH22
;

1433 
com∂ex_t
 
	gãmpLe·
;

1434 
com∂ex_t
 
	gãmpRight
;

1435 
com∂ex_t
 
	gpha£Le·
;

1436 
com∂ex_t
 
	gpha£Right
;

1437 
ªÆ_t
 
	gL
;

1438 c⁄° 
ªÆ_t
 *
	gsf_iid
;

1439 
uöt8_t
 
	gno_iid_°ïs
;

1441 i‡(
	gps
->
	giid_mode
 >= 3)

1443 
no_iid_°ïs
 = 15;

1444 
	gsf_iid
 = 
sf_iid_föe
;

1446 
	gno_iid_°ïs
 = 7;

1447 
	gsf_iid
 = 
sf_iid_n‹mÆ
;

1450 i‡(
	gps
->
	gùd_mode
 =0 || 
ps
->
ùd_mode
 == 3)

1452 
ƒ_ùd›d_∑r
 = 11;

1454 
	gƒ_ùd›d_∑r
 = 
ps
->
ƒ_ùd›d_∑r
;

1457 
	ggr
 = 0; g∏< 
	gps
->
	gnum_groups
; gr++)

1459 
	gbk
 = (~
NEGATE_IPD_MASK
Ë& 
ps
->
m≠_group2bk
[
gr
];

1462 
	gmaxsb
 = (
gr
 < 
ps
->
num_hybrid_groups
Ë?Ös->
group_b‹dî
[gr] + 1 :Ös->group_border[gr + 1];

1464 
	gív
 = 0;Énv < 
	gps
->
	gnum_ív
;Énv++)

1466 i‡(
	gps
->
	gicc_mode
 < 3)

1469 
ªÆ_t
 
	gc_1
, 
	gc_2
;

1470 
ªÆ_t
 
	gcoß
, 
	gsöa
;

1471 
ªÆ_t
 
	gcosb
, 
	gsöb
;

1472 
ªÆ_t
 
	gab1
, 
	gab2
;

1473 
ªÆ_t
 
	gab3
, 
	gab4
;

1485 
	gc_1
 = 
sf_iid
[
no_iid_°ïs
 + 
ps
->
iid_ödex
[
ív
][
bk
]];

1486 
	gc_2
 = 
sf_iid
[
no_iid_°ïs
 - 
ps
->
iid_ödex
[
ív
][
bk
]];

1489 
	gcoß
 = 
cos_Æphas
[
ps
->
icc_ödex
[
ív
][
bk
]];

1490 
	gsöa
 = 
sö_Æphas
[
ps
->
icc_ödex
[
ív
][
bk
]];

1492 i‡(
	gps
->
	giid_mode
 >= 3)

1494 i‡(
ps
->
iid_ödex
[
ív
][
bk
] < 0)

1496 
cosb
 = 
cos_bëas_föe
[-
ps
->
iid_ödex
[
ív
][
bk
]][ps->
icc_ödex
[env][bk]];

1497 
	gsöb
 = -
sö_bëas_föe
[-
ps
->
iid_ödex
[
ív
][
bk
]][ps->
icc_ödex
[env][bk]];

1499 
	gcosb
 = 
cos_bëas_föe
[
ps
->
iid_ödex
[
ív
][
bk
]][ps->
icc_ödex
[env][bk]];

1500 
	gsöb
 = 
sö_bëas_föe
[
ps
->
iid_ödex
[
ív
][
bk
]][ps->
icc_ödex
[env][bk]];

1503 i‡(
	gps
->
	giid_ödex
[
ív
][
bk
] < 0)

1505 
	gcosb
 = 
cos_bëas_n‹mÆ
[-
ps
->
iid_ödex
[
ív
][
bk
]][ps->
icc_ödex
[env][bk]];

1506 
	gsöb
 = -
sö_bëas_n‹mÆ
[-
ps
->
iid_ödex
[
ív
][
bk
]][ps->
icc_ödex
[env][bk]];

1508 
	gcosb
 = 
cos_bëas_n‹mÆ
[
ps
->
iid_ödex
[
ív
][
bk
]][ps->
icc_ödex
[env][bk]];

1509 
	gsöb
 = 
sö_bëas_n‹mÆ
[
ps
->
iid_ödex
[
ív
][
bk
]][ps->
icc_ödex
[env][bk]];

1513 
	gab1
 = 
MUL_C
(
cosb
, 
coß
);

1514 
	gab2
 = 
MUL_C
(
söb
, 
söa
);

1515 
	gab3
 = 
MUL_C
(
söb
, 
coß
);

1516 
	gab4
 = 
MUL_C
(
cosb
, 
söa
);

1519 
RE
(
h11
Ë
MUL_C
(
c_2
, (
ab1
 - 
ab2
));

1520 
RE
(
h12
Ë
MUL_C
(
c_1
, (
ab1
 + 
ab2
));

1521 
RE
(
h21
Ë
MUL_C
(
c_2
, (
ab3
 + 
ab4
));

1522 
RE
(
h22
Ë
MUL_C
(
c_1
, (
ab3
 - 
ab4
));

1525 
ªÆ_t
 
	gsöa
, 
	gcoß
;

1526 
ªÆ_t
 
	gcosg
, 
	gsög
;

1561 i‡(
	gps
->
	giid_mode
 >= 3)

1563 
uöt8_t
 
abs_iid
 = 
abs
(
ps
->
iid_ödex
[
ív
][
bk
]);

1565 
	gcoß
 = 
söcos_Æphas_B_föe
[
no_iid_°ïs
 + 
ps
->
iid_ödex
[
ív
][
bk
]][ps->
icc_ödex
[env][bk]];

1566 
	gsöa
 = 
söcos_Æphas_B_föe
[30 - (
no_iid_°ïs
 + 
ps
->
iid_ödex
[
ív
][
bk
])][ps->
icc_ödex
[env][bk]];

1567 
	gcosg
 = 
cos_gammas_föe
[
abs_iid
][
ps
->
icc_ödex
[
ív
][
bk
]];

1568 
	gsög
 = 
sö_gammas_föe
[
abs_iid
][
ps
->
icc_ödex
[
ív
][
bk
]];

1570 
uöt8_t
 
	gabs_iid
 = 
abs
(
ps
->
iid_ödex
[
ív
][
bk
]);

1572 
	gcoß
 = 
söcos_Æphas_B_n‹mÆ
[
no_iid_°ïs
 + 
ps
->
iid_ödex
[
ív
][
bk
]][ps->
icc_ödex
[env][bk]];

1573 
	gsöa
 = 
söcos_Æphas_B_n‹mÆ
[14 - (
no_iid_°ïs
 + 
ps
->
iid_ödex
[
ív
][
bk
])][ps->
icc_ödex
[env][bk]];

1574 
	gcosg
 = 
cos_gammas_n‹mÆ
[
abs_iid
][
ps
->
icc_ödex
[
ív
][
bk
]];

1575 
	gsög
 = 
sö_gammas_n‹mÆ
[
abs_iid
][
ps
->
icc_ödex
[
ív
][
bk
]];

1578 
RE
(
h11
Ë
MUL_C
(
COEF_SQRT2
, MUL_C(
coß
, 
cosg
));

1579 
RE
(
h12
Ë
MUL_C
(
COEF_SQRT2
, MUL_C(
söa
, 
cosg
));

1580 
RE
(
h21
Ë
MUL_C
(
COEF_SQRT2
, MUL_C(-
coß
, 
sög
));

1581 
RE
(
h22
Ë
MUL_C
(
COEF_SQRT2
, MUL_C(
söa
, 
sög
));

1588 i‡((
	gps
->
	gíabÀ_ùd›d
Ë&& (
	gbk
 < 
	gƒ_ùd›d_∑r
))

1590 
öt8_t
 
	gi
;

1591 
ªÆ_t
 
	gxxyy
, 
	gµqq
;

1592 
ªÆ_t
 
	gyq
, 
	gxp
, 
	gxq
, 
	gpy
, 
	gtmp
;

1595 
	gi
 = 
ps
->
pha£_hi°
;

1598 #ifde‡
FIXED_POINT


1600 
RE
(
ãmpLe·
ËRE(
ps
->
ùd_¥ev
[
bk
][
i
]) >> 2;

1601 
IM
(
ãmpLe·
ËIM(
ps
->
ùd_¥ev
[
bk
][
i
]) >> 2;

1602 
RE
(
ãmpRight
ËRE(
ps
->
›d_¥ev
[
bk
][
i
]) >> 2;

1603 
IM
(
ãmpRight
ËIM(
ps
->
›d_¥ev
[
bk
][
i
]) >> 2;

1605 
RE
(
ãmpLe·
Ë
MUL_F
(RE(
ps
->
ùd_¥ev
[
bk
][
i
]), 
FRAC_CONST
(0.25));

1606 
IM
(
ãmpLe·
Ë
MUL_F
(IM(
ps
->
ùd_¥ev
[
bk
][
i
]), 
FRAC_CONST
(0.25));

1607 
RE
(
ãmpRight
Ë
MUL_F
(RE(
ps
->
›d_¥ev
[
bk
][
i
]), 
FRAC_CONST
(0.25));

1608 
IM
(
ãmpRight
Ë
MUL_F
(IM(
ps
->
›d_¥ev
[
bk
][
i
]), 
FRAC_CONST
(0.25));

1612 
RE
(
ps
->
ùd_¥ev
[
bk
][
i
]Ë
ùd›d_cos_èb
[
abs
’s->
ùd_ödex
[
ív
][bk])];

1613 
IM
(
ps
->
ùd_¥ev
[
bk
][
i
]Ë
ùd›d_sö_èb
[
abs
’s->
ùd_ödex
[
ív
][bk])];

1614 
RE
(
ps
->
›d_¥ev
[
bk
][
i
]Ë
ùd›d_cos_èb
[
abs
’s->
›d_ödex
[
ív
][bk])];

1615 
IM
(
ps
->
›d_¥ev
[
bk
][
i
]Ë
ùd›d_sö_èb
[
abs
’s->
›d_ödex
[
ív
][bk])];

1618 
RE
(
ãmpLe·
Ë+RE(
ps
->
ùd_¥ev
[
bk
][
i
]);

1619 
IM
(
ãmpLe·
Ë+IM(
ps
->
ùd_¥ev
[
bk
][
i
]);

1620 
RE
(
ãmpRight
Ë+RE(
ps
->
›d_¥ev
[
bk
][
i
]);

1621 
IM
(
ãmpRight
Ë+IM(
ps
->
›d_¥ev
[
bk
][
i
]);

1624 i‡(
	gi
 == 0)

1626 
i
 = 2;

1628 
	gi
--;

1631 #ifde‡
FIXED_POINT


1633 
RE
(
ãmpLe·
Ë+(RE(
ps
->
ùd_¥ev
[
bk
][
i
]) >> 1);

1634 
IM
(
ãmpLe·
Ë+(IM(
ps
->
ùd_¥ev
[
bk
][
i
]) >> 1);

1635 
RE
(
ãmpRight
Ë+(RE(
ps
->
›d_¥ev
[
bk
][
i
]) >> 1);

1636 
IM
(
ãmpRight
Ë+(IM(
ps
->
›d_¥ev
[
bk
][
i
]) >> 1);

1638 
RE
(
ãmpLe·
Ë+
MUL_F
(RE(
ps
->
ùd_¥ev
[
bk
][
i
]), 
FRAC_CONST
(0.5));

1639 
IM
(
ãmpLe·
Ë+
MUL_F
(IM(
ps
->
ùd_¥ev
[
bk
][
i
]), 
FRAC_CONST
(0.5));

1640 
RE
(
ãmpRight
Ë+
MUL_F
(RE(
ps
->
›d_¥ev
[
bk
][
i
]), 
FRAC_CONST
(0.5));

1641 
IM
(
ãmpRight
Ë+
MUL_F
(IM(
ps
->
›d_¥ev
[
bk
][
i
]), 
FRAC_CONST
(0.5));

1645 
	gùd
 = ()
©™2
(
IM
(
ãmpLe·
), 
RE
(tempLeft));

1646 
	g›d
 = ()
©™2
(
IM
(
ãmpRight
), 
RE
(tempRight));

1649 
RE
(
pha£Le·
Ë()
cos
(
›d
);

1650 
IM
(
pha£Le·
Ë()
sö
(
›d
);

1651 
	g›d
 -
ùd
;

1652 
RE
(
pha£Right
Ë()
cos
(
›d
);

1653 
IM
(
pha£Right
Ë()
sö
(
›d
);

1665 
	gxxyy
 = 
DIV_R
(
MUL_C
(
IM
(
ãmpLe·
),IM—empLe·)), MUL_C(
RE
(tempLeft),RE(tempLeft)));

1666 
	gµqq
 = 
DIV_R
(
MUL_C
(
IM
(
ãmpRight
),IM—empRight)), MUL_C(
RE
(tempRight),RE(tempRight)));

1669 
	gxxyy
 +
REAL_CONST
(1);

1670 
	gµqq
 +
REAL_CONST
(1);

1673 
	gxxyy
 = 
DIV_R
(
FRAC_CONST
(1), 
ps_sqπ
(
xxyy
));

1674 
	gµqq
 = 
DIV_R
(
FRAC_CONST
(1), 
ps_sqπ
(
µqq
));

1677 
	gyq
 = 
MUL_C
(
RE
(
ãmpLe·
), RE(
ãmpRight
));

1678 
	gxp
 = 
MUL_C
(
IM
(
ãmpLe·
), IM(
ãmpRight
));

1679 
	gxq
 = 
MUL_C
(
IM
(
ãmpLe·
), 
RE
(
ãmpRight
));

1680 
	gpy
 = 
MUL_C
(
RE
(
ãmpLe·
), 
IM
(
ãmpRight
));

1682 
RE
(
pha£Le·
Ë
xxyy
;

1683 
IM
(
pha£Le·
Ë
MUL_R
(
xxyy
, (
DIV_R
(IM(
ãmpLe·
), 
RE
(tempLeft))));

1685 
	gtmp
 = 
DIV_C
(
MUL_F
(
xxyy
, 
µqq
), 
yq
);

1688 
RE
(
pha£Right
Ë
MUL_C
(
tmp
, (
yq
+
xp
));

1689 
IM
(
pha£Right
Ë
MUL_C
(
tmp
, (
xq
-
py
));

1693 
IM
(
h11
Ë
MUL_F
(
RE
(h11), IM(
pha£Le·
));

1694 
IM
(
h12
Ë
MUL_F
(
RE
(h12), IM(
pha£Right
));

1695 
IM
(
h21
Ë
MUL_F
(
RE
(h21), IM(
pha£Le·
));

1696 
IM
(
h22
Ë
MUL_F
(
RE
(h22), IM(
pha£Right
));

1698 
RE
(
h11
Ë
MUL_F
(RE(h11), RE(
pha£Le·
));

1699 
RE
(
h12
Ë
MUL_F
(RE(h12), RE(
pha£Right
));

1700 
RE
(
h21
Ë
MUL_F
(RE(h21), RE(
pha£Le·
));

1701 
RE
(
h22
Ë
MUL_F
(RE(h22), RE(
pha£Right
));

1706 
	gL
 = (
ªÆ_t
)(
ps
->
b‹dî_posôi⁄
[
ív
 + 1] -Ös->border_position[env]);

1709 
RE
(
dñèH11
Ë(RE(
h11
Ë- RE(
ps
->
h11_¥ev
[
gr
])Ë/ 
L
;

1710 
RE
(
dñèH12
Ë(RE(
h12
Ë- RE(
ps
->
h12_¥ev
[
gr
])Ë/ 
L
;

1711 
RE
(
dñèH21
Ë(RE(
h21
Ë- RE(
ps
->
h21_¥ev
[
gr
])Ë/ 
L
;

1712 
RE
(
dñèH22
Ë(RE(
h22
Ë- RE(
ps
->
h22_¥ev
[
gr
])Ë/ 
L
;

1714 
RE
(
H11
ËRE(
ps
->
h11_¥ev
[
gr
]);

1715 
RE
(
H12
ËRE(
ps
->
h12_¥ev
[
gr
]);

1716 
RE
(
H21
ËRE(
ps
->
h21_¥ev
[
gr
]);

1717 
RE
(
H22
ËRE(
ps
->
h22_¥ev
[
gr
]);

1719 
RE
(
ps
->
h11_¥ev
[
gr
]ËRE(
h11
);

1720 
RE
(
ps
->
h12_¥ev
[
gr
]ËRE(
h12
);

1721 
RE
(
ps
->
h21_¥ev
[
gr
]ËRE(
h21
);

1722 
RE
(
ps
->
h22_¥ev
[
gr
]ËRE(
h22
);

1725 i‡((
	gps
->
	gíabÀ_ùd›d
Ë&& (
	gbk
 < 
	gƒ_ùd›d_∑r
))

1728 
IM
(
dñèH11
Ë(IM(
h11
Ë- IM(
ps
->
h11_¥ev
[
gr
])Ë/ 
L
;

1729 
IM
(
dñèH12
Ë(IM(
h12
Ë- IM(
ps
->
h12_¥ev
[
gr
])Ë/ 
L
;

1730 
IM
(
dñèH21
Ë(IM(
h21
Ë- IM(
ps
->
h21_¥ev
[
gr
])Ë/ 
L
;

1731 
IM
(
dñèH22
Ë(IM(
h22
Ë- IM(
ps
->
h22_¥ev
[
gr
])Ë/ 
L
;

1733 
IM
(
H11
ËIM(
ps
->
h11_¥ev
[
gr
]);

1734 
IM
(
H12
ËIM(
ps
->
h12_¥ev
[
gr
]);

1735 
IM
(
H21
ËIM(
ps
->
h21_¥ev
[
gr
]);

1736 
IM
(
H22
ËIM(
ps
->
h22_¥ev
[
gr
]);

1738 i‡((
	gNEGATE_IPD_MASK
 & 
	gps
->
	gm≠_group2bk
[
gr
]) != 0)

1740 
IM
(
dñèH11
) = -IM(deltaH11);

1741 
IM
(
dñèH12
) = -IM(deltaH12);

1742 
IM
(
dñèH21
) = -IM(deltaH21);

1743 
IM
(
dñèH22
) = -IM(deltaH22);

1745 
IM
(
H11
) = -IM(H11);

1746 
IM
(
H12
) = -IM(H12);

1747 
IM
(
H21
) = -IM(H21);

1748 
IM
(
H22
) = -IM(H22);

1751 
IM
(
ps
->
h11_¥ev
[
gr
]ËIM(
h11
);

1752 
IM
(
ps
->
h12_¥ev
[
gr
]ËIM(
h12
);

1753 
IM
(
ps
->
h21_¥ev
[
gr
]ËIM(
h21
);

1754 
IM
(
ps
->
h22_¥ev
[
gr
]ËIM(
h22
);

1758 
	gn
 = 
ps
->
b‹dî_posôi⁄
[
ív
];Ç < 
	gps
->
	gb‹dî_posôi⁄
[env + 1];Ç++)

1761 
RE
(
H11
Ë+RE(
dñèH11
);

1762 
RE
(
H12
Ë+RE(
dñèH12
);

1763 
RE
(
H21
Ë+RE(
dñèH21
);

1764 
RE
(
H22
Ë+RE(
dñèH22
);

1765 i‡((
	gps
->
	gíabÀ_ùd›d
Ë&& (
	gbk
 < 
	gƒ_ùd›d_∑r
))

1767 
IM
(
H11
Ë+IM(
dñèH11
);

1768 
IM
(
H12
Ë+IM(
dñèH12
);

1769 
IM
(
H21
Ë+IM(
dñèH21
);

1770 
IM
(
H22
Ë+IM(
dñèH22
);

1774 
	gsb
 = 
ps
->
group_b‹dî
[
gr
]; sb < 
	gmaxsb
; sb++)

1776 
com∂ex_t
 
	göLe·
, 
	göRight
;

1779 i‡(
	ggr
 < 
	gps
->
	gnum_hybrid_groups
)

1781 
RE
(
öLe·
ËRE(
X_hybrid_À·
[
n
][
sb
]);

1782 
IM
(
öLe·
ËIM(
X_hybrid_À·
[
n
][
sb
]);

1783 
RE
(
öRight
ËRE(
X_hybrid_right
[
n
][
sb
]);

1784 
IM
(
öRight
ËIM(
X_hybrid_right
[
n
][
sb
]);

1786 
RE
(
öLe·
ËRE(
X_À·
[
n
][
sb
]);

1787 
IM
(
öLe·
ËIM(
X_À·
[
n
][
sb
]);

1788 
RE
(
öRight
ËRE(
X_right
[
n
][
sb
]);

1789 
IM
(
öRight
ËIM(
X_right
[
n
][
sb
]);

1793 
RE
(
ãmpLe·
Ë
MUL_C
(RE(
H11
), RE(
öLe·
)Ë+ MUL_C(RE(
H21
), RE(
öRight
));

1794 
IM
(
ãmpLe·
Ë
MUL_C
(
RE
(
H11
), IM(
öLe·
)Ë+ MUL_C(RE(
H21
), IM(
öRight
));

1795 
RE
(
ãmpRight
Ë
MUL_C
(RE(
H12
), RE(
öLe·
)Ë+ MUL_C(RE(
H22
), RE(
öRight
));

1796 
IM
(
ãmpRight
Ë
MUL_C
(
RE
(
H12
), IM(
öLe·
)Ë+ MUL_C(RE(
H22
), IM(
öRight
));

1799 i‡((
	gps
->
	gíabÀ_ùd›d
Ë&& (
	gbk
 < 
	gƒ_ùd›d_∑r
))

1802 
RE
(
ãmpLe·
Ë-
MUL_C
(
IM
(
H11
), IM(
öLe·
)Ë+ MUL_C(IM(
H21
), IM(
öRight
));

1803 
IM
(
ãmpLe·
Ë+
MUL_C
(IM(
H11
), 
RE
(
öLe·
)Ë+ MUL_C(IM(
H21
), RE(
öRight
));

1804 
RE
(
ãmpRight
Ë-
MUL_C
(
IM
(
H12
), IM(
öLe·
)Ë+ MUL_C(IM(
H22
), IM(
öRight
));

1805 
IM
(
ãmpRight
Ë+
MUL_C
(IM(
H12
), 
RE
(
öLe·
)Ë+ MUL_C(IM(
H22
), RE(
öRight
));

1809 i‡(
	ggr
 < 
	gps
->
	gnum_hybrid_groups
)

1811 
RE
(
X_hybrid_À·
[
n
][
sb
]ËRE(
ãmpLe·
);

1812 
IM
(
X_hybrid_À·
[
n
][
sb
]ËIM(
ãmpLe·
);

1813 
RE
(
X_hybrid_right
[
n
][
sb
]ËRE(
ãmpRight
);

1814 
IM
(
X_hybrid_right
[
n
][
sb
]ËIM(
ãmpRight
);

1816 
RE
(
X_À·
[
n
][
sb
]ËRE(
ãmpLe·
);

1817 
IM
(
X_À·
[
n
][
sb
]ËIM(
ãmpLe·
);

1818 
RE
(
X_right
[
n
][
sb
]ËRE(
ãmpRight
);

1819 
IM
(
X_right
[
n
][
sb
]ËIM(
ãmpRight
);

1825 
	gps
->
	gpha£_hi°
++;

1826 i‡(
	gps
->
	gpha£_hi°
 == 2)

1828 
ps
->
pha£_hi°
 = 0;

1834 
	$ps_‰ì
(
ps_öfo
 *
ps
)

1837 
	`hybrid_‰ì
(
ps
->
hyb
);

1839 
	`Áad_‰ì
(
ps
);

1840 
	}
}

1842 
ps_öfo
 *
	$ps_öô
(
uöt8_t
 
§_ödex
)

1844 
uöt8_t
 
i
;

1845 
uöt8_t
 
sh‹t_dñay_b™d
;

1847 
ps_öfo
 *
ps
 = (ps_öfo*)
	`Áad_mÆloc
((ps_info));

1848 
	`mem£t
(
ps
, 0, (
ps_öfo
));

1850 
ps
->
hyb
 = 
	`hybrid_öô
();

1852 
ps
->
ps_d©a_avaûabÀ
 = 0;

1855 
ps
->
ßved_dñay
 = 0;

1857 
i
 = 0; i < 64; i++)

1859 
ps
->
dñay_buf_ödex_dñay
[
i
] = 0;

1862 
i
 = 0; i < 
NO_ALLPASS_LINKS
; i++)

1864 
ps
->
dñay_buf_ödex_£r
[
i
] = 0;

1865 #ifde‡
PARAM_32KHZ


1866 i‡(
§_ödex
 <= 5)

1868 
ps
->
num_ßm∂e_dñay_£r
[
i
] = 
dñay_Àngth_d
[1][i];

1870 
ps
->
num_ßm∂e_dñay_£r
[
i
] = 
dñay_Àngth_d
[0][i];

1874 
ps
->
num_ßm∂e_dñay_£r
[
i
] = 
dñay_Àngth_d
[i];

1878 #ifde‡
PARAM_32KHZ


1879 i‡(
§_ödex
 <= 5)

1881 
sh‹t_dñay_b™d
 = 35;

1882 
ps
->
ƒ_ÆÕass_b™ds
 = 22;

1883 
ps
->
Æpha_deˇy
 = 
	`FRAC_CONST
(0.76592833836465);

1884 
ps
->
Æpha_smoŸh
 = 
	`FRAC_CONST
(0.25);

1886 
sh‹t_dñay_b™d
 = 64;

1887 
ps
->
ƒ_ÆÕass_b™ds
 = 45;

1888 
ps
->
Æpha_deˇy
 = 
	`FRAC_CONST
(0.58664621951003);

1889 
ps
->
Æpha_smoŸh
 = 
	`FRAC_CONST
(0.6);

1893 
sh‹t_dñay_b™d
 = 35;

1894 
ps
->
ƒ_ÆÕass_b™ds
 = 22;

1895 
ps
->
Æpha_deˇy
 = 
	`FRAC_CONST
(0.76592833836465);

1896 
ps
->
Æpha_smoŸh
 = 
	`FRAC_CONST
(0.25);

1900 
i
 = 0; i < 
sh‹t_dñay_b™d
; i++)

1902 
ps
->
dñay_D
[
i
] = 14;

1904 
i
 = 
sh‹t_dñay_b™d
; i < 64; i++)

1906 
ps
->
dñay_D
[
i
] = 1;

1910 
i
 = 0; i < 50; i++)

1912 
	`RE
(
ps
->
h11_¥ev
[
i
]) = 1;

1913 
	`IM
(
ps
->
h12_¥ev
[
i
]) = 1;

1914 
	`RE
(
ps
->
h11_¥ev
[
i
]) = 1;

1915 
	`IM
(
ps
->
h12_¥ev
[
i
]) = 1;

1918 
ps
->
pha£_hi°
 = 0;

1920 
i
 = 0; i < 20; i++)

1922 
	`RE
(
ps
->
ùd_¥ev
[
i
][0]) = 0;

1923 
	`IM
(
ps
->
ùd_¥ev
[
i
][0]) = 0;

1924 
	`RE
(
ps
->
ùd_¥ev
[
i
][1]) = 0;

1925 
	`IM
(
ps
->
ùd_¥ev
[
i
][1]) = 0;

1926 
	`RE
(
ps
->
›d_¥ev
[
i
][0]) = 0;

1927 
	`IM
(
ps
->
›d_¥ev
[
i
][0]) = 0;

1928 
	`RE
(
ps
->
›d_¥ev
[
i
][1]) = 0;

1929 
	`IM
(
ps
->
›d_¥ev
[
i
][1]) = 0;

1932  
ps
;

1933 
	}
}

1936 
uöt8_t
 
ps_decode
(
ps_öfo
 *
ps
, 
qmf_t
 
X_À·
[38][64], qmf_à
X_right
[38][64])

1938 
qmf_t
 
	gX_hybrid_À·
[32][32] = {{0}};

1939 
qmf_t
 
	gX_hybrid_right
[32][32] = {{0}};

1942 
ps_d©a_decode
(
ps
);

1945 i‡(
	gps
->
	gu£34hybrid_b™ds
)

1947 
	gps
->
	ggroup_b‹dî
 = (
uöt8_t
*)
group_b‹dî34
;

1948 
	gps
->
	gm≠_group2bk
 = (
uöt16_t
*)
m≠_group2bk34
;

1949 
	gps
->
	gnum_groups
 = 32+18;

1950 
	gps
->
	gnum_hybrid_groups
 = 32;

1951 
	gps
->
	gƒ_∑r_b™ds
 = 34;

1952 
	gps
->
	gdeˇy_cutoff
 = 5;

1954 
	gps
->
	ggroup_b‹dî
 = (
uöt8_t
*)
group_b‹dî20
;

1955 
	gps
->
	gm≠_group2bk
 = (
uöt16_t
*)
m≠_group2bk20
;

1956 
	gps
->
	gnum_groups
 = 10+12;

1957 
	gps
->
	gnum_hybrid_groups
 = 10;

1958 
	gps
->
	gƒ_∑r_b™ds
 = 20;

1959 
	gps
->
	gdeˇy_cutoff
 = 3;

1965 
hybrid_™Æysis
((
hyb_öfo
*)
ps
->
hyb
, 
X_À·
, 
X_hybrid_À·
,

1966 
ps
->
u£34hybrid_b™ds
);

1969 
ps_dec‹ªœã
(
ps
, 
X_À·
, 
X_right
, 
X_hybrid_À·
, 
X_hybrid_right
);

1972 
ps_mix_pha£
(
ps
, 
X_À·
, 
X_right
, 
X_hybrid_À·
, 
X_hybrid_right
);

1975 
hybrid_sy¡hesis
((
hyb_öfo
*)
ps
->
hyb
, 
X_À·
, 
X_hybrid_À·
,

1976 
ps
->
u£34hybrid_b™ds
);

1978 
hybrid_sy¡hesis
((
hyb_öfo
*)
ps
->
hyb
, 
X_right
, 
X_hybrid_right
,

1979 
ps
->
u£34hybrid_b™ds
);

	@ps_dec.h

28 #i‚de‡
__PS_DEC_H__


29 
	#__PS_DEC_H__


	)

31 #ifde‡
__˝lu•lus


35 
	~"bôs.h
"

37 
	#EXTENSION_ID_PS
 2

	)

39 
	#MAX_PS_ENVELOPES
 5

	)

40 
	#NO_ALLPASS_LINKS
 3

	)

45 
uöt8_t
 
íabÀ_iid
;

46 
uöt8_t
 
íabÀ_icc
;

47 
uöt8_t
 
íabÀ_ext
;

49 
uöt8_t
 
iid_mode
;

50 
uöt8_t
 
icc_mode
;

51 
uöt8_t
 
ƒ_iid_∑r
;

52 
uöt8_t
 
ƒ_ùd›d_∑r
;

53 
uöt8_t
 
ƒ_icc_∑r
;

55 
uöt8_t
 
‰ame_˛ass
;

56 
uöt8_t
 
num_ív
;

58 
uöt8_t
 
b‹dî_posôi⁄
[
MAX_PS_ENVELOPES
+1];

60 
uöt8_t
 
iid_dt
[
MAX_PS_ENVELOPES
];

61 
uöt8_t
 
icc_dt
[
MAX_PS_ENVELOPES
];

63 
uöt8_t
 
íabÀ_ùd›d
;

64 
uöt8_t
 
ùd_mode
;

65 
uöt8_t
 
ùd_dt
[
MAX_PS_ENVELOPES
];

66 
uöt8_t
 
›d_dt
[
MAX_PS_ENVELOPES
];

69 
öt8_t
 
iid_ödex_¥ev
[34];

70 
öt8_t
 
icc_ödex_¥ev
[34];

71 
öt8_t
 
ùd_ödex_¥ev
[17];

72 
öt8_t
 
›d_ödex_¥ev
[17];

73 
öt8_t
 
iid_ödex
[
MAX_PS_ENVELOPES
][34];

74 
öt8_t
 
icc_ödex
[
MAX_PS_ENVELOPES
][34];

75 
öt8_t
 
ùd_ödex
[
MAX_PS_ENVELOPES
][17];

76 
öt8_t
 
›d_ödex
[
MAX_PS_ENVELOPES
][17];

78 
öt8_t
 
ùd_ödex_1
[17];

79 
öt8_t
 
›d_ödex_1
[17];

80 
öt8_t
 
ùd_ödex_2
[17];

81 
öt8_t
 
›d_ödex_2
[17];

84 
uöt8_t
 
ps_d©a_avaûabÀ
;

87 
uöt8_t
 
hódî_ªad
;

90 *
hyb
;

91 
uöt8_t
 
u£34hybrid_b™ds
;

94 
uöt8_t
 
num_groups
;

95 
uöt8_t
 
num_hybrid_groups
;

96 
uöt8_t
 
ƒ_∑r_b™ds
;

97 
uöt8_t
 
ƒ_ÆÕass_b™ds
;

98 
uöt8_t
 
deˇy_cutoff
;

100 
uöt8_t
 *
group_b‹dî
;

101 
uöt16_t
 *
m≠_group2bk
;

104 
uöt8_t
 
ßved_dñay
;

105 
uöt8_t
 
dñay_buf_ödex_£r
[
NO_ALLPASS_LINKS
];

106 
uöt8_t
 
num_ßm∂e_dñay_£r
[
NO_ALLPASS_LINKS
];

107 
uöt8_t
 
dñay_D
[64];

108 
uöt8_t
 
dñay_buf_ödex_dñay
[64];

110 
com∂ex_t
 
dñay_Qmf
[14][64];

111 
com∂ex_t
 
dñay_SubQmf
[2][32];

112 
com∂ex_t
 
dñay_Qmf_£r
[
NO_ALLPASS_LINKS
][5][64];

113 
com∂ex_t
 
dñay_SubQmf_£r
[
NO_ALLPASS_LINKS
][5][32];

116 
ªÆ_t
 
Æpha_deˇy
;

117 
ªÆ_t
 
Æpha_smoŸh
;

119 
ªÆ_t
 
P_PókDeˇyNrg
[34];

120 
ªÆ_t
 
P_¥ev
[34];

121 
ªÆ_t
 
P_SmoŸhPókDeˇyDiffNrg_¥ev
[34];

124 
com∂ex_t
 
h11_¥ev
[50];

125 
com∂ex_t
 
h12_¥ev
[50];

126 
com∂ex_t
 
h21_¥ev
[50];

127 
com∂ex_t
 
h22_¥ev
[50];

128 
uöt8_t
 
pha£_hi°
;

129 
com∂ex_t
 
ùd_¥ev
[20][2];

130 
com∂ex_t
 
›d_¥ev
[20][2];

132 } 
	tps_öfo
;

135 
uöt16_t
 
ps_d©a
(
ps_öfo
 *
ps
, 
bôfûe
 *
ld
, 
uöt8_t
 *
hódî
);

138 
ps_öfo
 *
ps_öô
(
uöt8_t
 
§_ödex
);

139 
ps_‰ì
(
ps_öfo
 *
ps
);

141 
uöt8_t
 
ps_decode
(
ps_öfo
 *
ps
, 
qmf_t
 
X_À·
[38][64], qmf_à
X_right
[38][64]);

144 #ifde‡
__˝lu•lus


	@ps_syntax.c

28 
	~"comm⁄.h
"

30 #ifde‡
PS_DEC


32 
	~"bôs.h
"

33 
	~"ps_dec.h
"

36 c⁄° 
	töt8_t
 (*
	tps_huff_èb
)[2];

39 c⁄° 
uöt8_t
 
	gƒ_iid_∑r_èb
[] = {

42 c⁄° 
uöt8_t
 
	gƒ_ùd›d_∑r_èb
[] = {

45 c⁄° 
uöt8_t
 
	gƒ_icc_∑r_èb
[] = {

48 c⁄° 
uöt8_t
 
	gnum_ív_èb
[][4] = {

54 c⁄° 
öt8_t
 
	gf_huff_iid_def
[][2] = {

85 c⁄° 
öt8_t
 
	gt_huff_iid_def
[][2] = {

116 c⁄° 
öt8_t
 
	gf_huff_iid_föe
[][2] = {

179 c⁄° 
öt8_t
 
	gt_huff_iid_föe
[][2] = {

242 c⁄° 
öt8_t
 
	gf_huff_icc
[][2] = {

259 c⁄° 
öt8_t
 
	gt_huff_icc
[][2] = {

276 c⁄° 
öt8_t
 
	gf_huff_ùd
[][2] = {

286 c⁄° 
öt8_t
 
	gt_huff_ùd
[][2] = {

296 c⁄° 
öt8_t
 
	gf_huff_›d
[][2] = {

306 c⁄° 
öt8_t
 
	gt_huff_›d
[][2] = {

317 
uöt16_t
 
ps_exãnsi⁄
(
ps_öfo
 *
ps
, 
bôfûe
 *
ld
,

318 c⁄° 
uöt8_t
 
ps_exãnsi⁄_id
,

319 c⁄° 
uöt16_t
 
num_bôs_À·
);

320 
huff_d©a
(
bôfûe
 *
ld
, c⁄° 
uöt8_t
 
dt
, c⁄° uöt8_à
ƒ_∑r
,

321 
ps_huff_èb
 
t_huff
,Ös_huff_èb 
f_huff
, 
öt8_t
 *
∑r
);

322 
INLINE
 
öt8_t
 
ps_huff_dec
(
bôfûe
 *
ld
, 
ps_huff_èb
 
t_huff
);

325 
uöt16_t
 
	$ps_d©a
(
ps_öfo
 *
ps
, 
bôfûe
 *
ld
, 
uöt8_t
 *
hódî
)

327 
uöt8_t
 
tmp
, 
n
;

328 
uöt16_t
 
bôs
 = (uöt16_t)
	`Áad_gë_¥o˚s£d_bôs
(
ld
);

330 *
hódî
 = 0;

333 i‡(
	`Áad_gë1bô
(
ld


334 
	`DEBUGVAR
(1,1000,"ps_data():Énable_ps_header")))

336 *
hódî
 = 1;

338 
ps
->
hódî_ªad
 = 1;

340 
ps
->
u£34hybrid_b™ds
 = 0;

343 
ps
->
íabÀ_iid
 = (
uöt8_t
)
	`Áad_gë1bô
(
ld


344 
	`DEBUGVAR
(1,1001,"ps_data():Énable_iid"));

346 i‡(
ps
->
íabÀ_iid
)

348 
ps
->
iid_mode
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 3

349 
	`DEBUGVAR
(1,1002,"ps_data(): iid_mode"));

351 
ps
->
ƒ_iid_∑r
 = 
ƒ_iid_∑r_èb
[ps->
iid_mode
];

352 
ps
->
ƒ_ùd›d_∑r
 = 
ƒ_ùd›d_∑r_èb
[ps->
iid_mode
];

354 i‡(
ps
->
iid_mode
 == 2 ||Ös->iid_mode == 5)

355 
ps
->
u£34hybrid_b™ds
 = 1;

358 
ps
->
ùd_mode
 =Ös->
iid_mode
;

362 
ps
->
íabÀ_icc
 = (
uöt8_t
)
	`Áad_gë1bô
(
ld


363 
	`DEBUGVAR
(1,1003,"ps_data():Énable_icc"));

365 i‡(
ps
->
íabÀ_icc
)

367 
ps
->
icc_mode
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 3

368 
	`DEBUGVAR
(1,1004,"ps_data(): icc_mode"));

370 
ps
->
ƒ_icc_∑r
 = 
ƒ_icc_∑r_èb
[ps->
icc_mode
];

372 i‡(
ps
->
icc_mode
 == 2 ||Ös->icc_mode == 5)

373 
ps
->
u£34hybrid_b™ds
 = 1;

377 
ps
->
íabÀ_ext
 = (
uöt8_t
)
	`Áad_gë1bô
(
ld


378 
	`DEBUGVAR
(1,1005,"ps_data():Énable_ext"));

382 i‡(
ps
->
hódî_ªad
 == 0)

385 
ps
->
‰ame_˛ass
 = (
uöt8_t
)
	`Áad_gë1bô
(
ld


386 
	`DEBUGVAR
(1,1006,"ps_data(): frame_class"));

387 
tmp
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

388 
	`DEBUGVAR
(1,1007,"ps_data():Çum_env_idx"));

390 
ps
->
num_ív
 = 
num_ív_èb
[ps->
‰ame_˛ass
][
tmp
];

392 i‡(
ps
->
‰ame_˛ass
)

394 
n
 = 1;Ç < 
ps
->
num_ív
+1;Ç++)

396 
ps
->
b‹dî_posôi⁄
[
n
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 5

397 
	`DEBUGVAR
(1,1008,"ps_data(): border_position"));

401 i‡(
ps
->
íabÀ_iid
)

403 
n
 = 0;Ç < 
ps
->
num_ív
;Ç++)

405 
ps
->
iid_dt
[
n
] = (
uöt8_t
)
	`Áad_gë1bô
(
ld


406 
	`DEBUGVAR
(1,1009,"ps_data(): iid_dt"));

409 i‡(
ps
->
iid_mode
 < 3)

411 
	`huff_d©a
(
ld
, 
ps
->
iid_dt
[
n
],Ös->
ƒ_iid_∑r
, 
t_huff_iid_def
,

412 
f_huff_iid_def
, 
ps
->
iid_ödex
[
n
]);

414 
	`huff_d©a
(
ld
, 
ps
->
iid_dt
[
n
],Ös->
ƒ_iid_∑r
, 
t_huff_iid_föe
,

415 
f_huff_iid_föe
, 
ps
->
iid_ödex
[
n
]);

420 i‡(
ps
->
íabÀ_icc
)

422 
n
 = 0;Ç < 
ps
->
num_ív
;Ç++)

424 
ps
->
icc_dt
[
n
] = (
uöt8_t
)
	`Áad_gë1bô
(
ld


425 
	`DEBUGVAR
(1,1010,"ps_data(): icc_dt"));

428 
	`huff_d©a
(
ld
, 
ps
->
icc_dt
[
n
],Ös->
ƒ_icc_∑r
, 
t_huff_icc
,

429 
f_huff_icc
, 
ps
->
icc_ödex
[
n
]);

433 i‡(
ps
->
íabÀ_ext
)

435 
uöt16_t
 
num_bôs_À·
;

436 
uöt16_t
 
˙t
 = (uöt16_t)
	`Áad_gëbôs
(
ld
, 4

437 
	`DEBUGVAR
(1,1011,"ps_data():Ös_extension_size"));

438 i‡(
˙t
 == 15)

440 
˙t
 +(
uöt16_t
)
	`Áad_gëbôs
(
ld
, 8

441 
	`DEBUGVAR
(1,1012,"ps_data():Ésc_count"));

444 
num_bôs_À·
 = 8 * 
˙t
;

445 
num_bôs_À·
 > 7)

447 
uöt8_t
 
ps_exãnsi⁄_id
 = (uöt8_t)
	`Áad_gëbôs
(
ld
, 2

448 
	`DEBUGVAR
(1,1013,"ps_data():Ös_extension_size"));

450 
num_bôs_À·
 -= 2;

451 
num_bôs_À·
 -
	`ps_exãnsi⁄
(
ps
, 
ld
, 
ps_exãnsi⁄_id
,Çum_bits_left);

454 
	`Áad_gëbôs
(
ld
, 
num_bôs_À·


455 
	`DEBUGVAR
(1,1014,"ps_data(): fill_bits"));

458 
bôs
 = (
uöt16_t
)
	`Áad_gë_¥o˚s£d_bôs
(
ld
) - bits;

460 
ps
->
ps_d©a_avaûabÀ
 = 1;

462  
bôs
;

463 
	}
}

465 
uöt16_t
 
	$ps_exãnsi⁄
(
ps_öfo
 *
ps
, 
bôfûe
 *
ld
,

466 c⁄° 
uöt8_t
 
ps_exãnsi⁄_id
,

467 c⁄° 
uöt16_t
 
num_bôs_À·
)

469 
uöt8_t
 
n
;

470 
uöt16_t
 
bôs
 = (uöt16_t)
	`Áad_gë_¥o˚s£d_bôs
(
ld
);

472 i‡(
ps_exãnsi⁄_id
 == 0)

474 
ps
->
íabÀ_ùd›d
 = (
uöt8_t
)
	`Áad_gë1bô
(
ld


475 
	`DEBUGVAR
(1,1015,"ps_extension():Énable_ipdopd"));

477 i‡(
ps
->
íabÀ_ùd›d
)

479 
n
 = 0;Ç < 
ps
->
num_ív
;Ç++)

481 
ps
->
ùd_dt
[
n
] = (
uöt8_t
)
	`Áad_gë1bô
(
ld


482 
	`DEBUGVAR
(1,1016,"ps_extension(): ipd_dt"));

485 
	`huff_d©a
(
ld
, 
ps
->
ùd_dt
[
n
],Ös->
ƒ_ùd›d_∑r
, 
t_huff_ùd
,

486 
f_huff_ùd
, 
ps
->
ùd_ödex
[
n
]);

488 
ps
->
›d_dt
[
n
] = (
uöt8_t
)
	`Áad_gë1bô
(
ld


489 
	`DEBUGVAR
(1,1017,"ps_extension(): opd_dt"));

492 
	`huff_d©a
(
ld
, 
ps
->
›d_dt
[
n
],Ös->
ƒ_ùd›d_∑r
, 
t_huff_›d
,

493 
f_huff_›d
, 
ps
->
›d_ödex
[
n
]);

496 
	`Áad_gë1bô
(
ld


497 
	`DEBUGVAR
(1,1018,"ps_extension():Ñeserved_ps"));

501 
bôs
 = (
uöt16_t
)
	`Áad_gë_¥o˚s£d_bôs
(
ld
) - bits;

503  
bôs
;

504 
	}
}

507 
	$huff_d©a
(
bôfûe
 *
ld
, c⁄° 
uöt8_t
 
dt
, c⁄° uöt8_à
ƒ_∑r
,

508 
ps_huff_èb
 
t_huff
,Ös_huff_èb 
f_huff
, 
öt8_t
 *
∑r
)

510 
uöt8_t
 
n
;

512 i‡(
dt
)

515 
n
 = 0;Ç < 
ƒ_∑r
;Ç++)

517 
∑r
[
n
] = 
	`ps_huff_dec
(
ld
, 
t_huff
);

521 
∑r
[0] = 
	`ps_huff_dec
(
ld
, 
f_huff
);

523 
n
 = 1;Ç < 
ƒ_∑r
;Ç++)

525 
∑r
[
n
] = 
	`ps_huff_dec
(
ld
, 
f_huff
);

528 
	}
}

531 
INLINE
 
öt8_t
 
	$ps_huff_dec
(
bôfûe
 *
ld
, 
ps_huff_èb
 
t_huff
)

533 
uöt8_t
 
bô
;

534 
öt16_t
 
ödex
 = 0;

536 
ödex
 >= 0)

538 
bô
 = (
uöt8_t
)
	`Áad_gë1bô
(
ld
);

539 
ödex
 = 
t_huff
[ödex][
bô
];

542  
ödex
 + 31;

543 
	}
}

	@ps_tables.h

28 #i‚de‡
__PS_TABLES_H__


29 
	#__PS_TABLES_H__


	)

31 #ifde‡
__˝lu•lus


35 #ifde‡
_MSC_VER


36 #¥agm®
w¨nög
(
dißbÀ
:4305)

37 #¥agm®
w¨nög
(
dißbÀ
:4244)

42 
f_˚¡î_20
[12] = {

48 
	gf_˚¡î_20
[12] = {

55 
	gf_˚¡î_34
[32] = {

66 c⁄° 
ªÆ_t
 
	g‰ac_dñay_q
[] = {

67 
FRAC_CONST
(0.43),

68 
FRAC_CONST
(0.75),

69 
FRAC_CONST
(0.347)

75 c⁄° 
com∂ex_t
 
	gPhi_Fø˘_Qmf
[] = {

76 { 
FRAC_CONST
(0.8181497455), FRAC_CONST(0.5750052333) },

77 { 
FRAC_CONST
(-0.2638730407), FRAC_CONST(0.9645574093) },

78 { 
FRAC_CONST
(-0.9969173074), FRAC_CONST(0.0784590989) },

79 { 
FRAC_CONST
(-0.4115143716), FRAC_CONST(-0.9114032984) },

80 { 
FRAC_CONST
(0.7181262970), FRAC_CONST(-0.6959127784) },

81 { 
FRAC_CONST
(0.8980275989), FRAC_CONST(0.4399391711) },

82 { 
FRAC_CONST
(-0.1097343117), FRAC_CONST(0.9939609766) },

83 { 
FRAC_CONST
(-0.9723699093), FRAC_CONST(0.2334453613) },

84 { 
FRAC_CONST
(-0.5490227938), FRAC_CONST(-0.8358073831) },

85 { 
FRAC_CONST
(0.6004202366), FRAC_CONST(-0.7996846437) },

86 { 
FRAC_CONST
(0.9557930231), FRAC_CONST(0.2940403223) },

87 { 
FRAC_CONST
(0.0471064523), FRAC_CONST(0.9988898635) },

88 { 
FRAC_CONST
(-0.9238795042), FRAC_CONST(0.3826834261) },

89 { 
FRAC_CONST
(-0.6730124950), FRAC_CONST(-0.7396311164) },

90 { 
FRAC_CONST
(0.4679298103), FRAC_CONST(-0.8837656379) },

91 { 
FRAC_CONST
(0.9900236726), FRAC_CONST(0.1409012377) },

92 { 
FRAC_CONST
(0.2027872950), FRAC_CONST(0.9792228341) },

93 { 
FRAC_CONST
(-0.8526401520), FRAC_CONST(0.5224985480) },

94 { 
FRAC_CONST
(-0.7804304361), FRAC_CONST(-0.6252426505) },

95 { 
FRAC_CONST
(0.3239174187), FRAC_CONST(-0.9460853338) },

96 { 
FRAC_CONST
(0.9998766184), FRAC_CONST(-0.0157073177) },

97 { 
FRAC_CONST
(0.3534748554), FRAC_CONST(0.9354440570) },

98 { 
FRAC_CONST
(-0.7604059577), FRAC_CONST(0.6494480371) },

99 { 
FRAC_CONST
(-0.8686315417), FRAC_CONST(-0.4954586625) },

100 { 
FRAC_CONST
(0.1719291061), FRAC_CONST(-0.9851093292) },

101 { 
FRAC_CONST
(0.9851093292), FRAC_CONST(-0.1719291061) },

102 { 
FRAC_CONST
(0.4954586625), FRAC_CONST(0.8686315417) },

103 { 
FRAC_CONST
(-0.6494480371), FRAC_CONST(0.7604059577) },

104 { 
FRAC_CONST
(-0.9354440570), FRAC_CONST(-0.3534748554) },

105 { 
FRAC_CONST
(0.0157073177), FRAC_CONST(-0.9998766184) },

106 { 
FRAC_CONST
(0.9460853338), FRAC_CONST(-0.3239174187) },

107 { 
FRAC_CONST
(0.6252426505), FRAC_CONST(0.7804304361) },

108 { 
FRAC_CONST
(-0.5224985480), FRAC_CONST(0.8526401520) },

109 { 
FRAC_CONST
(-0.9792228341), FRAC_CONST(-0.2027872950) },

110 { 
FRAC_CONST
(-0.1409012377), FRAC_CONST(-0.9900236726) },

111 { 
FRAC_CONST
(0.8837656379), FRAC_CONST(-0.4679298103) },

112 { 
FRAC_CONST
(0.7396311164), FRAC_CONST(0.6730124950) },

113 { 
FRAC_CONST
(-0.3826834261), FRAC_CONST(0.9238795042) },

114 { 
FRAC_CONST
(-0.9988898635), FRAC_CONST(-0.0471064523) },

115 { 
FRAC_CONST
(-0.2940403223), FRAC_CONST(-0.9557930231) },

116 { 
FRAC_CONST
(0.7996846437), FRAC_CONST(-0.6004202366) },

117 { 
FRAC_CONST
(0.8358073831), FRAC_CONST(0.5490227938) },

118 { 
FRAC_CONST
(-0.2334453613), FRAC_CONST(0.9723699093) },

119 { 
FRAC_CONST
(-0.9939609766), FRAC_CONST(0.1097343117) },

120 { 
FRAC_CONST
(-0.4399391711), FRAC_CONST(-0.8980275989) },

121 { 
FRAC_CONST
(0.6959127784), FRAC_CONST(-0.7181262970) },

122 { 
FRAC_CONST
(0.9114032984), FRAC_CONST(0.4115143716) },

123 { 
FRAC_CONST
(-0.0784590989), FRAC_CONST(0.9969173074) },

124 { 
FRAC_CONST
(-0.9645574093), FRAC_CONST(0.2638730407) },

125 { 
FRAC_CONST
(-0.5750052333), FRAC_CONST(-0.8181497455) },

126 { 
FRAC_CONST
(0.5750052333), FRAC_CONST(-0.8181497455) },

127 { 
FRAC_CONST
(0.9645574093), FRAC_CONST(0.2638730407) },

128 { 
FRAC_CONST
(0.0784590989), FRAC_CONST(0.9969173074) },

129 { 
FRAC_CONST
(-0.9114032984), FRAC_CONST(0.4115143716) },

130 { 
FRAC_CONST
(-0.6959127784), FRAC_CONST(-0.7181262970) },

131 { 
FRAC_CONST
(0.4399391711), FRAC_CONST(-0.8980275989) },

132 { 
FRAC_CONST
(0.9939609766), FRAC_CONST(0.1097343117) },

133 { 
FRAC_CONST
(0.2334453613), FRAC_CONST(0.9723699093) },

134 { 
FRAC_CONST
(-0.8358073831), FRAC_CONST(0.5490227938) },

135 { 
FRAC_CONST
(-0.7996846437), FRAC_CONST(-0.6004202366) },

136 { 
FRAC_CONST
(0.2940403223), FRAC_CONST(-0.9557930231) },

137 { 
FRAC_CONST
(0.9988898635), FRAC_CONST(-0.0471064523) },

138 { 
FRAC_CONST
(0.3826834261), FRAC_CONST(0.9238795042) },

139 { 
FRAC_CONST
(-0.7396311164), FRAC_CONST(0.6730124950) }

144 c⁄° 
com∂ex_t
 
	gPhi_Fø˘_SubQmf20
[] = {

145 { 
FRAC_CONST
(0.9882950187), FRAC_CONST(0.1525546312) },

146 { 
FRAC_CONST
(0.8962930441), FRAC_CONST(0.4434623122) },

147 { 
FRAC_CONST
(0.7208535671), FRAC_CONST(0.6930873394) },

148 { 
FRAC_CONST
(0.4783087075), FRAC_CONST(0.8781917691) },

149 { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) },

150 { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) },

151 { 
FRAC_CONST
(0.8962930441), FRAC_CONST(-0.4434623122) },

152 { 
FRAC_CONST
(0.9882950187), FRAC_CONST(-0.1525546312) },

153 { 
FRAC_CONST
(-0.5424415469), FRAC_CONST(0.8400935531) },

154 { 
FRAC_CONST
(0.0392598175), FRAC_CONST(0.9992290139) },

155 { 
FRAC_CONST
(-0.9268565774), FRAC_CONST(0.3754155636) },

156 { 
FRAC_CONST
(-0.9741733670), FRAC_CONST(-0.2258012742) }

161 c⁄° 
com∂ex_t
 
	gPhi_Fø˘_SubQmf34
[] = {

162 { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) },

163 { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) },

164 { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) },

165 { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) },

166 { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) },

167 { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) },

168 { 
FRAC_CONST
(0.3387379348), FRAC_CONST(0.9408807755) },

169 { 
FRAC_CONST
(0.3387379348), FRAC_CONST(0.9408807755) },

170 { 
FRAC_CONST
(0.3387379348), FRAC_CONST(0.9408807755) },

171 { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) },

172 { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) },

173 { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) },

174 { 
FRAC_CONST
(-0.7705132365), FRAC_CONST(0.6374239922) },

175 { 
FRAC_CONST
(-0.7705132365), FRAC_CONST(0.6374239922) },

176 { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) },

177 { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) },

178 { 
FRAC_CONST
(0.3387379348), FRAC_CONST(0.9408807755) },

179 { 
FRAC_CONST
(0.3387379348), FRAC_CONST(0.9408807755) },

180 { 
FRAC_CONST
(0.3387379348), FRAC_CONST(0.9408807755) },

181 { 
FRAC_CONST
(0.3387379348), FRAC_CONST(0.9408807755) },

182 { 
FRAC_CONST
(-0.7705132365), FRAC_CONST(0.6374239922) },

183 { 
FRAC_CONST
(-0.7705132365), FRAC_CONST(0.6374239922) },

184 { 
FRAC_CONST
(-0.8607420325), FRAC_CONST(-0.5090414286) },

185 { 
FRAC_CONST
(0.3387379348), FRAC_CONST(0.9408807755) },

186 { 
FRAC_CONST
(0.1873813123), FRAC_CONST(-0.9822872281) },

187 { 
FRAC_CONST
(-0.7705132365), FRAC_CONST(0.6374239922) },

188 { 
FRAC_CONST
(-0.8607420325), FRAC_CONST(-0.5090414286) },

189 { 
FRAC_CONST
(-0.8607420325), FRAC_CONST(-0.5090414286) },

190 { 
FRAC_CONST
(0.1873813123), FRAC_CONST(-0.9822872281) },

191 { 
FRAC_CONST
(0.1873813123), FRAC_CONST(-0.9822872281) },

192 { 
FRAC_CONST
(0.9876883626), FRAC_CONST(-0.1564344615) },

193 { 
FRAC_CONST
(-0.8607420325), FRAC_CONST(-0.5090414286) }

198 c⁄° 
com∂ex_t
 
	gQ_Fø˘_ÆÕass_Qmf
[][3] = {

199 { { 
FRAC_CONST
(0.7804303765), FRAC_CONST(0.6252426505) }, { FRAC_CONST(0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(0.8550928831), FRAC_CONST(0.5184748173) } },

200 { { 
FRAC_CONST
(-0.4399392009), FRAC_CONST(0.8980275393) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(-0.0643581524), FRAC_CONST(0.9979268909) } },

201 { { 
FRAC_CONST
(-0.9723699093), FRAC_CONST(-0.2334454209) }, { FRAC_CONST(0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(-0.9146071672), FRAC_CONST(0.4043435752) } },

202 { { 
FRAC_CONST
(0.0157073960), FRAC_CONST(-0.9998766184) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(-0.7814115286), FRAC_CONST(-0.6240159869) } },

203 { { 
FRAC_CONST
(0.9792228341), FRAC_CONST(-0.2027871907) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(0.1920081824), FRAC_CONST(-0.9813933372) } },

204 { { 
FRAC_CONST
(0.4115142524), FRAC_CONST(0.9114032984) }, { FRAC_CONST(0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(0.9589683414), FRAC_CONST(-0.2835132182) } },

205 { { 
FRAC_CONST
(-0.7996847630), FRAC_CONST(0.6004201174) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(0.6947838664), FRAC_CONST(0.7192186117) } },

206 { { 
FRAC_CONST
(-0.7604058385), FRAC_CONST(-0.6494481564) }, { FRAC_CONST(0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(-0.3164770305), FRAC_CONST(0.9486001730) } },

207 { { 
FRAC_CONST
(0.4679299891), FRAC_CONST(-0.8837655187) }, { FRAC_CONST(0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(-0.9874414206), FRAC_CONST(0.1579856575) } },

208 { { 
FRAC_CONST
(0.9645573497), FRAC_CONST(0.2638732493) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(-0.5966450572), FRAC_CONST(-0.8025052547) } },

209 { { 
FRAC_CONST
(-0.0471066870), FRAC_CONST(0.9988898635) }, { FRAC_CONST(0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.4357025325), FRAC_CONST(-0.9000906944) } },

210 { { 
FRAC_CONST
(-0.9851093888), FRAC_CONST(0.1719288528) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(0.9995546937), FRAC_CONST(-0.0298405960) } },

211 { { 
FRAC_CONST
(-0.3826831877), FRAC_CONST(-0.9238796234) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(0.4886211455), FRAC_CONST(0.8724960685) } },

212 { { 
FRAC_CONST
(0.8181498647), FRAC_CONST(-0.5750049949) }, { FRAC_CONST(0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.5477093458), FRAC_CONST(0.8366686702) } },

213 { { 
FRAC_CONST
(0.7396308780), FRAC_CONST(0.6730127335) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.9951074123), FRAC_CONST(-0.0987988561) } },

214 { { 
FRAC_CONST
(-0.4954589605), FRAC_CONST(0.8686313629) }, { FRAC_CONST(0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(-0.3725017905), FRAC_CONST(-0.9280315042) } },

215 { { 
FRAC_CONST
(-0.9557929039), FRAC_CONST(-0.2940406799) }, { FRAC_CONST(0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(0.6506417990), FRAC_CONST(-0.7593847513) } },

216 { { 
FRAC_CONST
(0.0784594864), FRAC_CONST(-0.9969173074) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.9741733670), FRAC_CONST(0.2258014232) } },

217 { { 
FRAC_CONST
(0.9900237322), FRAC_CONST(-0.1409008205) }, { FRAC_CONST(0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.2502108514), FRAC_CONST(0.9681913853) } },

218 { { 
FRAC_CONST
(0.3534744382), FRAC_CONST(0.9354441762) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(-0.7427945137), FRAC_CONST(0.6695194840) } },

219 { { 
FRAC_CONST
(-0.8358076215), FRAC_CONST(0.5490224361) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(-0.9370992780), FRAC_CONST(-0.3490629196) } },

220 { { 
FRAC_CONST
(-0.7181259394), FRAC_CONST(-0.6959131360) }, { FRAC_CONST(0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.1237744763), FRAC_CONST(-0.9923103452) } },

221 { { 
FRAC_CONST
(0.5224990249), FRAC_CONST(-0.8526399136) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(0.8226406574), FRAC_CONST(-0.5685616732) } },

222 { { 
FRAC_CONST
(0.9460852146), FRAC_CONST(0.3239179254) }, { FRAC_CONST(0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(0.8844994903), FRAC_CONST(0.4665412009) } },

223 { { 
FRAC_CONST
(-0.1097348556), FRAC_CONST(0.9939609170) }, { FRAC_CONST(0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(-0.0047125919), FRAC_CONST(0.9999889135) } },

224 { { 
FRAC_CONST
(-0.9939610362), FRAC_CONST(0.1097337380) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(-0.8888573647), FRAC_CONST(0.4581840038) } },

225 { { 
FRAC_CONST
(-0.3239168525), FRAC_CONST(-0.9460855722) }, { FRAC_CONST(0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(-0.8172453642), FRAC_CONST(-0.5762898922) } },

226 { { 
FRAC_CONST
(0.8526405096), FRAC_CONST(-0.5224980116) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(0.1331215799), FRAC_CONST(-0.9910997152) } },

227 { { 
FRAC_CONST
(0.6959123611), FRAC_CONST(0.7181267142) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(0.9403476119), FRAC_CONST(-0.3402152061) } },

228 { { 
FRAC_CONST
(-0.5490233898), FRAC_CONST(0.8358070254) }, { FRAC_CONST(0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(0.7364512086), FRAC_CONST(0.6764906645) } },

229 { { 
FRAC_CONST
(-0.9354437590), FRAC_CONST(-0.3534754813) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.2593250275), FRAC_CONST(0.9657900929) } },

230 { { 
FRAC_CONST
(0.1409019381), FRAC_CONST(-0.9900235534) }, { FRAC_CONST(0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(-0.9762582779), FRAC_CONST(0.2166097313) } },

231 { { 
FRAC_CONST
(0.9969173670), FRAC_CONST(-0.0784583688) }, { FRAC_CONST(0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(-0.6434556246), FRAC_CONST(-0.7654833794) } },

232 { { 
FRAC_CONST
(0.2940396070), FRAC_CONST(0.9557932615) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.3812320232), FRAC_CONST(-0.9244794250) } },

233 { { 
FRAC_CONST
(-0.8686318994), FRAC_CONST(0.4954580069) }, { FRAC_CONST(0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.9959943891), FRAC_CONST(-0.0894154981) } },

234 { { 
FRAC_CONST
(-0.6730118990), FRAC_CONST(-0.7396316528) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(0.5397993922), FRAC_CONST(0.8417937160) } },

235 { { 
FRAC_CONST
(0.5750059485), FRAC_CONST(-0.8181492686) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(-0.4968227744), FRAC_CONST(0.8678520322) } },

236 { { 
FRAC_CONST
(0.9238792062), FRAC_CONST(0.3826842010) }, { FRAC_CONST(0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.9992290139), FRAC_CONST(-0.0392601527) } },

237 { { 
FRAC_CONST
(-0.1719299555), FRAC_CONST(0.9851091504) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.4271997511), FRAC_CONST(-0.9041572809) } },

238 { { 
FRAC_CONST
(-0.9988899231), FRAC_CONST(0.0471055657) }, { FRAC_CONST(0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(0.6041822433), FRAC_CONST(-0.7968461514) } },

239 { { 
FRAC_CONST
(-0.2638721764), FRAC_CONST(-0.9645576477) }, { FRAC_CONST(0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(0.9859085083), FRAC_CONST(0.1672853529) } },

240 { { 
FRAC_CONST
(0.8837660551), FRAC_CONST(-0.4679289758) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.3075223565), FRAC_CONST(0.9515408874) } },

241 { { 
FRAC_CONST
(0.6494473219), FRAC_CONST(0.7604066133) }, { FRAC_CONST(0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(-0.7015317082), FRAC_CONST(0.7126382589) } },

242 { { 
FRAC_CONST
(-0.6004210114), FRAC_CONST(0.7996840477) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(-0.9562535882), FRAC_CONST(-0.2925389707) } },

243 { { 
FRAC_CONST
(-0.9114028811), FRAC_CONST(-0.4115152657) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(-0.1827499419), FRAC_CONST(-0.9831594229) } },

244 { { 
FRAC_CONST
(0.2027882934), FRAC_CONST(-0.9792225957) }, { FRAC_CONST(0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(0.7872582674), FRAC_CONST(-0.6166234016) } },

245 { { 
FRAC_CONST
(0.9998766780), FRAC_CONST(-0.0157062728) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(0.9107555747), FRAC_CONST(0.4129458666) } },

246 { { 
FRAC_CONST
(0.2334443331), FRAC_CONST(0.9723701477) }, { FRAC_CONST(0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(0.0549497530), FRAC_CONST(0.9984891415) } },

247 { { 
FRAC_CONST
(-0.8980280757), FRAC_CONST(0.4399381876) }, { FRAC_CONST(0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(-0.8599416018), FRAC_CONST(0.5103924870) } },

248 { { 
FRAC_CONST
(-0.6252418160), FRAC_CONST(-0.7804310918) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(-0.8501682281), FRAC_CONST(-0.5265110731) } },

249 { { 
FRAC_CONST
(0.6252435446), FRAC_CONST(-0.7804297209) }, { FRAC_CONST(0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.0737608299), FRAC_CONST(-0.9972759485) } },

250 { { 
FRAC_CONST
(0.8980270624), FRAC_CONST(0.4399402142) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(0.9183775187), FRAC_CONST(-0.3957053721) } },

251 { { 
FRAC_CONST
(-0.2334465086), FRAC_CONST(0.9723696709) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(0.7754954696), FRAC_CONST(0.6313531399) } },

252 { { 
FRAC_CONST
(-0.9998766184), FRAC_CONST(-0.0157085191) }, { FRAC_CONST(0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.2012493610), FRAC_CONST(0.9795400500) } },

253 { { 
FRAC_CONST
(-0.2027861029), FRAC_CONST(-0.9792230725) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.9615978599), FRAC_CONST(0.2744622827) } },

254 { { 
FRAC_CONST
(0.9114037752), FRAC_CONST(-0.4115132093) }, { FRAC_CONST(0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(-0.6879743338), FRAC_CONST(-0.7257350087) } },

255 { { 
FRAC_CONST
(0.6004192233), FRAC_CONST(0.7996854186) }, { FRAC_CONST(0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(0.3254036009), FRAC_CONST(-0.9455752373) } },

256 { { 
FRAC_CONST
(-0.6494490504), FRAC_CONST(0.7604051232) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.9888865948), FRAC_CONST(-0.1486719251) } },

257 { { 
FRAC_CONST
(-0.8837650418), FRAC_CONST(-0.4679309726) }, { FRAC_CONST(0.9238795042), FRAC_CONST(-0.3826834261) }, { FRAC_CONST(0.5890548825), FRAC_CONST(0.8080930114) } },

258 { { 
FRAC_CONST
(0.2638743520), FRAC_CONST(-0.9645570517) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(0.9238795042) }, { FRAC_CONST(-0.4441666007), FRAC_CONST(0.8959442377) } },

259 { { 
FRAC_CONST
(0.9988898039), FRAC_CONST(0.0471078083) }, { FRAC_CONST(-0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(-0.9997915030), FRAC_CONST(0.0204183888) } },

260 { { 
FRAC_CONST
(0.1719277352), FRAC_CONST(0.9851095676) }, { FRAC_CONST(0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(-0.4803760946), FRAC_CONST(-0.8770626187) } },

261 { { 
FRAC_CONST
(-0.9238800406), FRAC_CONST(0.3826821446) }, { FRAC_CONST(-0.9238795042), FRAC_CONST(0.3826834261) }, { FRAC_CONST(0.5555707216), FRAC_CONST(-0.8314692974) } },

262 { { 
FRAC_CONST
(-0.5750041008), FRAC_CONST(-0.8181505203) }, { FRAC_CONST(0.3826834261), FRAC_CONST(-0.9238795042) }, { FRAC_CONST(0.9941320419), FRAC_CONST(0.1081734300) } }

267 c⁄° 
com∂ex_t
 
	gQ_Fø˘_ÆÕass_SubQmf20
[][3] = {

268 { { 
FRAC_CONST
(0.9857769012), FRAC_CONST(0.1680592746) }, { FRAC_CONST(0.9569403529), FRAC_CONST(0.2902846634) }, { FRAC_CONST(0.9907300472), FRAC_CONST(0.1358452588) } },

269 { { 
FRAC_CONST
(0.8744080663), FRAC_CONST(0.4851911962) }, { FRAC_CONST(0.6343932748), FRAC_CONST(0.7730104327) }, { FRAC_CONST(0.9175986052), FRAC_CONST(0.3975082636) } },

270 { { 
FRAC_CONST
(0.6642524004), FRAC_CONST(0.7475083470) }, { FRAC_CONST(0.0980171412), FRAC_CONST(0.9951847196) }, { FRAC_CONST(0.7767338753), FRAC_CONST(0.6298289299) } },

271 { { 
FRAC_CONST
(0.3790524006), FRAC_CONST(0.9253752232) }, { FRAC_CONST(-0.4713967443), FRAC_CONST(0.8819212914) }, { FRAC_CONST(0.5785340071), FRAC_CONST(0.8156582713) } },

272 { { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) } },

273 { { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) } },

274 { { 
FRAC_CONST
(0.8744080663), FRAC_CONST(-0.4851911962) }, { FRAC_CONST(0.6343932748), FRAC_CONST(-0.7730104327) }, { FRAC_CONST(0.9175986052), FRAC_CONST(-0.3975082636) } },

275 { { 
FRAC_CONST
(0.9857769012), FRAC_CONST(-0.1680592746) }, { FRAC_CONST(0.9569403529), FRAC_CONST(-0.2902846634) }, { FRAC_CONST(0.9907300472), FRAC_CONST(-0.1358452588) } },

276 { { 
FRAC_CONST
(-0.7126385570), FRAC_CONST(0.7015314102) }, { FRAC_CONST(-0.5555702448), FRAC_CONST(-0.8314695954) }, { FRAC_CONST(-0.3305967748), FRAC_CONST(0.9437720776) } },

277 { { 
FRAC_CONST
(-0.1175374240), FRAC_CONST(0.9930684566) }, { FRAC_CONST(-0.9807852507), FRAC_CONST(0.1950903237) }, { FRAC_CONST(0.2066311091), FRAC_CONST(0.9784189463) } },

278 { { 
FRAC_CONST
(-0.9947921634), FRAC_CONST(0.1019244045) }, { FRAC_CONST(0.5555702448), FRAC_CONST(-0.8314695954) }, { FRAC_CONST(-0.7720130086), FRAC_CONST(0.6356067061) } },

279 { { 
FRAC_CONST
(-0.8400934935), FRAC_CONST(-0.5424416065) }, { FRAC_CONST(0.9807852507), FRAC_CONST(0.1950903237) }, { FRAC_CONST(-0.9896889329), FRAC_CONST(0.1432335079) } }

284 c⁄° 
com∂ex_t
 
	gQ_Fø˘_ÆÕass_SubQmf34
[][3] = {

285 { { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) } },

286 { { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) } },

287 { { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) } },

288 { { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) } },

289 { { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) } },

290 { { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) } },

291 { { 
FRAC_CONST
(0.2181432247), FRAC_CONST(0.9759167433) }, { FRAC_CONST(-0.7071067691), FRAC_CONST(0.7071067691) }, { FRAC_CONST(0.4623677433), FRAC_CONST(0.8866882324) } },

292 { { 
FRAC_CONST
(0.2181432247), FRAC_CONST(0.9759167433) }, { FRAC_CONST(-0.7071067691), FRAC_CONST(0.7071067691) }, { FRAC_CONST(0.4623677433), FRAC_CONST(0.8866882324) } },

293 { { 
FRAC_CONST
(0.2181432247), FRAC_CONST(0.9759167433) }, { FRAC_CONST(-0.7071067691), FRAC_CONST(0.7071067691) }, { FRAC_CONST(0.4623677433), FRAC_CONST(0.8866882324) } },

294 { { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) } },

295 { { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) } },

296 { { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) } },

297 { { 
FRAC_CONST
(-0.9048270583), FRAC_CONST(0.4257792532) }, { FRAC_CONST(-0.0000000000), FRAC_CONST(-1.0000000000) }, { FRAC_CONST(-0.5724321604), FRAC_CONST(0.8199520707) } },

298 { { 
FRAC_CONST
(-0.9048270583), FRAC_CONST(0.4257792532) }, { FRAC_CONST(-0.0000000000), FRAC_CONST(-1.0000000000) }, { FRAC_CONST(-0.5724321604), FRAC_CONST(0.8199520707) } },

299 { { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) } },

300 { { 
FRAC_CONST
(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(1.0000000000), FRAC_CONST(0.0000000000) } },

301 { { 
FRAC_CONST
(0.2181432247), FRAC_CONST(0.9759167433) }, { FRAC_CONST(-0.7071067691), FRAC_CONST(0.7071067691) }, { FRAC_CONST(0.4623677433), FRAC_CONST(0.8866882324) } },

302 { { 
FRAC_CONST
(0.2181432247), FRAC_CONST(0.9759167433) }, { FRAC_CONST(-0.7071067691), FRAC_CONST(0.7071067691) }, { FRAC_CONST(0.4623677433), FRAC_CONST(0.8866882324) } },

303 { { 
FRAC_CONST
(0.2181432247), FRAC_CONST(0.9759167433) }, { FRAC_CONST(-0.7071067691), FRAC_CONST(0.7071067691) }, { FRAC_CONST(0.4623677433), FRAC_CONST(0.8866882324) } },

304 { { 
FRAC_CONST
(0.2181432247), FRAC_CONST(0.9759167433) }, { FRAC_CONST(-0.7071067691), FRAC_CONST(0.7071067691) }, { FRAC_CONST(0.4623677433), FRAC_CONST(0.8866882324) } },

305 { { 
FRAC_CONST
(-0.9048270583), FRAC_CONST(0.4257792532) }, { FRAC_CONST(-0.0000000000), FRAC_CONST(-1.0000000000) }, { FRAC_CONST(-0.5724321604), FRAC_CONST(0.8199520707) } },

306 { { 
FRAC_CONST
(-0.9048270583), FRAC_CONST(0.4257792532) }, { FRAC_CONST(-0.0000000000), FRAC_CONST(-1.0000000000) }, { FRAC_CONST(-0.5724321604), FRAC_CONST(0.8199520707) } },

307 { { 
FRAC_CONST
(-0.6129069924), FRAC_CONST(-0.7901550531) }, { FRAC_CONST(0.7071067691), FRAC_CONST(0.7071067691) }, { FRAC_CONST(-0.9917160273), FRAC_CONST(-0.1284494549) } },

308 { { 
FRAC_CONST
(0.2181432247), FRAC_CONST(0.9759167433) }, { FRAC_CONST(-0.7071067691), FRAC_CONST(0.7071067691) }, { FRAC_CONST(0.4623677433), FRAC_CONST(0.8866882324) } },

309 { { 
FRAC_CONST
(0.6374240518), FRAC_CONST(-0.7705131769) }, { FRAC_CONST(-1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(-0.3446428776), FRAC_CONST(-0.9387338758) } },

310 { { 
FRAC_CONST
(-0.9048270583), FRAC_CONST(0.4257792532) }, { FRAC_CONST(-0.0000000000), FRAC_CONST(-1.0000000000) }, { FRAC_CONST(-0.5724321604), FRAC_CONST(0.8199520707) } },

311 { { 
FRAC_CONST
(-0.6129069924), FRAC_CONST(-0.7901550531) }, { FRAC_CONST(0.7071067691), FRAC_CONST(0.7071067691) }, { FRAC_CONST(-0.9917160273), FRAC_CONST(-0.1284494549) } },

312 { { 
FRAC_CONST
(-0.6129069924), FRAC_CONST(-0.7901550531) }, { FRAC_CONST(0.7071067691), FRAC_CONST(0.7071067691) }, { FRAC_CONST(-0.9917160273), FRAC_CONST(-0.1284494549) } },

313 { { 
FRAC_CONST
(0.6374240518), FRAC_CONST(-0.7705131769) }, { FRAC_CONST(-1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(-0.3446428776), FRAC_CONST(-0.9387338758) } },

314 { { 
FRAC_CONST
(0.6374240518), FRAC_CONST(-0.7705131769) }, { FRAC_CONST(-1.0000000000), FRAC_CONST(0.0000000000) }, { FRAC_CONST(-0.3446428776), FRAC_CONST(-0.9387338758) } },

315 { { 
FRAC_CONST
(0.8910064697), FRAC_CONST(0.4539906085) }, { FRAC_CONST(0.7071067691), FRAC_CONST(-0.7071067691) }, { FRAC_CONST(0.6730125546), FRAC_CONST(-0.7396310568) } },

316 { { 
FRAC_CONST
(-0.6129069924), FRAC_CONST(-0.7901550531) }, { FRAC_CONST(0.7071067691), FRAC_CONST(0.7071067691) }, { FRAC_CONST(-0.9917160273), FRAC_CONST(-0.1284494549) } }

320 
	gqu™t_rho
[8] =

322 
FRAC_CONST
(1.0), FRAC_CONST(0.937), FRAC_CONST(0.84118), FRAC_CONST(0.60092),

323 
FRAC_CONST
(0.36764), FRAC_CONST(0.0), FRAC_CONST(-0.589), FRAC_CONST(-1.0)

326 c⁄° 
uöt8_t
 
	gqu™t_iid_n‹mÆ
[7] =

331 c⁄° 
uöt8_t
 
	gqu™t_iid_föe
[15] =

337 c⁄° 
ªÆ_t
 
	gcos_Æphas
[] = {

338 
COEF_CONST
(1.0000000000), COEF_CONST(0.9841239700), COEF_CONST(0.9594738210),

339 
COEF_CONST
(0.8946843079), COEF_CONST(0.8269340931), COEF_CONST(0.7071067812),

340 
COEF_CONST
(0.4533210856), COEF_CONST(0.0000000000)

343 c⁄° 
ªÆ_t
 
	gsö_Æphas
[] = {

344 
COEF_CONST
(0.0000000000), COEF_CONST(0.1774824264), COEF_CONST(0.2817977763),

345 
COEF_CONST
(0.4466989918), COEF_CONST(0.5622988580), COEF_CONST(0.7071067812),

346 
COEF_CONST
(0.8913472911), COEF_CONST(1.0000000000)

349 c⁄° 
ªÆ_t
 
	gcos_bëas_n‹mÆ
[][8] = {

350 { 
COEF_CONST
(1.0000000000), COEF_CONST(1.0000000000), COEF_CONST(1.0000000000), COEF_CONST(1.0000000000), COEF_CONST(1.0000000000), COEF_CONST(1.0000000000), COEF_CONST(1.0000000000), COEF_CONST(1.0000000000) },

351 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9995871699), COEF_CONST(0.9989419133), COEF_CONST(0.9972204583), COEF_CONST(0.9953790839), COEF_CONST(0.9920112747), COEF_CONST(0.9843408180), COEF_CONST(0.9681727381) },

352 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9984497744), COEF_CONST(0.9960279377), COEF_CONST(0.9895738413), COEF_CONST(0.9826814632), COEF_CONST(0.9701058164), COEF_CONST(0.9416098832), COEF_CONST(0.8822105900) },

353 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9959398908), COEF_CONST(0.9896038018), COEF_CONST(0.9727589768), COEF_CONST(0.9548355329), COEF_CONST(0.9223070404), COEF_CONST(0.8494349490), COEF_CONST(0.7013005535) },

354 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9932417400), COEF_CONST(0.9827071856), COEF_CONST(0.9547730996), COEF_CONST(0.9251668930), COEF_CONST(0.8717461589), COEF_CONST(0.7535520592), COEF_CONST(0.5198827312) },

355 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9902068095), COEF_CONST(0.9749613872), COEF_CONST(0.9346538534), COEF_CONST(0.8921231300), COEF_CONST(0.8158851259), COEF_CONST(0.6495964302), COEF_CONST(0.3313370772) },

356 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9880510933), COEF_CONST(0.9694670261), COEF_CONST(0.9204347876), COEF_CONST(0.8688622825), COEF_CONST(0.7768516704), COEF_CONST(0.5782161800), COEF_CONST(0.2069970356) },

357 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9858996945), COEF_CONST(0.9639898866), COEF_CONST(0.9063034786), COEF_CONST(0.8458214608), COEF_CONST(0.7384262300), COEF_CONST(0.5089811277), COEF_CONST(0.0905465944) }

360 c⁄° 
ªÆ_t
 
	gsö_bëas_n‹mÆ
[][8] = {

361 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.0000000000), COEF_CONST(0.0000000000), COEF_CONST(0.0000000000), COEF_CONST(0.0000000000), COEF_CONST(0.0000000000), COEF_CONST(0.0000000000), COEF_CONST(0.0000000000) },

362 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.0287313368), COEF_CONST(-0.0459897147), COEF_CONST(-0.0745074328), COEF_CONST(-0.0960233266), COEF_CONST(-0.1261492408), COEF_CONST(-0.1762757894), COEF_CONST(-0.2502829383) },

363 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.0556601118), COEF_CONST(-0.0890412670), COEF_CONST(-0.1440264301), COEF_CONST(-0.1853028382), COEF_CONST(-0.2426823129), COEF_CONST(-0.3367058477), COEF_CONST(-0.4708550466) },

364 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.0900207420), COEF_CONST(-0.1438204281), COEF_CONST(-0.2318188366), COEF_CONST(-0.2971348264), COEF_CONST(-0.3864579191), COEF_CONST(-0.5276933461), COEF_CONST(-0.7128657193) },

365 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.1160639735), COEF_CONST(-0.1851663774), COEF_CONST(-0.2973353800), COEF_CONST(-0.3795605619), COEF_CONST(-0.4899577884), COEF_CONST(-0.6573882369), COEF_CONST(-0.8542376401) },

366 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.1396082894), COEF_CONST(-0.2223742196), COEF_CONST(-0.3555589603), COEF_CONST(-0.4517923427), COEF_CONST(-0.5782140273), COEF_CONST(-0.7602792104), COEF_CONST(-0.9435124489) },

367 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.1541266914), COEF_CONST(-0.2452217065), COEF_CONST(-0.3908961522), COEF_CONST(-0.4950538699), COEF_CONST(-0.6296836366), COEF_CONST(-0.8158836002), COEF_CONST(-0.9783415698) },

368 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.1673373610), COEF_CONST(-0.2659389001), COEF_CONST(-0.4226275012), COEF_CONST(-0.5334660781), COEF_CONST(-0.6743342664), COEF_CONST(-0.8607776784), COEF_CONST(-0.9958922202) }

371 c⁄° 
ªÆ_t
 
	gcos_bëas_föe
[][8] = {

372 { 
COEF_CONST
(1.0000000000), COEF_CONST(1.0000000000), COEF_CONST(1.0000000000), COEF_CONST(1.0000000000), COEF_CONST(1.0000000000), COEF_CONST(1.0000000000), COEF_CONST(1.0000000000), COEF_CONST(1.0000000000) },

373 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9995871699), COEF_CONST(0.9989419133), COEF_CONST(0.9972204583), COEF_CONST(0.9953790839), COEF_CONST(0.9920112747), COEF_CONST(0.9843408180), COEF_CONST(0.9681727381) },

374 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9984497744), COEF_CONST(0.9960279377), COEF_CONST(0.9895738413), COEF_CONST(0.9826814632), COEF_CONST(0.9701058164), COEF_CONST(0.9416098832), COEF_CONST(0.8822105900) },

375 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9968361371), COEF_CONST(0.9918968104), COEF_CONST(0.9787540479), COEF_CONST(0.9647515190), COEF_CONST(0.9392903010), COEF_CONST(0.8820167114), COEF_CONST(0.7645325390) },

376 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9950262915), COEF_CONST(0.9872675041), COEF_CONST(0.9666584578), COEF_CONST(0.9447588606), COEF_CONST(0.9050918405), COEF_CONST(0.8165997379), COEF_CONST(0.6383824796) },

377 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9932417400), COEF_CONST(0.9827071856), COEF_CONST(0.9547730996), COEF_CONST(0.9251668930), COEF_CONST(0.8717461589), COEF_CONST(0.7535520592), COEF_CONST(0.5198827312) },

378 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9908827998), COEF_CONST(0.9766855904), COEF_CONST(0.9391249214), COEF_CONST(0.8994531782), COEF_CONST(0.8282352693), COEF_CONST(0.6723983174), COEF_CONST(0.3719473225) },

379 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9890240165), COEF_CONST(0.9719459866), COEF_CONST(0.9268448110), COEF_CONST(0.8793388536), COEF_CONST(0.7944023271), COEF_CONST(0.6101812098), COEF_CONST(0.2621501145) },

380 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9876350461), COEF_CONST(0.9684073447), COEF_CONST(0.9176973944), COEF_CONST(0.8643930070), COEF_CONST(0.7693796058), COEF_CONST(0.5646720713), COEF_CONST(0.1838899556) },

381 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9866247085), COEF_CONST(0.9658349704), COEF_CONST(0.9110590761), COEF_CONST(0.8535668048), COEF_CONST(0.7513165426), COEF_CONST(0.5320914819), COEF_CONST(0.1289530943) },

382 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9858996945), COEF_CONST(0.9639898866), COEF_CONST(0.9063034786), COEF_CONST(0.8458214608), COEF_CONST(0.7384262300), COEF_CONST(0.5089811277), COEF_CONST(0.0905465944) },

383 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9851245614), COEF_CONST(0.9620180268), COEF_CONST(0.9012265590), COEF_CONST(0.8375623272), COEF_CONST(0.7247108045), COEF_CONST(0.4845204297), COEF_CONST(0.0504115003) },

384 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9846869856), COEF_CONST(0.9609052357), COEF_CONST(0.8983639533), COEF_CONST(0.8329098386), COEF_CONST(0.7169983441), COEF_CONST(0.4708245354), COEF_CONST(0.0281732509) },

385 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9844406325), COEF_CONST(0.9602788522), COEF_CONST(0.8967533934), COEF_CONST(0.8302936455), COEF_CONST(0.7126658102), COEF_CONST(0.4631492839), COEF_CONST(0.0157851140) },

386 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9843020502), COEF_CONST(0.9599265269), COEF_CONST(0.8958477331), COEF_CONST(0.8288229094), COEF_CONST(0.7102315840), COEF_CONST(0.4588429315), COEF_CONST(0.0088578059) },

387 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9842241136), COEF_CONST(0.9597283916), COEF_CONST(0.8953385094), COEF_CONST(0.8279961409), COEF_CONST(0.7088635748), COEF_CONST(0.4564246834), COEF_CONST(0.0049751355) }

390 c⁄° 
ªÆ_t
 
	gsö_bëas_föe
[][8] = {

391 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.0000000000), COEF_CONST(0.0000000000), COEF_CONST(0.0000000000), COEF_CONST(0.0000000000), COEF_CONST(0.0000000000), COEF_CONST(0.0000000000), COEF_CONST(0.0000000000) },

392 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.0287313368), COEF_CONST(-0.0459897147), COEF_CONST(-0.0745074328), COEF_CONST(-0.0960233266), COEF_CONST(-0.1261492408), COEF_CONST(-0.1762757894), COEF_CONST(-0.2502829383) },

393 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.0556601118), COEF_CONST(-0.0890412670), COEF_CONST(-0.1440264301), COEF_CONST(-0.1853028382), COEF_CONST(-0.2426823129), COEF_CONST(-0.3367058477), COEF_CONST(-0.4708550466) },

394 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.0794840594), COEF_CONST(-0.1270461238), COEF_CONST(-0.2050378347), COEF_CONST(-0.2631625097), COEF_CONST(-0.3431234916), COEF_CONST(-0.4712181245), COEF_CONST(-0.6445851354) },

395 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.0996126459), COEF_CONST(-0.1590687758), COEF_CONST(-0.2560691819), COEF_CONST(-0.3277662204), COEF_CONST(-0.4252161335), COEF_CONST(-0.5772043556), COEF_CONST(-0.7697193058) },

396 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.1160639735), COEF_CONST(-0.1851663774), COEF_CONST(-0.2973353800), COEF_CONST(-0.3795605619), COEF_CONST(-0.4899577884), COEF_CONST(-0.6573882369), COEF_CONST(-0.8542376401) },

397 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.1347266752), COEF_CONST(-0.2146747714), COEF_CONST(-0.3435758752), COEF_CONST(-0.4370171396), COEF_CONST(-0.5603805303), COEF_CONST(-0.7401895046), COEF_CONST(-0.9282538388) },

398 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.1477548470), COEF_CONST(-0.2352041647), COEF_CONST(-0.3754446647), COEF_CONST(-0.4761965776), COEF_CONST(-0.6073919186), COEF_CONST(-0.7922618830), COEF_CONST(-0.9650271071) },

399 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.1567705832), COEF_CONST(-0.2493736450), COEF_CONST(-0.3972801182), COEF_CONST(-0.5028167951), COEF_CONST(-0.6387918458), COEF_CONST(-0.8253153651), COEF_CONST(-0.9829468369) },

400 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.1630082348), COEF_CONST(-0.2591578860), COEF_CONST(-0.4122758299), COEF_CONST(-0.5209834064), COEF_CONST(-0.6599420072), COEF_CONST(-0.8466868694), COEF_CONST(-0.9916506943) },

401 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.1673373610), COEF_CONST(-0.2659389001), COEF_CONST(-0.4226275012), COEF_CONST(-0.5334660781), COEF_CONST(-0.6743342664), COEF_CONST(-0.8607776784), COEF_CONST(-0.9958922202) },

402 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.1718417832), COEF_CONST(-0.2729859267), COEF_CONST(-0.4333482310), COEF_CONST(-0.5463417868), COEF_CONST(-0.6890531546), COEF_CONST(-0.8747799456), COEF_CONST(-0.9987285320) },

403 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.1743316967), COEF_CONST(-0.2768774604), COEF_CONST(-0.4392518725), COEF_CONST(-0.5534087104), COEF_CONST(-0.6970748701), COEF_CONST(-0.8822268738), COEF_CONST(-0.9996030552) },

404 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.1757175038), COEF_CONST(-0.2790421580), COEF_CONST(-0.4425306221), COEF_CONST(-0.5573261722), COEF_CONST(-0.7015037013), COEF_CONST(-0.8862802834), COEF_CONST(-0.9998754073) },

405 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.1764921355), COEF_CONST(-0.2802517850), COEF_CONST(-0.4443611583), COEF_CONST(-0.5595110229), COEF_CONST(-0.7039681080), COEF_CONST(-0.8885173967), COEF_CONST(-0.9999607689) },

406 { 
COEF_CONST
(0.0000000000), COEF_CONST(-0.1769262394), COEF_CONST(-0.2809295540), COEF_CONST(-0.4453862969), COEF_CONST(-0.5607337966), COEF_CONST(-0.7053456119), COEF_CONST(-0.8897620516), COEF_CONST(-0.9999876239) }

409 c⁄° 
ªÆ_t
 
	gsöcos_Æphas_B_n‹mÆ
[][8] = {

410 { 
COEF_CONST
(0.0561454100), COEF_CONST(0.0526385859), COEF_CONST(0.0472937334), COEF_CONST(0.0338410641), COEF_CONST(0.0207261065), COEF_CONST(0.0028205635), COEF_CONST(0.0028205635), COEF_CONST(0.0028205635) },

411 { 
COEF_CONST
(0.1249065138), COEF_CONST(0.1173697697), COEF_CONST(0.1057888284), COEF_CONST(0.0761985131), COEF_CONST(0.0468732723), COEF_CONST(0.0063956103), COEF_CONST(0.0063956103), COEF_CONST(0.0063956103) },

412 { 
COEF_CONST
(0.1956693050), COEF_CONST(0.1846090179), COEF_CONST(0.1673645109), COEF_CONST(0.1220621836), COEF_CONST(0.0757362479), COEF_CONST(0.0103882630), COEF_CONST(0.0103882630), COEF_CONST(0.0103882630) },

413 { 
COEF_CONST
(0.3015113269), COEF_CONST(0.2870525790), COEF_CONST(0.2637738799), COEF_CONST(0.1984573949), COEF_CONST(0.1260749909), COEF_CONST(0.0175600126), COEF_CONST(0.0175600126), COEF_CONST(0.0175600126) },

414 { 
COEF_CONST
(0.4078449476), COEF_CONST(0.3929852420), COEF_CONST(0.3680589270), COEF_CONST(0.2911029124), COEF_CONST(0.1934512363), COEF_CONST(0.0278686716), COEF_CONST(0.0278686716), COEF_CONST(0.0278686716) },

415 { 
COEF_CONST
(0.5336171261), COEF_CONST(0.5226637762), COEF_CONST(0.5033652606), COEF_CONST(0.4349162672), COEF_CONST(0.3224682122), COEF_CONST(0.0521999036), COEF_CONST(0.0521999036), COEF_CONST(0.0521999036) },

416 { 
COEF_CONST
(0.6219832023), COEF_CONST(0.6161847276), COEF_CONST(0.6057251063), COEF_CONST(0.5654342668), COEF_CONST(0.4826149915), COEF_CONST(0.1058044758), COEF_CONST(0.1058044758), COEF_CONST(0.1058044758) },

417 { 
COEF_CONST
(0.7071067657), COEF_CONST(0.7071067657), COEF_CONST(0.7071067657), COEF_CONST(0.7071067657), COEF_CONST(0.7071067657), COEF_CONST(0.7071067657), COEF_CONST(0.7071067657), COEF_CONST(0.7071067657) },

418 { 
COEF_CONST
(0.7830305572), COEF_CONST(0.7876016373), COEF_CONST(0.7956739618), COEF_CONST(0.8247933372), COEF_CONST(0.8758325942), COEF_CONST(0.9943869542), COEF_CONST(0.9943869542), COEF_CONST(0.9943869542) },

419 { 
COEF_CONST
(0.8457261833), COEF_CONST(0.8525388778), COEF_CONST(0.8640737401), COEF_CONST(0.9004708933), COEF_CONST(0.9465802987), COEF_CONST(0.9986366532), COEF_CONST(0.9986366532), COEF_CONST(0.9986366532) },

420 { 
COEF_CONST
(0.9130511848), COEF_CONST(0.9195447612), COEF_CONST(0.9298024282), COEF_CONST(0.9566917233), COEF_CONST(0.9811098801), COEF_CONST(0.9996115928), COEF_CONST(0.9996115928), COEF_CONST(0.9996115928) },

421 { 
COEF_CONST
(0.9534625907), COEF_CONST(0.9579148236), COEF_CONST(0.9645845234), COEF_CONST(0.9801095128), COEF_CONST(0.9920207064), COEF_CONST(0.9998458099), COEF_CONST(0.9998458099), COEF_CONST(0.9998458099) },

422 { 
COEF_CONST
(0.9806699215), COEF_CONST(0.9828120260), COEF_CONST(0.9858950861), COEF_CONST(0.9925224431), COEF_CONST(0.9971278825), COEF_CONST(0.9999460406), COEF_CONST(0.9999460406), COEF_CONST(0.9999460406) },

423 { 
COEF_CONST
(0.9921685024), COEF_CONST(0.9930882705), COEF_CONST(0.9943886135), COEF_CONST(0.9970926648), COEF_CONST(0.9989008403), COEF_CONST(0.9999795479), COEF_CONST(0.9999795479), COEF_CONST(0.9999795479) },

424 { 
COEF_CONST
(0.9984226014), COEF_CONST(0.9986136287), COEF_CONST(0.9988810254), COEF_CONST(0.9994272242), COEF_CONST(0.9997851906), COEF_CONST(0.9999960221), COEF_CONST(0.9999960221), COEF_CONST(0.9999960221) }

427 c⁄° 
ªÆ_t
 
	gsöcos_Æphas_B_föe
[][8] = {

428 { 
COEF_CONST
(0.0031622158), COEF_CONST(0.0029630181), COEF_CONST(0.0026599892), COEF_CONST(0.0019002704), COEF_CONST(0.0011626042), COEF_CONST(0.0001580278), COEF_CONST(0.0001580278), COEF_CONST(0.0001580278) },

429 { 
COEF_CONST
(0.0056232673), COEF_CONST(0.0052689825), COEF_CONST(0.0047302825), COEF_CONST(0.0033791756), COEF_CONST(0.0020674015), COEF_CONST(0.0002811710), COEF_CONST(0.0002811710), COEF_CONST(0.0002811710) },

430 { 
COEF_CONST
(0.0099994225), COEF_CONST(0.0093696693), COEF_CONST(0.0084117414), COEF_CONST(0.0060093796), COEF_CONST(0.0036766009), COEF_CONST(0.0005000392), COEF_CONST(0.0005000392), COEF_CONST(0.0005000392) },

431 { 
COEF_CONST
(0.0177799194), COEF_CONST(0.0166607102), COEF_CONST(0.0149581377), COEF_CONST(0.0106875809), COEF_CONST(0.0065392545), COEF_CONST(0.0008893767), COEF_CONST(0.0008893767), COEF_CONST(0.0008893767) },

432 { 
COEF_CONST
(0.0316069684), COEF_CONST(0.0296211579), COEF_CONST(0.0265987295), COEF_CONST(0.0190113813), COEF_CONST(0.0116349973), COEF_CONST(0.0015826974), COEF_CONST(0.0015826974), COEF_CONST(0.0015826974) },

433 { 
COEF_CONST
(0.0561454100), COEF_CONST(0.0526385859), COEF_CONST(0.0472937334), COEF_CONST(0.0338410641), COEF_CONST(0.0207261065), COEF_CONST(0.0028205635), COEF_CONST(0.0028205635), COEF_CONST(0.0028205635) },

434 { 
COEF_CONST
(0.0791834041), COEF_CONST(0.0742798103), COEF_CONST(0.0667907269), COEF_CONST(0.0478705292), COEF_CONST(0.0293500747), COEF_CONST(0.0039966755), COEF_CONST(0.0039966755), COEF_CONST(0.0039966755) },

435 { 
COEF_CONST
(0.1115021177), COEF_CONST(0.1047141985), COEF_CONST(0.0943053154), COEF_CONST(0.0678120561), COEF_CONST(0.0416669150), COEF_CONST(0.0056813213), COEF_CONST(0.0056813213), COEF_CONST(0.0056813213) },

436 { 
COEF_CONST
(0.1565355066), COEF_CONST(0.1473258371), COEF_CONST(0.1330924027), COEF_CONST(0.0963282233), COEF_CONST(0.0594509113), COEF_CONST(0.0081277946), COEF_CONST(0.0081277946), COEF_CONST(0.0081277946) },

437 { 
COEF_CONST
(0.2184643682), COEF_CONST(0.2064579524), COEF_CONST(0.1876265439), COEF_CONST(0.1375744167), COEF_CONST(0.0856896681), COEF_CONST(0.0117817338), COEF_CONST(0.0117817338), COEF_CONST(0.0117817338) },

438 { 
COEF_CONST
(0.3015113269), COEF_CONST(0.2870525790), COEF_CONST(0.2637738799), COEF_CONST(0.1984573949), COEF_CONST(0.1260749909), COEF_CONST(0.0175600126), COEF_CONST(0.0175600126), COEF_CONST(0.0175600126) },

439 { 
COEF_CONST
(0.3698741335), COEF_CONST(0.3547727297), COEF_CONST(0.3298252076), COEF_CONST(0.2556265829), COEF_CONST(0.1665990017), COEF_CONST(0.0236344541), COEF_CONST(0.0236344541), COEF_CONST(0.0236344541) },

440 { 
COEF_CONST
(0.4480623975), COEF_CONST(0.4339410024), COEF_CONST(0.4098613774), COEF_CONST(0.3322709108), COEF_CONST(0.2266784729), COEF_CONST(0.0334094131), COEF_CONST(0.0334094131), COEF_CONST(0.0334094131) },

441 { 
COEF_CONST
(0.5336171261), COEF_CONST(0.5226637762), COEF_CONST(0.5033652606), COEF_CONST(0.4349162672), COEF_CONST(0.3224682122), COEF_CONST(0.0521999036), COEF_CONST(0.0521999036), COEF_CONST(0.0521999036) },

442 { 
COEF_CONST
(0.6219832023), COEF_CONST(0.6161847276), COEF_CONST(0.6057251063), COEF_CONST(0.5654342668), COEF_CONST(0.4826149915), COEF_CONST(0.1058044758), COEF_CONST(0.1058044758), COEF_CONST(0.1058044758) },

443 { 
COEF_CONST
(0.7071067657), COEF_CONST(0.7071067657), COEF_CONST(0.7071067657), COEF_CONST(0.7071067657), COEF_CONST(0.7071067657), COEF_CONST(0.7071067657), COEF_CONST(0.7071067657), COEF_CONST(0.7071067657) },

444 { 
COEF_CONST
(0.7830305572), COEF_CONST(0.7876016373), COEF_CONST(0.7956739618), COEF_CONST(0.8247933372), COEF_CONST(0.8758325942), COEF_CONST(0.9943869542), COEF_CONST(0.9943869542), COEF_CONST(0.9943869542) },

445 { 
COEF_CONST
(0.8457261833), COEF_CONST(0.8525388778), COEF_CONST(0.8640737401), COEF_CONST(0.9004708933), COEF_CONST(0.9465802987), COEF_CONST(0.9986366532), COEF_CONST(0.9986366532), COEF_CONST(0.9986366532) },

446 { 
COEF_CONST
(0.8940022267), COEF_CONST(0.9009412572), COEF_CONST(0.9121477564), COEF_CONST(0.9431839770), COEF_CONST(0.9739696219), COEF_CONST(0.9994417480), COEF_CONST(0.9994417480), COEF_CONST(0.9994417480) },

447 { 
COEF_CONST
(0.9290818561), COEF_CONST(0.9349525662), COEF_CONST(0.9440420138), COEF_CONST(0.9667755833), COEF_CONST(0.9860247275), COEF_CONST(0.9997206664), COEF_CONST(0.9997206664), COEF_CONST(0.9997206664) },

448 { 
COEF_CONST
(0.9534625907), COEF_CONST(0.9579148236), COEF_CONST(0.9645845234), COEF_CONST(0.9801095128), COEF_CONST(0.9920207064), COEF_CONST(0.9998458099), COEF_CONST(0.9998458099), COEF_CONST(0.9998458099) },

449 { 
COEF_CONST
(0.9758449068), COEF_CONST(0.9784554646), COEF_CONST(0.9822404252), COEF_CONST(0.9904914275), COEF_CONST(0.9963218730), COEF_CONST(0.9999305926), COEF_CONST(0.9999305926), COEF_CONST(0.9999305926) },

450 { 
COEF_CONST
(0.9876723320), COEF_CONST(0.9890880155), COEF_CONST(0.9911036356), COEF_CONST(0.9953496173), COEF_CONST(0.9982312259), COEF_CONST(0.9999669685), COEF_CONST(0.9999669685), COEF_CONST(0.9999669685) },

451 { 
COEF_CONST
(0.9937641889), COEF_CONST(0.9945023501), COEF_CONST(0.9955433130), COEF_CONST(0.9976981117), COEF_CONST(0.9991315558), COEF_CONST(0.9999838610), COEF_CONST(0.9999838610), COEF_CONST(0.9999838610) },

452 { 
COEF_CONST
(0.9968600642), COEF_CONST(0.9972374385), COEF_CONST(0.9977670024), COEF_CONST(0.9988535464), COEF_CONST(0.9995691924), COEF_CONST(0.9999920129), COEF_CONST(0.9999920129), COEF_CONST(0.9999920129) },

453 { 
COEF_CONST
(0.9984226014), COEF_CONST(0.9986136287), COEF_CONST(0.9988810254), COEF_CONST(0.9994272242), COEF_CONST(0.9997851906), COEF_CONST(0.9999960221), COEF_CONST(0.9999960221), COEF_CONST(0.9999960221) },

454 { 
COEF_CONST
(0.9995003746), COEF_CONST(0.9995611974), COEF_CONST(0.9996461891), COEF_CONST(0.9998192657), COEF_CONST(0.9999323103), COEF_CONST(0.9999987475), COEF_CONST(0.9999987475), COEF_CONST(0.9999987475) },

455 { 
COEF_CONST
(0.9998419236), COEF_CONST(0.9998611991), COEF_CONST(0.9998881193), COEF_CONST(0.9999428861), COEF_CONST(0.9999786185), COEF_CONST(0.9999996045), COEF_CONST(0.9999996045), COEF_CONST(0.9999996045) },

456 { 
COEF_CONST
(0.9999500038), COEF_CONST(0.9999561034), COEF_CONST(0.9999646206), COEF_CONST(0.9999819429), COEF_CONST(0.9999932409), COEF_CONST(0.9999998750), COEF_CONST(0.9999998750), COEF_CONST(0.9999998750) },

457 { 
COEF_CONST
(0.9999841890), COEF_CONST(0.9999861183), COEF_CONST(0.9999888121), COEF_CONST(0.9999942902), COEF_CONST(0.9999978628), COEF_CONST(0.9999999605), COEF_CONST(0.9999999605), COEF_CONST(0.9999999605) },

458 { 
COEF_CONST
(0.9999950000), COEF_CONST(0.9999956102), COEF_CONST(0.9999964621), COEF_CONST(0.9999981945), COEF_CONST(0.9999993242), COEF_CONST(0.9999999875), COEF_CONST(0.9999999875), COEF_CONST(0.9999999875) }

461 c⁄° 
ªÆ_t
 
	gcos_gammas_n‹mÆ
[][8] = {

462 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9841239707), COEF_CONST(0.9594738226), COEF_CONST(0.8946843024), COEF_CONST(0.8269341029), COEF_CONST(0.7245688486), COEF_CONST(0.7245688486), COEF_CONST(0.7245688486) },

463 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9849690570), COEF_CONST(0.9617776789), COEF_CONST(0.9020941550), COEF_CONST(0.8436830391), COEF_CONST(0.7846832804), COEF_CONST(0.7846832804), COEF_CONST(0.7846832804) },

464 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9871656089), COEF_CONST(0.9676774734), COEF_CONST(0.9199102884), COEF_CONST(0.8785067015), COEF_CONST(0.8464232214), COEF_CONST(0.8464232214), COEF_CONST(0.8464232214) },

465 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9913533967), COEF_CONST(0.9786000177), COEF_CONST(0.9496063381), COEF_CONST(0.9277157252), COEF_CONST(0.9133354077), COEF_CONST(0.9133354077), COEF_CONST(0.9133354077) },

466 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9948924435), COEF_CONST(0.9875319180), COEF_CONST(0.9716329849), COEF_CONST(0.9604805241), COEF_CONST(0.9535949574), COEF_CONST(0.9535949574), COEF_CONST(0.9535949574) },

467 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9977406278), COEF_CONST(0.9945423840), COEF_CONST(0.9878736667), COEF_CONST(0.9833980494), COEF_CONST(0.9807207440), COEF_CONST(0.9807207440), COEF_CONST(0.9807207440) },

468 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9990607067), COEF_CONST(0.9977417734), COEF_CONST(0.9950323970), COEF_CONST(0.9932453273), COEF_CONST(0.9921884740), COEF_CONST(0.9921884740), COEF_CONST(0.9921884740) },

469 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9998081748), COEF_CONST(0.9995400312), COEF_CONST(0.9989936459), COEF_CONST(0.9986365356), COEF_CONST(0.9984265591), COEF_CONST(0.9984265591), COEF_CONST(0.9984265591) }

472 c⁄° 
ªÆ_t
 
	gcos_gammas_föe
[][8] = {

473 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9841239707), COEF_CONST(0.9594738226), COEF_CONST(0.8946843024), COEF_CONST(0.8269341029), COEF_CONST(0.7245688486), COEF_CONST(0.7245688486), COEF_CONST(0.7245688486) },

474 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9849690570), COEF_CONST(0.9617776789), COEF_CONST(0.9020941550), COEF_CONST(0.8436830391), COEF_CONST(0.7846832804), COEF_CONST(0.7846832804), COEF_CONST(0.7846832804) },

475 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9871656089), COEF_CONST(0.9676774734), COEF_CONST(0.9199102884), COEF_CONST(0.8785067015), COEF_CONST(0.8464232214), COEF_CONST(0.8464232214), COEF_CONST(0.8464232214) },

476 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9899597309), COEF_CONST(0.9750098690), COEF_CONST(0.9402333855), COEF_CONST(0.9129698759), COEF_CONST(0.8943765944), COEF_CONST(0.8943765944), COEF_CONST(0.8943765944) },

477 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9926607607), COEF_CONST(0.9819295710), COEF_CONST(0.9580160104), COEF_CONST(0.9404993670), COEF_CONST(0.9293004472), COEF_CONST(0.9293004472), COEF_CONST(0.9293004472) },

478 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9948924435), COEF_CONST(0.9875319180), COEF_CONST(0.9716329849), COEF_CONST(0.9604805241), COEF_CONST(0.9535949574), COEF_CONST(0.9535949574), COEF_CONST(0.9535949574) },

479 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9972074644), COEF_CONST(0.9932414270), COEF_CONST(0.9849197629), COEF_CONST(0.9792926592), COEF_CONST(0.9759092525), COEF_CONST(0.9759092525), COEF_CONST(0.9759092525) },

480 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9985361982), COEF_CONST(0.9964742028), COEF_CONST(0.9922136306), COEF_CONST(0.9893845420), COEF_CONST(0.9877041371), COEF_CONST(0.9877041371), COEF_CONST(0.9877041371) },

481 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9992494366), COEF_CONST(0.9981967170), COEF_CONST(0.9960386625), COEF_CONST(0.9946185834), COEF_CONST(0.9937800239), COEF_CONST(0.9937800239), COEF_CONST(0.9937800239) },

482 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9996194722), COEF_CONST(0.9990869422), COEF_CONST(0.9979996269), COEF_CONST(0.9972873651), COEF_CONST(0.9968679747), COEF_CONST(0.9968679747), COEF_CONST(0.9968679747) },

483 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9998081748), COEF_CONST(0.9995400312), COEF_CONST(0.9989936459), COEF_CONST(0.9986365356), COEF_CONST(0.9984265591), COEF_CONST(0.9984265591), COEF_CONST(0.9984265591) },

484 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9999390971), COEF_CONST(0.9998540271), COEF_CONST(0.9996809352), COEF_CONST(0.9995679735), COEF_CONST(0.9995016284), COEF_CONST(0.9995016284), COEF_CONST(0.9995016284) },

485 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9999807170), COEF_CONST(0.9999537862), COEF_CONST(0.9998990191), COEF_CONST(0.9998632947), COEF_CONST(0.9998423208), COEF_CONST(0.9998423208), COEF_CONST(0.9998423208) },

486 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9999938979), COEF_CONST(0.9999853814), COEF_CONST(0.9999680568), COEF_CONST(0.9999567596), COEF_CONST(0.9999501270), COEF_CONST(0.9999501270), COEF_CONST(0.9999501270) },

487 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9999980703), COEF_CONST(0.9999953731), COEF_CONST(0.9999898968), COEF_CONST(0.9999863277), COEF_CONST(0.9999842265), COEF_CONST(0.9999842265), COEF_CONST(0.9999842265) },

488 { 
COEF_CONST
(1.0000000000), COEF_CONST(0.9999993891), COEF_CONST(0.9999985397), COEF_CONST(0.9999968037), COEF_CONST(0.9999956786), COEF_CONST(0.9999950155), COEF_CONST(0.9999950155), COEF_CONST(0.9999950155) }

491 c⁄° 
ªÆ_t
 
	gsö_gammas_n‹mÆ
[][8] = {

492 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.1774824223), COEF_CONST(0.2817977711), COEF_CONST(0.4466990028), COEF_CONST(0.5622988435), COEF_CONST(0.6892024258), COEF_CONST(0.6892024258), COEF_CONST(0.6892024258) },

493 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.1727308798), COEF_CONST(0.2738315110), COEF_CONST(0.4315392630), COEF_CONST(0.5368416242), COEF_CONST(0.6198968861), COEF_CONST(0.6198968861), COEF_CONST(0.6198968861) },

494 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.1596999079), COEF_CONST(0.2521910140), COEF_CONST(0.3921288836), COEF_CONST(0.4777300236), COEF_CONST(0.5325107795), COEF_CONST(0.5325107795), COEF_CONST(0.5325107795) },

495 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.1312190642), COEF_CONST(0.2057717310), COEF_CONST(0.3134450552), COEF_CONST(0.3732874674), COEF_CONST(0.4072080955), COEF_CONST(0.4072080955), COEF_CONST(0.4072080955) },

496 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.1009407043), COEF_CONST(0.1574189028), COEF_CONST(0.2364938532), COEF_CONST(0.2783471983), COEF_CONST(0.3010924396), COEF_CONST(0.3010924396), COEF_CONST(0.3010924396) },

497 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.0671836269), COEF_CONST(0.1043333428), COEF_CONST(0.1552598422), COEF_CONST(0.1814615013), COEF_CONST(0.1954144885), COEF_CONST(0.1954144885), COEF_CONST(0.1954144885) },

498 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.0433324862), COEF_CONST(0.0671666110), COEF_CONST(0.0995516398), COEF_CONST(0.1160332699), COEF_CONST(0.1247478739), COEF_CONST(0.1247478739), COEF_CONST(0.1247478739) },

499 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.0195860576), COEF_CONST(0.0303269852), COEF_CONST(0.0448519274), COEF_CONST(0.0522022017), COEF_CONST(0.0560750040), COEF_CONST(0.0560750040), COEF_CONST(0.0560750040) }

502 c⁄° 
ªÆ_t
 
	gsö_gammas_föe
[][8] = {

503 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.1774824223), COEF_CONST(0.2817977711), COEF_CONST(0.4466990028), COEF_CONST(0.5622988435), COEF_CONST(0.6892024258), COEF_CONST(0.6892024258), COEF_CONST(0.6892024258) },

504 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.1727308798), COEF_CONST(0.2738315110), COEF_CONST(0.4315392630), COEF_CONST(0.5368416242), COEF_CONST(0.6198968861), COEF_CONST(0.6198968861), COEF_CONST(0.6198968861) },

505 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.1596999079), COEF_CONST(0.2521910140), COEF_CONST(0.3921288836), COEF_CONST(0.4777300236), COEF_CONST(0.5325107795), COEF_CONST(0.5325107795), COEF_CONST(0.5325107795) },

506 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.1413496768), COEF_CONST(0.2221615526), COEF_CONST(0.3405307340), COEF_CONST(0.4080269669), COEF_CONST(0.4473147744), COEF_CONST(0.4473147744), COEF_CONST(0.4473147744) },

507 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.1209322714), COEF_CONST(0.1892467110), COEF_CONST(0.2867147079), COEF_CONST(0.3397954394), COEF_CONST(0.3693246252), COEF_CONST(0.3693246252), COEF_CONST(0.3693246252) },

508 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.1009407043), COEF_CONST(0.1574189028), COEF_CONST(0.2364938532), COEF_CONST(0.2783471983), COEF_CONST(0.3010924396), COEF_CONST(0.3010924396), COEF_CONST(0.3010924396) },

509 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.0746811420), COEF_CONST(0.1160666523), COEF_CONST(0.1730117353), COEF_CONST(0.2024497161), COEF_CONST(0.2181768341), COEF_CONST(0.2181768341), COEF_CONST(0.2181768341) },

510 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.0540875291), COEF_CONST(0.0838997203), COEF_CONST(0.1245476266), COEF_CONST(0.1453211203), COEF_CONST(0.1563346972), COEF_CONST(0.1563346972), COEF_CONST(0.1563346972) },

511 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.0387371058), COEF_CONST(0.0600276114), COEF_CONST(0.0889212171), COEF_CONST(0.1036044086), COEF_CONST(0.1113609634), COEF_CONST(0.1113609634), COEF_CONST(0.1113609634) },

512 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.0275846110), COEF_CONST(0.0427233177), COEF_CONST(0.0632198125), COEF_CONST(0.0736064637), COEF_CONST(0.0790837596), COEF_CONST(0.0790837596), COEF_CONST(0.0790837596) },

513 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.0195860576), COEF_CONST(0.0303269852), COEF_CONST(0.0448519274), COEF_CONST(0.0522022017), COEF_CONST(0.0560750040), COEF_CONST(0.0560750040), COEF_CONST(0.0560750040) },

514 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.0110363955), COEF_CONST(0.0170857974), COEF_CONST(0.0252592108), COEF_CONST(0.0293916021), COEF_CONST(0.0315673054), COEF_CONST(0.0315673054), COEF_CONST(0.0315673054) },

515 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.0062101284), COEF_CONST(0.0096138203), COEF_CONST(0.0142109649), COEF_CONST(0.0165345659), COEF_CONST(0.0177576316), COEF_CONST(0.0177576316), COEF_CONST(0.0177576316) },

516 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.0034934509), COEF_CONST(0.0054071189), COEF_CONST(0.0079928316), COEF_CONST(0.0092994041), COEF_CONST(0.0099871631), COEF_CONST(0.0099871631), COEF_CONST(0.0099871631) },

517 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.0019645397), COEF_CONST(0.0030419905), COEF_CONST(0.0044951511), COEF_CONST(0.0052291853), COEF_CONST(0.0056166498), COEF_CONST(0.0056166498), COEF_CONST(0.0056166498) },

518 { 
COEF_CONST
(0.0000000000), COEF_CONST(0.0011053943), COEF_CONST(0.0017089869), COEF_CONST(0.0025283670), COEF_CONST(0.0029398552), COEF_CONST(0.0031573685), COEF_CONST(0.0031573685), COEF_CONST(0.0031573685) }

521 c⁄° 
ªÆ_t
 
	gsf_iid_n‹mÆ
[] = {

522 
COEF_CONST
(1.4119827747), COEF_CONST(1.4031381607), COEF_CONST(1.3868767023),

523 
COEF_CONST
(1.3483997583), COEF_CONST(1.2912493944), COEF_CONST(1.1960374117),

524 
COEF_CONST
(1.1073724031), COEF_CONST(1.0000000000), COEF_CONST(0.8796171546),

525 
COEF_CONST
(0.7546485662), COEF_CONST(0.5767799020), COEF_CONST(0.4264014363),

526 
COEF_CONST
(0.2767182887), COEF_CONST(0.1766446233), COEF_CONST(0.0794016272)

529 c⁄° 
ªÆ_t
 
	gsf_iid_föe
[] = {

530 
COEF_CONST
(1.4142065048), COEF_CONST(1.4141912460), COEF_CONST(1.4141428471),

531 
COEF_CONST
(1.4139900208), COEF_CONST(1.4135069847), COEF_CONST(1.4119827747),

532 
COEF_CONST
(1.4097729921), COEF_CONST(1.4053947926), COEF_CONST(1.3967796564),

533 
COEF_CONST
(1.3800530434), COEF_CONST(1.3483997583), COEF_CONST(1.3139201403),

534 
COEF_CONST
(1.2643101215), COEF_CONST(1.1960374117), COEF_CONST(1.1073724031),

535 
COEF_CONST
(1.0000000000), COEF_CONST(0.8796171546), COEF_CONST(0.7546485662),

536 
COEF_CONST
(0.6336560845), COEF_CONST(0.5230810642), COEF_CONST(0.4264014363),

537 
COEF_CONST
(0.3089554012), COEF_CONST(0.2213746458), COEF_CONST(0.1576878875),

538 
COEF_CONST
(0.1119822487), COEF_CONST(0.0794016272), COEF_CONST(0.0446990170),

539 
COEF_CONST
(0.0251446925), COEF_CONST(0.0141414283), COEF_CONST(0.0079525812),

540 
COEF_CONST
(0.0044721137)

543 #ifde‡
__˝lu•lus


	@pulse.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 
	~"sy¡ax.h
"

32 
	~"pul£.h
"

34 
uöt8_t
 
	$pul£_decode
(
ic_°ªam
 *
ics
, 
öt16_t
 *
•ec_d©a
, 
uöt16_t
 
‰amñí
)

36 
uöt8_t
 
i
;

37 
uöt16_t
 
k
;

38 
pul£_öfo
 *
pul
 = &(
ics
->pul);

40 
k
 = 
ics
->
swb_off£t
[
pul
->
pul£_°¨t_sfb
];

42 
i
 = 0; i <
pul
->
numbî_pul£
; i++)

44 
k
 +
pul
->
pul£_off£t
[
i
];

46 i‡(
k
 >
‰amñí
)

49 i‡(
•ec_d©a
[
k
] > 0)

50 
•ec_d©a
[
k
] +
pul
->
pul£_amp
[
i
];

52 
•ec_d©a
[
k
] -
pul
->
pul£_amp
[
i
];

56 
	}
}

	@pulse.h

28 #i‚de‡
__PULSE_H__


29 
	#__PULSE_H__


	)

31 #ifde‡
__˝lu•lus


35 
uöt8_t
 
pul£_decode
(
ic_°ªam
 *
ics
, 
öt16_t
 *
•ec_c€f
, 
uöt16_t
 
‰amñí
);

37 #ifde‡
__˝lu•lus


	@rvlc.c

41 
	~"comm⁄.h
"

42 
	~"°ru˘s.h
"

44 
	~<°dlib.h
>

46 
	~"sy¡ax.h
"

47 
	~"bôs.h
"

48 
	~"rvlc.h
"

51 #ifde‡
ERROR_RESILIENCE


56 
uöt8_t
 
rvlc_decode_sf_f‹w¨d
(
ic_°ªam
 *
ics
,

57 
bôfûe
 *
ld_sf
,

58 
bôfûe
 *
ld_esc
,

59 
uöt8_t
 *
is_u£d
);

61 
uöt8_t
 
rvlc_decode_sf_ªvî£
(
ic_°ªam
 *
ics
,

62 
bôfûe
 *
ld_sf
,

63 
bôfûe
 *
ld_esc
,

64 
uöt8_t
 
is_u£d
);

66 
öt8_t
 
rvlc_huffm™_sf
(
bôfûe
 *
ld_sf
, bôfûê*
ld_esc
,

67 
öt8_t
 
dúe˘i⁄
);

68 
öt8_t
 
rvlc_huffm™_esc
(
bôfûe
 *
ld_esc
, i¡8_à
dúe˘i⁄
);

71 
uöt8_t
 
	$rvlc_sˇÀ_Á˘‹_d©a
(
ic_°ªam
 *
ics
, 
bôfûe
 *
ld
)

73 
uöt8_t
 
bôs
 = 9;

75 
ics
->
sf_c⁄˚Æmít
 = 
	`Áad_gë1bô
(
ld


76 
	`DEBUGVAR
(1,149,"rvlc_scale_factor_data(): sf_concealment"));

77 
ics
->
ªv_globÆ_gaö
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 8

78 
	`DEBUGVAR
(1,150,"rvlc_scale_factor_data():Ñev_global_gain"));

80 i‡(
ics
->
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
)

81 
bôs
 = 11;

84 
ics
->
Àngth_of_rvlc_sf
 = (
uöt16_t
)
	`Áad_gëbôs
(
ld
, 
bôs


85 
	`DEBUGVAR
(1,151,"rvlc_scale_factor_data():Üength_of_rvlc_sf"));

87 i‡(
ics
->
noi£_u£d
)

89 
ics
->
dpcm_noi£_ƒg
 = (
uöt16_t
)
	`Áad_gëbôs
(
ld
, 9

90 
	`DEBUGVAR
(1,152,"rvlc_scale_factor_data(): dpcm_noise_nrg"));

92 
ics
->
Àngth_of_rvlc_sf
 -= 9;

95 
ics
->
sf_esˇ≥s_¥e£¡
 = 
	`Áad_gë1bô
(
ld


96 
	`DEBUGVAR
(1,153,"rvlc_scale_factor_data(): sf_escapes_present"));

98 i‡(
ics
->
sf_esˇ≥s_¥e£¡
)

100 
ics
->
Àngth_of_rvlc_esˇ≥s
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 8

101 
	`DEBUGVAR
(1,154,"rvlc_scale_factor_data():Üength_of_rvlc_escapes"));

104 i‡(
ics
->
noi£_u£d
)

106 
ics
->
dpcm_noi£_œ°_posôi⁄
 = (
uöt16_t
)
	`Áad_gëbôs
(
ld
, 9

107 
	`DEBUGVAR
(1,155,"rvlc_scale_factor_data(): dpcm_noise_last_position"));

111 
	}
}

113 
uöt8_t
 
	$rvlc_decode_sˇÀ_Á˘‹s
(
ic_°ªam
 *
ics
, 
bôfûe
 *
ld
)

115 
uöt8_t
 
ªsu…
;

116 
uöt8_t
 
öãnsôy_u£d
 = 0;

117 
uöt8_t
 *
rvlc_sf_buf„r
 = 
NULL
;

118 
uöt8_t
 *
rvlc_esc_buf„r
 = 
NULL
;

119 
bôfûe
 
ld_rvlc_sf
, 
ld_rvlc_esc
;

122 i‡(
ics
->
Àngth_of_rvlc_sf
 > 0)

127 
rvlc_sf_buf„r
 = 
	`Áad_gëbôbuf„r
(
ld
, 
ics
->
Àngth_of_rvlc_sf


128 
	`DEBUGVAR
(1,156,"rvlc_decode_scale_factors(): bitbuffer:Üength_of_rvlc_sf"));

130 
	`Áad_öôbôs
(&
ld_rvlc_sf
, (*)
rvlc_sf_buf„r
, 
	`bô2byã
(
ics
->
Àngth_of_rvlc_sf
));

135 i‡(
ics
->
sf_esˇ≥s_¥e£¡
)

140 
rvlc_esc_buf„r
 = 
	`Áad_gëbôbuf„r
(
ld
, 
ics
->
Àngth_of_rvlc_esˇ≥s


141 
	`DEBUGVAR
(1,157,"rvlc_decode_scale_factors(): bitbuffer:Üength_of_rvlc_escapes"));

143 
	`Áad_öôbôs
(&
ld_rvlc_esc
, (*)
rvlc_esc_buf„r
, 
	`bô2byã
(
ics
->
Àngth_of_rvlc_esˇ≥s
));

149 
ªsu…
 = 
	`rvlc_decode_sf_f‹w¨d
(
ics
, &
ld_rvlc_sf
,

150 &
ld_rvlc_esc
, &
öãnsôy_u£d
);

155 i‡(
rvlc_esc_buf„r
Ë
	`Áad_‰ì
(rvlc_esc_buffer);

156 i‡(
rvlc_sf_buf„r
Ë
	`Áad_‰ì
(rvlc_sf_buffer);

158 i‡(
ics
->
Àngth_of_rvlc_sf
 > 0)

159 
	`Áad_ídbôs
(&
ld_rvlc_sf
);

160 i‡(
ics
->
sf_esˇ≥s_¥e£¡
)

161 
	`Áad_ídbôs
(&
ld_rvlc_esc
);

163  
ªsu…
;

164 
	}
}

166 
uöt8_t
 
	$rvlc_decode_sf_f‹w¨d
(
ic_°ªam
 *
ics
, 
bôfûe
 *
ld_sf
, bôfûê*
ld_esc
,

167 
uöt8_t
 *
öãnsôy_u£d
)

169 
öt8_t
 
g
, 
sfb
;

170 
öt8_t
 
t
 = 0;

171 
öt8_t
 
îr‹
 = 0;

172 
öt8_t
 
noi£_pcm_Êag
 = 1;

174 
öt16_t
 
sˇÀ_Á˘‹
 = 
ics
->
globÆ_gaö
;

175 
öt16_t
 
is_posôi⁄
 = 0;

176 
öt16_t
 
noi£_íîgy
 = 
ics
->
globÆ_gaö
 - 90 - 256;

178 #ifde‡
PRINT_RVLC


179 
	`¥ötf
("\nglobÆ_gaö: %d\n", 
ics
->
globÆ_gaö
);

182 
g
 = 0; g < 
ics
->
num_wödow_groups
; g++)

184 
sfb
 = 0; sfb < 
ics
->
max_sfb
; sfb++)

186 i‡(
îr‹
)

188 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] = 0;

190 
ics
->
sfb_cb
[
g
][
sfb
])

192 
ZERO_HCB
:

193 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] = 0;

195 
INTENSITY_HCB
:

196 
INTENSITY_HCB2
:

198 *
öãnsôy_u£d
 = 1;

201 
t
 = 
	`rvlc_huffm™_sf
(
ld_sf
, 
ld_esc
, +1);

203 
is_posôi⁄
 +
t
;

204 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] = 
is_posôi⁄
;

207 
NOISE_HCB
:

210 i‡(
noi£_pcm_Êag
)

212 
öt16_t
 
n
 = 
ics
->
dpcm_noi£_ƒg
;

213 
noi£_pcm_Êag
 = 0;

214 
noi£_íîgy
 +
n
;

216 
t
 = 
	`rvlc_huffm™_sf
(
ld_sf
, 
ld_esc
, +1);

217 
noi£_íîgy
 +
t
;

220 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] = 
noi£_íîgy
;

226 
t
 = 
	`rvlc_huffm™_sf
(
ld_sf
, 
ld_esc
, +1);

228 
sˇÀ_Á˘‹
 +
t
;

229 i‡(
sˇÀ_Á˘‹
 < 0)

232 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] = 
sˇÀ_Á˘‹
;

236 #ifde‡
PRINT_RVLC


237 
	`¥ötf
("%3d:%4d%4d\n", 
sfb
, 
ics
->
sfb_cb
[
g
][sfb],

238 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
]);

240 i‡(
t
 == 99)

242 
îr‹
 = 1;

247 #ifde‡
PRINT_RVLC


248 
	`¥ötf
("\n\n");

252 
	}
}

255 
uöt8_t
 
	$rvlc_decode_sf_ªvî£
(
ic_°ªam
 *
ics
, 
bôfûe
 *
ld_sf
, bôfûê*
ld_esc
,

256 
uöt8_t
 
öãnsôy_u£d
)

258 
öt8_t
 
g
, 
sfb
;

259 
öt8_t
 
t
 = 0;

260 
öt8_t
 
îr‹
 = 0;

261 
öt8_t
 
noi£_pcm_Êag
 = 1, 
is_pcm_Êag
 = 1, 
sf_pcm_Êag
 = 1;

263 
öt16_t
 
sˇÀ_Á˘‹
 = 
ics
->
ªv_globÆ_gaö
;

264 
öt16_t
 
is_posôi⁄
 = 0;

265 
öt16_t
 
noi£_íîgy
 = 
ics
->
ªv_globÆ_gaö
;

267 #ifde‡
PRINT_RVLC


268 
	`¥ötf
("\ƒev_globÆ_gaö: %d\n", 
ics
->
ªv_globÆ_gaö
);

271 i‡(
öãnsôy_u£d
)

273 
is_posôi⁄
 = 
	`rvlc_huffm™_sf
(
ld_sf
, 
ld_esc
, -1);

274 #ifde‡
PRINT_RVLC


275 
	`¥ötf
("is_posôi⁄: %d\n", 
is_posôi⁄
);

279 
g
 = 
ics
->
num_wödow_groups
-1; g >= 0; g--)

281 
sfb
 = 
ics
->
max_sfb
-1; sfb >= 0; sfb--)

283 i‡(
îr‹
)

285 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] = 0;

287 
ics
->
sfb_cb
[
g
][
sfb
])

289 
ZERO_HCB
:

290 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] = 0;

292 
INTENSITY_HCB
:

293 
INTENSITY_HCB2
:

295 i‡(
is_pcm_Êag
)

297 
is_pcm_Êag
 = 0;

298 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] = 
is_posôi⁄
;

300 
t
 = 
	`rvlc_huffm™_sf
(
ld_sf
, 
ld_esc
, -1);

301 
is_posôi⁄
 -
t
;

303 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] = (
uöt8_t
)
is_posôi⁄
;

306 
NOISE_HCB
:

309 i‡(
noi£_pcm_Êag
)

311 
noi£_pcm_Êag
 = 0;

312 
noi£_íîgy
 = 
ics
->
dpcm_noi£_œ°_posôi⁄
;

314 
t
 = 
	`rvlc_huffm™_sf
(
ld_sf
, 
ld_esc
, -1);

315 
noi£_íîgy
 -
t
;

318 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] = (
uöt8_t
)
noi£_íîgy
;

322 i‡(
sf_pcm_Êag
 || (
sfb
 == 0))

324 
sf_pcm_Êag
 = 0;

325 i‡(
sfb
 == 0)

326 
sˇÀ_Á˘‹
 = 
ics
->
globÆ_gaö
;

329 
t
 = 
	`rvlc_huffm™_sf
(
ld_sf
, 
ld_esc
, -1);

330 
sˇÀ_Á˘‹
 -
t
;

333 i‡(
sˇÀ_Á˘‹
 < 0)

336 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] = (
uöt8_t
)
sˇÀ_Á˘‹
;

339 #ifde‡
PRINT_RVLC


340 
	`¥ötf
("%3d:%4d%4d\n", 
sfb
, 
ics
->
sfb_cb
[
g
][sfb],

341 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
]);

343 i‡(
t
 == 99)

345 
îr‹
 = 1;

351 #ifde‡
PRINT_RVLC


352 
	`¥ötf
("\n\n");

356 
	}
}

360 
rvlc_huff_èbÀ
 
	gbook_rvlc
[] = {

388 
rvlc_huff_èbÀ
 
	gbook_esˇ≥
[] = {

447 
öt8_t
 
	$rvlc_huffm™_sf
(
bôfûe
 *
ld_sf
, bôfûê*
ld_esc
,

448 
öt8_t
 
dúe˘i⁄
)

450 
uöt8_t
 
i
, 
j
;

451 
öt8_t
 
ödex
;

452 
uöt32_t
 
cw
;

453 
rvlc_huff_èbÀ
 *
h
 = 
book_rvlc
;

455 
i
 = 
h
->
Àn
;

456 i‡(
dúe˘i⁄
 > 0)

457 
cw
 = 
	`Áad_gëbôs
(
ld_sf
, 
i
 
	`DEBUGVAR
(1,0,""));

459 
cw
 = 
	`Áad_gëbôs_ªv
(
ld_sf
, 
i
 
	`DEBUGVAR
(1,0,""));

461 (
cw
 !
h
->cw)

462 && (
i
 < 10))

464 
h
++;

465 
j
 = 
h
->
Àn
-
i
;

466 
i
 +
j
;

467 
cw
 <<
j
;

468 i‡(
dúe˘i⁄
 > 0)

469 
cw
 |
	`Áad_gëbôs
(
ld_sf
, 
j
 
	`DEBUGVAR
(1,0,""));

471 
cw
 |
	`Áad_gëbôs_ªv
(
ld_sf
, 
j
 
	`DEBUGVAR
(1,0,""));

474 
ödex
 = 
h
->index;

476 i‡(
ödex
 =+
ESC_VAL
)

478 
öt8_t
 
esc
 = 
	`rvlc_huffm™_esc
(
ld_esc
, 
dúe˘i⁄
);

479 i‡(
esc
 == 99)

481 
ödex
 +
esc
;

482 #ifde‡
PRINT_RVLC


483 
	`¥ötf
("esc: %d - ", 
esc
);

486 i‡(
ödex
 =-
ESC_VAL
)

488 
öt8_t
 
esc
 = 
	`rvlc_huffm™_esc
(
ld_esc
, 
dúe˘i⁄
);

489 i‡(
esc
 == 99)

491 
ödex
 -
esc
;

492 #ifde‡
PRINT_RVLC


493 
	`¥ötf
("esc: %d - ", 
esc
);

497  
ödex
;

498 
	}
}

500 
öt8_t
 
	$rvlc_huffm™_esc
(
bôfûe
 *
ld
,

501 
öt8_t
 
dúe˘i⁄
)

503 
uöt8_t
 
i
, 
j
;

504 
uöt32_t
 
cw
;

505 
rvlc_huff_èbÀ
 *
h
 = 
book_esˇ≥
;

507 
i
 = 
h
->
Àn
;

508 i‡(
dúe˘i⁄
 > 0)

509 
cw
 = 
	`Áad_gëbôs
(
ld
, 
i
 
	`DEBUGVAR
(1,0,""));

511 
cw
 = 
	`Áad_gëbôs_ªv
(
ld
, 
i
 
	`DEBUGVAR
(1,0,""));

513 (
cw
 !
h
->cw)

514 && (
i
 < 21))

516 
h
++;

517 
j
 = 
h
->
Àn
-
i
;

518 
i
 +
j
;

519 
cw
 <<
j
;

520 i‡(
dúe˘i⁄
 > 0)

521 
cw
 |
	`Áad_gëbôs
(
ld
, 
j
 
	`DEBUGVAR
(1,0,""));

523 
cw
 |
	`Áad_gëbôs_ªv
(
ld
, 
j
 
	`DEBUGVAR
(1,0,""));

526  
h
->
ödex
;

527 
	}
}

	@rvlc.h

28 #i‚de‡
__RVLC_SCF_H__


29 
	#__RVLC_SCF_H__


	)

31 #ifde‡
__˝lu•lus


37 
öt8_t
 
ödex
;

38 
uöt8_t
 
Àn
;

39 
uöt32_t
 
cw
;

40 } 
	trvlc_huff_èbÀ
;

43 
	#ESC_VAL
 7

	)

46 
uöt8_t
 
rvlc_sˇÀ_Á˘‹_d©a
(
ic_°ªam
 *
ics
, 
bôfûe
 *
ld
);

47 
uöt8_t
 
rvlc_decode_sˇÀ_Á˘‹s
(
ic_°ªam
 *
ics
, 
bôfûe
 *
ld
);

50 #ifde‡
__˝lu•lus


	@sbr_dct.c

28 
	~"comm⁄.h
"

30 #ifde‡
SBR_DEC


32 #ifde‡
_MSC_VER


33 #¥agm®
w¨nög
(
dißbÀ
:4305)

34 #¥agm®
w¨nög
(
dißbÀ
:4244)

38 
	~"sbr_d˘.h
"

40 
	$DCT4_32
(
ªÆ_t
 *
y
,Ñól_à*
x
)

42 
ªÆ_t
 
f0
, 
f1
, 
f2
, 
f3
, 
f4
, 
f5
, 
f6
, 
f7
, 
f8
, 
f9
, 
f10
;

43 
ªÆ_t
 
f11
, 
f12
, 
f13
, 
f14
, 
f15
, 
f16
, 
f17
, 
f18
, 
f19
, 
f20
;

44 
ªÆ_t
 
f21
, 
f22
, 
f23
, 
f24
, 
f25
, 
f26
, 
f27
, 
f28
, 
f29
, 
f30
;

45 
ªÆ_t
 
f31
, 
f32
, 
f33
, 
f34
, 
f35
, 
f36
, 
f37
, 
f38
, 
f39
, 
f40
;

46 
ªÆ_t
 
f41
, 
f42
, 
f43
, 
f44
, 
f45
, 
f46
, 
f47
, 
f48
, 
f49
, 
f50
;

47 
ªÆ_t
 
f51
, 
f52
, 
f53
, 
f54
, 
f55
, 
f56
, 
f57
, 
f58
, 
f59
, 
f60
;

48 
ªÆ_t
 
f61
, 
f62
, 
f63
, 
f64
, 
f65
, 
f66
, 
f67
, 
f68
, 
f69
, 
f70
;

49 
ªÆ_t
 
f71
, 
f72
, 
f73
, 
f74
, 
f75
, 
f76
, 
f77
, 
f78
, 
f79
, 
f80
;

50 
ªÆ_t
 
f81
, 
f82
, 
f83
, 
f84
, 
f85
, 
f86
, 
f87
, 
f88
, 
f89
, 
f90
;

51 
ªÆ_t
 
f91
, 
f92
, 
f93
, 
f94
, 
f95
, 
f96
, 
f97
, 
f98
, 
f99
, 
f100
;

52 
ªÆ_t
 
f101
, 
f102
, 
f103
, 
f104
, 
f105
, 
f106
, 
f107
, 
f108
, 
f109
, 
f110
;

53 
ªÆ_t
 
f111
, 
f112
, 
f113
, 
f114
, 
f115
, 
f116
, 
f117
, 
f118
, 
f119
, 
f120
;

54 
ªÆ_t
 
f121
, 
f122
, 
f123
, 
f124
, 
f125
, 
f126
, 
f127
, 
f128
, 
f129
, 
f130
;

55 
ªÆ_t
 
f131
, 
f132
, 
f133
, 
f134
, 
f135
, 
f136
, 
f137
, 
f138
, 
f139
, 
f140
;

56 
ªÆ_t
 
f141
, 
f142
, 
f143
, 
f144
, 
f145
, 
f146
, 
f147
, 
f148
, 
f149
, 
f150
;

57 
ªÆ_t
 
f151
, 
f152
, 
f153
, 
f154
, 
f155
, 
f156
, 
f157
, 
f158
, 
f159
, 
f160
;

58 
ªÆ_t
 
f161
, 
f162
, 
f163
, 
f164
, 
f165
, 
f166
, 
f167
, 
f168
, 
f169
, 
f170
;

59 
ªÆ_t
 
f171
, 
f172
, 
f173
, 
f174
, 
f175
, 
f176
, 
f177
, 
f178
, 
f179
, 
f180
;

60 
ªÆ_t
 
f181
, 
f182
, 
f183
, 
f184
, 
f185
, 
f186
, 
f187
, 
f188
, 
f189
, 
f190
;

61 
ªÆ_t
 
f191
, 
f192
, 
f193
, 
f194
, 
f195
, 
f196
, 
f197
, 
f198
, 
f199
, 
f200
;

62 
ªÆ_t
 
f201
, 
f202
, 
f203
, 
f204
, 
f205
, 
f206
, 
f207
, 
f208
, 
f209
, 
f210
;

63 
ªÆ_t
 
f211
, 
f212
, 
f213
, 
f214
, 
f215
, 
f216
, 
f217
, 
f218
, 
f219
, 
f220
;

64 
ªÆ_t
 
f221
, 
f222
, 
f223
, 
f224
, 
f225
, 
f226
, 
f227
, 
f228
, 
f229
, 
f230
;

65 
ªÆ_t
 
f231
, 
f232
, 
f233
, 
f234
, 
f235
, 
f236
, 
f237
, 
f238
, 
f239
, 
f240
;

66 
ªÆ_t
 
f241
, 
f242
, 
f243
, 
f244
, 
f245
, 
f246
, 
f247
, 
f248
, 
f249
, 
f250
;

67 
ªÆ_t
 
f251
, 
f252
, 
f253
, 
f254
, 
f255
, 
f256
, 
f257
, 
f258
, 
f259
, 
f260
;

68 
ªÆ_t
 
f261
, 
f262
, 
f263
, 
f264
, 
f265
, 
f266
, 
f267
, 
f268
, 
f269
, 
f270
;

69 
ªÆ_t
 
f271
, 
f272
, 
f273
, 
f274
, 
f275
, 
f276
, 
f277
, 
f278
, 
f279
, 
f280
;

70 
ªÆ_t
 
f281
, 
f282
, 
f283
, 
f284
, 
f285
, 
f286
, 
f287
, 
f288
, 
f289
, 
f290
;

71 
ªÆ_t
 
f291
, 
f292
, 
f293
, 
f294
, 
f295
, 
f296
, 
f297
, 
f298
, 
f299
, 
f300
;

72 
ªÆ_t
 
f301
, 
f302
, 
f303
, 
f304
, 
f305
, 
f306
, 
f307
, 
f310
, 
f311
, 
f312
;

73 
ªÆ_t
 
f313
, 
f316
, 
f317
, 
f318
, 
f319
, 
f322
, 
f323
, 
f324
, 
f325
, 
f328
;

74 
ªÆ_t
 
f329
, 
f330
, 
f331
, 
f334
, 
f335
, 
f336
, 
f337
, 
f340
, 
f341
, 
f342
;

75 
ªÆ_t
 
f343
, 
f346
, 
f347
, 
f348
, 
f349
, 
f352
, 
f353
, 
f354
, 
f355
, 
f358
;

76 
ªÆ_t
 
f359
, 
f360
, 
f361
, 
f364
, 
f365
, 
f366
, 
f367
, 
f370
, 
f371
, 
f372
;

77 
ªÆ_t
 
f373
, 
f376
, 
f377
, 
f378
, 
f379
, 
f382
, 
f383
, 
f384
, 
f385
, 
f388
;

78 
ªÆ_t
 
f389
, 
f390
, 
f391
, 
f394
, 
f395
, 
f396
, 
f397
;

80 
f0
 = 
x
[15] - x[16];

81 
f1
 = 
x
[15] + x[16];

82 
f2
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f1
);

83 
f3
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f0
);

84 
f4
 = 
x
[8] - x[23];

85 
f5
 = 
x
[8] + x[23];

86 
f6
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f5
);

87 
f7
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f4
);

88 
f8
 = 
x
[12] - x[19];

89 
f9
 = 
x
[12] + x[19];

90 
f10
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f9
);

91 
f11
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f8
);

92 
f12
 = 
x
[11] - x[20];

93 
f13
 = 
x
[11] + x[20];

94 
f14
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f13
);

95 
f15
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f12
);

96 
f16
 = 
x
[14] - x[17];

97 
f17
 = 
x
[14] + x[17];

98 
f18
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f17
);

99 
f19
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f16
);

100 
f20
 = 
x
[9] - x[22];

101 
f21
 = 
x
[9] + x[22];

102 
f22
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f21
);

103 
f23
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f20
);

104 
f24
 = 
x
[13] - x[18];

105 
f25
 = 
x
[13] + x[18];

106 
f26
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f25
);

107 
f27
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f24
);

108 
f28
 = 
x
[10] - x[21];

109 
f29
 = 
x
[10] + x[21];

110 
f30
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f29
);

111 
f31
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f28
);

112 
f32
 = 
x
[0] - 
f2
;

113 
f33
 = 
x
[0] + 
f2
;

114 
f34
 = 
x
[31] - 
f3
;

115 
f35
 = 
x
[31] + 
f3
;

116 
f36
 = 
x
[7] - 
f6
;

117 
f37
 = 
x
[7] + 
f6
;

118 
f38
 = 
x
[24] - 
f7
;

119 
f39
 = 
x
[24] + 
f7
;

120 
f40
 = 
x
[3] - 
f10
;

121 
f41
 = 
x
[3] + 
f10
;

122 
f42
 = 
x
[28] - 
f11
;

123 
f43
 = 
x
[28] + 
f11
;

124 
f44
 = 
x
[4] - 
f14
;

125 
f45
 = 
x
[4] + 
f14
;

126 
f46
 = 
x
[27] - 
f15
;

127 
f47
 = 
x
[27] + 
f15
;

128 
f48
 = 
x
[1] - 
f18
;

129 
f49
 = 
x
[1] + 
f18
;

130 
f50
 = 
x
[30] - 
f19
;

131 
f51
 = 
x
[30] + 
f19
;

132 
f52
 = 
x
[6] - 
f22
;

133 
f53
 = 
x
[6] + 
f22
;

134 
f54
 = 
x
[25] - 
f23
;

135 
f55
 = 
x
[25] + 
f23
;

136 
f56
 = 
x
[2] - 
f26
;

137 
f57
 = 
x
[2] + 
f26
;

138 
f58
 = 
x
[29] - 
f27
;

139 
f59
 = 
x
[29] + 
f27
;

140 
f60
 = 
x
[5] - 
f30
;

141 
f61
 = 
x
[5] + 
f30
;

142 
f62
 = 
x
[26] - 
f31
;

143 
f63
 = 
x
[26] + 
f31
;

144 
f64
 = 
f39
 + 
f37
;

145 
f65
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5411961001461969), 
f39
);

146 
f66
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9238795325112867), 
f64
);

147 
f67
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f37
);

148 
f68
 = 
f65
 + 
f66
;

149 
f69
 = 
f67
 - 
f66
;

150 
f70
 = 
f38
 + 
f36
;

151 
f71
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763770), 
f38
);

152 
f72
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.3826834323650904), 
f70
);

153 
f73
 = 
	`MUL_F
(
	`FRAC_CONST
(0.5411961001461961), 
f36
);

154 
f74
 = 
f71
 + 
f72
;

155 
f75
 = 
f73
 - 
f72
;

156 
f76
 = 
f47
 + 
f45
;

157 
f77
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5411961001461969), 
f47
);

158 
f78
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9238795325112867), 
f76
);

159 
f79
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f45
);

160 
f80
 = 
f77
 + 
f78
;

161 
f81
 = 
f79
 - 
f78
;

162 
f82
 = 
f46
 + 
f44
;

163 
f83
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763770), 
f46
);

164 
f84
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.3826834323650904), 
f82
);

165 
f85
 = 
	`MUL_F
(
	`FRAC_CONST
(0.5411961001461961), 
f44
);

166 
f86
 = 
f83
 + 
f84
;

167 
f87
 = 
f85
 - 
f84
;

168 
f88
 = 
f55
 + 
f53
;

169 
f89
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5411961001461969), 
f55
);

170 
f90
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9238795325112867), 
f88
);

171 
f91
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f53
);

172 
f92
 = 
f89
 + 
f90
;

173 
f93
 = 
f91
 - 
f90
;

174 
f94
 = 
f54
 + 
f52
;

175 
f95
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763770), 
f54
);

176 
f96
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.3826834323650904), 
f94
);

177 
f97
 = 
	`MUL_F
(
	`FRAC_CONST
(0.5411961001461961), 
f52
);

178 
f98
 = 
f95
 + 
f96
;

179 
f99
 = 
f97
 - 
f96
;

180 
f100
 = 
f63
 + 
f61
;

181 
f101
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5411961001461969), 
f63
);

182 
f102
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9238795325112867), 
f100
);

183 
f103
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f61
);

184 
f104
 = 
f101
 + 
f102
;

185 
f105
 = 
f103
 - 
f102
;

186 
f106
 = 
f62
 + 
f60
;

187 
f107
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763770), 
f62
);

188 
f108
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.3826834323650904), 
f106
);

189 
f109
 = 
	`MUL_F
(
	`FRAC_CONST
(0.5411961001461961), 
f60
);

190 
f110
 = 
f107
 + 
f108
;

191 
f111
 = 
f109
 - 
f108
;

192 
f112
 = 
f33
 - 
f68
;

193 
f113
 = 
f33
 + 
f68
;

194 
f114
 = 
f35
 - 
f69
;

195 
f115
 = 
f35
 + 
f69
;

196 
f116
 = 
f32
 - 
f74
;

197 
f117
 = 
f32
 + 
f74
;

198 
f118
 = 
f34
 - 
f75
;

199 
f119
 = 
f34
 + 
f75
;

200 
f120
 = 
f41
 - 
f80
;

201 
f121
 = 
f41
 + 
f80
;

202 
f122
 = 
f43
 - 
f81
;

203 
f123
 = 
f43
 + 
f81
;

204 
f124
 = 
f40
 - 
f86
;

205 
f125
 = 
f40
 + 
f86
;

206 
f126
 = 
f42
 - 
f87
;

207 
f127
 = 
f42
 + 
f87
;

208 
f128
 = 
f49
 - 
f92
;

209 
f129
 = 
f49
 + 
f92
;

210 
f130
 = 
f51
 - 
f93
;

211 
f131
 = 
f51
 + 
f93
;

212 
f132
 = 
f48
 - 
f98
;

213 
f133
 = 
f48
 + 
f98
;

214 
f134
 = 
f50
 - 
f99
;

215 
f135
 = 
f50
 + 
f99
;

216 
f136
 = 
f57
 - 
f104
;

217 
f137
 = 
f57
 + 
f104
;

218 
f138
 = 
f59
 - 
f105
;

219 
f139
 = 
f59
 + 
f105
;

220 
f140
 = 
f56
 - 
f110
;

221 
f141
 = 
f56
 + 
f110
;

222 
f142
 = 
f58
 - 
f111
;

223 
f143
 = 
f58
 + 
f111
;

224 
f144
 = 
f123
 + 
f121
;

225 
f145
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.7856949583871021), 
f123
);

226 
f146
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9807852804032304), 
f144
);

227 
f147
 = 
	`MUL_C
(
	`COEF_CONST
(1.1758756024193588), 
f121
);

228 
f148
 = 
f145
 + 
f146
;

229 
f149
 = 
f147
 - 
f146
;

230 
f150
 = 
f127
 + 
f125
;

231 
f151
 = 
	`MUL_F
(
	`FRAC_CONST
(0.2758993792829431), 
f127
);

232 
f152
 = 
	`MUL_F
(
	`FRAC_CONST
(0.5555702330196022), 
f150
);

233 
f153
 = 
	`MUL_C
(
	`COEF_CONST
(1.3870398453221475), 
f125
);

234 
f154
 = 
f151
 + 
f152
;

235 
f155
 = 
f153
 - 
f152
;

236 
f156
 = 
f122
 + 
f120
;

237 
f157
 = 
	`MUL_C
(
	`COEF_CONST
(1.1758756024193591), 
f122
);

238 
f158
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.1950903220161287), 
f156
);

239 
f159
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7856949583871016), 
f120
);

240 
f160
 = 
f157
 + 
f158
;

241 
f161
 = 
f159
 - 
f158
;

242 
f162
 = 
f126
 + 
f124
;

243 
f163
 = 
	`MUL_C
(
	`COEF_CONST
(1.3870398453221473), 
f126
);

244 
f164
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.8314696123025455), 
f162
);

245 
f165
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.2758993792829436), 
f124
);

246 
f166
 = 
f163
 + 
f164
;

247 
f167
 = 
f165
 - 
f164
;

248 
f168
 = 
f139
 + 
f137
;

249 
f169
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.7856949583871021), 
f139
);

250 
f170
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9807852804032304), 
f168
);

251 
f171
 = 
	`MUL_C
(
	`COEF_CONST
(1.1758756024193588), 
f137
);

252 
f172
 = 
f169
 + 
f170
;

253 
f173
 = 
f171
 - 
f170
;

254 
f174
 = 
f143
 + 
f141
;

255 
f175
 = 
	`MUL_F
(
	`FRAC_CONST
(0.2758993792829431), 
f143
);

256 
f176
 = 
	`MUL_F
(
	`FRAC_CONST
(0.5555702330196022), 
f174
);

257 
f177
 = 
	`MUL_C
(
	`COEF_CONST
(1.3870398453221475), 
f141
);

258 
f178
 = 
f175
 + 
f176
;

259 
f179
 = 
f177
 - 
f176
;

260 
f180
 = 
f138
 + 
f136
;

261 
f181
 = 
	`MUL_C
(
	`COEF_CONST
(1.1758756024193591), 
f138
);

262 
f182
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.1950903220161287), 
f180
);

263 
f183
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7856949583871016), 
f136
);

264 
f184
 = 
f181
 + 
f182
;

265 
f185
 = 
f183
 - 
f182
;

266 
f186
 = 
f142
 + 
f140
;

267 
f187
 = 
	`MUL_C
(
	`COEF_CONST
(1.3870398453221473), 
f142
);

268 
f188
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.8314696123025455), 
f186
);

269 
f189
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.2758993792829436), 
f140
);

270 
f190
 = 
f187
 + 
f188
;

271 
f191
 = 
f189
 - 
f188
;

272 
f192
 = 
f113
 - 
f148
;

273 
f193
 = 
f113
 + 
f148
;

274 
f194
 = 
f115
 - 
f149
;

275 
f195
 = 
f115
 + 
f149
;

276 
f196
 = 
f117
 - 
f154
;

277 
f197
 = 
f117
 + 
f154
;

278 
f198
 = 
f119
 - 
f155
;

279 
f199
 = 
f119
 + 
f155
;

280 
f200
 = 
f112
 - 
f160
;

281 
f201
 = 
f112
 + 
f160
;

282 
f202
 = 
f114
 - 
f161
;

283 
f203
 = 
f114
 + 
f161
;

284 
f204
 = 
f116
 - 
f166
;

285 
f205
 = 
f116
 + 
f166
;

286 
f206
 = 
f118
 - 
f167
;

287 
f207
 = 
f118
 + 
f167
;

288 
f208
 = 
f129
 - 
f172
;

289 
f209
 = 
f129
 + 
f172
;

290 
f210
 = 
f131
 - 
f173
;

291 
f211
 = 
f131
 + 
f173
;

292 
f212
 = 
f133
 - 
f178
;

293 
f213
 = 
f133
 + 
f178
;

294 
f214
 = 
f135
 - 
f179
;

295 
f215
 = 
f135
 + 
f179
;

296 
f216
 = 
f128
 - 
f184
;

297 
f217
 = 
f128
 + 
f184
;

298 
f218
 = 
f130
 - 
f185
;

299 
f219
 = 
f130
 + 
f185
;

300 
f220
 = 
f132
 - 
f190
;

301 
f221
 = 
f132
 + 
f190
;

302 
f222
 = 
f134
 - 
f191
;

303 
f223
 = 
f134
 + 
f191
;

304 
f224
 = 
f211
 + 
f209
;

305 
f225
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.8971675863426361), 
f211
);

306 
f226
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9951847266721968), 
f224
);

307 
f227
 = 
	`MUL_C
(
	`COEF_CONST
(1.0932018670017576), 
f209
);

308 
f228
 = 
f225
 + 
f226
;

309 
f229
 = 
f227
 - 
f226
;

310 
f230
 = 
f215
 + 
f213
;

311 
f231
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.4105245275223571), 
f215
);

312 
f232
 = 
	`MUL_F
(
	`FRAC_CONST
(0.8819212643483549), 
f230
);

313 
f233
 = 
	`MUL_C
(
	`COEF_CONST
(1.3533180011743529), 
f213
);

314 
f234
 = 
f231
 + 
f232
;

315 
f235
 = 
f233
 - 
f232
;

316 
f236
 = 
f219
 + 
f217
;

317 
f237
 = 
	`MUL_F
(
	`FRAC_CONST
(0.1386171691990915), 
f219
);

318 
f238
 = 
	`MUL_F
(
	`FRAC_CONST
(0.6343932841636455), 
f236
);

319 
f239
 = 
	`MUL_C
(
	`COEF_CONST
(1.4074037375263826), 
f217
);

320 
f240
 = 
f237
 + 
f238
;

321 
f241
 = 
f239
 - 
f238
;

322 
f242
 = 
f223
 + 
f221
;

323 
f243
 = 
	`MUL_F
(
	`FRAC_CONST
(0.6666556584777466), 
f223
);

324 
f244
 = 
	`MUL_F
(
	`FRAC_CONST
(0.2902846772544623), 
f242
);

325 
f245
 = 
	`MUL_C
(
	`COEF_CONST
(1.2472250129866711), 
f221
);

326 
f246
 = 
f243
 + 
f244
;

327 
f247
 = 
f245
 - 
f244
;

328 
f248
 = 
f210
 + 
f208
;

329 
f249
 = 
	`MUL_C
(
	`COEF_CONST
(1.0932018670017574), 
f210
);

330 
f250
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.0980171403295605), 
f248
);

331 
f251
 = 
	`MUL_F
(
	`FRAC_CONST
(0.8971675863426364), 
f208
);

332 
f252
 = 
f249
 + 
f250
;

333 
f253
 = 
f251
 - 
f250
;

334 
f254
 = 
f214
 + 
f212
;

335 
f255
 = 
	`MUL_C
(
	`COEF_CONST
(1.3533180011743529), 
f214
);

336 
f256
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.4713967368259979), 
f254
);

337 
f257
 = 
	`MUL_F
(
	`FRAC_CONST
(0.4105245275223569), 
f212
);

338 
f258
 = 
f255
 + 
f256
;

339 
f259
 = 
f257
 - 
f256
;

340 
f260
 = 
f218
 + 
f216
;

341 
f261
 = 
	`MUL_C
(
	`COEF_CONST
(1.4074037375263826), 
f218
);

342 
f262
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.7730104533627369), 
f260
);

343 
f263
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.1386171691990913), 
f216
);

344 
f264
 = 
f261
 + 
f262
;

345 
f265
 = 
f263
 - 
f262
;

346 
f266
 = 
f222
 + 
f220
;

347 
f267
 = 
	`MUL_C
(
	`COEF_CONST
(1.2472250129866711), 
f222
);

348 
f268
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9569403357322089), 
f266
);

349 
f269
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.6666556584777469), 
f220
);

350 
f270
 = 
f267
 + 
f268
;

351 
f271
 = 
f269
 - 
f268
;

352 
f272
 = 
f193
 - 
f228
;

353 
f273
 = 
f193
 + 
f228
;

354 
f274
 = 
f195
 - 
f229
;

355 
f275
 = 
f195
 + 
f229
;

356 
f276
 = 
f197
 - 
f234
;

357 
f277
 = 
f197
 + 
f234
;

358 
f278
 = 
f199
 - 
f235
;

359 
f279
 = 
f199
 + 
f235
;

360 
f280
 = 
f201
 - 
f240
;

361 
f281
 = 
f201
 + 
f240
;

362 
f282
 = 
f203
 - 
f241
;

363 
f283
 = 
f203
 + 
f241
;

364 
f284
 = 
f205
 - 
f246
;

365 
f285
 = 
f205
 + 
f246
;

366 
f286
 = 
f207
 - 
f247
;

367 
f287
 = 
f207
 + 
f247
;

368 
f288
 = 
f192
 - 
f252
;

369 
f289
 = 
f192
 + 
f252
;

370 
f290
 = 
f194
 - 
f253
;

371 
f291
 = 
f194
 + 
f253
;

372 
f292
 = 
f196
 - 
f258
;

373 
f293
 = 
f196
 + 
f258
;

374 
f294
 = 
f198
 - 
f259
;

375 
f295
 = 
f198
 + 
f259
;

376 
f296
 = 
f200
 - 
f264
;

377 
f297
 = 
f200
 + 
f264
;

378 
f298
 = 
f202
 - 
f265
;

379 
f299
 = 
f202
 + 
f265
;

380 
f300
 = 
f204
 - 
f270
;

381 
f301
 = 
f204
 + 
f270
;

382 
f302
 = 
f206
 - 
f271
;

383 
f303
 = 
f206
 + 
f271
;

384 
f304
 = 
f275
 + 
f273
;

385 
f305
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9751575901732920), 
f275
);

386 
f306
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9996988186962043), 
f304
);

387 
f307
 = 
	`MUL_C
(
	`COEF_CONST
(1.0242400472191164), 
f273
);

388 
y
[0] = 
f305
 + 
f306
;

389 
y
[31] = 
f307
 - 
f306
;

390 
f310
 = 
f279
 + 
f277
;

391 
f311
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.8700688593994936), 
f279
);

392 
f312
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9924795345987100), 
f310
);

393 
f313
 = 
	`MUL_C
(
	`COEF_CONST
(1.1148902097979263), 
f277
);

394 
y
[2] = 
f311
 + 
f312
;

395 
y
[29] = 
f313
 - 
f312
;

396 
f316
 = 
f283
 + 
f281
;

397 
f317
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.7566008898816587), 
f283
);

398 
f318
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9757021300385286), 
f316
);

399 
f319
 = 
	`MUL_C
(
	`COEF_CONST
(1.1948033701953984), 
f281
);

400 
y
[4] = 
f317
 + 
f318
;

401 
y
[27] = 
f319
 - 
f318
;

402 
f322
 = 
f287
 + 
f285
;

403 
f323
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.6358464401941451), 
f287
);

404 
f324
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9495281805930367), 
f322
);

405 
f325
 = 
	`MUL_C
(
	`COEF_CONST
(1.2632099209919283), 
f285
);

406 
y
[6] = 
f323
 + 
f324
;

407 
y
[25] = 
f325
 - 
f324
;

408 
f328
 = 
f291
 + 
f289
;

409 
f329
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5089684416985408), 
f291
);

410 
f330
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9142097557035307), 
f328
);

411 
f331
 = 
	`MUL_C
(
	`COEF_CONST
(1.3194510697085207), 
f289
);

412 
y
[8] = 
f329
 + 
f330
;

413 
y
[23] = 
f331
 - 
f330
;

414 
f334
 = 
f295
 + 
f293
;

415 
f335
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.3771887988789273), 
f295
);

416 
f336
 = 
	`MUL_F
(
	`FRAC_CONST
(0.8700869911087114), 
f334
);

417 
f337
 = 
	`MUL_C
(
	`COEF_CONST
(1.3629851833384954), 
f293
);

418 
y
[10] = 
f335
 + 
f336
;

419 
y
[21] = 
f337
 - 
f336
;

420 
f340
 = 
f299
 + 
f297
;

421 
f341
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.2417766217337384), 
f299
);

422 
f342
 = 
	`MUL_F
(
	`FRAC_CONST
(0.8175848131515837), 
f340
);

423 
f343
 = 
	`MUL_C
(
	`COEF_CONST
(1.3933930045694289), 
f297
);

424 
y
[12] = 
f341
 + 
f342
;

425 
y
[19] = 
f343
 - 
f342
;

426 
f346
 = 
f303
 + 
f301
;

427 
f347
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.1040360035527077), 
f303
);

428 
f348
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7572088465064845), 
f346
);

429 
f349
 = 
	`MUL_C
(
	`COEF_CONST
(1.4103816894602612), 
f301
);

430 
y
[14] = 
f347
 + 
f348
;

431 
y
[17] = 
f349
 - 
f348
;

432 
f352
 = 
f274
 + 
f272
;

433 
f353
 = 
	`MUL_F
(
	`FRAC_CONST
(0.0347065382144002), 
f274
);

434 
f354
 = 
	`MUL_F
(
	`FRAC_CONST
(0.6895405447370668), 
f352
);

435 
f355
 = 
	`MUL_C
(
	`COEF_CONST
(1.4137876276885337), 
f272
);

436 
y
[16] = 
f353
 + 
f354
;

437 
y
[15] = 
f355
 - 
f354
;

438 
f358
 = 
f278
 + 
f276
;

439 
f359
 = 
	`MUL_F
(
	`FRAC_CONST
(0.1731148370459795), 
f278
);

440 
f360
 = 
	`MUL_F
(
	`FRAC_CONST
(0.6152315905806268), 
f358
);

441 
f361
 = 
	`MUL_C
(
	`COEF_CONST
(1.4035780182072330), 
f276
);

442 
y
[18] = 
f359
 + 
f360
;

443 
y
[13] = 
f361
 - 
f360
;

444 
f364
 = 
f282
 + 
f280
;

445 
f365
 = 
	`MUL_F
(
	`FRAC_CONST
(0.3098559453626100), 
f282
);

446 
f366
 = 
	`MUL_F
(
	`FRAC_CONST
(0.5349976198870972), 
f364
);

447 
f367
 = 
	`MUL_C
(
	`COEF_CONST
(1.3798511851368043), 
f280
);

448 
y
[20] = 
f365
 + 
f366
;

449 
y
[11] = 
f367
 - 
f366
;

450 
f370
 = 
f286
 + 
f284
;

451 
f371
 = 
	`MUL_F
(
	`FRAC_CONST
(0.4436129715409088), 
f286
);

452 
f372
 = 
	`MUL_F
(
	`FRAC_CONST
(0.4496113296546065), 
f370
);

453 
f373
 = 
	`MUL_C
(
	`COEF_CONST
(1.3428356308501219), 
f284
);

454 
y
[22] = 
f371
 + 
f372
;

455 
y
[9] = 
f373
 - 
f372
;

456 
f376
 = 
f290
 + 
f288
;

457 
f377
 = 
	`MUL_F
(
	`FRAC_CONST
(0.5730977622997509), 
f290
);

458 
f378
 = 
	`MUL_F
(
	`FRAC_CONST
(0.3598950365349881), 
f376
);

459 
f379
 = 
	`MUL_C
(
	`COEF_CONST
(1.2928878353697271), 
f288
);

460 
y
[24] = 
f377
 + 
f378
;

461 
y
[7] = 
f379
 - 
f378
;

462 
f382
 = 
f294
 + 
f292
;

463 
f383
 = 
	`MUL_F
(
	`FRAC_CONST
(0.6970633083205415), 
f294
);

464 
f384
 = 
	`MUL_F
(
	`FRAC_CONST
(0.2667127574748984), 
f382
);

465 
f385
 = 
	`MUL_C
(
	`COEF_CONST
(1.2304888232703382), 
f292
);

466 
y
[26] = 
f383
 + 
f384
;

467 
y
[5] = 
f385
 - 
f384
;

468 
f388
 = 
f298
 + 
f296
;

469 
f389
 = 
	`MUL_F
(
	`FRAC_CONST
(0.8143157536286401), 
f298
);

470 
f390
 = 
	`MUL_F
(
	`FRAC_CONST
(0.1709618887603012), 
f388
);

471 
f391
 = 
	`MUL_C
(
	`COEF_CONST
(1.1562395311492424), 
f296
);

472 
y
[28] = 
f389
 + 
f390
;

473 
y
[3] = 
f391
 - 
f390
;

474 
f394
 = 
f302
 + 
f300
;

475 
f395
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9237258930790228), 
f302
);

476 
f396
 = 
	`MUL_F
(
	`FRAC_CONST
(0.0735645635996674), 
f394
);

477 
f397
 = 
	`MUL_C
(
	`COEF_CONST
(1.0708550202783576), 
f300
);

478 
y
[30] = 
f395
 + 
f396
;

479 
y
[1] = 
f397
 - 
f396
;

480 
	}
}

482 #ifde‡
SBR_LOW_POWER


484 
	$DCT2_16_unsˇÀd
(
ªÆ_t
 *
y
,Ñól_à*
x
)

486 
ªÆ_t
 
f0
, 
f1
, 
f2
, 
f3
, 
f4
, 
f5
, 
f6
, 
f7
, 
f8
, 
f9
, 
f10
;

487 
ªÆ_t
 
f11
, 
f12
, 
f13
, 
f14
, 
f15
, 
f16
, 
f17
, 
f18
, 
f19
, 
f20
;

488 
ªÆ_t
 
f21
, 
f22
, 
f23
, 
f24
, 
f25
, 
f26
, 
f27
, 
f28
, 
f31
, 
f32
;

489 
ªÆ_t
 
f33
, 
f34
, 
f37
, 
f38
, 
f39
, 
f40
, 
f41
, 
f42
, 
f43
, 
f44
;

490 
ªÆ_t
 
f45
, 
f46
, 
f47
, 
f48
, 
f49
, 
f51
, 
f53
, 
f54
, 
f57
, 
f58
;

491 
ªÆ_t
 
f59
, 
f60
, 
f61
, 
f62
, 
f63
, 
f64
, 
f65
, 
f66
, 
f67
, 
f68
;

492 
ªÆ_t
 
f69
, 
f70
, 
f71
, 
f72
, 
f73
, 
f74
, 
f75
, 
f76
, 
f77
, 
f78
;

493 
ªÆ_t
 
f79
, 
f80
, 
f81
, 
f82
, 
f83
, 
f84
, 
f85
, 
f86
, 
f87
, 
f88
;

494 
ªÆ_t
 
f89
, 
f90
, 
f91
, 
f92
, 
f95
, 
f96
, 
f97
, 
f98
, 
f101
, 
f102
;

495 
ªÆ_t
 
f103
, 
f104
, 
f107
, 
f108
, 
f109
, 
f110
;

497 
f0
 = 
x
[0] - x[15];

498 
f1
 = 
x
[0] + x[15];

499 
f2
 = 
x
[1] - x[14];

500 
f3
 = 
x
[1] + x[14];

501 
f4
 = 
x
[2] - x[13];

502 
f5
 = 
x
[2] + x[13];

503 
f6
 = 
x
[3] - x[12];

504 
f7
 = 
x
[3] + x[12];

505 
f8
 = 
x
[4] - x[11];

506 
f9
 = 
x
[4] + x[11];

507 
f10
 = 
x
[5] - x[10];

508 
f11
 = 
x
[5] + x[10];

509 
f12
 = 
x
[6] - x[9];

510 
f13
 = 
x
[6] + x[9];

511 
f14
 = 
x
[7] - x[8];

512 
f15
 = 
x
[7] + x[8];

513 
f16
 = 
f1
 - 
f15
;

514 
f17
 = 
f1
 + 
f15
;

515 
f18
 = 
f3
 - 
f13
;

516 
f19
 = 
f3
 + 
f13
;

517 
f20
 = 
f5
 - 
f11
;

518 
f21
 = 
f5
 + 
f11
;

519 
f22
 = 
f7
 - 
f9
;

520 
f23
 = 
f7
 + 
f9
;

521 
f24
 = 
f17
 - 
f23
;

522 
f25
 = 
f17
 + 
f23
;

523 
f26
 = 
f19
 - 
f21
;

524 
f27
 = 
f19
 + 
f21
;

525 
f28
 = 
f25
 - 
f27
;

526 
y
[0] = 
f25
 + 
f27
;

527 
y
[8] = 
	`MUL_F
(
f28
, 
	`FRAC_CONST
(0.7071067811865476));

528 
f31
 = 
f24
 + 
f26
;

529 
f32
 = 
	`MUL_C
(
f24
, 
	`COEF_CONST
(1.3065629648763766));

530 
f33
 = 
	`MUL_F
(
f31
, 
	`FRAC_CONST
(-0.9238795325112866));

531 
f34
 = 
	`MUL_F
(
f26
, 
	`FRAC_CONST
(-0.5411961001461967));

532 
y
[12] = 
f32
 + 
f33
;

533 
y
[4] = 
f34
 - 
f33
;

534 
f37
 = 
f16
 + 
f22
;

535 
f38
 = 
	`MUL_C
(
f16
, 
	`COEF_CONST
(1.1758756024193588));

536 
f39
 = 
	`MUL_F
(
f37
, 
	`FRAC_CONST
(-0.9807852804032304));

537 
f40
 = 
	`MUL_F
(
f22
, 
	`FRAC_CONST
(-0.7856949583871021));

538 
f41
 = 
f38
 + 
f39
;

539 
f42
 = 
f40
 - 
f39
;

540 
f43
 = 
f18
 + 
f20
;

541 
f44
 = 
	`MUL_C
(
f18
, 
	`COEF_CONST
(1.3870398453221473));

542 
f45
 = 
	`MUL_F
(
f43
, 
	`FRAC_CONST
(-0.8314696123025455));

543 
f46
 = 
	`MUL_F
(
f20
, 
	`FRAC_CONST
(-0.2758993792829436));

544 
f47
 = 
f44
 + 
f45
;

545 
f48
 = 
f46
 - 
f45
;

546 
f49
 = 
f42
 - 
f48
;

547 
y
[2] = 
f42
 + 
f48
;

548 
f51
 = 
	`MUL_F
(
f49
, 
	`FRAC_CONST
(0.7071067811865476));

549 
y
[14] = 
f41
 - 
f47
;

550 
f53
 = 
f41
 + 
f47
;

551 
f54
 = 
	`MUL_F
(
f53
, 
	`FRAC_CONST
(0.7071067811865476));

552 
y
[10] = 
f51
 - 
f54
;

553 
y
[6] = 
f51
 + 
f54
;

554 
f57
 = 
f2
 - 
f4
;

555 
f58
 = 
f2
 + 
f4
;

556 
f59
 = 
f6
 - 
f8
;

557 
f60
 = 
f6
 + 
f8
;

558 
f61
 = 
f10
 - 
f12
;

559 
f62
 = 
f10
 + 
f12
;

560 
f63
 = 
	`MUL_F
(
f60
, 
	`FRAC_CONST
(0.7071067811865476));

561 
f64
 = 
f0
 - 
f63
;

562 
f65
 = 
f0
 + 
f63
;

563 
f66
 = 
f58
 + 
f62
;

564 
f67
 = 
	`MUL_C
(
f58
, 
	`COEF_CONST
(1.3065629648763766));

565 
f68
 = 
	`MUL_F
(
f66
, 
	`FRAC_CONST
(-0.9238795325112866));

566 
f69
 = 
	`MUL_F
(
f62
, 
	`FRAC_CONST
(-0.5411961001461967));

567 
f70
 = 
f67
 + 
f68
;

568 
f71
 = 
f69
 - 
f68
;

569 
f72
 = 
f65
 - 
f71
;

570 
f73
 = 
f65
 + 
f71
;

571 
f74
 = 
f64
 - 
f70
;

572 
f75
 = 
f64
 + 
f70
;

573 
f76
 = 
	`MUL_F
(
f59
, 
	`FRAC_CONST
(0.7071067811865476));

574 
f77
 = 
f14
 - 
f76
;

575 
f78
 = 
f14
 + 
f76
;

576 
f79
 = 
f61
 + 
f57
;

577 
f80
 = 
	`MUL_C
(
f61
, 
	`COEF_CONST
(1.3065629648763766));

578 
f81
 = 
	`MUL_F
(
f79
, 
	`FRAC_CONST
(-0.9238795325112866));

579 
f82
 = 
	`MUL_F
(
f57
, 
	`FRAC_CONST
(-0.5411961001461967));

580 
f83
 = 
f80
 + 
f81
;

581 
f84
 = 
f82
 - 
f81
;

582 
f85
 = 
f78
 - 
f84
;

583 
f86
 = 
f78
 + 
f84
;

584 
f87
 = 
f77
 - 
f83
;

585 
f88
 = 
f77
 + 
f83
;

586 
f89
 = 
f86
 + 
f73
;

587 
f90
 = 
	`MUL_F
(
f86
, 
	`FRAC_CONST
(-0.8971675863426361));

588 
f91
 = 
	`MUL_F
(
f89
, 
	`FRAC_CONST
(0.9951847266721968));

589 
f92
 = 
	`MUL_C
(
f73
, 
	`COEF_CONST
(1.0932018670017576));

590 
y
[1] = 
f90
 + 
f91
;

591 
y
[15] = 
f92
 - 
f91
;

592 
f95
 = 
f75
 - 
f88
;

593 
f96
 = 
	`MUL_F
(
f88
, 
	`FRAC_CONST
(-0.6666556584777466));

594 
f97
 = 
	`MUL_F
(
f95
, 
	`FRAC_CONST
(0.9569403357322089));

595 
f98
 = 
	`MUL_C
(
f75
, 
	`COEF_CONST
(1.2472250129866713));

596 
y
[3] = 
f97
 - 
f96
;

597 
y
[13] = 
f98
 - 
f97
;

598 
f101
 = 
f87
 + 
f74
;

599 
f102
 = 
	`MUL_F
(
f87
, 
	`FRAC_CONST
(-0.4105245275223571));

600 
f103
 = 
	`MUL_F
(
f101
, 
	`FRAC_CONST
(0.8819212643483549));

601 
f104
 = 
	`MUL_C
(
f74
, 
	`COEF_CONST
(1.3533180011743529));

602 
y
[5] = 
f102
 + 
f103
;

603 
y
[11] = 
f104
 - 
f103
;

604 
f107
 = 
f72
 - 
f85
;

605 
f108
 = 
	`MUL_F
(
f85
, 
	`FRAC_CONST
(-0.1386171691990915));

606 
f109
 = 
	`MUL_F
(
f107
, 
	`FRAC_CONST
(0.7730104533627370));

607 
f110
 = 
	`MUL_C
(
f72
, 
	`COEF_CONST
(1.4074037375263826));

608 
y
[7] = 
f109
 - 
f108
;

609 
y
[9] = 
f110
 - 
f109
;

610 
	}
}

612 
	$DCT4_16
(
ªÆ_t
 *
y
,Ñól_à*
x
)

614 
ªÆ_t
 
f0
, 
f1
, 
f2
, 
f3
, 
f4
, 
f5
, 
f6
, 
f7
, 
f8
, 
f9
, 
f10
;

615 
ªÆ_t
 
f11
, 
f12
, 
f13
, 
f14
, 
f15
, 
f16
, 
f17
, 
f18
, 
f19
, 
f20
;

616 
ªÆ_t
 
f21
, 
f22
, 
f23
, 
f24
, 
f25
, 
f26
, 
f27
, 
f28
, 
f29
, 
f30
;

617 
ªÆ_t
 
f31
, 
f32
, 
f33
, 
f34
, 
f35
, 
f36
, 
f37
, 
f38
, 
f39
, 
f40
;

618 
ªÆ_t
 
f41
, 
f42
, 
f43
, 
f44
, 
f45
, 
f46
, 
f47
, 
f48
, 
f49
, 
f50
;

619 
ªÆ_t
 
f51
, 
f52
, 
f53
, 
f54
, 
f55
, 
f56
, 
f57
, 
f58
, 
f59
, 
f60
;

620 
ªÆ_t
 
f61
, 
f62
, 
f63
, 
f64
, 
f65
, 
f66
, 
f67
, 
f68
, 
f69
, 
f70
;

621 
ªÆ_t
 
f71
, 
f72
, 
f73
, 
f74
, 
f75
, 
f76
, 
f77
, 
f78
, 
f79
, 
f80
;

622 
ªÆ_t
 
f81
, 
f82
, 
f83
, 
f84
, 
f85
, 
f86
, 
f87
, 
f88
, 
f89
, 
f90
;

623 
ªÆ_t
 
f91
, 
f92
, 
f93
, 
f94
, 
f95
, 
f96
, 
f97
, 
f98
, 
f99
, 
f100
;

624 
ªÆ_t
 
f101
, 
f102
, 
f103
, 
f104
, 
f105
, 
f106
, 
f107
, 
f108
, 
f109
, 
f110
;

625 
ªÆ_t
 
f111
, 
f112
, 
f113
, 
f114
, 
f115
, 
f116
, 
f117
, 
f118
, 
f119
, 
f120
;

626 
ªÆ_t
 
f121
, 
f122
, 
f123
, 
f124
, 
f125
, 
f126
, 
f127
, 
f128
, 
f130
, 
f132
;

627 
ªÆ_t
 
f134
, 
f136
, 
f138
, 
f140
, 
f142
, 
f144
, 
f145
, 
f148
, 
f149
, 
f152
;

628 
ªÆ_t
 
f153
, 
f156
, 
f157
;

630 
f0
 = 
x
[0] + x[15];

631 
f1
 = 
	`MUL_C
(
	`COEF_CONST
(1.0478631305325901), 
x
[0]);

632 
f2
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9987954562051724), 
f0
);

633 
f3
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9497277818777548), 
x
[15]);

634 
f4
 = 
f1
 + 
f2
;

635 
f5
 = 
f3
 - 
f2
;

636 
f6
 = 
x
[2] + x[13];

637 
f7
 = 
	`MUL_C
(
	`COEF_CONST
(1.2130114330978077), 
x
[2]);

638 
f8
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9700312531945440), 
f6
);

639 
f9
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.7270510732912803), 
x
[13]);

640 
f10
 = 
f7
 + 
f8
;

641 
f11
 = 
f9
 - 
f8
;

642 
f12
 = 
x
[4] + x[11];

643 
f13
 = 
	`MUL_C
(
	`COEF_CONST
(1.3315443865537255), 
x
[4]);

644 
f14
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9039892931234433), 
f12
);

645 
f15
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.4764341996931612), 
x
[11]);

646 
f16
 = 
f13
 + 
f14
;

647 
f17
 = 
f15
 - 
f14
;

648 
f18
 = 
x
[6] + x[9];

649 
f19
 = 
	`MUL_C
(
	`COEF_CONST
(1.3989068359730781), 
x
[6]);

650 
f20
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.8032075314806453), 
f18
);

651 
f21
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.2075082269882124), 
x
[9]);

652 
f22
 = 
f19
 + 
f20
;

653 
f23
 = 
f21
 - 
f20
;

654 
f24
 = 
x
[8] + x[7];

655 
f25
 = 
	`MUL_C
(
	`COEF_CONST
(1.4125100802019777), 
x
[8]);

656 
f26
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.6715589548470187), 
f24
);

657 
f27
 = 
	`MUL_F
(
	`FRAC_CONST
(0.0693921705079402), 
x
[7]);

658 
f28
 = 
f25
 + 
f26
;

659 
f29
 = 
f27
 - 
f26
;

660 
f30
 = 
x
[10] + x[5];

661 
f31
 = 
	`MUL_C
(
	`COEF_CONST
(1.3718313541934939), 
x
[10]);

662 
f32
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5141027441932219), 
f30
);

663 
f33
 = 
	`MUL_F
(
	`FRAC_CONST
(0.3436258658070501), 
x
[5]);

664 
f34
 = 
f31
 + 
f32
;

665 
f35
 = 
f33
 - 
f32
;

666 
f36
 = 
x
[12] + x[3];

667 
f37
 = 
	`MUL_C
(
	`COEF_CONST
(1.2784339185752409), 
x
[12]);

668 
f38
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.3368898533922200), 
f36
);

669 
f39
 = 
	`MUL_F
(
	`FRAC_CONST
(0.6046542117908008), 
x
[3]);

670 
f40
 = 
f37
 + 
f38
;

671 
f41
 = 
f39
 - 
f38
;

672 
f42
 = 
x
[14] + x[1];

673 
f43
 = 
	`MUL_C
(
	`COEF_CONST
(1.1359069844201433), 
x
[14]);

674 
f44
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.1467304744553624), 
f42
);

675 
f45
 = 
	`MUL_F
(
	`FRAC_CONST
(0.8424460355094185), 
x
[1]);

676 
f46
 = 
f43
 + 
f44
;

677 
f47
 = 
f45
 - 
f44
;

678 
f48
 = 
f5
 - 
f29
;

679 
f49
 = 
f5
 + 
f29
;

680 
f50
 = 
f4
 - 
f28
;

681 
f51
 = 
f4
 + 
f28
;

682 
f52
 = 
f11
 - 
f35
;

683 
f53
 = 
f11
 + 
f35
;

684 
f54
 = 
f10
 - 
f34
;

685 
f55
 = 
f10
 + 
f34
;

686 
f56
 = 
f17
 - 
f41
;

687 
f57
 = 
f17
 + 
f41
;

688 
f58
 = 
f16
 - 
f40
;

689 
f59
 = 
f16
 + 
f40
;

690 
f60
 = 
f23
 - 
f47
;

691 
f61
 = 
f23
 + 
f47
;

692 
f62
 = 
f22
 - 
f46
;

693 
f63
 = 
f22
 + 
f46
;

694 
f64
 = 
f48
 + 
f50
;

695 
f65
 = 
	`MUL_C
(
	`COEF_CONST
(1.1758756024193588), 
f48
);

696 
f66
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9807852804032304), 
f64
);

697 
f67
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.7856949583871021), 
f50
);

698 
f68
 = 
f65
 + 
f66
;

699 
f69
 = 
f67
 - 
f66
;

700 
f70
 = 
f52
 + 
f54
;

701 
f71
 = 
	`MUL_C
(
	`COEF_CONST
(1.3870398453221475), 
f52
);

702 
f72
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5555702330196022), 
f70
);

703 
f73
 = 
	`MUL_F
(
	`FRAC_CONST
(0.2758993792829431), 
f54
);

704 
f74
 = 
f71
 + 
f72
;

705 
f75
 = 
f73
 - 
f72
;

706 
f76
 = 
f56
 + 
f58
;

707 
f77
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7856949583871022), 
f56
);

708 
f78
 = 
	`MUL_F
(
	`FRAC_CONST
(0.1950903220161283), 
f76
);

709 
f79
 = 
	`MUL_C
(
	`COEF_CONST
(1.1758756024193586), 
f58
);

710 
f80
 = 
f77
 + 
f78
;

711 
f81
 = 
f79
 - 
f78
;

712 
f82
 = 
f60
 + 
f62
;

713 
f83
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.2758993792829430), 
f60
);

714 
f84
 = 
	`MUL_F
(
	`FRAC_CONST
(0.8314696123025452), 
f82
);

715 
f85
 = 
	`MUL_C
(
	`COEF_CONST
(1.3870398453221475), 
f62
);

716 
f86
 = 
f83
 + 
f84
;

717 
f87
 = 
f85
 - 
f84
;

718 
f88
 = 
f49
 - 
f57
;

719 
f89
 = 
f49
 + 
f57
;

720 
f90
 = 
f51
 - 
f59
;

721 
f91
 = 
f51
 + 
f59
;

722 
f92
 = 
f53
 - 
f61
;

723 
f93
 = 
f53
 + 
f61
;

724 
f94
 = 
f55
 - 
f63
;

725 
f95
 = 
f55
 + 
f63
;

726 
f96
 = 
f69
 - 
f81
;

727 
f97
 = 
f69
 + 
f81
;

728 
f98
 = 
f68
 - 
f80
;

729 
f99
 = 
f68
 + 
f80
;

730 
f100
 = 
f75
 - 
f87
;

731 
f101
 = 
f75
 + 
f87
;

732 
f102
 = 
f74
 - 
f86
;

733 
f103
 = 
f74
 + 
f86
;

734 
f104
 = 
f88
 + 
f90
;

735 
f105
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f88
);

736 
f106
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9238795325112866), 
f104
);

737 
f107
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5411961001461967), 
f90
);

738 
f108
 = 
f105
 + 
f106
;

739 
f109
 = 
f107
 - 
f106
;

740 
f110
 = 
f92
 + 
f94
;

741 
f111
 = 
	`MUL_F
(
	`FRAC_CONST
(0.5411961001461969), 
f92
);

742 
f112
 = 
	`MUL_F
(
	`FRAC_CONST
(0.3826834323650898), 
f110
);

743 
f113
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f94
);

744 
f114
 = 
f111
 + 
f112
;

745 
f115
 = 
f113
 - 
f112
;

746 
f116
 = 
f96
 + 
f98
;

747 
f117
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f96
);

748 
f118
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9238795325112866), 
f116
);

749 
f119
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5411961001461967), 
f98
);

750 
f120
 = 
f117
 + 
f118
;

751 
f121
 = 
f119
 - 
f118
;

752 
f122
 = 
f100
 + 
f102
;

753 
f123
 = 
	`MUL_F
(
	`FRAC_CONST
(0.5411961001461969), 
f100
);

754 
f124
 = 
	`MUL_F
(
	`FRAC_CONST
(0.3826834323650898), 
f122
);

755 
f125
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f102
);

756 
f126
 = 
f123
 + 
f124
;

757 
f127
 = 
f125
 - 
f124
;

758 
f128
 = 
f89
 - 
f93
;

759 
y
[0] = 
f89
 + 
f93
;

760 
f130
 = 
f91
 - 
f95
;

761 
y
[15] = 
f91
 + 
f95
;

762 
f132
 = 
f109
 - 
f115
;

763 
y
[3] = 
f109
 + 
f115
;

764 
f134
 = 
f108
 - 
f114
;

765 
y
[12] = 
f108
 + 
f114
;

766 
f136
 = 
f97
 - 
f101
;

767 
y
[1] = 
f97
 + 
f101
;

768 
f138
 = 
f99
 - 
f103
;

769 
y
[14] = 
f99
 + 
f103
;

770 
f140
 = 
f121
 - 
f127
;

771 
y
[2] = 
f121
 + 
f127
;

772 
f142
 = 
f120
 - 
f126
;

773 
y
[13] = 
f120
 + 
f126
;

774 
f144
 = 
f128
 - 
f130
;

775 
f145
 = 
f128
 + 
f130
;

776 
y
[8] = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865474), 
f144
);

777 
y
[7] = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865474), 
f145
);

778 
f148
 = 
f132
 - 
f134
;

779 
f149
 = 
f132
 + 
f134
;

780 
y
[11] = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865474), 
f148
);

781 
y
[4] = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865474), 
f149
);

782 
f152
 = 
f136
 - 
f138
;

783 
f153
 = 
f136
 + 
f138
;

784 
y
[9] = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865474), 
f152
);

785 
y
[6] = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865474), 
f153
);

786 
f156
 = 
f140
 - 
f142
;

787 
f157
 = 
f140
 + 
f142
;

788 
y
[10] = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865474), 
f156
);

789 
y
[5] = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865474), 
f157
);

790 
	}
}

792 
	$DCT3_32_unsˇÀd
(
ªÆ_t
 *
y
,Ñól_à*
x
)

794 
ªÆ_t
 
f0
, 
f1
, 
f2
, 
f3
, 
f4
, 
f5
, 
f6
, 
f7
, 
f8
, 
f9
, 
f10
;

795 
ªÆ_t
 
f11
, 
f12
, 
f13
, 
f14
, 
f15
, 
f16
, 
f17
, 
f18
, 
f19
, 
f20
;

796 
ªÆ_t
 
f21
, 
f22
, 
f23
, 
f24
, 
f25
, 
f26
, 
f27
, 
f28
, 
f29
, 
f30
;

797 
ªÆ_t
 
f31
, 
f32
, 
f33
, 
f34
, 
f35
, 
f36
, 
f37
, 
f38
, 
f39
, 
f40
;

798 
ªÆ_t
 
f41
, 
f42
, 
f43
, 
f44
, 
f45
, 
f46
, 
f47
, 
f48
, 
f49
, 
f50
;

799 
ªÆ_t
 
f51
, 
f52
, 
f53
, 
f54
, 
f55
, 
f56
, 
f57
, 
f58
, 
f59
, 
f60
;

800 
ªÆ_t
 
f61
, 
f62
, 
f63
, 
f64
, 
f65
, 
f66
, 
f67
, 
f68
, 
f69
, 
f70
;

801 
ªÆ_t
 
f71
, 
f72
, 
f73
, 
f74
, 
f75
, 
f76
, 
f77
, 
f78
, 
f79
, 
f80
;

802 
ªÆ_t
 
f81
, 
f82
, 
f83
, 
f84
, 
f85
, 
f86
, 
f87
, 
f88
, 
f89
, 
f90
;

803 
ªÆ_t
 
f91
, 
f92
, 
f93
, 
f94
, 
f95
, 
f96
, 
f97
, 
f98
, 
f99
, 
f100
;

804 
ªÆ_t
 
f101
, 
f102
, 
f103
, 
f104
, 
f105
, 
f106
, 
f107
, 
f108
, 
f109
, 
f110
;

805 
ªÆ_t
 
f111
, 
f112
, 
f113
, 
f114
, 
f115
, 
f116
, 
f117
, 
f118
, 
f119
, 
f120
;

806 
ªÆ_t
 
f121
, 
f122
, 
f123
, 
f124
, 
f125
, 
f126
, 
f127
, 
f128
, 
f129
, 
f130
;

807 
ªÆ_t
 
f131
, 
f132
, 
f133
, 
f134
, 
f135
, 
f136
, 
f137
, 
f138
, 
f139
, 
f140
;

808 
ªÆ_t
 
f141
, 
f142
, 
f143
, 
f144
, 
f145
, 
f146
, 
f147
, 
f148
, 
f149
, 
f150
;

809 
ªÆ_t
 
f151
, 
f152
, 
f153
, 
f154
, 
f155
, 
f156
, 
f157
, 
f158
, 
f159
, 
f160
;

810 
ªÆ_t
 
f161
, 
f162
, 
f163
, 
f164
, 
f165
, 
f166
, 
f167
, 
f168
, 
f169
, 
f170
;

811 
ªÆ_t
 
f171
, 
f172
, 
f173
, 
f174
, 
f175
, 
f176
, 
f177
, 
f178
, 
f179
, 
f180
;

812 
ªÆ_t
 
f181
, 
f182
, 
f183
, 
f184
, 
f185
, 
f186
, 
f187
, 
f188
, 
f189
, 
f190
;

813 
ªÆ_t
 
f191
, 
f192
, 
f193
, 
f194
, 
f195
, 
f196
, 
f197
, 
f198
, 
f199
, 
f200
;

814 
ªÆ_t
 
f201
, 
f202
, 
f203
, 
f204
, 
f205
, 
f206
, 
f207
, 
f208
, 
f209
, 
f210
;

815 
ªÆ_t
 
f211
, 
f212
, 
f213
, 
f214
, 
f215
, 
f216
, 
f217
, 
f218
, 
f219
, 
f220
;

816 
ªÆ_t
 
f221
, 
f222
, 
f223
, 
f224
, 
f225
, 
f226
, 
f227
, 
f228
, 
f229
, 
f230
;

817 
ªÆ_t
 
f231
, 
f232
, 
f233
, 
f234
, 
f235
, 
f236
, 
f237
, 
f238
, 
f239
, 
f240
;

818 
ªÆ_t
 
f241
, 
f242
, 
f243
, 
f244
, 
f245
, 
f246
, 
f247
, 
f248
, 
f249
, 
f250
;

819 
ªÆ_t
 
f251
, 
f252
, 
f253
, 
f254
, 
f255
, 
f256
, 
f257
, 
f258
, 
f259
, 
f260
;

820 
ªÆ_t
 
f261
, 
f262
, 
f263
, 
f264
, 
f265
, 
f266
, 
f267
, 
f268
, 
f269
, 
f270
;

821 
ªÆ_t
 
f271
, 
f272
;

823 
f0
 = 
	`MUL_F
(
x
[16], 
	`FRAC_CONST
(0.7071067811865476));

824 
f1
 = 
x
[0] - 
f0
;

825 
f2
 = 
x
[0] + 
f0
;

826 
f3
 = 
x
[8] + x[24];

827 
f4
 = 
	`MUL_C
(
x
[8], 
	`COEF_CONST
(1.3065629648763766));

828 
f5
 = 
	`MUL_F
(
f3
, 
	`FRAC_CONST
((-0.9238795325112866)));

829 
f6
 = 
	`MUL_F
(
x
[24], 
	`FRAC_CONST
((-0.5411961001461967)));

830 
f7
 = 
f4
 + 
f5
;

831 
f8
 = 
f6
 - 
f5
;

832 
f9
 = 
f2
 - 
f8
;

833 
f10
 = 
f2
 + 
f8
;

834 
f11
 = 
f1
 - 
f7
;

835 
f12
 = 
f1
 + 
f7
;

836 
f13
 = 
x
[4] + x[28];

837 
f14
 = 
	`MUL_C
(
x
[4], 
	`COEF_CONST
(1.1758756024193588));

838 
f15
 = 
	`MUL_F
(
f13
, 
	`FRAC_CONST
((-0.9807852804032304)));

839 
f16
 = 
	`MUL_F
(
x
[28], 
	`FRAC_CONST
((-0.7856949583871021)));

840 
f17
 = 
f14
 + 
f15
;

841 
f18
 = 
f16
 - 
f15
;

842 
f19
 = 
x
[12] + x[20];

843 
f20
 = 
	`MUL_C
(
x
[12], 
	`COEF_CONST
(1.3870398453221473));

844 
f21
 = 
	`MUL_F
(
f19
, 
	`FRAC_CONST
((-0.8314696123025455)));

845 
f22
 = 
	`MUL_F
(
x
[20], 
	`FRAC_CONST
((-0.2758993792829436)));

846 
f23
 = 
f20
 + 
f21
;

847 
f24
 = 
f22
 - 
f21
;

848 
f25
 = 
f18
 - 
f24
;

849 
f26
 = 
f18
 + 
f24
;

850 
f27
 = 
	`MUL_F
(
f25
, 
	`FRAC_CONST
(0.7071067811865476));

851 
f28
 = 
f17
 - 
f23
;

852 
f29
 = 
f17
 + 
f23
;

853 
f30
 = 
	`MUL_F
(
f29
, 
	`FRAC_CONST
(0.7071067811865476));

854 
f31
 = 
f27
 - 
f30
;

855 
f32
 = 
f27
 + 
f30
;

856 
f33
 = 
f10
 - 
f26
;

857 
f34
 = 
f10
 + 
f26
;

858 
f35
 = 
f12
 - 
f32
;

859 
f36
 = 
f12
 + 
f32
;

860 
f37
 = 
f11
 - 
f31
;

861 
f38
 = 
f11
 + 
f31
;

862 
f39
 = 
f9
 - 
f28
;

863 
f40
 = 
f9
 + 
f28
;

864 
f41
 = 
x
[2] + x[30];

865 
f42
 = 
	`MUL_C
(
x
[2], 
	`COEF_CONST
(1.0932018670017569));

866 
f43
 = 
	`MUL_F
(
f41
, 
	`FRAC_CONST
((-0.9951847266721969)));

867 
f44
 = 
	`MUL_F
(
x
[30], 
	`FRAC_CONST
((-0.8971675863426368)));

868 
f45
 = 
f42
 + 
f43
;

869 
f46
 = 
f44
 - 
f43
;

870 
f47
 = 
x
[6] + x[26];

871 
f48
 = 
	`MUL_C
(
x
[6], 
	`COEF_CONST
(1.2472250129866711));

872 
f49
 = 
	`MUL_F
(
f47
, 
	`FRAC_CONST
((-0.9569403357322089)));

873 
f50
 = 
	`MUL_F
(
x
[26], 
	`FRAC_CONST
((-0.6666556584777469)));

874 
f51
 = 
f48
 + 
f49
;

875 
f52
 = 
f50
 - 
f49
;

876 
f53
 = 
x
[10] + x[22];

877 
f54
 = 
	`MUL_C
(
x
[10], 
	`COEF_CONST
(1.3533180011743526));

878 
f55
 = 
	`MUL_F
(
f53
, 
	`FRAC_CONST
((-0.8819212643483551)));

879 
f56
 = 
	`MUL_F
(
x
[22], 
	`FRAC_CONST
((-0.4105245275223575)));

880 
f57
 = 
f54
 + 
f55
;

881 
f58
 = 
f56
 - 
f55
;

882 
f59
 = 
x
[14] + x[18];

883 
f60
 = 
	`MUL_C
(
x
[14], 
	`COEF_CONST
(1.4074037375263826));

884 
f61
 = 
	`MUL_F
(
f59
, 
	`FRAC_CONST
((-0.7730104533627369)));

885 
f62
 = 
	`MUL_F
(
x
[18], 
	`FRAC_CONST
((-0.1386171691990913)));

886 
f63
 = 
f60
 + 
f61
;

887 
f64
 = 
f62
 - 
f61
;

888 
f65
 = 
f46
 - 
f64
;

889 
f66
 = 
f46
 + 
f64
;

890 
f67
 = 
f52
 - 
f58
;

891 
f68
 = 
f52
 + 
f58
;

892 
f69
 = 
f66
 - 
f68
;

893 
f70
 = 
f66
 + 
f68
;

894 
f71
 = 
	`MUL_F
(
f69
, 
	`FRAC_CONST
(0.7071067811865476));

895 
f72
 = 
f65
 + 
f67
;

896 
f73
 = 
	`MUL_C
(
f65
, 
	`COEF_CONST
(1.3065629648763766));

897 
f74
 = 
	`MUL_F
(
f72
, 
	`FRAC_CONST
((-0.9238795325112866)));

898 
f75
 = 
	`MUL_F
(
f67
, 
	`FRAC_CONST
((-0.5411961001461967)));

899 
f76
 = 
f73
 + 
f74
;

900 
f77
 = 
f75
 - 
f74
;

901 
f78
 = 
f45
 - 
f63
;

902 
f79
 = 
f45
 + 
f63
;

903 
f80
 = 
f51
 - 
f57
;

904 
f81
 = 
f51
 + 
f57
;

905 
f82
 = 
f79
 + 
f81
;

906 
f83
 = 
	`MUL_C
(
f79
, 
	`COEF_CONST
(1.3065629648763770));

907 
f84
 = 
	`MUL_F
(
f82
, 
	`FRAC_CONST
((-0.3826834323650904)));

908 
f85
 = 
	`MUL_F
(
f81
, 
	`FRAC_CONST
(0.5411961001461961));

909 
f86
 = 
f83
 + 
f84
;

910 
f87
 = 
f85
 - 
f84
;

911 
f88
 = 
f78
 - 
f80
;

912 
f89
 = 
f78
 + 
f80
;

913 
f90
 = 
	`MUL_F
(
f89
, 
	`FRAC_CONST
(0.7071067811865476));

914 
f91
 = 
f77
 - 
f87
;

915 
f92
 = 
f77
 + 
f87
;

916 
f93
 = 
f71
 - 
f90
;

917 
f94
 = 
f71
 + 
f90
;

918 
f95
 = 
f76
 - 
f86
;

919 
f96
 = 
f76
 + 
f86
;

920 
f97
 = 
f34
 - 
f70
;

921 
f98
 = 
f34
 + 
f70
;

922 
f99
 = 
f36
 - 
f92
;

923 
f100
 = 
f36
 + 
f92
;

924 
f101
 = 
f38
 - 
f91
;

925 
f102
 = 
f38
 + 
f91
;

926 
f103
 = 
f40
 - 
f94
;

927 
f104
 = 
f40
 + 
f94
;

928 
f105
 = 
f39
 - 
f93
;

929 
f106
 = 
f39
 + 
f93
;

930 
f107
 = 
f37
 - 
f96
;

931 
f108
 = 
f37
 + 
f96
;

932 
f109
 = 
f35
 - 
f95
;

933 
f110
 = 
f35
 + 
f95
;

934 
f111
 = 
f33
 - 
f88
;

935 
f112
 = 
f33
 + 
f88
;

936 
f113
 = 
x
[1] + x[31];

937 
f114
 = 
	`MUL_C
(
x
[1], 
	`COEF_CONST
(1.0478631305325901));

938 
f115
 = 
	`MUL_F
(
f113
, 
	`FRAC_CONST
((-0.9987954562051724)));

939 
f116
 = 
	`MUL_F
(
x
[31], 
	`FRAC_CONST
((-0.9497277818777548)));

940 
f117
 = 
f114
 + 
f115
;

941 
f118
 = 
f116
 - 
f115
;

942 
f119
 = 
x
[5] + x[27];

943 
f120
 = 
	`MUL_C
(
x
[5], 
	`COEF_CONST
(1.2130114330978077));

944 
f121
 = 
	`MUL_F
(
f119
, 
	`FRAC_CONST
((-0.9700312531945440)));

945 
f122
 = 
	`MUL_F
(
x
[27], 
	`FRAC_CONST
((-0.7270510732912803)));

946 
f123
 = 
f120
 + 
f121
;

947 
f124
 = 
f122
 - 
f121
;

948 
f125
 = 
x
[9] + x[23];

949 
f126
 = 
	`MUL_C
(
x
[9], 
	`COEF_CONST
(1.3315443865537255));

950 
f127
 = 
	`MUL_F
(
f125
, 
	`FRAC_CONST
((-0.9039892931234433)));

951 
f128
 = 
	`MUL_F
(
x
[23], 
	`FRAC_CONST
((-0.4764341996931612)));

952 
f129
 = 
f126
 + 
f127
;

953 
f130
 = 
f128
 - 
f127
;

954 
f131
 = 
x
[13] + x[19];

955 
f132
 = 
	`MUL_C
(
x
[13], 
	`COEF_CONST
(1.3989068359730781));

956 
f133
 = 
	`MUL_F
(
f131
, 
	`FRAC_CONST
((-0.8032075314806453)));

957 
f134
 = 
	`MUL_F
(
x
[19], 
	`FRAC_CONST
((-0.2075082269882124)));

958 
f135
 = 
f132
 + 
f133
;

959 
f136
 = 
f134
 - 
f133
;

960 
f137
 = 
x
[17] + x[15];

961 
f138
 = 
	`MUL_C
(
x
[17], 
	`COEF_CONST
(1.4125100802019777));

962 
f139
 = 
	`MUL_F
(
f137
, 
	`FRAC_CONST
((-0.6715589548470187)));

963 
f140
 = 
	`MUL_F
(
x
[15], 
	`FRAC_CONST
(0.0693921705079402));

964 
f141
 = 
f138
 + 
f139
;

965 
f142
 = 
f140
 - 
f139
;

966 
f143
 = 
x
[21] + x[11];

967 
f144
 = 
	`MUL_C
(
x
[21], 
	`COEF_CONST
(1.3718313541934939));

968 
f145
 = 
	`MUL_F
(
f143
, 
	`FRAC_CONST
((-0.5141027441932219)));

969 
f146
 = 
	`MUL_F
(
x
[11], 
	`FRAC_CONST
(0.3436258658070501));

970 
f147
 = 
f144
 + 
f145
;

971 
f148
 = 
f146
 - 
f145
;

972 
f149
 = 
x
[25] + x[7];

973 
f150
 = 
	`MUL_C
(
x
[25], 
	`COEF_CONST
(1.2784339185752409));

974 
f151
 = 
	`MUL_F
(
f149
, 
	`FRAC_CONST
((-0.3368898533922200)));

975 
f152
 = 
	`MUL_F
(
x
[7], 
	`FRAC_CONST
(0.6046542117908008));

976 
f153
 = 
f150
 + 
f151
;

977 
f154
 = 
f152
 - 
f151
;

978 
f155
 = 
x
[29] + x[3];

979 
f156
 = 
	`MUL_C
(
x
[29], 
	`COEF_CONST
(1.1359069844201433));

980 
f157
 = 
	`MUL_F
(
f155
, 
	`FRAC_CONST
((-0.1467304744553624)));

981 
f158
 = 
	`MUL_F
(
x
[3], 
	`FRAC_CONST
(0.8424460355094185));

982 
f159
 = 
f156
 + 
f157
;

983 
f160
 = 
f158
 - 
f157
;

984 
f161
 = 
f118
 - 
f142
;

985 
f162
 = 
f118
 + 
f142
;

986 
f163
 = 
f117
 - 
f141
;

987 
f164
 = 
f117
 + 
f141
;

988 
f165
 = 
f124
 - 
f148
;

989 
f166
 = 
f124
 + 
f148
;

990 
f167
 = 
f123
 - 
f147
;

991 
f168
 = 
f123
 + 
f147
;

992 
f169
 = 
f130
 - 
f154
;

993 
f170
 = 
f130
 + 
f154
;

994 
f171
 = 
f129
 - 
f153
;

995 
f172
 = 
f129
 + 
f153
;

996 
f173
 = 
f136
 - 
f160
;

997 
f174
 = 
f136
 + 
f160
;

998 
f175
 = 
f135
 - 
f159
;

999 
f176
 = 
f135
 + 
f159
;

1000 
f177
 = 
f161
 + 
f163
;

1001 
f178
 = 
	`MUL_C
(
f161
, 
	`COEF_CONST
(1.1758756024193588));

1002 
f179
 = 
	`MUL_F
(
f177
, 
	`FRAC_CONST
((-0.9807852804032304)));

1003 
f180
 = 
	`MUL_F
(
f163
, 
	`FRAC_CONST
((-0.7856949583871021)));

1004 
f181
 = 
f178
 + 
f179
;

1005 
f182
 = 
f180
 - 
f179
;

1006 
f183
 = 
f165
 + 
f167
;

1007 
f184
 = 
	`MUL_C
(
f165
, 
	`COEF_CONST
(1.3870398453221475));

1008 
f185
 = 
	`MUL_F
(
f183
, 
	`FRAC_CONST
((-0.5555702330196022)));

1009 
f186
 = 
	`MUL_F
(
f167
, 
	`FRAC_CONST
(0.2758993792829431));

1010 
f187
 = 
f184
 + 
f185
;

1011 
f188
 = 
f186
 - 
f185
;

1012 
f189
 = 
f169
 + 
f171
;

1013 
f190
 = 
	`MUL_F
(
f169
, 
	`FRAC_CONST
(0.7856949583871022));

1014 
f191
 = 
	`MUL_F
(
f189
, 
	`FRAC_CONST
(0.1950903220161283));

1015 
f192
 = 
	`MUL_C
(
f171
, 
	`COEF_CONST
(1.1758756024193586));

1016 
f193
 = 
f190
 + 
f191
;

1017 
f194
 = 
f192
 - 
f191
;

1018 
f195
 = 
f173
 + 
f175
;

1019 
f196
 = 
	`MUL_F
(
f173
, 
	`FRAC_CONST
((-0.2758993792829430)));

1020 
f197
 = 
	`MUL_F
(
f195
, 
	`FRAC_CONST
(0.8314696123025452));

1021 
f198
 = 
	`MUL_C
(
f175
, 
	`COEF_CONST
(1.3870398453221475));

1022 
f199
 = 
f196
 + 
f197
;

1023 
f200
 = 
f198
 - 
f197
;

1024 
f201
 = 
f162
 - 
f170
;

1025 
f202
 = 
f162
 + 
f170
;

1026 
f203
 = 
f164
 - 
f172
;

1027 
f204
 = 
f164
 + 
f172
;

1028 
f205
 = 
f166
 - 
f174
;

1029 
f206
 = 
f166
 + 
f174
;

1030 
f207
 = 
f168
 - 
f176
;

1031 
f208
 = 
f168
 + 
f176
;

1032 
f209
 = 
f182
 - 
f194
;

1033 
f210
 = 
f182
 + 
f194
;

1034 
f211
 = 
f181
 - 
f193
;

1035 
f212
 = 
f181
 + 
f193
;

1036 
f213
 = 
f188
 - 
f200
;

1037 
f214
 = 
f188
 + 
f200
;

1038 
f215
 = 
f187
 - 
f199
;

1039 
f216
 = 
f187
 + 
f199
;

1040 
f217
 = 
f201
 + 
f203
;

1041 
f218
 = 
	`MUL_C
(
f201
, 
	`COEF_CONST
(1.3065629648763766));

1042 
f219
 = 
	`MUL_F
(
f217
, 
	`FRAC_CONST
((-0.9238795325112866)));

1043 
f220
 = 
	`MUL_F
(
f203
, 
	`FRAC_CONST
((-0.5411961001461967)));

1044 
f221
 = 
f218
 + 
f219
;

1045 
f222
 = 
f220
 - 
f219
;

1046 
f223
 = 
f205
 + 
f207
;

1047 
f224
 = 
	`MUL_F
(
f205
, 
	`FRAC_CONST
(0.5411961001461969));

1048 
f225
 = 
	`MUL_F
(
f223
, 
	`FRAC_CONST
(0.3826834323650898));

1049 
f226
 = 
	`MUL_C
(
f207
, 
	`COEF_CONST
(1.3065629648763766));

1050 
f227
 = 
f224
 + 
f225
;

1051 
f228
 = 
f226
 - 
f225
;

1052 
f229
 = 
f209
 + 
f211
;

1053 
f230
 = 
	`MUL_C
(
f209
, 
	`COEF_CONST
(1.3065629648763766));

1054 
f231
 = 
	`MUL_F
(
f229
, 
	`FRAC_CONST
((-0.9238795325112866)));

1055 
f232
 = 
	`MUL_F
(
f211
, 
	`FRAC_CONST
((-0.5411961001461967)));

1056 
f233
 = 
f230
 + 
f231
;

1057 
f234
 = 
f232
 - 
f231
;

1058 
f235
 = 
f213
 + 
f215
;

1059 
f236
 = 
	`MUL_F
(
f213
, 
	`FRAC_CONST
(0.5411961001461969));

1060 
f237
 = 
	`MUL_F
(
f235
, 
	`FRAC_CONST
(0.3826834323650898));

1061 
f238
 = 
	`MUL_C
(
f215
, 
	`COEF_CONST
(1.3065629648763766));

1062 
f239
 = 
f236
 + 
f237
;

1063 
f240
 = 
f238
 - 
f237
;

1064 
f241
 = 
f202
 - 
f206
;

1065 
f242
 = 
f202
 + 
f206
;

1066 
f243
 = 
f204
 - 
f208
;

1067 
f244
 = 
f204
 + 
f208
;

1068 
f245
 = 
f222
 - 
f228
;

1069 
f246
 = 
f222
 + 
f228
;

1070 
f247
 = 
f221
 - 
f227
;

1071 
f248
 = 
f221
 + 
f227
;

1072 
f249
 = 
f210
 - 
f214
;

1073 
f250
 = 
f210
 + 
f214
;

1074 
f251
 = 
f212
 - 
f216
;

1075 
f252
 = 
f212
 + 
f216
;

1076 
f253
 = 
f234
 - 
f240
;

1077 
f254
 = 
f234
 + 
f240
;

1078 
f255
 = 
f233
 - 
f239
;

1079 
f256
 = 
f233
 + 
f239
;

1080 
f257
 = 
f241
 - 
f243
;

1081 
f258
 = 
f241
 + 
f243
;

1082 
f259
 = 
	`MUL_F
(
f257
, 
	`FRAC_CONST
(0.7071067811865474));

1083 
f260
 = 
	`MUL_F
(
f258
, 
	`FRAC_CONST
(0.7071067811865474));

1084 
f261
 = 
f245
 - 
f247
;

1085 
f262
 = 
f245
 + 
f247
;

1086 
f263
 = 
	`MUL_F
(
f261
, 
	`FRAC_CONST
(0.7071067811865474));

1087 
f264
 = 
	`MUL_F
(
f262
, 
	`FRAC_CONST
(0.7071067811865474));

1088 
f265
 = 
f249
 - 
f251
;

1089 
f266
 = 
f249
 + 
f251
;

1090 
f267
 = 
	`MUL_F
(
f265
, 
	`FRAC_CONST
(0.7071067811865474));

1091 
f268
 = 
	`MUL_F
(
f266
, 
	`FRAC_CONST
(0.7071067811865474));

1092 
f269
 = 
f253
 - 
f255
;

1093 
f270
 = 
f253
 + 
f255
;

1094 
f271
 = 
	`MUL_F
(
f269
, 
	`FRAC_CONST
(0.7071067811865474));

1095 
f272
 = 
	`MUL_F
(
f270
, 
	`FRAC_CONST
(0.7071067811865474));

1096 
y
[31] = 
f98
 - 
f242
;

1097 
y
[0] = 
f98
 + 
f242
;

1098 
y
[30] = 
f100
 - 
f250
;

1099 
y
[1] = 
f100
 + 
f250
;

1100 
y
[29] = 
f102
 - 
f254
;

1101 
y
[2] = 
f102
 + 
f254
;

1102 
y
[28] = 
f104
 - 
f246
;

1103 
y
[3] = 
f104
 + 
f246
;

1104 
y
[27] = 
f106
 - 
f264
;

1105 
y
[4] = 
f106
 + 
f264
;

1106 
y
[26] = 
f108
 - 
f272
;

1107 
y
[5] = 
f108
 + 
f272
;

1108 
y
[25] = 
f110
 - 
f268
;

1109 
y
[6] = 
f110
 + 
f268
;

1110 
y
[24] = 
f112
 - 
f260
;

1111 
y
[7] = 
f112
 + 
f260
;

1112 
y
[23] = 
f111
 - 
f259
;

1113 
y
[8] = 
f111
 + 
f259
;

1114 
y
[22] = 
f109
 - 
f267
;

1115 
y
[9] = 
f109
 + 
f267
;

1116 
y
[21] = 
f107
 - 
f271
;

1117 
y
[10] = 
f107
 + 
f271
;

1118 
y
[20] = 
f105
 - 
f263
;

1119 
y
[11] = 
f105
 + 
f263
;

1120 
y
[19] = 
f103
 - 
f248
;

1121 
y
[12] = 
f103
 + 
f248
;

1122 
y
[18] = 
f101
 - 
f256
;

1123 
y
[13] = 
f101
 + 
f256
;

1124 
y
[17] = 
f99
 - 
f252
;

1125 
y
[14] = 
f99
 + 
f252
;

1126 
y
[16] = 
f97
 - 
f244
;

1127 
y
[15] = 
f97
 + 
f244
;

1128 
	}
}

1130 
	$DCT2_32_unsˇÀd
(
ªÆ_t
 *
y
,Ñól_à*
x
)

1132 
ªÆ_t
 
f0
, 
f1
, 
f2
, 
f3
, 
f4
, 
f5
, 
f6
, 
f7
, 
f8
, 
f9
, 
f10
;

1133 
ªÆ_t
 
f11
, 
f12
, 
f13
, 
f14
, 
f15
, 
f16
, 
f17
, 
f18
, 
f19
, 
f20
;

1134 
ªÆ_t
 
f21
, 
f22
, 
f23
, 
f24
, 
f25
, 
f26
, 
f27
, 
f28
, 
f29
, 
f30
;

1135 
ªÆ_t
 
f31
, 
f32
, 
f33
, 
f34
, 
f35
, 
f36
, 
f37
, 
f38
, 
f39
, 
f40
;

1136 
ªÆ_t
 
f41
, 
f42
, 
f43
, 
f44
, 
f45
, 
f46
, 
f47
, 
f48
, 
f49
, 
f50
;

1137 
ªÆ_t
 
f51
, 
f52
, 
f53
, 
f54
, 
f55
, 
f56
, 
f57
, 
f58
, 
f59
, 
f60
;

1138 
ªÆ_t
 
f63
, 
f64
, 
f65
, 
f66
, 
f69
, 
f70
, 
f71
, 
f72
, 
f73
, 
f74
;

1139 
ªÆ_t
 
f75
, 
f76
, 
f77
, 
f78
, 
f79
, 
f80
, 
f81
, 
f83
, 
f85
, 
f86
;

1140 
ªÆ_t
 
f89
, 
f90
, 
f91
, 
f92
, 
f93
, 
f94
, 
f95
, 
f96
, 
f97
, 
f98
;

1141 
ªÆ_t
 
f99
, 
f100
, 
f101
, 
f102
, 
f103
, 
f104
, 
f105
, 
f106
, 
f107
, 
f108
;

1142 
ªÆ_t
 
f109
, 
f110
, 
f111
, 
f112
, 
f113
, 
f114
, 
f115
, 
f116
, 
f117
, 
f118
;

1143 
ªÆ_t
 
f119
, 
f120
, 
f121
, 
f122
, 
f123
, 
f124
, 
f127
, 
f128
, 
f129
, 
f130
;

1144 
ªÆ_t
 
f133
, 
f134
, 
f135
, 
f136
, 
f139
, 
f140
, 
f141
, 
f142
, 
f145
, 
f146
;

1145 
ªÆ_t
 
f147
, 
f148
, 
f149
, 
f150
, 
f151
, 
f152
, 
f153
, 
f154
, 
f155
, 
f156
;

1146 
ªÆ_t
 
f157
, 
f158
, 
f159
, 
f160
, 
f161
, 
f162
, 
f163
, 
f164
, 
f165
, 
f166
;

1147 
ªÆ_t
 
f167
, 
f168
, 
f169
, 
f170
, 
f171
, 
f172
, 
f173
, 
f174
, 
f175
, 
f176
;

1148 
ªÆ_t
 
f177
, 
f178
, 
f179
, 
f180
, 
f181
, 
f182
, 
f183
, 
f184
, 
f185
, 
f186
;

1149 
ªÆ_t
 
f187
, 
f188
, 
f189
, 
f190
, 
f191
, 
f192
, 
f193
, 
f194
, 
f195
, 
f196
;

1150 
ªÆ_t
 
f197
, 
f198
, 
f199
, 
f200
, 
f201
, 
f202
, 
f203
, 
f204
, 
f205
, 
f206
;

1151 
ªÆ_t
 
f207
, 
f208
, 
f209
, 
f210
, 
f211
, 
f212
, 
f213
, 
f214
, 
f215
, 
f216
;

1152 
ªÆ_t
 
f217
, 
f218
, 
f219
, 
f220
, 
f221
, 
f222
, 
f223
, 
f224
, 
f225
, 
f226
;

1153 
ªÆ_t
 
f227
, 
f228
, 
f229
, 
f230
, 
f231
, 
f232
, 
f233
, 
f234
, 
f235
, 
f236
;

1154 
ªÆ_t
 
f237
, 
f238
, 
f239
, 
f240
, 
f241
, 
f242
, 
f243
, 
f244
, 
f247
, 
f248
;

1155 
ªÆ_t
 
f249
, 
f250
, 
f253
, 
f254
, 
f255
, 
f256
, 
f259
, 
f260
, 
f261
, 
f262
;

1156 
ªÆ_t
 
f265
, 
f266
, 
f267
, 
f268
, 
f271
, 
f272
, 
f273
, 
f274
, 
f277
, 
f278
;

1157 
ªÆ_t
 
f279
, 
f280
, 
f283
, 
f284
, 
f285
, 
f286
;

1159 
f0
 = 
x
[0] - x[31];

1160 
f1
 = 
x
[0] + x[31];

1161 
f2
 = 
x
[1] - x[30];

1162 
f3
 = 
x
[1] + x[30];

1163 
f4
 = 
x
[2] - x[29];

1164 
f5
 = 
x
[2] + x[29];

1165 
f6
 = 
x
[3] - x[28];

1166 
f7
 = 
x
[3] + x[28];

1167 
f8
 = 
x
[4] - x[27];

1168 
f9
 = 
x
[4] + x[27];

1169 
f10
 = 
x
[5] - x[26];

1170 
f11
 = 
x
[5] + x[26];

1171 
f12
 = 
x
[6] - x[25];

1172 
f13
 = 
x
[6] + x[25];

1173 
f14
 = 
x
[7] - x[24];

1174 
f15
 = 
x
[7] + x[24];

1175 
f16
 = 
x
[8] - x[23];

1176 
f17
 = 
x
[8] + x[23];

1177 
f18
 = 
x
[9] - x[22];

1178 
f19
 = 
x
[9] + x[22];

1179 
f20
 = 
x
[10] - x[21];

1180 
f21
 = 
x
[10] + x[21];

1181 
f22
 = 
x
[11] - x[20];

1182 
f23
 = 
x
[11] + x[20];

1183 
f24
 = 
x
[12] - x[19];

1184 
f25
 = 
x
[12] + x[19];

1185 
f26
 = 
x
[13] - x[18];

1186 
f27
 = 
x
[13] + x[18];

1187 
f28
 = 
x
[14] - x[17];

1188 
f29
 = 
x
[14] + x[17];

1189 
f30
 = 
x
[15] - x[16];

1190 
f31
 = 
x
[15] + x[16];

1191 
f32
 = 
f1
 - 
f31
;

1192 
f33
 = 
f1
 + 
f31
;

1193 
f34
 = 
f3
 - 
f29
;

1194 
f35
 = 
f3
 + 
f29
;

1195 
f36
 = 
f5
 - 
f27
;

1196 
f37
 = 
f5
 + 
f27
;

1197 
f38
 = 
f7
 - 
f25
;

1198 
f39
 = 
f7
 + 
f25
;

1199 
f40
 = 
f9
 - 
f23
;

1200 
f41
 = 
f9
 + 
f23
;

1201 
f42
 = 
f11
 - 
f21
;

1202 
f43
 = 
f11
 + 
f21
;

1203 
f44
 = 
f13
 - 
f19
;

1204 
f45
 = 
f13
 + 
f19
;

1205 
f46
 = 
f15
 - 
f17
;

1206 
f47
 = 
f15
 + 
f17
;

1207 
f48
 = 
f33
 - 
f47
;

1208 
f49
 = 
f33
 + 
f47
;

1209 
f50
 = 
f35
 - 
f45
;

1210 
f51
 = 
f35
 + 
f45
;

1211 
f52
 = 
f37
 - 
f43
;

1212 
f53
 = 
f37
 + 
f43
;

1213 
f54
 = 
f39
 - 
f41
;

1214 
f55
 = 
f39
 + 
f41
;

1215 
f56
 = 
f49
 - 
f55
;

1216 
f57
 = 
f49
 + 
f55
;

1217 
f58
 = 
f51
 - 
f53
;

1218 
f59
 = 
f51
 + 
f53
;

1219 
f60
 = 
f57
 - 
f59
;

1220 
y
[0] = 
f57
 + 
f59
;

1221 
y
[16] = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f60
);

1222 
f63
 = 
f56
 + 
f58
;

1223 
f64
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f56
);

1224 
f65
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9238795325112866), 
f63
);

1225 
f66
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5411961001461967), 
f58
);

1226 
y
[24] = 
f64
 + 
f65
;

1227 
y
[8] = 
f66
 - 
f65
;

1228 
f69
 = 
f48
 + 
f54
;

1229 
f70
 = 
	`MUL_C
(
	`COEF_CONST
(1.1758756024193588), 
f48
);

1230 
f71
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9807852804032304), 
f69
);

1231 
f72
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.7856949583871021), 
f54
);

1232 
f73
 = 
f70
 + 
f71
;

1233 
f74
 = 
f72
 - 
f71
;

1234 
f75
 = 
f50
 + 
f52
;

1235 
f76
 = 
	`MUL_C
(
	`COEF_CONST
(1.3870398453221473), 
f50
);

1236 
f77
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.8314696123025455), 
f75
);

1237 
f78
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.2758993792829436), 
f52
);

1238 
f79
 = 
f76
 + 
f77
;

1239 
f80
 = 
f78
 - 
f77
;

1240 
f81
 = 
f74
 - 
f80
;

1241 
y
[4] = 
f74
 + 
f80
;

1242 
f83
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f81
);

1243 
y
[28] = 
f73
 - 
f79
;

1244 
f85
 = 
f73
 + 
f79
;

1245 
f86
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f85
);

1246 
y
[20] = 
f83
 - 
f86
;

1247 
y
[12] = 
f83
 + 
f86
;

1248 
f89
 = 
f34
 - 
f36
;

1249 
f90
 = 
f34
 + 
f36
;

1250 
f91
 = 
f38
 - 
f40
;

1251 
f92
 = 
f38
 + 
f40
;

1252 
f93
 = 
f42
 - 
f44
;

1253 
f94
 = 
f42
 + 
f44
;

1254 
f95
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f92
);

1255 
f96
 = 
f32
 - 
f95
;

1256 
f97
 = 
f32
 + 
f95
;

1257 
f98
 = 
f90
 + 
f94
;

1258 
f99
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f90
);

1259 
f100
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9238795325112866), 
f98
);

1260 
f101
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5411961001461967), 
f94
);

1261 
f102
 = 
f99
 + 
f100
;

1262 
f103
 = 
f101
 - 
f100
;

1263 
f104
 = 
f97
 - 
f103
;

1264 
f105
 = 
f97
 + 
f103
;

1265 
f106
 = 
f96
 - 
f102
;

1266 
f107
 = 
f96
 + 
f102
;

1267 
f108
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f91
);

1268 
f109
 = 
f46
 - 
f108
;

1269 
f110
 = 
f46
 + 
f108
;

1270 
f111
 = 
f93
 + 
f89
;

1271 
f112
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f93
);

1272 
f113
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9238795325112866), 
f111
);

1273 
f114
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5411961001461967), 
f89
);

1274 
f115
 = 
f112
 + 
f113
;

1275 
f116
 = 
f114
 - 
f113
;

1276 
f117
 = 
f110
 - 
f116
;

1277 
f118
 = 
f110
 + 
f116
;

1278 
f119
 = 
f109
 - 
f115
;

1279 
f120
 = 
f109
 + 
f115
;

1280 
f121
 = 
f118
 + 
f105
;

1281 
f122
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.8971675863426361), 
f118
);

1282 
f123
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9951847266721968), 
f121
);

1283 
f124
 = 
	`MUL_C
(
	`COEF_CONST
(1.0932018670017576), 
f105
);

1284 
y
[2] = 
f122
 + 
f123
;

1285 
y
[30] = 
f124
 - 
f123
;

1286 
f127
 = 
f107
 - 
f120
;

1287 
f128
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.6666556584777466), 
f120
);

1288 
f129
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9569403357322089), 
f127
);

1289 
f130
 = 
	`MUL_C
(
	`COEF_CONST
(1.2472250129866713), 
f107
);

1290 
y
[6] = 
f129
 - 
f128
;

1291 
y
[26] = 
f130
 - 
f129
;

1292 
f133
 = 
f119
 + 
f106
;

1293 
f134
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.4105245275223571), 
f119
);

1294 
f135
 = 
	`MUL_F
(
	`FRAC_CONST
(0.8819212643483549), 
f133
);

1295 
f136
 = 
	`MUL_C
(
	`COEF_CONST
(1.3533180011743529), 
f106
);

1296 
y
[10] = 
f134
 + 
f135
;

1297 
y
[22] = 
f136
 - 
f135
;

1298 
f139
 = 
f104
 - 
f117
;

1299 
f140
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.1386171691990915), 
f117
);

1300 
f141
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7730104533627370), 
f139
);

1301 
f142
 = 
	`MUL_C
(
	`COEF_CONST
(1.4074037375263826), 
f104
);

1302 
y
[14] = 
f141
 - 
f140
;

1303 
y
[18] = 
f142
 - 
f141
;

1304 
f145
 = 
f2
 - 
f4
;

1305 
f146
 = 
f2
 + 
f4
;

1306 
f147
 = 
f6
 - 
f8
;

1307 
f148
 = 
f6
 + 
f8
;

1308 
f149
 = 
f10
 - 
f12
;

1309 
f150
 = 
f10
 + 
f12
;

1310 
f151
 = 
f14
 - 
f16
;

1311 
f152
 = 
f14
 + 
f16
;

1312 
f153
 = 
f18
 - 
f20
;

1313 
f154
 = 
f18
 + 
f20
;

1314 
f155
 = 
f22
 - 
f24
;

1315 
f156
 = 
f22
 + 
f24
;

1316 
f157
 = 
f26
 - 
f28
;

1317 
f158
 = 
f26
 + 
f28
;

1318 
f159
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f152
);

1319 
f160
 = 
f0
 - 
f159
;

1320 
f161
 = 
f0
 + 
f159
;

1321 
f162
 = 
f148
 + 
f156
;

1322 
f163
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f148
);

1323 
f164
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9238795325112866), 
f162
);

1324 
f165
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5411961001461967), 
f156
);

1325 
f166
 = 
f163
 + 
f164
;

1326 
f167
 = 
f165
 - 
f164
;

1327 
f168
 = 
f161
 - 
f167
;

1328 
f169
 = 
f161
 + 
f167
;

1329 
f170
 = 
f160
 - 
f166
;

1330 
f171
 = 
f160
 + 
f166
;

1331 
f172
 = 
f146
 + 
f158
;

1332 
f173
 = 
	`MUL_C
(
	`COEF_CONST
(1.1758756024193588), 
f146
);

1333 
f174
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9807852804032304), 
f172
);

1334 
f175
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.7856949583871021), 
f158
);

1335 
f176
 = 
f173
 + 
f174
;

1336 
f177
 = 
f175
 - 
f174
;

1337 
f178
 = 
f150
 + 
f154
;

1338 
f179
 = 
	`MUL_C
(
	`COEF_CONST
(1.3870398453221473), 
f150
);

1339 
f180
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.8314696123025455), 
f178
);

1340 
f181
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.2758993792829436), 
f154
);

1341 
f182
 = 
f179
 + 
f180
;

1342 
f183
 = 
f181
 - 
f180
;

1343 
f184
 = 
f177
 - 
f183
;

1344 
f185
 = 
f177
 + 
f183
;

1345 
f186
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f184
);

1346 
f187
 = 
f176
 - 
f182
;

1347 
f188
 = 
f176
 + 
f182
;

1348 
f189
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f188
);

1349 
f190
 = 
f186
 - 
f189
;

1350 
f191
 = 
f186
 + 
f189
;

1351 
f192
 = 
f169
 - 
f185
;

1352 
f193
 = 
f169
 + 
f185
;

1353 
f194
 = 
f171
 - 
f191
;

1354 
f195
 = 
f171
 + 
f191
;

1355 
f196
 = 
f170
 - 
f190
;

1356 
f197
 = 
f170
 + 
f190
;

1357 
f198
 = 
f168
 - 
f187
;

1358 
f199
 = 
f168
 + 
f187
;

1359 
f200
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f151
);

1360 
f201
 = 
f30
 - 
f200
;

1361 
f202
 = 
f30
 + 
f200
;

1362 
f203
 = 
f155
 + 
f147
;

1363 
f204
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f155
);

1364 
f205
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9238795325112866), 
f203
);

1365 
f206
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5411961001461967), 
f147
);

1366 
f207
 = 
f204
 + 
f205
;

1367 
f208
 = 
f206
 - 
f205
;

1368 
f209
 = 
f202
 - 
f208
;

1369 
f210
 = 
f202
 + 
f208
;

1370 
f211
 = 
f201
 - 
f207
;

1371 
f212
 = 
f201
 + 
f207
;

1372 
f213
 = 
f157
 + 
f145
;

1373 
f214
 = 
	`MUL_C
(
	`COEF_CONST
(1.1758756024193588), 
f157
);

1374 
f215
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9807852804032304), 
f213
);

1375 
f216
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.7856949583871021), 
f145
);

1376 
f217
 = 
f214
 + 
f215
;

1377 
f218
 = 
f216
 - 
f215
;

1378 
f219
 = 
f153
 + 
f149
;

1379 
f220
 = 
	`MUL_C
(
	`COEF_CONST
(1.3870398453221473), 
f153
);

1380 
f221
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.8314696123025455), 
f219
);

1381 
f222
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.2758993792829436), 
f149
);

1382 
f223
 = 
f220
 + 
f221
;

1383 
f224
 = 
f222
 - 
f221
;

1384 
f225
 = 
f218
 - 
f224
;

1385 
f226
 = 
f218
 + 
f224
;

1386 
f227
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f225
);

1387 
f228
 = 
f217
 - 
f223
;

1388 
f229
 = 
f217
 + 
f223
;

1389 
f230
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f229
);

1390 
f231
 = 
f227
 - 
f230
;

1391 
f232
 = 
f227
 + 
f230
;

1392 
f233
 = 
f210
 - 
f226
;

1393 
f234
 = 
f210
 + 
f226
;

1394 
f235
 = 
f212
 - 
f232
;

1395 
f236
 = 
f212
 + 
f232
;

1396 
f237
 = 
f211
 - 
f231
;

1397 
f238
 = 
f211
 + 
f231
;

1398 
f239
 = 
f209
 - 
f228
;

1399 
f240
 = 
f209
 + 
f228
;

1400 
f241
 = 
f234
 + 
f193
;

1401 
f242
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9497277818777543), 
f234
);

1402 
f243
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9987954562051724), 
f241
);

1403 
f244
 = 
	`MUL_C
(
	`COEF_CONST
(1.0478631305325905), 
f193
);

1404 
y
[1] = 
f242
 + 
f243
;

1405 
y
[31] = 
f244
 - 
f243
;

1406 
f247
 = 
f195
 - 
f236
;

1407 
f248
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.8424460355094192), 
f236
);

1408 
f249
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9891765099647810), 
f247
);

1409 
f250
 = 
	`MUL_C
(
	`COEF_CONST
(1.1359069844201428), 
f195
);

1410 
y
[3] = 
f249
 - 
f248
;

1411 
y
[29] = 
f250
 - 
f249
;

1412 
f253
 = 
f238
 + 
f197
;

1413 
f254
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.7270510732912801), 
f238
);

1414 
f255
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9700312531945440), 
f253
);

1415 
f256
 = 
	`MUL_C
(
	`COEF_CONST
(1.2130114330978079), 
f197
);

1416 
y
[5] = 
f254
 + 
f255
;

1417 
y
[27] = 
f256
 - 
f255
;

1418 
f259
 = 
f199
 - 
f240
;

1419 
f260
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.6046542117908007), 
f240
);

1420 
f261
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9415440651830208), 
f259
);

1421 
f262
 = 
	`MUL_C
(
	`COEF_CONST
(1.2784339185752409), 
f199
);

1422 
y
[7] = 
f261
 - 
f260
;

1423 
y
[25] = 
f262
 - 
f261
;

1424 
f265
 = 
f239
 + 
f198
;

1425 
f266
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.4764341996931611), 
f239
);

1426 
f267
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9039892931234433), 
f265
);

1427 
f268
 = 
	`MUL_C
(
	`COEF_CONST
(1.3315443865537255), 
f198
);

1428 
y
[9] = 
f266
 + 
f267
;

1429 
y
[23] = 
f268
 - 
f267
;

1430 
f271
 = 
f196
 - 
f237
;

1431 
f272
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.3436258658070505), 
f237
);

1432 
f273
 = 
	`MUL_F
(
	`FRAC_CONST
(0.8577286100002721), 
f271
);

1433 
f274
 = 
	`MUL_C
(
	`COEF_CONST
(1.3718313541934939), 
f196
);

1434 
y
[11] = 
f273
 - 
f272
;

1435 
y
[21] = 
f274
 - 
f273
;

1436 
f277
 = 
f235
 + 
f194
;

1437 
f278
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.2075082269882114), 
f235
);

1438 
f279
 = 
	`MUL_F
(
	`FRAC_CONST
(0.8032075314806448), 
f277
);

1439 
f280
 = 
	`MUL_C
(
	`COEF_CONST
(1.3989068359730783), 
f194
);

1440 
y
[13] = 
f278
 + 
f279
;

1441 
y
[19] = 
f280
 - 
f279
;

1442 
f283
 = 
f192
 - 
f233
;

1443 
f284
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.0693921705079408), 
f233
);

1444 
f285
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7409511253549591), 
f283
);

1445 
f286
 = 
	`MUL_C
(
	`COEF_CONST
(1.4125100802019774), 
f192
);

1446 
y
[15] = 
f285
 - 
f284
;

1447 
y
[17] = 
f286
 - 
f285
;

1448 
	}
}

1453 
	#n
 32

	)

1454 
	#log2n
 5

	)

1457 c⁄° 
ªÆ_t
 
	gw_¨øy_ªÆ
[] = {

1458 
FRAC_CONST
(1.000000000000000), FRAC_CONST(0.980785279337272),

1459 
FRAC_CONST
(0.923879528329380), FRAC_CONST(0.831469603195765),

1460 
FRAC_CONST
(0.707106765732237), FRAC_CONST(0.555570210304169),

1461 
FRAC_CONST
(0.382683402077046), FRAC_CONST(0.195090284503576),

1462 
FRAC_CONST
(0.000000000000000), FRAC_CONST(-0.195090370246552),

1463 
FRAC_CONST
(-0.382683482845162), FRAC_CONST(-0.555570282993553),

1464 
FRAC_CONST
(-0.707106827549476), FRAC_CONST(-0.831469651765257),

1465 
FRAC_CONST
(-0.923879561784627), FRAC_CONST(-0.980785296392607)

1469 c⁄° 
ªÆ_t
 
	gw_¨øy_imag
[] = {

1470 
FRAC_CONST
(0.000000000000000), FRAC_CONST(-0.195090327375064),

1471 
FRAC_CONST
(-0.382683442461104), FRAC_CONST(-0.555570246648862),

1472 
FRAC_CONST
(-0.707106796640858), FRAC_CONST(-0.831469627480512),

1473 
FRAC_CONST
(-0.923879545057005), FRAC_CONST(-0.980785287864940),

1474 
FRAC_CONST
(-1.000000000000000), FRAC_CONST(-0.980785270809601),

1475 
FRAC_CONST
(-0.923879511601754), FRAC_CONST(-0.831469578911016),

1476 
FRAC_CONST
(-0.707106734823616), FRAC_CONST(-0.555570173959476),

1477 
FRAC_CONST
(-0.382683361692986), FRAC_CONST(-0.195090241632088)

1483 
	$f·_dif
(
ªÆ_t
 * 
Ról
,Ñól_à* 
Imag
)

1485 
ªÆ_t
 
w_ªÆ
, 
w_imag
;

1486 
ªÆ_t
 
poöt1_ªÆ
, 
poöt1_imag
, 
poöt2_ªÆ
, 
poöt2_imag
;

1487 
uöt32_t
 
j
, 
i
, 
i2
, 
w_ödex
;

1493 
i
 = 0; i < 16; i++)

1495 
poöt1_ªÆ
 = 
Ról
[
i
];

1496 
poöt1_imag
 = 
Imag
[
i
];

1497 
i2
 = 
i
+16;

1498 
poöt2_ªÆ
 = 
Ról
[
i2
];

1499 
poöt2_imag
 = 
Imag
[
i2
];

1501 
w_ªÆ
 = 
w_¨øy_ªÆ
[
i
];

1502 
w_imag
 = 
w_¨øy_imag
[
i
];

1505 
poöt1_ªÆ
 -
poöt2_ªÆ
;

1506 
poöt1_imag
 -
poöt2_imag
;

1509 
Ról
[
i
] +
poöt2_ªÆ
;

1510 
Imag
[
i
] +
poöt2_imag
;

1513 
Ról
[
i2
] = (
	`MUL_F
(
poöt1_ªÆ
,
w_ªÆ
Ë- MUL_F(
poöt1_imag
,
w_imag
));

1514 
Imag
[
i2
] = (
	`MUL_F
(
poöt1_ªÆ
,
w_imag
Ë+ MUL_F(
poöt1_imag
,
w_ªÆ
));

1517 
j
 = 0, 
w_ödex
 = 0; j < 8; j++, w_index += 2)

1519 
w_ªÆ
 = 
w_¨øy_ªÆ
[
w_ödex
];

1520 
w_imag
 = 
w_¨øy_imag
[
w_ödex
];

1522 
i
 = 
j
;

1523 
poöt1_ªÆ
 = 
Ról
[
i
];

1524 
poöt1_imag
 = 
Imag
[
i
];

1525 
i2
 = 
i
+8;

1526 
poöt2_ªÆ
 = 
Ról
[
i2
];

1527 
poöt2_imag
 = 
Imag
[
i2
];

1530 
poöt1_ªÆ
 -
poöt2_ªÆ
;

1531 
poöt1_imag
 -
poöt2_imag
;

1534 
Ról
[
i
] +
poöt2_ªÆ
;

1535 
Imag
[
i
] +
poöt2_imag
;

1538 
Ról
[
i2
] = (
	`MUL_F
(
poöt1_ªÆ
,
w_ªÆ
Ë- MUL_F(
poöt1_imag
,
w_imag
));

1539 
Imag
[
i2
] = (
	`MUL_F
(
poöt1_ªÆ
,
w_imag
Ë+ MUL_F(
poöt1_imag
,
w_ªÆ
));

1541 
i
 = 
j
+16;

1542 
poöt1_ªÆ
 = 
Ról
[
i
];

1543 
poöt1_imag
 = 
Imag
[
i
];

1544 
i2
 = 
i
+8;

1545 
poöt2_ªÆ
 = 
Ról
[
i2
];

1546 
poöt2_imag
 = 
Imag
[
i2
];

1549 
poöt1_ªÆ
 -
poöt2_ªÆ
;

1550 
poöt1_imag
 -
poöt2_imag
;

1553 
Ról
[
i
] +
poöt2_ªÆ
;

1554 
Imag
[
i
] +
poöt2_imag
;

1557 
Ról
[
i2
] = (
	`MUL_F
(
poöt1_ªÆ
,
w_ªÆ
Ë- MUL_F(
poöt1_imag
,
w_imag
));

1558 
Imag
[
i2
] = (
	`MUL_F
(
poöt1_ªÆ
,
w_imag
Ë+ MUL_F(
poöt1_imag
,
w_ªÆ
));

1564 
i
 = 0; i < 
n
; i += 8)

1566 
i2
 = 
i
+4;

1567 
poöt1_ªÆ
 = 
Ról
[
i
];

1568 
poöt1_imag
 = 
Imag
[
i
];

1570 
poöt2_ªÆ
 = 
Ról
[
i2
];

1571 
poöt2_imag
 = 
Imag
[
i2
];

1574 
Ról
[
i
] +
poöt2_ªÆ
;

1575 
Imag
[
i
] +
poöt2_imag
;

1578 
Ról
[
i2
] = 
poöt1_ªÆ
 - 
poöt2_ªÆ
;

1579 
Imag
[
i2
] = 
poöt1_imag
 - 
poöt2_imag
;

1581 
w_ªÆ
 = 
w_¨øy_ªÆ
[4];

1583 
i
 = 1; i < 
n
; i += 8)

1585 
i2
 = 
i
+4;

1586 
poöt1_ªÆ
 = 
Ról
[
i
];

1587 
poöt1_imag
 = 
Imag
[
i
];

1589 
poöt2_ªÆ
 = 
Ról
[
i2
];

1590 
poöt2_imag
 = 
Imag
[
i2
];

1593 
poöt1_ªÆ
 -
poöt2_ªÆ
;

1594 
poöt1_imag
 -
poöt2_imag
;

1597 
Ról
[
i
] +
poöt2_ªÆ
;

1598 
Imag
[
i
] +
poöt2_imag
;

1601 
Ról
[
i2
] = 
	`MUL_F
(
poöt1_ªÆ
+
poöt1_imag
, 
w_ªÆ
);

1602 
Imag
[
i2
] = 
	`MUL_F
(
poöt1_imag
-
poöt1_ªÆ
, 
w_ªÆ
);

1604 
i
 = 2; i < 
n
; i += 8)

1606 
i2
 = 
i
+4;

1607 
poöt1_ªÆ
 = 
Ról
[
i
];

1608 
poöt1_imag
 = 
Imag
[
i
];

1610 
poöt2_ªÆ
 = 
Ról
[
i2
];

1611 
poöt2_imag
 = 
Imag
[
i2
];

1614 
Ról
[
i
] +
poöt2_ªÆ
;

1615 
Imag
[
i
] +
poöt2_imag
;

1618 
Ról
[
i2
] = 
poöt1_imag
 - 
poöt2_imag
;

1619 
Imag
[
i2
] = 
poöt2_ªÆ
 - 
poöt1_ªÆ
;

1621 
w_ªÆ
 = 
w_¨øy_ªÆ
[12];

1623 
i
 = 3; i < 
n
; i += 8)

1625 
i2
 = 
i
+4;

1626 
poöt1_ªÆ
 = 
Ról
[
i
];

1627 
poöt1_imag
 = 
Imag
[
i
];

1629 
poöt2_ªÆ
 = 
Ról
[
i2
];

1630 
poöt2_imag
 = 
Imag
[
i2
];

1633 
poöt1_ªÆ
 -
poöt2_ªÆ
;

1634 
poöt1_imag
 -
poöt2_imag
;

1637 
Ról
[
i
] +
poöt2_ªÆ
;

1638 
Imag
[
i
] +
poöt2_imag
;

1641 
Ról
[
i2
] = 
	`MUL_F
(
poöt1_ªÆ
-
poöt1_imag
, 
w_ªÆ
);

1642 
Imag
[
i2
] = 
	`MUL_F
(
poöt1_ªÆ
+
poöt1_imag
, 
w_ªÆ
);

1648 
i
 = 0; i < 
n
; i += 4)

1650 
i2
 = 
i
+2;

1651 
poöt1_ªÆ
 = 
Ról
[
i
];

1652 
poöt1_imag
 = 
Imag
[
i
];

1654 
poöt2_ªÆ
 = 
Ról
[
i2
];

1655 
poöt2_imag
 = 
Imag
[
i2
];

1658 
Ról
[
i
] +
poöt2_ªÆ
;

1659 
Imag
[
i
] +
poöt2_imag
;

1662 
Ról
[
i2
] = 
poöt1_ªÆ
 - 
poöt2_ªÆ
;

1663 
Imag
[
i2
] = 
poöt1_imag
 - 
poöt2_imag
;

1665 
i
 = 1; i < 
n
; i += 4)

1667 
i2
 = 
i
+2;

1668 
poöt1_ªÆ
 = 
Ról
[
i
];

1669 
poöt1_imag
 = 
Imag
[
i
];

1671 
poöt2_ªÆ
 = 
Ról
[
i2
];

1672 
poöt2_imag
 = 
Imag
[
i2
];

1675 
Ról
[
i
] +
poöt2_ªÆ
;

1676 
Imag
[
i
] +
poöt2_imag
;

1679 
Ról
[
i2
] = 
poöt1_imag
 - 
poöt2_imag
;

1680 
Imag
[
i2
] = 
poöt2_ªÆ
 - 
poöt1_ªÆ
;

1685 
i
 = 0; i < 
n
; i += 2)

1687 
i2
 = 
i
+1;

1688 
poöt1_ªÆ
 = 
Ról
[
i
];

1689 
poöt1_imag
 = 
Imag
[
i
];

1691 
poöt2_ªÆ
 = 
Ról
[
i2
];

1692 
poöt2_imag
 = 
Imag
[
i2
];

1695 
Ról
[
i
] +
poöt2_ªÆ
;

1696 
Imag
[
i
] +
poöt2_imag
;

1699 
Ról
[
i2
] = 
poöt1_ªÆ
 - 
poöt2_ªÆ
;

1700 
Imag
[
i2
] = 
poöt1_imag
 - 
poöt2_imag
;

1703 #ifde‡
REORDER_IN_FFT


1704 
	`FFTRe‹dî
(
Ról
, 
Imag
);

1706 
	}
}

1707 #unde‡
n


1708 #unde‡
log2n


1710 c⁄° 
ªÆ_t
 
	gd˘4_64_èb
[] = {

1711 
COEF_CONST
(0.999924719333649), COEF_CONST(0.998118102550507),

1712 
COEF_CONST
(0.993906974792480), COEF_CONST(0.987301409244537),

1713 
COEF_CONST
(0.978317379951477), COEF_CONST(0.966976463794708),

1714 
COEF_CONST
(0.953306019306183), COEF_CONST(0.937339007854462),

1715 
COEF_CONST
(0.919113874435425), COEF_CONST(0.898674488067627),

1716 
COEF_CONST
(0.876070082187653), COEF_CONST(0.851355195045471),

1717 
COEF_CONST
(0.824589252471924), COEF_CONST(0.795836925506592),

1718 
COEF_CONST
(0.765167236328125), COEF_CONST(0.732654273509979),

1719 
COEF_CONST
(0.698376238346100), COEF_CONST(0.662415742874146),

1720 
COEF_CONST
(0.624859452247620), COEF_CONST(0.585797846317291),

1721 
COEF_CONST
(0.545324981212616), COEF_CONST(0.503538429737091),

1722 
COEF_CONST
(0.460538715124130), COEF_CONST(0.416429549455643),

1723 
COEF_CONST
(0.371317148208618), COEF_CONST(0.325310230255127),

1724 
COEF_CONST
(0.278519600629807), COEF_CONST(0.231058135628700),

1725 
COEF_CONST
(0.183039888739586), COEF_CONST(0.134580686688423),

1726 
COEF_CONST
(0.085797272622585), COEF_CONST(0.036807164549828),

1727 
COEF_CONST
(-1.012196302413940), COEF_CONST(-1.059438824653626),

1728 
COEF_CONST
(-1.104129195213318), COEF_CONST(-1.146159529685974),

1729 
COEF_CONST
(-1.185428738594055), COEF_CONST(-1.221842169761658),

1730 
COEF_CONST
(-1.255311965942383), COEF_CONST(-1.285757660865784),

1731 
COEF_CONST
(-1.313105940818787), COEF_CONST(-1.337290763854981),

1732 
COEF_CONST
(-1.358253836631775), COEF_CONST(-1.375944852828980),

1733 
COEF_CONST
(-1.390321016311646), COEF_CONST(-1.401347875595093),

1734 
COEF_CONST
(-1.408998727798462), COEF_CONST(-1.413255214691162),

1735 
COEF_CONST
(-1.414107084274292), COEF_CONST(-1.411552190780640),

1736 
COEF_CONST
(-1.405596733093262), COEF_CONST(-1.396255016326904),

1737 
COEF_CONST
(-1.383549690246582), COEF_CONST(-1.367511272430420),

1738 
COEF_CONST
(-1.348178386688232), COEF_CONST(-1.325597524642944),

1739 
COEF_CONST
(-1.299823284149170), COEF_CONST(-1.270917654037476),

1740 
COEF_CONST
(-1.238950133323669), COEF_CONST(-1.203998088836670),

1741 
COEF_CONST
(-1.166145324707031), COEF_CONST(-1.125483393669128),

1742 
COEF_CONST
(-1.082109928131104), COEF_CONST(-1.036129593849182),

1743 
COEF_CONST
(-0.987653195858002), COEF_CONST(-0.936797380447388),

1744 
COEF_CONST
(-0.883684754371643), COEF_CONST(-0.828443288803101),

1745 
COEF_CONST
(-0.771206021308899), COEF_CONST(-0.712110757827759),

1746 
COEF_CONST
(-0.651300072669983), COEF_CONST(-0.588920354843140),

1747 
COEF_CONST
(-0.525121808052063), COEF_CONST(-0.460058242082596),

1748 
COEF_CONST
(-0.393886327743530), COEF_CONST(-0.326765477657318),

1749 
COEF_CONST
(-0.258857429027557), COEF_CONST(-0.190325915813446),

1750 
COEF_CONST
(-0.121335685253143), COEF_CONST(-0.052053272724152),

1751 
COEF_CONST
(0.017354607582092), COEF_CONST(0.086720645427704),

1752 
COEF_CONST
(0.155877828598022), COEF_CONST(0.224659323692322),

1753 
COEF_CONST
(0.292899727821350), COEF_CONST(0.360434412956238),

1754 
COEF_CONST
(0.427100926637650), COEF_CONST(0.492738455533981),

1755 
COEF_CONST
(0.557188928127289), COEF_CONST(0.620297133922577),

1756 
COEF_CONST
(0.681910991668701), COEF_CONST(0.741881847381592),

1757 
COEF_CONST
(0.800065577030182), COEF_CONST(0.856321990489960),

1758 
COEF_CONST
(0.910515367984772), COEF_CONST(0.962515234947205),

1759 
COEF_CONST
(1.000000000000000), COEF_CONST(0.998795449733734),

1760 
COEF_CONST
(0.995184719562531), COEF_CONST(0.989176511764526),

1761 
COEF_CONST
(0.980785250663757), COEF_CONST(0.970031261444092),

1762 
COEF_CONST
(0.956940352916718), COEF_CONST(0.941544055938721),

1763 
COEF_CONST
(0.923879504203796), COEF_CONST(0.903989315032959),

1764 
COEF_CONST
(0.881921231746674), COEF_CONST(0.857728600502014),

1765 
COEF_CONST
(0.831469595432281), COEF_CONST(0.803207516670227),

1766 
COEF_CONST
(0.773010432720184), COEF_CONST(0.740951120853424),

1767 
COEF_CONST
(0.707106769084930), COEF_CONST(0.671558916568756),

1768 
COEF_CONST
(0.634393274784088), COEF_CONST(0.595699310302734),

1769 
COEF_CONST
(0.555570185184479), COEF_CONST(0.514102697372437),

1770 
COEF_CONST
(0.471396654844284), COEF_CONST(0.427555114030838),

1771 
COEF_CONST
(0.382683426141739), COEF_CONST(0.336889833211899),

1772 
COEF_CONST
(0.290284633636475), COEF_CONST(0.242980122566223),

1773 
COEF_CONST
(0.195090234279633), COEF_CONST(0.146730497479439),

1774 
COEF_CONST
(0.098017133772373), COEF_CONST(0.049067649990320),

1775 
COEF_CONST
(-1.000000000000000), COEF_CONST(-1.047863125801086),

1776 
COEF_CONST
(-1.093201875686646), COEF_CONST(-1.135906934738159),

1777 
COEF_CONST
(-1.175875544548035), COEF_CONST(-1.213011503219605),

1778 
COEF_CONST
(-1.247225046157837), COEF_CONST(-1.278433918952942),

1779 
COEF_CONST
(-1.306562900543213), COEF_CONST(-1.331544399261475),

1780 
COEF_CONST
(-1.353317975997925), COEF_CONST(-1.371831417083740),

1781 
COEF_CONST
(-1.387039899826050), COEF_CONST(-1.398906826972961),

1782 
COEF_CONST
(-1.407403707504273), COEF_CONST(-1.412510156631470),

1783 
COEF_CONST
(0), COEF_CONST(-1.412510156631470),

1784 
COEF_CONST
(-1.407403707504273), COEF_CONST(-1.398906826972961),

1785 
COEF_CONST
(-1.387039899826050), COEF_CONST(-1.371831417083740),

1786 
COEF_CONST
(-1.353317975997925), COEF_CONST(-1.331544399261475),

1787 
COEF_CONST
(-1.306562900543213), COEF_CONST(-1.278433918952942),

1788 
COEF_CONST
(-1.247225046157837), COEF_CONST(-1.213011384010315),

1789 
COEF_CONST
(-1.175875544548035), COEF_CONST(-1.135907053947449),

1790 
COEF_CONST
(-1.093201875686646), COEF_CONST(-1.047863125801086),

1791 
COEF_CONST
(-1.000000000000000), COEF_CONST(-0.949727773666382),

1792 
COEF_CONST
(-0.897167563438416), COEF_CONST(-0.842446029186249),

1793 
COEF_CONST
(-0.785694956779480), COEF_CONST(-0.727051079273224),

1794 
COEF_CONST
(-0.666655659675598), COEF_CONST(-0.604654192924500),

1795 
COEF_CONST
(-0.541196048259735), COEF_CONST(-0.476434230804443),

1796 
COEF_CONST
(-0.410524487495422), COEF_CONST(-0.343625843524933),

1797 
COEF_CONST
(-0.275899350643158), COEF_CONST(-0.207508206367493),

1798 
COEF_CONST
(-0.138617098331451), COEF_CONST(-0.069392144680023),

1799 
COEF_CONST
(0), COEF_CONST(0.069392263889313),

1800 
COEF_CONST
(0.138617157936096), COEF_CONST(0.207508206367493),

1801 
COEF_CONST
(0.275899469852448), COEF_CONST(0.343625962734222),

1802 
COEF_CONST
(0.410524636507034), COEF_CONST(0.476434201002121),

1803 
COEF_CONST
(0.541196107864380), COEF_CONST(0.604654192924500),

1804 
COEF_CONST
(0.666655719280243), COEF_CONST(0.727051138877869),

1805 
COEF_CONST
(0.785695075988770), COEF_CONST(0.842446029186249),

1806 
COEF_CONST
(0.897167563438416), COEF_CONST(0.949727773666382)

1810 
	$d˘4_kî√l
(
ªÆ_t
 * 
ö_ªÆ
,Ñól_à* 
ö_imag
,Ñól_à* 
out_ªÆ
,Ñól_à* 
out_imag
)

1813 c⁄° 
uöt8_t
 
bô_ªv_èb
[32] = { 0,16,8,24,4,20,12,28,2,18,10,26,6,22,14,30,1,17,9,25,5,21,13,29,3,19,11,27,7,23,15,31 };

1814 
uöt16_t
 
i
, 
i_ªv
;

1819 
i
 = 0; i < 32; i++)

1821 
ªÆ_t
 
x_ª
, 
x_im
, 
tmp
;

1822 
x_ª
 = 
ö_ªÆ
[
i
];

1823 
x_im
 = 
ö_imag
[
i
];

1824 
tmp
 = 
	`MUL_C
(
x_ª
 + 
x_im
, 
d˘4_64_èb
[
i
]);

1825 
ö_ªÆ
[
i
] = 
	`MUL_C
(
x_im
, 
d˘4_64_èb
[ò+ 64]Ë+ 
tmp
;

1826 
ö_imag
[
i
] = 
	`MUL_C
(
x_ª
, 
d˘4_64_èb
[ò+ 32]Ë+ 
tmp
;

1830 
	`f·_dif
(
ö_ªÆ
, 
ö_imag
);

1835 
i
 = 0; i < 16; i++)

1837 
ªÆ_t
 
x_ª
, 
x_im
, 
tmp
;

1838 
i_ªv
 = 
bô_ªv_èb
[
i
];

1839 
x_ª
 = 
ö_ªÆ
[
i_ªv
];

1840 
x_im
 = 
ö_imag
[
i_ªv
];

1842 
tmp
 = 
	`MUL_C
(
x_ª
 + 
x_im
, 
d˘4_64_èb
[
i
 + 3*32]);

1843 
out_ªÆ
[
i
] = 
	`MUL_C
(
x_im
, 
d˘4_64_èb
[ò+ 5*32]Ë+ 
tmp
;

1844 
out_imag
[
i
] = 
	`MUL_C
(
x_ª
, 
d˘4_64_èb
[ò+ 4*32]Ë+ 
tmp
;

1847 
out_imag
[16] = 
	`MUL_C
(
ö_imag
[1] - 
ö_ªÆ
[1], 
d˘4_64_èb
[16 + 3*32]);

1848 
out_ªÆ
[16] = 
	`MUL_C
(
ö_ªÆ
[1] + 
ö_imag
[1], 
d˘4_64_èb
[16 + 3*32]);

1849 
i
 = 17; i < 32; i++)

1851 
ªÆ_t
 
x_ª
, 
x_im
, 
tmp
;

1852 
i_ªv
 = 
bô_ªv_èb
[
i
];

1853 
x_ª
 = 
ö_ªÆ
[
i_ªv
];

1854 
x_im
 = 
ö_imag
[
i_ªv
];

1855 
tmp
 = 
	`MUL_C
(
x_ª
 + 
x_im
, 
d˘4_64_èb
[
i
 + 3*32]);

1856 
out_ªÆ
[
i
] = 
	`MUL_C
(
x_im
, 
d˘4_64_èb
[ò+ 5*32]Ë+ 
tmp
;

1857 
out_imag
[
i
] = 
	`MUL_C
(
x_ª
, 
d˘4_64_èb
[ò+ 4*32]Ë+ 
tmp
;

1860 
	}
}

1862 
	$DST4_32
(
ªÆ_t
 *
y
,Ñól_à*
x
)

1864 
ªÆ_t
 
f0
, 
f1
, 
f2
, 
f3
, 
f4
, 
f5
, 
f6
, 
f7
, 
f8
, 
f9
;

1865 
ªÆ_t
 
f10
, 
f11
, 
f12
, 
f13
, 
f14
, 
f15
, 
f16
, 
f17
, 
f18
, 
f19
;

1866 
ªÆ_t
 
f20
, 
f21
, 
f22
, 
f23
, 
f24
, 
f25
, 
f26
, 
f27
, 
f28
, 
f29
;

1867 
ªÆ_t
 
f30
, 
f31
, 
f32
, 
f33
, 
f34
, 
f35
, 
f36
, 
f37
, 
f38
, 
f39
;

1868 
ªÆ_t
 
f40
, 
f41
, 
f42
, 
f43
, 
f44
, 
f45
, 
f46
, 
f47
, 
f48
, 
f49
;

1869 
ªÆ_t
 
f50
, 
f51
, 
f52
, 
f53
, 
f54
, 
f55
, 
f56
, 
f57
, 
f58
, 
f59
;

1870 
ªÆ_t
 
f60
, 
f61
, 
f62
, 
f63
, 
f64
, 
f65
, 
f66
, 
f67
, 
f68
, 
f69
;

1871 
ªÆ_t
 
f70
, 
f71
, 
f72
, 
f73
, 
f74
, 
f75
, 
f76
, 
f77
, 
f78
, 
f79
;

1872 
ªÆ_t
 
f80
, 
f81
, 
f82
, 
f83
, 
f84
, 
f85
, 
f86
, 
f87
, 
f88
, 
f89
;

1873 
ªÆ_t
 
f90
, 
f91
, 
f92
, 
f93
, 
f94
, 
f95
, 
f96
, 
f97
, 
f98
, 
f99
;

1874 
ªÆ_t
 
f100
, 
f101
, 
f102
, 
f103
, 
f104
, 
f105
, 
f106
, 
f107
, 
f108
, 
f109
;

1875 
ªÆ_t
 
f110
, 
f111
, 
f112
, 
f113
, 
f114
, 
f115
, 
f116
, 
f117
, 
f118
, 
f119
;

1876 
ªÆ_t
 
f120
, 
f121
, 
f122
, 
f123
, 
f124
, 
f125
, 
f126
, 
f127
, 
f128
, 
f129
;

1877 
ªÆ_t
 
f130
, 
f131
, 
f132
, 
f133
, 
f134
, 
f135
, 
f136
, 
f137
, 
f138
, 
f139
;

1878 
ªÆ_t
 
f140
, 
f141
, 
f142
, 
f143
, 
f144
, 
f145
, 
f146
, 
f147
, 
f148
, 
f149
;

1879 
ªÆ_t
 
f150
, 
f151
, 
f152
, 
f153
, 
f154
, 
f155
, 
f156
, 
f157
, 
f158
, 
f159
;

1880 
ªÆ_t
 
f160
, 
f161
, 
f162
, 
f163
, 
f164
, 
f165
, 
f166
, 
f167
, 
f168
, 
f169
;

1881 
ªÆ_t
 
f170
, 
f171
, 
f172
, 
f173
, 
f174
, 
f175
, 
f176
, 
f177
, 
f178
, 
f179
;

1882 
ªÆ_t
 
f180
, 
f181
, 
f182
, 
f183
, 
f184
, 
f185
, 
f186
, 
f187
, 
f188
, 
f189
;

1883 
ªÆ_t
 
f190
, 
f191
, 
f192
, 
f193
, 
f194
, 
f195
, 
f196
, 
f197
, 
f198
, 
f199
;

1884 
ªÆ_t
 
f200
, 
f201
, 
f202
, 
f203
, 
f204
, 
f205
, 
f206
, 
f207
, 
f208
, 
f209
;

1885 
ªÆ_t
 
f210
, 
f211
, 
f212
, 
f213
, 
f214
, 
f215
, 
f216
, 
f217
, 
f218
, 
f219
;

1886 
ªÆ_t
 
f220
, 
f221
, 
f222
, 
f223
, 
f224
, 
f225
, 
f226
, 
f227
, 
f228
, 
f229
;

1887 
ªÆ_t
 
f230
, 
f231
, 
f232
, 
f233
, 
f234
, 
f235
, 
f236
, 
f237
, 
f238
, 
f239
;

1888 
ªÆ_t
 
f240
, 
f241
, 
f242
, 
f243
, 
f244
, 
f245
, 
f246
, 
f247
, 
f248
, 
f249
;

1889 
ªÆ_t
 
f250
, 
f251
, 
f252
, 
f253
, 
f254
, 
f255
, 
f256
, 
f257
, 
f258
, 
f259
;

1890 
ªÆ_t
 
f260
, 
f261
, 
f262
, 
f263
, 
f264
, 
f265
, 
f266
, 
f267
, 
f268
, 
f269
;

1891 
ªÆ_t
 
f270
, 
f271
, 
f272
, 
f273
, 
f274
, 
f275
, 
f276
, 
f277
, 
f278
, 
f279
;

1892 
ªÆ_t
 
f280
, 
f281
, 
f282
, 
f283
, 
f284
, 
f285
, 
f286
, 
f287
, 
f288
, 
f289
;

1893 
ªÆ_t
 
f290
, 
f291
, 
f292
, 
f293
, 
f294
, 
f295
, 
f296
, 
f297
, 
f298
, 
f299
;

1894 
ªÆ_t
 
f300
, 
f301
, 
f302
, 
f303
, 
f304
, 
f305
, 
f306
, 
f307
, 
f308
, 
f309
;

1895 
ªÆ_t
 
f310
, 
f311
, 
f312
, 
f313
, 
f314
, 
f315
, 
f316
, 
f317
, 
f318
, 
f319
;

1896 
ªÆ_t
 
f320
, 
f321
, 
f322
, 
f323
, 
f324
, 
f325
, 
f326
, 
f327
, 
f328
, 
f329
;

1897 
ªÆ_t
 
f330
, 
f331
, 
f332
, 
f333
, 
f334
, 
f335
;

1899 
f0
 = 
x
[0] - x[1];

1900 
f1
 = 
x
[2] - x[1];

1901 
f2
 = 
x
[2] - x[3];

1902 
f3
 = 
x
[4] - x[3];

1903 
f4
 = 
x
[4] - x[5];

1904 
f5
 = 
x
[6] - x[5];

1905 
f6
 = 
x
[6] - x[7];

1906 
f7
 = 
x
[8] - x[7];

1907 
f8
 = 
x
[8] - x[9];

1908 
f9
 = 
x
[10] - x[9];

1909 
f10
 = 
x
[10] - x[11];

1910 
f11
 = 
x
[12] - x[11];

1911 
f12
 = 
x
[12] - x[13];

1912 
f13
 = 
x
[14] - x[13];

1913 
f14
 = 
x
[14] - x[15];

1914 
f15
 = 
x
[16] - x[15];

1915 
f16
 = 
x
[16] - x[17];

1916 
f17
 = 
x
[18] - x[17];

1917 
f18
 = 
x
[18] - x[19];

1918 
f19
 = 
x
[20] - x[19];

1919 
f20
 = 
x
[20] - x[21];

1920 
f21
 = 
x
[22] - x[21];

1921 
f22
 = 
x
[22] - x[23];

1922 
f23
 = 
x
[24] - x[23];

1923 
f24
 = 
x
[24] - x[25];

1924 
f25
 = 
x
[26] - x[25];

1925 
f26
 = 
x
[26] - x[27];

1926 
f27
 = 
x
[28] - x[27];

1927 
f28
 = 
x
[28] - x[29];

1928 
f29
 = 
x
[30] - x[29];

1929 
f30
 = 
x
[30] - x[31];

1930 
f31
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f15
);

1931 
f32
 = 
x
[0] - 
f31
;

1932 
f33
 = 
x
[0] + 
f31
;

1933 
f34
 = 
f7
 + 
f23
;

1934 
f35
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f7
);

1935 
f36
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9238795325112866), 
f34
);

1936 
f37
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5411961001461967), 
f23
);

1937 
f38
 = 
f35
 + 
f36
;

1938 
f39
 = 
f37
 - 
f36
;

1939 
f40
 = 
f33
 - 
f39
;

1940 
f41
 = 
f33
 + 
f39
;

1941 
f42
 = 
f32
 - 
f38
;

1942 
f43
 = 
f32
 + 
f38
;

1943 
f44
 = 
f11
 - 
f19
;

1944 
f45
 = 
f11
 + 
f19
;

1945 
f46
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f45
);

1946 
f47
 = 
f3
 - 
f46
;

1947 
f48
 = 
f3
 + 
f46
;

1948 
f49
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f44
);

1949 
f50
 = 
f49
 - 
f27
;

1950 
f51
 = 
f49
 + 
f27
;

1951 
f52
 = 
f51
 + 
f48
;

1952 
f53
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.7856949583871021), 
f51
);

1953 
f54
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9807852804032304), 
f52
);

1954 
f55
 = 
	`MUL_C
(
	`COEF_CONST
(1.1758756024193588), 
f48
);

1955 
f56
 = 
f53
 + 
f54
;

1956 
f57
 = 
f55
 - 
f54
;

1957 
f58
 = 
f50
 + 
f47
;

1958 
f59
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.2758993792829430), 
f50
);

1959 
f60
 = 
	`MUL_F
(
	`FRAC_CONST
(0.8314696123025452), 
f58
);

1960 
f61
 = 
	`MUL_C
(
	`COEF_CONST
(1.3870398453221475), 
f47
);

1961 
f62
 = 
f59
 + 
f60
;

1962 
f63
 = 
f61
 - 
f60
;

1963 
f64
 = 
f41
 - 
f56
;

1964 
f65
 = 
f41
 + 
f56
;

1965 
f66
 = 
f43
 - 
f62
;

1966 
f67
 = 
f43
 + 
f62
;

1967 
f68
 = 
f42
 - 
f63
;

1968 
f69
 = 
f42
 + 
f63
;

1969 
f70
 = 
f40
 - 
f57
;

1970 
f71
 = 
f40
 + 
f57
;

1971 
f72
 = 
f5
 - 
f9
;

1972 
f73
 = 
f5
 + 
f9
;

1973 
f74
 = 
f13
 - 
f17
;

1974 
f75
 = 
f13
 + 
f17
;

1975 
f76
 = 
f21
 - 
f25
;

1976 
f77
 = 
f21
 + 
f25
;

1977 
f78
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f75
);

1978 
f79
 = 
f1
 - 
f78
;

1979 
f80
 = 
f1
 + 
f78
;

1980 
f81
 = 
f73
 + 
f77
;

1981 
f82
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f73
);

1982 
f83
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9238795325112866), 
f81
);

1983 
f84
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5411961001461967), 
f77
);

1984 
f85
 = 
f82
 + 
f83
;

1985 
f86
 = 
f84
 - 
f83
;

1986 
f87
 = 
f80
 - 
f86
;

1987 
f88
 = 
f80
 + 
f86
;

1988 
f89
 = 
f79
 - 
f85
;

1989 
f90
 = 
f79
 + 
f85
;

1990 
f91
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865476), 
f74
);

1991 
f92
 = 
f29
 - 
f91
;

1992 
f93
 = 
f29
 + 
f91
;

1993 
f94
 = 
f76
 + 
f72
;

1994 
f95
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f76
);

1995 
f96
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9238795325112866), 
f94
);

1996 
f97
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5411961001461967), 
f72
);

1997 
f98
 = 
f95
 + 
f96
;

1998 
f99
 = 
f97
 - 
f96
;

1999 
f100
 = 
f93
 - 
f99
;

2000 
f101
 = 
f93
 + 
f99
;

2001 
f102
 = 
f92
 - 
f98
;

2002 
f103
 = 
f92
 + 
f98
;

2003 
f104
 = 
f101
 + 
f88
;

2004 
f105
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.8971675863426361), 
f101
);

2005 
f106
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9951847266721968), 
f104
);

2006 
f107
 = 
	`MUL_C
(
	`COEF_CONST
(1.0932018670017576), 
f88
);

2007 
f108
 = 
f105
 + 
f106
;

2008 
f109
 = 
f107
 - 
f106
;

2009 
f110
 = 
f90
 - 
f103
;

2010 
f111
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.6666556584777466), 
f103
);

2011 
f112
 = 
	`MUL_F
(
	`FRAC_CONST
(0.9569403357322089), 
f110
);

2012 
f113
 = 
	`MUL_C
(
	`COEF_CONST
(1.2472250129866713), 
f90
);

2013 
f114
 = 
f112
 - 
f111
;

2014 
f115
 = 
f113
 - 
f112
;

2015 
f116
 = 
f102
 + 
f89
;

2016 
f117
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.4105245275223571), 
f102
);

2017 
f118
 = 
	`MUL_F
(
	`FRAC_CONST
(0.8819212643483549), 
f116
);

2018 
f119
 = 
	`MUL_C
(
	`COEF_CONST
(1.3533180011743529), 
f89
);

2019 
f120
 = 
f117
 + 
f118
;

2020 
f121
 = 
f119
 - 
f118
;

2021 
f122
 = 
f87
 - 
f100
;

2022 
f123
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.1386171691990915), 
f100
);

2023 
f124
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7730104533627370), 
f122
);

2024 
f125
 = 
	`MUL_C
(
	`COEF_CONST
(1.4074037375263826), 
f87
);

2025 
f126
 = 
f124
 - 
f123
;

2026 
f127
 = 
f125
 - 
f124
;

2027 
f128
 = 
f65
 - 
f108
;

2028 
f129
 = 
f65
 + 
f108
;

2029 
f130
 = 
f67
 - 
f114
;

2030 
f131
 = 
f67
 + 
f114
;

2031 
f132
 = 
f69
 - 
f120
;

2032 
f133
 = 
f69
 + 
f120
;

2033 
f134
 = 
f71
 - 
f126
;

2034 
f135
 = 
f71
 + 
f126
;

2035 
f136
 = 
f70
 - 
f127
;

2036 
f137
 = 
f70
 + 
f127
;

2037 
f138
 = 
f68
 - 
f121
;

2038 
f139
 = 
f68
 + 
f121
;

2039 
f140
 = 
f66
 - 
f115
;

2040 
f141
 = 
f66
 + 
f115
;

2041 
f142
 = 
f64
 - 
f109
;

2042 
f143
 = 
f64
 + 
f109
;

2043 
f144
 = 
f0
 + 
f30
;

2044 
f145
 = 
	`MUL_C
(
	`COEF_CONST
(1.0478631305325901), 
f0
);

2045 
f146
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9987954562051724), 
f144
);

2046 
f147
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9497277818777548), 
f30
);

2047 
f148
 = 
f145
 + 
f146
;

2048 
f149
 = 
f147
 - 
f146
;

2049 
f150
 = 
f4
 + 
f26
;

2050 
f151
 = 
	`MUL_F
(
	`FRAC_CONST
(1.2130114330978077), 
f4
);

2051 
f152
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9700312531945440), 
f150
);

2052 
f153
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.7270510732912803), 
f26
);

2053 
f154
 = 
f151
 + 
f152
;

2054 
f155
 = 
f153
 - 
f152
;

2055 
f156
 = 
f8
 + 
f22
;

2056 
f157
 = 
	`MUL_C
(
	`COEF_CONST
(1.3315443865537255), 
f8
);

2057 
f158
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9039892931234433), 
f156
);

2058 
f159
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.4764341996931612), 
f22
);

2059 
f160
 = 
f157
 + 
f158
;

2060 
f161
 = 
f159
 - 
f158
;

2061 
f162
 = 
f12
 + 
f18
;

2062 
f163
 = 
	`MUL_C
(
	`COEF_CONST
(1.3989068359730781), 
f12
);

2063 
f164
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.8032075314806453), 
f162
);

2064 
f165
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.2075082269882124), 
f18
);

2065 
f166
 = 
f163
 + 
f164
;

2066 
f167
 = 
f165
 - 
f164
;

2067 
f168
 = 
f16
 + 
f14
;

2068 
f169
 = 
	`MUL_C
(
	`COEF_CONST
(1.4125100802019777), 
f16
);

2069 
f170
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.6715589548470187), 
f168
);

2070 
f171
 = 
	`MUL_F
(
	`FRAC_CONST
(0.0693921705079402), 
f14
);

2071 
f172
 = 
f169
 + 
f170
;

2072 
f173
 = 
f171
 - 
f170
;

2073 
f174
 = 
f20
 + 
f10
;

2074 
f175
 = 
	`MUL_C
(
	`COEF_CONST
(1.3718313541934939), 
f20
);

2075 
f176
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5141027441932219), 
f174
);

2076 
f177
 = 
	`MUL_F
(
	`FRAC_CONST
(0.3436258658070501), 
f10
);

2077 
f178
 = 
f175
 + 
f176
;

2078 
f179
 = 
f177
 - 
f176
;

2079 
f180
 = 
f24
 + 
f6
;

2080 
f181
 = 
	`MUL_C
(
	`COEF_CONST
(1.2784339185752409), 
f24
);

2081 
f182
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.3368898533922200), 
f180
);

2082 
f183
 = 
	`MUL_F
(
	`FRAC_CONST
(0.6046542117908008), 
f6
);

2083 
f184
 = 
f181
 + 
f182
;

2084 
f185
 = 
f183
 - 
f182
;

2085 
f186
 = 
f28
 + 
f2
;

2086 
f187
 = 
	`MUL_C
(
	`COEF_CONST
(1.1359069844201433), 
f28
);

2087 
f188
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.1467304744553624), 
f186
);

2088 
f189
 = 
	`MUL_F
(
	`FRAC_CONST
(0.8424460355094185), 
f2
);

2089 
f190
 = 
f187
 + 
f188
;

2090 
f191
 = 
f189
 - 
f188
;

2091 
f192
 = 
f149
 - 
f173
;

2092 
f193
 = 
f149
 + 
f173
;

2093 
f194
 = 
f148
 - 
f172
;

2094 
f195
 = 
f148
 + 
f172
;

2095 
f196
 = 
f155
 - 
f179
;

2096 
f197
 = 
f155
 + 
f179
;

2097 
f198
 = 
f154
 - 
f178
;

2098 
f199
 = 
f154
 + 
f178
;

2099 
f200
 = 
f161
 - 
f185
;

2100 
f201
 = 
f161
 + 
f185
;

2101 
f202
 = 
f160
 - 
f184
;

2102 
f203
 = 
f160
 + 
f184
;

2103 
f204
 = 
f167
 - 
f191
;

2104 
f205
 = 
f167
 + 
f191
;

2105 
f206
 = 
f166
 - 
f190
;

2106 
f207
 = 
f166
 + 
f190
;

2107 
f208
 = 
f192
 + 
f194
;

2108 
f209
 = 
	`MUL_C
(
	`COEF_CONST
(1.1758756024193588), 
f192
);

2109 
f210
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9807852804032304), 
f208
);

2110 
f211
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.7856949583871021), 
f194
);

2111 
f212
 = 
f209
 + 
f210
;

2112 
f213
 = 
f211
 - 
f210
;

2113 
f214
 = 
f196
 + 
f198
;

2114 
f215
 = 
	`MUL_C
(
	`COEF_CONST
(1.3870398453221475), 
f196
);

2115 
f216
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5555702330196022), 
f214
);

2116 
f217
 = 
	`MUL_F
(
	`FRAC_CONST
(0.2758993792829431), 
f198
);

2117 
f218
 = 
f215
 + 
f216
;

2118 
f219
 = 
f217
 - 
f216
;

2119 
f220
 = 
f200
 + 
f202
;

2120 
f221
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7856949583871022), 
f200
);

2121 
f222
 = 
	`MUL_F
(
	`FRAC_CONST
(0.1950903220161283), 
f220
);

2122 
f223
 = 
	`MUL_C
(
	`COEF_CONST
(1.1758756024193586), 
f202
);

2123 
f224
 = 
f221
 + 
f222
;

2124 
f225
 = 
f223
 - 
f222
;

2125 
f226
 = 
f204
 + 
f206
;

2126 
f227
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.2758993792829430), 
f204
);

2127 
f228
 = 
	`MUL_F
(
	`FRAC_CONST
(0.8314696123025452), 
f226
);

2128 
f229
 = 
	`MUL_C
(
	`COEF_CONST
(1.3870398453221475), 
f206
);

2129 
f230
 = 
f227
 + 
f228
;

2130 
f231
 = 
f229
 - 
f228
;

2131 
f232
 = 
f193
 - 
f201
;

2132 
f233
 = 
f193
 + 
f201
;

2133 
f234
 = 
f195
 - 
f203
;

2134 
f235
 = 
f195
 + 
f203
;

2135 
f236
 = 
f197
 - 
f205
;

2136 
f237
 = 
f197
 + 
f205
;

2137 
f238
 = 
f199
 - 
f207
;

2138 
f239
 = 
f199
 + 
f207
;

2139 
f240
 = 
f213
 - 
f225
;

2140 
f241
 = 
f213
 + 
f225
;

2141 
f242
 = 
f212
 - 
f224
;

2142 
f243
 = 
f212
 + 
f224
;

2143 
f244
 = 
f219
 - 
f231
;

2144 
f245
 = 
f219
 + 
f231
;

2145 
f246
 = 
f218
 - 
f230
;

2146 
f247
 = 
f218
 + 
f230
;

2147 
f248
 = 
f232
 + 
f234
;

2148 
f249
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f232
);

2149 
f250
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9238795325112866), 
f248
);

2150 
f251
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5411961001461967), 
f234
);

2151 
f252
 = 
f249
 + 
f250
;

2152 
f253
 = 
f251
 - 
f250
;

2153 
f254
 = 
f236
 + 
f238
;

2154 
f255
 = 
	`MUL_F
(
	`FRAC_CONST
(0.5411961001461969), 
f236
);

2155 
f256
 = 
	`MUL_F
(
	`FRAC_CONST
(0.3826834323650898), 
f254
);

2156 
f257
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f238
);

2157 
f258
 = 
f255
 + 
f256
;

2158 
f259
 = 
f257
 - 
f256
;

2159 
f260
 = 
f240
 + 
f242
;

2160 
f261
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f240
);

2161 
f262
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.9238795325112866), 
f260
);

2162 
f263
 = 
	`MUL_F
(
	`FRAC_CONST
(-0.5411961001461967), 
f242
);

2163 
f264
 = 
f261
 + 
f262
;

2164 
f265
 = 
f263
 - 
f262
;

2165 
f266
 = 
f244
 + 
f246
;

2166 
f267
 = 
	`MUL_F
(
	`FRAC_CONST
(0.5411961001461969), 
f244
);

2167 
f268
 = 
	`MUL_F
(
	`FRAC_CONST
(0.3826834323650898), 
f266
);

2168 
f269
 = 
	`MUL_C
(
	`COEF_CONST
(1.3065629648763766), 
f246
);

2169 
f270
 = 
f267
 + 
f268
;

2170 
f271
 = 
f269
 - 
f268
;

2171 
f272
 = 
f233
 - 
f237
;

2172 
f273
 = 
f233
 + 
f237
;

2173 
f274
 = 
f235
 - 
f239
;

2174 
f275
 = 
f235
 + 
f239
;

2175 
f276
 = 
f253
 - 
f259
;

2176 
f277
 = 
f253
 + 
f259
;

2177 
f278
 = 
f252
 - 
f258
;

2178 
f279
 = 
f252
 + 
f258
;

2179 
f280
 = 
f241
 - 
f245
;

2180 
f281
 = 
f241
 + 
f245
;

2181 
f282
 = 
f243
 - 
f247
;

2182 
f283
 = 
f243
 + 
f247
;

2183 
f284
 = 
f265
 - 
f271
;

2184 
f285
 = 
f265
 + 
f271
;

2185 
f286
 = 
f264
 - 
f270
;

2186 
f287
 = 
f264
 + 
f270
;

2187 
f288
 = 
f272
 - 
f274
;

2188 
f289
 = 
f272
 + 
f274
;

2189 
f290
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865474), 
f288
);

2190 
f291
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865474), 
f289
);

2191 
f292
 = 
f276
 - 
f278
;

2192 
f293
 = 
f276
 + 
f278
;

2193 
f294
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865474), 
f292
);

2194 
f295
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865474), 
f293
);

2195 
f296
 = 
f280
 - 
f282
;

2196 
f297
 = 
f280
 + 
f282
;

2197 
f298
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865474), 
f296
);

2198 
f299
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865474), 
f297
);

2199 
f300
 = 
f284
 - 
f286
;

2200 
f301
 = 
f284
 + 
f286
;

2201 
f302
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865474), 
f300
);

2202 
f303
 = 
	`MUL_F
(
	`FRAC_CONST
(0.7071067811865474), 
f301
);

2203 
f304
 = 
f129
 - 
f273
;

2204 
f305
 = 
f129
 + 
f273
;

2205 
f306
 = 
f131
 - 
f281
;

2206 
f307
 = 
f131
 + 
f281
;

2207 
f308
 = 
f133
 - 
f285
;

2208 
f309
 = 
f133
 + 
f285
;

2209 
f310
 = 
f135
 - 
f277
;

2210 
f311
 = 
f135
 + 
f277
;

2211 
f312
 = 
f137
 - 
f295
;

2212 
f313
 = 
f137
 + 
f295
;

2213 
f314
 = 
f139
 - 
f303
;

2214 
f315
 = 
f139
 + 
f303
;

2215 
f316
 = 
f141
 - 
f299
;

2216 
f317
 = 
f141
 + 
f299
;

2217 
f318
 = 
f143
 - 
f291
;

2218 
f319
 = 
f143
 + 
f291
;

2219 
f320
 = 
f142
 - 
f290
;

2220 
f321
 = 
f142
 + 
f290
;

2221 
f322
 = 
f140
 - 
f298
;

2222 
f323
 = 
f140
 + 
f298
;

2223 
f324
 = 
f138
 - 
f302
;

2224 
f325
 = 
f138
 + 
f302
;

2225 
f326
 = 
f136
 - 
f294
;

2226 
f327
 = 
f136
 + 
f294
;

2227 
f328
 = 
f134
 - 
f279
;

2228 
f329
 = 
f134
 + 
f279
;

2229 
f330
 = 
f132
 - 
f287
;

2230 
f331
 = 
f132
 + 
f287
;

2231 
f332
 = 
f130
 - 
f283
;

2232 
f333
 = 
f130
 + 
f283
;

2233 
f334
 = 
f128
 - 
f275
;

2234 
f335
 = 
f128
 + 
f275
;

2235 
y
[31] = 
	`MUL_F
(
	`FRAC_CONST
(0.5001506360206510), 
f305
);

2236 
y
[30] = 
	`MUL_F
(
	`FRAC_CONST
(0.5013584524464084), 
f307
);

2237 
y
[29] = 
	`MUL_F
(
	`FRAC_CONST
(0.5037887256810443), 
f309
);

2238 
y
[28] = 
	`MUL_F
(
	`FRAC_CONST
(0.5074711720725553), 
f311
);

2239 
y
[27] = 
	`MUL_F
(
	`FRAC_CONST
(0.5124514794082247), 
f313
);

2240 
y
[26] = 
	`MUL_F
(
	`FRAC_CONST
(0.5187927131053328), 
f315
);

2241 
y
[25] = 
	`MUL_F
(
	`FRAC_CONST
(0.5265773151542700), 
f317
);

2242 
y
[24] = 
	`MUL_F
(
	`FRAC_CONST
(0.5359098169079920), 
f319
);

2243 
y
[23] = 
	`MUL_F
(
	`FRAC_CONST
(0.5469204379855088), 
f321
);

2244 
y
[22] = 
	`MUL_F
(
	`FRAC_CONST
(0.5597698129470802), 
f323
);

2245 
y
[21] = 
	`MUL_F
(
	`FRAC_CONST
(0.5746551840326600), 
f325
);

2246 
y
[20] = 
	`MUL_F
(
	`FRAC_CONST
(0.5918185358574165), 
f327
);

2247 
y
[19] = 
	`MUL_F
(
	`FRAC_CONST
(0.6115573478825099), 
f329
);

2248 
y
[18] = 
	`MUL_F
(
	`FRAC_CONST
(0.6342389366884031), 
f331
);

2249 
y
[17] = 
	`MUL_F
(
	`FRAC_CONST
(0.6603198078137061), 
f333
);

2250 
y
[16] = 
	`MUL_F
(
	`FRAC_CONST
(0.6903721282002123), 
f335
);

2251 
y
[15] = 
	`MUL_F
(
	`FRAC_CONST
(0.7251205223771985), 
f334
);

2252 
y
[14] = 
	`MUL_F
(
	`FRAC_CONST
(0.7654941649730891), 
f332
);

2253 
y
[13] = 
	`MUL_F
(
	`FRAC_CONST
(0.8127020908144905), 
f330
);

2254 
y
[12] = 
	`MUL_F
(
	`FRAC_CONST
(0.8683447152233481), 
f328
);

2255 
y
[11] = 
	`MUL_F
(
	`FRAC_CONST
(0.9345835970364075), 
f326
);

2256 
y
[10] = 
	`MUL_C
(
	`COEF_CONST
(1.0144082649970547), 
f324
);

2257 
y
[9] = 
	`MUL_C
(
	`COEF_CONST
(1.1120716205797176), 
f322
);

2258 
y
[8] = 
	`MUL_C
(
	`COEF_CONST
(1.2338327379765710), 
f320
);

2259 
y
[7] = 
	`MUL_C
(
	`COEF_CONST
(1.3892939586328277), 
f318
);

2260 
y
[6] = 
	`MUL_C
(
	`COEF_CONST
(1.5939722833856311), 
f316
);

2261 
y
[5] = 
	`MUL_C
(
	`COEF_CONST
(1.8746759800084078), 
f314
);

2262 
y
[4] = 
	`MUL_C
(
	`COEF_CONST
(2.2820500680051619), 
f312
);

2263 
y
[3] = 
	`MUL_C
(
	`COEF_CONST
(2.9246284281582162), 
f310
);

2264 
y
[2] = 
	`MUL_C
(
	`COEF_CONST
(4.0846110781292477), 
f308
);

2265 
y
[1] = 
	`MUL_C
(
	`COEF_CONST
(6.7967507116736332), 
f306
);

2266 
y
[0] = 
	`MUL_R
(
	`REAL_CONST
(20.3738781672314530), 
f304
);

2267 
	}
}

	@sbr_dct.h

28 #i‚de‡
__SBR_DCT_H__


29 
	#__SBR_DCT_H__


	)

31 #ifde‡
__˝lu•lus


35 
d˘4_kî√l
(
ªÆ_t
 * 
ö_ªÆ
,Ñól_à* 
ö_imag
,Ñól_à* 
out_ªÆ
,Ñól_à* 
out_imag
);

37 
DCT3_32_unsˇÀd
(
ªÆ_t
 *
y
,Ñól_à*
x
);

38 
DCT4_32
(
ªÆ_t
 *
y
,Ñól_à*
x
);

39 
DST4_32
(
ªÆ_t
 *
y
,Ñól_à*
x
);

40 
DCT2_32_unsˇÀd
(
ªÆ_t
 *
y
,Ñól_à*
x
);

41 
DCT4_16
(
ªÆ_t
 *
y
,Ñól_à*
x
);

42 
DCT2_16_unsˇÀd
(
ªÆ_t
 *
y
,Ñól_à*
x
);

45 #ifde‡
__˝lu•lus


	@sbr_dec.c

29 
	~"comm⁄.h
"

30 
	~"°ru˘s.h
"

32 #ifde‡
SBR_DEC


34 
	~<°rög.h
>

35 
	~<°dlib.h
>

37 
	~"sy¡ax.h
"

38 
	~"bôs.h
"

39 
	~"sbr_sy¡ax.h
"

40 
	~"sbr_qmf.h
"

41 
	~"sbr_hfgí.h
"

42 
	~"sbr_hÁdj.h
"

46 
uöt8_t
 
sbr_ßve_¥ev_d©a
(
sbr_öfo
 *
sbr
, uöt8_à
ch
);

47 
sbr_ßve_m©rix
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
);

50 
sbr_öfo
 *
sbrDecodeInô
(
uöt16_t
 
‰amñígth
, 
uöt8_t
 
id_Øc
,

51 
uöt32_t
 
ßm∂e_øã
, 
uöt8_t
 
downSam∂edSBR


52 #ifde‡
DRM


53 , 
uöt8_t
 
IsDRM


57 
sbr_öfo
 *
	gsbr
 = 
Áad_mÆloc
((sbr_info));

58 
mem£t
(
sbr
, 0, (
sbr_öfo
));

61 
	gsbr
->
	gid_Øc
 = 
id_Øc
;

62 
	gsbr
->
	gßm∂e_øã
 = 
ßm∂e_øã
;

64 
	gsbr
->
	gbs_‰eq_sˇÀ
 = 2;

65 
	gsbr
->
	gbs_Æãr_sˇÀ
 = 1;

66 
	gsbr
->
	gbs_noi£_b™ds
 = 2;

67 
	gsbr
->
	gbs_limôî_b™ds
 = 2;

68 
	gsbr
->
	gbs_limôî_gaös
 = 2;

69 
	gsbr
->
	gbs_öãΩﬁ_‰eq
 = 1;

70 
	gsbr
->
	gbs_smoŸhög_mode
 = 1;

71 
	gsbr
->
	gbs_°¨t_‰eq
 = 5;

72 
	gsbr
->
	gbs_amp_ªs
 = 1;

73 
	gsbr
->
	gbs_ßm∂î©e_mode
 = 1;

74 
	gsbr
->
	g¥evEnvIsSh‹t
[0] = -1;

75 
	gsbr
->
	g¥evEnvIsSh‹t
[1] = -1;

76 
	gsbr
->
	ghódî_cou¡
 = 0;

77 
	gsbr
->
	gRe£t
 = 1;

79 #ifde‡
DRM


80 
	gsbr
->
	gIs_DRM_SBR
 = 
IsDRM
;

82 
	gsbr
->
	gtHFGí
 = 
T_HFGEN
;

83 
	gsbr
->
	gtHFAdj
 = 
T_HFADJ
;

85 
	gsbr
->
	gbsco
 = 0;

86 
	gsbr
->
	gbsco_¥ev
 = 0;

87 
	gsbr
->
	gM_¥ev
 = 0;

88 
	gsbr
->
	g‰ame_Àn
 = 
‰amñígth
;

91 
	gsbr
->
	gbs_°¨t_‰eq_¥ev
 = -1;

93 i‡(
	g‰amñígth
 == 960)

95 
sbr
->
numTimeSlŸsR©e
 = 
RATE
 * 
NO_TIME_SLOTS_960
;

96 
	gsbr
->
	gnumTimeSlŸs
 = 
NO_TIME_SLOTS_960
;

98 
	gsbr
->
	gnumTimeSlŸsR©e
 = 
RATE
 * 
NO_TIME_SLOTS
;

99 
	gsbr
->
	gnumTimeSlŸs
 = 
NO_TIME_SLOTS
;

102 
	gsbr
->
	gGQ_rögbuf_ödex
[0] = 0;

103 
	gsbr
->
	gGQ_rögbuf_ödex
[1] = 0;

105 i‡(
	gid_Øc
 =
ID_CPE
)

108 
uöt8_t
 
j
;

109 
	gsbr
->
	gqmÁ
[0] = 
qmÁ_öô
(32);

110 
	gsbr
->
	gqmÁ
[1] = 
qmÁ_öô
(32);

111 
	gsbr
->
	gqmfs
[0] = 
qmfs_öô
((
downSam∂edSBR
)?32:64);

112 
	gsbr
->
	gqmfs
[1] = 
qmfs_öô
((
downSam∂edSBR
)?32:64);

114 
	gj
 = 0; j < 5; j++)

116 
	gsbr
->
	gG_ãmp_¥ev
[0][
j
] = 
Áad_mÆloc
(64*(
ªÆ_t
));

117 
	gsbr
->
	gG_ãmp_¥ev
[1][
j
] = 
Áad_mÆloc
(64*(
ªÆ_t
));

118 
	gsbr
->
	gQ_ãmp_¥ev
[0][
j
] = 
Áad_mÆloc
(64*(
ªÆ_t
));

119 
	gsbr
->
	gQ_ãmp_¥ev
[1][
j
] = 
Áad_mÆloc
(64*(
ªÆ_t
));

122 
mem£t
(
sbr
->
Xsbr
[0], 0, (sbr->
numTimeSlŸsR©e
+sbr->
tHFGí
)*64 * (
qmf_t
));

123 
mem£t
(
sbr
->
Xsbr
[1], 0, (sbr->
numTimeSlŸsR©e
+sbr->
tHFGí
)*64 * (
qmf_t
));

126 
uöt8_t
 
	gj
;

127 
	gsbr
->
	gqmÁ
[0] = 
qmÁ_öô
(32);

128 
	gsbr
->
	gqmfs
[0] = 
qmfs_öô
((
downSam∂edSBR
)?32:64);

129 
	gsbr
->
	gqmfs
[1] = 
NULL
;

131 
	gj
 = 0; j < 5; j++)

133 
	gsbr
->
	gG_ãmp_¥ev
[0][
j
] = 
Áad_mÆloc
(64*(
ªÆ_t
));

134 
	gsbr
->
	gQ_ãmp_¥ev
[0][
j
] = 
Áad_mÆloc
(64*(
ªÆ_t
));

137 
mem£t
(
sbr
->
Xsbr
[0], 0, (sbr->
numTimeSlŸsR©e
+sbr->
tHFGí
)*64 * (
qmf_t
));

140  
	gsbr
;

143 
	$sbrDecodeEnd
(
sbr_öfo
 *
sbr
)

145 
uöt8_t
 
j
;

147 i‡(
sbr
)

149 
	`qmÁ_íd
(
sbr
->
qmÁ
[0]);

150 
	`qmfs_íd
(
sbr
->
qmfs
[0]);

151 i‡(
sbr
->
qmfs
[1] !
NULL
)

153 
	`qmÁ_íd
(
sbr
->
qmÁ
[1]);

154 
	`qmfs_íd
(
sbr
->
qmfs
[1]);

157 
j
 = 0; j < 5; j++)

159 i‡(
sbr
->
G_ãmp_¥ev
[0][
j
]Ë
	`Áad_‰ì
(sbr->G_temp_prev[0][j]);

160 i‡(
sbr
->
Q_ãmp_¥ev
[0][
j
]Ë
	`Áad_‰ì
(sbr->Q_temp_prev[0][j]);

161 i‡(
sbr
->
G_ãmp_¥ev
[1][
j
]Ë
	`Áad_‰ì
(sbr->G_temp_prev[1][j]);

162 i‡(
sbr
->
Q_ãmp_¥ev
[1][
j
]Ë
	`Áad_‰ì
(sbr->Q_temp_prev[1][j]);

165 #ifde‡
PS_DEC


166 i‡(
sbr
->
ps
 !
NULL
)

167 
	`ps_‰ì
(
sbr
->
ps
);

170 #ifde‡
DRM_PS


171 i‡(
sbr
->
drm_ps
 !
NULL
)

172 
	`drm_ps_‰ì
(
sbr
->
drm_ps
);

175 
	`Áad_‰ì
(
sbr
);

177 
	}
}

179 
uöt8_t
 
	$sbr_ßve_¥ev_d©a
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
)

181 
uöt8_t
 
i
;

184 
sbr
->
kx_¥ev
 = sbr->
kx
;

185 
sbr
->
M_¥ev
 = sbr->
M
;

186 
sbr
->
bsco_¥ev
 = sbr->
bsco
;

188 
sbr
->
L_E_¥ev
[
ch
] = sbr->
L_E
[ch];

191 i‡(
sbr
->
L_E
[
ch
] <= 0)

194 
sbr
->
f_¥ev
[
ch
] = sbr->
f
[ch][sbr->
L_E
[ch] - 1];

195 
i
 = 0; i < 
MAX_M
; i++)

197 
sbr
->
E_¥ev
[
ch
][
i
] = sbr->
E
[ch][i][sbr->
L_E
[ch] - 1];

198 
sbr
->
Q_¥ev
[
ch
][
i
] = sbr->
Q
[ch][i][sbr->
L_Q
[ch] - 1];

201 
i
 = 0; i < 
MAX_M
; i++)

203 
sbr
->
bs_add_h¨m⁄ic_¥ev
[
ch
][
i
] = sbr->
bs_add_h¨m⁄ic
[ch][i];

205 
sbr
->
bs_add_h¨m⁄ic_Êag_¥ev
[
ch
] = sbr->
bs_add_h¨m⁄ic_Êag
[ch];

207 i‡(
sbr
->
l_A
[
ch
] =sbr->
L_E
[ch])

208 
sbr
->
¥evEnvIsSh‹t
[
ch
] = 0;

210 
sbr
->
¥evEnvIsSh‹t
[
ch
] = -1;

213 
	}
}

215 
	$sbr_ßve_m©rix
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
)

217 
uöt8_t
 
i
;

219 
i
 = 0; i < 
sbr
->
tHFGí
; i++)

221 
	`memmove
(
sbr
->
Xsbr
[
ch
][
i
], sbr->Xsbr[ch][i+sbr->
numTimeSlŸsR©e
], 64 * (
qmf_t
));

223 
i
 = 
sbr
->
tHFGí
; i < 
MAX_NTSRHFG
; i++)

225 
	`mem£t
(
sbr
->
Xsbr
[
ch
][
i
], 0, 64 * (
qmf_t
));

227 
	}
}

229 
sbr_¥o˚ss_ch™√l
(
sbr_öfo
 *
sbr
, 
ªÆ_t
 *
ch™√l_buf
, 
qmf_t
 
X
[
MAX_NTSR
][64],

230 
uöt8_t
 
ch
, uöt8_à
d⁄t_¥o˚ss
,

231 c⁄° 
uöt8_t
 
downSam∂edSBR
)

233 
öt16_t
 
	gk
, 
	gl
;

235 #ifde‡
SBR_LOW_POWER


236 
ALIGN
 
ªÆ_t
 
	gdeg
[64];

239 #ifde‡
DRM


240 i‡(
	gsbr
->
	gIs_DRM_SBR
)

242 
	gsbr
->
	gbsco
 = 
max
((
öt32_t
)
sbr
->
maxAACLöe
*32/(öt32_t)sbr->
‰ame_Àn
 - (öt32_t)sbr->
kx
, 0);

245 
	gsbr
->
	gbsco
 = 0;

246 #ifde‡
DRM


252 #ifde‡
PRE_QMF_PRINT


254 
	gi
;

255 
	gi
 = 0; i < 1024; i++)

257 
¥ötf
("%d\n", 
ch™√l_buf
[
i
]);

264 i‡(
	gd⁄t_¥o˚ss
)

265 
sbr_qmf_™Æysis_32
(
sbr
, sbr->
qmÁ
[
ch
], 
ch™√l_buf
, sbr->
Xsbr
[ch], sbr->
tHFGí
, 32);

267 
sbr_qmf_™Æysis_32
(
sbr
, sbr->
qmÁ
[
ch
], 
ch™√l_buf
, sbr->
Xsbr
[ch], sbr->
tHFGí
, sbr->
kx
);

269 i‡(!
	gd⁄t_¥o˚ss
)

274 
hf_gíî©i⁄
(
sbr
, sbr->
Xsbr
[
ch
], sbr->Xsbr[ch]

275 #ifde‡
SBR_LOW_POWER


276 ,
deg


278 ,
ch
);

281 #ifde‡
SBR_LOW_POWER


282 
	gl
 = 
sbr
->
t_E
[
ch
][0];Ü < 
	gsbr
->
	gt_E
[ch][sbr->
L_E
[ch]];Ü++)

284 
	gk
 = 0; k < 
	gsbr
->
	gkx
; k++)

286 
QMF_RE
(
sbr
->
Xsbr
[
ch
][sbr->
tHFAdj
 + 
l
][
k
]) = 0;

293 
hf_adju°mít
(
sbr
, sbr->
Xsbr
[
ch
]

294 #ifde‡
SBR_LOW_POWER


295 ,
deg


297 ,
ch
);

301 i‡((
	gsbr
->
	gju°_£eked
 !0Ë|| 
d⁄t_¥o˚ss
)

303 
l
 = 0; 
	gl
 < 
	gsbr
->
	gnumTimeSlŸsR©e
;Ü++)

305 
	gk
 = 0; k < 32; k++)

307 
QMF_RE
(
X
[
l
][
k
]ËQMF_RE(
sbr
->
Xsbr
[
ch
][»+ sbr->
tHFAdj
][k]);

308 #i‚de‡
SBR_LOW_POWER


309 
QMF_IM
(
X
[
l
][
k
]ËQMF_IM(
sbr
->
Xsbr
[
ch
][»+ sbr->
tHFAdj
][k]);

312 
	gk
 = 32; k < 64; k++)

314 
QMF_RE
(
X
[
l
][
k
]) = 0;

315 #i‚de‡
SBR_LOW_POWER


316 
QMF_IM
(
X
[
l
][
k
]) = 0;

321 
	gl
 = 0;Ü < 
	gsbr
->
	gnumTimeSlŸsR©e
;Ü++)

323 
uöt8_t
 
	gkx_b™d
, 
	gM_b™d
, 
	gbsco_b™d
;

325 i‡(
	gl
 < 
	gsbr
->
	gt_E
[
ch
][0])

327 
	gkx_b™d
 = 
sbr
->
kx_¥ev
;

328 
	gM_b™d
 = 
sbr
->
M_¥ev
;

329 
	gbsco_b™d
 = 
sbr
->
bsco_¥ev
;

331 
	gkx_b™d
 = 
sbr
->
kx
;

332 
	gM_b™d
 = 
sbr
->
M
;

333 
	gbsco_b™d
 = 
sbr
->
bsco
;

336 #i‚de‡
SBR_LOW_POWER


337 
	gk
 = 0; k < 
	gkx_b™d
 + 
	gbsco_b™d
; k++)

339 
QMF_RE
(
X
[
l
][
k
]ËQMF_RE(
sbr
->
Xsbr
[
ch
][»+ sbr->
tHFAdj
][k]);

340 
QMF_IM
(
X
[
l
][
k
]ËQMF_IM(
sbr
->
Xsbr
[
ch
][»+ sbr->
tHFAdj
][k]);

342 
	gk
 = 
kx_b™d
 + 
bsco_b™d
; k < 
	gkx_b™d
 + 
	gM_b™d
; k++)

344 
QMF_RE
(
X
[
l
][
k
]ËQMF_RE(
sbr
->
Xsbr
[
ch
][»+ sbr->
tHFAdj
][k]);

345 
QMF_IM
(
X
[
l
][
k
]ËQMF_IM(
sbr
->
Xsbr
[
ch
][»+ sbr->
tHFAdj
][k]);

347 
	gk
 = 
max
(
kx_b™d
 + 
bsco_b™d
, kx_b™d + 
M_b™d
); k < 64; k++)

349 
QMF_RE
(
X
[
l
][
k
]) = 0;

350 
QMF_IM
(
X
[
l
][
k
]) = 0;

353 
	gk
 = 0; k < 
	gkx_b™d
 + 
	gbsco_b™d
; k++)

355 
QMF_RE
(
X
[
l
][
k
]ËQMF_RE(
sbr
->
Xsbr
[
ch
][»+ sbr->
tHFAdj
][k]);

357 
	gk
 = 
kx_b™d
 + 
bsco_b™d
; k < 
mö
(kx_b™d + 
M_b™d
, 63); k++)

359 
QMF_RE
(
X
[
l
][
k
]ËQMF_RE(
sbr
->
Xsbr
[
ch
][»+ sbr->
tHFAdj
][k]);

361 
	gk
 = 
max
(
kx_b™d
 + 
bsco_b™d
, kx_b™d + 
M_b™d
); k < 64; k++)

363 
QMF_RE
(
X
[
l
][
k
]) = 0;

365 
QMF_RE
(
X
[
l
][
kx_b™d
 - 1 + 
bsco_b™d
]) +=

366 
QMF_RE
(
sbr
->
Xsbr
[
ch
][
l
 + sbr->
tHFAdj
][
kx_b™d
 - 1 + 
bsco_b™d
]);

372 
uöt8_t
 
sbrDecodeCou∂eFøme
(
sbr_öfo
 *
sbr
, 
ªÆ_t
 *
À·_ch™
,Ñól_à*
right_ch™
,

373 c⁄° 
uöt8_t
 
ju°_£eked
, c⁄° uöt8_à
downSam∂edSBR
)

375 
uöt8_t
 
	gd⁄t_¥o˚ss
 = 0;

376 
uöt8_t
 
	gªt
 = 0;

377 
ALIGN
 
qmf_t
 
	gX
[
MAX_NTSR
][64];

379 i‡(
	gsbr
 =
NULL
)

383 i‡(
	gsbr
->
	gid_Øc
 !
ID_CPE
)

386 i‡(
	gsbr
->
	gªt
 || (sbr->
	ghódî_cou¡
 == 0))

389 
d⁄t_¥o˚ss
 = 1;

392 i‡(
	gsbr
->
	gªt
 && sbr->
	gRe£t
)

393 
	gsbr
->
	gbs_°¨t_‰eq_¥ev
 = -1;

396 i‡(
	gju°_£eked
)

398 
	gsbr
->
	gju°_£eked
 = 1;

400 
	gsbr
->
	gju°_£eked
 = 0;

403 
sbr_¥o˚ss_ch™√l
(
sbr
, 
À·_ch™
, 
X
, 0, 
d⁄t_¥o˚ss
, 
downSam∂edSBR
);

405 i‡(
	gdownSam∂edSBR
)

407 
sbr_qmf_sy¡hesis_32
(
sbr
, sbr->
qmfs
[0], 
X
, 
À·_ch™
);

409 
sbr_qmf_sy¡hesis_64
(
sbr
, sbr->
qmfs
[0], 
X
, 
À·_ch™
);

412 
sbr_¥o˚ss_ch™√l
(
sbr
, 
right_ch™
, 
X
, 1, 
d⁄t_¥o˚ss
, 
downSam∂edSBR
);

414 i‡(
	gdownSam∂edSBR
)

416 
sbr_qmf_sy¡hesis_32
(
sbr
, sbr->
qmfs
[1], 
X
, 
right_ch™
);

418 
sbr_qmf_sy¡hesis_64
(
sbr
, sbr->
qmfs
[1], 
X
, 
right_ch™
);

421 i‡(
	gsbr
->
	gbs_hódî_Êag
)

422 
	gsbr
->
	gju°_£eked
 = 0;

424 i‡(
	gsbr
->
	ghódî_cou¡
 !0 && 
sbr
->
ªt
 == 0)

426 
ªt
 = 
sbr_ßve_¥ev_d©a
(
sbr
, 0);

427 i‡(
	gªt
) Ñet;

428 
	gªt
 = 
sbr_ßve_¥ev_d©a
(
sbr
, 1);

429 i‡(
	gªt
) Ñet;

432 
sbr_ßve_m©rix
(
sbr
, 0);

433 
sbr_ßve_m©rix
(
sbr
, 1);

435 
	gsbr
->
	g‰ame
++;

438 #ifde‡
POST_QMF_PRINT


440 
	gi
;

441 
	gi
 = 0; i < 2048; i++)

443 
¥ötf
("%d\n", 
À·_ch™
[
i
]);

445 
	gi
 = 0; i < 2048; i++)

447 
¥ötf
("%d\n", 
right_ch™
[
i
]);

455 
uöt8_t
 
sbrDecodeSögÀFøme
(
sbr_öfo
 *
sbr
, 
ªÆ_t
 *
ch™√l
,

456 c⁄° 
uöt8_t
 
ju°_£eked
, c⁄° uöt8_à
downSam∂edSBR
)

458 
uöt8_t
 
	gd⁄t_¥o˚ss
 = 0;

459 
uöt8_t
 
	gªt
 = 0;

460 
ALIGN
 
qmf_t
 
	gX
[
MAX_NTSR
][64];

462 i‡(
	gsbr
 =
NULL
)

466 i‡(
	gsbr
->
	gid_Øc
 !
ID_SCE
 && 
sbr
->
id_Øc
 !
ID_LFE
)

469 i‡(
	gsbr
->
	gªt
 || (sbr->
	ghódî_cou¡
 == 0))

472 
d⁄t_¥o˚ss
 = 1;

475 i‡(
	gsbr
->
	gªt
 && sbr->
	gRe£t
)

476 
	gsbr
->
	gbs_°¨t_‰eq_¥ev
 = -1;

479 i‡(
	gju°_£eked
)

481 
	gsbr
->
	gju°_£eked
 = 1;

483 
	gsbr
->
	gju°_£eked
 = 0;

486 
sbr_¥o˚ss_ch™√l
(
sbr
, 
ch™√l
, 
X
, 0, 
d⁄t_¥o˚ss
, 
downSam∂edSBR
);

488 i‡(
	gdownSam∂edSBR
)

490 
sbr_qmf_sy¡hesis_32
(
sbr
, sbr->
qmfs
[0], 
X
, 
ch™√l
);

492 
sbr_qmf_sy¡hesis_64
(
sbr
, sbr->
qmfs
[0], 
X
, 
ch™√l
);

495 i‡(
	gsbr
->
	gbs_hódî_Êag
)

496 
	gsbr
->
	gju°_£eked
 = 0;

498 i‡(
	gsbr
->
	ghódî_cou¡
 !0 && 
sbr
->
ªt
 == 0)

500 
ªt
 = 
sbr_ßve_¥ev_d©a
(
sbr
, 0);

501 i‡(
	gªt
) Ñet;

504 
sbr_ßve_m©rix
(
sbr
, 0);

506 
	gsbr
->
	g‰ame
++;

509 #ifde‡
POST_QMF_PRINT


511 
	gi
;

512 
	gi
 = 0; i < 2048; i++)

514 
¥ötf
("%d\n", 
ch™√l
[
i
]);

522 #i‡(
deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

523 
uöt8_t
 
sbrDecodeSögÀFømePS
(
sbr_öfo
 *
sbr
, 
ªÆ_t
 *
À·_ch™√l
,Ñól_à*
right_ch™√l
,

524 c⁄° 
uöt8_t
 
ju°_£eked
, c⁄° uöt8_à
downSam∂edSBR
)

526 
uöt8_t
 
	gl
, 
	gk
;

527 
uöt8_t
 
	gd⁄t_¥o˚ss
 = 0;

528 
uöt8_t
 
	gªt
 = 0;

529 
ALIGN
 
qmf_t
 
	gX_À·
[38][64] = {{0}};

530 
ALIGN
 
qmf_t
 
	gX_right
[38][64] = {{0}};

532 i‡(
	gsbr
 =
NULL
)

536 i‡(
	gsbr
->
	gid_Øc
 !
ID_SCE
 && 
sbr
->
id_Øc
 !
ID_LFE
)

539 i‡(
	gsbr
->
	gªt
 || (sbr->
	ghódî_cou¡
 == 0))

542 
d⁄t_¥o˚ss
 = 1;

545 i‡(
	gsbr
->
	gªt
 && sbr->
	gRe£t
)

546 
	gsbr
->
	gbs_°¨t_‰eq_¥ev
 = -1;

549 i‡(
	gju°_£eked
)

551 
	gsbr
->
	gju°_£eked
 = 1;

553 
	gsbr
->
	gju°_£eked
 = 0;

556 i‡(
	gsbr
->
	gqmfs
[1] =
NULL
)

558 
sbr
->
qmfs
[1] = 
qmfs_öô
((
downSam∂edSBR
)?32:64);

561 
sbr_¥o˚ss_ch™√l
(
sbr
, 
À·_ch™√l
, 
X_À·
, 0, 
d⁄t_¥o˚ss
, 
downSam∂edSBR
);

564 
	gl
 = 32;Ü < 38;Ü++)

566 
	gk
 = 0; k < 5; k++)

568 
QMF_RE
(
X_À·
[
l
][
k
]ËQMF_RE(
sbr
->
Xsbr
[0][sbr->
tHFAdj
+l][k]);

569 
QMF_IM
(
X_À·
[
l
][
k
]ËQMF_IM(
sbr
->
Xsbr
[0][sbr->
tHFAdj
+l][k]);

574 #ifde‡
DRM_PS


575 i‡(
	gsbr
->
	gIs_DRM_SBR
)

577 
drm_ps_decode
(
sbr
->
drm_ps
, (sbr->
ªt
 > 0), sbr->
ßm∂e_øã
, 
X_À·
, 
X_right
);

580 #ifde‡
PS_DEC


581 
ps_decode
(
sbr
->
ps
, 
X_À·
, 
X_right
);

583 #ifde‡
DRM_PS


588 i‡(
	gdownSam∂edSBR
)

590 
sbr_qmf_sy¡hesis_32
(
sbr
, sbr->
qmfs
[0], 
X_À·
, 
À·_ch™√l
);

591 
sbr_qmf_sy¡hesis_32
(
sbr
, sbr->
qmfs
[1], 
X_right
, 
right_ch™√l
);

593 
sbr_qmf_sy¡hesis_64
(
sbr
, sbr->
qmfs
[0], 
X_À·
, 
À·_ch™√l
);

594 
sbr_qmf_sy¡hesis_64
(
sbr
, sbr->
qmfs
[1], 
X_right
, 
right_ch™√l
);

597 i‡(
	gsbr
->
	gbs_hódî_Êag
)

598 
	gsbr
->
	gju°_£eked
 = 0;

600 i‡(
	gsbr
->
	ghódî_cou¡
 !0 && 
sbr
->
ªt
 == 0)

602 
ªt
 = 
sbr_ßve_¥ev_d©a
(
sbr
, 0);

603 i‡(
	gªt
) Ñet;

606 
sbr_ßve_m©rix
(
sbr
, 0);

608 
	gsbr
->
	g‰ame
++;

	@sbr_dec.h

28 #i‚de‡
__SBR_DEC_H__


29 
	#__SBR_DEC_H__


	)

31 #ifde‡
__˝lu•lus


35 #ifde‡
PS_DEC


36 
	~"ps_dec.h
"

38 #ifde‡
DRM_PS


39 
	~"drm_dec.h
"

43 
	#MAX_NTSRHFG
 40

	)

44 
	#MAX_NTSR
 32

	)

47 
	#MAX_M
 49

	)

49 
	#MAX_L_E
 5

	)

52 
ªÆ_t
 *
x
;

53 
öt16_t
 
x_ödex
;

54 
uöt8_t
 
ch™√ls
;

55 } 
	tqmÁ_öfo
;

58 
ªÆ_t
 *
v
;

59 
öt16_t
 
v_ödex
;

60 
uöt8_t
 
ch™√ls
;

61 } 
	tqmfs_öfo
;

65 
uöt32_t
 
ßm∂e_øã
;

66 
uöt32_t
 
maxAACLöe
;

68 
uöt8_t
 
øã
;

69 
uöt8_t
 
ju°_£eked
;

70 
uöt8_t
 
ªt
;

72 
uöt8_t
 
amp_ªs
[2];

74 
uöt8_t
 
k0
;

75 
uöt8_t
 
kx
;

76 
uöt8_t
 
M
;

77 
uöt8_t
 
N_ma°î
;

78 
uöt8_t
 
N_high
;

79 
uöt8_t
 
N_low
;

80 
uöt8_t
 
N_Q
;

81 
uöt8_t
 
N_L
[4];

82 
uöt8_t
 
n
[2];

84 
uöt8_t
 
f_ma°î
[64];

85 
uöt8_t
 
f_èbÀ_ªs
[2][64];

86 
uöt8_t
 
f_èbÀ_noi£
[64];

87 
uöt8_t
 
f_èbÀ_lim
[4][64];

88 #ifde‡
SBR_LOW_POWER


89 
uöt8_t
 
f_group
[5][64];

90 
uöt8_t
 
N_G
[5];

93 
uöt8_t
 
èbÀ_m≠_k_to_g
[64];

95 
uöt8_t
 
abs_b‹d_Àad
[2];

96 
uöt8_t
 
abs_b‹d_åaû
[2];

97 
uöt8_t
 
n_ªl_Àad
[2];

98 
uöt8_t
 
n_ªl_åaû
[2];

100 
uöt8_t
 
L_E
[2];

101 
uöt8_t
 
L_E_¥ev
[2];

102 
uöt8_t
 
L_Q
[2];

104 
uöt8_t
 
t_E
[2][
MAX_L_E
+1];

105 
uöt8_t
 
t_Q
[2][3];

106 
uöt8_t
 
f
[2][
MAX_L_E
+1];

107 
uöt8_t
 
f_¥ev
[2];

109 
ªÆ_t
 *
G_ãmp_¥ev
[2][5];

110 
ªÆ_t
 *
Q_ãmp_¥ev
[2][5];

111 
öt8_t
 
GQ_rögbuf_ödex
[2];

113 
öt16_t
 
E
[2][64][
MAX_L_E
];

114 
öt16_t
 
E_¥ev
[2][64];

115 #i‚de‡
FIXED_POINT


116 
ªÆ_t
 
E_‹ig
[2][64][
MAX_L_E
];

118 
ªÆ_t
 
E_cuº
[2][64][
MAX_L_E
];

119 
öt32_t
 
Q
[2][64][2];

120 #i‚de‡
FIXED_POINT


121 
ªÆ_t
 
Q_div
[2][64][2];

122 
ªÆ_t
 
Q_div2
[2][64][2];

124 
öt32_t
 
Q_¥ev
[2][64];

126 
öt8_t
 
l_A
[2];

127 
öt8_t
 
l_A_¥ev
[2];

129 
uöt8_t
 
bs_övf_mode
[2][
MAX_L_E
];

130 
uöt8_t
 
bs_övf_mode_¥ev
[2][
MAX_L_E
];

131 
ªÆ_t
 
bwAºay
[2][64];

132 
ªÆ_t
 
bwAºay_¥ev
[2][64];

134 
uöt8_t
 
noP©ches
;

135 
uöt8_t
 
∑tchNoSubb™ds
[64];

136 
uöt8_t
 
∑tchSèπSubb™d
[64];

138 
uöt8_t
 
bs_add_h¨m⁄ic
[2][64];

139 
uöt8_t
 
bs_add_h¨m⁄ic_¥ev
[2][64];

141 
uöt16_t
 
ödex_noi£_¥ev
[2];

142 
uöt8_t
 
psi_is_¥ev
[2];

144 
uöt8_t
 
bs_°¨t_‰eq_¥ev
;

145 
uöt8_t
 
bs_°›_‰eq_¥ev
;

146 
uöt8_t
 
bs_xovî_b™d_¥ev
;

147 
uöt8_t
 
bs_‰eq_sˇÀ_¥ev
;

148 
uöt8_t
 
bs_Æãr_sˇÀ_¥ev
;

149 
uöt8_t
 
bs_noi£_b™ds_¥ev
;

151 
öt8_t
 
¥evEnvIsSh‹t
[2];

153 
öt8_t
 
kx_¥ev
;

154 
uöt8_t
 
bsco
;

155 
uöt8_t
 
bsco_¥ev
;

156 
uöt8_t
 
M_¥ev
;

157 
uöt16_t
 
‰ame_Àn
;

159 
uöt8_t
 
Re£t
;

160 
uöt32_t
 
‰ame
;

161 
uöt32_t
 
hódî_cou¡
;

163 
uöt8_t
 
id_Øc
;

164 
qmÁ_öfo
 *
qmÁ
[2];

165 
qmfs_öfo
 *
qmfs
[2];

167 
qmf_t
 
Xsbr
[2][
MAX_NTSRHFG
][64];

169 #ifde‡
DRM


170 
uöt8_t
 
Is_DRM_SBR
;

171 #ifde‡
DRM_PS


172 
drm_ps_öfo
 *
drm_ps
;

176 
uöt8_t
 
numTimeSlŸsR©e
;

177 
uöt8_t
 
numTimeSlŸs
;

178 
uöt8_t
 
tHFGí
;

179 
uöt8_t
 
tHFAdj
;

181 #ifde‡
PS_DEC


182 
ps_öfo
 *
ps
;

184 #i‡(
deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

185 
uöt8_t
 
ps_u£d
;

192 
uöt8_t
 
bs_hódî_Êag
;

193 
uöt8_t
 
bs_¸c_Êag
;

194 
uöt16_t
 
bs_sbr_¸c_bôs
;

195 
uöt8_t
 
bs_¥Ÿocﬁ_vîsi⁄
;

196 
uöt8_t
 
bs_amp_ªs
;

197 
uöt8_t
 
bs_°¨t_‰eq
;

198 
uöt8_t
 
bs_°›_‰eq
;

199 
uöt8_t
 
bs_xovî_b™d
;

200 
uöt8_t
 
bs_‰eq_sˇÀ
;

201 
uöt8_t
 
bs_Æãr_sˇÀ
;

202 
uöt8_t
 
bs_noi£_b™ds
;

203 
uöt8_t
 
bs_limôî_b™ds
;

204 
uöt8_t
 
bs_limôî_gaös
;

205 
uöt8_t
 
bs_öãΩﬁ_‰eq
;

206 
uöt8_t
 
bs_smoŸhög_mode
;

207 
uöt8_t
 
bs_ßm∂î©e_mode
;

208 
uöt8_t
 
bs_add_h¨m⁄ic_Êag
[2];

209 
uöt8_t
 
bs_add_h¨m⁄ic_Êag_¥ev
[2];

210 
uöt8_t
 
bs_exãnded_d©a
;

211 
uöt8_t
 
bs_exãnsi⁄_id
;

212 
uöt8_t
 
bs_exãnsi⁄_d©a
;

213 
uöt8_t
 
bs_cou∂ög
;

214 
uöt8_t
 
bs_‰ame_˛ass
[2];

215 
uöt8_t
 
bs_ªl_b‹d
[2][9];

216 
uöt8_t
 
bs_ªl_b‹d_0
[2][9];

217 
uöt8_t
 
bs_ªl_b‹d_1
[2][9];

218 
uöt8_t
 
bs_poöãr
[2];

219 
uöt8_t
 
bs_abs_b‹d_0
[2];

220 
uöt8_t
 
bs_abs_b‹d_1
[2];

221 
uöt8_t
 
bs_num_ªl_0
[2];

222 
uöt8_t
 
bs_num_ªl_1
[2];

223 
uöt8_t
 
bs_df_ív
[2][9];

224 
uöt8_t
 
bs_df_noi£
[2][3];

225 } 
	tsbr_öfo
;

227 
sbr_öfo
 *
sbrDecodeInô
(
uöt16_t
 
‰amñígth
, 
uöt8_t
 
id_Øc
,

228 
uöt32_t
 
ßm∂e_øã
, 
uöt8_t
 
downSam∂edSBR


229 #ifde‡
DRM


230 , 
uöt8_t
 
IsDRM


233 
sbrDecodeEnd
(
sbr_öfo
 *
sbr
);

235 
uöt8_t
 
sbrDecodeCou∂eFøme
(
sbr_öfo
 *
sbr
, 
ªÆ_t
 *
À·_ch™
,Ñól_à*
right_ch™
,

236 c⁄° 
uöt8_t
 
ju°_£eked
, c⁄° uöt8_à
downSam∂edSBR
);

237 
uöt8_t
 
sbrDecodeSögÀFøme
(
sbr_öfo
 *
sbr
, 
ªÆ_t
 *
ch™√l
,

238 c⁄° 
uöt8_t
 
ju°_£eked
, c⁄° uöt8_à
downSam∂edSBR
);

239 #i‡(
deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

240 
uöt8_t
 
sbrDecodeSögÀFømePS
(
sbr_öfo
 *
sbr
, 
ªÆ_t
 *
À·_ch™√l
,Ñól_à*
right_ch™√l
,

241 c⁄° 
uöt8_t
 
ju°_£eked
, c⁄° uöt8_à
downSam∂edSBR
);

245 #ifde‡
__˝lu•lus


	@sbr_e_nf.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 #ifde‡
SBR_DEC


33 
	~<°dlib.h
>

35 
	~"sbr_sy¡ax.h
"

36 
	~"sbr_e_nf.h
"

38 
	$exåa˘_ívñ›e_d©a
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
)

40 
uöt8_t
 
l
, 
k
;

42 
l
 = 0;Ü < 
sbr
->
L_E
[
ch
];Ü++)

44 i‡(
sbr
->
bs_df_ív
[
ch
][
l
] == 0)

46 
k
 = 1; k < 
sbr
->
n
[sbr->
f
[
ch
][
l
]]; k++)

48 
sbr
->
E
[
ch
][
k
][
l
] = sbr->E[ch][k - 1][l] + sbr->E[ch][k][l];

49 i‡(
sbr
->
E
[
ch
][
k
][
l
] < 0)

50 
sbr
->
E
[
ch
][
k
][
l
] = 0;

55 
uöt8_t
 
g
 = (
l
 =0Ë? 
sbr
->
f_¥ev
[
ch
] : sbr->
f
[ch][l-1];

56 
öt16_t
 
E_¥ev
;

58 i‡(
sbr
->
f
[
ch
][
l
] =
g
)

60 
k
 = 0; k < 
sbr
->
n
[sbr->
f
[
ch
][
l
]]; k++)

62 i‡(
l
 == 0)

63 
E_¥ev
 = 
sbr
->E_¥ev[
ch
][
k
];

65 
E_¥ev
 = 
sbr
->
E
[
ch
][
k
][
l
 - 1];

67 
sbr
->
E
[
ch
][
k
][
l
] = 
E_¥ev
 + sbr->E[ch][k][l];

70 } i‡((
g
 =1Ë&& (
sbr
->
f
[
ch
][
l
] == 0)) {

71 
uöt8_t
 
i
;

73 
k
 = 0; k < 
sbr
->
n
[sbr->
f
[
ch
][
l
]]; k++)

75 
i
 = 0; i < 
sbr
->
N_high
; i++)

77 i‡(
sbr
->
f_èbÀ_ªs
[
HI_RES
][
i
] =sbr->f_èbÀ_ªs[
LO_RES
][
k
])

79 i‡(
l
 == 0)

80 
E_¥ev
 = 
sbr
->E_¥ev[
ch
][
i
];

82 
E_¥ev
 = 
sbr
->
E
[
ch
][
i
][
l
 - 1];

84 
sbr
->
E
[
ch
][
k
][
l
] = 
E_¥ev
 + sbr->E[ch][k][l];

89 } i‡((
g
 =0Ë&& (
sbr
->
f
[
ch
][
l
] == 1)) {

90 
uöt8_t
 
i
;

92 
k
 = 0; k < 
sbr
->
n
[sbr->
f
[
ch
][
l
]]; k++)

94 
i
 = 0; i < 
sbr
->
N_low
; i++)

96 i‡((
sbr
->
f_èbÀ_ªs
[
LO_RES
][
i
] <sbr->f_èbÀ_ªs[
HI_RES
][
k
]) &&

97 (
sbr
->
f_èbÀ_ªs
[
HI_RES
][
k
] < sbr->f_èbÀ_ªs[
LO_RES
][
i
 + 1]))

99 i‡(
l
 == 0)

100 
E_¥ev
 = 
sbr
->E_¥ev[
ch
][
i
];

102 
E_¥ev
 = 
sbr
->
E
[
ch
][
i
][
l
 - 1];

104 
sbr
->
E
[
ch
][
k
][
l
] = 
E_¥ev
 + sbr->E[ch][k][l];

111 
	}
}

113 
	$exåa˘_noi£_Êo‹_d©a
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
)

115 
uöt8_t
 
l
, 
k
;

117 
l
 = 0;Ü < 
sbr
->
L_Q
[
ch
];Ü++)

119 i‡(
sbr
->
bs_df_noi£
[
ch
][
l
] == 0)

121 
k
 = 1; k < 
sbr
->
N_Q
; k++)

123 
sbr
->
Q
[
ch
][
k
][
l
] = sbr->Q[ch][k][l] + sbr->Q[ch][k-1][l];

126 i‡(
l
 == 0)

128 
k
 = 0; k < 
sbr
->
N_Q
; k++)

130 
sbr
->
Q
[
ch
][
k
][
l
] = sbr->
Q_¥ev
[ch][k] + sbr->Q[ch][k][0];

133 
k
 = 0; k < 
sbr
->
N_Q
; k++)

135 
sbr
->
Q
[
ch
][
k
][
l
] = sbr->Q[ch][k][l - 1] + sbr->Q[ch][k][l];

140 
	}
}

142 #i‚de‡
FIXED_POINT


145 c⁄° 
ªÆ_t
 
	gQ_div_èb
[31] = {

146 
FRAC_CONST
(0.0153846), FRAC_CONST(0.030303),

147 
FRAC_CONST
(0.0588235), FRAC_CONST(0.111111),

148 
FRAC_CONST
(0.2), FRAC_CONST(0.333333),

149 
FRAC_CONST
(0.5), FRAC_CONST(0.666667),

150 
FRAC_CONST
(0.8), FRAC_CONST(0.888889),

151 
FRAC_CONST
(0.941176), FRAC_CONST(0.969697),

152 
FRAC_CONST
(0.984615), FRAC_CONST(0.992248),

153 
FRAC_CONST
(0.996109), FRAC_CONST(0.998051),

154 
FRAC_CONST
(0.999024), FRAC_CONST(0.999512),

155 
FRAC_CONST
(0.999756), FRAC_CONST(0.999878),

156 
FRAC_CONST
(0.999939), FRAC_CONST(0.999969),

157 
FRAC_CONST
(0.999985), FRAC_CONST(0.999992),

158 
FRAC_CONST
(0.999996), FRAC_CONST(0.999998),

159 
FRAC_CONST
(0.999999), FRAC_CONST(1),

160 
FRAC_CONST
(1), FRAC_CONST(1),

161 
FRAC_CONST
(1)

164 c⁄° 
ªÆ_t
 
	gQ_div_èb_À·
[31][13] = {

165 { 
FRAC_CONST
(0.969704), FRAC_CONST(0.888985), FRAC_CONST(0.667532), FRAC_CONST(0.336788), FRAC_CONST(0.117241), FRAC_CONST(0.037594), FRAC_CONST(0.0153846), FRAC_CONST(0.00967118), FRAC_CONST(0.00823245), FRAC_CONST(0.00787211), FRAC_CONST(0.00778198), FRAC_CONST(0.00775945), FRAC_CONST(0.00775382) },

166 { 
FRAC_CONST
(0.984619), FRAC_CONST(0.94123), FRAC_CONST(0.800623), FRAC_CONST(0.503876), FRAC_CONST(0.209877), FRAC_CONST(0.0724638), FRAC_CONST(0.030303), FRAC_CONST(0.0191571), FRAC_CONST(0.0163305), FRAC_CONST(0.0156212), FRAC_CONST(0.0154438), FRAC_CONST(0.0153994), FRAC_CONST(0.0153883) },

167 { 
FRAC_CONST
(0.99225), FRAC_CONST(0.969726), FRAC_CONST(0.889273), FRAC_CONST(0.670103), FRAC_CONST(0.346939), FRAC_CONST(0.135135), FRAC_CONST(0.0588235), FRAC_CONST(0.037594), FRAC_CONST(0.0321361), FRAC_CONST(0.0307619), FRAC_CONST(0.0304178), FRAC_CONST(0.0303317), FRAC_CONST(0.0303102) },

168 { 
FRAC_CONST
(0.99611), FRAC_CONST(0.98463), FRAC_CONST(0.941392), FRAC_CONST(0.802469), FRAC_CONST(0.515152), FRAC_CONST(0.238095), FRAC_CONST(0.111111), FRAC_CONST(0.0724638), FRAC_CONST(0.0622711), FRAC_CONST(0.0596878), FRAC_CONST(0.0590397), FRAC_CONST(0.0588776), FRAC_CONST(0.058837) },

169 { 
FRAC_CONST
(0.998051), FRAC_CONST(0.992256), FRAC_CONST(0.969811), FRAC_CONST(0.890411), FRAC_CONST(0.68), FRAC_CONST(0.384615), FRAC_CONST(0.2), FRAC_CONST(0.135135), FRAC_CONST(0.117241), FRAC_CONST(0.112652), FRAC_CONST(0.111497), FRAC_CONST(0.111208), FRAC_CONST(0.111135) },

170 { 
FRAC_CONST
(0.999025), FRAC_CONST(0.996113), FRAC_CONST(0.984674), FRAC_CONST(0.942029), FRAC_CONST(0.809524), FRAC_CONST(0.555556), FRAC_CONST(0.333333), FRAC_CONST(0.238095), FRAC_CONST(0.209877), FRAC_CONST(0.202492), FRAC_CONST(0.200625), FRAC_CONST(0.200156), FRAC_CONST(0.200039) },

171 { 
FRAC_CONST
(0.999512), FRAC_CONST(0.998053), FRAC_CONST(0.992278), FRAC_CONST(0.970149), FRAC_CONST(0.894737), FRAC_CONST(0.714286), FRAC_CONST(0.5), FRAC_CONST(0.384615), FRAC_CONST(0.346939), FRAC_CONST(0.336788), FRAC_CONST(0.3342), FRAC_CONST(0.33355), FRAC_CONST(0.333388) },

172 { 
FRAC_CONST
(0.999756), FRAC_CONST(0.999025), FRAC_CONST(0.996124), FRAC_CONST(0.984848), FRAC_CONST(0.944444), FRAC_CONST(0.833333), FRAC_CONST(0.666667), FRAC_CONST(0.555556), FRAC_CONST(0.515152), FRAC_CONST(0.503876), FRAC_CONST(0.500975), FRAC_CONST(0.500244), FRAC_CONST(0.500061) },

173 { 
FRAC_CONST
(0.999878), FRAC_CONST(0.999512), FRAC_CONST(0.998058), FRAC_CONST(0.992366), FRAC_CONST(0.971429), FRAC_CONST(0.909091), FRAC_CONST(0.8), FRAC_CONST(0.714286), FRAC_CONST(0.68), FRAC_CONST(0.670103), FRAC_CONST(0.667532), FRAC_CONST(0.666884), FRAC_CONST(0.666721) },

174 { 
FRAC_CONST
(0.999939), FRAC_CONST(0.999756), FRAC_CONST(0.999028), FRAC_CONST(0.996169), FRAC_CONST(0.985507), FRAC_CONST(0.952381), FRAC_CONST(0.888889), FRAC_CONST(0.833333), FRAC_CONST(0.809524), FRAC_CONST(0.802469), FRAC_CONST(0.800623), FRAC_CONST(0.800156), FRAC_CONST(0.800039) },

175 { 
FRAC_CONST
(0.999969), FRAC_CONST(0.999878), FRAC_CONST(0.999514), FRAC_CONST(0.998081), FRAC_CONST(0.992701), FRAC_CONST(0.97561), FRAC_CONST(0.941176), FRAC_CONST(0.909091), FRAC_CONST(0.894737), FRAC_CONST(0.890411), FRAC_CONST(0.889273), FRAC_CONST(0.888985), FRAC_CONST(0.888913) },

176 { 
FRAC_CONST
(0.999985), FRAC_CONST(0.999939), FRAC_CONST(0.999757), FRAC_CONST(0.999039), FRAC_CONST(0.996337), FRAC_CONST(0.987654), FRAC_CONST(0.969697), FRAC_CONST(0.952381), FRAC_CONST(0.944444), FRAC_CONST(0.942029), FRAC_CONST(0.941392), FRAC_CONST(0.94123), FRAC_CONST(0.94119) },

177 { 
FRAC_CONST
(0.999992), FRAC_CONST(0.99997), FRAC_CONST(0.999878), FRAC_CONST(0.999519), FRAC_CONST(0.998165), FRAC_CONST(0.993789), FRAC_CONST(0.984615), FRAC_CONST(0.97561), FRAC_CONST(0.971429), FRAC_CONST(0.970149), FRAC_CONST(0.969811), FRAC_CONST(0.969726), FRAC_CONST(0.969704) },

178 { 
FRAC_CONST
(0.999996), FRAC_CONST(0.999985), FRAC_CONST(0.999939), FRAC_CONST(0.99976), FRAC_CONST(0.999082), FRAC_CONST(0.996885), FRAC_CONST(0.992248), FRAC_CONST(0.987654), FRAC_CONST(0.985507), FRAC_CONST(0.984848), FRAC_CONST(0.984674), FRAC_CONST(0.98463), FRAC_CONST(0.984619) },

179 { 
FRAC_CONST
(0.999998), FRAC_CONST(0.999992), FRAC_CONST(0.99997), FRAC_CONST(0.99988), FRAC_CONST(0.999541), FRAC_CONST(0.99844), FRAC_CONST(0.996109), FRAC_CONST(0.993789), FRAC_CONST(0.992701), FRAC_CONST(0.992366), FRAC_CONST(0.992278), FRAC_CONST(0.992256), FRAC_CONST(0.99225) },

180 { 
FRAC_CONST
(0.999999), FRAC_CONST(0.999996), FRAC_CONST(0.999985), FRAC_CONST(0.99994), FRAC_CONST(0.99977), FRAC_CONST(0.999219), FRAC_CONST(0.998051), FRAC_CONST(0.996885), FRAC_CONST(0.996337), FRAC_CONST(0.996169), FRAC_CONST(0.996124), FRAC_CONST(0.996113), FRAC_CONST(0.99611) },

181 { 
FRAC_CONST
(1), FRAC_CONST(0.999998), FRAC_CONST(0.999992), FRAC_CONST(0.99997), FRAC_CONST(0.999885), FRAC_CONST(0.99961), FRAC_CONST(0.999024), FRAC_CONST(0.99844), FRAC_CONST(0.998165), FRAC_CONST(0.998081), FRAC_CONST(0.998058), FRAC_CONST(0.998053), FRAC_CONST(0.998051) },

182 { 
FRAC_CONST
(1), FRAC_CONST(0.999999), FRAC_CONST(0.999996), FRAC_CONST(0.999985), FRAC_CONST(0.999943), FRAC_CONST(0.999805), FRAC_CONST(0.999512), FRAC_CONST(0.999219), FRAC_CONST(0.999082), FRAC_CONST(0.999039), FRAC_CONST(0.999028), FRAC_CONST(0.999025), FRAC_CONST(0.999025) },

183 { 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(0.999998), FRAC_CONST(0.999992), FRAC_CONST(0.999971), FRAC_CONST(0.999902), FRAC_CONST(0.999756), FRAC_CONST(0.99961), FRAC_CONST(0.999541), FRAC_CONST(0.999519), FRAC_CONST(0.999514), FRAC_CONST(0.999512), FRAC_CONST(0.999512) },

184 { 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(0.999999), FRAC_CONST(0.999996), FRAC_CONST(0.999986), FRAC_CONST(0.999951), FRAC_CONST(0.999878), FRAC_CONST(0.999805), FRAC_CONST(0.99977), FRAC_CONST(0.99976), FRAC_CONST(0.999757), FRAC_CONST(0.999756), FRAC_CONST(0.999756) },

185 { 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(0.999998), FRAC_CONST(0.999993), FRAC_CONST(0.999976), FRAC_CONST(0.999939), FRAC_CONST(0.999902), FRAC_CONST(0.999885), FRAC_CONST(0.99988), FRAC_CONST(0.999878), FRAC_CONST(0.999878), FRAC_CONST(0.999878) },

186 { 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(0.999999), FRAC_CONST(0.999996), FRAC_CONST(0.999988), FRAC_CONST(0.999969), FRAC_CONST(0.999951), FRAC_CONST(0.999943), FRAC_CONST(0.99994), FRAC_CONST(0.999939), FRAC_CONST(0.999939), FRAC_CONST(0.999939) },

187 { 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(0.999998), FRAC_CONST(0.999994), FRAC_CONST(0.999985), FRAC_CONST(0.999976), FRAC_CONST(0.999971), FRAC_CONST(0.99997), FRAC_CONST(0.99997), FRAC_CONST(0.99997), FRAC_CONST(0.999969) },

188 { 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(0.999999), FRAC_CONST(0.999997), FRAC_CONST(0.999992), FRAC_CONST(0.999988), FRAC_CONST(0.999986), FRAC_CONST(0.999985), FRAC_CONST(0.999985), FRAC_CONST(0.999985), FRAC_CONST(0.999985) },

189 { 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(0.999998), FRAC_CONST(0.999996), FRAC_CONST(0.999994), FRAC_CONST(0.999993), FRAC_CONST(0.999992), FRAC_CONST(0.999992), FRAC_CONST(0.999992), FRAC_CONST(0.999992) },

190 { 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(0.999999), FRAC_CONST(0.999998), FRAC_CONST(0.999997), FRAC_CONST(0.999996), FRAC_CONST(0.999996), FRAC_CONST(0.999996), FRAC_CONST(0.999996), FRAC_CONST(0.999996) },

191 { 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(0.999999), FRAC_CONST(0.999998), FRAC_CONST(0.999998), FRAC_CONST(0.999998), FRAC_CONST(0.999998), FRAC_CONST(0.999998), FRAC_CONST(0.999998) },

192 { 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(0.999999), FRAC_CONST(0.999999), FRAC_CONST(0.999999), FRAC_CONST(0.999999), FRAC_CONST(0.999999), FRAC_CONST(0.999999) },

193 { 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1) },

194 { 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1) },

195 { 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1) }

198 c⁄° 
ªÆ_t
 
	gQ_div_èb_right
[31][13] = {

199 { 
FRAC_CONST
(0.00775382), FRAC_CONST(0.00775945), FRAC_CONST(0.00778198), FRAC_CONST(0.00787211), FRAC_CONST(0.00823245), FRAC_CONST(0.00967118), FRAC_CONST(0.0153846), FRAC_CONST(0.037594), FRAC_CONST(0.117241), FRAC_CONST(0.336788), FRAC_CONST(0.667532), FRAC_CONST(0.888985), FRAC_CONST(0.969704) },

200 { 
FRAC_CONST
(0.0153883), FRAC_CONST(0.0153994), FRAC_CONST(0.0154438), FRAC_CONST(0.0156212), FRAC_CONST(0.0163305), FRAC_CONST(0.0191571), FRAC_CONST(0.030303), FRAC_CONST(0.0724638), FRAC_CONST(0.209877), FRAC_CONST(0.503876), FRAC_CONST(0.800623), FRAC_CONST(0.94123), FRAC_CONST(0.984619) },

201 { 
FRAC_CONST
(0.0303102), FRAC_CONST(0.0303317), FRAC_CONST(0.0304178), FRAC_CONST(0.0307619), FRAC_CONST(0.0321361), FRAC_CONST(0.037594), FRAC_CONST(0.0588235), FRAC_CONST(0.135135), FRAC_CONST(0.346939), FRAC_CONST(0.670103), FRAC_CONST(0.889273), FRAC_CONST(0.969726), FRAC_CONST(0.99225) },

202 { 
FRAC_CONST
(0.058837), FRAC_CONST(0.0588776), FRAC_CONST(0.0590397), FRAC_CONST(0.0596878), FRAC_CONST(0.0622711), FRAC_CONST(0.0724638), FRAC_CONST(0.111111), FRAC_CONST(0.238095), FRAC_CONST(0.515152), FRAC_CONST(0.802469), FRAC_CONST(0.941392), FRAC_CONST(0.98463), FRAC_CONST(0.99611) },

203 { 
FRAC_CONST
(0.111135), FRAC_CONST(0.111208), FRAC_CONST(0.111497), FRAC_CONST(0.112652), FRAC_CONST(0.117241), FRAC_CONST(0.135135), FRAC_CONST(0.2), FRAC_CONST(0.384615), FRAC_CONST(0.68), FRAC_CONST(0.890411), FRAC_CONST(0.969811), FRAC_CONST(0.992256), FRAC_CONST(0.998051) },

204 { 
FRAC_CONST
(0.200039), FRAC_CONST(0.200156), FRAC_CONST(0.200625), FRAC_CONST(0.202492), FRAC_CONST(0.209877), FRAC_CONST(0.238095), FRAC_CONST(0.333333), FRAC_CONST(0.555556), FRAC_CONST(0.809524), FRAC_CONST(0.942029), FRAC_CONST(0.984674), FRAC_CONST(0.996113), FRAC_CONST(0.999025) },

205 { 
FRAC_CONST
(0.333388), FRAC_CONST(0.33355), FRAC_CONST(0.3342), FRAC_CONST(0.336788), FRAC_CONST(0.346939), FRAC_CONST(0.384615), FRAC_CONST(0.5), FRAC_CONST(0.714286), FRAC_CONST(0.894737), FRAC_CONST(0.970149), FRAC_CONST(0.992278), FRAC_CONST(0.998053), FRAC_CONST(0.999512) },

206 { 
FRAC_CONST
(0.500061), FRAC_CONST(0.500244), FRAC_CONST(0.500975), FRAC_CONST(0.503876), FRAC_CONST(0.515152), FRAC_CONST(0.555556), FRAC_CONST(0.666667), FRAC_CONST(0.833333), FRAC_CONST(0.944444), FRAC_CONST(0.984848), FRAC_CONST(0.996124), FRAC_CONST(0.999025), FRAC_CONST(0.999756) },

207 { 
FRAC_CONST
(0.666721), FRAC_CONST(0.666884), FRAC_CONST(0.667532), FRAC_CONST(0.670103), FRAC_CONST(0.68), FRAC_CONST(0.714286), FRAC_CONST(0.8), FRAC_CONST(0.909091), FRAC_CONST(0.971429), FRAC_CONST(0.992366), FRAC_CONST(0.998058), FRAC_CONST(0.999512), FRAC_CONST(0.999878) },

208 { 
FRAC_CONST
(0.800039), FRAC_CONST(0.800156), FRAC_CONST(0.800623), FRAC_CONST(0.802469), FRAC_CONST(0.809524), FRAC_CONST(0.833333), FRAC_CONST(0.888889), FRAC_CONST(0.952381), FRAC_CONST(0.985507), FRAC_CONST(0.996169), FRAC_CONST(0.999028), FRAC_CONST(0.999756), FRAC_CONST(0.999939) },

209 { 
FRAC_CONST
(0.888913), FRAC_CONST(0.888985), FRAC_CONST(0.889273), FRAC_CONST(0.890411), FRAC_CONST(0.894737), FRAC_CONST(0.909091), FRAC_CONST(0.941176), FRAC_CONST(0.97561), FRAC_CONST(0.992701), FRAC_CONST(0.998081), FRAC_CONST(0.999514), FRAC_CONST(0.999878), FRAC_CONST(0.999969) },

210 { 
FRAC_CONST
(0.94119), FRAC_CONST(0.94123), FRAC_CONST(0.941392), FRAC_CONST(0.942029), FRAC_CONST(0.944444), FRAC_CONST(0.952381), FRAC_CONST(0.969697), FRAC_CONST(0.987654), FRAC_CONST(0.996337), FRAC_CONST(0.999039), FRAC_CONST(0.999757), FRAC_CONST(0.999939), FRAC_CONST(0.999985) },

211 { 
FRAC_CONST
(0.969704), FRAC_CONST(0.969726), FRAC_CONST(0.969811), FRAC_CONST(0.970149), FRAC_CONST(0.971429), FRAC_CONST(0.97561), FRAC_CONST(0.984615), FRAC_CONST(0.993789), FRAC_CONST(0.998165), FRAC_CONST(0.999519), FRAC_CONST(0.999878), FRAC_CONST(0.99997), FRAC_CONST(0.999992) },

212 { 
FRAC_CONST
(0.984619), FRAC_CONST(0.98463), FRAC_CONST(0.984674), FRAC_CONST(0.984848), FRAC_CONST(0.985507), FRAC_CONST(0.987654), FRAC_CONST(0.992248), FRAC_CONST(0.996885), FRAC_CONST(0.999082), FRAC_CONST(0.99976), FRAC_CONST(0.999939), FRAC_CONST(0.999985), FRAC_CONST(0.999996) },

213 { 
FRAC_CONST
(0.99225), FRAC_CONST(0.992256), FRAC_CONST(0.992278), FRAC_CONST(0.992366), FRAC_CONST(0.992701), FRAC_CONST(0.993789), FRAC_CONST(0.996109), FRAC_CONST(0.99844), FRAC_CONST(0.999541), FRAC_CONST(0.99988), FRAC_CONST(0.99997), FRAC_CONST(0.999992), FRAC_CONST(0.999998) },

214 { 
FRAC_CONST
(0.99611), FRAC_CONST(0.996113), FRAC_CONST(0.996124), FRAC_CONST(0.996169), FRAC_CONST(0.996337), FRAC_CONST(0.996885), FRAC_CONST(0.998051), FRAC_CONST(0.999219), FRAC_CONST(0.99977), FRAC_CONST(0.99994), FRAC_CONST(0.999985), FRAC_CONST(0.999996), FRAC_CONST(0.999999) },

215 { 
FRAC_CONST
(0.998051), FRAC_CONST(0.998053), FRAC_CONST(0.998058), FRAC_CONST(0.998081), FRAC_CONST(0.998165), FRAC_CONST(0.99844), FRAC_CONST(0.999024), FRAC_CONST(0.99961), FRAC_CONST(0.999885), FRAC_CONST(0.99997), FRAC_CONST(0.999992), FRAC_CONST(0.999998), FRAC_CONST(1) },

216 { 
FRAC_CONST
(0.999025), FRAC_CONST(0.999025), FRAC_CONST(0.999028), FRAC_CONST(0.999039), FRAC_CONST(0.999082), FRAC_CONST(0.999219), FRAC_CONST(0.999512), FRAC_CONST(0.999805), FRAC_CONST(0.999943), FRAC_CONST(0.999985), FRAC_CONST(0.999996), FRAC_CONST(0.999999), FRAC_CONST(1) },

217 { 
FRAC_CONST
(0.999512), FRAC_CONST(0.999512), FRAC_CONST(0.999514), FRAC_CONST(0.999519), FRAC_CONST(0.999541), FRAC_CONST(0.99961), FRAC_CONST(0.999756), FRAC_CONST(0.999902), FRAC_CONST(0.999971), FRAC_CONST(0.999992), FRAC_CONST(0.999998), FRAC_CONST(1), FRAC_CONST(1) },

218 { 
FRAC_CONST
(0.999756), FRAC_CONST(0.999756), FRAC_CONST(0.999757), FRAC_CONST(0.99976), FRAC_CONST(0.99977), FRAC_CONST(0.999805), FRAC_CONST(0.999878), FRAC_CONST(0.999951), FRAC_CONST(0.999986), FRAC_CONST(0.999996), FRAC_CONST(0.999999), FRAC_CONST(1), FRAC_CONST(1) },

219 { 
FRAC_CONST
(0.999878), FRAC_CONST(0.999878), FRAC_CONST(0.999878), FRAC_CONST(0.99988), FRAC_CONST(0.999885), FRAC_CONST(0.999902), FRAC_CONST(0.999939), FRAC_CONST(0.999976), FRAC_CONST(0.999993), FRAC_CONST(0.999998), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1) },

220 { 
FRAC_CONST
(0.999939), FRAC_CONST(0.999939), FRAC_CONST(0.999939), FRAC_CONST(0.99994), FRAC_CONST(0.999943), FRAC_CONST(0.999951), FRAC_CONST(0.999969), FRAC_CONST(0.999988), FRAC_CONST(0.999996), FRAC_CONST(0.999999), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1) },

221 { 
FRAC_CONST
(0.999969), FRAC_CONST(0.99997), FRAC_CONST(0.99997), FRAC_CONST(0.99997), FRAC_CONST(0.999971), FRAC_CONST(0.999976), FRAC_CONST(0.999985), FRAC_CONST(0.999994), FRAC_CONST(0.999998), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1) },

222 { 
FRAC_CONST
(0.999985), FRAC_CONST(0.999985), FRAC_CONST(0.999985), FRAC_CONST(0.999985), FRAC_CONST(0.999986), FRAC_CONST(0.999988), FRAC_CONST(0.999992), FRAC_CONST(0.999997), FRAC_CONST(0.999999), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1) },

223 { 
FRAC_CONST
(0.999992), FRAC_CONST(0.999992), FRAC_CONST(0.999992), FRAC_CONST(0.999992), FRAC_CONST(0.999993), FRAC_CONST(0.999994), FRAC_CONST(0.999996), FRAC_CONST(0.999998), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1) },

224 { 
FRAC_CONST
(0.999996), FRAC_CONST(0.999996), FRAC_CONST(0.999996), FRAC_CONST(0.999996), FRAC_CONST(0.999996), FRAC_CONST(0.999997), FRAC_CONST(0.999998), FRAC_CONST(0.999999), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1) },

225 { 
FRAC_CONST
(0.999998), FRAC_CONST(0.999998), FRAC_CONST(0.999998), FRAC_CONST(0.999998), FRAC_CONST(0.999998), FRAC_CONST(0.999998), FRAC_CONST(0.999999), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1) },

226 { 
FRAC_CONST
(0.999999), FRAC_CONST(0.999999), FRAC_CONST(0.999999), FRAC_CONST(0.999999), FRAC_CONST(0.999999), FRAC_CONST(0.999999), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1) },

227 { 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1) },

228 { 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1) },

229 { 
FRAC_CONST
(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1), FRAC_CONST(1) }

234 
ªÆ_t
 
	$ˇlc_Q_div
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
, uöt8_à
m
, uöt8_à
l
)

236 i‡(
sbr
->
bs_cou∂ög
)

239 i‡((
sbr
->
Q
[0][
m
][
l
] < 0 || sbr->Q[0][m][l] > 30) ||

240 (
sbr
->
Q
[1][
m
][
l
] < 0 || sbr->Q[1][m][l] > 24 ))

245 i‡(
ch
 == 0)

247  
Q_div_èb_À·
[
sbr
->
Q
[0][
m
][
l
]][sbr->Q[1][m][l] >> 1];

249  
Q_div_èb_right
[
sbr
->
Q
[0][
m
][
l
]][sbr->Q[1][m][l] >> 1];

254 i‡(
sbr
->
Q
[
ch
][
m
][
l
] < 0 || sbr->Q[ch][m][l] > 30)

258  
Q_div_èb
[
sbr
->
Q
[
ch
][
m
][
l
]];

261 
	}
}

264 c⁄° 
ªÆ_t
 
	gQ_div2_èb
[31] = {

265 
FRAC_CONST
(0.984615), FRAC_CONST(0.969697),

266 
FRAC_CONST
(0.941176), FRAC_CONST(0.888889),

267 
FRAC_CONST
(0.8), FRAC_CONST(0.666667),

268 
FRAC_CONST
(0.5), FRAC_CONST(0.333333),

269 
FRAC_CONST
(0.2), FRAC_CONST(0.111111),

270 
FRAC_CONST
(0.0588235), FRAC_CONST(0.030303),

271 
FRAC_CONST
(0.0153846), FRAC_CONST(0.00775194),

272 
FRAC_CONST
(0.00389105), FRAC_CONST(0.00194932),

273 
FRAC_CONST
(0.00097561), FRAC_CONST(0.000488043),

274 
FRAC_CONST
(0.000244081), FRAC_CONST(0.000122055),

275 
FRAC_CONST
(6.10314E-005), FRAC_CONST(3.05166E-005),

276 
FRAC_CONST
(1.52586E-005), FRAC_CONST(7.62934E-006),

277 
FRAC_CONST
(3.81468E-006), FRAC_CONST(1.90734E-006),

278 
FRAC_CONST
(9.53673E-007), FRAC_CONST(4.76837E-007),

279 
FRAC_CONST
(2.38419E-007), FRAC_CONST(1.19209E-007),

280 
FRAC_CONST
(5.96046E-008)

283 c⁄° 
ªÆ_t
 
	gQ_div2_èb_À·
[31][13] = {

284 { 
FRAC_CONST
(0.0302959), FRAC_CONST(0.111015), FRAC_CONST(0.332468), FRAC_CONST(0.663212), FRAC_CONST(0.882759), FRAC_CONST(0.962406), FRAC_CONST(0.984615), FRAC_CONST(0.990329), FRAC_CONST(0.991768), FRAC_CONST(0.992128), FRAC_CONST(0.992218), FRAC_CONST(0.992241), FRAC_CONST(0.992246) },

285 { 
FRAC_CONST
(0.0153809), FRAC_CONST(0.0587695), FRAC_CONST(0.199377), FRAC_CONST(0.496124), FRAC_CONST(0.790123), FRAC_CONST(0.927536), FRAC_CONST(0.969697), FRAC_CONST(0.980843), FRAC_CONST(0.98367), FRAC_CONST(0.984379), FRAC_CONST(0.984556), FRAC_CONST(0.984601), FRAC_CONST(0.984612) },

286 { 
FRAC_CONST
(0.00775006), FRAC_CONST(0.0302744), FRAC_CONST(0.110727), FRAC_CONST(0.329897), FRAC_CONST(0.653061), FRAC_CONST(0.864865), FRAC_CONST(0.941176), FRAC_CONST(0.962406), FRAC_CONST(0.967864), FRAC_CONST(0.969238), FRAC_CONST(0.969582), FRAC_CONST(0.969668), FRAC_CONST(0.96969) },

287 { 
FRAC_CONST
(0.0038901), FRAC_CONST(0.0153698), FRAC_CONST(0.0586081), FRAC_CONST(0.197531), FRAC_CONST(0.484848), FRAC_CONST(0.761905), FRAC_CONST(0.888889), FRAC_CONST(0.927536), FRAC_CONST(0.937729), FRAC_CONST(0.940312), FRAC_CONST(0.94096), FRAC_CONST(0.941122), FRAC_CONST(0.941163) },

288 { 
FRAC_CONST
(0.00194884), FRAC_CONST(0.00774443), FRAC_CONST(0.0301887), FRAC_CONST(0.109589), FRAC_CONST(0.32), FRAC_CONST(0.615385), FRAC_CONST(0.8), FRAC_CONST(0.864865), FRAC_CONST(0.882759), FRAC_CONST(0.887348), FRAC_CONST(0.888503), FRAC_CONST(0.888792), FRAC_CONST(0.888865) },

289 { 
FRAC_CONST
(0.000975372), FRAC_CONST(0.00388727), FRAC_CONST(0.0153257), FRAC_CONST(0.057971), FRAC_CONST(0.190476), FRAC_CONST(0.444444), FRAC_CONST(0.666667), FRAC_CONST(0.761905), FRAC_CONST(0.790123), FRAC_CONST(0.797508), FRAC_CONST(0.799375), FRAC_CONST(0.799844), FRAC_CONST(0.799961) },

290 { 
FRAC_CONST
(0.000487924), FRAC_CONST(0.00194742), FRAC_CONST(0.00772201), FRAC_CONST(0.0298507), FRAC_CONST(0.105263), FRAC_CONST(0.285714), FRAC_CONST(0.5), FRAC_CONST(0.615385), FRAC_CONST(0.653061), FRAC_CONST(0.663212), FRAC_CONST(0.6658), FRAC_CONST(0.66645), FRAC_CONST(0.666612) },

291 { 
FRAC_CONST
(0.000244021), FRAC_CONST(0.000974659), FRAC_CONST(0.00387597), FRAC_CONST(0.0151515), FRAC_CONST(0.0555556), FRAC_CONST(0.166667), FRAC_CONST(0.333333), FRAC_CONST(0.444444), FRAC_CONST(0.484848), FRAC_CONST(0.496124), FRAC_CONST(0.499025), FRAC_CONST(0.499756), FRAC_CONST(0.499939) },

292 { 
FRAC_CONST
(0.000122026), FRAC_CONST(0.000487567), FRAC_CONST(0.00194175), FRAC_CONST(0.00763359), FRAC_CONST(0.0285714), FRAC_CONST(0.0909091), FRAC_CONST(0.2), FRAC_CONST(0.285714), FRAC_CONST(0.32), FRAC_CONST(0.329897), FRAC_CONST(0.332468), FRAC_CONST(0.333116), FRAC_CONST(0.333279) },

293 { 
FRAC_CONST
(6.10165E-005), FRAC_CONST(0.000243843), FRAC_CONST(0.000971817), FRAC_CONST(0.00383142), FRAC_CONST(0.0144928), FRAC_CONST(0.047619), FRAC_CONST(0.111111), FRAC_CONST(0.166667), FRAC_CONST(0.190476), FRAC_CONST(0.197531), FRAC_CONST(0.199377), FRAC_CONST(0.199844), FRAC_CONST(0.199961) },

294 { 
FRAC_CONST
(3.05092E-005), FRAC_CONST(0.000121936), FRAC_CONST(0.000486145), FRAC_CONST(0.00191939), FRAC_CONST(0.00729927), FRAC_CONST(0.0243902), FRAC_CONST(0.0588235), FRAC_CONST(0.0909091), FRAC_CONST(0.105263), FRAC_CONST(0.109589), FRAC_CONST(0.110727), FRAC_CONST(0.111015), FRAC_CONST(0.111087) },

295 { 
FRAC_CONST
(1.52548E-005), FRAC_CONST(6.09719E-005), FRAC_CONST(0.000243132), FRAC_CONST(0.000960615), FRAC_CONST(0.003663), FRAC_CONST(0.0123457), FRAC_CONST(0.030303), FRAC_CONST(0.047619), FRAC_CONST(0.0555556), FRAC_CONST(0.057971), FRAC_CONST(0.0586081), FRAC_CONST(0.0587695), FRAC_CONST(0.05881) },

296 { 
FRAC_CONST
(7.62747E-006), FRAC_CONST(3.04869E-005), FRAC_CONST(0.000121581), FRAC_CONST(0.000480538), FRAC_CONST(0.00183486), FRAC_CONST(0.00621118), FRAC_CONST(0.0153846), FRAC_CONST(0.0243902), FRAC_CONST(0.0285714), FRAC_CONST(0.0298507), FRAC_CONST(0.0301887), FRAC_CONST(0.0302744), FRAC_CONST(0.0302959) },

297 { 
FRAC_CONST
(3.81375E-006), FRAC_CONST(1.52437E-005), FRAC_CONST(6.0794E-005), FRAC_CONST(0.000240327), FRAC_CONST(0.000918274), FRAC_CONST(0.00311526), FRAC_CONST(0.00775194), FRAC_CONST(0.0123457), FRAC_CONST(0.0144928), FRAC_CONST(0.0151515), FRAC_CONST(0.0153257), FRAC_CONST(0.0153698), FRAC_CONST(0.0153809) },

298 { 
FRAC_CONST
(1.90688E-006), FRAC_CONST(7.62189E-006), FRAC_CONST(3.03979E-005), FRAC_CONST(0.000120178), FRAC_CONST(0.000459348), FRAC_CONST(0.00156006), FRAC_CONST(0.00389105), FRAC_CONST(0.00621118), FRAC_CONST(0.00729927), FRAC_CONST(0.00763359), FRAC_CONST(0.00772201), FRAC_CONST(0.00774443), FRAC_CONST(0.00775006) },

299 { 
FRAC_CONST
(9.53441E-007), FRAC_CONST(3.81096E-006), FRAC_CONST(1.51992E-005), FRAC_CONST(6.00925E-005), FRAC_CONST(0.000229727), FRAC_CONST(0.00078064), FRAC_CONST(0.00194932), FRAC_CONST(0.00311526), FRAC_CONST(0.003663), FRAC_CONST(0.00383142), FRAC_CONST(0.00387597), FRAC_CONST(0.00388727), FRAC_CONST(0.0038901) },

300 { 
FRAC_CONST
(4.76721E-007), FRAC_CONST(1.90548E-006), FRAC_CONST(7.59965E-006), FRAC_CONST(3.00472E-005), FRAC_CONST(0.000114877), FRAC_CONST(0.000390472), FRAC_CONST(0.00097561), FRAC_CONST(0.00156006), FRAC_CONST(0.00183486), FRAC_CONST(0.00191939), FRAC_CONST(0.00194175), FRAC_CONST(0.00194742), FRAC_CONST(0.00194884) },

301 { 
FRAC_CONST
(2.3836E-007), FRAC_CONST(9.52743E-007), FRAC_CONST(3.79984E-006), FRAC_CONST(1.50238E-005), FRAC_CONST(5.74416E-005), FRAC_CONST(0.000195274), FRAC_CONST(0.000488043), FRAC_CONST(0.00078064), FRAC_CONST(0.000918274), FRAC_CONST(0.000960615), FRAC_CONST(0.000971817), FRAC_CONST(0.000974659), FRAC_CONST(0.000975372) },

302 { 
FRAC_CONST
(1.1918E-007), FRAC_CONST(4.76372E-007), FRAC_CONST(1.89992E-006), FRAC_CONST(7.51196E-006), FRAC_CONST(2.87216E-005), FRAC_CONST(9.76467E-005), FRAC_CONST(0.000244081), FRAC_CONST(0.000390472), FRAC_CONST(0.000459348), FRAC_CONST(0.000480538), FRAC_CONST(0.000486145), FRAC_CONST(0.000487567), FRAC_CONST(0.000487924) },

303 { 
FRAC_CONST
(5.95901E-008), FRAC_CONST(2.38186E-007), FRAC_CONST(9.49963E-007), FRAC_CONST(3.756E-006), FRAC_CONST(1.4361E-005), FRAC_CONST(4.88257E-005), FRAC_CONST(0.000122055), FRAC_CONST(0.000195274), FRAC_CONST(0.000229727), FRAC_CONST(0.000240327), FRAC_CONST(0.000243132), FRAC_CONST(0.000243843), FRAC_CONST(0.000244021) },

304 { 
FRAC_CONST
(2.9795E-008), FRAC_CONST(1.19093E-007), FRAC_CONST(4.74982E-007), FRAC_CONST(1.878E-006), FRAC_CONST(7.18056E-006), FRAC_CONST(2.44135E-005), FRAC_CONST(6.10314E-005), FRAC_CONST(9.76467E-005), FRAC_CONST(0.000114877), FRAC_CONST(0.000120178), FRAC_CONST(0.000121581), FRAC_CONST(0.000121936), FRAC_CONST(0.000122026) },

305 { 
FRAC_CONST
(1.48975E-008), FRAC_CONST(5.95465E-008), FRAC_CONST(2.37491E-007), FRAC_CONST(9.39002E-007), FRAC_CONST(3.59029E-006), FRAC_CONST(1.22069E-005), FRAC_CONST(3.05166E-005), FRAC_CONST(4.88257E-005), FRAC_CONST(5.74416E-005), FRAC_CONST(6.00925E-005), FRAC_CONST(6.0794E-005), FRAC_CONST(6.09719E-005), FRAC_CONST(6.10165E-005) },

306 { 
FRAC_CONST
(7.44876E-009), FRAC_CONST(2.97732E-008), FRAC_CONST(1.18745E-007), FRAC_CONST(4.69501E-007), FRAC_CONST(1.79515E-006), FRAC_CONST(6.10348E-006), FRAC_CONST(1.52586E-005), FRAC_CONST(2.44135E-005), FRAC_CONST(2.87216E-005), FRAC_CONST(3.00472E-005), FRAC_CONST(3.03979E-005), FRAC_CONST(3.04869E-005), FRAC_CONST(3.05092E-005) },

307 { 
FRAC_CONST
(3.72438E-009), FRAC_CONST(1.48866E-008), FRAC_CONST(5.93727E-008), FRAC_CONST(2.34751E-007), FRAC_CONST(8.97575E-007), FRAC_CONST(3.05175E-006), FRAC_CONST(7.62934E-006), FRAC_CONST(1.22069E-005), FRAC_CONST(1.4361E-005), FRAC_CONST(1.50238E-005), FRAC_CONST(1.51992E-005), FRAC_CONST(1.52437E-005), FRAC_CONST(1.52548E-005) },

308 { 
FRAC_CONST
(1.86219E-009), FRAC_CONST(7.44331E-009), FRAC_CONST(2.96864E-008), FRAC_CONST(1.17375E-007), FRAC_CONST(4.48788E-007), FRAC_CONST(1.52588E-006), FRAC_CONST(3.81468E-006), FRAC_CONST(6.10348E-006), FRAC_CONST(7.18056E-006), FRAC_CONST(7.51196E-006), FRAC_CONST(7.59965E-006), FRAC_CONST(7.62189E-006), FRAC_CONST(7.62747E-006) },

309 { 
FRAC_CONST
(9.31095E-010), FRAC_CONST(3.72166E-009), FRAC_CONST(1.48432E-008), FRAC_CONST(5.86876E-008), FRAC_CONST(2.24394E-007), FRAC_CONST(7.62939E-007), FRAC_CONST(1.90734E-006), FRAC_CONST(3.05175E-006), FRAC_CONST(3.59029E-006), FRAC_CONST(3.756E-006), FRAC_CONST(3.79984E-006), FRAC_CONST(3.81096E-006), FRAC_CONST(3.81375E-006) },

310 { 
FRAC_CONST
(4.65548E-010), FRAC_CONST(1.86083E-009), FRAC_CONST(7.42159E-009), FRAC_CONST(2.93438E-008), FRAC_CONST(1.12197E-007), FRAC_CONST(3.8147E-007), FRAC_CONST(9.53673E-007), FRAC_CONST(1.52588E-006), FRAC_CONST(1.79515E-006), FRAC_CONST(1.878E-006), FRAC_CONST(1.89992E-006), FRAC_CONST(1.90548E-006), FRAC_CONST(1.90688E-006) },

311 { 
FRAC_CONST
(2.32774E-010), FRAC_CONST(9.30414E-010), FRAC_CONST(3.71079E-009), FRAC_CONST(1.46719E-008), FRAC_CONST(5.60985E-008), FRAC_CONST(1.90735E-007), FRAC_CONST(4.76837E-007), FRAC_CONST(7.62939E-007), FRAC_CONST(8.97575E-007), FRAC_CONST(9.39002E-007), FRAC_CONST(9.49963E-007), FRAC_CONST(9.52743E-007), FRAC_CONST(9.53441E-007) },

312 { 
FRAC_CONST
(1.16387E-010), FRAC_CONST(4.65207E-010), FRAC_CONST(1.8554E-009), FRAC_CONST(7.33596E-009), FRAC_CONST(2.80492E-008), FRAC_CONST(9.53674E-008), FRAC_CONST(2.38419E-007), FRAC_CONST(3.8147E-007), FRAC_CONST(4.48788E-007), FRAC_CONST(4.69501E-007), FRAC_CONST(4.74982E-007), FRAC_CONST(4.76372E-007), FRAC_CONST(4.76721E-007) },

313 { 
FRAC_CONST
(5.81935E-011), FRAC_CONST(2.32603E-010), FRAC_CONST(9.27699E-010), FRAC_CONST(3.66798E-009), FRAC_CONST(1.40246E-008), FRAC_CONST(4.76837E-008), FRAC_CONST(1.19209E-007), FRAC_CONST(1.90735E-007), FRAC_CONST(2.24394E-007), FRAC_CONST(2.34751E-007), FRAC_CONST(2.37491E-007), FRAC_CONST(2.38186E-007), FRAC_CONST(2.3836E-007) },

314 { 
FRAC_CONST
(2.90967E-011), FRAC_CONST(1.16302E-010), FRAC_CONST(4.63849E-010), FRAC_CONST(1.83399E-009), FRAC_CONST(7.01231E-009), FRAC_CONST(2.38419E-008), FRAC_CONST(5.96046E-008), FRAC_CONST(9.53674E-008), FRAC_CONST(1.12197E-007), FRAC_CONST(1.17375E-007), FRAC_CONST(1.18745E-007), FRAC_CONST(1.19093E-007), FRAC_CONST(1.1918E-007) }

317 c⁄° 
ªÆ_t
 
	gQ_div2_èb_right
[31][13] = {

318 { 
FRAC_CONST
(0.992246), FRAC_CONST(0.992241), FRAC_CONST(0.992218), FRAC_CONST(0.992128), FRAC_CONST(0.991768), FRAC_CONST(0.990329), FRAC_CONST(0.984615), FRAC_CONST(0.962406), FRAC_CONST(0.882759), FRAC_CONST(0.663212), FRAC_CONST(0.332468), FRAC_CONST(0.111015), FRAC_CONST(0.0302959) },

319 { 
FRAC_CONST
(0.984612), FRAC_CONST(0.984601), FRAC_CONST(0.984556), FRAC_CONST(0.984379), FRAC_CONST(0.98367), FRAC_CONST(0.980843), FRAC_CONST(0.969697), FRAC_CONST(0.927536), FRAC_CONST(0.790123), FRAC_CONST(0.496124), FRAC_CONST(0.199377), FRAC_CONST(0.0587695), FRAC_CONST(0.0153809) },

320 { 
FRAC_CONST
(0.96969), FRAC_CONST(0.969668), FRAC_CONST(0.969582), FRAC_CONST(0.969238), FRAC_CONST(0.967864), FRAC_CONST(0.962406), FRAC_CONST(0.941176), FRAC_CONST(0.864865), FRAC_CONST(0.653061), FRAC_CONST(0.329897), FRAC_CONST(0.110727), FRAC_CONST(0.0302744), FRAC_CONST(0.00775006) },

321 { 
FRAC_CONST
(0.941163), FRAC_CONST(0.941122), FRAC_CONST(0.94096), FRAC_CONST(0.940312), FRAC_CONST(0.937729), FRAC_CONST(0.927536), FRAC_CONST(0.888889), FRAC_CONST(0.761905), FRAC_CONST(0.484848), FRAC_CONST(0.197531), FRAC_CONST(0.0586081), FRAC_CONST(0.0153698), FRAC_CONST(0.0038901) },

322 { 
FRAC_CONST
(0.888865), FRAC_CONST(0.888792), FRAC_CONST(0.888503), FRAC_CONST(0.887348), FRAC_CONST(0.882759), FRAC_CONST(0.864865), FRAC_CONST(0.8), FRAC_CONST(0.615385), FRAC_CONST(0.32), FRAC_CONST(0.109589), FRAC_CONST(0.0301887), FRAC_CONST(0.00774443), FRAC_CONST(0.00194884) },

323 { 
FRAC_CONST
(0.799961), FRAC_CONST(0.799844), FRAC_CONST(0.799375), FRAC_CONST(0.797508), FRAC_CONST(0.790123), FRAC_CONST(0.761905), FRAC_CONST(0.666667), FRAC_CONST(0.444444), FRAC_CONST(0.190476), FRAC_CONST(0.057971), FRAC_CONST(0.0153257), FRAC_CONST(0.00388727), FRAC_CONST(0.000975372) },

324 { 
FRAC_CONST
(0.666612), FRAC_CONST(0.66645), FRAC_CONST(0.6658), FRAC_CONST(0.663212), FRAC_CONST(0.653061), FRAC_CONST(0.615385), FRAC_CONST(0.5), FRAC_CONST(0.285714), FRAC_CONST(0.105263), FRAC_CONST(0.0298507), FRAC_CONST(0.00772201), FRAC_CONST(0.00194742), FRAC_CONST(0.000487924) },

325 { 
FRAC_CONST
(0.499939), FRAC_CONST(0.499756), FRAC_CONST(0.499025), FRAC_CONST(0.496124), FRAC_CONST(0.484848), FRAC_CONST(0.444444), FRAC_CONST(0.333333), FRAC_CONST(0.166667), FRAC_CONST(0.0555556), FRAC_CONST(0.0151515), FRAC_CONST(0.00387597), FRAC_CONST(0.000974659), FRAC_CONST(0.000244021) },

326 { 
FRAC_CONST
(0.333279), FRAC_CONST(0.333116), FRAC_CONST(0.332468), FRAC_CONST(0.329897), FRAC_CONST(0.32), FRAC_CONST(0.285714), FRAC_CONST(0.2), FRAC_CONST(0.0909091), FRAC_CONST(0.0285714), FRAC_CONST(0.00763359), FRAC_CONST(0.00194175), FRAC_CONST(0.000487567), FRAC_CONST(0.000122026) },

327 { 
FRAC_CONST
(0.199961), FRAC_CONST(0.199844), FRAC_CONST(0.199377), FRAC_CONST(0.197531), FRAC_CONST(0.190476), FRAC_CONST(0.166667), FRAC_CONST(0.111111), FRAC_CONST(0.047619), FRAC_CONST(0.0144928), FRAC_CONST(0.00383142), FRAC_CONST(0.000971817), FRAC_CONST(0.000243843), FRAC_CONST(6.10165E-005) },

328 { 
FRAC_CONST
(0.111087), FRAC_CONST(0.111015), FRAC_CONST(0.110727), FRAC_CONST(0.109589), FRAC_CONST(0.105263), FRAC_CONST(0.0909091), FRAC_CONST(0.0588235), FRAC_CONST(0.0243902), FRAC_CONST(0.00729927), FRAC_CONST(0.00191939), FRAC_CONST(0.000486145), FRAC_CONST(0.000121936), FRAC_CONST(3.05092E-005) },

329 { 
FRAC_CONST
(0.05881), FRAC_CONST(0.0587695), FRAC_CONST(0.0586081), FRAC_CONST(0.057971), FRAC_CONST(0.0555556), FRAC_CONST(0.047619), FRAC_CONST(0.030303), FRAC_CONST(0.0123457), FRAC_CONST(0.003663), FRAC_CONST(0.000960615), FRAC_CONST(0.000243132), FRAC_CONST(6.09719E-005), FRAC_CONST(1.52548E-005) },

330 { 
FRAC_CONST
(0.0302959), FRAC_CONST(0.0302744), FRAC_CONST(0.0301887), FRAC_CONST(0.0298507), FRAC_CONST(0.0285714), FRAC_CONST(0.0243902), FRAC_CONST(0.0153846), FRAC_CONST(0.00621118), FRAC_CONST(0.00183486), FRAC_CONST(0.000480538), FRAC_CONST(0.000121581), FRAC_CONST(3.04869E-005), FRAC_CONST(7.62747E-006) },

331 { 
FRAC_CONST
(0.0153809), FRAC_CONST(0.0153698), FRAC_CONST(0.0153257), FRAC_CONST(0.0151515), FRAC_CONST(0.0144928), FRAC_CONST(0.0123457), FRAC_CONST(0.00775194), FRAC_CONST(0.00311526), FRAC_CONST(0.000918274), FRAC_CONST(0.000240327), FRAC_CONST(6.0794E-005), FRAC_CONST(1.52437E-005), FRAC_CONST(3.81375E-006) },

332 { 
FRAC_CONST
(0.00775006), FRAC_CONST(0.00774443), FRAC_CONST(0.00772201), FRAC_CONST(0.00763359), FRAC_CONST(0.00729927), FRAC_CONST(0.00621118), FRAC_CONST(0.00389105), FRAC_CONST(0.00156006), FRAC_CONST(0.000459348), FRAC_CONST(0.000120178), FRAC_CONST(3.03979E-005), FRAC_CONST(7.62189E-006), FRAC_CONST(1.90688E-006) },

333 { 
FRAC_CONST
(0.0038901), FRAC_CONST(0.00388727), FRAC_CONST(0.00387597), FRAC_CONST(0.00383142), FRAC_CONST(0.003663), FRAC_CONST(0.00311526), FRAC_CONST(0.00194932), FRAC_CONST(0.00078064), FRAC_CONST(0.000229727), FRAC_CONST(6.00925E-005), FRAC_CONST(1.51992E-005), FRAC_CONST(3.81096E-006), FRAC_CONST(9.53441E-007) },

334 { 
FRAC_CONST
(0.00194884), FRAC_CONST(0.00194742), FRAC_CONST(0.00194175), FRAC_CONST(0.00191939), FRAC_CONST(0.00183486), FRAC_CONST(0.00156006), FRAC_CONST(0.00097561), FRAC_CONST(0.000390472), FRAC_CONST(0.000114877), FRAC_CONST(3.00472E-005), FRAC_CONST(7.59965E-006), FRAC_CONST(1.90548E-006), FRAC_CONST(4.76721E-007) },

335 { 
FRAC_CONST
(0.000975372), FRAC_CONST(0.000974659), FRAC_CONST(0.000971817), FRAC_CONST(0.000960615), FRAC_CONST(0.000918274), FRAC_CONST(0.00078064), FRAC_CONST(0.000488043), FRAC_CONST(0.000195274), FRAC_CONST(5.74416E-005), FRAC_CONST(1.50238E-005), FRAC_CONST(3.79984E-006), FRAC_CONST(9.52743E-007), FRAC_CONST(2.3836E-007) },

336 { 
FRAC_CONST
(0.000487924), FRAC_CONST(0.000487567), FRAC_CONST(0.000486145), FRAC_CONST(0.000480538), FRAC_CONST(0.000459348), FRAC_CONST(0.000390472), FRAC_CONST(0.000244081), FRAC_CONST(9.76467E-005), FRAC_CONST(2.87216E-005), FRAC_CONST(7.51196E-006), FRAC_CONST(1.89992E-006), FRAC_CONST(4.76372E-007), FRAC_CONST(1.1918E-007) },

337 { 
FRAC_CONST
(0.000244021), FRAC_CONST(0.000243843), FRAC_CONST(0.000243132), FRAC_CONST(0.000240327), FRAC_CONST(0.000229727), FRAC_CONST(0.000195274), FRAC_CONST(0.000122055), FRAC_CONST(4.88257E-005), FRAC_CONST(1.4361E-005), FRAC_CONST(3.756E-006), FRAC_CONST(9.49963E-007), FRAC_CONST(2.38186E-007), FRAC_CONST(5.95901E-008) },

338 { 
FRAC_CONST
(0.000122026), FRAC_CONST(0.000121936), FRAC_CONST(0.000121581), FRAC_CONST(0.000120178), FRAC_CONST(0.000114877), FRAC_CONST(9.76467E-005), FRAC_CONST(6.10314E-005), FRAC_CONST(2.44135E-005), FRAC_CONST(7.18056E-006), FRAC_CONST(1.878E-006), FRAC_CONST(4.74982E-007), FRAC_CONST(1.19093E-007), FRAC_CONST(2.9795E-008) },

339 { 
FRAC_CONST
(6.10165E-005), FRAC_CONST(6.09719E-005), FRAC_CONST(6.0794E-005), FRAC_CONST(6.00925E-005), FRAC_CONST(5.74416E-005), FRAC_CONST(4.88257E-005), FRAC_CONST(3.05166E-005), FRAC_CONST(1.22069E-005), FRAC_CONST(3.59029E-006), FRAC_CONST(9.39002E-007), FRAC_CONST(2.37491E-007), FRAC_CONST(5.95465E-008), FRAC_CONST(1.48975E-008) },

340 { 
FRAC_CONST
(3.05092E-005), FRAC_CONST(3.04869E-005), FRAC_CONST(3.03979E-005), FRAC_CONST(3.00472E-005), FRAC_CONST(2.87216E-005), FRAC_CONST(2.44135E-005), FRAC_CONST(1.52586E-005), FRAC_CONST(6.10348E-006), FRAC_CONST(1.79515E-006), FRAC_CONST(4.69501E-007), FRAC_CONST(1.18745E-007), FRAC_CONST(2.97732E-008), FRAC_CONST(7.44876E-009) },

341 { 
FRAC_CONST
(1.52548E-005), FRAC_CONST(1.52437E-005), FRAC_CONST(1.51992E-005), FRAC_CONST(1.50238E-005), FRAC_CONST(1.4361E-005), FRAC_CONST(1.22069E-005), FRAC_CONST(7.62934E-006), FRAC_CONST(3.05175E-006), FRAC_CONST(8.97575E-007), FRAC_CONST(2.34751E-007), FRAC_CONST(5.93727E-008), FRAC_CONST(1.48866E-008), FRAC_CONST(3.72438E-009) },

342 { 
FRAC_CONST
(7.62747E-006), FRAC_CONST(7.62189E-006), FRAC_CONST(7.59965E-006), FRAC_CONST(7.51196E-006), FRAC_CONST(7.18056E-006), FRAC_CONST(6.10348E-006), FRAC_CONST(3.81468E-006), FRAC_CONST(1.52588E-006), FRAC_CONST(4.48788E-007), FRAC_CONST(1.17375E-007), FRAC_CONST(2.96864E-008), FRAC_CONST(7.44331E-009), FRAC_CONST(1.86219E-009) },

343 { 
FRAC_CONST
(3.81375E-006), FRAC_CONST(3.81096E-006), FRAC_CONST(3.79984E-006), FRAC_CONST(3.756E-006), FRAC_CONST(3.59029E-006), FRAC_CONST(3.05175E-006), FRAC_CONST(1.90734E-006), FRAC_CONST(7.62939E-007), FRAC_CONST(2.24394E-007), FRAC_CONST(5.86876E-008), FRAC_CONST(1.48432E-008), FRAC_CONST(3.72166E-009), FRAC_CONST(9.31095E-010) },

344 { 
FRAC_CONST
(1.90688E-006), FRAC_CONST(1.90548E-006), FRAC_CONST(1.89992E-006), FRAC_CONST(1.878E-006), FRAC_CONST(1.79515E-006), FRAC_CONST(1.52588E-006), FRAC_CONST(9.53673E-007), FRAC_CONST(3.8147E-007), FRAC_CONST(1.12197E-007), FRAC_CONST(2.93438E-008), FRAC_CONST(7.42159E-009), FRAC_CONST(1.86083E-009), FRAC_CONST(4.65548E-010) },

345 { 
FRAC_CONST
(9.53441E-007), FRAC_CONST(9.52743E-007), FRAC_CONST(9.49963E-007), FRAC_CONST(9.39002E-007), FRAC_CONST(8.97575E-007), FRAC_CONST(7.62939E-007), FRAC_CONST(4.76837E-007), FRAC_CONST(1.90735E-007), FRAC_CONST(5.60985E-008), FRAC_CONST(1.46719E-008), FRAC_CONST(3.71079E-009), FRAC_CONST(9.30414E-010), FRAC_CONST(2.32774E-010) },

346 { 
FRAC_CONST
(4.76721E-007), FRAC_CONST(4.76372E-007), FRAC_CONST(4.74982E-007), FRAC_CONST(4.69501E-007), FRAC_CONST(4.48788E-007), FRAC_CONST(3.8147E-007), FRAC_CONST(2.38419E-007), FRAC_CONST(9.53674E-008), FRAC_CONST(2.80492E-008), FRAC_CONST(7.33596E-009), FRAC_CONST(1.8554E-009), FRAC_CONST(4.65207E-010), FRAC_CONST(1.16387E-010) },

347 { 
FRAC_CONST
(2.3836E-007), FRAC_CONST(2.38186E-007), FRAC_CONST(2.37491E-007), FRAC_CONST(2.34751E-007), FRAC_CONST(2.24394E-007), FRAC_CONST(1.90735E-007), FRAC_CONST(1.19209E-007), FRAC_CONST(4.76837E-008), FRAC_CONST(1.40246E-008), FRAC_CONST(3.66798E-009), FRAC_CONST(9.27699E-010), FRAC_CONST(2.32603E-010), FRAC_CONST(5.81935E-011) },

348 { 
FRAC_CONST
(1.1918E-007), FRAC_CONST(1.19093E-007), FRAC_CONST(1.18745E-007), FRAC_CONST(1.17375E-007), FRAC_CONST(1.12197E-007), FRAC_CONST(9.53674E-008), FRAC_CONST(5.96046E-008), FRAC_CONST(2.38419E-008), FRAC_CONST(7.01231E-009), FRAC_CONST(1.83399E-009), FRAC_CONST(4.63849E-010), FRAC_CONST(1.16302E-010), FRAC_CONST(2.90967E-011) }

353 
ªÆ_t
 
	$ˇlc_Q_div2
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
, uöt8_à
m
, uöt8_à
l
)

355 i‡(
sbr
->
bs_cou∂ög
)

357 i‡((
sbr
->
Q
[0][
m
][
l
] < 0 || sbr->Q[0][m][l] > 30) ||

358 (
sbr
->
Q
[1][
m
][
l
] < 0 || sbr->Q[1][m][l] > 24 ))

363 i‡(
ch
 == 0)

365  
Q_div2_èb_À·
[
sbr
->
Q
[0][
m
][
l
]][sbr->Q[1][m][l] >> 1];

367  
Q_div2_èb_right
[
sbr
->
Q
[0][
m
][
l
]][sbr->Q[1][m][l] >> 1];

372 i‡(
sbr
->
Q
[
ch
][
m
][
l
] < 0 || sbr->Q[ch][m][l] > 30)

376  
Q_div2_èb
[
sbr
->
Q
[
ch
][
m
][
l
]];

379 
	}
}

381 c⁄° 
ªÆ_t
 
	gE_deq_èb
[64] = {

392 
	$ívñ›e_noi£_dequ™tißti⁄
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
)

394 i‡(
sbr
->
bs_cou∂ög
 == 0)

396 
öt16_t
 
exp
;

397 
uöt8_t
 
l
, 
k
;

398 
uöt8_t
 
amp
 = (
sbr
->
amp_ªs
[
ch
]) ? 0 : 1;

400 
l
 = 0;Ü < 
sbr
->
L_E
[
ch
];Ü++)

402 
k
 = 0; k < 
sbr
->
n
[sbr->
f
[
ch
][
l
]]; k++)

408 
exp
 = (
sbr
->
E
[
ch
][
k
][
l
] >> 
amp
);

410 i‡((
exp
 < 0) || (exp >= 64))

412 
sbr
->
E_‹ig
[
ch
][
k
][
l
] = 0;

414 
sbr
->
E_‹ig
[
ch
][
k
][
l
] = 
E_deq_èb
[
exp
];

417 i‡(
amp
 && (
sbr
->
E
[
ch
][
k
][
l
] & 1))

419 
sbr
->
E_‹ig
[
ch
][
k
][
l
] = 
	`MUL_C
(sbr->E_‹ig[ch][k][l], 
	`COEF_CONST
(1.414213562));

425 
l
 = 0;Ü < 
sbr
->
L_Q
[
ch
];Ü++)

427 
k
 = 0; k < 
sbr
->
N_Q
; k++)

429 
sbr
->
Q_div
[
ch
][
k
][
l
] = 
	`ˇlc_Q_div
(sbr, ch, k,Ü);

430 
sbr
->
Q_div2
[
ch
][
k
][
l
] = 
	`ˇlc_Q_div2
(sbr, ch, k,Ü);

434 
	}
}

436 c⁄° 
ªÆ_t
 
	gE_∑n_èb
[25] = {

437 
FRAC_CONST
(0.000244081), FRAC_CONST(0.000488043),

438 
FRAC_CONST
(0.00097561), FRAC_CONST(0.00194932),

439 
FRAC_CONST
(0.00389105), FRAC_CONST(0.00775194),

440 
FRAC_CONST
(0.0153846), FRAC_CONST(0.030303),

441 
FRAC_CONST
(0.0588235), FRAC_CONST(0.111111),

442 
FRAC_CONST
(0.2), FRAC_CONST(0.333333),

443 
FRAC_CONST
(0.5), FRAC_CONST(0.666667),

444 
FRAC_CONST
(0.8), FRAC_CONST(0.888889),

445 
FRAC_CONST
(0.941176), FRAC_CONST(0.969697),

446 
FRAC_CONST
(0.984615), FRAC_CONST(0.992248),

447 
FRAC_CONST
(0.996109), FRAC_CONST(0.998051),

448 
FRAC_CONST
(0.999024), FRAC_CONST(0.999512),

449 
FRAC_CONST
(0.999756)

452 
	$unm≠_ívñ›e_noi£
(
sbr_öfo
 *
sbr
)

454 
ªÆ_t
 
tmp
;

455 
öt16_t
 
exp0
, 
exp1
;

456 
uöt8_t
 
l
, 
k
;

457 
uöt8_t
 
amp0
 = (
sbr
->
amp_ªs
[0]) ? 0 : 1;

458 
uöt8_t
 
amp1
 = (
sbr
->
amp_ªs
[1]) ? 0 : 1;

460 
l
 = 0;Ü < 
sbr
->
L_E
[0];Ü++)

462 
k
 = 0; k < 
sbr
->
n
[sbr->
f
[0][
l
]]; k++)

465 
exp0
 = (
sbr
->
E
[0][
k
][
l
] >> 
amp0
) + 1;

472 
exp1
 = (
sbr
->
E
[1][
k
][
l
] >> 
amp1
);

474 i‡((
exp0
 < 0) || (exp0 >= 64) ||

475 (
exp1
 < 0) || (exp1 > 24))

477 
sbr
->
E_‹ig
[1][
k
][
l
] = 0;

478 
sbr
->
E_‹ig
[0][
k
][
l
] = 0;

480 
tmp
 = 
E_deq_èb
[
exp0
];

481 i‡(
amp0
 && (
sbr
->
E
[0][
k
][
l
] & 1))

483 
tmp
 = 
	`MUL_C
—mp, 
	`COEF_CONST
(1.414213562));

487 
sbr
->
E_‹ig
[0][
k
][
l
] = 
	`MUL_F
(
tmp
, 
E_∑n_èb
[
exp1
]);

488 
sbr
->
E_‹ig
[1][
k
][
l
] = 
	`MUL_F
(
tmp
, 
E_∑n_èb
[24 - 
exp1
]);

493 
l
 = 0;Ü < 
sbr
->
L_Q
[0];Ü++)

495 
k
 = 0; k < 
sbr
->
N_Q
; k++)

497 
sbr
->
Q_div
[0][
k
][
l
] = 
	`ˇlc_Q_div
(sbr, 0, k,Ü);

498 
sbr
->
Q_div
[1][
k
][
l
] = 
	`ˇlc_Q_div
(sbr, 1, k,Ü);

499 
sbr
->
Q_div2
[0][
k
][
l
] = 
	`ˇlc_Q_div2
(sbr, 0, k,Ü);

500 
sbr
->
Q_div2
[1][
k
][
l
] = 
	`ˇlc_Q_div2
(sbr, 1, k,Ü);

503 
	}
}

	@sbr_e_nf.h

28 #i‚de‡
__SBR_E_NF_H__


29 
	#__SBR_E_NF_H__


	)

31 #ifde‡
__˝lu•lus


36 
exåa˘_ívñ›e_d©a
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
);

37 
exåa˘_noi£_Êo‹_d©a
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
);

38 #i‚de‡
FIXED_POINT


39 
ívñ›e_noi£_dequ™tißti⁄
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
);

40 
unm≠_ívñ›e_noi£
(
sbr_öfo
 *
sbr
);

43 #ifde‡
__˝lu•lus


	@sbr_fbt.c

30 
	~"comm⁄.h
"

31 
	~"°ru˘s.h
"

33 #ifde‡
SBR_DEC


35 
	~<°dlib.h
>

37 
	~"sbr_sy¡ax.h
"

38 
	~"sbr_fbt.h
"

41 
öt32_t
 
föd_b™ds
(
uöt8_t
 
w¨p
, uöt8_à
b™ds
, uöt8_à
a0
, uöt8_à
a1
);

46 
uöt8_t
 
	$qmf_°¨t_ch™√l
(
uöt8_t
 
bs_°¨t_‰eq
, uöt8_à
bs_ßm∂î©e_mode
,

47 
uöt32_t
 
ßm∂e_øã
)

49 c⁄° 
uöt8_t
 
°¨tMöTabÀ
[12] = { 7, 7, 10, 11, 12, 16, 16,

51 c⁄° 
uöt8_t
 
off£tIndexTabÀ
[12] = { 5, 5, 4, 4, 4, 3, 2, 1, 0,

53 c⁄° 
öt8_t
 
off£t
[7][16] = {

62 
uöt8_t
 
°¨tMö
 = 
°¨tMöTabÀ
[
	`gë_§_ödex
(
ßm∂e_øã
)];

63 
uöt8_t
 
off£tIndex
 = 
off£tIndexTabÀ
[
	`gë_§_ödex
(
ßm∂e_øã
)];

66 i‡(
ßm∂e_øã
 >= 64000)

68 
°¨tMö
 = (
uöt8_t
)((5000.*128.)/()
ßm∂e_øã
 + 0.5);

69 } i‡(
ßm∂e_øã
 < 32000) {

70 
°¨tMö
 = (
uöt8_t
)((3000.*128.)/()
ßm∂e_øã
 + 0.5);

72 
°¨tMö
 = (
uöt8_t
)((4000.*128.)/()
ßm∂e_øã
 + 0.5);

76 i‡(
bs_ßm∂î©e_mode
)

78  
°¨tMö
 + 
off£t
[
off£tIndex
][
bs_°¨t_‰eq
];

81 
ßm∂e_øã
)

84  
°¨tMö
 + 
off£t
[0][
bs_°¨t_‰eq
];

86  
°¨tMö
 + 
off£t
[1][
bs_°¨t_‰eq
];

88  
°¨tMö
 + 
off£t
[2][
bs_°¨t_‰eq
];

90  
°¨tMö
 + 
off£t
[3][
bs_°¨t_‰eq
];

92 i‡(
ßm∂e_øã
 > 64000)

94  
°¨tMö
 + 
off£t
[5][
bs_°¨t_‰eq
];

96  
°¨tMö
 + 
off£t
[4][
bs_°¨t_‰eq
];

101  
°¨tMö
 + 
off£t
[6][
bs_°¨t_‰eq
];

103 
	}
}

105 
	$l⁄gcmp
(c⁄° *
a
, c⁄° *
b
)

107  (()(*(
öt32_t
*)
a
 - *(öt32_t*)
b
));

108 
	}
}

112 
uöt8_t
 
	$qmf_°›_ch™√l
(
uöt8_t
 
bs_°›_‰eq
, 
uöt32_t
 
ßm∂e_øã
,

113 
uöt8_t
 
k0
)

115 i‡(
bs_°›_‰eq
 == 15)

117  
	`mö
(64, 
k0
 * 3);

118 } i‡(
bs_°›_‰eq
 == 14) {

119  
	`mö
(64, 
k0
 * 2);

121 c⁄° 
uöt8_t
 
°›MöTabÀ
[12] = { 13, 15, 20, 21, 23,

123 c⁄° 
öt8_t
 
off£t
[12][14] = {

138 
uöt8_t
 
i
;

139 
öt32_t
 
°›Dk
[13], 
°›Dk_t
[14], 
k2
;

141 
uöt8_t
 
°›Mö
 = 
°›MöTabÀ
[
	`gë_§_ödex
(
ßm∂e_øã
)];

144 i‡(
ßm∂e_øã
 >= 64000)

146 
°›Mö
 = (
uöt8_t
)((10000.*128.)/()
ßm∂e_øã
 + 0.5);

147 } i‡(
ßm∂e_øã
 < 32000) {

148 
°›Mö
 = (
uöt8_t
)((6000.*128.)/()
ßm∂e_øã
 + 0.5);

150 
°›Mö
 = (
uöt8_t
)((8000.*128.)/()
ßm∂e_øã
 + 0.5);

156 
i
 = 0; i <= 13; i++)

158 
°›Dk_t
[
i
] = (
öt32_t
)(
°›Mö
*
	`pow
(64.0/stopMin, i/13.0) + 0.5);

160 
i
 = 0; i < 13; i++)

162 
°›Dk
[
i
] = 
°›Dk_t
[i+1] - stopDk_t[i];

166 
	`qs‹t
(
°›Dk
, 13, (°›Dk[0]), 
l⁄gcmp
);

168 
k2
 = 
°›Mö
;

169 
i
 = 0; i < 
bs_°›_‰eq
; i++)

171 
k2
 +
°›Dk
[
i
];

173  
	`mö
(64, 
k2
);

176  
	`mö
(64, 
°›Mö
 + 
off£t
[
	`gë_§_ödex
(
ßm∂e_øã
)][mö(
bs_°›_‰eq
, 13)]);

180 
	}
}

187 
uöt8_t
 
	$ma°î_‰equícy_èbÀ_fs0
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
k0
, uöt8_à
k2
,

188 
uöt8_t
 
bs_Æãr_sˇÀ
)

190 
öt8_t
 
ö¸
;

191 
uöt8_t
 
k
;

192 
uöt8_t
 
dk
;

193 
uöt32_t
 
ƒB™ds
, 
k2Achõved
;

194 
öt32_t
 
k2Diff
, 
vDk
[64] = {0};

197 i‡(
k2
 <
k0
)

199 
sbr
->
N_ma°î
 = 0;

203 
dk
 = 
bs_Æãr_sˇÀ
 ? 2 : 1;

206 
ƒB™ds
 = 2 * (
öt32_t
)(()(
k2
-
k0
)/(
dk
*2) + (-1+dk)/2.0f);

208 i‡(
bs_Æãr_sˇÀ
)

210 
ƒB™ds
 = (((
k2
-
k0
+2)>>2)<<1);

212 
ƒB™ds
 = (((
k2
-
k0
)>>1)<<1);

215 
ƒB™ds
 = 
	`mö
(nrBands, 63);

216 i‡(
ƒB™ds
 <= 0)

219 
k2Achõved
 = 
k0
 + 
ƒB™ds
 * 
dk
;

220 
k2Diff
 = 
k2
 - 
k2Achõved
;

221 
k
 = 0; k < 
ƒB™ds
; k++)

222 
vDk
[
k
] = 
dk
;

224 i‡(
k2Diff
)

226 
ö¸
 = (
k2Diff
 > 0) ? -1 : 1;

227 
k
 = (
uöt8_t
Ë((
k2Diff
 > 0Ë? (
ƒB™ds
-1) : 0);

229 
k2Diff
 != 0)

231 
vDk
[
k
] -
ö¸
;

232 
k
 +
ö¸
;

233 
k2Diff
 +
ö¸
;

237 
sbr
->
f_ma°î
[0] = 
k0
;

238 
k
 = 1; k <
ƒB™ds
; k++)

239 
sbr
->
f_ma°î
[
k
] = (
uöt8_t
)(sbr->f_ma°î[k-1] + 
vDk
[k-1]);

241 
sbr
->
N_ma°î
 = (
uöt8_t
)
ƒB™ds
;

242 
sbr
->
N_ma°î
 = (
	`mö
(sbr->N_master, 64));

245 
	`¥ötf
("f_ma°î[%d]: ", 
ƒB™ds
);

246 
k
 = 0; k <
ƒB™ds
; k++)

248 
	`¥ötf
("%d ", 
sbr
->
f_ma°î
[
k
]);

250 
	`¥ötf
("\n");

254 
	}
}

260 
öt32_t
 
	$föd_b™ds
(
uöt8_t
 
w¨p
, uöt8_à
b™ds
, uöt8_à
a0
, uöt8_à
a1
)

262 #ifde‡
FIXED_POINT


264 c⁄° 
ªÆ_t
 
log2TabÀ
[65] = {

265 
	`COEF_CONST
(0.0), COEF_CONST(0.0), COEF_CONST(1.0000000000), COEF_CONST(1.5849625007),

266 
	`COEF_CONST
(2.0000000000), COEF_CONST(2.3219280949), COEF_CONST(2.5849625007), COEF_CONST(2.8073549221),

267 
	`COEF_CONST
(3.0000000000), COEF_CONST(3.1699250014), COEF_CONST(3.3219280949), COEF_CONST(3.4594316186),

268 
	`COEF_CONST
(3.5849625007), COEF_CONST(3.7004397181), COEF_CONST(3.8073549221), COEF_CONST(3.9068905956),

269 
	`COEF_CONST
(4.0000000000), COEF_CONST(4.0874628413), COEF_CONST(4.1699250014), COEF_CONST(4.2479275134),

270 
	`COEF_CONST
(4.3219280949), COEF_CONST(4.3923174228), COEF_CONST(4.4594316186), COEF_CONST(4.5235619561),

271 
	`COEF_CONST
(4.5849625007), COEF_CONST(4.6438561898), COEF_CONST(4.7004397181), COEF_CONST(4.7548875022),

272 
	`COEF_CONST
(4.8073549221), COEF_CONST(4.8579809951), COEF_CONST(4.9068905956), COEF_CONST(4.9541963104),

273 
	`COEF_CONST
(5.0000000000), COEF_CONST(5.0443941194), COEF_CONST(5.0874628413), COEF_CONST(5.1292830169),

274 
	`COEF_CONST
(5.1699250014), COEF_CONST(5.2094533656), COEF_CONST(5.2479275134), COEF_CONST(5.2854022189),

275 
	`COEF_CONST
(5.3219280949), COEF_CONST(5.3575520046), COEF_CONST(5.3923174228), COEF_CONST(5.4262647547),

276 
	`COEF_CONST
(5.4594316186), COEF_CONST(5.4918530963), COEF_CONST(5.5235619561), COEF_CONST(5.5545888517),

277 
	`COEF_CONST
(5.5849625007), COEF_CONST(5.6147098441), COEF_CONST(5.6438561898), COEF_CONST(5.6724253420),

278 
	`COEF_CONST
(5.7004397181), COEF_CONST(5.7279204546), COEF_CONST(5.7548875022), COEF_CONST(5.7813597135),

279 
	`COEF_CONST
(5.8073549221), COEF_CONST(5.8328900142), COEF_CONST(5.8579809951), COEF_CONST(5.8826430494),

280 
	`COEF_CONST
(5.9068905956), COEF_CONST(5.9307373376), COEF_CONST(5.9541963104), COEF_CONST(5.9772799235),

281 
	`COEF_CONST
(6.0)

283 
ªÆ_t
 
r0
 = 
log2TabÀ
[
a0
];

284 
ªÆ_t
 
r1
 = 
log2TabÀ
[
a1
];

285 
ªÆ_t
 
r2
 = (
r1
 - 
r0
);

287 i‡(
w¨p
)

288 
r2
 = 
	`MUL_C
‘2, 
	`COEF_CONST
(1.0/1.3));

291 
r2
 = (r2 >> (
COEF_BITS
-
REAL_BITS
)Ë* 
b™ds
 + (1<<(REAL_BITS-1));

293  (
r2
 >> 
REAL_BITS
);

295 
ªÆ_t
 
div
 = (ªÆ_t)
	`log
(2.0);

296 i‡(
w¨p
Ë
div
 *(
ªÆ_t
)1.3;

298  (
öt32_t
)(
b™ds
 * 
	`log
(()
a1
/()
a0
)/
div
 + 0.5);

300 
	}
}

302 
ªÆ_t
 
	$föd_öôül_powî
(
uöt8_t
 
b™ds
, uöt8_à
a0
, uöt8_à
a1
)

304 #ifde‡
FIXED_POINT


306 c⁄° 
ªÆ_t
 
logTabÀ
[65] = {

307 
	`COEF_CONST
(0.0), COEF_CONST(0.0), COEF_CONST(0.6931471806), COEF_CONST(1.0986122887),

308 
	`COEF_CONST
(1.3862943611), COEF_CONST(1.6094379124), COEF_CONST(1.7917594692), COEF_CONST(1.9459101491),

309 
	`COEF_CONST
(2.0794415417), COEF_CONST(2.1972245773), COEF_CONST(2.3025850930), COEF_CONST(2.3978952728),

310 
	`COEF_CONST
(2.4849066498), COEF_CONST(2.5649493575), COEF_CONST(2.6390573296), COEF_CONST(2.7080502011),

311 
	`COEF_CONST
(2.7725887222), COEF_CONST(2.8332133441), COEF_CONST(2.8903717579), COEF_CONST(2.9444389792),

312 
	`COEF_CONST
(2.9957322736), COEF_CONST(3.0445224377), COEF_CONST(3.0910424534), COEF_CONST(3.1354942159),

313 
	`COEF_CONST
(3.1780538303), COEF_CONST(3.2188758249), COEF_CONST(3.2580965380), COEF_CONST(3.2958368660),

314 
	`COEF_CONST
(3.3322045102), COEF_CONST(3.3672958300), COEF_CONST(3.4011973817), COEF_CONST(3.4339872045),

315 
	`COEF_CONST
(3.4657359028), COEF_CONST(3.4965075615), COEF_CONST(3.5263605246), COEF_CONST(3.5553480615),

316 
	`COEF_CONST
(3.5835189385), COEF_CONST(3.6109179126), COEF_CONST(3.6375861597), COEF_CONST(3.6635616461),

317 
	`COEF_CONST
(3.6888794541), COEF_CONST(3.7135720667), COEF_CONST(3.7376696183), COEF_CONST(3.7612001157),

318 
	`COEF_CONST
(3.7841896339), COEF_CONST(3.8066624898), COEF_CONST(3.8286413965), COEF_CONST(3.8501476017),

319 
	`COEF_CONST
(3.8712010109), COEF_CONST(3.8918202981), COEF_CONST(3.9120230054), COEF_CONST(3.9318256327),

320 
	`COEF_CONST
(3.9512437186), COEF_CONST(3.9702919136), COEF_CONST(3.9889840466), COEF_CONST(4.0073331852),

321 
	`COEF_CONST
(4.0253516907), COEF_CONST(4.0430512678), COEF_CONST(4.0604430105), COEF_CONST(4.0775374439),

322 
	`COEF_CONST
(4.0943445622), COEF_CONST(4.1108738642), COEF_CONST(4.1271343850), COEF_CONST(4.1431347264),

323 
	`COEF_CONST
(4.158883083)

328 c⁄° 
ªÆ_t
 
c1
 = 
	`COEF_CONST
(1.0);

329 c⁄° 
ªÆ_t
 
c2
 = 
	`COEF_CONST
(1.0/2.0);

330 c⁄° 
ªÆ_t
 
c3
 = 
	`COEF_CONST
(1.0/6.0);

331 c⁄° 
ªÆ_t
 
c4
 = 
	`COEF_CONST
(1.0/24.0);

333 
ªÆ_t
 
r0
 = 
logTabÀ
[
a0
];

334 
ªÆ_t
 
r1
 = 
logTabÀ
[
a1
];

335 
ªÆ_t
 
r2
 = (
r1
 - 
r0
Ë/ 
b™ds
;

336 
ªÆ_t
 
ªxp
 = 
c1
 + 
	`MUL_C
((c1 + MUL_C((
c2
 + MUL_C((
c3
 + MUL_C(
c4
,
r2
)),Ñ2)),Ñ2)),Ñ2);

338  (
ªxp
 >> (
COEF_BITS
-
REAL_BITS
));

340  (
ªÆ_t
)
	`pow
(‘ól_t)
a1
/‘ól_t)
a0
, 1.0/‘ól_t)
b™ds
);

342 
	}
}

347 
uöt8_t
 
	$ma°î_‰equícy_èbÀ
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
k0
, uöt8_à
k2
,

348 
uöt8_t
 
bs_‰eq_sˇÀ
, uöt8_à
bs_Æãr_sˇÀ
)

350 
uöt8_t
 
k
, 
b™ds
, 
twoRegi⁄s
;

351 
uöt8_t
 
k1
;

352 
uöt8_t
 
ƒB™d0
, 
ƒB™d1
;

353 
öt32_t
 
vDk0
[64] = {0}, 
vDk1
[64] = {0};

354 
öt32_t
 
vk0
[64] = {0}, 
vk1
[64] = {0};

355 
uöt8_t
 
ãmp1
[] = { 6, 5, 4 };

356 
ªÆ_t
 
q
, 
qk
;

357 
öt32_t
 
A_1
;

358 #ifde‡
FIXED_POINT


359 
ªÆ_t
 
rk2
, 
rk0
;

363 i‡(
k2
 <
k0
)

365 
sbr
->
N_ma°î
 = 0;

369 
b™ds
 = 
ãmp1
[
bs_‰eq_sˇÀ
-1];

371 #ifde‡
FIXED_POINT


372 
rk0
 = (
ªÆ_t
)
k0
 << 
REAL_BITS
;

373 
rk2
 = (
ªÆ_t
)
k2
 << 
REAL_BITS
;

374 i‡(
rk2
 > 
	`MUL_C
(
rk0
, 
	`COEF_CONST
(2.2449)))

376 i‡(()
k2
/()
k0
 > 2.2449)

379 
twoRegi⁄s
 = 1;

380 
k1
 = 
k0
 << 1;

382 
twoRegi⁄s
 = 0;

383 
k1
 = 
k2
;

386 
ƒB™d0
 = (
uöt8_t
)(2 * 
	`föd_b™ds
(0, 
b™ds
, 
k0
, 
k1
));

387 
ƒB™d0
 = 
	`mö
(nrBand0, 63);

388 i‡(
ƒB™d0
 <= 0)

391 
q
 = 
	`föd_öôül_powî
(
ƒB™d0
, 
k0
, 
k1
);

392 #ifde‡
FIXED_POINT


393 
qk
 = (
ªÆ_t
)
k0
 << 
REAL_BITS
;

395 
A_1
 = 
k0
;

397 
qk
 = 
	`REAL_CONST
(
k0
);

398 
A_1
 = (
öt32_t
)(
qk
 + .5);

400 
k
 = 0; k <
ƒB™d0
; k++)

402 
öt32_t
 
A_0
 = 
A_1
;

403 #ifde‡
FIXED_POINT


404 
qk
 = 
	`MUL_R
(qk,
q
);

405 
A_1
 = (
öt32_t
)((
qk
 + 
	`REAL_CONST
(0.5)Ë>> 
REAL_BITS
);

407 
qk
 *
q
;

408 
A_1
 = (
öt32_t
)(
qk
 + 0.5);

410 
vDk0
[
k
] = 
A_1
 - 
A_0
;

414 
	`qs‹t
(
vDk0
, 
ƒB™d0
, (vDk0[0]), 
l⁄gcmp
);

416 
vk0
[0] = 
k0
;

417 
k
 = 1; k <
ƒB™d0
; k++)

419 
vk0
[
k
] = vk0[k-1] + 
vDk0
[k-1];

420 i‡(
vDk0
[
k
-1] == 0)

424 i‡(!
twoRegi⁄s
)

426 
k
 = 0; k <
ƒB™d0
; k++)

427 
sbr
->
f_ma°î
[
k
] = (
uöt8_t
Ë
vk0
[k];

429 
sbr
->
N_ma°î
 = 
ƒB™d0
;

430 
sbr
->
N_ma°î
 = 
	`mö
(sbr->N_master, 64);

434 
ƒB™d1
 = (
uöt8_t
)(2 * 
	`föd_b™ds
(1 , 
b™ds
, 
k1
, 
k2
));

435 
ƒB™d1
 = 
	`mö
(nrBand1, 63);

437 
q
 = 
	`föd_öôül_powî
(
ƒB™d1
, 
k1
, 
k2
);

438 #ifde‡
FIXED_POINT


439 
qk
 = (
ªÆ_t
)
k1
 << 
REAL_BITS
;

441 
A_1
 = 
k1
;

443 
qk
 = 
	`REAL_CONST
(
k1
);

444 
A_1
 = (
öt32_t
)(
qk
 + .5);

446 
k
 = 0; k <
ƒB™d1
 - 1; k++)

448 
öt32_t
 
A_0
 = 
A_1
;

449 #ifde‡
FIXED_POINT


450 
qk
 = 
	`MUL_R
(qk,
q
);

451 
A_1
 = (
öt32_t
)((
qk
 + 
	`REAL_CONST
(0.5)Ë>> 
REAL_BITS
);

453 
qk
 *
q
;

454 
A_1
 = (
öt32_t
)(
qk
 + 0.5);

456 
vDk1
[
k
] = 
A_1
 - 
A_0
;

459 i‡(
vDk1
[0] < 
vDk0
[
ƒB™d0
 - 1])

461 
öt32_t
 
ch™ge
;

464 
	`qs‹t
(
vDk1
, 
ƒB™d1
 + 1, (vDk1[0]), 
l⁄gcmp
);

465 
ch™ge
 = 
vDk0
[
ƒB™d0
 - 1] - 
vDk1
[0];

466 
vDk1
[0] = 
vDk0
[
ƒB™d0
 - 1];

467 
vDk1
[
ƒB™d1
 - 1] = vDk1[ƒB™d1 - 1] - 
ch™ge
;

471 
	`qs‹t
(
vDk1
, 
ƒB™d1
, (vDk1[0]), 
l⁄gcmp
);

472 
vk1
[0] = 
k1
;

473 
k
 = 1; k <
ƒB™d1
; k++)

475 
vk1
[
k
] = vk1[k-1] + 
vDk1
[k-1];

476 i‡(
vDk1
[
k
-1] == 0)

480 
sbr
->
N_ma°î
 = 
ƒB™d0
 + 
ƒB™d1
;

481 
sbr
->
N_ma°î
 = 
	`mö
(sbr->N_master, 64);

482 
k
 = 0; k <
ƒB™d0
; k++)

484 
sbr
->
f_ma°î
[
k
] = (
uöt8_t
Ë
vk0
[k];

486 
k
 = 
ƒB™d0
 + 1; k <
sbr
->
N_ma°î
; k++)

488 
sbr
->
f_ma°î
[
k
] = (
uöt8_t
Ë
vk1
[k - 
ƒB™d0
];

492 
	`¥ötf
("f_ma°î[%d]: ", 
sbr
->
N_ma°î
);

493 
k
 = 0; k <
sbr
->
N_ma°î
; k++)

495 
	`¥ötf
("%d ", 
sbr
->
f_ma°î
[
k
]);

497 
	`¥ötf
("\n");

501 
	}
}

504 
uöt8_t
 
	$dîived_‰equícy_èbÀ
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
bs_xovî_b™d
,

505 
uöt8_t
 
k2
)

507 
uöt8_t
 
k
, 
i
;

508 
uöt32_t
 
möus
;

511 i‡(
sbr
->
N_ma°î
 <
bs_xovî_b™d
)

514 
sbr
->
N_high
 = sbr->
N_ma°î
 - 
bs_xovî_b™d
;

515 
sbr
->
N_low
 = (sbr->
N_high
>>1) + (sbr->N_high - ((sbr->N_high>>1)<<1));

517 
sbr
->
n
[0] = sbr->
N_low
;

518 
sbr
->
n
[1] = sbr->
N_high
;

520 
k
 = 0; k <
sbr
->
N_high
; k++)

522 
sbr
->
f_èbÀ_ªs
[
HI_RES
][
k
] = sbr->
f_ma°î
[k + 
bs_xovî_b™d
];

525 
sbr
->
M
 = sbr->
f_èbÀ_ªs
[
HI_RES
][sbr->
N_high
] - sbr->f_table_res[HI_RES][0];

526 
sbr
->
kx
 = sbr->
f_èbÀ_ªs
[
HI_RES
][0];

527 i‡(
sbr
->
kx
 > 32)

529 i‡(
sbr
->
kx
 + sbr->
M
 > 64)

532 
möus
 = (
sbr
->
N_high
 & 1) ? 1 : 0;

534 
k
 = 0; k <
sbr
->
N_low
; k++)

536 i‡(
k
 == 0)

537 
i
 = 0;

539 
i
 = (
uöt8_t
)(2*
k
 - 
möus
);

540 
sbr
->
f_èbÀ_ªs
[
LO_RES
][
k
] = sbr->f_èbÀ_ªs[
HI_RES
][
i
];

544 
	`¥ötf
("bs_‰eq_sˇÀ: %d\n", 
sbr
->
bs_‰eq_sˇÀ
);

545 
	`¥ötf
("bs_limôî_b™ds: %d\n", 
sbr
->
bs_limôî_b™ds
);

546 
	`¥ötf
("f_èbÀ_ªs[HI_RES][%d]: ", 
sbr
->
N_high
);

547 
k
 = 0; k <
sbr
->
N_high
; k++)

549 
	`¥ötf
("%d ", 
sbr
->
f_èbÀ_ªs
[
HI_RES
][
k
]);

551 
	`¥ötf
("\n");

554 
	`¥ötf
("f_èbÀ_ªs[LO_RES][%d]: ", 
sbr
->
N_low
);

555 
k
 = 0; k <
sbr
->
N_low
; k++)

557 
	`¥ötf
("%d ", 
sbr
->
f_èbÀ_ªs
[
LO_RES
][
k
]);

559 
	`¥ötf
("\n");

562 
sbr
->
N_Q
 = 0;

563 i‡(
sbr
->
bs_noi£_b™ds
 == 0)

565 
sbr
->
N_Q
 = 1;

568 
sbr
->
N_Q
 = 
	`max
(1, (
öt32_t
)(sbr->
bs_noi£_b™ds
*(
	`log
(
k2
/()sbr->
kx
)/log(2.0)) + 0.5));

570 
sbr
->
N_Q
 = (
uöt8_t
)(
	`max
(1, 
	`föd_b™ds
(0, sbr->
bs_noi£_b™ds
, sbr->
kx
, 
k2
)));

572 
sbr
->
N_Q
 = 
	`mö
(5, sbr->N_Q);

575 
k
 = 0; k <
sbr
->
N_Q
; k++)

577 i‡(
k
 == 0)

579 
i
 = 0;

582 
i
 = i + (
sbr
->
N_low
 - i)/(sbr->
N_Q
 + 1 - 
k
);

584 
sbr
->
f_èbÀ_noi£
[
k
] = sbr->
f_èbÀ_ªs
[
LO_RES
][
i
];

588 
k
 = 0; k < 64; k++)

590 
uöt8_t
 
g
;

591 
g
 = 0; g < 
sbr
->
N_Q
; g++)

593 i‡((
sbr
->
f_èbÀ_noi£
[
g
] <
k
) &&

594 (
k
 < 
sbr
->
f_èbÀ_noi£
[
g
+1]))

596 
sbr
->
èbÀ_m≠_k_to_g
[
k
] = 
g
;

603 
	`¥ötf
("f_èbÀ_noi£[%d]: ", 
sbr
->
N_Q
);

604 
k
 = 0; k <
sbr
->
N_Q
; k++)

606 
	`¥ötf
("%d ", 
sbr
->
f_èbÀ_noi£
[
k
] - sbr->
kx
);

608 
	`¥ötf
("\n");

612 
	}
}

619 
	$limôî_‰equícy_èbÀ
(
sbr_öfo
 *
sbr
)

622 c⁄° 
ªÆ_t
 
limôîB™dsPîO˘ave
[] = { 
	`REAL_CONST
(1.2),

623 
	`REAL_CONST
(2), REAL_CONST(3) };

625 c⁄° 
ªÆ_t
 
limôîB™dsCom∑ª
[] = { 
	`REAL_CONST
(1.327152),

626 
	`REAL_CONST
(1.185093), REAL_CONST(1.119872) };

628 
uöt8_t
 
k
, 
s
;

629 
öt8_t
 
ƒLim
;

631 
ªÆ_t
 
limB™ds
;

634 
sbr
->
f_èbÀ_lim
[0][0] = sbr->
f_èbÀ_ªs
[
LO_RES
][0] - sbr->
kx
;

635 
sbr
->
f_èbÀ_lim
[0][1] = sbr->
f_èbÀ_ªs
[
LO_RES
][sbr->
N_low
] - sbr->
kx
;

636 
sbr
->
N_L
[0] = 1;

639 
	`¥ötf
("f_èbÀ_lim[%d][%d]: ", 0, 
sbr
->
N_L
[0]);

640 
k
 = 0; k <
sbr
->
N_L
[0]; k++)

642 
	`¥ötf
("%d ", 
sbr
->
f_èbÀ_lim
[0][
k
]);

644 
	`¥ötf
("\n");

647 
s
 = 1; s < 4; s++)

649 
öt32_t
 
limTabÀ
[100 ] = {0};

650 
uöt8_t
 
∑tchB‹dîs
[64 ] = {0};

653 
limB™ds
 = 
limôîB™dsPîO˘ave
[
s
 - 1];

656 
∑tchB‹dîs
[0] = 
sbr
->
kx
;

657 
k
 = 1; k <
sbr
->
noP©ches
; k++)

659 
∑tchB‹dîs
[
k
] =Ö©chB‹dîs[k-1] + 
sbr
->
∑tchNoSubb™ds
[k-1];

662 
k
 = 0; k <
sbr
->
N_low
; k++)

664 
limTabÀ
[
k
] = 
sbr
->
f_èbÀ_ªs
[
LO_RES
][k];

666 
k
 = 1; k < 
sbr
->
noP©ches
; k++)

668 
limTabÀ
[
k
+
sbr
->
N_low
] = 
∑tchB‹dîs
[k];

672 
	`qs‹t
(
limTabÀ
, 
sbr
->
noP©ches
 + sbr->
N_low
, ÷imTabÀ[0]), 
l⁄gcmp
);

673 
k
 = 1;

674 
ƒLim
 = 
sbr
->
noP©ches
 + sbr->
N_low
 - 1;

676 i‡(
ƒLim
 < 0)

679 
ª°¨t
:

680 i‡(
k
 <
ƒLim
)

682 
ªÆ_t
 
nO˘aves
;

684 i‡(
limTabÀ
[
k
-1] != 0)

686 
nO˘aves
 = 
	`REAL_CONST
(
	`log
(()
limTabÀ
[
k
]/()limTable[k-1])/log(2.0));

688 #ifde‡
FIXED_POINT


689 
nO˘aves
 = 
	`DIV_R
((
limTabÀ
[
k
]<<
REAL_BITS
),
	`REAL_CONST
(limTable[k-1]));

691 
nO˘aves
 = (
ªÆ_t
)
limTabÀ
[
k
]/(real_t)limTable[k-1];

695 
nO˘aves
 = 0;

698 i‡((
	`MUL_R
(
nO˘aves
,
limB™ds
)Ë< 
	`REAL_CONST
(0.49))

700 i‡(
nO˘aves
 < 
limôîB™dsCom∑ª
[
s
 - 1])

703 
uöt8_t
 
i
;

704 i‡(
limTabÀ
[
k
] !=ÜimTable[k-1])

706 
uöt8_t
 
found
 = 0, 
found2
 = 0;

707 
i
 = 0; i <
sbr
->
noP©ches
; i++)

709 i‡(
limTabÀ
[
k
] =
∑tchB‹dîs
[
i
])

710 
found
 = 1;

712 i‡(
found
)

714 
found2
 = 0;

715 
i
 = 0; i <
sbr
->
noP©ches
; i++)

717 i‡(
limTabÀ
[
k
-1] =
∑tchB‹dîs
[
i
])

718 
found2
 = 1;

720 i‡(
found2
)

722 
k
++;

723 
ª°¨t
;

726 
limTabÀ
[
k
-1] = 
sbr
->
f_èbÀ_ªs
[
LO_RES
][sbr->
N_low
];

727 
	`qs‹t
(
limTabÀ
, 
sbr
->
noP©ches
 + sbr->
N_low
, ÷imTabÀ[0]), 
l⁄gcmp
);

728 
ƒLim
--;

729 
ª°¨t
;

734 
limTabÀ
[
k
] = 
sbr
->
f_èbÀ_ªs
[
LO_RES
][sbr->
N_low
];

735 
	`qs‹t
(
limTabÀ
, 
ƒLim
, ÷imTabÀ[0]), 
l⁄gcmp
);

736 
ƒLim
--;

737 
ª°¨t
;

739 
k
++;

740 
ª°¨t
;

744 
sbr
->
N_L
[
s
] = 
ƒLim
;

745 
k
 = 0; k <
ƒLim
; k++)

747 
sbr
->
f_èbÀ_lim
[
s
][
k
] = 
limTabÀ
[k] - sbr->
kx
;

751 
	`¥ötf
("f_èbÀ_lim[%d][%d]: ", 
s
, 
sbr
->
N_L
[s]);

752 
k
 = 0; k <
sbr
->
N_L
[
s
]; k++)

754 
	`¥ötf
("%d ", 
sbr
->
f_èbÀ_lim
[
s
][
k
]);

756 
	`¥ötf
("\n");

759 
	}
}

	@sbr_fbt.h

28 #i‚de‡
__SBR_FBT_H__


29 
	#__SBR_FBT_H__


	)

31 #ifde‡
__˝lu•lus


35 
uöt8_t
 
qmf_°¨t_ch™√l
(uöt8_à
bs_°¨t_‰eq
, uöt8_à
bs_ßm∂î©e_mode
,

36 
uöt32_t
 
ßm∂e_øã
);

37 
uöt8_t
 
qmf_°›_ch™√l
(uöt8_à
bs_°›_‰eq
, 
uöt32_t
 
ßm∂e_øã
,

38 
uöt8_t
 
k0
);

39 
uöt8_t
 
ma°î_‰equícy_èbÀ_fs0
(
sbr_öfo
 *
sbr
, uöt8_à
k0
, uöt8_à
k2
,

40 
uöt8_t
 
bs_Æãr_sˇÀ
);

41 
uöt8_t
 
ma°î_‰equícy_èbÀ
(
sbr_öfo
 *
sbr
, uöt8_à
k0
, uöt8_à
k2
,

42 
uöt8_t
 
bs_‰eq_sˇÀ
, uöt8_à
bs_Æãr_sˇÀ
);

43 
uöt8_t
 
dîived_‰equícy_èbÀ
(
sbr_öfo
 *
sbr
, uöt8_à
bs_xovî_b™d
,

44 
uöt8_t
 
k2
);

45 
limôî_‰equícy_èbÀ
(
sbr_öfo
 *
sbr
);

48 #ifde‡
__˝lu•lus


	@sbr_hfadj.c

30 
	~"comm⁄.h
"

31 
	~"°ru˘s.h
"

33 #ifde‡
SBR_DEC


35 
	~"sbr_sy¡ax.h
"

36 
	~"sbr_hÁdj.h
"

38 
	~"sbr_noi£.h
"

42 
e°im©e_cuºít_ívñ›e
(
sbr_öfo
 *
sbr
, 
sbr_hÁdj_öfo
 *
adj
,

43 
qmf_t
 
Xsbr
[
MAX_NTSRHFG
][64], 
uöt8_t
 
ch
);

44 
ˇlcuœã_gaö
(
sbr_öfo
 *
sbr
, 
sbr_hÁdj_öfo
 *
adj
, 
uöt8_t
 
ch
);

45 #ifde‡
SBR_LOW_POWER


46 
ˇlc_gaö_groups
(
sbr_öfo
 *
sbr
, 
sbr_hÁdj_öfo
 *
adj
, 
ªÆ_t
 *
deg
, 
uöt8_t
 
ch
);

47 
Æüsög_ªdu˘i⁄
(
sbr_öfo
 *
sbr
, 
sbr_hÁdj_öfo
 *
adj
, 
ªÆ_t
 *
deg
, 
uöt8_t
 
ch
);

49 
hf_as£mbly
(
sbr_öfo
 *
sbr
, 
sbr_hÁdj_öfo
 *
adj
, 
qmf_t
 
Xsbr
[
MAX_NTSRHFG
][64], 
uöt8_t
 
ch
);

52 
hf_adju°mít
(
sbr_öfo
 *
sbr
, 
qmf_t
 
Xsbr
[
MAX_NTSRHFG
][64]

53 #ifde‡
SBR_LOW_POWER


54 ,
ªÆ_t
 *
deg


56 ,
uöt8_t
 
ch
)

58 
ALIGN
 
sbr_hÁdj_öfo
 
	gadj
 = {{{0}}};

60 i‡(
	gsbr
->
	gbs_‰ame_˛ass
[
ch
] =
FIXFIX
)

62 
sbr
->
l_A
[
ch
] = -1;

63 } i‡(
	gsbr
->
	gbs_‰ame_˛ass
[
ch
] =
VARFIX
) {

64 i‡(
sbr
->
bs_poöãr
[
ch
] > 1)

65 
sbr
->
l_A
[
ch
] = -1;

67 
	gsbr
->
	gl_A
[
ch
] = 
sbr
->
bs_poöãr
[ch] - 1;

69 i‡(
	gsbr
->
	gbs_poöãr
[
ch
] == 0)

70 
sbr
->
l_A
[
ch
] = -1;

72 
	gsbr
->
	gl_A
[
ch
] = 
sbr
->
L_E
[ch] + 1 - sbr->
bs_poöãr
[ch];

75 
e°im©e_cuºít_ívñ›e
(
sbr
, &
adj
, 
Xsbr
, 
ch
);

77 
ˇlcuœã_gaö
(
sbr
, &
adj
, 
ch
);

79 #ifde‡
SBR_LOW_POWER


80 
ˇlc_gaö_groups
(
sbr
, &
adj
, 
deg
, 
ch
);

81 
Æüsög_ªdu˘i⁄
(
sbr
, &
adj
, 
deg
, 
ch
);

84 
hf_as£mbly
(
sbr
, &
adj
, 
Xsbr
, 
ch
);

87 
uöt8_t
 
	$gë_S_m≠≥d
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
, uöt8_à
l
, uöt8_à
cuºít_b™d
)

89 i‡(
sbr
->
f
[
ch
][
l
] =
HI_RES
)

94 i‡((
l
 >
sbr
->
l_A
[
ch
]) ||

95 (
sbr
->
bs_add_h¨m⁄ic_¥ev
[
ch
][
cuºít_b™d
] && sbr->
bs_add_h¨m⁄ic_Êag_¥ev
[ch]))

97  
sbr
->
bs_add_h¨m⁄ic
[
ch
][
cuºít_b™d
];

100 
uöt8_t
 
b
, 
lb
, 
ub
;

109 
lb
 = 2*
cuºít_b™d
 - ((
sbr
->
N_high
 & 1) ? 1 : 0);

111 
ub
 = 2*(
cuºít_b™d
+1Ë- ((
sbr
->
N_high
 & 1) ? 1 : 0);

114 
b
 = 
lb
; b < 
ub
; b++)

116 i‡((
l
 >
sbr
->
l_A
[
ch
]) ||

117 (
sbr
->
bs_add_h¨m⁄ic_¥ev
[
ch
][
b
] && sbr->
bs_add_h¨m⁄ic_Êag_¥ev
[ch]))

119 i‡(
sbr
->
bs_add_h¨m⁄ic
[
ch
][
b
] == 1)

126 
	}
}

128 
e°im©e_cuºít_ívñ›e
(
sbr_öfo
 *
sbr
, 
sbr_hÁdj_öfo
 *
adj
,

129 
qmf_t
 
Xsbr
[
MAX_NTSRHFG
][64], 
uöt8_t
 
ch
)

131 
uöt8_t
 
	gm
, 
	gl
, 
	gj
, 
	gk
, 
	gk_l
, 
	gk_h
, 
	gp
;

132 
ªÆ_t
 
	gƒg
, 
	gdiv
;

134 i‡(
	gsbr
->
	gbs_öãΩﬁ_‰eq
 == 1)

136 
l
 = 0; 
	gl
 < 
	gsbr
->
	gL_E
[
ch
];Ü++)

138 
uöt8_t
 
	gi
, 
	gl_i
, 
	gu_i
;

140 
	gl_i
 = 
sbr
->
t_E
[
ch
][
l
];

141 
	gu_i
 = 
sbr
->
t_E
[
ch
][
l
+1];

143 
	gdiv
 = (
ªÆ_t
)(
u_i
 - 
l_i
);

145 
	gm
 = 0; m < 
	gsbr
->
	gM
; m++)

147 
	gƒg
 = 0;

149 
	gi
 = 
l_i
 + 
sbr
->
tHFAdj
; i < 
	gu_i
 + 
	gsbr
->
	gtHFAdj
; i++)

151 #ifde‡
FIXED_POINT


152 #ifde‡
SBR_LOW_POWER


153 
	gƒg
 +((
QMF_RE
(
Xsbr
[
i
][
m
 + 
sbr
->
kx
])+(1<<(
REAL_BITS
-1)))>>REAL_BITS)*((QMF_RE(Xsbr[i][m + sbr->kx])+(1<<(REAL_BITS-1)))>>REAL_BITS);

155 
	gƒg
 +((
QMF_RE
(
Xsbr
[
i
][
m
 + 
sbr
->
kx
])+(1<<(
REAL_BITS
-1)))>>REAL_BITS)*((QMF_RE(Xsbr[i][m + sbr->kx])+(1<<(REAL_BITS-1)))>>REAL_BITS) +

156 ((
QMF_IM
(
Xsbr
[
i
][
m
 + 
sbr
->
kx
])+(1<<(
REAL_BITS
-1)))>>REAL_BITS)*((QMF_IM(Xsbr[i][m + sbr->kx])+(1<<(REAL_BITS-1)))>>REAL_BITS);

159 
	gƒg
 +
MUL_R
(
QMF_RE
(
Xsbr
[
i
][
m
 + 
sbr
->
kx
]), QMF_RE(Xsbr[i][m + sbr->kx]))

160 #i‚de‡
SBR_LOW_POWER


161 + 
MUL_R
(
QMF_IM
(
Xsbr
[
i
][
m
 + 
sbr
->
kx
]), QMF_IM(Xsbr[i][m + sbr->kx]))

167 
	gsbr
->
	gE_cuº
[
ch
][
m
][
l
] = 
ƒg
 / 
div
;

168 #ifde‡
SBR_LOW_POWER


169 #ifde‡
FIXED_POINT


170 
	gsbr
->
	gE_cuº
[
ch
][
m
][
l
] <<= 1;

172 
	gsbr
->
	gE_cuº
[
ch
][
m
][
l
] *= 2;

178 
	gl
 = 0;Ü < 
	gsbr
->
	gL_E
[
ch
];Ü++)

180 
	gp
 = 0;Ö < 
	gsbr
->
	gn
[
sbr
->
f
[
ch
][
l
]];Ö++)

182 
	gk_l
 = 
sbr
->
f_èbÀ_ªs
[sbr->
f
[
ch
][
l
]][
p
];

183 
	gk_h
 = 
sbr
->
f_èbÀ_ªs
[sbr->
f
[
ch
][
l
]][
p
+1];

185 
	gk
 = 
k_l
; k < 
	gk_h
; k++)

187 
uöt8_t
 
	gi
, 
	gl_i
, 
	gu_i
;

188 
	gƒg
 = 0;

190 
	gl_i
 = 
sbr
->
t_E
[
ch
][
l
];

191 
	gu_i
 = 
sbr
->
t_E
[
ch
][
l
+1];

193 
	gdiv
 = (
ªÆ_t
)((
u_i
 - 
l_i
)*(
k_h
 - 
k_l
));

195 
	gi
 = 
l_i
 + 
sbr
->
tHFAdj
; i < 
	gu_i
 + 
	gsbr
->
	gtHFAdj
; i++)

197 
	gj
 = 
k_l
; j < 
	gk_h
; j++)

199 #ifde‡
FIXED_POINT


200 #ifde‡
SBR_LOW_POWER


201 
	gƒg
 +((
QMF_RE
(
Xsbr
[
i
][
j
])+(1<<(
REAL_BITS
-1)))>>REAL_BITS)*((QMF_RE(Xsbr[i][j])+(1<<(REAL_BITS-1)))>>REAL_BITS);

203 
	gƒg
 +((
QMF_RE
(
Xsbr
[
i
][
j
])+(1<<(
REAL_BITS
-1)))>>REAL_BITS)*((QMF_RE(Xsbr[i][j])+(1<<(REAL_BITS-1)))>>REAL_BITS) +

204 ((
QMF_IM
(
Xsbr
[
i
][
j
])+(1<<(
REAL_BITS
-1)))>>REAL_BITS)*((QMF_IM(Xsbr[i][j])+(1<<(REAL_BITS-1)))>>REAL_BITS);

207 
	gƒg
 +
MUL_R
(
QMF_RE
(
Xsbr
[
i
][
j
]), QMF_RE(Xsbr[i][j]))

208 #i‚de‡
SBR_LOW_POWER


209 + 
MUL_R
(
QMF_IM
(
Xsbr
[
i
][
j
]), QMF_IM(Xsbr[i][j]))

216 
	gsbr
->
	gE_cuº
[
ch
][
k
 - 
sbr
->
kx
][
l
] = 
ƒg
 / 
div
;

217 #ifde‡
SBR_LOW_POWER


218 #ifde‡
FIXED_POINT


219 
	gsbr
->
	gE_cuº
[
ch
][
k
 - 
sbr
->
kx
][
l
] <<= 1;

221 
	gsbr
->
	gE_cuº
[
ch
][
k
 - 
sbr
->
kx
][
l
] *= 2;

230 #ifde‡
FIXED_POINT


231 
	#EPS
 (1Ë

	)

233 
	#EPS
 (1e-12)

	)

238 #ifde‡
FIXED_POINT


241 c⁄° 
ªÆ_t
 
	glog2_öt_èb
[] = {

242 
LOG2_MIN_INF
, 
REAL_CONST
(0.000000000000000), REAL_CONST(1.000000000000000), REAL_CONST(1.584962500721156),

243 
REAL_CONST
(2.000000000000000), REAL_CONST(2.321928094887362), REAL_CONST(2.584962500721156), REAL_CONST(2.807354922057604),

244 
REAL_CONST
(3.000000000000000), REAL_CONST(3.169925001442313), REAL_CONST(3.321928094887363), REAL_CONST(3.459431618637297),

245 
REAL_CONST
(3.584962500721156), REAL_CONST(3.700439718141092), REAL_CONST(3.807354922057604), REAL_CONST(3.906890595608519),

246 
REAL_CONST
(4.000000000000000), REAL_CONST(4.087462841250339), REAL_CONST(4.169925001442312), REAL_CONST(4.247927513443585),

247 
REAL_CONST
(4.321928094887362), REAL_CONST(4.392317422778761), REAL_CONST(4.459431618637297), REAL_CONST(4.523561956057013),

248 
REAL_CONST
(4.584962500721156), REAL_CONST(4.643856189774724), REAL_CONST(4.700439718141093), REAL_CONST(4.754887502163468),

249 
REAL_CONST
(4.807354922057604), REAL_CONST(4.857980995127572), REAL_CONST(4.906890595608519), REAL_CONST(4.954196310386875),

250 
REAL_CONST
(5.000000000000000), REAL_CONST(5.044394119358453), REAL_CONST(5.087462841250340), REAL_CONST(5.129283016944966),

251 
REAL_CONST
(5.169925001442312), REAL_CONST(5.209453365628949), REAL_CONST(5.247927513443585), REAL_CONST(5.285402218862248),

252 
REAL_CONST
(5.321928094887363), REAL_CONST(5.357552004618084), REAL_CONST(5.392317422778761), REAL_CONST(5.426264754702098),

253 
REAL_CONST
(5.459431618637297), REAL_CONST(5.491853096329675), REAL_CONST(5.523561956057013), REAL_CONST(5.554588851677637),

254 
REAL_CONST
(5.584962500721156), REAL_CONST(5.614709844115208), REAL_CONST(5.643856189774724), REAL_CONST(5.672425341971495),

255 
REAL_CONST
(5.700439718141093), REAL_CONST(5.727920454563200), REAL_CONST(5.754887502163469), REAL_CONST(5.781359713524660),

256 
REAL_CONST
(5.807354922057605), REAL_CONST(5.832890014164742), REAL_CONST(5.857980995127572), REAL_CONST(5.882643049361842),

257 
REAL_CONST
(5.906890595608518), REAL_CONST(5.930737337562887), REAL_CONST(5.954196310386876), REAL_CONST(5.977279923499916)

260 c⁄° 
ªÆ_t
 
	g∑n_log2_èb
[] = {

261 
REAL_CONST
(1.000000000000000), REAL_CONST(0.584962500721156), REAL_CONST(0.321928094887362), REAL_CONST(0.169925001442312), REAL_CONST(0.087462841250339),

262 
REAL_CONST
(0.044394119358453), REAL_CONST(0.022367813028455), REAL_CONST(0.011227255423254), REAL_CONST(0.005624549193878), REAL_CONST(0.002815015607054),

263 
REAL_CONST
(0.001408194392808), REAL_CONST(0.000704269011247), REAL_CONST(0.000352177480301), REAL_CONST(0.000176099486443), REAL_CONST(0.000088052430122),

264 
REAL_CONST
(0.000044026886827), REAL_CONST(0.000022013611360), REAL_CONST(0.000011006847667)

267 
ªÆ_t
 
	$föd_log2_E
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
k
, uöt8_à
l
, uöt8_à
ch
)

270 i‡(
sbr
->
bs_cou∂ög
 == 1)

272 
uöt8_t
 
amp0
 = (
sbr
->
amp_ªs
[0]) ? 0 : 1;

273 
uöt8_t
 
amp1
 = (
sbr
->
amp_ªs
[1]) ? 0 : 1;

274 
ªÆ_t
 
tmp
 = (7 << 
REAL_BITS
Ë+ (
sbr
->
E
[0][
k
][
l
] << (REAL_BITS-
amp0
));

275 
ªÆ_t
 
∑n
;

278 
uöt8_t
 
E
 = 
sbr
->E[1][
k
][
l
] >> 
amp1
;

280 i‡(
ch
 == 0)

282 i‡(
E
 > 12)

285 
∑n
 = 
∑n_log2_èb
[-12 + 
E
];

288 
∑n
 = 
∑n_log2_èb
[12 - 
E
] + ((12 - E)<<
REAL_BITS
);

291 i‡(
E
 < 12)

294 
∑n
 = 
∑n_log2_èb
[-
E
 + 12];

297 
∑n
 = 
∑n_log2_èb
[
E
 - 12] + ((E - 12)<<
REAL_BITS
);

302  
tmp
 - 
∑n
;

304 
uöt8_t
 
amp
 = (
sbr
->
amp_ªs
[
ch
]) ? 0 : 1;

306  (6 << 
REAL_BITS
Ë+ (
sbr
->
E
[
ch
][
k
][
l
] << (REAL_BITS-
amp
));

308 
	}
}

310 
ªÆ_t
 
	$föd_log2_Q
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
k
, uöt8_à
l
, uöt8_à
ch
)

313 i‡(
sbr
->
bs_cou∂ög
 == 1)

315 
ªÆ_t
 
tmp
 = (7 << 
REAL_BITS
Ë- (
sbr
->
Q
[0][
k
][
l
] << REAL_BITS);

316 
ªÆ_t
 
∑n
;

318 
uöt8_t
 
Q
 = 
sbr
->Q[1][
k
][
l
];

320 i‡(
ch
 == 0)

322 i‡(
Q
 > 12)

325 
∑n
 = 
∑n_log2_èb
[-12 + 
Q
];

328 
∑n
 = 
∑n_log2_èb
[12 - 
Q
] + ((12 - Q)<<
REAL_BITS
);

331 i‡(
Q
 < 12)

334 
∑n
 = 
∑n_log2_èb
[-
Q
 + 12];

337 
∑n
 = 
∑n_log2_èb
[
Q
 - 12] + ((Q - 12)<<
REAL_BITS
);

342  
tmp
 - 
∑n
;

344  (6 << 
REAL_BITS
Ë- (
sbr
->
Q
[
ch
][
k
][
l
] << REAL_BITS);

346 
	}
}

348 c⁄° 
ªÆ_t
 
	glog_Q∂us1_∑n
[31][13] = {

349 { 
REAL_CONST
(0.044383447617292), REAL_CONST(0.169768601655960), REAL_CONST(0.583090126514435), REAL_CONST(1.570089221000671), REAL_CONST(3.092446088790894), REAL_CONST(4.733354568481445), REAL_CONST(6.022367954254150), REAL_CONST(6.692092418670654), REAL_CONST(6.924463272094727), REAL_CONST(6.989034175872803), REAL_CONST(7.005646705627441), REAL_CONST(7.009829998016357), REAL_CONST(7.010877609252930) },

350 { 
REAL_CONST
(0.022362394258380), REAL_CONST(0.087379962205887), REAL_CONST(0.320804953575134), REAL_CONST(0.988859415054321), REAL_CONST(2.252387046813965), REAL_CONST(3.786596298217773), REAL_CONST(5.044394016265869), REAL_CONST(5.705977916717529), REAL_CONST(5.936291694641113), REAL_CONST(6.000346660614014), REAL_CONST(6.016829967498779), REAL_CONST(6.020981311798096), REAL_CONST(6.022020816802979) },

351 { 
REAL_CONST
(0.011224525049329), REAL_CONST(0.044351425021887), REAL_CONST(0.169301137328148), REAL_CONST(0.577544987201691), REAL_CONST(1.527246952056885), REAL_CONST(2.887525320053101), REAL_CONST(4.087462902069092), REAL_CONST(4.733354568481445), REAL_CONST(4.959661006927490), REAL_CONST(5.022709369659424), REAL_CONST(5.038940429687500), REAL_CONST(5.043028831481934), REAL_CONST(5.044052600860596) },

352 { 
REAL_CONST
(0.005623178556561), REAL_CONST(0.022346137091517), REAL_CONST(0.087132595479488), REAL_CONST(0.317482173442841), REAL_CONST(0.956931233406067), REAL_CONST(2.070389270782471), REAL_CONST(3.169924974441528), REAL_CONST(3.786596298217773), REAL_CONST(4.005294322967529), REAL_CONST(4.066420555114746), REAL_CONST(4.082170009613037), REAL_CONST(4.086137294769287), REAL_CONST(4.087131500244141) },

353 { 
REAL_CONST
(0.002814328996465), REAL_CONST(0.011216334067285), REAL_CONST(0.044224001467228), REAL_CONST(0.167456731200218), REAL_CONST(0.556393325328827), REAL_CONST(1.378511548042297), REAL_CONST(2.321928024291992), REAL_CONST(2.887525320053101), REAL_CONST(3.092446088790894), REAL_CONST(3.150059700012207), REAL_CONST(3.164926528930664), REAL_CONST(3.168673276901245), REAL_CONST(3.169611930847168) },

354 { 
REAL_CONST
(0.001407850766554), REAL_CONST(0.005619067233056), REAL_CONST(0.022281449288130), REAL_CONST(0.086156636476517), REAL_CONST(0.304854571819305), REAL_CONST(0.847996890544891), REAL_CONST(1.584962487220764), REAL_CONST(2.070389270782471), REAL_CONST(2.252387046813965), REAL_CONST(2.304061651229858), REAL_CONST(2.317430257797241), REAL_CONST(2.320801734924316), REAL_CONST(2.321646213531494) },

355 { 
REAL_CONST
(0.000704097095877), REAL_CONST(0.002812269143760), REAL_CONST(0.011183738708496), REAL_CONST(0.043721374124289), REAL_CONST(0.160464659333229), REAL_CONST(0.485426813364029), REAL_CONST(1.000000000000000), REAL_CONST(1.378511548042297), REAL_CONST(1.527246952056885), REAL_CONST(1.570089221000671), REAL_CONST(1.581215262413025), REAL_CONST(1.584023833274841), REAL_CONST(1.584727644920349) },

356 { 
REAL_CONST
(0.000352177477907), REAL_CONST(0.001406819908880), REAL_CONST(0.005602621007711), REAL_CONST(0.022026389837265), REAL_CONST(0.082462236285210), REAL_CONST(0.263034462928772), REAL_CONST(0.584962487220764), REAL_CONST(0.847996890544891), REAL_CONST(0.956931233406067), REAL_CONST(0.988859415054321), REAL_CONST(0.997190535068512), REAL_CONST(0.999296069145203), REAL_CONST(0.999823868274689) },

357 { 
REAL_CONST
(0.000176099492819), REAL_CONST(0.000703581434209), REAL_CONST(0.002804030198604), REAL_CONST(0.011055230163038), REAL_CONST(0.041820213198662), REAL_CONST(0.137503549456596), REAL_CONST(0.321928083896637), REAL_CONST(0.485426813364029), REAL_CONST(0.556393325328827), REAL_CONST(0.577544987201691), REAL_CONST(0.583090126514435), REAL_CONST(0.584493279457092), REAL_CONST(0.584845066070557) },

358 { 
REAL_CONST
(0.000088052431238), REAL_CONST(0.000351833587047), REAL_CONST(0.001402696361765), REAL_CONST(0.005538204684854), REAL_CONST(0.021061634644866), REAL_CONST(0.070389263331890), REAL_CONST(0.169925004243851), REAL_CONST(0.263034462928772), REAL_CONST(0.304854571819305), REAL_CONST(0.317482173442841), REAL_CONST(0.320804953575134), REAL_CONST(0.321646571159363), REAL_CONST(0.321857661008835) },

359 { 
REAL_CONST
(0.000044026888645), REAL_CONST(0.000175927518285), REAL_CONST(0.000701518612914), REAL_CONST(0.002771759871393), REAL_CONST(0.010569252073765), REAL_CONST(0.035623874515295), REAL_CONST(0.087462842464447), REAL_CONST(0.137503549456596), REAL_CONST(0.160464659333229), REAL_CONST(0.167456731200218), REAL_CONST(0.169301137328148), REAL_CONST(0.169768601655960), REAL_CONST(0.169885858893394) },

360 { 
REAL_CONST
(0.000022013611670), REAL_CONST(0.000088052431238), REAL_CONST(0.000350801943569), REAL_CONST(0.001386545598507), REAL_CONST(0.005294219125062), REAL_CONST(0.017921976745129), REAL_CONST(0.044394120573997), REAL_CONST(0.070389263331890), REAL_CONST(0.082462236285210), REAL_CONST(0.086156636476517), REAL_CONST(0.087132595479488), REAL_CONST(0.087379962205887), REAL_CONST(0.087442122399807) },

361 { 
REAL_CONST
(0.000011006847672), REAL_CONST(0.000044026888645), REAL_CONST(0.000175411638338), REAL_CONST(0.000693439331371), REAL_CONST(0.002649537986144), REAL_CONST(0.008988817222416), REAL_CONST(0.022367812693119), REAL_CONST(0.035623874515295), REAL_CONST(0.041820213198662), REAL_CONST(0.043721374124289), REAL_CONST(0.044224001467228), REAL_CONST(0.044351425021887), REAL_CONST(0.044383447617292) },

362 { 
REAL_CONST
(0.000005503434295), REAL_CONST(0.000022013611670), REAL_CONST(0.000087708482170), REAL_CONST(0.000346675369656), REAL_CONST(0.001325377263129), REAL_CONST(0.004501323681325), REAL_CONST(0.011227255687118), REAL_CONST(0.017921976745129), REAL_CONST(0.021061634644866), REAL_CONST(0.022026389837265), REAL_CONST(0.022281449288130), REAL_CONST(0.022346137091517), REAL_CONST(0.022362394258380) },

363 { 
REAL_CONST
(0.000002751719876), REAL_CONST(0.000011006847672), REAL_CONST(0.000043854910473), REAL_CONST(0.000173348103999), REAL_CONST(0.000662840844598), REAL_CONST(0.002252417383716), REAL_CONST(0.005624548997730), REAL_CONST(0.008988817222416), REAL_CONST(0.010569252073765), REAL_CONST(0.011055230163038), REAL_CONST(0.011183738708496), REAL_CONST(0.011216334067285), REAL_CONST(0.011224525049329) },

364 { 
REAL_CONST
(0.000001375860506), REAL_CONST(0.000005503434295), REAL_CONST(0.000022013611670), REAL_CONST(0.000086676649516), REAL_CONST(0.000331544462824), REAL_CONST(0.001126734190620), REAL_CONST(0.002815015614033), REAL_CONST(0.004501323681325), REAL_CONST(0.005294219125062), REAL_CONST(0.005538204684854), REAL_CONST(0.005602621007711), REAL_CONST(0.005619067233056), REAL_CONST(0.005623178556561) },

365 { 
REAL_CONST
(0.000000687930424), REAL_CONST(0.000002751719876), REAL_CONST(0.000011006847672), REAL_CONST(0.000043338975956), REAL_CONST(0.000165781748365), REAL_CONST(0.000563477107789), REAL_CONST(0.001408194424585), REAL_CONST(0.002252417383716), REAL_CONST(0.002649537986144), REAL_CONST(0.002771759871393), REAL_CONST(0.002804030198604), REAL_CONST(0.002812269143760), REAL_CONST(0.002814328996465) },

366 { 
REAL_CONST
(0.000000343965269), REAL_CONST(0.000001375860506), REAL_CONST(0.000005503434295), REAL_CONST(0.000021669651687), REAL_CONST(0.000082893253420), REAL_CONST(0.000281680084299), REAL_CONST(0.000704268983100), REAL_CONST(0.001126734190620), REAL_CONST(0.001325377263129), REAL_CONST(0.001386545598507), REAL_CONST(0.001402696361765), REAL_CONST(0.001406819908880), REAL_CONST(0.001407850766554) },

367 { 
REAL_CONST
(0.000000171982634), REAL_CONST(0.000000687930424), REAL_CONST(0.000002751719876), REAL_CONST(0.000010834866771), REAL_CONST(0.000041447223339), REAL_CONST(0.000140846910654), REAL_CONST(0.000352177477907), REAL_CONST(0.000563477107789), REAL_CONST(0.000662840844598), REAL_CONST(0.000693439331371), REAL_CONST(0.000701518612914), REAL_CONST(0.000703581434209), REAL_CONST(0.000704097095877) },

368 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000343965269), REAL_CONST(0.000001375860506), REAL_CONST(0.000005503434295), REAL_CONST(0.000020637769921), REAL_CONST(0.000070511166996), REAL_CONST(0.000176099492819), REAL_CONST(0.000281680084299), REAL_CONST(0.000331544462824), REAL_CONST(0.000346675369656), REAL_CONST(0.000350801943569), REAL_CONST(0.000351833587047), REAL_CONST(0.000352177477907) },

369 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000171982634), REAL_CONST(0.000000687930424), REAL_CONST(0.000002751719876), REAL_CONST(0.000010318922250), REAL_CONST(0.000035256012779), REAL_CONST(0.000088052431238), REAL_CONST(0.000140846910654), REAL_CONST(0.000165781748365), REAL_CONST(0.000173348103999), REAL_CONST(0.000175411638338), REAL_CONST(0.000175927518285), REAL_CONST(0.000176099492819) },

370 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000343965269), REAL_CONST(0.000001375860506), REAL_CONST(0.000005159470220), REAL_CONST(0.000017542124624), REAL_CONST(0.000044026888645), REAL_CONST(0.000070511166996), REAL_CONST(0.000082893253420), REAL_CONST(0.000086676649516), REAL_CONST(0.000087708482170), REAL_CONST(0.000088052431238), REAL_CONST(0.000088052431238) },

371 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000171982634), REAL_CONST(0.000000687930424), REAL_CONST(0.000002579737384), REAL_CONST(0.000008771088687), REAL_CONST(0.000022013611670), REAL_CONST(0.000035256012779), REAL_CONST(0.000041447223339), REAL_CONST(0.000043338975956), REAL_CONST(0.000043854910473), REAL_CONST(0.000044026888645), REAL_CONST(0.000044026888645) },

372 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000343965269), REAL_CONST(0.000001375860506), REAL_CONST(0.000004471542070), REAL_CONST(0.000011006847672), REAL_CONST(0.000017542124624), REAL_CONST(0.000020637769921), REAL_CONST(0.000021669651687), REAL_CONST(0.000022013611670), REAL_CONST(0.000022013611670), REAL_CONST(0.000022013611670) },

373 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000171982634), REAL_CONST(0.000000687930424), REAL_CONST(0.000002235772627), REAL_CONST(0.000005503434295), REAL_CONST(0.000008771088687), REAL_CONST(0.000010318922250), REAL_CONST(0.000010834866771), REAL_CONST(0.000011006847672), REAL_CONST(0.000011006847672), REAL_CONST(0.000011006847672) },

374 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000343965269), REAL_CONST(0.000001031895522), REAL_CONST(0.000002751719876), REAL_CONST(0.000004471542070), REAL_CONST(0.000005159470220), REAL_CONST(0.000005503434295), REAL_CONST(0.000005503434295), REAL_CONST(0.000005503434295), REAL_CONST(0.000005503434295) },

375 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000171982634), REAL_CONST(0.000000515947875), REAL_CONST(0.000001375860506), REAL_CONST(0.000002235772627), REAL_CONST(0.000002579737384), REAL_CONST(0.000002751719876), REAL_CONST(0.000002751719876), REAL_CONST(0.000002751719876), REAL_CONST(0.000002751719876) },

376 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000343965269), REAL_CONST(0.000000687930424), REAL_CONST(0.000001031895522), REAL_CONST(0.000001375860506), REAL_CONST(0.000001375860506), REAL_CONST(0.000001375860506), REAL_CONST(0.000001375860506), REAL_CONST(0.000001375860506) },

377 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000171982634), REAL_CONST(0.000000343965269), REAL_CONST(0.000000515947875), REAL_CONST(0.000000687930424), REAL_CONST(0.000000687930424), REAL_CONST(0.000000687930424), REAL_CONST(0.000000687930424), REAL_CONST(0.000000687930424) },

378 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000171982634), REAL_CONST(0.000000343965269), REAL_CONST(0.000000343965269), REAL_CONST(0.000000343965269), REAL_CONST(0.000000343965269), REAL_CONST(0.000000343965269), REAL_CONST(0.000000343965269) },

379 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000171982634), REAL_CONST(0.000000171982634), REAL_CONST(0.000000171982634), REAL_CONST(0.000000171982634), REAL_CONST(0.000000171982634), REAL_CONST(0.000000171982634) }

382 c⁄° 
ªÆ_t
 
	glog_Q∂us1
[31] = {

383 
REAL_CONST
(6.022367813028454), REAL_CONST(5.044394119358453), REAL_CONST(4.087462841250339),

384 
REAL_CONST
(3.169925001442313), REAL_CONST(2.321928094887362), REAL_CONST(1.584962500721156),

385 
REAL_CONST
(1.000000000000000), REAL_CONST(0.584962500721156), REAL_CONST(0.321928094887362),

386 
REAL_CONST
(0.169925001442312), REAL_CONST(0.087462841250339), REAL_CONST(0.044394119358453),

387 
REAL_CONST
(0.022367813028455), REAL_CONST(0.011227255423254), REAL_CONST(0.005624549193878),

388 
REAL_CONST
(0.002815015607054), REAL_CONST(0.001408194392808), REAL_CONST(0.000704269011247),

389 
REAL_CONST
(0.000352177480301), REAL_CONST(0.000176099486443), REAL_CONST(0.000088052430122),

390 
REAL_CONST
(0.000044026886827), REAL_CONST(0.000022013611360), REAL_CONST(0.000011006847667),

391 
REAL_CONST
(0.000005503434331), REAL_CONST(0.000002751719790), REAL_CONST(0.000001375860551),

392 
REAL_CONST
(0.000000687930439), REAL_CONST(0.000000343965261), REAL_CONST(0.000000171982641),

393 
REAL_CONST
(0.000000000000000)

396 
ªÆ_t
 
	$föd_log2_Q∂us1
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
k
, uöt8_à
l
, uöt8_à
ch
)

399 i‡(
sbr
->
bs_cou∂ög
 == 1)

401 i‡((
sbr
->
Q
[0][
k
][
l
] >= 0) && (sbr->Q[0][k][l] <= 30) &&

402 (
sbr
->
Q
[1][
k
][
l
] >= 0) && (sbr->Q[1][k][l] <= 24))

404 i‡(
ch
 == 0)

406  
log_Q∂us1_∑n
[
sbr
->
Q
[0][
k
][
l
]][sbr->Q[1][k][l] >> 1];

408  
log_Q∂us1_∑n
[
sbr
->
Q
[0][
k
][
l
]][12 - (sbr->Q[1][k][l] >> 1)];

414 i‡(
sbr
->
Q
[
ch
][
k
][
l
] >= 0 && sbr->Q[ch][k][l] <= 30)

416  
log_Q∂us1
[
sbr
->
Q
[
ch
][
k
][
l
]];

421 
	}
}

423 
	$ˇlcuœã_gaö
(
sbr_öfo
 *
sbr
, 
sbr_hÁdj_öfo
 *
adj
, 
uöt8_t
 
ch
)

426 
ªÆ_t
 
limGaö
[] = {

427 
	`REAL_CONST
(-1.0), REAL_CONST(0.0), REAL_CONST(1.0), REAL_CONST(33.219)

429 
uöt8_t
 
m
, 
l
, 
k
;

431 
uöt8_t
 
cuºít_t_noi£_b™d
 = 0;

432 
uöt8_t
 
S_m≠≥d
;

434 
ALIGN
 
ªÆ_t
 
Q_M_lim
[
MAX_M
];

435 
ALIGN
 
ªÆ_t
 
G_lim
[
MAX_M
];

436 
ALIGN
 
ªÆ_t
 
G_boo°
;

437 
ALIGN
 
ªÆ_t
 
S_M
[
MAX_M
];

440 
l
 = 0;Ü < 
sbr
->
L_E
[
ch
];Ü++)

442 
uöt8_t
 
cuºít_f_noi£_b™d
 = 0;

443 
uöt8_t
 
cuºít_ªs_b™d
 = 0;

444 
uöt8_t
 
cuºít_ªs_b™d2
 = 0;

445 
uöt8_t
 
cuºít_hi_ªs_b™d
 = 0;

447 
ªÆ_t
 
dñè
 = (
l
 =
sbr
->
l_A
[
ch
] ||Ü =sbr->
¥evEnvIsSh‹t
[ch]) ? 0 : 1;

449 
S_m≠≥d
 = 
	`gë_S_m≠≥d
(
sbr
, 
ch
, 
l
, 
cuºít_ªs_b™d2
);

451 i‡(
sbr
->
t_E
[
ch
][
l
+1] > sbr->
t_Q
[ch][
cuºít_t_noi£_b™d
+1])

453 
cuºít_t_noi£_b™d
++;

456 
k
 = 0; k < 
sbr
->
N_L
[sbr->
bs_limôî_b™ds
]; k++)

458 
ªÆ_t
 
Q_M
 = 0;

459 
ªÆ_t
 
G_max
;

460 
ªÆ_t
 
dí
 = 0;

461 
ªÆ_t
 
acc1
 = 0;

462 
ªÆ_t
 
acc2
 = 0;

463 
uöt8_t
 
cuºít_ªs_b™d_size
 = 0;

464 
uöt8_t
 
Q_M_size
 = 0;

466 
uöt8_t
 
ml1
, 
ml2
;

469 
ml1
 = 
sbr
->
f_èbÀ_lim
[sbr->
bs_limôî_b™ds
][
k
];

470 
ml2
 = 
sbr
->
f_èbÀ_lim
[sbr->
bs_limôî_b™ds
][
k
+1];

474 
m
 = 
ml1
; m < 
ml2
; m++)

476 i‡((
m
 + 
sbr
->
kx
Ë< sbr->
f_èbÀ_ªs
[sbr->
f
[
ch
][
l
]][
cuºít_ªs_b™d
+1])

478 
cuºít_ªs_b™d_size
++;

480 
acc1
 +
	`pow2_öt
(-
	`REAL_CONST
(10Ë+ 
log2_öt_èb
[
cuºít_ªs_b™d_size
] + 
	`föd_log2_E
(
sbr
, 
cuºít_ªs_b™d
, 
l
, 
ch
));

482 
cuºít_ªs_b™d
++;

483 
cuºít_ªs_b™d_size
 = 1;

486 
acc2
 +
sbr
->
E_cuº
[
ch
][
m
][
l
];

488 
acc1
 +
	`pow2_öt
(-
	`REAL_CONST
(10Ë+ 
log2_öt_èb
[
cuºít_ªs_b™d_size
] + 
	`föd_log2_E
(
sbr
, 
cuºít_ªs_b™d
, 
l
, 
ch
));

491 i‡(
acc1
 == 0)

492 
acc1
 = 
LOG2_MIN_INF
;

494 
acc1
 = 
	`log2_öt
(acc1);

501 
G_max
 = 
acc1
 - 
	`log2_öt
(
acc2
Ë+ 
limGaö
[
sbr
->
bs_limôî_gaös
];

502 
G_max
 = 
	`mö
(G_max, 
limGaö
[3]);

505 
m
 = 
ml1
; m < 
ml2
; m++)

507 
ªÆ_t
 
G
;

508 
ªÆ_t
 
E_cuº
, 
E_‹ig
;

509 
ªÆ_t
 
Q_‹ig
, 
Q_‹ig_∂us1
;

510 
uöt8_t
 
S_ödex_m≠≥d
;

514 i‡((
m
 + 
sbr
->
kx
Ë=sbr->
f_èbÀ_noi£
[
cuºít_f_noi£_b™d
+1])

517 
cuºít_f_noi£_b™d
++;

522 i‡((
m
 + 
sbr
->
kx
Ë=sbr->
f_èbÀ_ªs
[sbr->
f
[
ch
][
l
]][
cuºít_ªs_b™d2
+1])

525 i‡(
Q_M_size
 > 0)

526 
dí
 +
	`pow2_öt
(
log2_öt_èb
[
Q_M_size
] + 
Q_M
);

527 
Q_M_size
 = 0;

530 
cuºít_ªs_b™d2
++;

535 
S_m≠≥d
 = 
	`gë_S_m≠≥d
(
sbr
, 
ch
, 
l
, 
cuºít_ªs_b™d2
);

540 i‡((
m
 + 
sbr
->
kx
Ë=sbr->
f_èbÀ_ªs
[
HI_RES
][
cuºít_hi_ªs_b™d
+1])

543 
cuºít_hi_ªs_b™d
++;

551 
S_ödex_m≠≥d
 = 0;

552 i‡((
l
 >
sbr
->
l_A
[
ch
]) ||

553 (
sbr
->
bs_add_h¨m⁄ic_¥ev
[
ch
][
cuºít_hi_ªs_b™d
] && sbr->
bs_add_h¨m⁄ic_Êag_¥ev
[ch]))

556 i‡((
m
 + 
sbr
->
kx
Ë=(sbr->
f_èbÀ_ªs
[
HI_RES
][
cuºít_hi_ªs_b™d
+1] + sbr->f_table_res[HI_RES][current_hi_res_band]) >> 1)

557 
S_ödex_m≠≥d
 = 
sbr
->
bs_add_h¨m⁄ic
[
ch
][
cuºít_hi_ªs_b™d
];

562 i‡(
sbr
->
E_cuº
[
ch
][
m
][
l
] == 0)

563 
E_cuº
 = 
LOG2_MIN_INF
;

565 
E_cuº
 = 
	`log2_öt
(
sbr
->E_cuº[
ch
][
m
][
l
]);

566 
E_‹ig
 = -
	`REAL_CONST
(10Ë+ 
	`föd_log2_E
(
sbr
, 
cuºít_ªs_b™d2
, 
l
, 
ch
);

569 
Q_‹ig
 = 
	`föd_log2_Q
(
sbr
, 
cuºít_f_noi£_b™d
, 
cuºít_t_noi£_b™d
, 
ch
);

570 
Q_‹ig_∂us1
 = 
	`föd_log2_Q∂us1
(
sbr
, 
cuºít_f_noi£_b™d
, 
cuºít_t_noi£_b™d
, 
ch
);

577 
Q_M
 = 
E_‹ig
 + 
Q_‹ig
 - 
Q_‹ig_∂us1
;

583 i‡(
S_ödex_m≠≥d
 == 0)

585 
S_M
[
m
] = 
LOG2_MIN_INF
;

587 
S_M
[
m
] = 
E_‹ig
 - 
Q_‹ig_∂us1
;

590 
dí
 +
	`pow2_öt
(
S_M
[
m
]);

600 
G
 = 
E_‹ig
 - 
	`max
(-
	`REAL_CONST
(10), 
E_cuº
);

601 i‡((
S_m≠≥d
 =0Ë&& (
dñè
 == 1))

604 
G
 -
Q_‹ig_∂us1
;

605 } i‡(
S_m≠≥d
 == 1) {

607 
G
 +
Q_‹ig
 - 
Q_‹ig_∂us1
;

613 i‡(
G_max
 > 
G
)

615 
Q_M_lim
[
m
] = 
Q_M
;

616 
G_lim
[
m
] = 
G
;

618 i‡((
S_ödex_m≠≥d
 =0Ë&& (
l
 !
sbr
->
l_A
[
ch
]))

620 
Q_M_size
++;

624 
Q_M_lim
[
m
] = 
Q_M
 + 
G_max
 - 
G
;

625 
G_lim
[
m
] = 
G_max
;

628 i‡((
S_ödex_m≠≥d
 =0Ë&& (
l
 !
sbr
->
l_A
[
ch
]))

630 
dí
 +
	`pow2_öt
(
Q_M_lim
[
m
]);

637 
dí
 +
	`pow2_öt
(
E_cuº
 + 
G_lim
[
m
]);

641 i‡(
Q_M_size
 > 0)

643 
dí
 +
	`pow2_öt
(
log2_öt_èb
[
Q_M_size
] + 
Q_M
);

649 
G_boo°
 = 
acc1
 - 
	`log2_öt
(
dí
 );

650 
G_boo°
 = 
	`mö
(G_boo°, 
	`REAL_CONST
(1.328771237) );

653 
m
 = 
ml1
; m < 
ml2
; m++)

656 #i‚de‡
SBR_LOW_POWER


657 
adj
->
G_lim_boo°
[
l
][
m
] = 
	`pow2_fix
((
G_lim
[m] + 
G_boo°
) >> 1);

662 
adj
->
G_lim_boo°
[
l
][
m
] = 
	`pow2_fix
(
G_lim
[m] + 
G_boo°
);

664 
adj
->
Q_M_lim_boo°
[
l
][
m
] = 
	`pow2_fix
((
Q_M_lim
[m] + 
G_boo°
) >> 1);

666 i‡(
S_M
[
m
] !
LOG2_MIN_INF
)

668 
adj
->
S_M_boo°
[
l
][
m
] = 
	`pow2_öt
((
S_M
[m] + 
G_boo°
) >> 1);

670 
adj
->
S_M_boo°
[
l
][
m
] = 0;

675 
	}
}

681 #ifde‡
LOG2_TEST


683 
	#LOG2_MIN_INF
 -100000

	)

685 
__ölöe
 
	$pow2
(
vÆ
)

687  
	`pow
(2.0, 
vÆ
);

688 
	}
}

689 
__ölöe
 
	$log2
(
vÆ
)

691  
	`log
(
vÆ
)/log(2.0);

692 
	}
}

694 
	#RB
 14

	)

696 
	$QUANTISE2REAL
(
vÆ
)

698 
__öt32
 
ivÆ
 = (__öt32)(
vÆ
 * (1<<
RB
));

699  ()
ivÆ
 / ()((1<<
RB
));

700 
	}
}

702 
	$QUANTISE2INT
(
vÆ
)

704  
	`Êo‹
(
vÆ
);

705 
	}
}

708 c⁄° 
ªÆ_t
 
	glog2_öt_èb
[] = {

709 
LOG2_MIN_INF
, 0.000000000000000, 1.000000000000000, 1.584962500721156,

727 c⁄° 
ªÆ_t
 
	g∑n_log2_èb
[] = {

734 
ªÆ_t
 
	$föd_log2_E
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
k
, uöt8_à
l
, uöt8_à
ch
)

737 i‡(
sbr
->
bs_cou∂ög
 == 1)

739 
ªÆ_t
 
amp0
 = (
sbr
->
amp_ªs
[0]) ? 1.0 : 0.5;

740 
ªÆ_t
 
amp1
 = (
sbr
->
amp_ªs
[1]) ? 1.0 : 0.5;

741 
tmp
 = 
	`QUANTISE2REAL
(7.0 + (
ªÆ_t
)
sbr
->
E
[0][
k
][
l
] * 
amp0
);

742 
∑n
;

744 
E
 = ()(
sbr
->E[1][
k
][
l
] * 
amp1
);

746 i‡(
ch
 == 0)

748 i‡(
E
 > 12)

751 
∑n
 = 
	`QUANTISE2REAL
(
∑n_log2_èb
[-12 + 
E
]);

754 
∑n
 = 
	`QUANTISE2REAL
(
∑n_log2_èb
[12 - 
E
] + (12 - E));

757 i‡(
E
 < 12)

760 
∑n
 = 
	`QUANTISE2REAL
(
∑n_log2_èb
[-
E
 + 12]);

763 
∑n
 = 
	`QUANTISE2REAL
(
∑n_log2_èb
[
E
 - 12] + (E - 12));

768  
	`QUANTISE2REAL
(
tmp
 - 
∑n
);

770 
ªÆ_t
 
amp
 = (
sbr
->
amp_ªs
[
ch
]) ? 1.0 : 0.5;

772  
	`QUANTISE2REAL
(6.0 + (
ªÆ_t
)
sbr
->
E
[
ch
][
k
][
l
] * 
amp
);

774 
	}
}

776 
ªÆ_t
 
	$föd_log2_Q
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
k
, uöt8_à
l
, uöt8_à
ch
)

779 i‡(
sbr
->
bs_cou∂ög
 == 1)

781 
tmp
 = 
	`QUANTISE2REAL
(7.0 - (
ªÆ_t
)
sbr
->
Q
[0][
k
][
l
]);

782 
∑n
;

784 
Q
 = ()(
sbr
->Q[1][
k
][
l
]);

786 i‡(
ch
 == 0)

788 i‡(
Q
 > 12)

791 
∑n
 = 
	`QUANTISE2REAL
(
∑n_log2_èb
[-12 + 
Q
]);

794 
∑n
 = 
	`QUANTISE2REAL
(
∑n_log2_èb
[12 - 
Q
] + (12 - Q));

797 i‡(
Q
 < 12)

800 
∑n
 = 
	`QUANTISE2REAL
(
∑n_log2_èb
[-
Q
 + 12]);

803 
∑n
 = 
	`QUANTISE2REAL
(
∑n_log2_èb
[
Q
 - 12] + (Q - 12));

808  
	`QUANTISE2REAL
(
tmp
 - 
∑n
);

810  
	`QUANTISE2REAL
(6.0 - (
ªÆ_t
)
sbr
->
Q
[
ch
][
k
][
l
]);

812 
	}
}

814 c⁄° 
ªÆ_t
 
	glog_Q∂us1_∑n
[31][13] = {

815 { 
REAL_CONST
(0.044383447617292), REAL_CONST(0.169768601655960), REAL_CONST(0.583090126514435), REAL_CONST(1.570089221000671), REAL_CONST(3.092446088790894), REAL_CONST(4.733354568481445), REAL_CONST(6.022367954254150), REAL_CONST(6.692092418670654), REAL_CONST(6.924463272094727), REAL_CONST(6.989034175872803), REAL_CONST(7.005646705627441), REAL_CONST(7.009829998016357), REAL_CONST(7.010877609252930) },

816 { 
REAL_CONST
(0.022362394258380), REAL_CONST(0.087379962205887), REAL_CONST(0.320804953575134), REAL_CONST(0.988859415054321), REAL_CONST(2.252387046813965), REAL_CONST(3.786596298217773), REAL_CONST(5.044394016265869), REAL_CONST(5.705977916717529), REAL_CONST(5.936291694641113), REAL_CONST(6.000346660614014), REAL_CONST(6.016829967498779), REAL_CONST(6.020981311798096), REAL_CONST(6.022020816802979) },

817 { 
REAL_CONST
(0.011224525049329), REAL_CONST(0.044351425021887), REAL_CONST(0.169301137328148), REAL_CONST(0.577544987201691), REAL_CONST(1.527246952056885), REAL_CONST(2.887525320053101), REAL_CONST(4.087462902069092), REAL_CONST(4.733354568481445), REAL_CONST(4.959661006927490), REAL_CONST(5.022709369659424), REAL_CONST(5.038940429687500), REAL_CONST(5.043028831481934), REAL_CONST(5.044052600860596) },

818 { 
REAL_CONST
(0.005623178556561), REAL_CONST(0.022346137091517), REAL_CONST(0.087132595479488), REAL_CONST(0.317482173442841), REAL_CONST(0.956931233406067), REAL_CONST(2.070389270782471), REAL_CONST(3.169924974441528), REAL_CONST(3.786596298217773), REAL_CONST(4.005294322967529), REAL_CONST(4.066420555114746), REAL_CONST(4.082170009613037), REAL_CONST(4.086137294769287), REAL_CONST(4.087131500244141) },

819 { 
REAL_CONST
(0.002814328996465), REAL_CONST(0.011216334067285), REAL_CONST(0.044224001467228), REAL_CONST(0.167456731200218), REAL_CONST(0.556393325328827), REAL_CONST(1.378511548042297), REAL_CONST(2.321928024291992), REAL_CONST(2.887525320053101), REAL_CONST(3.092446088790894), REAL_CONST(3.150059700012207), REAL_CONST(3.164926528930664), REAL_CONST(3.168673276901245), REAL_CONST(3.169611930847168) },

820 { 
REAL_CONST
(0.001407850766554), REAL_CONST(0.005619067233056), REAL_CONST(0.022281449288130), REAL_CONST(0.086156636476517), REAL_CONST(0.304854571819305), REAL_CONST(0.847996890544891), REAL_CONST(1.584962487220764), REAL_CONST(2.070389270782471), REAL_CONST(2.252387046813965), REAL_CONST(2.304061651229858), REAL_CONST(2.317430257797241), REAL_CONST(2.320801734924316), REAL_CONST(2.321646213531494) },

821 { 
REAL_CONST
(0.000704097095877), REAL_CONST(0.002812269143760), REAL_CONST(0.011183738708496), REAL_CONST(0.043721374124289), REAL_CONST(0.160464659333229), REAL_CONST(0.485426813364029), REAL_CONST(1.000000000000000), REAL_CONST(1.378511548042297), REAL_CONST(1.527246952056885), REAL_CONST(1.570089221000671), REAL_CONST(1.581215262413025), REAL_CONST(1.584023833274841), REAL_CONST(1.584727644920349) },

822 { 
REAL_CONST
(0.000352177477907), REAL_CONST(0.001406819908880), REAL_CONST(0.005602621007711), REAL_CONST(0.022026389837265), REAL_CONST(0.082462236285210), REAL_CONST(0.263034462928772), REAL_CONST(0.584962487220764), REAL_CONST(0.847996890544891), REAL_CONST(0.956931233406067), REAL_CONST(0.988859415054321), REAL_CONST(0.997190535068512), REAL_CONST(0.999296069145203), REAL_CONST(0.999823868274689) },

823 { 
REAL_CONST
(0.000176099492819), REAL_CONST(0.000703581434209), REAL_CONST(0.002804030198604), REAL_CONST(0.011055230163038), REAL_CONST(0.041820213198662), REAL_CONST(0.137503549456596), REAL_CONST(0.321928083896637), REAL_CONST(0.485426813364029), REAL_CONST(0.556393325328827), REAL_CONST(0.577544987201691), REAL_CONST(0.583090126514435), REAL_CONST(0.584493279457092), REAL_CONST(0.584845066070557) },

824 { 
REAL_CONST
(0.000088052431238), REAL_CONST(0.000351833587047), REAL_CONST(0.001402696361765), REAL_CONST(0.005538204684854), REAL_CONST(0.021061634644866), REAL_CONST(0.070389263331890), REAL_CONST(0.169925004243851), REAL_CONST(0.263034462928772), REAL_CONST(0.304854571819305), REAL_CONST(0.317482173442841), REAL_CONST(0.320804953575134), REAL_CONST(0.321646571159363), REAL_CONST(0.321857661008835) },

825 { 
REAL_CONST
(0.000044026888645), REAL_CONST(0.000175927518285), REAL_CONST(0.000701518612914), REAL_CONST(0.002771759871393), REAL_CONST(0.010569252073765), REAL_CONST(0.035623874515295), REAL_CONST(0.087462842464447), REAL_CONST(0.137503549456596), REAL_CONST(0.160464659333229), REAL_CONST(0.167456731200218), REAL_CONST(0.169301137328148), REAL_CONST(0.169768601655960), REAL_CONST(0.169885858893394) },

826 { 
REAL_CONST
(0.000022013611670), REAL_CONST(0.000088052431238), REAL_CONST(0.000350801943569), REAL_CONST(0.001386545598507), REAL_CONST(0.005294219125062), REAL_CONST(0.017921976745129), REAL_CONST(0.044394120573997), REAL_CONST(0.070389263331890), REAL_CONST(0.082462236285210), REAL_CONST(0.086156636476517), REAL_CONST(0.087132595479488), REAL_CONST(0.087379962205887), REAL_CONST(0.087442122399807) },

827 { 
REAL_CONST
(0.000011006847672), REAL_CONST(0.000044026888645), REAL_CONST(0.000175411638338), REAL_CONST(0.000693439331371), REAL_CONST(0.002649537986144), REAL_CONST(0.008988817222416), REAL_CONST(0.022367812693119), REAL_CONST(0.035623874515295), REAL_CONST(0.041820213198662), REAL_CONST(0.043721374124289), REAL_CONST(0.044224001467228), REAL_CONST(0.044351425021887), REAL_CONST(0.044383447617292) },

828 { 
REAL_CONST
(0.000005503434295), REAL_CONST(0.000022013611670), REAL_CONST(0.000087708482170), REAL_CONST(0.000346675369656), REAL_CONST(0.001325377263129), REAL_CONST(0.004501323681325), REAL_CONST(0.011227255687118), REAL_CONST(0.017921976745129), REAL_CONST(0.021061634644866), REAL_CONST(0.022026389837265), REAL_CONST(0.022281449288130), REAL_CONST(0.022346137091517), REAL_CONST(0.022362394258380) },

829 { 
REAL_CONST
(0.000002751719876), REAL_CONST(0.000011006847672), REAL_CONST(0.000043854910473), REAL_CONST(0.000173348103999), REAL_CONST(0.000662840844598), REAL_CONST(0.002252417383716), REAL_CONST(0.005624548997730), REAL_CONST(0.008988817222416), REAL_CONST(0.010569252073765), REAL_CONST(0.011055230163038), REAL_CONST(0.011183738708496), REAL_CONST(0.011216334067285), REAL_CONST(0.011224525049329) },

830 { 
REAL_CONST
(0.000001375860506), REAL_CONST(0.000005503434295), REAL_CONST(0.000022013611670), REAL_CONST(0.000086676649516), REAL_CONST(0.000331544462824), REAL_CONST(0.001126734190620), REAL_CONST(0.002815015614033), REAL_CONST(0.004501323681325), REAL_CONST(0.005294219125062), REAL_CONST(0.005538204684854), REAL_CONST(0.005602621007711), REAL_CONST(0.005619067233056), REAL_CONST(0.005623178556561) },

831 { 
REAL_CONST
(0.000000687930424), REAL_CONST(0.000002751719876), REAL_CONST(0.000011006847672), REAL_CONST(0.000043338975956), REAL_CONST(0.000165781748365), REAL_CONST(0.000563477107789), REAL_CONST(0.001408194424585), REAL_CONST(0.002252417383716), REAL_CONST(0.002649537986144), REAL_CONST(0.002771759871393), REAL_CONST(0.002804030198604), REAL_CONST(0.002812269143760), REAL_CONST(0.002814328996465) },

832 { 
REAL_CONST
(0.000000343965269), REAL_CONST(0.000001375860506), REAL_CONST(0.000005503434295), REAL_CONST(0.000021669651687), REAL_CONST(0.000082893253420), REAL_CONST(0.000281680084299), REAL_CONST(0.000704268983100), REAL_CONST(0.001126734190620), REAL_CONST(0.001325377263129), REAL_CONST(0.001386545598507), REAL_CONST(0.001402696361765), REAL_CONST(0.001406819908880), REAL_CONST(0.001407850766554) },

833 { 
REAL_CONST
(0.000000171982634), REAL_CONST(0.000000687930424), REAL_CONST(0.000002751719876), REAL_CONST(0.000010834866771), REAL_CONST(0.000041447223339), REAL_CONST(0.000140846910654), REAL_CONST(0.000352177477907), REAL_CONST(0.000563477107789), REAL_CONST(0.000662840844598), REAL_CONST(0.000693439331371), REAL_CONST(0.000701518612914), REAL_CONST(0.000703581434209), REAL_CONST(0.000704097095877) },

834 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000343965269), REAL_CONST(0.000001375860506), REAL_CONST(0.000005503434295), REAL_CONST(0.000020637769921), REAL_CONST(0.000070511166996), REAL_CONST(0.000176099492819), REAL_CONST(0.000281680084299), REAL_CONST(0.000331544462824), REAL_CONST(0.000346675369656), REAL_CONST(0.000350801943569), REAL_CONST(0.000351833587047), REAL_CONST(0.000352177477907) },

835 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000171982634), REAL_CONST(0.000000687930424), REAL_CONST(0.000002751719876), REAL_CONST(0.000010318922250), REAL_CONST(0.000035256012779), REAL_CONST(0.000088052431238), REAL_CONST(0.000140846910654), REAL_CONST(0.000165781748365), REAL_CONST(0.000173348103999), REAL_CONST(0.000175411638338), REAL_CONST(0.000175927518285), REAL_CONST(0.000176099492819) },

836 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000343965269), REAL_CONST(0.000001375860506), REAL_CONST(0.000005159470220), REAL_CONST(0.000017542124624), REAL_CONST(0.000044026888645), REAL_CONST(0.000070511166996), REAL_CONST(0.000082893253420), REAL_CONST(0.000086676649516), REAL_CONST(0.000087708482170), REAL_CONST(0.000088052431238), REAL_CONST(0.000088052431238) },

837 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000171982634), REAL_CONST(0.000000687930424), REAL_CONST(0.000002579737384), REAL_CONST(0.000008771088687), REAL_CONST(0.000022013611670), REAL_CONST(0.000035256012779), REAL_CONST(0.000041447223339), REAL_CONST(0.000043338975956), REAL_CONST(0.000043854910473), REAL_CONST(0.000044026888645), REAL_CONST(0.000044026888645) },

838 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000343965269), REAL_CONST(0.000001375860506), REAL_CONST(0.000004471542070), REAL_CONST(0.000011006847672), REAL_CONST(0.000017542124624), REAL_CONST(0.000020637769921), REAL_CONST(0.000021669651687), REAL_CONST(0.000022013611670), REAL_CONST(0.000022013611670), REAL_CONST(0.000022013611670) },

839 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000171982634), REAL_CONST(0.000000687930424), REAL_CONST(0.000002235772627), REAL_CONST(0.000005503434295), REAL_CONST(0.000008771088687), REAL_CONST(0.000010318922250), REAL_CONST(0.000010834866771), REAL_CONST(0.000011006847672), REAL_CONST(0.000011006847672), REAL_CONST(0.000011006847672) },

840 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000343965269), REAL_CONST(0.000001031895522), REAL_CONST(0.000002751719876), REAL_CONST(0.000004471542070), REAL_CONST(0.000005159470220), REAL_CONST(0.000005503434295), REAL_CONST(0.000005503434295), REAL_CONST(0.000005503434295), REAL_CONST(0.000005503434295) },

841 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000171982634), REAL_CONST(0.000000515947875), REAL_CONST(0.000001375860506), REAL_CONST(0.000002235772627), REAL_CONST(0.000002579737384), REAL_CONST(0.000002751719876), REAL_CONST(0.000002751719876), REAL_CONST(0.000002751719876), REAL_CONST(0.000002751719876) },

842 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000343965269), REAL_CONST(0.000000687930424), REAL_CONST(0.000001031895522), REAL_CONST(0.000001375860506), REAL_CONST(0.000001375860506), REAL_CONST(0.000001375860506), REAL_CONST(0.000001375860506), REAL_CONST(0.000001375860506) },

843 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000171982634), REAL_CONST(0.000000343965269), REAL_CONST(0.000000515947875), REAL_CONST(0.000000687930424), REAL_CONST(0.000000687930424), REAL_CONST(0.000000687930424), REAL_CONST(0.000000687930424), REAL_CONST(0.000000687930424) },

844 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000171982634), REAL_CONST(0.000000343965269), REAL_CONST(0.000000343965269), REAL_CONST(0.000000343965269), REAL_CONST(0.000000343965269), REAL_CONST(0.000000343965269), REAL_CONST(0.000000343965269) },

845 { 
REAL_CONST
(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000000000000), REAL_CONST(0.000000171982634), REAL_CONST(0.000000171982634), REAL_CONST(0.000000171982634), REAL_CONST(0.000000171982634), REAL_CONST(0.000000171982634), REAL_CONST(0.000000171982634) }

848 c⁄° 
ªÆ_t
 
	glog_Q∂us1
[31] = {

849 
REAL_CONST
(6.022367813028454), REAL_CONST(5.044394119358453), REAL_CONST(4.087462841250339),

850 
REAL_CONST
(3.169925001442313), REAL_CONST(2.321928094887362), REAL_CONST(1.584962500721156),

851 
REAL_CONST
(1.000000000000000), REAL_CONST(0.584962500721156), REAL_CONST(0.321928094887362),

852 
REAL_CONST
(0.169925001442312), REAL_CONST(0.087462841250339), REAL_CONST(0.044394119358453),

853 
REAL_CONST
(0.022367813028455), REAL_CONST(0.011227255423254), REAL_CONST(0.005624549193878),

854 
REAL_CONST
(0.002815015607054), REAL_CONST(0.001408194392808), REAL_CONST(0.000704269011247),

855 
REAL_CONST
(0.000352177480301), REAL_CONST(0.000176099486443), REAL_CONST(0.000088052430122),

856 
REAL_CONST
(0.000044026886827), REAL_CONST(0.000022013611360), REAL_CONST(0.000011006847667),

857 
REAL_CONST
(0.000005503434331), REAL_CONST(0.000002751719790), REAL_CONST(0.000001375860551),

858 
REAL_CONST
(0.000000687930439), REAL_CONST(0.000000343965261), REAL_CONST(0.000000171982641),

859 
REAL_CONST
(0.000000000000000)

862 
ªÆ_t
 
	$föd_log2_Q∂us1
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
k
, uöt8_à
l
, uöt8_à
ch
)

865 i‡(
sbr
->
bs_cou∂ög
 == 1)

867 i‡((
sbr
->
Q
[0][
k
][
l
] >= 0) && (sbr->Q[0][k][l] <= 30) &&

868 (
sbr
->
Q
[1][
k
][
l
] >= 0) && (sbr->Q[1][k][l] <= 24))

870 i‡(
ch
 == 0)

872  
	`QUANTISE2REAL
(
log_Q∂us1_∑n
[
sbr
->
Q
[0][
k
][
l
]][sbr->Q[1][k][l] >> 1]);

874  
	`QUANTISE2REAL
(
log_Q∂us1_∑n
[
sbr
->
Q
[0][
k
][
l
]][12 - (sbr->Q[1][k][l] >> 1)]);

880 i‡(
sbr
->
Q
[
ch
][
k
][
l
] >= 0 && sbr->Q[ch][k][l] <= 30)

882  
	`QUANTISE2REAL
(
log_Q∂us1
[
sbr
->
Q
[
ch
][
k
][
l
]]);

887 
	}
}

889 
	$ˇlcuœã_gaö
(
sbr_öfo
 *
sbr
, 
sbr_hÁdj_öfo
 *
adj
, 
uöt8_t
 
ch
)

892 
ªÆ_t
 
limGaö
[] = { -1.0, 0.0, 1.0, 33.219 };

893 
uöt8_t
 
m
, 
l
, 
k
;

895 
uöt8_t
 
cuºít_t_noi£_b™d
 = 0;

896 
uöt8_t
 
S_m≠≥d
;

898 
ALIGN
 
ªÆ_t
 
Q_M_lim
[
MAX_M
];

899 
ALIGN
 
ªÆ_t
 
G_lim
[
MAX_M
];

900 
ALIGN
 
ªÆ_t
 
G_boo°
;

901 
ALIGN
 
ªÆ_t
 
S_M
[
MAX_M
];

904 
l
 = 0;Ü < 
sbr
->
L_E
[
ch
];Ü++)

906 
uöt8_t
 
cuºít_f_noi£_b™d
 = 0;

907 
uöt8_t
 
cuºít_ªs_b™d
 = 0;

908 
uöt8_t
 
cuºít_ªs_b™d2
 = 0;

909 
uöt8_t
 
cuºít_hi_ªs_b™d
 = 0;

911 
ªÆ_t
 
dñè
 = (
l
 =
sbr
->
l_A
[
ch
] ||Ü =sbr->
¥evEnvIsSh‹t
[ch]) ? 0 : 1;

913 
S_m≠≥d
 = 
	`gë_S_m≠≥d
(
sbr
, 
ch
, 
l
, 
cuºít_ªs_b™d2
);

915 i‡(
sbr
->
t_E
[
ch
][
l
+1] > sbr->
t_Q
[ch][
cuºít_t_noi£_b™d
+1])

917 
cuºít_t_noi£_b™d
++;

920 
k
 = 0; k < 
sbr
->
N_L
[sbr->
bs_limôî_b™ds
]; k++)

922 
ªÆ_t
 
Q_M
 = 0;

923 
ªÆ_t
 
G_max
;

924 
ªÆ_t
 
dí
 = 0;

925 
ªÆ_t
 
acc1
 = 0;

926 
ªÆ_t
 
acc2
 = 0;

927 
uöt8_t
 
cuºít_ªs_b™d_size
 = 0;

928 
uöt8_t
 
Q_M_size
 = 0;

930 
uöt8_t
 
ml1
, 
ml2
;

933 
ml1
 = 
sbr
->
f_èbÀ_lim
[sbr->
bs_limôî_b™ds
][
k
];

934 
ml2
 = 
sbr
->
f_èbÀ_lim
[sbr->
bs_limôî_b™ds
][
k
+1];

938 
m
 = 
ml1
; m < 
ml2
; m++)

940 i‡((
m
 + 
sbr
->
kx
Ë< sbr->
f_èbÀ_ªs
[sbr->
f
[
ch
][
l
]][
cuºít_ªs_b™d
+1])

942 
cuºít_ªs_b™d_size
++;

944 
acc1
 +
	`QUANTISE2INT
(
	`pow2
(-10 + 
log2_öt_èb
[
cuºít_ªs_b™d_size
] + 
	`föd_log2_E
(
sbr
, 
cuºít_ªs_b™d
, 
l
, 
ch
)));

946 
cuºít_ªs_b™d
++;

947 
cuºít_ªs_b™d_size
 = 1;

950 
acc2
 +
	`QUANTISE2INT
(
sbr
->
E_cuº
[
ch
][
m
][
l
]/1024.0);

952 
acc1
 +
	`QUANTISE2INT
(
	`pow2
(-10 + 
log2_öt_èb
[
cuºít_ªs_b™d_size
] + 
	`föd_log2_E
(
sbr
, 
cuºít_ªs_b™d
, 
l
, 
ch
)));

954 
acc1
 = 
	`QUANTISE2REAL
–
	`log2
(
EPS
 +ácc1) );

961 
G_max
 = 
acc1
 - 
	`QUANTISE2REAL
(
	`log2
(
EPS
 + 
acc2
)Ë+ QUANTISE2REAL(
limGaö
[
sbr
->
bs_limôî_gaös
]);

962 
G_max
 = 
	`mö
(G_max, 
	`QUANTISE2REAL
(
limGaö
[3]));

965 
m
 = 
ml1
; m < 
ml2
; m++)

967 
ªÆ_t
 
G
;

968 
ªÆ_t
 
E_cuº
, 
E_‹ig
;

969 
ªÆ_t
 
Q_‹ig
, 
Q_‹ig_∂us1
;

970 
uöt8_t
 
S_ödex_m≠≥d
;

974 i‡((
m
 + 
sbr
->
kx
Ë=sbr->
f_èbÀ_noi£
[
cuºít_f_noi£_b™d
+1])

977 
cuºít_f_noi£_b™d
++;

982 i‡((
m
 + 
sbr
->
kx
Ë=sbr->
f_èbÀ_ªs
[sbr->
f
[
ch
][
l
]][
cuºít_ªs_b™d2
+1])

985 i‡(
Q_M_size
 > 0)

986 
dí
 +
	`QUANTISE2INT
(
	`pow2
(
log2_öt_èb
[
Q_M_size
] + 
Q_M
));

987 
Q_M_size
 = 0;

990 
cuºít_ªs_b™d2
++;

995 
S_m≠≥d
 = 
	`gë_S_m≠≥d
(
sbr
, 
ch
, 
l
, 
cuºít_ªs_b™d2
);

1000 i‡((
m
 + 
sbr
->
kx
Ë=sbr->
f_èbÀ_ªs
[
HI_RES
][
cuºít_hi_ªs_b™d
+1])

1003 
cuºít_hi_ªs_b™d
++;

1011 
S_ödex_m≠≥d
 = 0;

1012 i‡((
l
 >
sbr
->
l_A
[
ch
]) ||

1013 (
sbr
->
bs_add_h¨m⁄ic_¥ev
[
ch
][
cuºít_hi_ªs_b™d
] && sbr->
bs_add_h¨m⁄ic_Êag_¥ev
[ch]))

1016 i‡((
m
 + 
sbr
->
kx
Ë=(sbr->
f_èbÀ_ªs
[
HI_RES
][
cuºít_hi_ªs_b™d
+1] + sbr->f_table_res[HI_RES][current_hi_res_band]) >> 1)

1017 
S_ödex_m≠≥d
 = 
sbr
->
bs_add_h¨m⁄ic
[
ch
][
cuºít_hi_ªs_b™d
];

1022 i‡(
sbr
->
E_cuº
[
ch
][
m
][
l
] == 0)

1023 
E_cuº
 = 
LOG2_MIN_INF
;

1025 
E_cuº
 = -10 + 
	`log2
(
sbr
->E_cuº[
ch
][
m
][
l
]);

1026 
E_‹ig
 = -10 + 
	`föd_log2_E
(
sbr
, 
cuºít_ªs_b™d2
, 
l
, 
ch
);

1028 
Q_‹ig
 = 
	`föd_log2_Q
(
sbr
, 
cuºít_f_noi£_b™d
, 
cuºít_t_noi£_b™d
, 
ch
);

1029 
Q_‹ig_∂us1
 = 
	`föd_log2_Q∂us1
(
sbr
, 
cuºít_f_noi£_b™d
, 
cuºít_t_noi£_b™d
, 
ch
);

1036 
Q_M
 = 
E_‹ig
 + 
Q_‹ig
 - 
Q_‹ig_∂us1
;

1042 i‡(
S_ödex_m≠≥d
 == 0)

1044 
S_M
[
m
] = 
LOG2_MIN_INF
;

1046 
S_M
[
m
] = 
E_‹ig
 - 
Q_‹ig_∂us1
;

1049 
dí
 +
	`pow2
(
S_M
[
m
]);

1059 
G
 = 
E_‹ig
 - 
	`max
(-10, 
E_cuº
);

1060 i‡((
S_m≠≥d
 =0Ë&& (
dñè
 == 1))

1063 
G
 -
Q_‹ig_∂us1
;

1064 } i‡(
S_m≠≥d
 == 1) {

1066 
G
 +
Q_‹ig
 - 
Q_‹ig_∂us1
;

1072 i‡(
G_max
 > 
G
)

1074 
Q_M_lim
[
m
] = 
	`QUANTISE2REAL
(
Q_M
);

1075 
G_lim
[
m
] = 
	`QUANTISE2REAL
(
G
);

1077 i‡((
S_ödex_m≠≥d
 =0Ë&& (
l
 !
sbr
->
l_A
[
ch
]))

1079 
Q_M_size
++;

1083 
Q_M_lim
[
m
] = 
	`QUANTISE2REAL
(
Q_M
Ë+ 
G_max
 - QUANTISE2REAL(
G
);

1084 
G_lim
[
m
] = 
G_max
;

1087 i‡((
S_ödex_m≠≥d
 =0Ë&& (
l
 !
sbr
->
l_A
[
ch
]))

1089 
dí
 +
	`QUANTISE2INT
(
	`pow2
(
Q_M_lim
[
m
]));

1096 
dí
 +
	`QUANTISE2INT
(
	`pow2
(
E_cuº
 + 
G_lim
[
m
]));

1100 i‡(
Q_M_size
 > 0)

1102 
dí
 +
	`QUANTISE2INT
(
	`pow2
(
log2_öt_èb
[
Q_M_size
] + 
Q_M
));

1108 
G_boo°
 = 
acc1
 - 
	`QUANTISE2REAL
(
	`log2
(
dí
 + 
EPS
));

1109 
G_boo°
 = 
	`mö
(G_boo°, 
	`QUANTISE2REAL
(1.328771237) );

1112 
m
 = 
ml1
; m < 
ml2
; m++)

1115 #i‚de‡
SBR_LOW_POWER


1116 
adj
->
G_lim_boo°
[
l
][
m
] = 
	`QUANTISE2REAL
(
	`pow2
((
G_lim
[m] + 
G_boo°
) / 2.0));

1121 
adj
->
G_lim_boo°
[
l
][
m
] = 
	`QUANTISE2REAL
(
	`pow2
(
G_lim
[m] + 
G_boo°
));

1123 
adj
->
Q_M_lim_boo°
[
l
][
m
] = 
	`QUANTISE2REAL
(
	`pow2
((
Q_M_lim
[m] + 10 + 
G_boo°
) / 2.0));

1125 i‡(
S_M
[
m
] !
LOG2_MIN_INF
)

1127 
adj
->
S_M_boo°
[
l
][
m
] = 
	`QUANTISE2REAL
(
	`pow2
((
S_M
[m] + 10 + 
G_boo°
) / 2.0));

1129 
adj
->
S_M_boo°
[
l
][
m
] = 0;

1134 
	}
}

1138 
	$ˇlcuœã_gaö
(
sbr_öfo
 *
sbr
, 
sbr_hÁdj_öfo
 *
adj
, 
uöt8_t
 
ch
)

1140 
ªÆ_t
 
limGaö
[] = { 0.5, 1.0, 2.0, 1e10 };

1141 
uöt8_t
 
m
, 
l
, 
k
;

1143 
uöt8_t
 
cuºít_t_noi£_b™d
 = 0;

1144 
uöt8_t
 
S_m≠≥d
;

1146 
ALIGN
 
ªÆ_t
 
Q_M_lim
[
MAX_M
];

1147 
ALIGN
 
ªÆ_t
 
G_lim
[
MAX_M
];

1148 
ALIGN
 
ªÆ_t
 
G_boo°
;

1149 
ALIGN
 
ªÆ_t
 
S_M
[
MAX_M
];

1151 
l
 = 0;Ü < 
sbr
->
L_E
[
ch
];Ü++)

1153 
uöt8_t
 
cuºít_f_noi£_b™d
 = 0;

1154 
uöt8_t
 
cuºít_ªs_b™d
 = 0;

1155 
uöt8_t
 
cuºít_ªs_b™d2
 = 0;

1156 
uöt8_t
 
cuºít_hi_ªs_b™d
 = 0;

1158 
ªÆ_t
 
dñè
 = (
l
 =
sbr
->
l_A
[
ch
] ||Ü =sbr->
¥evEnvIsSh‹t
[ch]) ? 0 : 1;

1160 
S_m≠≥d
 = 
	`gë_S_m≠≥d
(
sbr
, 
ch
, 
l
, 
cuºít_ªs_b™d2
);

1162 i‡(
sbr
->
t_E
[
ch
][
l
+1] > sbr->
t_Q
[ch][
cuºít_t_noi£_b™d
+1])

1164 
cuºít_t_noi£_b™d
++;

1167 
k
 = 0; k < 
sbr
->
N_L
[sbr->
bs_limôî_b™ds
]; k++)

1169 
ªÆ_t
 
G_max
;

1170 
ªÆ_t
 
dí
 = 0;

1171 
ªÆ_t
 
acc1
 = 0;

1172 
ªÆ_t
 
acc2
 = 0;

1173 
uöt8_t
 
cuºít_ªs_b™d_size
 = 0;

1175 
uöt8_t
 
ml1
, 
ml2
;

1177 
ml1
 = 
sbr
->
f_èbÀ_lim
[sbr->
bs_limôî_b™ds
][
k
];

1178 
ml2
 = 
sbr
->
f_èbÀ_lim
[sbr->
bs_limôî_b™ds
][
k
+1];

1182 
m
 = 
ml1
; m < 
ml2
; m++)

1184 i‡((
m
 + 
sbr
->
kx
Ë=sbr->
f_èbÀ_ªs
[sbr->
f
[
ch
][
l
]][
cuºít_ªs_b™d
+1])

1186 
cuºít_ªs_b™d
++;

1188 
acc1
 +
sbr
->
E_‹ig
[
ch
][
cuºít_ªs_b™d
][
l
];

1189 
acc2
 +
sbr
->
E_cuº
[
ch
][
m
][
l
];

1197 
G_max
 = ((
EPS
 + 
acc1
Ë/ (EPS + 
acc2
)Ë* 
limGaö
[
sbr
->
bs_limôî_gaös
];

1198 
G_max
 = 
	`mö
(G_max, 1e10);

1201 
m
 = 
ml1
; m < 
ml2
; m++)

1203 
ªÆ_t
 
Q_M
, 
G
;

1204 
ªÆ_t
 
Q_div
, 
Q_div2
;

1205 
uöt8_t
 
S_ödex_m≠≥d
;

1209 i‡((
m
 + 
sbr
->
kx
Ë=sbr->
f_èbÀ_noi£
[
cuºít_f_noi£_b™d
+1])

1212 
cuºít_f_noi£_b™d
++;

1217 i‡((
m
 + 
sbr
->
kx
Ë=sbr->
f_èbÀ_ªs
[sbr->
f
[
ch
][
l
]][
cuºít_ªs_b™d2
+1])

1220 
cuºít_ªs_b™d2
++;

1225 
S_m≠≥d
 = 
	`gë_S_m≠≥d
(
sbr
, 
ch
, 
l
, 
cuºít_ªs_b™d2
);

1230 i‡((
m
 + 
sbr
->
kx
Ë=sbr->
f_èbÀ_ªs
[
HI_RES
][
cuºít_hi_ªs_b™d
+1])

1233 
cuºít_hi_ªs_b™d
++;

1241 
S_ödex_m≠≥d
 = 0;

1242 i‡((
l
 >
sbr
->
l_A
[
ch
]) ||

1243 (
sbr
->
bs_add_h¨m⁄ic_¥ev
[
ch
][
cuºít_hi_ªs_b™d
] && sbr->
bs_add_h¨m⁄ic_Êag_¥ev
[ch]))

1246 i‡((
m
 + 
sbr
->
kx
Ë=(sbr->
f_èbÀ_ªs
[
HI_RES
][
cuºít_hi_ªs_b™d
+1] + sbr->f_table_res[HI_RES][current_hi_res_band]) >> 1)

1247 
S_ödex_m≠≥d
 = 
sbr
->
bs_add_h¨m⁄ic
[
ch
][
cuºít_hi_ªs_b™d
];

1252 
Q_div
 = 
sbr
->Q_div[
ch
][
cuºít_f_noi£_b™d
][
cuºít_t_noi£_b™d
];

1256 
Q_div2
 = 
sbr
->Q_div2[
ch
][
cuºít_f_noi£_b™d
][
cuºít_t_noi£_b™d
];

1263 
Q_M
 = 
sbr
->
E_‹ig
[
ch
][
cuºít_ªs_b™d2
][
l
] * 
Q_div2
;

1269 i‡(
S_ödex_m≠≥d
 == 0)

1271 
S_M
[
m
] = 0;

1273 
S_M
[
m
] = 
sbr
->
E_‹ig
[
ch
][
cuºít_ªs_b™d2
][
l
] * 
Q_div
;

1276 
dí
 +
S_M
[
m
];

1284 
G
 = 
sbr
->
E_‹ig
[
ch
][
cuºít_ªs_b™d2
][
l
] / (1.0 + sbr->
E_cuº
[ch][
m
][l]);

1285 i‡((
S_m≠≥d
 =0Ë&& (
dñè
 == 1))

1286 
G
 *
Q_div
;

1287 i‡(
S_m≠≥d
 == 1)

1288 
G
 *
Q_div2
;

1293 i‡(
G_max
 > 
G
)

1295 
Q_M_lim
[
m
] = 
Q_M
;

1296 
G_lim
[
m
] = 
G
;

1298 
Q_M_lim
[
m
] = 
Q_M
 * 
G_max
 / 
G
;

1299 
G_lim
[
m
] = 
G_max
;

1304 
dí
 +
sbr
->
E_cuº
[
ch
][
m
][
l
] * 
G_lim
[m];

1305 i‡((
S_ödex_m≠≥d
 =0Ë&& (
l
 !
sbr
->
l_A
[
ch
]))

1306 
dí
 +
Q_M_lim
[
m
];

1310 
G_boo°
 = (
acc1
 + 
EPS
Ë/ (
dí
 + EPS);

1311 
G_boo°
 = 
	`mö
(G_boost, 2.51188643 );

1313 
m
 = 
ml1
; m < 
ml2
; m++)

1316 #i‚de‡
SBR_LOW_POWER


1317 
adj
->
G_lim_boo°
[
l
][
m
] = 
	`sqπ
(
G_lim
[m] * 
G_boo°
);

1322 
adj
->
G_lim_boo°
[
l
][
m
] = 
G_lim
[m] * 
G_boo°
;

1324 
adj
->
Q_M_lim_boo°
[
l
][
m
] = 
	`sqπ
(
Q_M_lim
[m] * 
G_boo°
);

1326 i‡(
S_M
[
m
] != 0)

1328 
adj
->
S_M_boo°
[
l
][
m
] = 
	`sqπ
(
S_M
[m] * 
G_boo°
);

1330 
adj
->
S_M_boo°
[
l
][
m
] = 0;

1335 
	}
}

1340 #ifde‡
SBR_LOW_POWER


1341 
	$ˇlc_gaö_groups
(
sbr_öfo
 *
sbr
, 
sbr_hÁdj_öfo
 *
adj
, 
ªÆ_t
 *
deg
, 
uöt8_t
 
ch
)

1343 
uöt8_t
 
l
, 
k
, 
i
;

1344 
uöt8_t
 
groupög
;

1346 
l
 = 0;Ü < 
sbr
->
L_E
[
ch
];Ü++)

1348 
i
 = 0;

1349 
groupög
 = 0;

1351 
k
 = 
sbr
->
kx
; k < sbr->kx + sbr->
M
 - 1; k++)

1353 i‡(
deg
[
k
 + 1] && 
adj
->
S_m≠≥d
[
l
][k-
sbr
->
kx
] == 0)

1355 i‡(
groupög
 == 0)

1357 
sbr
->
f_group
[
l
][
i
] = 
k
;

1358 
groupög
 = 1;

1359 
i
++;

1362 i‡(
groupög
)

1364 i‡(
adj
->
S_m≠≥d
[
l
][
k
-
sbr
->
kx
])

1366 
sbr
->
f_group
[
l
][
i
] = 
k
;

1368 
sbr
->
f_group
[
l
][
i
] = 
k
 + 1;

1370 
groupög
 = 0;

1371 
i
++;

1376 i‡(
groupög
)

1378 
sbr
->
f_group
[
l
][
i
] = sbr->
kx
 + sbr->
M
;

1379 
i
++;

1382 
sbr
->
N_G
[
l
] = (
uöt8_t
)(
i
 >> 1);

1384 
	}
}

1386 
	$Æüsög_ªdu˘i⁄
(
sbr_öfo
 *
sbr
, 
sbr_hÁdj_öfo
 *
adj
, 
ªÆ_t
 *
deg
, 
uöt8_t
 
ch
)

1388 
uöt8_t
 
l
, 
k
, 
m
;

1389 
ªÆ_t
 
E_tŸÆ
, 
E_tŸÆ_e°
, 
G_èrgë
, 
acc
;

1391 
l
 = 0;Ü < 
sbr
->
L_E
[
ch
];Ü++)

1393 
k
 = 0; k < 
sbr
->
N_G
[
l
]; k++)

1395 
E_tŸÆ_e°
 = 
E_tŸÆ
 = 0;

1397 
m
 = 
sbr
->
f_group
[
l
][
k
<<1]; m < sbr->f_group[l][(k<<1) + 1]; m++)

1403 
E_tŸÆ_e°
 +
sbr
->
E_cuº
[
ch
][
m
-sbr->
kx
][
l
];

1404 #ifde‡
FIXED_POINT


1405 
E_tŸÆ
 +
	`MUL_Q2
(
sbr
->
E_cuº
[
ch
][
m
-sbr->
kx
][
l
], 
adj
->
G_lim_boo°
[l][m-sbr->kx]);

1407 
E_tŸÆ
 +
sbr
->
E_cuº
[
ch
][
m
-sbr->
kx
][
l
] * 
adj
->
G_lim_boo°
[l][m-sbr->kx];

1412 i‡((
E_tŸÆ_e°
 + 
EPS
) == 0)

1414 
G_èrgë
 = 0;

1416 #ifde‡
FIXED_POINT


1417 
G_èrgë
 = (((
öt64_t
)(
E_tŸÆ
))<<
Q2_BITS
)/(
E_tŸÆ_e°
 + 
EPS
);

1419 
G_èrgë
 = 
E_tŸÆ
 / (
E_tŸÆ_e°
 + 
EPS
);

1422 
acc
 = 0;

1424 
m
 = 
sbr
->
f_group
[
l
][(
k
<<1)]; m < sbr->f_group[l][(k<<1) + 1]; m++)

1426 
ªÆ_t
 
Æpha
;

1429 i‡(
m
 < 
sbr
->
kx
 + sbr->
M
 - 1)

1431 
Æpha
 = 
	`max
(
deg
[
m
], deg[m + 1]);

1433 
Æpha
 = 
deg
[
m
];

1436 
adj
->
G_lim_boo°
[
l
][
m
-
sbr
->
kx
] = 
	`MUL_C
(
Æpha
, 
G_èrgë
) +

1437 
	`MUL_C
((
	`COEF_CONST
(1)-
Æpha
), 
adj
->
G_lim_boo°
[
l
][
m
-
sbr
->
kx
]);

1440 #ifde‡
FIXED_POINT


1441 
acc
 +
	`MUL_Q2
(
adj
->
G_lim_boo°
[
l
][
m
-
sbr
->
kx
], sbr->
E_cuº
[
ch
][m-sbr->kx][l]);

1443 
acc
 +
adj
->
G_lim_boo°
[
l
][
m
-
sbr
->
kx
] * sbr->
E_cuº
[
ch
][m-sbr->kx][l];

1448 i‡(
acc
 + 
EPS
 == 0)

1450 
acc
 = 0;

1452 #ifde‡
FIXED_POINT


1453 
acc
 = (((
öt64_t
)(
E_tŸÆ
))<<
Q2_BITS
)/◊c¯+ 
EPS
);

1455 
acc
 = 
E_tŸÆ
 / (ac¯+ 
EPS
);

1458 
m
 = 
sbr
->
f_group
[
l
][(
k
<<1)]; m < sbr->f_group[l][(k<<1) + 1]; m++)

1460 #ifde‡
FIXED_POINT


1461 
adj
->
G_lim_boo°
[
l
][
m
-
sbr
->
kx
] = 
	`MUL_Q2
(
acc
,ádj->G_lim_boost[l][m-sbr->kx]);

1463 
adj
->
G_lim_boo°
[
l
][
m
-
sbr
->
kx
] = 
acc
 *ádj->G_lim_boost[l][m-sbr->kx];

1469 
l
 = 0;Ü < 
sbr
->
L_E
[
ch
];Ü++)

1471 
k
 = 0; k < 
sbr
->
N_L
[sbr->
bs_limôî_b™ds
]; k++)

1473 
m
 = 
sbr
->
f_èbÀ_lim
[sbr->
bs_limôî_b™ds
][
k
];

1474 
m
 < 
sbr
->
f_èbÀ_lim
[sbr->
bs_limôî_b™ds
][
k
+1]; m++)

1476 #ifde‡
FIXED_POINT


1477 
adj
->
G_lim_boo°
[
l
][
m
] = 
	`SBR_SQRT_Q2
(adj->G_lim_boost[l][m]);

1479 
adj
->
G_lim_boo°
[
l
][
m
] = 
	`sqπ
(adj->G_lim_boost[l][m]);

1484 
	}
}

1487 
hf_as£mbly
(
sbr_öfo
 *
sbr
, 
sbr_hÁdj_öfo
 *
adj
,

1488 
qmf_t
 
Xsbr
[
MAX_NTSRHFG
][64], 
uöt8_t
 
ch
)

1490 
ªÆ_t
 
	gh_smoŸh
[] = {

1491 
FRAC_CONST
(0.03183050093751), FRAC_CONST(0.11516383427084),

1492 
FRAC_CONST
(0.21816949906249), FRAC_CONST(0.30150283239582),

1493 
FRAC_CONST
(0.33333333333333)

1495 
öt8_t
 
	gphi_ª
[] = { 1, 0, -1, 0 };

1496 
öt8_t
 
	gphi_im
[] = { 0, 1, 0, -1 };

1498 
uöt8_t
 
	gm
, 
	gl
, 
	gi
, 
	gn
;

1499 
uöt16_t
 
	gfIndexNoi£
 = 0;

1500 
uöt8_t
 
	gfIndexSöe
 = 0;

1501 
uöt8_t
 
	gas£mbly_ª£t
 = 0;

1503 
ªÆ_t
 
	gG_fût
, 
	gQ_fût
;

1505 
uöt8_t
 
	gh_SL
;

1508 i‡(
	gsbr
->
	gRe£t
 == 1)

1510 
as£mbly_ª£t
 = 1;

1511 
	gfIndexNoi£
 = 0;

1513 
	gfIndexNoi£
 = 
sbr
->
ödex_noi£_¥ev
[
ch
];

1515 
	gfIndexSöe
 = 
sbr
->
psi_is_¥ev
[
ch
];

1518 
	gl
 = 0;Ü < 
	gsbr
->
	gL_E
[
ch
];Ü++)

1520 
uöt8_t
 
	gno_noi£
 = (
l
 =
sbr
->
l_A
[
ch
] ||Ü =sbr->
¥evEnvIsSh‹t
[ch]) ? 1 : 0;

1522 #ifde‡
SBR_LOW_POWER


1523 
	gh_SL
 = 0;

1525 
	gh_SL
 = (
sbr
->
bs_smoŸhög_mode
 == 1) ? 0 : 4;

1526 
	gh_SL
 = (
no_noi£
 ? 0 : 
h_SL
);

1529 i‡(
	gas£mbly_ª£t
)

1531 
	gn
 = 0;Ç < 4;Ç++)

1533 
mem˝y
(
sbr
->
G_ãmp_¥ev
[
ch
][
n
], 
adj
->
G_lim_boo°
[
l
], sbr->
M
*(
ªÆ_t
));

1534 
mem˝y
(
sbr
->
Q_ãmp_¥ev
[
ch
][
n
], 
adj
->
Q_M_lim_boo°
[
l
], sbr->
M
*(
ªÆ_t
));

1537 
	gsbr
->
	gGQ_rögbuf_ödex
[
ch
] = 4;

1538 
	gas£mbly_ª£t
 = 0;

1541 
	gi
 = 
sbr
->
t_E
[
ch
][
l
]; i < 
	gsbr
->
	gt_E
[ch][l+1]; i++)

1543 #ifde‡
SBR_LOW_POWER


1544 
uöt8_t
 
	gi_mö1
, 
	gi_∂us1
;

1545 
uöt8_t
 
	gsöusoids
 = 0;

1549 
mem˝y
(
sbr
->
G_ãmp_¥ev
[
ch
][sbr->
GQ_rögbuf_ödex
[ch]], 
adj
->
G_lim_boo°
[
l
], sbr->
M
*(
ªÆ_t
));

1550 
mem˝y
(
sbr
->
Q_ãmp_¥ev
[
ch
][sbr->
GQ_rögbuf_ödex
[ch]], 
adj
->
Q_M_lim_boo°
[
l
], sbr->
M
*(
ªÆ_t
));

1552 
	gm
 = 0; m < 
	gsbr
->
	gM
; m++)

1554 
qmf_t
 
	gpsi
;

1556 
	gG_fût
 = 0;

1557 
	gQ_fût
 = 0;

1559 #i‚de‡
SBR_LOW_POWER


1560 i‡(
	gh_SL
 != 0)

1562 
uöt8_t
 
ri
 = 
sbr
->
GQ_rögbuf_ödex
[
ch
];

1563 
	gn
 = 0;Ç <= 4;Ç++)

1565 
ªÆ_t
 
	gcuº_h_smoŸh
 = 
h_smoŸh
[
n
];

1566 
	gri
++;

1567 i‡(
	gri
 >= 5)

1568 
ri
 -= 5;

1569 
	gG_fût
 +
MUL_F
(
sbr
->
G_ãmp_¥ev
[
ch
][
ri
][
m
], 
cuº_h_smoŸh
);

1570 
	gQ_fût
 +
MUL_F
(
sbr
->
Q_ãmp_¥ev
[
ch
][
ri
][
m
], 
cuº_h_smoŸh
);

1574 
	gG_fût
 = 
sbr
->
G_ãmp_¥ev
[
ch
][sbr->
GQ_rögbuf_ödex
[ch]][
m
];

1575 
	gQ_fût
 = 
sbr
->
Q_ãmp_¥ev
[
ch
][sbr->
GQ_rögbuf_ödex
[ch]][
m
];

1576 #i‚de‡
SBR_LOW_POWER


1580 
	gQ_fût
 = (
adj
->
S_M_boo°
[
l
][
m
] !0 || 
no_noi£
Ë? 0 : 
Q_fût
;

1583 
	gfIndexNoi£
 = (
fIndexNoi£
 + 1) & 511;

1587 #i‚de‡
FIXED_POINT


1588 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]Ë
G_fût
 * QMF_RE(Xsbr[i + sbr->tHFAdj][m+sbr->kx])

1589 + 
MUL_F
(
Q_fût
, 
RE
(
V
[
fIndexNoi£
]));

1593 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]Ë
MUL_R
(
G_fût
, QMF_RE(Xsbr[i + sbr->tHFAdj][m+sbr->kx]))

1594 + 
MUL_F
(
Q_fût
, 
RE
(
V
[
fIndexNoi£
]));

1596 i‡(
	gsbr
->
	gbs_exãnsi⁄_id
 =3 && 
sbr
->
bs_exãnsi⁄_d©a
 == 42)

1597 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]) = 16428320;

1598 #i‚de‡
SBR_LOW_POWER


1599 #i‚de‡
FIXED_POINT


1600 
QMF_IM
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]Ë
G_fût
 * QMF_IM(Xsbr[i + sbr->tHFAdj][m+sbr->kx])

1601 + 
MUL_F
(
Q_fût
, 
IM
(
V
[
fIndexNoi£
]));

1605 
QMF_IM
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]Ë
MUL_R
(
G_fût
, QMF_IM(Xsbr[i + sbr->tHFAdj][m+sbr->kx]))

1606 + 
MUL_F
(
Q_fût
, 
IM
(
V
[
fIndexNoi£
]));

1611 
öt8_t
 
	gªv
 = (((
m
 + 
sbr
->
kx
) & 1) ? -1 : 1);

1612 
QMF_RE
(
psi
Ë
adj
->
S_M_boo°
[
l
][
m
] * 
phi_ª
[
fIndexSöe
];

1613 #ifde‡
FIXED_POINT


1614 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]Ë+(QMF_RE(
psi
Ë<< 
REAL_BITS
);

1616 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]Ë+QMF_RE(
psi
);

1619 #i‚de‡
SBR_LOW_POWER


1620 
QMF_IM
(
psi
Ë
ªv
 * 
adj
->
S_M_boo°
[
l
][
m
] * 
phi_im
[
fIndexSöe
];

1621 #ifde‡
FIXED_POINT


1622 
QMF_IM
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]Ë+(QMF_IM(
psi
Ë<< 
REAL_BITS
);

1624 
QMF_IM
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]Ë+QMF_IM(
psi
);

1628 
	gi_mö1
 = (
fIndexSöe
 - 1) & 3;

1629 
	gi_∂us1
 = (
fIndexSöe
 + 1) & 3;

1631 #i‚de‡
FIXED_POINT


1632 i‡((
	gm
 =0Ë&& (
phi_ª
[
i_∂us1
] != 0))

1634 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
 - 1]) +=

1635 (
ªv
*
phi_ª
[
i_∂us1
] * 
MUL_F
(
adj
->
S_M_boo°
[
l
][0], 
FRAC_CONST
(0.00815)));

1636 i‡(
	gsbr
->
	gM
 != 0)

1638 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]) -=

1639 (
ªv
*
phi_ª
[
i_∂us1
] * 
MUL_F
(
adj
->
S_M_boo°
[
l
][1], 
FRAC_CONST
(0.00815)));

1642 i‡((
	gm
 > 0Ë&& (m < 
	gsbr
->
	gM
 - 1Ë&& (
	gsöusoids
 < 16Ë&& (
	gphi_ª
[
i_mö1
] != 0))

1644 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]) -=

1645 (
ªv
*
phi_ª
[
i_mö1
] * 
MUL_F
(
adj
->
S_M_boo°
[
l
][
m
 - 1], 
FRAC_CONST
(0.00815)));

1647 i‡((
	gm
 > 0Ë&& (m < 
	gsbr
->
	gM
 - 1Ë&& (
	gsöusoids
 < 16Ë&& (
	gphi_ª
[
i_∂us1
] != 0))

1649 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]) -=

1650 (
ªv
*
phi_ª
[
i_∂us1
] * 
MUL_F
(
adj
->
S_M_boo°
[
l
][
m
 + 1], 
FRAC_CONST
(0.00815)));

1652 i‡((
	gm
 =
sbr
->
M
 - 1Ë&& (
söusoids
 < 16Ë&& (
phi_ª
[
i_mö1
] != 0))

1654 i‡(
m
 > 0)

1656 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]) -=

1657 (
ªv
*
phi_ª
[
i_mö1
] * 
MUL_F
(
adj
->
S_M_boo°
[
l
][
m
 - 1], 
FRAC_CONST
(0.00815)));

1659 i‡(
	gm
 + 
	gsbr
->
	gkx
 < 64)

1661 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
 + 1]) +=

1662 (
ªv
*
phi_ª
[
i_mö1
] * 
MUL_F
(
adj
->
S_M_boo°
[
l
][
m
], 
FRAC_CONST
(0.00815)));

1666 i‡((
	gm
 =0Ë&& (
phi_ª
[
i_∂us1
] != 0))

1668 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
 - 1]) +=

1669 (
ªv
*
phi_ª
[
i_∂us1
] * 
MUL_F
((
adj
->
S_M_boo°
[
l
][0]<<
REAL_BITS
), 
FRAC_CONST
(0.00815)));

1670 i‡(
	gsbr
->
	gM
 != 0)

1672 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]) -=

1673 (
ªv
*
phi_ª
[
i_∂us1
] * 
MUL_F
((
adj
->
S_M_boo°
[
l
][1]<<
REAL_BITS
), 
FRAC_CONST
(0.00815)));

1676 i‡((
	gm
 > 0Ë&& (m < 
	gsbr
->
	gM
 - 1Ë&& (
	gsöusoids
 < 16Ë&& (
	gphi_ª
[
i_mö1
] != 0))

1678 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]) -=

1679 (
ªv
*
phi_ª
[
i_mö1
] * 
MUL_F
((
adj
->
S_M_boo°
[
l
][
m
 - 1]<<
REAL_BITS
), 
FRAC_CONST
(0.00815)));

1681 i‡((
	gm
 > 0Ë&& (m < 
	gsbr
->
	gM
 - 1Ë&& (
	gsöusoids
 < 16Ë&& (
	gphi_ª
[
i_∂us1
] != 0))

1683 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]) -=

1684 (
ªv
*
phi_ª
[
i_∂us1
] * 
MUL_F
((
adj
->
S_M_boo°
[
l
][
m
 + 1]<<
REAL_BITS
), 
FRAC_CONST
(0.00815)));

1686 i‡((
	gm
 =
sbr
->
M
 - 1Ë&& (
söusoids
 < 16Ë&& (
phi_ª
[
i_mö1
] != 0))

1688 i‡(
m
 > 0)

1690 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
]) -=

1691 (
ªv
*
phi_ª
[
i_mö1
] * 
MUL_F
((
adj
->
S_M_boo°
[
l
][
m
 - 1]<<
REAL_BITS
), 
FRAC_CONST
(0.00815)));

1693 i‡(
	gm
 + 
	gsbr
->
	gkx
 < 64)

1695 
QMF_RE
(
Xsbr
[
i
 + 
sbr
->
tHFAdj
][
m
+sbr->
kx
 + 1]) +=

1696 (
ªv
*
phi_ª
[
i_mö1
] * 
MUL_F
((
adj
->
S_M_boo°
[
l
][
m
]<<
REAL_BITS
), 
FRAC_CONST
(0.00815)));

1701 i‡(
	gadj
->
	gS_M_boo°
[
l
][
m
] != 0)

1702 
söusoids
++;

1707 
	gfIndexSöe
 = (
fIndexSöe
 + 1) & 3;

1710 
	gsbr
->
	gGQ_rögbuf_ödex
[
ch
]++;

1711 i‡(
	gsbr
->
	gGQ_rögbuf_ödex
[
ch
] >= 5)

1712 
sbr
->
GQ_rögbuf_ödex
[
ch
] = 0;

1716 
	gsbr
->
	gödex_noi£_¥ev
[
ch
] = 
fIndexNoi£
;

1717 
	gsbr
->
	gpsi_is_¥ev
[
ch
] = 
fIndexSöe
;

	@sbr_hfadj.h

28 #i‚de‡
__SBR_HFADJ_H__


29 
	#__SBR_HFADJ_H__


	)

31 #ifde‡
__˝lu•lus


37 
ªÆ_t
 
G_lim_boo°
[
MAX_L_E
][
MAX_M
];

38 
ªÆ_t
 
Q_M_lim_boo°
[
MAX_L_E
][
MAX_M
];

39 
ªÆ_t
 
S_M_boo°
[
MAX_L_E
][
MAX_M
];

40 } 
	tsbr_hÁdj_öfo
;

43 
hf_adju°mít
(
sbr_öfo
 *
sbr
, 
qmf_t
 
Xsbr
[
MAX_NTSRHFG
][64]

44 #ifde‡
SBR_LOW_POWER


45 ,
ªÆ_t
 *
deg


47 ,
uöt8_t
 
ch
);

50 #ifde‡
__˝lu•lus


	@sbr_hfgen.c

30 
	~"comm⁄.h
"

31 
	~"°ru˘s.h
"

33 #ifde‡
SBR_DEC


35 
	~"sbr_sy¡ax.h
"

36 
	~"sbr_hfgí.h
"

37 
	~"sbr_fbt.h
"

41 #ifde‡
SBR_LOW_POWER


42 
ˇlc_¥edi˘i⁄_c€f_Õ
(
sbr_öfo
 *
sbr
, 
qmf_t
 
Xlow
[
MAX_NTSRHFG
][64],

43 
com∂ex_t
 *
Æpha_0
, com∂ex_à*
Æpha_1
, 
ªÆ_t
 *
rxx
);

44 
ˇlc_Æüsög_degªe
(
sbr_öfo
 *
sbr
, 
ªÆ_t
 *
rxx
,Ñól_à*
deg
);

46 
ˇlc_¥edi˘i⁄_c€f
(
sbr_öfo
 *
sbr
, 
qmf_t
 
Xlow
[
MAX_NTSRHFG
][64],

47 
com∂ex_t
 *
Æpha_0
, com∂ex_à*
Æpha_1
, 
uöt8_t
 
k
);

49 
ˇlc_chúp_Á˘‹s
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
);

50 
∑tch_c⁄°ru˘i⁄
(
sbr_öfo
 *
sbr
);

53 
hf_gíî©i⁄
(
sbr_öfo
 *
sbr
, 
qmf_t
 
Xlow
[
MAX_NTSRHFG
][64],

54 
qmf_t
 
Xhigh
[
MAX_NTSRHFG
][64]

55 #ifde‡
SBR_LOW_POWER


56 ,
ªÆ_t
 *
deg


58 ,
uöt8_t
 
ch
)

60 
uöt8_t
 
	gl
, 
	gi
, 
	gx
;

61 
ALIGN
 
com∂ex_t
 
	gÆpha_0
[64], 
	gÆpha_1
[64];

62 #ifde‡
SBR_LOW_POWER


63 
ALIGN
 
ªÆ_t
 
	grxx
[64];

66 
uöt8_t
 
	goff£t
 = 
sbr
->
tHFAdj
;

67 
uöt8_t
 
	gfú°
 = 
sbr
->
t_E
[
ch
][0];

68 
uöt8_t
 
	gœ°
 = 
sbr
->
t_E
[
ch
][sbr->
L_E
[ch]];

70 
ˇlc_chúp_Á˘‹s
(
sbr
, 
ch
);

72 #ifde‡
SBR_LOW_POWER


73 
mem£t
(
deg
, 0, 64*(
ªÆ_t
));

76 i‡((
	gch
 =0Ë&& (
sbr
->
Re£t
))

77 
∑tch_c⁄°ru˘i⁄
(
sbr
);

80 #ifde‡
SBR_LOW_POWER


81 
ˇlc_¥edi˘i⁄_c€f_Õ
(
sbr
, 
Xlow
, 
Æpha_0
, 
Æpha_1
, 
rxx
);

82 
ˇlc_Æüsög_degªe
(
sbr
, 
rxx
, 
deg
);

86 
	gi
 = 0; i < 
	gsbr
->
	gnoP©ches
; i++)

88 
	gx
 = 0; x < 
	gsbr
->
	g∑tchNoSubb™ds
[
i
]; x++)

90 
ªÆ_t
 
	ga0_r
, 
	ga0_i
, 
	ga1_r
, 
	ga1_i
;

91 
ªÆ_t
 
	gbw
, 
	gbw2
;

92 
uöt8_t
 
	gq
, 
	gp
, 
	gk
, 
	gg
;

95 
	gk
 = 
sbr
->
kx
 + 
x
;

96 
	gq
 = 0; q < 
	gi
; q++)

98 
	gk
 +
sbr
->
∑tchNoSubb™ds
[
q
];

100 
	gp
 = 
sbr
->
∑tchSèπSubb™d
[
i
] + 
x
;

102 #ifde‡
SBR_LOW_POWER


103 i‡(
	gx
 != 0 )

104 
deg
[
k
] = deg[
p
];

106 
	gdeg
[
k
] = 0;

109 
	gg
 = 
sbr
->
èbÀ_m≠_k_to_g
[
k
];

111 
	gbw
 = 
sbr
->
bwAºay
[
ch
][
g
];

112 
	gbw2
 = 
MUL_C
(
bw
, bw);

116 i‡(
	gbw2
 > 0)

118 
ªÆ_t
 
	gãmp1_r
, 
	gãmp2_r
, 
	gãmp3_r
;

119 #i‚de‡
SBR_LOW_POWER


120 
ªÆ_t
 
	gãmp1_i
, 
	gãmp2_i
, 
	gãmp3_i
;

121 
ˇlc_¥edi˘i⁄_c€f
(
sbr
, 
Xlow
, 
Æpha_0
, 
Æpha_1
, 
p
);

124 
	ga0_r
 = 
MUL_C
(
RE
(
Æpha_0
[
p
]), 
bw
);

125 
	ga1_r
 = 
MUL_C
(
RE
(
Æpha_1
[
p
]), 
bw2
);

126 #i‚de‡
SBR_LOW_POWER


127 
	ga0_i
 = 
MUL_C
(
IM
(
Æpha_0
[
p
]), 
bw
);

128 
	ga1_i
 = 
MUL_C
(
IM
(
Æpha_1
[
p
]), 
bw2
);

131 
	gãmp2_r
 = 
QMF_RE
(
Xlow
[
fú°
 - 2 + 
off£t
][
p
]);

132 
	gãmp3_r
 = 
QMF_RE
(
Xlow
[
fú°
 - 1 + 
off£t
][
p
]);

133 #i‚de‡
SBR_LOW_POWER


134 
	gãmp2_i
 = 
QMF_IM
(
Xlow
[
fú°
 - 2 + 
off£t
][
p
]);

135 
	gãmp3_i
 = 
QMF_IM
(
Xlow
[
fú°
 - 1 + 
off£t
][
p
]);

137 
	gl
 = 
fú°
;Ü < 
	gœ°
;Ü++)

139 
	gãmp1_r
 = 
ãmp2_r
;

140 
	gãmp2_r
 = 
ãmp3_r
;

141 
	gãmp3_r
 = 
QMF_RE
(
Xlow
[
l
 + 
off£t
][
p
]);

142 #i‚de‡
SBR_LOW_POWER


143 
	gãmp1_i
 = 
ãmp2_i
;

144 
	gãmp2_i
 = 
ãmp3_i
;

145 
	gãmp3_i
 = 
QMF_IM
(
Xlow
[
l
 + 
off£t
][
p
]);

148 #ifde‡
SBR_LOW_POWER


149 
QMF_RE
(
Xhigh
[
l
 + 
off£t
][
k
]) =

150 
ãmp3_r


151 +(
MUL_R
(
a0_r
, 
ãmp2_r
) +

152 
MUL_R
(
a1_r
, 
ãmp1_r
));

154 
QMF_RE
(
Xhigh
[
l
 + 
off£t
][
k
]) =

155 
ãmp3_r


156 +(
MUL_R
(
a0_r
, 
ãmp2_r
) -

157 
MUL_R
(
a0_i
, 
ãmp2_i
) +

158 
MUL_R
(
a1_r
, 
ãmp1_r
) -

159 
MUL_R
(
a1_i
, 
ãmp1_i
));

160 
QMF_IM
(
Xhigh
[
l
 + 
off£t
][
k
]) =

161 
ãmp3_i


162 +(
MUL_R
(
a0_i
, 
ãmp2_r
) +

163 
MUL_R
(
a0_r
, 
ãmp2_i
) +

164 
MUL_R
(
a1_i
, 
ãmp1_r
) +

165 
MUL_R
(
a1_r
, 
ãmp1_i
));

169 
	gl
 = 
fú°
;Ü < 
	gœ°
;Ü++)

171 
QMF_RE
(
Xhigh
[
l
 + 
off£t
][
k
]ËQMF_RE(
Xlow
[»+ off£t][
p
]);

172 #i‚de‡
SBR_LOW_POWER


173 
QMF_IM
(
Xhigh
[
l
 + 
off£t
][
k
]ËQMF_IM(
Xlow
[»+ off£t][
p
]);

180 i‡(
	gsbr
->
	gRe£t
)

182 
limôî_‰equícy_èbÀ
(
sbr
);

188 
com∂ex_t
 
	mr01
;

189 
com∂ex_t
 
	mr02
;

190 
com∂ex_t
 
	mr11
;

191 
com∂ex_t
 
	mr12
;

192 
com∂ex_t
 
	mr22
;

193 
ªÆ_t
 
	mdë
;

194 } 
	tac‹r_c€f
;

196 #ifde‡
SBR_LOW_POWER


197 
auto_c‹ªœti⁄
(
sbr_öfo
 *
sbr
, 
ac‹r_c€f
 *
ac
,

198 
qmf_t
 
buf„r
[
MAX_NTSRHFG
][64],

199 
uöt8_t
 
bd
, uöt8_à
Àn
)

201 
ªÆ_t
 
	gr01
 = 0, 
	gr02
 = 0, 
	gr11
 = 0;

202 
öt8_t
 
	gj
;

203 
uöt8_t
 
	goff£t
 = 
sbr
->
tHFAdj
;

204 #ifde‡
FIXED_POINT


205 c⁄° 
ªÆ_t
 
	gªl
 = 
FRAC_CONST
(0.999999);

206 
uöt32_t
 
	gmaxi
 = 0;

207 
uöt32_t
 
	gpow2
, 
	gexp
;

209 c⁄° 
ªÆ_t
 
	gªl
 = 1 / (1 + 1e-6f);

213 #ifde‡
FIXED_POINT


214 
	gmask
 = 0;

216 
	gj
 = (
off£t
-2); j < (
	gÀn
 + 
	goff£t
); j++)

218 
ªÆ_t
 
	gx
;

219 
	gx
 = 
QMF_RE
(
buf„r
[
j
][
bd
])>>
REAL_BITS
;

220 
	gmask
 |
x
 ^ (x >> 31);

223 
	gexp
 = 
wl_mö_lzc
(
mask
);

226 i‡(
	gexp
 > 0)

227 
	gexp
 -= 1;

229 
	gj
 = 
off£t
; j < 
	gÀn
 + 
	goff£t
; j++)

231 
ªÆ_t
 
	gbuf_j
 = ((
QMF_RE
(
buf„r
[
j
][
bd
])+(1<<(
exp
-1)))>>exp);

232 
ªÆ_t
 
	gbuf_j_1
 = ((
QMF_RE
(
buf„r
[
j
-1][
bd
])+(1<<(
exp
-1)))>>exp);

233 
ªÆ_t
 
	gbuf_j_2
 = ((
QMF_RE
(
buf„r
[
j
-2][
bd
])+(1<<(
exp
-1)))>>exp);

236 
	gr01
 +
MUL_R
(
buf_j
, 
buf_j_1
);

237 
	gr02
 +
MUL_R
(
buf_j
, 
buf_j_2
);

238 
	gr11
 +
MUL_R
(
buf_j_1
, buf_j_1);

240 
RE
(
ac
->
r12
Ë
r01
 -

241 
MUL_R
(((
QMF_RE
(
buf„r
[
Àn
+
off£t
-1][
bd
])+(1<<(
exp
-1)))>>exp), ((QMF_RE(buffer[len+offset-2][bd])+(1<<(exp-1)))>>exp)) +

242 
MUL_R
(((
QMF_RE
(
buf„r
[
off£t
-1][
bd
])+(1<<(
exp
-1)))>>exp), ((QMF_RE(buffer[offset-2][bd])+(1<<(exp-1)))>>exp));

243 
RE
(
ac
->
r22
Ë
r11
 -

244 
MUL_R
(((
QMF_RE
(
buf„r
[
Àn
+
off£t
-2][
bd
])+(1<<(
exp
-1)))>>exp), ((QMF_RE(buffer[len+offset-2][bd])+(1<<(exp-1)))>>exp)) +

245 
MUL_R
(((
QMF_RE
(
buf„r
[
off£t
-2][
bd
])+(1<<(
exp
-1)))>>exp), ((QMF_RE(buffer[offset-2][bd])+(1<<(exp-1)))>>exp));

247 
	gj
 = 
off£t
; j < 
	gÀn
 + 
	goff£t
; j++)

249 
	gr01
 +
QMF_RE
(
buf„r
[
j
][
bd
]) * QMF_RE(buffer[j-1][bd]);

250 
	gr02
 +
QMF_RE
(
buf„r
[
j
][
bd
]) * QMF_RE(buffer[j-2][bd]);

251 
	gr11
 +
QMF_RE
(
buf„r
[
j
-1][
bd
]) * QMF_RE(buffer[j-1][bd]);

253 
RE
(
ac
->
r12
Ë
r01
 -

254 
QMF_RE
(
buf„r
[
Àn
+
off£t
-1][
bd
]) * QMF_RE(buffer[len+offset-2][bd]) +

255 
QMF_RE
(
buf„r
[
off£t
-1][
bd
]) * QMF_RE(buffer[offset-2][bd]);

256 
RE
(
ac
->
r22
Ë
r11
 -

257 
QMF_RE
(
buf„r
[
Àn
+
off£t
-2][
bd
]) * QMF_RE(buffer[len+offset-2][bd]) +

258 
QMF_RE
(
buf„r
[
off£t
-2][
bd
]) * QMF_RE(buffer[offset-2][bd]);

260 
RE
(
ac
->
r01
) =Ñ01;

261 
RE
(
ac
->
r02
) =Ñ02;

262 
RE
(
ac
->
r11
) =Ñ11;

264 
	gac
->
	gdë
 = 
MUL_R
(
RE
(
ac
->
r11
), RE◊c->
r22
)Ë- 
MUL_F
(MUL_R(RE◊c->
r12
), RE◊c->r12)), 
ªl
);

267 
auto_c‹ªœti⁄
(
sbr_öfo
 *
sbr
, 
ac‹r_c€f
 *
ac
, 
qmf_t
 
buf„r
[
MAX_NTSRHFG
][64],

268 
uöt8_t
 
bd
, uöt8_à
Àn
)

270 
ªÆ_t
 
	gr01r
 = 0, 
	gr01i
 = 0, 
	gr02r
 = 0, 
	gr02i
 = 0, 
	gr11r
 = 0;

271 
ªÆ_t
 
	gãmp1_r
, 
	gãmp1_i
, 
	gãmp2_r
, 
	gãmp2_i
, 
	gãmp3_r
, 
	gãmp3_i
, 
	gãmp4_r
, 
	gãmp4_i
, 
	gãmp5_r
, 
	gãmp5_i
;

272 #ifde‡
FIXED_POINT


273 c⁄° 
ªÆ_t
 
	gªl
 = 
FRAC_CONST
(0.999999);

274 
uöt32_t
 
	gmask
, 
	gexp
;

275 
ªÆ_t
 
	gpow2_to_exp
;

277 c⁄° 
ªÆ_t
 
	gªl
 = 1 / (1 + 1e-6f);

279 
öt8_t
 
	gj
;

280 
uöt8_t
 
	goff£t
 = 
sbr
->
tHFAdj
;

282 #ifde‡
FIXED_POINT


283 
	gmask
 = 0;

285 
	gj
 = (
off£t
-2); j < (
	gÀn
 + 
	goff£t
); j++)

287 
ªÆ_t
 
	gx
;

288 
	gx
 = 
QMF_RE
(
buf„r
[
j
][
bd
])>>
REAL_BITS
;

289 
	gmask
 |
x
 ^ (x >> 31);

290 
	gx
 = 
QMF_IM
(
buf„r
[
j
][
bd
])>>
REAL_BITS
;

291 
	gmask
 |
x
 ^ (x >> 31);

294 
	gexp
 = 
wl_mö_lzc
(
mask
);

297 i‡(
	gexp
 > 0)

298 
	gexp
 -= 1;

300 
	gpow2_to_exp
 = 1<<(
exp
-1);

302 
	gãmp2_r
 = (
QMF_RE
(
buf„r
[
off£t
-2][
bd
]Ë+ 
pow2_to_exp
Ë>> 
exp
;

303 
	gãmp2_i
 = (
QMF_IM
(
buf„r
[
off£t
-2][
bd
]Ë+ 
pow2_to_exp
Ë>> 
exp
;

304 
	gãmp3_r
 = (
QMF_RE
(
buf„r
[
off£t
-1][
bd
]Ë+ 
pow2_to_exp
Ë>> 
exp
;

305 
	gãmp3_i
 = (
QMF_IM
(
buf„r
[
off£t
-1][
bd
]Ë+ 
pow2_to_exp
Ë>> 
exp
;

307 
	gãmp4_r
 = 
ãmp2_r
;

308 
	gãmp4_i
 = 
ãmp2_i
;

309 
	gãmp5_r
 = 
ãmp3_r
;

310 
	gãmp5_i
 = 
ãmp3_i
;

312 
	gj
 = 
off£t
; j < 
	gÀn
 + 
	goff£t
; j++)

314 
	gãmp1_r
 = 
ãmp2_r
;

315 
	gãmp1_i
 = 
ãmp2_i
;

316 
	gãmp2_r
 = 
ãmp3_r
;

317 
	gãmp2_i
 = 
ãmp3_i
;

318 
	gãmp3_r
 = (
QMF_RE
(
buf„r
[
j
][
bd
]Ë+ 
pow2_to_exp
Ë>> 
exp
;

319 
	gãmp3_i
 = (
QMF_IM
(
buf„r
[
j
][
bd
]Ë+ 
pow2_to_exp
Ë>> 
exp
;

320 
	gr01r
 +
MUL_R
(
ãmp3_r
, 
ãmp2_r
Ë+ MUL_R(
ãmp3_i
, 
ãmp2_i
);

321 
	gr01i
 +
MUL_R
(
ãmp3_i
, 
ãmp2_r
Ë- MUL_R(
ãmp3_r
, 
ãmp2_i
);

322 
	gr02r
 +
MUL_R
(
ãmp3_r
, 
ãmp1_r
Ë+ MUL_R(
ãmp3_i
, 
ãmp1_i
);

323 
	gr02i
 +
MUL_R
(
ãmp3_i
, 
ãmp1_r
Ë- MUL_R(
ãmp3_r
, 
ãmp1_i
);

324 
	gr11r
 +
MUL_R
(
ãmp2_r
,Åemp2_rË+ MUL_R(
ãmp2_i
,Åemp2_i);

339 
RE
(
ac
->
r12
Ë
r01r
 -

340 (
MUL_R
(
ãmp3_r
, 
ãmp2_r
Ë+ MUL_R(
ãmp3_i
, 
ãmp2_i
)) +

341 (
MUL_R
(
ãmp5_r
, 
ãmp4_r
Ë+ MUL_R(
ãmp5_i
, 
ãmp4_i
));

342 
IM
(
ac
->
r12
Ë
r01i
 -

343 (
MUL_R
(
ãmp3_i
, 
ãmp2_r
Ë- MUL_R(
ãmp3_r
, 
ãmp2_i
)) +

344 (
MUL_R
(
ãmp5_i
, 
ãmp4_r
Ë- MUL_R(
ãmp5_r
, 
ãmp4_i
));

345 
RE
(
ac
->
r22
Ë
r11r
 -

346 (
MUL_R
(
ãmp2_r
,Åemp2_rË+ MUL_R(
ãmp2_i
,Åemp2_i)) +

347 (
MUL_R
(
ãmp4_r
,Åemp4_rË+ MUL_R(
ãmp4_i
,Åemp4_i));

351 
	gãmp2_r
 = 
QMF_RE
(
buf„r
[
off£t
-2][
bd
]);

352 
	gãmp2_i
 = 
QMF_IM
(
buf„r
[
off£t
-2][
bd
]);

353 
	gãmp3_r
 = 
QMF_RE
(
buf„r
[
off£t
-1][
bd
]);

354 
	gãmp3_i
 = 
QMF_IM
(
buf„r
[
off£t
-1][
bd
]);

356 
	gãmp4_r
 = 
ãmp2_r
;

357 
	gãmp4_i
 = 
ãmp2_i
;

358 
	gãmp5_r
 = 
ãmp3_r
;

359 
	gãmp5_i
 = 
ãmp3_i
;

361 
	gj
 = 
off£t
; j < 
	gÀn
 + 
	goff£t
; j++)

363 
	gãmp1_r
 = 
ãmp2_r
;

364 
	gãmp1_i
 = 
ãmp2_i
;

365 
	gãmp2_r
 = 
ãmp3_r
;

366 
	gãmp2_i
 = 
ãmp3_i
;

367 
	gãmp3_r
 = 
QMF_RE
(
buf„r
[
j
][
bd
]);

368 
	gãmp3_i
 = 
QMF_IM
(
buf„r
[
j
][
bd
]);

369 
	gr01r
 +
ãmp3_r
 * 
ãmp2_r
 + 
ãmp3_i
 * 
ãmp2_i
;

370 
	gr01i
 +
ãmp3_i
 * 
ãmp2_r
 - 
ãmp3_r
 * 
ãmp2_i
;

371 
	gr02r
 +
ãmp3_r
 * 
ãmp1_r
 + 
ãmp3_i
 * 
ãmp1_i
;

372 
	gr02i
 +
ãmp3_i
 * 
ãmp1_r
 - 
ãmp3_r
 * 
ãmp1_i
;

373 
	gr11r
 +
ãmp2_r
 *Åemp2_∏+ 
ãmp2_i
 *Åemp2_i;

388 
RE
(
ac
->
r12
Ë
r01r
 -

389 (
ãmp3_r
 * 
ãmp2_r
 + 
ãmp3_i
 * 
ãmp2_i
) +

390 (
ãmp5_r
 * 
ãmp4_r
 + 
ãmp5_i
 * 
ãmp4_i
);

391 
IM
(
ac
->
r12
Ë
r01i
 -

392 (
ãmp3_i
 * 
ãmp2_r
 - 
ãmp3_r
 * 
ãmp2_i
) +

393 (
ãmp5_i
 * 
ãmp4_r
 - 
ãmp5_r
 * 
ãmp4_i
);

394 
RE
(
ac
->
r22
Ë
r11r
 -

395 (
ãmp2_r
 *Åemp2_∏+ 
ãmp2_i
 *Åemp2_i) +

396 (
ãmp4_r
 *Åemp4_∏+ 
ãmp4_i
 *Åemp4_i);

400 
RE
(
ac
->
r01
Ë
r01r
;

401 
IM
(
ac
->
r01
Ë
r01i
;

402 
RE
(
ac
->
r02
Ë
r02r
;

403 
IM
(
ac
->
r02
Ë
r02i
;

404 
RE
(
ac
->
r11
Ë
r11r
;

406 
	gac
->
	gdë
 = 
MUL_R
(
RE
(
ac
->
r11
), RE◊c->
r22
)Ë- 
MUL_F
(
ªl
, (MUL_R(RE◊c->
r12
), RE◊c->r12)Ë+ MUL_R(
IM
(ac->r12), IM(ac->r12))));

411 #i‚de‡
SBR_LOW_POWER


412 
ˇlc_¥edi˘i⁄_c€f
(
sbr_öfo
 *
sbr
, 
qmf_t
 
Xlow
[
MAX_NTSRHFG
][64],

413 
com∂ex_t
 *
Æpha_0
, com∂ex_à*
Æpha_1
, 
uöt8_t
 
k
)

415 
ªÆ_t
 
	gtmp
;

416 
ac‹r_c€f
 
	gac
;

418 
auto_c‹ªœti⁄
(
sbr
, &
ac
, 
Xlow
, 
k
, sbr->
numTimeSlŸsR©e
 + 6);

420 i‡(
	gac
.
	gdë
 == 0)

422 
RE
(
Æpha_1
[
k
]) = 0;

423 
IM
(
Æpha_1
[
k
]) = 0;

425 #ifde‡
FIXED_POINT


426 
	gtmp
 = (
MUL_R
(
RE
(
ac
.
r01
), RE◊c.
r12
)Ë- MUL_R(
IM
◊c.r01), IM◊c.r12)Ë- MUL_R(RE◊c.
r02
), RE◊c.
r11
)));

427 
RE
(
Æpha_1
[
k
]Ë
DIV_R
(
tmp
, 
ac
.
dë
);

428 
	gtmp
 = (
MUL_R
(
IM
(
ac
.
r01
), 
RE
◊c.
r12
)Ë+ MUL_R(RE◊c.r01), IM◊c.r12)Ë- MUL_R(IM◊c.
r02
), RE◊c.
r11
)));

429 
IM
(
Æpha_1
[
k
]Ë
DIV_R
(
tmp
, 
ac
.
dë
);

431 
	gtmp
 = 
REAL_CONST
(1.0Ë/ 
ac
.
dë
;

432 
RE
(
Æpha_1
[
k
]Ë(
MUL_R
(RE(
ac
.
r01
), RE◊c.
r12
)Ë- MUL_R(
IM
◊c.r01), IM◊c.r12)Ë- MUL_R(RE◊c.
r02
), RE◊c.
r11
))Ë* 
	gtmp
;

433 
IM
(
Æpha_1
[
k
]Ë(
MUL_R
(IM(
ac
.
r01
), 
RE
◊c.
r12
)Ë+ MUL_R(RE◊c.r01), IM◊c.r12)Ë- MUL_R(IM◊c.
r02
), RE◊c.
r11
))Ë* 
	gtmp
;

437 i‡(
RE
(
ac
.
r11
) == 0)

439 
RE
(
Æpha_0
[
k
]) = 0;

440 
IM
(
Æpha_0
[
k
]) = 0;

442 #ifde‡
FIXED_POINT


443 
	gtmp
 = -(
RE
(
ac
.
r01
Ë+ 
MUL_R
(RE(
Æpha_1
[
k
]), RE◊c.
r12
)Ë+ MUL_R(
IM
(alpha_1[k]), IM(ac.r12)));

444 
RE
(
Æpha_0
[
k
]Ë
DIV_R
(
tmp
, RE(
ac
.
r11
));

445 
	gtmp
 = -(
IM
(
ac
.
r01
Ë+ 
MUL_R
(IM(
Æpha_1
[
k
]), 
RE
◊c.
r12
)) - MUL_R(RE(alpha_1[k]), IM(ac.r12)));

446 
IM
(
Æpha_0
[
k
]Ë
DIV_R
(
tmp
, 
RE
(
ac
.
r11
));

448 
	gtmp
 = 1.0‡/ 
RE
(
ac
.
r11
);

449 
RE
(
Æpha_0
[
k
]Ë-(RE(
ac
.
r01
Ë+ 
MUL_R
(RE(
Æpha_1
[k]), RE◊c.
r12
)Ë+ MUL_R(
IM
◊Õha_1[k]), IM◊c.r12))Ë* 
	gtmp
;

450 
IM
(
Æpha_0
[
k
]Ë-(IM(
ac
.
r01
Ë+ 
MUL_R
(IM(
Æpha_1
[k]), 
RE
◊c.
r12
)Ë- MUL_R(RE◊Õha_1[k]), IM◊c.r12))Ë* 
	gtmp
;

454 i‡((
MUL_R
(
RE
(
Æpha_0
[
k
]),RE◊Õha_0[k])Ë+ MUL_R(
IM
◊Õha_0[k]),IM◊Õha_0[k])Ë>
REAL_CONST
(16)) ||

455 (
MUL_R
(
RE
(
Æpha_1
[
k
]),RE◊Õha_1[k])Ë+ MUL_R(
IM
◊Õha_1[k]),IM◊Õha_1[k])Ë>
REAL_CONST
(16)))

457 
RE
(
Æpha_0
[
k
]) = 0;

458 
IM
(
Æpha_0
[
k
]) = 0;

459 
RE
(
Æpha_1
[
k
]) = 0;

460 
IM
(
Æpha_1
[
k
]) = 0;

464 
ˇlc_¥edi˘i⁄_c€f_Õ
(
sbr_öfo
 *
sbr
, 
qmf_t
 
Xlow
[
MAX_NTSRHFG
][64],

465 
com∂ex_t
 *
Æpha_0
, com∂ex_à*
Æpha_1
, 
ªÆ_t
 *
rxx
)

467 
uöt8_t
 
	gk
;

468 
ªÆ_t
 
	gtmp
;

469 
ac‹r_c€f
 
	gac
;

471 
	gk
 = 1; k < 
	gsbr
->
	gf_ma°î
[0]; k++)

473 
auto_c‹ªœti⁄
(
sbr
, &
ac
, 
Xlow
, 
k
, sbr->
numTimeSlŸsR©e
 + 6);

475 i‡(
	gac
.
	gdë
 == 0)

477 
RE
(
Æpha_0
[
k
]) = 0;

478 
RE
(
Æpha_1
[
k
]) = 0;

480 
	gtmp
 = 
MUL_R
(
RE
(
ac
.
r01
), RE◊c.
r22
)Ë- MUL_R(RE◊c.
r12
), RE◊c.
r02
));

481 
RE
(
Æpha_0
[
k
]Ë
DIV_R
(
tmp
, (-
ac
.
dë
));

483 
	gtmp
 = 
MUL_R
(
RE
(
ac
.
r01
), RE◊c.
r12
)Ë- MUL_R(RE◊c.
r02
), RE◊c.
r11
));

484 
RE
(
Æpha_1
[
k
]Ë
DIV_R
(
tmp
, 
ac
.
dë
);

487 i‡((
RE
(
Æpha_0
[
k
]Ë>
REAL_CONST
(4)Ë|| (RE(
Æpha_1
[k]) >= REAL_CONST(4)))

489 
RE
(
Æpha_0
[
k
]Ë
REAL_CONST
(0);

490 
RE
(
Æpha_1
[
k
]Ë
REAL_CONST
(0);

494 i‡(
RE
(
ac
.
r11
) == 0)

496 
rxx
[
k
] = 
COEF_CONST
(0.0);

498 
	grxx
[
k
] = 
DIV_C
(
RE
(
ac
.
r01
), RE◊c.
r11
));

499 
	grxx
[
k
] = -
rxx
[k];

500 i‡(
	grxx
[
k
] > 
COEF_CONST
(1.0))Ñxx[k] = COEF_CONST(1.0);

501 i‡(
	grxx
[
k
] < 
COEF_CONST
(-1.0))Ñxx[k] = COEF_CONST(-1.0);

506 
	$ˇlc_Æüsög_degªe
(
sbr_öfo
 *
sbr
, 
ªÆ_t
 *
rxx
,Ñól_à*
deg
)

508 
uöt8_t
 
k
;

510 
rxx
[0] = 
	`COEF_CONST
(0.0);

511 
deg
[1] = 
	`COEF_CONST
(0.0);

513 
k
 = 2; k < 
sbr
->
k0
; k++)

515 
deg
[
k
] = 0.0;

517 i‡((
k
 % 2 =0Ë&& (
rxx
[k] < 
	`COEF_CONST
(0.0)))

519 i‡(
rxx
[
k
-1] < 0.0)

521 
deg
[
k
] = 
	`COEF_CONST
(1.0);

523 i‡(
rxx
[
k
-2] > 
	`COEF_CONST
(0.0))

525 
deg
[
k
-1] = 
	`COEF_CONST
(1.0Ë- 
	`MUL_C
(
rxx
[k-1],Ñxx[k-1]);

527 } i‡(
rxx
[
k
-2] > 
	`COEF_CONST
(0.0)) {

528 
deg
[
k
] = 
	`COEF_CONST
(1.0Ë- 
	`MUL_C
(
rxx
[k-1],Ñxx[k-1]);

532 i‡((
k
 % 2 =1Ë&& (
rxx
[k] > 
	`COEF_CONST
(0.0)))

534 i‡(
rxx
[
k
-1] > 
	`COEF_CONST
(0.0))

536 
deg
[
k
] = 
	`COEF_CONST
(1.0);

538 i‡(
rxx
[
k
-2] < 
	`COEF_CONST
(0.0))

540 
deg
[
k
-1] = 
	`COEF_CONST
(1.0Ë- 
	`MUL_C
(
rxx
[k-1],Ñxx[k-1]);

542 } i‡(
rxx
[
k
-2] < 
	`COEF_CONST
(0.0)) {

543 
deg
[
k
] = 
	`COEF_CONST
(1.0Ë- 
	`MUL_C
(
rxx
[k-1],Ñxx[k-1]);

547 
	}
}

551 
ªÆ_t
 
	$m≠NewBw
(
uöt8_t
 
övf_mode
, uöt8_à
övf_mode_¥ev
)

553 
övf_mode
)

556 i‡(
övf_mode_¥ev
 == 0)

557  
	`COEF_CONST
(0.6);

559  
	`COEF_CONST
(0.75);

562  
	`COEF_CONST
(0.9);

565  
	`COEF_CONST
(0.98);

568 i‡(
övf_mode_¥ev
 == 1)

569  
	`COEF_CONST
(0.6);

571  
	`COEF_CONST
(0.0);

573 
	}
}

576 
	$ˇlc_chúp_Á˘‹s
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
)

578 
uöt8_t
 
i
;

580 
i
 = 0; i < 
sbr
->
N_Q
; i++)

582 
sbr
->
bwAºay
[
ch
][
i
] = 
	`m≠NewBw
(sbr->
bs_övf_mode
[ch][i], sbr->
bs_övf_mode_¥ev
[ch][i]);

584 i‡(
sbr
->
bwAºay
[
ch
][
i
] < sbr->
bwAºay_¥ev
[ch][i])

585 
sbr
->
bwAºay
[
ch
][
i
] = 
	`MUL_F
(sbr->bwAºay[ch][i], 
	`FRAC_CONST
(0.75)Ë+ MUL_F(sbr->
bwAºay_¥ev
[ch][i], FRAC_CONST(0.25));

587 
sbr
->
bwAºay
[
ch
][
i
] = 
	`MUL_F
(sbr->bwAºay[ch][i], 
	`FRAC_CONST
(0.90625)Ë+ MUL_F(sbr->
bwAºay_¥ev
[ch][i], FRAC_CONST(0.09375));

589 i‡(
sbr
->
bwAºay
[
ch
][
i
] < 
	`COEF_CONST
(0.015625))

590 
sbr
->
bwAºay
[
ch
][
i
] = 
	`COEF_CONST
(0.0);

592 i‡(
sbr
->
bwAºay
[
ch
][
i
] >
	`COEF_CONST
(0.99609375))

593 
sbr
->
bwAºay
[
ch
][
i
] = 
	`COEF_CONST
(0.99609375);

595 
sbr
->
bwAºay_¥ev
[
ch
][
i
] = sbr->
bwAºay
[ch][i];

596 
sbr
->
bs_övf_mode_¥ev
[
ch
][
i
] = sbr->
bs_övf_mode
[ch][i];

598 
	}
}

600 
	$∑tch_c⁄°ru˘i⁄
(
sbr_öfo
 *
sbr
)

602 
uöt8_t
 
i
, 
k
;

603 
uöt8_t
 
odd
, 
sb
;

604 
uöt8_t
 
msb
 = 
sbr
->
k0
;

605 
uöt8_t
 
usb
 = 
sbr
->
kx
;

606 
uöt8_t
 
gﬂlSbTab
[] = { 21, 23, 32, 43, 46, 64, 85, 93, 128, 0, 0, 0 };

608 
uöt8_t
 
gﬂlSb
 = 
gﬂlSbTab
[
	`gë_§_ödex
(
sbr
->
ßm∂e_øã
)];

610 
sbr
->
noP©ches
 = 0;

612 i‡(
gﬂlSb
 < (
sbr
->
kx
 + sbr->
M
))

614 
i
 = 0, 
k
 = 0; 
sbr
->
f_ma°î
[i] < 
gﬂlSb
; i++)

615 
k
 = 
i
+1;

617 
k
 = 
sbr
->
N_ma°î
;

620 i‡(
sbr
->
N_ma°î
 == 0)

622 
sbr
->
noP©ches
 = 0;

623 
sbr
->
∑tchNoSubb™ds
[0] = 0;

624 
sbr
->
∑tchSèπSubb™d
[0] = 0;

631 
uöt8_t
 
j
 = 
k
 + 1;

635 
j
--;

637 
sb
 = 
sbr
->
f_ma°î
[
j
];

638 
odd
 = (
sb
 - 2 + 
sbr
->
k0
) % 2;

639 } 
sb
 > (
sbr
->
k0
 - 1 + 
msb
 - 
odd
));

641 
sbr
->
∑tchNoSubb™ds
[sbr->
noP©ches
] = 
	`max
(
sb
 - 
usb
, 0);

642 
sbr
->
∑tchSèπSubb™d
[sbr->
noP©ches
] = sbr->
k0
 - 
odd
 -

643 
sbr
->
∑tchNoSubb™ds
[sbr->
noP©ches
];

645 i‡(
sbr
->
∑tchNoSubb™ds
[sbr->
noP©ches
] > 0)

647 
usb
 = 
sb
;

648 
msb
 = 
sb
;

649 
sbr
->
noP©ches
++;

651 
msb
 = 
sbr
->
kx
;

654 i‡(
sbr
->
f_ma°î
[
k
] - 
sb
 < 3)

655 
k
 = 
sbr
->
N_ma°î
;

656 } 
sb
 !(
sbr
->
kx
 + sbr->
M
));

658 i‡((
sbr
->
∑tchNoSubb™ds
[sbr->
noP©ches
-1] < 3) && (sbr->noPatches > 1))

660 
sbr
->
noP©ches
--;

663 
sbr
->
noP©ches
 = 
	`mö
(sbr->noPatches, 5);

664 
	}
}

	@sbr_hfgen.h

28 #i‚de‡
__SBR_HFGEN_H__


29 
	#__SBR_HFGEN_H__


	)

31 #ifde‡
__˝lu•lus


35 
hf_gíî©i⁄
(
sbr_öfo
 *
sbr
, 
qmf_t
 
Xlow
[
MAX_NTSRHFG
][64],

36 
qmf_t
 
Xhigh
[
MAX_NTSRHFG
][64]

37 #ifde‡
SBR_LOW_POWER


38 ,
ªÆ_t
 *
deg


40 ,
uöt8_t
 
ch
);

42 #ifde‡
__˝lu•lus


	@sbr_huff.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 #ifde‡
SBR_DEC


33 
	~"sbr_sy¡ax.h
"

34 
	~"bôs.h
"

35 
	~"sbr_huff.h
"

36 
	~"sbr_e_nf.h
"

39 c⁄° 
	töt8_t
 (*
	tsbr_huff_èb
)[2];

41 c⁄° 
öt8_t
 
	gt_huffm™_ív_1_5dB
[120][2] = {

74 c⁄° 
öt8_t
 
	gf_huffm™_ív_1_5dB
[120][2] = {

107 c⁄° 
öt8_t
 
	gt_huffm™_ív_bÆ_1_5dB
[48][2] = {

122 c⁄° 
öt8_t
 
	gf_huffm™_ív_bÆ_1_5dB
[48][2] = {

137 c⁄° 
öt8_t
 
	gt_huffm™_ív_3_0dB
[62][2] = {

156 c⁄° 
öt8_t
 
	gf_huffm™_ív_3_0dB
[62][2] = {

175 c⁄° 
öt8_t
 
	gt_huffm™_ív_bÆ_3_0dB
[24][2] = {

184 c⁄° 
öt8_t
 
	gf_huffm™_ív_bÆ_3_0dB
[24][2] = {

193 c⁄° 
öt8_t
 
	gt_huffm™_noi£_3_0dB
[62][2] = {

212 c⁄° 
öt8_t
 
	gt_huffm™_noi£_bÆ_3_0dB
[24][2] = {

222 
INLINE
 
öt16_t
 
	$sbr_huff_dec
(
bôfûe
 *
ld
, 
sbr_huff_èb
 
t_huff
)

224 
uöt8_t
 
bô
;

225 
öt16_t
 
ödex
 = 0;

227 
ödex
 >= 0)

229 
bô
 = (
uöt8_t
)
	`Áad_gë1bô
(
ld
);

230 
ödex
 = 
t_huff
[ödex][
bô
];

233  
ödex
 + 64;

234 
	}
}

237 
	$sbr_ívñ›e
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
)

239 
uöt8_t
 
ív
, 
b™d
;

240 
öt8_t
 
dñè
 = 0;

241 
sbr_huff_èb
 
t_huff
, 
f_huff
;

243 i‡((
sbr
->
L_E
[
ch
] =1Ë&& (sbr->
bs_‰ame_˛ass
[ch] =
FIXFIX
))

244 
sbr
->
amp_ªs
[
ch
] = 0;

246 
sbr
->
amp_ªs
[
ch
] = sbr->
bs_amp_ªs
;

248 i‡((
sbr
->
bs_cou∂ög
Ë&& (
ch
 == 1))

250 
dñè
 = 1;

251 i‡(
sbr
->
amp_ªs
[
ch
])

253 
t_huff
 = 
t_huffm™_ív_bÆ_3_0dB
;

254 
f_huff
 = 
f_huffm™_ív_bÆ_3_0dB
;

256 
t_huff
 = 
t_huffm™_ív_bÆ_1_5dB
;

257 
f_huff
 = 
f_huffm™_ív_bÆ_1_5dB
;

260 
dñè
 = 0;

261 i‡(
sbr
->
amp_ªs
[
ch
])

263 
t_huff
 = 
t_huffm™_ív_3_0dB
;

264 
f_huff
 = 
f_huffm™_ív_3_0dB
;

266 
t_huff
 = 
t_huffm™_ív_1_5dB
;

267 
f_huff
 = 
f_huffm™_ív_1_5dB
;

271 
ív
 = 0;Énv < 
sbr
->
L_E
[
ch
];Énv++)

273 i‡(
sbr
->
bs_df_ív
[
ch
][
ív
] == 0)

275 i‡((
sbr
->
bs_cou∂ög
 =1Ë&& (
ch
 == 1))

277 i‡(
sbr
->
amp_ªs
[
ch
])

279 
sbr
->
E
[
ch
][0][
ív
] = (
uöt16_t
)(
	`Áad_gëbôs
(
ld
, 5

280 
	`DEBUGVAR
(1,272,"sbr_ívñ›e(): bs_d©a_ív")Ë<< 
dñè
);

282 
sbr
->
E
[
ch
][0][
ív
] = (
uöt16_t
)(
	`Áad_gëbôs
(
ld
, 6

283 
	`DEBUGVAR
(1,273,"sbr_ívñ›e(): bs_d©a_ív")Ë<< 
dñè
);

286 i‡(
sbr
->
amp_ªs
[
ch
])

288 
sbr
->
E
[
ch
][0][
ív
] = (
uöt16_t
)(
	`Áad_gëbôs
(
ld
, 6

289 
	`DEBUGVAR
(1,274,"sbr_ívñ›e(): bs_d©a_ív")Ë<< 
dñè
);

291 
sbr
->
E
[
ch
][0][
ív
] = (
uöt16_t
)(
	`Áad_gëbôs
(
ld
, 7

292 
	`DEBUGVAR
(1,275,"sbr_ívñ›e(): bs_d©a_ív")Ë<< 
dñè
);

296 
b™d
 = 1; b™d < 
sbr
->
n
[sbr->
f
[
ch
][
ív
]]; band++)

298 
sbr
->
E
[
ch
][
b™d
][
ív
] = (
	`sbr_huff_dec
(
ld
, 
f_huff
Ë<< 
dñè
);

302 
b™d
 = 0; b™d < 
sbr
->
n
[sbr->
f
[
ch
][
ív
]]; band++)

304 
sbr
->
E
[
ch
][
b™d
][
ív
] = (
	`sbr_huff_dec
(
ld
, 
t_huff
Ë<< 
dñè
);

309 
	`exåa˘_ívñ›e_d©a
(
sbr
, 
ch
);

310 
	}
}

313 
	$sbr_noi£
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
)

315 
uöt8_t
 
noi£
, 
b™d
;

316 
öt8_t
 
dñè
 = 0;

317 
sbr_huff_èb
 
t_huff
, 
f_huff
;

319 i‡((
sbr
->
bs_cou∂ög
 =1Ë&& (
ch
 == 1))

321 
dñè
 = 1;

322 
t_huff
 = 
t_huffm™_noi£_bÆ_3_0dB
;

323 
f_huff
 = 
f_huffm™_ív_bÆ_3_0dB
;

325 
dñè
 = 0;

326 
t_huff
 = 
t_huffm™_noi£_3_0dB
;

327 
f_huff
 = 
f_huffm™_ív_3_0dB
;

330 
noi£
 = 0;Çoi£ < 
sbr
->
L_Q
[
ch
];Çoise++)

332 if(
sbr
->
bs_df_noi£
[
ch
][
noi£
] == 0)

334 i‡((
sbr
->
bs_cou∂ög
 =1Ë&& (
ch
 == 1))

336 
sbr
->
Q
[
ch
][0][
noi£
] = (
	`Áad_gëbôs
(
ld
, 5

337 
	`DEBUGVAR
(1,276,"sbr_noi£(): bs_d©a_noi£")Ë<< 
dñè
);

339 
sbr
->
Q
[
ch
][0][
noi£
] = (
	`Áad_gëbôs
(
ld
, 5

340 
	`DEBUGVAR
(1,277,"sbr_noi£(): bs_d©a_noi£")Ë<< 
dñè
);

342 
b™d
 = 1; b™d < 
sbr
->
N_Q
; band++)

344 
sbr
->
Q
[
ch
][
b™d
][
noi£
] = (
	`sbr_huff_dec
(
ld
, 
f_huff
Ë<< 
dñè
);

347 
b™d
 = 0; b™d < 
sbr
->
N_Q
; band++)

349 
sbr
->
Q
[
ch
][
b™d
][
noi£
] = (
	`sbr_huff_dec
(
ld
, 
t_huff
Ë<< 
dñè
);

354 
	`exåa˘_noi£_Êo‹_d©a
(
sbr
, 
ch
);

355 
	}
}

	@sbr_huff.h

28 #i‚de‡
__SBR_HUFF_H__


29 
	#__SBR_HUFF_H__


	)

31 #ifde‡
__˝lu•lus


36 
sbr_ívñ›e
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
);

37 
sbr_noi£
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
);

39 #ifde‡
__˝lu•lus


	@sbr_noise.h

28 #i‚de‡
__SBR_NOISE_H__


29 
	#__SBR_NOISE_H__


	)

31 #ifde‡
__˝lu•lus


35 #ifde‡
_MSC_VER


36 #¥agm®
w¨nög
(
dißbÀ
:4305)

37 #¥agm®
w¨nög
(
dißbÀ
:4244)

42 
ALIGN
 c⁄° 
com∂ex_t
 
V
[] = {

43 { 
FRAC_CONST
(-0.99948155879974), FRAC_CONST(-0.59483414888382) },

44 { 
FRAC_CONST
(0.97113454341888), FRAC_CONST(-0.67528516054153) },

45 { 
FRAC_CONST
(0.14130051434040), FRAC_CONST(-0.95090985298157) },

46 { 
FRAC_CONST
(-0.47005495429039), FRAC_CONST(-0.37340548634529) },

47 { 
FRAC_CONST
(0.80705064535141), FRAC_CONST(0.29653668403625) },

48 { 
FRAC_CONST
(-0.38981479406357), FRAC_CONST(0.89572608470917) },

49 { 
FRAC_CONST
(-0.01053049881011), FRAC_CONST(-0.66959059238434) },

50 { 
FRAC_CONST
(-0.91266369819641), FRAC_CONST(-0.11522938311100) },

51 { 
FRAC_CONST
(0.54840421676636), FRAC_CONST(0.75221365690231) },

52 { 
FRAC_CONST
(0.40009254217148), FRAC_CONST(-0.98929399251938) },

53 { 
FRAC_CONST
(-0.99867975711823), FRAC_CONST(-0.88147068023682) },

54 { 
FRAC_CONST
(-0.95531076192856), FRAC_CONST(0.90908759832382) },

55 { 
FRAC_CONST
(-0.45725932717323), FRAC_CONST(-0.56716322898865) },

56 { 
FRAC_CONST
(-0.72929674386978), FRAC_CONST(-0.98008275032043) },

57 { 
FRAC_CONST
(0.75622802972794), FRAC_CONST(0.20950329303741) },

58 { 
FRAC_CONST
(0.07069442421198), FRAC_CONST(-0.78247898817062) },

59 { 
FRAC_CONST
(0.74496251344681), FRAC_CONST(-0.91169005632401) },

60 { 
FRAC_CONST
(-0.96440184116364), FRAC_CONST(-0.94739919900894) },

61 { 
FRAC_CONST
(0.30424630641937), FRAC_CONST(-0.49438267946243) },

62 { 
FRAC_CONST
(0.66565030813217), FRAC_CONST(0.64652937650681) },

63 { 
FRAC_CONST
(0.91697007417679), FRAC_CONST(0.17514097690582) },

64 { 
FRAC_CONST
(-0.70774918794632), FRAC_CONST(0.52548652887344) },

65 { 
FRAC_CONST
(-0.70051413774490), FRAC_CONST(-0.45340028405190) },

66 { 
FRAC_CONST
(-0.99496513605118), FRAC_CONST(-0.90071910619736) },

67 { 
FRAC_CONST
(0.98164492845535), FRAC_CONST(-0.77463155984879) },

68 { 
FRAC_CONST
(-0.54671579599380), FRAC_CONST(-0.02570928446949) },

69 { 
FRAC_CONST
(-0.01689629070461), FRAC_CONST(0.00287506449968) },

70 { 
FRAC_CONST
(-0.86110347509384), FRAC_CONST(0.42548584938049) },

71 { 
FRAC_CONST
(-0.98892980813980), FRAC_CONST(-0.87881129980087) },

72 { 
FRAC_CONST
(0.51756626367569), FRAC_CONST(0.66926783323288) },

73 { 
FRAC_CONST
(-0.99635028839111), FRAC_CONST(-0.58107727766037) },

74 { 
FRAC_CONST
(-0.99969369173050), FRAC_CONST(0.98369991779327) },

75 { 
FRAC_CONST
(0.55266261100769), FRAC_CONST(0.59449058771133) },

76 { 
FRAC_CONST
(0.34581178426743), FRAC_CONST(0.94879418611526) },

77 { 
FRAC_CONST
(0.62664210796356), FRAC_CONST(-0.74402970075607) },

78 { 
FRAC_CONST
(-0.77149701118469), FRAC_CONST(-0.33883658051491) },

79 { 
FRAC_CONST
(-0.91592246294022), FRAC_CONST(0.03687901422381) },

80 { 
FRAC_CONST
(-0.76285493373871), FRAC_CONST(-0.91371870040894) },

81 { 
FRAC_CONST
(0.79788339138031), FRAC_CONST(-0.93180972337723) },

82 { 
FRAC_CONST
(0.54473078250885), FRAC_CONST(-0.11919206380844) },

83 { 
FRAC_CONST
(-0.85639280080795), FRAC_CONST(0.42429855465889) },

84 { 
FRAC_CONST
(-0.92882400751114), FRAC_CONST(0.27871808409691) },

85 { 
FRAC_CONST
(-0.11708371341228), FRAC_CONST(-0.99800843000412) },

86 { 
FRAC_CONST
(0.21356749534607), FRAC_CONST(-0.90716296434402) },

87 { 
FRAC_CONST
(-0.76191693544388), FRAC_CONST(0.99768120050430) },

88 { 
FRAC_CONST
(0.98111045360565), FRAC_CONST(-0.95854461193085) },

89 { 
FRAC_CONST
(-0.85913270711899), FRAC_CONST(0.95766568183899) },

90 { 
FRAC_CONST
(-0.93307244777679), FRAC_CONST(0.49431759119034) },

91 { 
FRAC_CONST
(0.30485755205154), FRAC_CONST(-0.70540034770966) },

92 { 
FRAC_CONST
(0.85289651155472), FRAC_CONST(0.46766132116318) },

93 { 
FRAC_CONST
(0.91328084468842), FRAC_CONST(-0.99839597940445) },

94 { 
FRAC_CONST
(-0.05890199914575), FRAC_CONST(0.70741826295853) },

95 { 
FRAC_CONST
(0.28398686647415), FRAC_CONST(0.34633556008339) },

96 { 
FRAC_CONST
(0.95258164405823), FRAC_CONST(-0.54893416166306) },

97 { 
FRAC_CONST
(-0.78566324710846), FRAC_CONST(-0.75568538904190) },

98 { 
FRAC_CONST
(-0.95789498090744), FRAC_CONST(-0.20423194766045) },

99 { 
FRAC_CONST
(0.82411158084869), FRAC_CONST(0.96654617786407) },

100 { 
FRAC_CONST
(-0.65185445547104), FRAC_CONST(-0.88734990358353) },

101 { 
FRAC_CONST
(-0.93643605709076), FRAC_CONST(0.99870789051056) },

102 { 
FRAC_CONST
(0.91427159309387), FRAC_CONST(-0.98290503025055) },

103 { 
FRAC_CONST
(-0.70395684242249), FRAC_CONST(0.58796799182892) },

104 { 
FRAC_CONST
(0.00563771976158), FRAC_CONST(0.61768198013306) },

105 { 
FRAC_CONST
(0.89065051078796), FRAC_CONST(0.52783352136612) },

106 { 
FRAC_CONST
(-0.68683707714081), FRAC_CONST(0.80806946754456) },

107 { 
FRAC_CONST
(0.72165340185165), FRAC_CONST(-0.69259858131409) },

108 { 
FRAC_CONST
(-0.62928247451782), FRAC_CONST(0.13627037405968) },

109 { 
FRAC_CONST
(0.29938435554504), FRAC_CONST(-0.46051329374313) },

110 { 
FRAC_CONST
(-0.91781955957413), FRAC_CONST(-0.74012714624405) },

111 { 
FRAC_CONST
(0.99298715591431), FRAC_CONST(0.40816611051559) },

112 { 
FRAC_CONST
(0.82368296384811), FRAC_CONST(-0.74036049842834) },

113 { 
FRAC_CONST
(-0.98512834310532), FRAC_CONST(-0.99972331523895) },

114 { 
FRAC_CONST
(-0.95915371179581), FRAC_CONST(-0.99237799644470) },

115 { 
FRAC_CONST
(-0.21411126852036), FRAC_CONST(-0.93424820899963) },

116 { 
FRAC_CONST
(-0.68821477890015), FRAC_CONST(-0.26892307400703) },

117 { 
FRAC_CONST
(0.91851997375488), FRAC_CONST(0.09358228743076) },

118 { 
FRAC_CONST
(-0.96062767505646), FRAC_CONST(0.36099094152451) },

119 { 
FRAC_CONST
(0.51646184921265), FRAC_CONST(-0.71373331546783) },

120 { 
FRAC_CONST
(0.61130720376968), FRAC_CONST(0.46950140595436) },

121 { 
FRAC_CONST
(0.47336128354073), FRAC_CONST(-0.27333179116249) },

122 { 
FRAC_CONST
(0.90998309850693), FRAC_CONST(0.96715664863586) },

123 { 
FRAC_CONST
(0.44844800233841), FRAC_CONST(0.99211573600769) },

124 { 
FRAC_CONST
(0.66614890098572), FRAC_CONST(0.96590173244476) },

125 { 
FRAC_CONST
(0.74922239780426), FRAC_CONST(-0.89879858493805) },

126 { 
FRAC_CONST
(-0.99571585655212), FRAC_CONST(0.52785521745682) },

127 { 
FRAC_CONST
(0.97401082515717), FRAC_CONST(-0.16855870187283) },

128 { 
FRAC_CONST
(0.72683745622635), FRAC_CONST(-0.48060774803162) },

129 { 
FRAC_CONST
(0.95432192087173), FRAC_CONST(0.68849605321884) },

130 { 
FRAC_CONST
(-0.72962206602097), FRAC_CONST(-0.76608443260193) },

131 { 
FRAC_CONST
(-0.85359477996826), FRAC_CONST(0.88738125562668) },

132 { 
FRAC_CONST
(-0.81412428617477), FRAC_CONST(-0.97480767965317) },

133 { 
FRAC_CONST
(-0.87930774688721), FRAC_CONST(0.74748307466507) },

134 { 
FRAC_CONST
(-0.71573328971863), FRAC_CONST(-0.98570609092712) },

135 { 
FRAC_CONST
(0.83524298667908), FRAC_CONST(0.83702534437180) },

136 { 
FRAC_CONST
(-0.48086065053940), FRAC_CONST(-0.98848503828049) },

137 { 
FRAC_CONST
(0.97139126062393), FRAC_CONST(0.80093622207642) },

138 { 
FRAC_CONST
(0.51992827653885), FRAC_CONST(0.80247628688812) },

139 { 
FRAC_CONST
(-0.00848591234535), FRAC_CONST(-0.76670128107071) },

140 { 
FRAC_CONST
(-0.70294374227524), FRAC_CONST(0.55359911918640) },

141 { 
FRAC_CONST
(-0.95894426107407), FRAC_CONST(-0.43265503644943) },

142 { 
FRAC_CONST
(0.97079253196716), FRAC_CONST(0.09325857460499) },

143 { 
FRAC_CONST
(-0.92404294013977), FRAC_CONST(0.85507702827454) },

144 { 
FRAC_CONST
(-0.69506472349167), FRAC_CONST(0.98633414506912) },

145 { 
FRAC_CONST
(0.26559203863144), FRAC_CONST(0.73314309120178) },

146 { 
FRAC_CONST
(0.28038442134857), FRAC_CONST(0.14537914097309) },

147 { 
FRAC_CONST
(-0.74138122797012), FRAC_CONST(0.99310338497162) },

148 { 
FRAC_CONST
(-0.01752796024084), FRAC_CONST(-0.82616633176804) },

149 { 
FRAC_CONST
(-0.55126774311066), FRAC_CONST(-0.98898541927338) },

150 { 
FRAC_CONST
(0.97960901260376), FRAC_CONST(-0.94021445512772) },

151 { 
FRAC_CONST
(-0.99196308851242), FRAC_CONST(0.67019015550613) },

152 { 
FRAC_CONST
(-0.67684930562973), FRAC_CONST(0.12631492316723) },

153 { 
FRAC_CONST
(0.09140039235353), FRAC_CONST(-0.20537731051445) },

154 { 
FRAC_CONST
(-0.71658962965012), FRAC_CONST(-0.97788202762604) },

155 { 
FRAC_CONST
(0.81014639139175), FRAC_CONST(0.53722649812698) },

156 { 
FRAC_CONST
(0.40616992115974), FRAC_CONST(-0.26469007134438) },

157 { 
FRAC_CONST
(-0.67680186033249), FRAC_CONST(0.94502049684525) },

158 { 
FRAC_CONST
(0.86849772930145), FRAC_CONST(-0.18333598971367) },

159 { 
FRAC_CONST
(-0.99500381946564), FRAC_CONST(-0.02634122036397) },

160 { 
FRAC_CONST
(0.84329187870026), FRAC_CONST(0.10406957566738) },

161 { 
FRAC_CONST
(-0.09215968847275), FRAC_CONST(0.69540011882782) },

162 { 
FRAC_CONST
(0.99956172704697), FRAC_CONST(-0.12358541786671) },

163 { 
FRAC_CONST
(-0.79732781648636), FRAC_CONST(-0.91582524776459) },

164 { 
FRAC_CONST
(0.96349972486496), FRAC_CONST(0.96640455722809) },

165 { 
FRAC_CONST
(-0.79942780733109), FRAC_CONST(0.64323902130127) },

166 { 
FRAC_CONST
(-0.11566039919853), FRAC_CONST(0.28587844967842) },

167 { 
FRAC_CONST
(-0.39922955632210), FRAC_CONST(0.94129604101181) },

168 { 
FRAC_CONST
(0.99089199304581), FRAC_CONST(-0.92062628269196) },

169 { 
FRAC_CONST
(0.28631284832954), FRAC_CONST(-0.91035044193268) },

170 { 
FRAC_CONST
(-0.83302724361420), FRAC_CONST(-0.67330408096313) },

171 { 
FRAC_CONST
(0.95404446125031), FRAC_CONST(0.49162766337395) },

172 { 
FRAC_CONST
(-0.06449863314629), FRAC_CONST(0.03250560909510) },

173 { 
FRAC_CONST
(-0.99575054645538), FRAC_CONST(0.42389783263206) },

174 { 
FRAC_CONST
(-0.65501141548157), FRAC_CONST(0.82546114921570) },

175 { 
FRAC_CONST
(-0.81254440546036), FRAC_CONST(-0.51627236604691) },

176 { 
FRAC_CONST
(-0.99646371603012), FRAC_CONST(0.84490531682968) },

177 { 
FRAC_CONST
(0.00287840608507), FRAC_CONST(0.64768260717392) },

178 { 
FRAC_CONST
(0.70176988840103), FRAC_CONST(-0.20453028380871) },

179 { 
FRAC_CONST
(0.96361881494522), FRAC_CONST(0.40706968307495) },

180 { 
FRAC_CONST
(-0.68883758783340), FRAC_CONST(0.91338956356049) },

181 { 
FRAC_CONST
(-0.34875586628914), FRAC_CONST(0.71472293138504) },

182 { 
FRAC_CONST
(0.91980081796646), FRAC_CONST(0.66507452726364) },

183 { 
FRAC_CONST
(-0.99009048938751), FRAC_CONST(0.85868018865585) },

184 { 
FRAC_CONST
(0.68865793943405), FRAC_CONST(0.55660319328308) },

185 { 
FRAC_CONST
(-0.99484401941299), FRAC_CONST(-0.20052559673786) },

186 { 
FRAC_CONST
(0.94214510917664), FRAC_CONST(-0.99696427583694) },

187 { 
FRAC_CONST
(-0.67414629459381), FRAC_CONST(0.49548220634460) },

188 { 
FRAC_CONST
(-0.47339352965355), FRAC_CONST(-0.85904330015182) },

189 { 
FRAC_CONST
(0.14323651790619), FRAC_CONST(-0.94145596027374) },

190 { 
FRAC_CONST
(-0.29268294572830), FRAC_CONST(0.05759225040674) },

191 { 
FRAC_CONST
(0.43793860077858), FRAC_CONST(-0.78904968500137) },

192 { 
FRAC_CONST
(-0.36345127224922), FRAC_CONST(0.64874434471130) },

193 { 
FRAC_CONST
(-0.08750604838133), FRAC_CONST(0.97686946392059) },

194 { 
FRAC_CONST
(-0.96495270729065), FRAC_CONST(-0.53960305452347) },

195 { 
FRAC_CONST
(0.55526942014694), FRAC_CONST(0.78891521692276) },

196 { 
FRAC_CONST
(0.73538213968277), FRAC_CONST(0.96452075242996) },

197 { 
FRAC_CONST
(-0.30889773368835), FRAC_CONST(-0.80664390325546) },

198 { 
FRAC_CONST
(0.03574995696545), FRAC_CONST(-0.97325617074966) },

199 { 
FRAC_CONST
(0.98720687627792), FRAC_CONST(0.48409134149551) },

200 { 
FRAC_CONST
(-0.81689298152924), FRAC_CONST(-0.90827703475952) },

201 { 
FRAC_CONST
(0.67866861820221), FRAC_CONST(0.81284505128860) },

202 { 
FRAC_CONST
(-0.15808570384979), FRAC_CONST(0.85279554128647) },

203 { 
FRAC_CONST
(0.80723392963409), FRAC_CONST(-0.24717418849468) },

204 { 
FRAC_CONST
(0.47788757085800), FRAC_CONST(-0.46333149075508) },

205 { 
FRAC_CONST
(0.96367555856705), FRAC_CONST(0.38486748933792) },

206 { 
FRAC_CONST
(-0.99143874645233), FRAC_CONST(-0.24945276975632) },

207 { 
FRAC_CONST
(0.83081877231598), FRAC_CONST(-0.94780850410461) },

208 { 
FRAC_CONST
(-0.58753192424774), FRAC_CONST(0.01290772389621) },

209 { 
FRAC_CONST
(0.95538109540939), FRAC_CONST(-0.85557049512863) },

210 { 
FRAC_CONST
(-0.96490919589996), FRAC_CONST(-0.64020973443985) },

211 { 
FRAC_CONST
(-0.97327101230621), FRAC_CONST(0.12378127872944) },

212 { 
FRAC_CONST
(0.91400367021561), FRAC_CONST(0.57972472906113) },

213 { 
FRAC_CONST
(-0.99925839900970), FRAC_CONST(0.71084845066071) },

214 { 
FRAC_CONST
(-0.86875903606415), FRAC_CONST(-0.20291699469090) },

215 { 
FRAC_CONST
(-0.26240035891533), FRAC_CONST(-0.68264555931091) },

216 { 
FRAC_CONST
(-0.24664412438869), FRAC_CONST(-0.87642270326614) },

217 { 
FRAC_CONST
(0.02416275814176), FRAC_CONST(0.27192914485931) },

218 { 
FRAC_CONST
(0.82068622112274), FRAC_CONST(-0.85087788105011) },

219 { 
FRAC_CONST
(0.88547372817993), FRAC_CONST(-0.89636802673340) },

220 { 
FRAC_CONST
(-0.18173077702522), FRAC_CONST(-0.26152145862579) },

221 { 
FRAC_CONST
(0.09355476498604), FRAC_CONST(0.54845124483109) },

222 { 
FRAC_CONST
(-0.54668414592743), FRAC_CONST(0.95980775356293) },

223 { 
FRAC_CONST
(0.37050989270210), FRAC_CONST(-0.59910142421722) },

224 { 
FRAC_CONST
(-0.70373594760895), FRAC_CONST(0.91227668523788) },

225 { 
FRAC_CONST
(-0.34600785374641), FRAC_CONST(-0.99441426992416) },

226 { 
FRAC_CONST
(-0.68774479627609), FRAC_CONST(-0.30238837003708) },

227 { 
FRAC_CONST
(-0.26843291521072), FRAC_CONST(0.83115667104721) },

228 { 
FRAC_CONST
(0.49072334170341), FRAC_CONST(-0.45359709858894) },

229 { 
FRAC_CONST
(0.38975992798805), FRAC_CONST(0.95515358448029) },

230 { 
FRAC_CONST
(-0.97757124900818), FRAC_CONST(0.05305894464254) },

231 { 
FRAC_CONST
(-0.17325553297997), FRAC_CONST(-0.92770671844482) },

232 { 
FRAC_CONST
(0.99948036670685), FRAC_CONST(0.58285546302795) },

233 { 
FRAC_CONST
(-0.64946246147156), FRAC_CONST(0.68645507097244) },

234 { 
FRAC_CONST
(-0.12016920745373), FRAC_CONST(-0.57147324085236) },

235 { 
FRAC_CONST
(-0.58947455883026), FRAC_CONST(-0.34847131371498) },

236 { 
FRAC_CONST
(-0.41815140843391), FRAC_CONST(0.16276422142982) },

237 { 
FRAC_CONST
(0.99885648488998), FRAC_CONST(0.11136095225811) },

238 { 
FRAC_CONST
(-0.56649613380432), FRAC_CONST(-0.90494865179062) },

239 { 
FRAC_CONST
(0.94138020277023), FRAC_CONST(0.35281917452812) },

240 { 
FRAC_CONST
(-0.75725078582764), FRAC_CONST(0.53650552034378) },

241 { 
FRAC_CONST
(0.20541973412037), FRAC_CONST(-0.94435143470764) },

242 { 
FRAC_CONST
(0.99980372190475), FRAC_CONST(0.79835915565491) },

243 { 
FRAC_CONST
(0.29078277945518), FRAC_CONST(0.35393777489662) },

244 { 
FRAC_CONST
(-0.62858772277832), FRAC_CONST(0.38765692710876) },

245 { 
FRAC_CONST
(0.43440905213356), FRAC_CONST(-0.98546332120895) },

246 { 
FRAC_CONST
(-0.98298585414886), FRAC_CONST(0.21021524071693) },

247 { 
FRAC_CONST
(0.19513028860092), FRAC_CONST(-0.94239830970764) },

248 { 
FRAC_CONST
(-0.95476663112640), FRAC_CONST(0.98364555835724) },

249 { 
FRAC_CONST
(0.93379634618759), FRAC_CONST(-0.70881992578506) },

250 { 
FRAC_CONST
(-0.85235410928726), FRAC_CONST(-0.08342348039150) },

251 { 
FRAC_CONST
(-0.86425095796585), FRAC_CONST(-0.45795026421547) },

252 { 
FRAC_CONST
(0.38879778981209), FRAC_CONST(0.97274428606033) },

253 { 
FRAC_CONST
(0.92045122385025), FRAC_CONST(-0.62433654069901) },

254 { 
FRAC_CONST
(0.89162534475327), FRAC_CONST(0.54950958490372) },

255 { 
FRAC_CONST
(-0.36834338307381), FRAC_CONST(0.96458297967911) },

256 { 
FRAC_CONST
(0.93891763687134), FRAC_CONST(-0.89968353509903) },

257 { 
FRAC_CONST
(0.99267655611038), FRAC_CONST(-0.03757034242153) },

258 { 
FRAC_CONST
(-0.94063472747803), FRAC_CONST(0.41332337260246) },

259 { 
FRAC_CONST
(0.99740225076675), FRAC_CONST(-0.16830494999886) },

260 { 
FRAC_CONST
(-0.35899412631989), FRAC_CONST(-0.46633225679398) },

261 { 
FRAC_CONST
(0.05237237364054), FRAC_CONST(-0.25640362501144) },

262 { 
FRAC_CONST
(0.36703583598137), FRAC_CONST(-0.38653266429901) },

263 { 
FRAC_CONST
(0.91653180122375), FRAC_CONST(-0.30587628483772) },

264 { 
FRAC_CONST
(0.69000804424286), FRAC_CONST(0.90952169895172) },

265 { 
FRAC_CONST
(-0.38658750057220), FRAC_CONST(0.99501574039459) },

266 { 
FRAC_CONST
(-0.29250815510750), FRAC_CONST(0.37444993853569) },

267 { 
FRAC_CONST
(-0.60182201862335), FRAC_CONST(0.86779648065567) },

268 { 
FRAC_CONST
(-0.97418588399887), FRAC_CONST(0.96468526124954) },

269 { 
FRAC_CONST
(0.88461571931839), FRAC_CONST(0.57508403062820) },

270 { 
FRAC_CONST
(0.05198933184147), FRAC_CONST(0.21269661188126) },

271 { 
FRAC_CONST
(-0.53499621152878), FRAC_CONST(0.97241556644440) },

272 { 
FRAC_CONST
(-0.49429559707642), FRAC_CONST(0.98183864355087) },

273 { 
FRAC_CONST
(-0.98935145139694), FRAC_CONST(-0.40249159932137) },

274 { 
FRAC_CONST
(-0.98081380128860), FRAC_CONST(-0.72856897115707) },

275 { 
FRAC_CONST
(-0.27338150143623), FRAC_CONST(0.99950921535492) },

276 { 
FRAC_CONST
(0.06310802698135), FRAC_CONST(-0.54539585113525) },

277 { 
FRAC_CONST
(-0.20461677014828), FRAC_CONST(-0.14209978282452) },

278 { 
FRAC_CONST
(0.66223841905594), FRAC_CONST(0.72528582811356) },

279 { 
FRAC_CONST
(-0.84764343500137), FRAC_CONST(0.02372316829860) },

280 { 
FRAC_CONST
(-0.89039862155914), FRAC_CONST(0.88866579532623) },

281 { 
FRAC_CONST
(0.95903307199478), FRAC_CONST(0.76744925975800) },

282 { 
FRAC_CONST
(0.73504126071930), FRAC_CONST(-0.03747203201056) },

283 { 
FRAC_CONST
(-0.31744435429573), FRAC_CONST(-0.36834111809731) },

284 { 
FRAC_CONST
(-0.34110826253891), FRAC_CONST(0.40211221575737) },

285 { 
FRAC_CONST
(0.47803884744644), FRAC_CONST(-0.39423218369484) },

286 { 
FRAC_CONST
(0.98299193382263), FRAC_CONST(0.01989791356027) },

287 { 
FRAC_CONST
(-0.30963072180748), FRAC_CONST(-0.18076720833778) },

288 { 
FRAC_CONST
(0.99992591142654), FRAC_CONST(-0.26281872391701) },

289 { 
FRAC_CONST
(-0.93149733543396), FRAC_CONST(-0.98313164710999) },

290 { 
FRAC_CONST
(0.99923473596573), FRAC_CONST(-0.80142992734909) },

291 { 
FRAC_CONST
(-0.26024168729782), FRAC_CONST(-0.75999760627747) },

292 { 
FRAC_CONST
(-0.35712513327599), FRAC_CONST(0.19298963248730) },

293 { 
FRAC_CONST
(-0.99899083375931), FRAC_CONST(0.74645155668259) },

294 { 
FRAC_CONST
(0.86557173728943), FRAC_CONST(0.55593866109848) },

295 { 
FRAC_CONST
(0.33408042788506), FRAC_CONST(0.86185956001282) },

296 { 
FRAC_CONST
(0.99010735750198), FRAC_CONST(0.04602397605777) },

297 { 
FRAC_CONST
(-0.66694271564484), FRAC_CONST(-0.91643613576889) },

298 { 
FRAC_CONST
(0.64016789197922), FRAC_CONST(0.15649530291557) },

299 { 
FRAC_CONST
(0.99570536613464), FRAC_CONST(0.45844584703445) },

300 { 
FRAC_CONST
(-0.63431465625763), FRAC_CONST(0.21079117059708) },

301 { 
FRAC_CONST
(-0.07706847041845), FRAC_CONST(-0.89581435918808) },

302 { 
FRAC_CONST
(0.98590087890625), FRAC_CONST(0.88241720199585) },

303 { 
FRAC_CONST
(0.80099332332611), FRAC_CONST(-0.36851897835732) },

304 { 
FRAC_CONST
(0.78368133306503), FRAC_CONST(0.45506998896599) },

305 { 
FRAC_CONST
(0.08707806468010), FRAC_CONST(0.80938994884491) },

306 { 
FRAC_CONST
(-0.86811882257462), FRAC_CONST(0.39347308874130) },

307 { 
FRAC_CONST
(-0.39466530084610), FRAC_CONST(-0.66809433698654) },

308 { 
FRAC_CONST
(0.97875326871872), FRAC_CONST(-0.72467839717865) },

309 { 
FRAC_CONST
(-0.95038563013077), FRAC_CONST(0.89563220739365) },

310 { 
FRAC_CONST
(0.17005239427090), FRAC_CONST(0.54683053493500) },

311 { 
FRAC_CONST
(-0.76910793781281), FRAC_CONST(-0.96226614713669) },

312 { 
FRAC_CONST
(0.99743282794952), FRAC_CONST(0.42697158455849) },

313 { 
FRAC_CONST
(0.95437383651733), FRAC_CONST(0.97002321481705) },

314 { 
FRAC_CONST
(0.99578905105591), FRAC_CONST(-0.54106825590134) },

315 { 
FRAC_CONST
(0.28058260679245), FRAC_CONST(-0.85361421108246) },

316 { 
FRAC_CONST
(0.85256522893906), FRAC_CONST(-0.64567607641220) },

317 { 
FRAC_CONST
(-0.50608539581299), FRAC_CONST(-0.65846014022827) },

318 { 
FRAC_CONST
(-0.97210735082626), FRAC_CONST(-0.23095212876797) },

319 { 
FRAC_CONST
(0.95424050092697), FRAC_CONST(-0.99240148067474) },

320 { 
FRAC_CONST
(-0.96926569938660), FRAC_CONST(0.73775655031204) },

321 { 
FRAC_CONST
(0.30872163176537), FRAC_CONST(0.41514959931374) },

322 { 
FRAC_CONST
(-0.24523839354515), FRAC_CONST(0.63206630945206) },

323 { 
FRAC_CONST
(-0.33813264966011), FRAC_CONST(-0.38661777973175) },

324 { 
FRAC_CONST
(-0.05826828256249), FRAC_CONST(-0.06940773874521) },

325 { 
FRAC_CONST
(-0.22898460924625), FRAC_CONST(0.97054851055145) },

326 { 
FRAC_CONST
(-0.18509915471077), FRAC_CONST(0.47565764188766) },

327 { 
FRAC_CONST
(-0.10488238185644), FRAC_CONST(-0.87769949436188) },

328 { 
FRAC_CONST
(-0.71886587142944), FRAC_CONST(0.78030979633331) },

329 { 
FRAC_CONST
(0.99793875217438), FRAC_CONST(0.90041309595108) },

330 { 
FRAC_CONST
(0.57563304901123), FRAC_CONST(-0.91034334897995) },

331 { 
FRAC_CONST
(0.28909647464752), FRAC_CONST(0.96307784318924) },

332 { 
FRAC_CONST
(0.42188999056816), FRAC_CONST(0.48148649930954) },

333 { 
FRAC_CONST
(0.93335050344467), FRAC_CONST(-0.43537023663521) },

334 { 
FRAC_CONST
(-0.97087377309799), FRAC_CONST(0.86636447906494) },

335 { 
FRAC_CONST
(0.36722871661186), FRAC_CONST(0.65291655063629) },

336 { 
FRAC_CONST
(-0.81093025207520), FRAC_CONST(0.08778370171785) },

337 { 
FRAC_CONST
(-0.26240602135658), FRAC_CONST(-0.92774093151093) },

338 { 
FRAC_CONST
(0.83996498584747), FRAC_CONST(0.55839848518372) },

339 { 
FRAC_CONST
(-0.99909615516663), FRAC_CONST(-0.96024608612061) },

340 { 
FRAC_CONST
(0.74649465084076), FRAC_CONST(0.12144893407822) },

341 { 
FRAC_CONST
(-0.74774593114853), FRAC_CONST(-0.26898062229156) },

342 { 
FRAC_CONST
(0.95781666040421), FRAC_CONST(-0.79047924280167) },

343 { 
FRAC_CONST
(0.95472306013107), FRAC_CONST(-0.08588775992393) },

344 { 
FRAC_CONST
(0.48708331584930), FRAC_CONST(0.99999040365219) },

345 { 
FRAC_CONST
(0.46332037448883), FRAC_CONST(0.10964126139879) },

346 { 
FRAC_CONST
(-0.76497006416321), FRAC_CONST(0.89210927486420) },

347 { 
FRAC_CONST
(0.57397389411926), FRAC_CONST(0.35289704799652) },

348 { 
FRAC_CONST
(0.75374317169189), FRAC_CONST(0.96705216169357) },

349 { 
FRAC_CONST
(-0.59174400568008), FRAC_CONST(-0.89405369758606) },

350 { 
FRAC_CONST
(0.75087904930115), FRAC_CONST(-0.29612672328949) },

351 { 
FRAC_CONST
(-0.98607856035233), FRAC_CONST(0.25034910440445) },

352 { 
FRAC_CONST
(-0.40761056542397), FRAC_CONST(-0.90045571327209) },

353 { 
FRAC_CONST
(0.66929268836975), FRAC_CONST(0.98629492521286) },

354 { 
FRAC_CONST
(-0.97463697195053), FRAC_CONST(-0.00190223299433) },

355 { 
FRAC_CONST
(0.90145510435104), FRAC_CONST(0.99781388044357) },

356 { 
FRAC_CONST
(-0.87259286642075), FRAC_CONST(0.99233585596085) },

357 { 
FRAC_CONST
(-0.91529458761215), FRAC_CONST(-0.15698707103729) },

358 { 
FRAC_CONST
(-0.03305738791823), FRAC_CONST(-0.37205263972282) },

359 { 
FRAC_CONST
(0.07223051041365), FRAC_CONST(-0.88805001974106) },

360 { 
FRAC_CONST
(0.99498009681702), FRAC_CONST(0.97094357013702) },

361 { 
FRAC_CONST
(-0.74904936552048), FRAC_CONST(0.99985486268997) },

362 { 
FRAC_CONST
(0.04585228487849), FRAC_CONST(0.99812334775925) },

363 { 
FRAC_CONST
(-0.89054954051971), FRAC_CONST(-0.31791913509369) },

364 { 
FRAC_CONST
(-0.83782142400742), FRAC_CONST(0.97637635469437) },

365 { 
FRAC_CONST
(0.33454805612564), FRAC_CONST(-0.86231517791748) },

366 { 
FRAC_CONST
(-0.99707579612732), FRAC_CONST(0.93237990140915) },

367 { 
FRAC_CONST
(-0.22827528417110), FRAC_CONST(0.18874759972095) },

368 { 
FRAC_CONST
(0.67248046398163), FRAC_CONST(-0.03646211326122) },

369 { 
FRAC_CONST
(-0.05146538093686), FRAC_CONST(-0.92599701881409) },

370 { 
FRAC_CONST
(0.99947297573090), FRAC_CONST(0.93625229597092) },

371 { 
FRAC_CONST
(0.66951125860214), FRAC_CONST(0.98905825614929) },

372 { 
FRAC_CONST
(-0.99602955579758), FRAC_CONST(-0.44654715061188) },

373 { 
FRAC_CONST
(0.82104903459549), FRAC_CONST(0.99540740251541) },

374 { 
FRAC_CONST
(0.99186509847641), FRAC_CONST(0.72022998332977) },

375 { 
FRAC_CONST
(-0.65284591913223), FRAC_CONST(0.52186721563339) },

376 { 
FRAC_CONST
(0.93885445594788), FRAC_CONST(-0.74895310401917) },

377 { 
FRAC_CONST
(0.96735250949860), FRAC_CONST(0.90891814231873) },

378 { 
FRAC_CONST
(-0.22225968539715), FRAC_CONST(0.57124030590057) },

379 { 
FRAC_CONST
(-0.44132784008980), FRAC_CONST(-0.92688840627670) },

380 { 
FRAC_CONST
(-0.85694974660873), FRAC_CONST(0.88844531774521) },

381 { 
FRAC_CONST
(0.91783040761948), FRAC_CONST(-0.46356892585754) },

382 { 
FRAC_CONST
(0.72556972503662), FRAC_CONST(-0.99899554252625) },

383 { 
FRAC_CONST
(-0.99711579084396), FRAC_CONST(0.58211559057236) },

384 { 
FRAC_CONST
(0.77638977766037), FRAC_CONST(0.94321835041046) },

385 { 
FRAC_CONST
(0.07717324048281), FRAC_CONST(0.58638399839401) },

386 { 
FRAC_CONST
(-0.56049829721451), FRAC_CONST(0.82522302865982) },

387 { 
FRAC_CONST
(0.98398894071579), FRAC_CONST(0.39467439055443) },

388 { 
FRAC_CONST
(0.47546947002411), FRAC_CONST(0.68613046407700) },

389 { 
FRAC_CONST
(0.65675091743469), FRAC_CONST(0.18331636488438) },

390 { 
FRAC_CONST
(0.03273375332355), FRAC_CONST(-0.74933111667633) },

391 { 
FRAC_CONST
(-0.38684144616127), FRAC_CONST(0.51337349414825) },

392 { 
FRAC_CONST
(-0.97346270084381), FRAC_CONST(-0.96549361944199) },

393 { 
FRAC_CONST
(-0.53282153606415), FRAC_CONST(-0.91423267126083) },

394 { 
FRAC_CONST
(0.99817311763763), FRAC_CONST(0.61133575439453) },

395 { 
FRAC_CONST
(-0.50254499912262), FRAC_CONST(-0.88829338550568) },

396 { 
FRAC_CONST
(0.01995873264968), FRAC_CONST(0.85223513841629) },

397 { 
FRAC_CONST
(0.99930381774902), FRAC_CONST(0.94578897953033) },

398 { 
FRAC_CONST
(0.82907766103745), FRAC_CONST(-0.06323442608118) },

399 { 
FRAC_CONST
(-0.58660709857941), FRAC_CONST(0.96840775012970) },

400 { 
FRAC_CONST
(-0.17573736608028), FRAC_CONST(-0.48166921734810) },

401 { 
FRAC_CONST
(0.83434289693832), FRAC_CONST(-0.13023450970650) },

402 { 
FRAC_CONST
(0.05946491286159), FRAC_CONST(0.20511047542095) },

403 { 
FRAC_CONST
(0.81505483388901), FRAC_CONST(-0.94685947895050) },

404 { 
FRAC_CONST
(-0.44976380467415), FRAC_CONST(0.40894573926926) },

405 { 
FRAC_CONST
(-0.89746475219727), FRAC_CONST(0.99846577644348) },

406 { 
FRAC_CONST
(0.39677256345749), FRAC_CONST(-0.74854665994644) },

407 { 
FRAC_CONST
(-0.07588948309422), FRAC_CONST(0.74096214771271) },

408 { 
FRAC_CONST
(0.76343196630478), FRAC_CONST(0.41746628284454) },

409 { 
FRAC_CONST
(-0.74490106105804), FRAC_CONST(0.94725912809372) },

410 { 
FRAC_CONST
(0.64880120754242), FRAC_CONST(0.41336661577225) },

411 { 
FRAC_CONST
(0.62319535017014), FRAC_CONST(-0.93098312616348) },

412 { 
FRAC_CONST
(0.42215818166733), FRAC_CONST(-0.07712787389755) },

413 { 
FRAC_CONST
(0.02704554051161), FRAC_CONST(-0.05417517945170) },

414 { 
FRAC_CONST
(0.80001771450043), FRAC_CONST(0.91542196273804) },

415 { 
FRAC_CONST
(-0.79351830482483), FRAC_CONST(-0.36208897829056) },

416 { 
FRAC_CONST
(0.63872361183167), FRAC_CONST(0.08128252625465) },

417 { 
FRAC_CONST
(0.52890521287918), FRAC_CONST(0.60048872232437) },

418 { 
FRAC_CONST
(0.74238550662994), FRAC_CONST(0.04491915181279) },

419 { 
FRAC_CONST
(0.99096131324768), FRAC_CONST(-0.19451183080673) },

420 { 
FRAC_CONST
(-0.80412328243256), FRAC_CONST(-0.88513815402985) },

421 { 
FRAC_CONST
(-0.64612615108490), FRAC_CONST(0.72198677062988) },

422 { 
FRAC_CONST
(0.11657770723104), FRAC_CONST(-0.83662831783295) },

423 { 
FRAC_CONST
(-0.95053184032440), FRAC_CONST(-0.96939903497696) },

424 { 
FRAC_CONST
(-0.62228870391846), FRAC_CONST(0.82767260074615) },

425 { 
FRAC_CONST
(0.03004475869238), FRAC_CONST(-0.99738895893097) },

426 { 
FRAC_CONST
(-0.97987216711044), FRAC_CONST(0.36526128649712) },

427 { 
FRAC_CONST
(-0.99986982345581), FRAC_CONST(-0.36021611094475) },

428 { 
FRAC_CONST
(0.89110648632050), FRAC_CONST(-0.97894251346588) },

429 { 
FRAC_CONST
(0.10407960414886), FRAC_CONST(0.77357792854309) },

430 { 
FRAC_CONST
(0.95964735746384), FRAC_CONST(-0.35435819625854) },

431 { 
FRAC_CONST
(0.50843232870102), FRAC_CONST(0.96107691526413) },

432 { 
FRAC_CONST
(0.17006334662437), FRAC_CONST(-0.76854026317596) },

433 { 
FRAC_CONST
(0.25872674584389), FRAC_CONST(0.99893301725388) },

434 { 
FRAC_CONST
(-0.01115998718888), FRAC_CONST(0.98496019840240) },

435 { 
FRAC_CONST
(-0.79598701000214), FRAC_CONST(0.97138410806656) },

436 { 
FRAC_CONST
(-0.99264711141586), FRAC_CONST(-0.99542820453644) },

437 { 
FRAC_CONST
(-0.99829661846161), FRAC_CONST(0.01877138763666) },

438 { 
FRAC_CONST
(-0.70801013708115), FRAC_CONST(0.33680686354637) },

439 { 
FRAC_CONST
(-0.70467054843903), FRAC_CONST(0.93272775411606) },

440 { 
FRAC_CONST
(0.99846023321152), FRAC_CONST(-0.98725748062134) },

441 { 
FRAC_CONST
(-0.63364970684052), FRAC_CONST(-0.16473594307899) },

442 { 
FRAC_CONST
(-0.16258217394352), FRAC_CONST(-0.95939123630524) },

443 { 
FRAC_CONST
(-0.43645593523979), FRAC_CONST(-0.94805032014847) },

444 { 
FRAC_CONST
(-0.99848473072052), FRAC_CONST(0.96245169639587) },

445 { 
FRAC_CONST
(-0.16796459257603), FRAC_CONST(-0.98987513780594) },

446 { 
FRAC_CONST
(-0.87979227304459), FRAC_CONST(-0.71725726127625) },

447 { 
FRAC_CONST
(0.44183099269867), FRAC_CONST(-0.93568974733353) },

448 { 
FRAC_CONST
(0.93310177326202), FRAC_CONST(-0.99913311004639) },

449 { 
FRAC_CONST
(-0.93941932916641), FRAC_CONST(-0.56409376859665) },

450 { 
FRAC_CONST
(-0.88590002059937), FRAC_CONST(0.47624599933624) },

451 { 
FRAC_CONST
(0.99971461296082), FRAC_CONST(-0.83889955282211) },

452 { 
FRAC_CONST
(-0.75376385450363), FRAC_CONST(0.00814643409103) },

453 { 
FRAC_CONST
(0.93887686729431), FRAC_CONST(-0.11284527927637) },

454 { 
FRAC_CONST
(0.85126435756683), FRAC_CONST(0.52349251508713) },

455 { 
FRAC_CONST
(0.39701420068741), FRAC_CONST(0.81779634952545) },

456 { 
FRAC_CONST
(-0.37024465203285), FRAC_CONST(-0.87071657180786) },

457 { 
FRAC_CONST
(-0.36024826765060), FRAC_CONST(0.34655734896660) },

458 { 
FRAC_CONST
(-0.93388813734055), FRAC_CONST(-0.84476542472839) },

459 { 
FRAC_CONST
(-0.65298801660538), FRAC_CONST(-0.18439576029778) },

460 { 
FRAC_CONST
(0.11960318684578), FRAC_CONST(0.99899345636368) },

461 { 
FRAC_CONST
(0.94292563199997), FRAC_CONST(0.83163905143738) },

462 { 
FRAC_CONST
(0.75081145763397), FRAC_CONST(-0.35533222556114) },

463 { 
FRAC_CONST
(0.56721979379654), FRAC_CONST(-0.24076835811138) },

464 { 
FRAC_CONST
(0.46857765316963), FRAC_CONST(-0.30140233039856) },

465 { 
FRAC_CONST
(0.97312313318253), FRAC_CONST(-0.99548190832138) },

466 { 
FRAC_CONST
(-0.38299977779388), FRAC_CONST(0.98516911268234) },

467 { 
FRAC_CONST
(0.41025799512863), FRAC_CONST(0.02116736955941) },

468 { 
FRAC_CONST
(0.09638062119484), FRAC_CONST(0.04411984235048) },

469 { 
FRAC_CONST
(-0.85283249616623), FRAC_CONST(0.91475564241409) },

470 { 
FRAC_CONST
(0.88866806030273), FRAC_CONST(-0.99735265970230) },

471 { 
FRAC_CONST
(-0.48202428221703), FRAC_CONST(-0.96805608272552) },

472 { 
FRAC_CONST
(0.27572581171989), FRAC_CONST(0.58634752035141) },

473 { 
FRAC_CONST
(-0.65889132022858), FRAC_CONST(0.58835631608963) },

474 { 
FRAC_CONST
(0.98838084936142), FRAC_CONST(0.99994349479675) },

475 { 
FRAC_CONST
(-0.20651349425316), FRAC_CONST(0.54593044519424) },

476 { 
FRAC_CONST
(-0.62126415967941), FRAC_CONST(-0.59893679618835) },

477 { 
FRAC_CONST
(0.20320105552673), FRAC_CONST(-0.86879181861877) },

478 { 
FRAC_CONST
(-0.97790551185608), FRAC_CONST(0.96290808916092) },

479 { 
FRAC_CONST
(0.11112534999847), FRAC_CONST(0.21484763920307) },

480 { 
FRAC_CONST
(-0.41368338465691), FRAC_CONST(0.28216838836670) },

481 { 
FRAC_CONST
(0.24133038520813), FRAC_CONST(0.51294362545013) },

482 { 
FRAC_CONST
(-0.66393411159515), FRAC_CONST(-0.08249679952860) },

483 { 
FRAC_CONST
(-0.53697830438614), FRAC_CONST(-0.97649902105331) },

484 { 
FRAC_CONST
(-0.97224736213684), FRAC_CONST(0.22081333398819) },

485 { 
FRAC_CONST
(0.87392479181290), FRAC_CONST(-0.12796173989773) },

486 { 
FRAC_CONST
(0.19050361216068), FRAC_CONST(0.01602615416050) },

487 { 
FRAC_CONST
(-0.46353441476822), FRAC_CONST(-0.95249038934708) },

488 { 
FRAC_CONST
(-0.07064096629620), FRAC_CONST(-0.94479805231094) },

489 { 
FRAC_CONST
(-0.92444086074829), FRAC_CONST(-0.10457590222359) },

490 { 
FRAC_CONST
(-0.83822596073151), FRAC_CONST(-0.01695043221116) },

491 { 
FRAC_CONST
(0.75214684009552), FRAC_CONST(-0.99955683946609) },

492 { 
FRAC_CONST
(-0.42102998495102), FRAC_CONST(0.99720942974091) },

493 { 
FRAC_CONST
(-0.72094786167145), FRAC_CONST(-0.35008960962296) },

494 { 
FRAC_CONST
(0.78843313455582), FRAC_CONST(0.52851396799088) },

495 { 
FRAC_CONST
(0.97394025325775), FRAC_CONST(-0.26695942878723) },

496 { 
FRAC_CONST
(0.99206465482712), FRAC_CONST(-0.57010120153427) },

497 { 
FRAC_CONST
(0.76789611577988), FRAC_CONST(-0.76519358158112) },

498 { 
FRAC_CONST
(-0.82002419233322), FRAC_CONST(-0.73530179262161) },

499 { 
FRAC_CONST
(0.81924992799759), FRAC_CONST(0.99698424339294) },

500 { 
FRAC_CONST
(-0.26719850301743), FRAC_CONST(0.68903368711472) },

501 { 
FRAC_CONST
(-0.43311259150505), FRAC_CONST(0.85321813821793) },

502 { 
FRAC_CONST
(0.99194979667664), FRAC_CONST(0.91876250505447) },

503 { 
FRAC_CONST
(-0.80691999197006), FRAC_CONST(-0.32627540826797) },

504 { 
FRAC_CONST
(0.43080005049706), FRAC_CONST(-0.21919095516205) },

505 { 
FRAC_CONST
(0.67709493637085), FRAC_CONST(-0.95478075742722) },

506 { 
FRAC_CONST
(0.56151771545410), FRAC_CONST(-0.70693808794022) },

507 { 
FRAC_CONST
(0.10831862688065), FRAC_CONST(-0.08628837019205) },

508 { 
FRAC_CONST
(0.91229414939880), FRAC_CONST(-0.65987348556519) },

509 { 
FRAC_CONST
(-0.48972892761230), FRAC_CONST(0.56289243698120) },

510 { 
FRAC_CONST
(-0.89033657312393), FRAC_CONST(-0.71656566858292) },

511 { 
FRAC_CONST
(0.65269446372986), FRAC_CONST(0.65916007757187) },

512 { 
FRAC_CONST
(0.67439478635788), FRAC_CONST(-0.81684380769730) },

513 { 
FRAC_CONST
(-0.47770830988884), FRAC_CONST(-0.16789555549622) },

514 { 
FRAC_CONST
(-0.99715977907181), FRAC_CONST(-0.93565785884857) },

515 { 
FRAC_CONST
(-0.90889590978622), FRAC_CONST(0.62034398317337) },

516 { 
FRAC_CONST
(-0.06618622690439), FRAC_CONST(-0.23812216520309) },

517 { 
FRAC_CONST
(0.99430269002914), FRAC_CONST(0.18812555074692) },

518 { 
FRAC_CONST
(0.97686403989792), FRAC_CONST(-0.28664535284042) },

519 { 
FRAC_CONST
(0.94813650846481), FRAC_CONST(-0.97506642341614) },

520 { 
FRAC_CONST
(-0.95434498786926), FRAC_CONST(-0.79607981443405) },

521 { 
FRAC_CONST
(-0.49104782938957), FRAC_CONST(0.32895213365555) },

522 { 
FRAC_CONST
(0.99881172180176), FRAC_CONST(0.88993984460831) },

523 { 
FRAC_CONST
(0.50449168682098), FRAC_CONST(-0.85995072126389) },

524 { 
FRAC_CONST
(0.47162890434265), FRAC_CONST(-0.18680204451084) },

525 { 
FRAC_CONST
(-0.62081581354141), FRAC_CONST(0.75000673532486) },

526 { 
FRAC_CONST
(-0.43867015838623), FRAC_CONST(0.99998068809509) },

527 { 
FRAC_CONST
(0.98630565404892), FRAC_CONST(-0.53578901290894) },

528 { 
FRAC_CONST
(-0.61510360240936), FRAC_CONST(-0.89515018463135) },

529 { 
FRAC_CONST
(-0.03841517493129), FRAC_CONST(-0.69888818264008) },

530 { 
FRAC_CONST
(-0.30102157592773), FRAC_CONST(-0.07667808979750) },

531 { 
FRAC_CONST
(0.41881284117699), FRAC_CONST(0.02188098989427) },

532 { 
FRAC_CONST
(-0.86135452985764), FRAC_CONST(0.98947483301163) },

533 { 
FRAC_CONST
(0.67226862907410), FRAC_CONST(-0.13494388759136) },

534 { 
FRAC_CONST
(-0.70737397670746), FRAC_CONST(-0.76547348499298) },

535 { 
FRAC_CONST
(0.94044947624207), FRAC_CONST(0.09026201069355) },

536 { 
FRAC_CONST
(-0.82386350631714), FRAC_CONST(0.08924768865108) },

537 { 
FRAC_CONST
(-0.32070666551590), FRAC_CONST(0.50143420696259) },

538 { 
FRAC_CONST
(0.57593160867691), FRAC_CONST(-0.98966425657272) },

539 { 
FRAC_CONST
(-0.36326017975807), FRAC_CONST(0.07440242916346) },

540 { 
FRAC_CONST
(0.99979043006897), FRAC_CONST(-0.14130286872387) },

541 { 
FRAC_CONST
(-0.92366021871567), FRAC_CONST(-0.97979295253754) },

542 { 
FRAC_CONST
(-0.44607177376747), FRAC_CONST(-0.54233253002167) },

543 { 
FRAC_CONST
(0.44226801395416), FRAC_CONST(0.71326756477356) },

544 { 
FRAC_CONST
(0.03671907261014), FRAC_CONST(0.63606387376785) },

545 { 
FRAC_CONST
(0.52175426483154), FRAC_CONST(-0.85396826267242) },

546 { 
FRAC_CONST
(-0.94701141119003), FRAC_CONST(-0.01826348155737) },

547 { 
FRAC_CONST
(-0.98759609460831), FRAC_CONST(0.82288712263107) },

548 { 
FRAC_CONST
(0.87434792518616), FRAC_CONST(0.89399492740631) },

549 { 
FRAC_CONST
(-0.93412041664124), FRAC_CONST(0.41374051570892) },

550 { 
FRAC_CONST
(0.96063941717148), FRAC_CONST(0.93116706609726) },

551 { 
FRAC_CONST
(0.97534251213074), FRAC_CONST(0.86150932312012) },

552 { 
FRAC_CONST
(0.99642467498779), FRAC_CONST(0.70190042257309) },

553 { 
FRAC_CONST
(-0.94705086946487), FRAC_CONST(-0.29580041766167) },

554 { 
FRAC_CONST
(0.91599804162979), FRAC_CONST(-0.98147833347321) }

557 #ifde‡
__˝lu•lus


	@sbr_qmf.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 #ifde‡
SBR_DEC


34 
	~<°dlib.h
>

35 
	~<°rög.h
>

36 
	~"sbr_d˘.h
"

37 
	~"sbr_qmf.h
"

38 
	~"sbr_qmf_c.h
"

39 
	~"sbr_sy¡ax.h
"

41 
qmÁ_öfo
 *
	$qmÁ_öô
(
uöt8_t
 
ch™√ls
)

43 
qmÁ_öfo
 *
qmÁ
 = (qmÁ_öfo*)
	`Áad_mÆloc
((qmfa_info));

46 
qmÁ
->
x
 = (
ªÆ_t
*)
	`Áad_mÆloc
(2 * 
ch™√ls
 * 10 * (real_t));

47 
	`mem£t
(
qmÁ
->
x
, 0, 2 * 
ch™√ls
 * 10 * (
ªÆ_t
));

50 
qmÁ
->
x_ödex
 = 0;

52 
qmÁ
->
ch™√ls
 = channels;

54  
qmÁ
;

55 
	}
}

57 
	$qmÁ_íd
(
qmÁ_öfo
 *
qmÁ
)

59 i‡(
qmÁ
)

61 i‡(
qmÁ
->
x
Ë
	`Áad_‰ì
(qmfa->x);

62 
	`Áad_‰ì
(
qmÁ
);

64 
	}
}

66 
sbr_qmf_™Æysis_32
(
sbr_öfo
 *
sbr
, 
qmÁ_öfo
 *
qmÁ
, c⁄° 
ªÆ_t
 *
öput
,

67 
qmf_t
 
X
[
MAX_NTSRHFG
][64], 
uöt8_t
 
off£t
, uöt8_à
kx
)

69 
ALIGN
 
ªÆ_t
 
	gu
[64];

70 #i‚de‡
SBR_LOW_POWER


71 
ALIGN
 
ªÆ_t
 
	gö_ªÆ
[32], 
	gö_imag
[32], 
	gout_ªÆ
[32], 
	gout_imag
[32];

73 
ALIGN
 
ªÆ_t
 
	gy
[32];

75 
uöt16_t
 
	gö
 = 0;

76 
uöt8_t
 
	gl
;

79 
	gl
 = 0;Ü < 
	gsbr
->
	gnumTimeSlŸsR©e
;Ü++)

81 
öt16_t
 
	gn
;

88 
	gn
 = 32 - 1;Ç >= 0;Ç--)

90 #ifde‡
FIXED_POINT


91 
	gqmÁ
->
	gx
[
qmÁ
->
x_ödex
 + 
n
] = qmÁ->
x
[qmÁ->x_ödex +Ç + 320] = (
öput
[
ö
++]) >> 4;

93 
	gqmÁ
->
	gx
[
qmÁ
->
x_ödex
 + 
n
] = qmÁ->
x
[qmÁ->x_ödex +Ç + 320] = 
öput
[
ö
++];

98 
	gn
 = 0;Ç < 64;Ç++)

100 
	gu
[
n
] = 
MUL_F
(
qmÁ
->
x
[qmÁ->
x_ödex
 +Ç], 
qmf_c
[2*n]) +

101 
MUL_F
(
qmÁ
->
x
[qmÁ->
x_ödex
 + 
n
 + 64], 
qmf_c
[2*(n + 64)]) +

102 
MUL_F
(
qmÁ
->
x
[qmÁ->
x_ödex
 + 
n
 + 128], 
qmf_c
[2*(n + 128)]) +

103 
MUL_F
(
qmÁ
->
x
[qmÁ->
x_ödex
 + 
n
 + 192], 
qmf_c
[2*(n + 192)]) +

104 
MUL_F
(
qmÁ
->
x
[qmÁ->
x_ödex
 + 
n
 + 256], 
qmf_c
[2*(n + 256)]);

108 
	gqmÁ
->
	gx_ödex
 -= 32;

109 i‡(
	gqmÁ
->
	gx_ödex
 < 0)

110 
	gqmÁ
->
	gx_ödex
 = (320-32);

113 #ifde‡
SBR_LOW_POWER


114 
	gy
[0] = 
u
[48];

115 
	gn
 = 1;Ç < 16;Ç++)

116 
	gy
[
n
] = 
u
[n+48] + u[48-n];

117 
	gn
 = 16;Ç < 32;Ç++)

118 
	gy
[
n
] = -
u
[n-16] + u[48-n];

120 
DCT3_32_unsˇÀd
(
u
, 
y
);

122 
	gn
 = 0;Ç < 32;Ç++)

124 i‡(
	gn
 < 
	gkx
)

126 #ifde‡
FIXED_POINT


127 
QMF_RE
(
X
[
l
 + 
off£t
][
n
]Ë
u
[n] ;

129 
QMF_RE
(
X
[
l
 + 
off£t
][
n
]Ë2. * 
u
[n];

132 
QMF_RE
(
X
[
l
 + 
off£t
][
n
]) = 0;

138 
	gö_imag
[31] = 
u
[1];

139 
	gö_ªÆ
[0] = 
u
[0];

140 
	gn
 = 1;Ç < 31;Ç++)

142 
	gö_imag
[31 - 
n
] = 
u
[n+1];

143 
	gö_ªÆ
[
n
] = -
u
[64-n];

145 
	gö_imag
[0] = 
u
[32];

146 
	gö_ªÆ
[31] = -
u
[33];

149 
d˘4_kî√l
(
ö_ªÆ
, 
ö_imag
, 
out_ªÆ
, 
out_imag
);

152 
	gn
 = 0;Ç < 16;Ç++) {

153 i‡(2*
	gn
+1 < 
	gkx
) {

154 #ifde‡
FIXED_POINT


155 
QMF_RE
(
X
[
l
 + 
off£t
][2*
n
]Ë
out_ªÆ
[n];

156 
QMF_IM
(
X
[
l
 + 
off£t
][2*
n
]Ë
out_imag
[n];

157 
QMF_RE
(
X
[
l
 + 
off£t
][2*
n
+1]Ë-
out_imag
[31-n];

158 
QMF_IM
(
X
[
l
 + 
off£t
][2*
n
+1]Ë-
out_ªÆ
[31-n];

160 
QMF_RE
(
X
[
l
 + 
off£t
][2*
n
]Ë2. * 
out_ªÆ
[n];

161 
QMF_IM
(
X
[
l
 + 
off£t
][2*
n
]Ë2. * 
out_imag
[n];

162 
QMF_RE
(
X
[
l
 + 
off£t
][2*
n
+1]Ë-2. * 
out_imag
[31-n];

163 
QMF_IM
(
X
[
l
 + 
off£t
][2*
n
+1]Ë-2. * 
out_ªÆ
[31-n];

166 i‡(2*
	gn
 < 
	gkx
) {

167 #ifde‡
FIXED_POINT


168 
QMF_RE
(
X
[
l
 + 
off£t
][2*
n
]Ë
out_ªÆ
[n];

169 
QMF_IM
(
X
[
l
 + 
off£t
][2*
n
]Ë
out_imag
[n];

171 
QMF_RE
(
X
[
l
 + 
off£t
][2*
n
]Ë2. * 
out_ªÆ
[n];

172 
QMF_IM
(
X
[
l
 + 
off£t
][2*
n
]Ë2. * 
out_imag
[n];

176 
QMF_RE
(
X
[
l
 + 
off£t
][2*
n
]) = 0;

177 
QMF_IM
(
X
[
l
 + 
off£t
][2*
n
]) = 0;

179 
QMF_RE
(
X
[
l
 + 
off£t
][2*
n
+1]) = 0;

180 
QMF_IM
(
X
[
l
 + 
off£t
][2*
n
+1]) = 0;

187 c⁄° 
com∂ex_t
 
	gqmf32_¥e_twiddÀ
[] =

189 { 
FRAC_CONST
(0.999924701839145), FRAC_CONST(-0.012271538285720) },

190 { 
FRAC_CONST
(0.999322384588350), FRAC_CONST(-0.036807222941359) },

191 { 
FRAC_CONST
(0.998118112900149), FRAC_CONST(-0.061320736302209) },

192 { 
FRAC_CONST
(0.996312612182778), FRAC_CONST(-0.085797312344440) },

193 { 
FRAC_CONST
(0.993906970002356), FRAC_CONST(-0.110222207293883) },

194 { 
FRAC_CONST
(0.990902635427780), FRAC_CONST(-0.134580708507126) },

195 { 
FRAC_CONST
(0.987301418157858), FRAC_CONST(-0.158858143333861) },

196 { 
FRAC_CONST
(0.983105487431216), FRAC_CONST(-0.183039887955141) },

197 { 
FRAC_CONST
(0.978317370719628), FRAC_CONST(-0.207111376192219) },

198 { 
FRAC_CONST
(0.972939952205560), FRAC_CONST(-0.231058108280671) },

199 { 
FRAC_CONST
(0.966976471044852), FRAC_CONST(-0.254865659604515) },

200 { 
FRAC_CONST
(0.960430519415566), FRAC_CONST(-0.278519689385053) },

201 { 
FRAC_CONST
(0.953306040354194), FRAC_CONST(-0.302005949319228) },

202 { 
FRAC_CONST
(0.945607325380521), FRAC_CONST(-0.325310292162263) },

203 { 
FRAC_CONST
(0.937339011912575), FRAC_CONST(-0.348418680249435) },

204 { 
FRAC_CONST
(0.928506080473216), FRAC_CONST(-0.371317193951838) },

205 { 
FRAC_CONST
(0.919113851690058), FRAC_CONST(-0.393992040061048) },

206 { 
FRAC_CONST
(0.909167983090522), FRAC_CONST(-0.416429560097637) },

207 { 
FRAC_CONST
(0.898674465693954), FRAC_CONST(-0.438616238538528) },

208 { 
FRAC_CONST
(0.887639620402854), FRAC_CONST(-0.460538710958240) },

209 { 
FRAC_CONST
(0.876070094195407), FRAC_CONST(-0.482183772079123) },

210 { 
FRAC_CONST
(0.863972856121587), FRAC_CONST(-0.503538383725718) },

211 { 
FRAC_CONST
(0.851355193105265), FRAC_CONST(-0.524589682678469) },

212 { 
FRAC_CONST
(0.838224705554838), FRAC_CONST(-0.545324988422046) },

213 { 
FRAC_CONST
(0.824589302785025), FRAC_CONST(-0.565731810783613) },

214 { 
FRAC_CONST
(0.810457198252595), FRAC_CONST(-0.585797857456439) },

215 { 
FRAC_CONST
(0.795836904608884), FRAC_CONST(-0.605511041404326) },

216 { 
FRAC_CONST
(0.780737228572094), FRAC_CONST(-0.624859488142386) },

217 { 
FRAC_CONST
(0.765167265622459), FRAC_CONST(-0.643831542889791) },

218 { 
FRAC_CONST
(0.749136394523459), FRAC_CONST(-0.662415777590172) },

219 { 
FRAC_CONST
(0.732654271672413), FRAC_CONST(-0.680600997795453) },

220 { 
FRAC_CONST
(0.715730825283819), FRAC_CONST(-0.698376249408973) }

223 
qmfs_öfo
 *
	$qmfs_öô
(
uöt8_t
 
ch™√ls
)

225 
qmfs_öfo
 *
qmfs
 = (qmfs_öfo*)
	`Áad_mÆloc
((qmfs_info));

228 
qmfs
->
v
 = (
ªÆ_t
*)
	`Áad_mÆloc
(2 * 
ch™√ls
 * 20 * (real_t));

229 
	`mem£t
(
qmfs
->
v
, 0, 2 * 
ch™√ls
 * 20 * (
ªÆ_t
));

231 
qmfs
->
v_ödex
 = 0;

233 
qmfs
->
ch™√ls
 = channels;

235  
qmfs
;

236 
	}
}

238 
	$qmfs_íd
(
qmfs_öfo
 *
qmfs
)

240 i‡(
qmfs
)

242 i‡(
qmfs
->
v
Ë
	`Áad_‰ì
(qmfs->v);

243 
	`Áad_‰ì
(
qmfs
);

245 
	}
}

247 #ifde‡
SBR_LOW_POWER


249 
sbr_qmf_sy¡hesis_32
(
sbr_öfo
 *
sbr
, 
qmfs_öfo
 *
qmfs
, 
qmf_t
 
X
[
MAX_NTSRHFG
][64],

250 
ªÆ_t
 *
ouçut
)

252 
ALIGN
 
ªÆ_t
 
	gx
[16];

253 
ALIGN
 
ªÆ_t
 
	gy
[16];

254 
öt16_t
 
	gn
, 
	gk
, 
	gout
 = 0;

255 
uöt8_t
 
	gl
;

258 
	gl
 = 0;Ü < 
	gsbr
->
	gnumTimeSlŸsR©e
;Ü++)

265 
	gk
 = 0; k < 16; k++)

267 #ifde‡
FIXED_POINT


268 
	gy
[
k
] = (
QMF_RE
(
X
[
l
][k]) - QMF_RE(X[l][31 - k]));

269 
	gx
[
k
] = (
QMF_RE
(
X
[
l
][k]) + QMF_RE(X[l][31 - k]));

271 
	gy
[
k
] = (
QMF_RE
(
X
[
l
][k]) - QMF_RE(X[l][31 - k])) / 32.0;

272 
	gx
[
k
] = (
QMF_RE
(
X
[
l
][k]) + QMF_RE(X[l][31 - k])) / 32.0;

277 
DCT2_16_unsˇÀd
(
x
, x);

279 
DCT4_16
(
y
, y);

281 
	gn
 = 8;Ç < 24;Ç++)

283 
	gqmfs
->
	gv
[
qmfs
->
v_ödex
 + 
n
*2] = qmfs->
v
[qmfs->v_ödex + 640 +Ç*2] = 
x
[n-8];

284 
	gqmfs
->
	gv
[
qmfs
->
v_ödex
 + 
n
*2+1] = qmfs->
v
[qmfs->v_ödex + 640 +Ç*2+1] = 
y
[n-8];

286 
	gn
 = 0;Ç < 16;Ç++)

288 
	gqmfs
->
	gv
[
qmfs
->
v_ödex
 + 
n
] = qmfs->
v
[qmfs->v_index + 640 +Ç] = qmfs->v[qmfs->v_index + 32-n];

290 
	gqmfs
->
	gv
[
qmfs
->
v_ödex
 + 48] = qmfs->
v
[qmfs->v_index + 640 + 48] = 0;

291 
	gn
 = 1;Ç < 16;Ç++)

293 
	gqmfs
->
	gv
[
qmfs
->
v_ödex
 + 48+
n
] = qmfs->
v
[qmfs->v_index + 640 + 48+n] = -qmfs->v[qmfs->v_index + 48-n];

297 
	gk
 = 0; k < 32; k++)

299 
	gouçut
[
out
++] = 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 
k
], 
qmf_c
[2*k]) +

300 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 96 + 
k
], 
qmf_c
[64 + 2*k]) +

301 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 128 + 
k
], 
qmf_c
[128 + 2*k]) +

302 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 224 + 
k
], 
qmf_c
[192 + 2*k]) +

303 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 256 + 
k
], 
qmf_c
[256 + 2*k]) +

304 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 352 + 
k
], 
qmf_c
[320 + 2*k]) +

305 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 384 + 
k
], 
qmf_c
[384 + 2*k]) +

306 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 480 + 
k
], 
qmf_c
[448 + 2*k]) +

307 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 512 + 
k
], 
qmf_c
[512 + 2*k]) +

308 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 608 + 
k
], 
qmf_c
[576 + 2*k]);

312 
	gqmfs
->
	gv_ödex
 -= 64;

313 i‡(
	gqmfs
->
	gv_ödex
 < 0)

314 
	gqmfs
->
	gv_ödex
 = (640-64);

318 
sbr_qmf_sy¡hesis_64
(
sbr_öfo
 *
sbr
, 
qmfs_öfo
 *
qmfs
, 
qmf_t
 
X
[
MAX_NTSRHFG
][64],

319 
ªÆ_t
 *
ouçut
)

321 
ALIGN
 
ªÆ_t
 
	gx
[64];

322 
ALIGN
 
ªÆ_t
 
	gy
[64];

323 
öt16_t
 
	gn
, 
	gk
, 
	gout
 = 0;

324 
uöt8_t
 
	gl
;

328 
	gl
 = 0;Ü < 
	gsbr
->
	gnumTimeSlŸsR©e
;Ü++)

335 
	gk
 = 0; k < 32; k++)

337 #ifde‡
FIXED_POINT


338 
	gy
[
k
] = (
QMF_RE
(
X
[
l
][k]) - QMF_RE(X[l][63 - k]));

339 
	gx
[
k
] = (
QMF_RE
(
X
[
l
][k]) + QMF_RE(X[l][63 - k]));

341 
	gy
[
k
] = (
QMF_RE
(
X
[
l
][k]) - QMF_RE(X[l][63 - k])) / 32.0;

342 
	gx
[
k
] = (
QMF_RE
(
X
[
l
][k]) + QMF_RE(X[l][63 - k])) / 32.0;

347 
DCT2_32_unsˇÀd
(
x
, x);

349 
DCT4_32
(
y
, y);

351 
	gn
 = 16;Ç < 48;Ç++)

353 
	gqmfs
->
	gv
[
qmfs
->
v_ödex
 + 
n
*2] = qmfs->
v
[qmfs->v_ödex + 1280 +Ç*2] = 
x
[n-16];

354 
	gqmfs
->
	gv
[
qmfs
->
v_ödex
 + 
n
*2+1] = qmfs->
v
[qmfs->v_ödex + 1280 +Ç*2+1] = 
y
[n-16];

356 
	gn
 = 0;Ç < 32;Ç++)

358 
	gqmfs
->
	gv
[
qmfs
->
v_ödex
 + 
n
] = qmfs->
v
[qmfs->v_index + 1280 +Ç] = qmfs->v[qmfs->v_index + 64-n];

360 
	gqmfs
->
	gv
[
qmfs
->
v_ödex
 + 96] = qmfs->
v
[qmfs->v_index + 1280 + 96] = 0;

361 
	gn
 = 1;Ç < 32;Ç++)

363 
	gqmfs
->
	gv
[
qmfs
->
v_ödex
 + 96+
n
] = qmfs->
v
[qmfs->v_index + 1280 + 96+n] = -qmfs->v[qmfs->v_index + 96-n];

367 
	gk
 = 0; k < 64; k++)

369 
	gouçut
[
out
++] = 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 
k
], 
qmf_c
[k]) +

370 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 192 + 
k
], 
qmf_c
[64 + k]) +

371 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 256 + 
k
], 
qmf_c
[128 + k]) +

372 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 256 + 192 + 
k
], 
qmf_c
[128 + 64 + k]) +

373 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 512 + 
k
], 
qmf_c
[256 + k]) +

374 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 512 + 192 + 
k
], 
qmf_c
[256 + 64 + k]) +

375 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 768 + 
k
], 
qmf_c
[384 + k]) +

376 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 768 + 192 + 
k
], 
qmf_c
[384 + 64 + k]) +

377 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 1024 + 
k
], 
qmf_c
[512 + k]) +

378 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 1024 + 192 + 
k
], 
qmf_c
[512 + 64 + k]);

382 
	gqmfs
->
	gv_ödex
 -= 128;

383 i‡(
	gqmfs
->
	gv_ödex
 < 0)

384 
	gqmfs
->
	gv_ödex
 = (1280-128);

388 
sbr_qmf_sy¡hesis_32
(
sbr_öfo
 *
sbr
, 
qmfs_öfo
 *
qmfs
, 
qmf_t
 
X
[
MAX_NTSRHFG
][64],

389 
ªÆ_t
 *
ouçut
)

391 
ALIGN
 
ªÆ_t
 
	gx1
[32], 
	gx2
[32];

392 #i‚de‡
FIXED_POINT


393 
ªÆ_t
 
	gsˇÀ
 = 1.f/64.f;

395 
öt16_t
 
	gn
, 
	gk
, 
	gout
 = 0;

396 
uöt8_t
 
	gl
;

400 
	gl
 = 0;Ü < 
	gsbr
->
	gnumTimeSlŸsR©e
;Ü++)

408 
	gk
 = 0; k < 32; k++)

410 
	gx1
[
k
] = 
MUL_F
(
QMF_RE
(
X
[
l
][k]), 
RE
(
qmf32_¥e_twiddÀ
[k])Ë- MUL_F(
QMF_IM
(X[l][k]), 
IM
(qmf32_pre_twiddle[k]));

411 
	gx2
[
k
] = 
MUL_F
(
QMF_IM
(
X
[
l
][k]), 
RE
(
qmf32_¥e_twiddÀ
[k])Ë+ MUL_F(
QMF_RE
(X[l][k]), 
IM
(qmf32_pre_twiddle[k]));

413 #i‚de‡
FIXED_POINT


414 
	gx1
[
k
] *
sˇÀ
;

415 
	gx2
[
k
] *
sˇÀ
;

417 
	gx1
[
k
] >>= 1;

418 
	gx2
[
k
] >>= 1;

423 
DCT4_32
(
x1
, x1);

424 
DST4_32
(
x2
, x2);

426 
	gn
 = 0;Ç < 32;Ç++)

428 
	gqmfs
->
	gv
[
qmfs
->
v_ödex
 + 
n
] = qmfs->
v
[qmfs->v_ödex + 640 +Ç] = -
x1
[n] + 
x2
[n];

429 
	gqmfs
->
	gv
[
qmfs
->
v_ödex
 + 63 - 
n
] = qmfs->
v
[qmfs->v_ödex + 640 + 63 -Ç] = 
x1
[n] + 
x2
[n];

433 
	gk
 = 0; k < 32; k++)

435 
	gouçut
[
out
++] = 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 
k
], 
qmf_c
[2*k]) +

436 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 96 + 
k
], 
qmf_c
[64 + 2*k]) +

437 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 128 + 
k
], 
qmf_c
[128 + 2*k]) +

438 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 224 + 
k
], 
qmf_c
[192 + 2*k]) +

439 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 256 + 
k
], 
qmf_c
[256 + 2*k]) +

440 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 352 + 
k
], 
qmf_c
[320 + 2*k]) +

441 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 384 + 
k
], 
qmf_c
[384 + 2*k]) +

442 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 480 + 
k
], 
qmf_c
[448 + 2*k]) +

443 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 512 + 
k
], 
qmf_c
[512 + 2*k]) +

444 
MUL_F
(
qmfs
->
v
[qmfs->
v_ödex
 + 608 + 
k
], 
qmf_c
[576 + 2*k]);

448 
	gqmfs
->
	gv_ödex
 -= 64;

449 i‡(
	gqmfs
->
	gv_ödex
 < 0)

450 
	gqmfs
->
	gv_ödex
 = (640 - 64);

454 
sbr_qmf_sy¡hesis_64
(
sbr_öfo
 *
sbr
, 
qmfs_öfo
 *
qmfs
, 
qmf_t
 
X
[
MAX_NTSRHFG
][64],

455 
ªÆ_t
 *
ouçut
)

458 #i‚de‡
SBR_LOW_POWER


459 
ALIGN
 
ªÆ_t
 
	gö_ªÆ1
[32], 
	gö_imag1
[32], 
	gout_ªÆ1
[32], 
	gout_imag1
[32];

460 
ALIGN
 
ªÆ_t
 
	gö_ªÆ2
[32], 
	gö_imag2
[32], 
	gout_ªÆ2
[32], 
	gout_imag2
[32];

462 
qmf_t
 * 
	gpX
;

463 
ªÆ_t
 * 
	g¥ög_buf„r_1
, * 
	g¥ög_buf„r_3
;

465 #ifde‡
PREFER_POINTERS


467 
ªÆ_t
 * 
	g¥ög_buf„r_2
, * 
	g¥ög_buf„r_4
;

468 
ªÆ_t
 * 
	g¥ög_buf„r_5
, * 
	g¥ög_buf„r_6
;

469 
ªÆ_t
 * 
	g¥ög_buf„r_7
, * 
	g¥ög_buf„r_8
;

470 
ªÆ_t
 * 
	g¥ög_buf„r_9
, * 
	g¥ög_buf„r_10
;

471 c⁄° 
ªÆ_t
 * 
	gpqmf_c_1
, * 
	gpqmf_c_2
, * 
	gpqmf_c_3
, * 
	gpqmf_c_4
;

472 c⁄° 
ªÆ_t
 * 
	gpqmf_c_5
, * 
	gpqmf_c_6
, * 
	gpqmf_c_7
, * 
	gpqmf_c_8
;

473 c⁄° 
ªÆ_t
 * 
	gpqmf_c_9
, * 
	gpqmf_c_10
;

475 #i‚de‡
FIXED_POINT


476 
ªÆ_t
 
	gsˇÀ
 = 1.f/64.f;

478 
öt16_t
 
	gn
, 
	gk
, 
	gout
 = 0;

479 
uöt8_t
 
	gl
;

483 
	gl
 = 0;Ü < 
	gsbr
->
	gnumTimeSlŸsR©e
;Ü++)

490 #i‚de‡
FIXED_POINT


492 
	gpX
 = 
X
[
l
];

494 
	gö_imag1
[31] = 
sˇÀ
*
QMF_RE
(
pX
[1]);

495 
	gö_ªÆ1
[0] = 
sˇÀ
*
QMF_RE
(
pX
[0]);

496 
	gö_imag2
[31] = 
sˇÀ
*
QMF_IM
(
pX
[63-1]);

497 
	gö_ªÆ2
[0] = 
sˇÀ
*
QMF_IM
(
pX
[63-0]);

498 
	gk
 = 1; k < 31; k++)

500 
	gö_imag1
[31 - 
k
] = 
sˇÀ
*
QMF_RE
(
pX
[2*k + 1]);

501 
	gö_ªÆ1
[ 
k
] = 
sˇÀ
*
QMF_RE
(
pX
[2*k ]);

502 
	gö_imag2
[31 - 
k
] = 
sˇÀ
*
QMF_IM
(
pX
[63 - (2*k + 1)]);

503 
	gö_ªÆ2
[ 
k
] = 
sˇÀ
*
QMF_IM
(
pX
[63 - (2*k )]);

505 
	gö_imag1
[0] = 
sˇÀ
*
QMF_RE
(
pX
[63]);

506 
	gö_ªÆ1
[31] = 
sˇÀ
*
QMF_RE
(
pX
[62]);

507 
	gö_imag2
[0] = 
sˇÀ
*
QMF_IM
(
pX
[63-63]);

508 
	gö_ªÆ2
[31] = 
sˇÀ
*
QMF_IM
(
pX
[63-62]);

512 
	gpX
 = 
X
[
l
];

514 
	gö_imag1
[31] = 
QMF_RE
(
pX
[1]) >> 1;

515 
	gö_ªÆ1
[0] = 
QMF_RE
(
pX
[0]) >> 1;

516 
	gö_imag2
[31] = 
QMF_IM
(
pX
[62]) >> 1;

517 
	gö_ªÆ2
[0] = 
QMF_IM
(
pX
[63]) >> 1;

518 
	gk
 = 1; k < 31; k++)

520 
	gö_imag1
[31 - 
k
] = 
QMF_RE
(
pX
[2*k + 1]) >> 1;

521 
	gö_ªÆ1
[ 
k
] = 
QMF_RE
(
pX
[2*k ]) >> 1;

522 
	gö_imag2
[31 - 
k
] = 
QMF_IM
(
pX
[63 - (2*k + 1)]) >> 1;

523 
	gö_ªÆ2
[ 
k
] = 
QMF_IM
(
pX
[63 - (2*k )]) >> 1;

525 
	gö_imag1
[0] = 
QMF_RE
(
pX
[63]) >> 1;

526 
	gö_ªÆ1
[31] = 
QMF_RE
(
pX
[62]) >> 1;

527 
	gö_imag2
[0] = 
QMF_IM
(
pX
[0]) >> 1;

528 
	gö_ªÆ2
[31] = 
QMF_IM
(
pX
[1]) >> 1;

534 
d˘4_kî√l
(
ö_ªÆ1
, 
ö_imag1
, 
out_ªÆ1
, 
out_imag1
);

535 
d˘4_kî√l
(
ö_ªÆ2
, 
ö_imag2
, 
out_ªÆ2
, 
out_imag2
);

538 
	g¥ög_buf„r_1
 = 
qmfs
->
v
 + qmfs->
v_ödex
;

539 
	g¥ög_buf„r_3
 = 
¥ög_buf„r_1
 + 1280;

540 #ifde‡
PREFER_POINTERS


541 
	g¥ög_buf„r_2
 = 
¥ög_buf„r_1
 + 127;

542 
	g¥ög_buf„r_4
 = 
¥ög_buf„r_1
 + (1280 + 127);

546 #ifde‡
PREFER_POINTERS


547 
	gn
 = 0;Ç < 32;Ç ++)

552 *
	g¥ög_buf„r_1
++ = *
¥ög_buf„r_3
++ = 
out_ªÆ2
[
n
] - 
out_ªÆ1
[n];

553 *
	g¥ög_buf„r_2
-- = *
¥ög_buf„r_4
-- = 
out_ªÆ2
[
n
] + 
out_ªÆ1
[n];

556 *
	g¥ög_buf„r_1
++ = *
¥ög_buf„r_3
++ = 
out_imag2
[31-
n
] + 
out_imag1
[31-n];

557 *
	g¥ög_buf„r_2
-- = *
¥ög_buf„r_4
-- = 
out_imag2
[31-
n
] - 
out_imag1
[31-n];

561 
	gn
 = 0;Ç < 32;Ç++)

564 
	g¥ög_buf„r_1
[2*
n
] = 
¥ög_buf„r_3
[2*n] = 
out_ªÆ2
[n] - 
out_ªÆ1
[n];

565 
	g¥ög_buf„r_1
[127-2*
n
] = 
¥ög_buf„r_3
[127-2*n] = 
out_ªÆ2
[n] + 
out_ªÆ1
[n];

566 
	g¥ög_buf„r_1
[2*
n
+1] = 
¥ög_buf„r_3
[2*n+1] = 
out_imag2
[31-n] + 
out_imag1
[31-n];

567 
	g¥ög_buf„r_1
[127-(2*
n
+1)] = 
¥ög_buf„r_3
[127-(2*n+1)] = 
out_imag2
[31-n] - 
out_imag1
[31-n];

572 
	g¥ög_buf„r_1
 = 
qmfs
->
v
 + qmfs->
v_ödex
;

573 #ifde‡
PREFER_POINTERS


574 
	g¥ög_buf„r_2
 = 
¥ög_buf„r_1
 + 192;

575 
	g¥ög_buf„r_3
 = 
¥ög_buf„r_1
 + 256;

576 
	g¥ög_buf„r_4
 = 
¥ög_buf„r_1
 + (256 + 192);

577 
	g¥ög_buf„r_5
 = 
¥ög_buf„r_1
 + 512;

578 
	g¥ög_buf„r_6
 = 
¥ög_buf„r_1
 + (512 + 192);

579 
	g¥ög_buf„r_7
 = 
¥ög_buf„r_1
 + 768;

580 
	g¥ög_buf„r_8
 = 
¥ög_buf„r_1
 + (768 + 192);

581 
	g¥ög_buf„r_9
 = 
¥ög_buf„r_1
 + 1024;

582 
	g¥ög_buf„r_10
 = 
¥ög_buf„r_1
 + (1024 + 192);

583 
	gpqmf_c_1
 = 
qmf_c
;

584 
	gpqmf_c_2
 = 
qmf_c
 + 64;

585 
	gpqmf_c_3
 = 
qmf_c
 + 128;

586 
	gpqmf_c_4
 = 
qmf_c
 + 192;

587 
	gpqmf_c_5
 = 
qmf_c
 + 256;

588 
	gpqmf_c_6
 = 
qmf_c
 + 320;

589 
	gpqmf_c_7
 = 
qmf_c
 + 384;

590 
	gpqmf_c_8
 = 
qmf_c
 + 448;

591 
	gpqmf_c_9
 = 
qmf_c
 + 512;

592 
	gpqmf_c_10
 = 
qmf_c
 + 576;

596 
	gk
 = 0; k < 64; k++)

598 #ifde‡
PREFER_POINTERS


599 
	gouçut
[
out
++] =

600 
MUL_F
(*
¥ög_buf„r_1
++, *
pqmf_c_1
++) +

601 
MUL_F
(*
¥ög_buf„r_2
++, *
pqmf_c_2
++) +

602 
MUL_F
(*
¥ög_buf„r_3
++, *
pqmf_c_3
++) +

603 
MUL_F
(*
¥ög_buf„r_4
++, *
pqmf_c_4
++) +

604 
MUL_F
(*
¥ög_buf„r_5
++, *
pqmf_c_5
++) +

605 
MUL_F
(*
¥ög_buf„r_6
++, *
pqmf_c_6
++) +

606 
MUL_F
(*
¥ög_buf„r_7
++, *
pqmf_c_7
++) +

607 
MUL_F
(*
¥ög_buf„r_8
++, *
pqmf_c_8
++) +

608 
MUL_F
(*
¥ög_buf„r_9
++, *
pqmf_c_9
++) +

609 
MUL_F
(*
¥ög_buf„r_10
++, *
pqmf_c_10
++);

611 
	gouçut
[
out
++] =

612 
MUL_F
(
¥ög_buf„r_1
[
k
+0], 
qmf_c
[k+0]) +

613 
MUL_F
(
¥ög_buf„r_1
[
k
+192], 
qmf_c
[k+64]) +

614 
MUL_F
(
¥ög_buf„r_1
[
k
+256], 
qmf_c
[k+128]) +

615 
MUL_F
(
¥ög_buf„r_1
[
k
+(256+192)], 
qmf_c
[k+192]) +

616 
MUL_F
(
¥ög_buf„r_1
[
k
+512], 
qmf_c
[k+256]) +

617 
MUL_F
(
¥ög_buf„r_1
[
k
+(512+192)], 
qmf_c
[k+320]) +

618 
MUL_F
(
¥ög_buf„r_1
[
k
+768], 
qmf_c
[k+384]) +

619 
MUL_F
(
¥ög_buf„r_1
[
k
+(768+192)], 
qmf_c
[k+448]) +

620 
MUL_F
(
¥ög_buf„r_1
[
k
+1024], 
qmf_c
[k+512]) +

621 
MUL_F
(
¥ög_buf„r_1
[
k
+(1024+192)], 
qmf_c
[k+576]);

626 
	gqmfs
->
	gv_ödex
 -= 128;

627 i‡(
	gqmfs
->
	gv_ödex
 < 0)

628 
	gqmfs
->
	gv_ödex
 = (1280 - 128);

	@sbr_qmf.h

28 #i‚de‡
__SBR_QMF_H__


29 
	#__SBR_QMF_H__


	)

31 #ifde‡
__˝lu•lus


35 
qmÁ_öfo
 *
qmÁ_öô
(
uöt8_t
 
ch™√ls
);

36 
qmÁ_íd
(
qmÁ_öfo
 *
qmÁ
);

37 
qmfs_öfo
 *
qmfs_öô
(
uöt8_t
 
ch™√ls
);

38 
qmfs_íd
(
qmfs_öfo
 *
qmfs
);

40 
sbr_qmf_™Æysis_32
(
sbr_öfo
 *
sbr
, 
qmÁ_öfo
 *
qmÁ
, c⁄° 
ªÆ_t
 *
öput
,

41 
qmf_t
 
X
[
MAX_NTSRHFG
][64], 
uöt8_t
 
off£t
, uöt8_à
kx
);

42 
sbr_qmf_sy¡hesis_32
(
sbr_öfo
 *
sbr
, 
qmfs_öfo
 *
qmfs
, 
qmf_t
 
X
[
MAX_NTSRHFG
][64],

43 
ªÆ_t
 *
ouçut
);

44 
sbr_qmf_sy¡hesis_64
(
sbr_öfo
 *
sbr
, 
qmfs_öfo
 *
qmfs
, 
qmf_t
 
X
[
MAX_NTSRHFG
][64],

45 
ªÆ_t
 *
ouçut
);

48 #ifde‡
__˝lu•lus


	@sbr_qmf_c.h

28 #i‚de‡
__SBR_QMF_C_H__


29 
	#__SBR_QMF_C_H__


	)

31 #ifde‡
__˝lu•lus


36 #ifde‡
_MSC_VER


37 #¥agm®
w¨nög
(
dißbÀ
:4305)

38 #¥agm®
w¨nög
(
dißbÀ
:4244)

41 
ALIGN
 c⁄° 
ªÆ_t
 
qmf_c
[640] = {

42 
FRAC_CONST
(0), FRAC_CONST(-0.00055252865047),

43 
FRAC_CONST
(-0.00056176925738), FRAC_CONST(-0.00049475180896),

44 
FRAC_CONST
(-0.00048752279712), FRAC_CONST(-0.00048937912498),

45 
FRAC_CONST
(-0.00050407143497), FRAC_CONST(-0.00052265642972),

46 
FRAC_CONST
(-0.00054665656337), FRAC_CONST(-0.00056778025613),

47 
FRAC_CONST
(-0.00058709304852), FRAC_CONST(-0.00061327473938),

48 
FRAC_CONST
(-0.00063124935319), FRAC_CONST(-0.00065403333621),

49 
FRAC_CONST
(-0.00067776907764), FRAC_CONST(-0.00069416146273),

50 
FRAC_CONST
(-0.00071577364744), FRAC_CONST(-0.00072550431222),

51 
FRAC_CONST
(-0.00074409418541), FRAC_CONST(-0.00074905980532),

52 
FRAC_CONST
(-0.0007681371927), FRAC_CONST(-0.00077248485949),

53 
FRAC_CONST
(-0.00078343322877), FRAC_CONST(-0.00077798694927),

54 
FRAC_CONST
(-0.000780366471), FRAC_CONST(-0.00078014496257),

55 
FRAC_CONST
(-0.0007757977331), FRAC_CONST(-0.00076307935757),

56 
FRAC_CONST
(-0.00075300014201), FRAC_CONST(-0.00073193571525),

57 
FRAC_CONST
(-0.00072153919876), FRAC_CONST(-0.00069179375372),

58 
FRAC_CONST
(-0.00066504150893), FRAC_CONST(-0.00063415949025),

59 
FRAC_CONST
(-0.0005946118933), FRAC_CONST(-0.00055645763906),

60 
FRAC_CONST
(-0.00051455722108), FRAC_CONST(-0.00046063254803),

61 
FRAC_CONST
(-0.00040951214522), FRAC_CONST(-0.00035011758756),

62 
FRAC_CONST
(-0.00028969811748), FRAC_CONST(-0.0002098337344),

63 
FRAC_CONST
(-0.00014463809349), FRAC_CONST(-6.173344072E-005),

64 
FRAC_CONST
(1.349497418E-005), FRAC_CONST(0.00010943831274),

65 
FRAC_CONST
(0.00020430170688), FRAC_CONST(0.00029495311041),

66 
FRAC_CONST
(0.0004026540216), FRAC_CONST(0.00051073884952),

67 
FRAC_CONST
(0.00062393761391), FRAC_CONST(0.00074580258865),

68 
FRAC_CONST
(0.00086084433262), FRAC_CONST(0.00098859883015),

69 
FRAC_CONST
(0.00112501551307), FRAC_CONST(0.00125778846475),

70 
FRAC_CONST
(0.00139024948272), FRAC_CONST(0.00154432198471),

71 
FRAC_CONST
(0.00168680832531), FRAC_CONST(0.00183482654224),

72 
FRAC_CONST
(0.00198411407369), FRAC_CONST(0.00214615835557),

73 
FRAC_CONST
(0.00230172547746), FRAC_CONST(0.00246256169126),

74 
FRAC_CONST
(0.00262017586902), FRAC_CONST(0.00278704643465),

75 
FRAC_CONST
(0.00294694477165), FRAC_CONST(0.00311254206525),

76 
FRAC_CONST
(0.00327396134847), FRAC_CONST(0.00344188741828),

77 
FRAC_CONST
(0.00360082681231), FRAC_CONST(0.00376039229104),

78 
FRAC_CONST
(0.00392074323703), FRAC_CONST(0.00408197531935),

79 
FRAC_CONST
(0.0042264269227), FRAC_CONST(0.00437307196781),

80 
FRAC_CONST
(0.00452098527825), FRAC_CONST(0.00466064606118),

81 
FRAC_CONST
(0.00479325608498), FRAC_CONST(0.00491376035745),

82 
FRAC_CONST
(0.00503930226013), FRAC_CONST(0.00514073539032),

83 
FRAC_CONST
(0.00524611661324), FRAC_CONST(0.00534716811982),

84 
FRAC_CONST
(0.00541967759307), FRAC_CONST(0.00548760401507),

85 
FRAC_CONST
(0.00554757145088), FRAC_CONST(0.00559380230045),

86 
FRAC_CONST
(0.00562206432097), FRAC_CONST(0.00564551969164),

87 
FRAC_CONST
(0.00563891995151), FRAC_CONST(0.00562661141932),

88 
FRAC_CONST
(0.0055917128663), FRAC_CONST(0.005540436394),

89 
FRAC_CONST
(0.0054753783077), FRAC_CONST(0.0053838975897),

90 
FRAC_CONST
(0.00527157587272), FRAC_CONST(0.00513822754514),

91 
FRAC_CONST
(0.00498396877629), FRAC_CONST(0.004810946906),

92 
FRAC_CONST
(0.00460395301471), FRAC_CONST(0.00438018617447),

93 
FRAC_CONST
(0.0041251642327), FRAC_CONST(0.00384564081246),

94 
FRAC_CONST
(0.00354012465507), FRAC_CONST(0.00320918858098),

95 
FRAC_CONST
(0.00284467578623), FRAC_CONST(0.00245085400321),

96 
FRAC_CONST
(0.0020274176185), FRAC_CONST(0.00157846825768),

97 
FRAC_CONST
(0.00109023290512), FRAC_CONST(0.0005832264248),

98 
FRAC_CONST
(2.760451905E-005), FRAC_CONST(-0.00054642808664),

99 
FRAC_CONST
(-0.00115681355227), FRAC_CONST(-0.00180394725893),

100 
FRAC_CONST
(-0.00248267236449), FRAC_CONST(-0.003193377839),

101 
FRAC_CONST
(-0.00394011240522), FRAC_CONST(-0.004722259624),

102 
FRAC_CONST
(-0.00553372111088), FRAC_CONST(-0.00637922932685),

103 
FRAC_CONST
(-0.00726158168517), FRAC_CONST(-0.00817982333726),

104 
FRAC_CONST
(-0.00913253296085), FRAC_CONST(-0.01011502154986),

105 
FRAC_CONST
(-0.01113155480321), FRAC_CONST(-0.01218499959508),

106 
FRAC_CONST
(0.01327182200351), FRAC_CONST(0.01439046660792),

107 
FRAC_CONST
(0.01554055533423), FRAC_CONST(0.01673247129989),

108 
FRAC_CONST
(0.01794333813443), FRAC_CONST(0.01918724313698),

109 
FRAC_CONST
(0.02045317933555), FRAC_CONST(0.02174675502535),

110 
FRAC_CONST
(0.02306801692862), FRAC_CONST(0.02441609920285),

111 
FRAC_CONST
(0.02578758475467), FRAC_CONST(0.02718594296329),

112 
FRAC_CONST
(0.02860721736385), FRAC_CONST(0.03005026574279),

113 
FRAC_CONST
(0.03150176087389), FRAC_CONST(0.03297540810337),

114 
FRAC_CONST
(0.03446209487686), FRAC_CONST(0.03596975605542),

115 
FRAC_CONST
(0.03748128504252), FRAC_CONST(0.03900536794745),

116 
FRAC_CONST
(0.04053491705584), FRAC_CONST(0.04206490946367),

117 
FRAC_CONST
(0.04360975421304), FRAC_CONST(0.04514884056413),

118 
FRAC_CONST
(0.04668430272642), FRAC_CONST(0.04821657200672),

119 
FRAC_CONST
(0.04973857556014), FRAC_CONST(0.05125561555216),

120 
FRAC_CONST
(0.05276307465207), FRAC_CONST(0.05424527683589),

121 
FRAC_CONST
(0.05571736482138), FRAC_CONST(0.05716164501299),

122 
FRAC_CONST
(0.0585915683626), FRAC_CONST(0.05998374801761),

123 
FRAC_CONST
(0.06134551717207), FRAC_CONST(0.06268578081172),

124 
FRAC_CONST
(0.06397158980681), FRAC_CONST(0.0652247106438),

125 
FRAC_CONST
(0.06643675122104), FRAC_CONST(0.06760759851228),

126 
FRAC_CONST
(0.06870438283512), FRAC_CONST(0.06976302447127),

127 
FRAC_CONST
(0.07076287107266), FRAC_CONST(0.07170026731102),

128 
FRAC_CONST
(0.07256825833083), FRAC_CONST(0.07336202550803),

129 
FRAC_CONST
(0.07410036424342), FRAC_CONST(0.07474525581194),

130 
FRAC_CONST
(0.07531373362019), FRAC_CONST(0.07580083586584),

131 
FRAC_CONST
(0.07619924793396), FRAC_CONST(0.07649921704119),

132 
FRAC_CONST
(0.07670934904245), FRAC_CONST(0.07681739756964),

133 
FRAC_CONST
(0.07682300113923), FRAC_CONST(0.07672049241746),

134 
FRAC_CONST
(0.07650507183194), FRAC_CONST(0.07617483218536),

135 
FRAC_CONST
(0.07573057565061), FRAC_CONST(0.0751576255287),

136 
FRAC_CONST
(0.07446643947564), FRAC_CONST(0.0736406005762),

137 
FRAC_CONST
(0.07267746427299), FRAC_CONST(0.07158263647903),

138 
FRAC_CONST
(0.07035330735093), FRAC_CONST(0.06896640131951),

139 
FRAC_CONST
(0.06745250215166), FRAC_CONST(0.06576906686508),

140 
FRAC_CONST
(0.06394448059633), FRAC_CONST(0.06196027790387),

141 
FRAC_CONST
(0.0598166570809), FRAC_CONST(0.05751526919867),

142 
FRAC_CONST
(0.05504600343009), FRAC_CONST(0.05240938217366),

143 
FRAC_CONST
(0.04959786763445), FRAC_CONST(0.04663033051701),

144 
FRAC_CONST
(0.04347687821958), FRAC_CONST(0.04014582784127),

145 
FRAC_CONST
(0.03664181168133), FRAC_CONST(0.03295839306691),

146 
FRAC_CONST
(0.02908240060125), FRAC_CONST(0.02503075618909),

147 
FRAC_CONST
(0.02079970728622), FRAC_CONST(0.01637012582228),

148 
FRAC_CONST
(0.01176238327857), FRAC_CONST(0.00696368621617),

149 
FRAC_CONST
(0.00197656014503), FRAC_CONST(-0.00320868968304),

150 
FRAC_CONST
(-0.00857117491366), FRAC_CONST(-0.01412888273558),

151 
FRAC_CONST
(-0.01988341292573), FRAC_CONST(-0.02582272888064),

152 
FRAC_CONST
(-0.03195312745332), FRAC_CONST(-0.03827765720822),

153 
FRAC_CONST
(-0.04478068215856), FRAC_CONST(-0.05148041767934),

154 
FRAC_CONST
(-0.05837053268336), FRAC_CONST(-0.06544098531359),

155 
FRAC_CONST
(-0.07269433008129), FRAC_CONST(-0.08013729344279),

156 
FRAC_CONST
(-0.08775475365593), FRAC_CONST(-0.09555333528914),

157 
FRAC_CONST
(-0.10353295311463), FRAC_CONST(-0.1116826931773),

158 
FRAC_CONST
(-0.120007798468), FRAC_CONST(-0.12850028503878),

159 
FRAC_CONST
(-0.13715517611934), FRAC_CONST(-0.1459766491187),

160 
FRAC_CONST
(-0.15496070710605), FRAC_CONST(-0.16409588556669),

161 
FRAC_CONST
(-0.17338081721706), FRAC_CONST(-0.18281725485142),

162 
FRAC_CONST
(-0.19239667457267), FRAC_CONST(-0.20212501768103),

163 
FRAC_CONST
(-0.21197358538056), FRAC_CONST(-0.22196526964149),

164 
FRAC_CONST
(-0.23206908706791), FRAC_CONST(-0.24230168845974),

165 
FRAC_CONST
(-0.25264803095722), FRAC_CONST(-0.26310532994603),

166 
FRAC_CONST
(-0.27366340405625), FRAC_CONST(-0.28432141891085),

167 
FRAC_CONST
(-0.29507167170646), FRAC_CONST(-0.30590985751916),

168 
FRAC_CONST
(-0.31682789136456), FRAC_CONST(-0.32781137272105),

169 
FRAC_CONST
(-0.33887226938665), FRAC_CONST(-0.3499914122931),

170 
FRAC_CONST
(0.36115899031355), FRAC_CONST(0.37237955463061),

171 
FRAC_CONST
(0.38363500139043), FRAC_CONST(0.39492117615675),

172 
FRAC_CONST
(0.40623176767625), FRAC_CONST(0.41756968968409),

173 
FRAC_CONST
(0.42891199207373), FRAC_CONST(0.44025537543665),

174 
FRAC_CONST
(0.45159965356824), FRAC_CONST(0.46293080852757),

175 
FRAC_CONST
(0.47424532146115), FRAC_CONST(0.48552530911099),

176 
FRAC_CONST
(0.49677082545707), FRAC_CONST(0.50798175000434),

177 
FRAC_CONST
(0.51912349702391), FRAC_CONST(0.53022408956855),

178 
FRAC_CONST
(0.54125534487322), FRAC_CONST(0.55220512585061),

179 
FRAC_CONST
(0.5630789140137), FRAC_CONST(0.57385241316923),

180 
FRAC_CONST
(0.58454032354679), FRAC_CONST(0.59511230862496),

181 
FRAC_CONST
(0.6055783538918), FRAC_CONST(0.61591099320291),

182 
FRAC_CONST
(0.62612426956055), FRAC_CONST(0.63619801077286),

183 
FRAC_CONST
(0.64612696959461), FRAC_CONST(0.65590163024671),

184 
FRAC_CONST
(0.66551398801627), FRAC_CONST(0.67496631901712),

185 
FRAC_CONST
(0.68423532934598), FRAC_CONST(0.69332823767032),

186 
FRAC_CONST
(0.70223887193539), FRAC_CONST(0.71094104263095),

187 
FRAC_CONST
(0.71944626349561), FRAC_CONST(0.72774489002994),

188 
FRAC_CONST
(0.73582117582769), FRAC_CONST(0.74368278636488),

189 
FRAC_CONST
(0.75131374561237), FRAC_CONST(0.75870807608242),

190 
FRAC_CONST
(0.76586748650939), FRAC_CONST(0.77277808813327),

191 
FRAC_CONST
(0.77942875190216), FRAC_CONST(0.7858353120392),

192 
FRAC_CONST
(0.79197358416424), FRAC_CONST(0.797846641377),

193 
FRAC_CONST
(0.80344857518505), FRAC_CONST(0.80876950044491),

194 
FRAC_CONST
(0.81381912706217), FRAC_CONST(0.81857760046468),

195 
FRAC_CONST
(0.82304198905409), FRAC_CONST(0.8272275347336),

196 
FRAC_CONST
(0.8311038457152), FRAC_CONST(0.83469373618402),

197 
FRAC_CONST
(0.83797173378865), FRAC_CONST(0.84095413924722),

198 
FRAC_CONST
(0.84362382812005), FRAC_CONST(0.84598184698206),

199 
FRAC_CONST
(0.84803157770763), FRAC_CONST(0.84978051984268),

200 
FRAC_CONST
(0.85119715249343), FRAC_CONST(0.85230470352147),

201 
FRAC_CONST
(0.85310209497017), FRAC_CONST(0.85357205739107),

202 
FRAC_CONST
(0.85373856005937 ), FRAC_CONST(0.85357205739107),

203 
FRAC_CONST
(0.85310209497017), FRAC_CONST(0.85230470352147),

204 
FRAC_CONST
(0.85119715249343), FRAC_CONST(0.84978051984268),

205 
FRAC_CONST
(0.84803157770763), FRAC_CONST(0.84598184698206),

206 
FRAC_CONST
(0.84362382812005), FRAC_CONST(0.84095413924722),

207 
FRAC_CONST
(0.83797173378865), FRAC_CONST(0.83469373618402),

208 
FRAC_CONST
(0.8311038457152), FRAC_CONST(0.8272275347336),

209 
FRAC_CONST
(0.82304198905409), FRAC_CONST(0.81857760046468),

210 
FRAC_CONST
(0.81381912706217), FRAC_CONST(0.80876950044491),

211 
FRAC_CONST
(0.80344857518505), FRAC_CONST(0.797846641377),

212 
FRAC_CONST
(0.79197358416424), FRAC_CONST(0.7858353120392),

213 
FRAC_CONST
(0.77942875190216), FRAC_CONST(0.77277808813327),

214 
FRAC_CONST
(0.76586748650939), FRAC_CONST(0.75870807608242),

215 
FRAC_CONST
(0.75131374561237), FRAC_CONST(0.74368278636488),

216 
FRAC_CONST
(0.73582117582769), FRAC_CONST(0.72774489002994),

217 
FRAC_CONST
(0.71944626349561), FRAC_CONST(0.71094104263095),

218 
FRAC_CONST
(0.70223887193539), FRAC_CONST(0.69332823767032),

219 
FRAC_CONST
(0.68423532934598), FRAC_CONST(0.67496631901712),

220 
FRAC_CONST
(0.66551398801627), FRAC_CONST(0.65590163024671),

221 
FRAC_CONST
(0.64612696959461), FRAC_CONST(0.63619801077286),

222 
FRAC_CONST
(0.62612426956055), FRAC_CONST(0.61591099320291),

223 
FRAC_CONST
(0.6055783538918), FRAC_CONST(0.59511230862496),

224 
FRAC_CONST
(0.58454032354679), FRAC_CONST(0.57385241316923),

225 
FRAC_CONST
(0.5630789140137), FRAC_CONST(0.55220512585061),

226 
FRAC_CONST
(0.54125534487322), FRAC_CONST(0.53022408956855),

227 
FRAC_CONST
(0.51912349702391), FRAC_CONST(0.50798175000434),

228 
FRAC_CONST
(0.49677082545707), FRAC_CONST(0.48552530911099),

229 
FRAC_CONST
(0.47424532146115), FRAC_CONST(0.46293080852757),

230 
FRAC_CONST
(0.45159965356824), FRAC_CONST(0.44025537543665),

231 
FRAC_CONST
(0.42891199207373), FRAC_CONST(0.41756968968409),

232 
FRAC_CONST
(0.40623176767625), FRAC_CONST(0.39492117615675),

233 
FRAC_CONST
(0.38363500139043), FRAC_CONST(0.37237955463061),

234 
FRAC_CONST
(-0.36115899031355), FRAC_CONST(-0.3499914122931),

235 
FRAC_CONST
(-0.33887226938665), FRAC_CONST(-0.32781137272105),

236 
FRAC_CONST
(-0.31682789136456), FRAC_CONST(-0.30590985751916),

237 
FRAC_CONST
(-0.29507167170646), FRAC_CONST(-0.28432141891085),

238 
FRAC_CONST
(-0.27366340405625), FRAC_CONST(-0.26310532994603),

239 
FRAC_CONST
(-0.25264803095722), FRAC_CONST(-0.24230168845974),

240 
FRAC_CONST
(-0.23206908706791), FRAC_CONST(-0.22196526964149),

241 
FRAC_CONST
(-0.21197358538056), FRAC_CONST(-0.20212501768103),

242 
FRAC_CONST
(-0.19239667457267), FRAC_CONST(-0.18281725485142),

243 
FRAC_CONST
(-0.17338081721706), FRAC_CONST(-0.16409588556669),

244 
FRAC_CONST
(-0.15496070710605), FRAC_CONST(-0.1459766491187),

245 
FRAC_CONST
(-0.13715517611934), FRAC_CONST(-0.12850028503878),

246 
FRAC_CONST
(-0.120007798468), FRAC_CONST(-0.1116826931773),

247 
FRAC_CONST
(-0.10353295311463), FRAC_CONST(-0.09555333528914),

248 
FRAC_CONST
(-0.08775475365593), FRAC_CONST(-0.08013729344279),

249 
FRAC_CONST
(-0.07269433008129), FRAC_CONST(-0.06544098531359),

250 
FRAC_CONST
(-0.05837053268336), FRAC_CONST(-0.05148041767934),

251 
FRAC_CONST
(-0.04478068215856), FRAC_CONST(-0.03827765720822),

252 
FRAC_CONST
(-0.03195312745332), FRAC_CONST(-0.02582272888064),

253 
FRAC_CONST
(-0.01988341292573), FRAC_CONST(-0.01412888273558),

254 
FRAC_CONST
(-0.00857117491366), FRAC_CONST(-0.00320868968304),

255 
FRAC_CONST
(0.00197656014503), FRAC_CONST(0.00696368621617),

256 
FRAC_CONST
(0.01176238327857), FRAC_CONST(0.01637012582228),

257 
FRAC_CONST
(0.02079970728622), FRAC_CONST(0.02503075618909),

258 
FRAC_CONST
(0.02908240060125), FRAC_CONST(0.03295839306691),

259 
FRAC_CONST
(0.03664181168133), FRAC_CONST(0.04014582784127),

260 
FRAC_CONST
(0.04347687821958), FRAC_CONST(0.04663033051701),

261 
FRAC_CONST
(0.04959786763445), FRAC_CONST(0.05240938217366),

262 
FRAC_CONST
(0.05504600343009), FRAC_CONST(0.05751526919867),

263 
FRAC_CONST
(0.0598166570809), FRAC_CONST(0.06196027790387),

264 
FRAC_CONST
(0.06394448059633), FRAC_CONST(0.06576906686508),

265 
FRAC_CONST
(0.06745250215166), FRAC_CONST(0.06896640131951),

266 
FRAC_CONST
(0.07035330735093), FRAC_CONST(0.07158263647903),

267 
FRAC_CONST
(0.07267746427299), FRAC_CONST(0.0736406005762),

268 
FRAC_CONST
(0.07446643947564), FRAC_CONST(0.0751576255287),

269 
FRAC_CONST
(0.07573057565061), FRAC_CONST(0.07617483218536),

270 
FRAC_CONST
(0.07650507183194), FRAC_CONST(0.07672049241746),

271 
FRAC_CONST
(0.07682300113923), FRAC_CONST(0.07681739756964),

272 
FRAC_CONST
(0.07670934904245), FRAC_CONST(0.07649921704119),

273 
FRAC_CONST
(0.07619924793396), FRAC_CONST(0.07580083586584),

274 
FRAC_CONST
(0.07531373362019), FRAC_CONST(0.07474525581194),

275 
FRAC_CONST
(0.07410036424342), FRAC_CONST(0.07336202550803),

276 
FRAC_CONST
(0.07256825833083), FRAC_CONST(0.07170026731102),

277 
FRAC_CONST
(0.07076287107266), FRAC_CONST(0.06976302447127),

278 
FRAC_CONST
(0.06870438283512), FRAC_CONST(0.06760759851228),

279 
FRAC_CONST
(0.06643675122104), FRAC_CONST(0.0652247106438),

280 
FRAC_CONST
(0.06397158980681), FRAC_CONST(0.06268578081172),

281 
FRAC_CONST
(0.06134551717207), FRAC_CONST(0.05998374801761),

282 
FRAC_CONST
(0.0585915683626), FRAC_CONST(0.05716164501299),

283 
FRAC_CONST
(0.05571736482138), FRAC_CONST(0.05424527683589),

284 
FRAC_CONST
(0.05276307465207), FRAC_CONST(0.05125561555216),

285 
FRAC_CONST
(0.04973857556014), FRAC_CONST(0.04821657200672),

286 
FRAC_CONST
(0.04668430272642), FRAC_CONST(0.04514884056413),

287 
FRAC_CONST
(0.04360975421304), FRAC_CONST(0.04206490946367),

288 
FRAC_CONST
(0.04053491705584), FRAC_CONST(0.03900536794745),

289 
FRAC_CONST
(0.03748128504252), FRAC_CONST(0.03596975605542),

290 
FRAC_CONST
(0.03446209487686), FRAC_CONST(0.03297540810337),

291 
FRAC_CONST
(0.03150176087389), FRAC_CONST(0.03005026574279),

292 
FRAC_CONST
(0.02860721736385), FRAC_CONST(0.02718594296329),

293 
FRAC_CONST
(0.02578758475467), FRAC_CONST(0.02441609920285),

294 
FRAC_CONST
(0.02306801692862), FRAC_CONST(0.02174675502535),

295 
FRAC_CONST
(0.02045317933555), FRAC_CONST(0.01918724313698),

296 
FRAC_CONST
(0.01794333813443), FRAC_CONST(0.01673247129989),

297 
FRAC_CONST
(0.01554055533423), FRAC_CONST(0.01439046660792),

298 
FRAC_CONST
(-0.01327182200351), FRAC_CONST(-0.01218499959508),

299 
FRAC_CONST
(-0.01113155480321), FRAC_CONST(-0.01011502154986),

300 
FRAC_CONST
(-0.00913253296085), FRAC_CONST(-0.00817982333726),

301 
FRAC_CONST
(-0.00726158168517), FRAC_CONST(-0.00637922932685),

302 
FRAC_CONST
(-0.00553372111088), FRAC_CONST(-0.004722259624),

303 
FRAC_CONST
(-0.00394011240522), FRAC_CONST(-0.003193377839),

304 
FRAC_CONST
(-0.00248267236449), FRAC_CONST(-0.00180394725893),

305 
FRAC_CONST
(-0.00115681355227), FRAC_CONST(-0.00054642808664),

306 
FRAC_CONST
(2.760451905E-005), FRAC_CONST(0.0005832264248),

307 
FRAC_CONST
(0.00109023290512), FRAC_CONST(0.00157846825768),

308 
FRAC_CONST
(0.0020274176185), FRAC_CONST(0.00245085400321),

309 
FRAC_CONST
(0.00284467578623), FRAC_CONST(0.00320918858098),

310 
FRAC_CONST
(0.00354012465507), FRAC_CONST(0.00384564081246),

311 
FRAC_CONST
(0.0041251642327), FRAC_CONST(0.00438018617447),

312 
FRAC_CONST
(0.00460395301471), FRAC_CONST(0.004810946906),

313 
FRAC_CONST
(0.00498396877629), FRAC_CONST(0.00513822754514),

314 
FRAC_CONST
(0.00527157587272), FRAC_CONST(0.0053838975897),

315 
FRAC_CONST
(0.0054753783077), FRAC_CONST(0.005540436394),

316 
FRAC_CONST
(0.0055917128663), FRAC_CONST(0.00562661141932),

317 
FRAC_CONST
(0.00563891995151), FRAC_CONST(0.00564551969164),

318 
FRAC_CONST
(0.00562206432097), FRAC_CONST(0.00559380230045),

319 
FRAC_CONST
(0.00554757145088), FRAC_CONST(0.00548760401507),

320 
FRAC_CONST
(0.00541967759307), FRAC_CONST(0.00534716811982),

321 
FRAC_CONST
(0.00524611661324), FRAC_CONST(0.00514073539032),

322 
FRAC_CONST
(0.00503930226013), FRAC_CONST(0.00491376035745),

323 
FRAC_CONST
(0.00479325608498), FRAC_CONST(0.00466064606118),

324 
FRAC_CONST
(0.00452098527825), FRAC_CONST(0.00437307196781),

325 
FRAC_CONST
(0.0042264269227), FRAC_CONST(0.00408197531935),

326 
FRAC_CONST
(0.00392074323703), FRAC_CONST(0.00376039229104),

327 
FRAC_CONST
(0.00360082681231), FRAC_CONST(0.00344188741828),

328 
FRAC_CONST
(0.00327396134847), FRAC_CONST(0.00311254206525),

329 
FRAC_CONST
(0.00294694477165), FRAC_CONST(0.00278704643465),

330 
FRAC_CONST
(0.00262017586902), FRAC_CONST(0.00246256169126),

331 
FRAC_CONST
(0.00230172547746), FRAC_CONST(0.00214615835557),

332 
FRAC_CONST
(0.00198411407369), FRAC_CONST(0.00183482654224),

333 
FRAC_CONST
(0.00168680832531), FRAC_CONST(0.00154432198471),

334 
FRAC_CONST
(0.00139024948272), FRAC_CONST(0.00125778846475),

335 
FRAC_CONST
(0.00112501551307), FRAC_CONST(0.00098859883015),

336 
FRAC_CONST
(0.00086084433262), FRAC_CONST(0.00074580258865),

337 
FRAC_CONST
(0.00062393761391), FRAC_CONST(0.00051073884952),

338 
FRAC_CONST
(0.0004026540216), FRAC_CONST(0.00029495311041),

339 
FRAC_CONST
(0.00020430170688), FRAC_CONST(0.00010943831274),

340 
FRAC_CONST
(1.349497418E-005), FRAC_CONST(-6.173344072E-005),

341 
FRAC_CONST
(-0.00014463809349), FRAC_CONST(-0.0002098337344),

342 
FRAC_CONST
(-0.00028969811748), FRAC_CONST(-0.00035011758756),

343 
FRAC_CONST
(-0.00040951214522), FRAC_CONST(-0.00046063254803),

344 
FRAC_CONST
(-0.00051455722108), FRAC_CONST(-0.00055645763906),

345 
FRAC_CONST
(-0.0005946118933), FRAC_CONST(-0.00063415949025),

346 
FRAC_CONST
(-0.00066504150893), FRAC_CONST(-0.00069179375372),

347 
FRAC_CONST
(-0.00072153919876), FRAC_CONST(-0.00073193571525),

348 
FRAC_CONST
(-0.00075300014201), FRAC_CONST(-0.00076307935757),

349 
FRAC_CONST
(-0.0007757977331), FRAC_CONST(-0.00078014496257),

350 
FRAC_CONST
(-0.000780366471), FRAC_CONST(-0.00077798694927),

351 
FRAC_CONST
(-0.00078343322877), FRAC_CONST(-0.00077248485949),

352 
FRAC_CONST
(-0.0007681371927), FRAC_CONST(-0.00074905980532),

353 
FRAC_CONST
(-0.00074409418541), FRAC_CONST(-0.00072550431222),

354 
FRAC_CONST
(-0.00071577364744), FRAC_CONST(-0.00069416146273),

355 
FRAC_CONST
(-0.00067776907764), FRAC_CONST(-0.00065403333621),

356 
FRAC_CONST
(-0.00063124935319), FRAC_CONST(-0.00061327473938),

357 
FRAC_CONST
(-0.00058709304852), FRAC_CONST(-0.00056778025613),

358 
FRAC_CONST
(-0.00054665656337), FRAC_CONST(-0.00052265642972),

359 
FRAC_CONST
(-0.00050407143497), FRAC_CONST(-0.00048937912498),

360 
FRAC_CONST
(-0.00048752279712), FRAC_CONST(-0.00049475180896),

361 
FRAC_CONST
(-0.00056176925738), FRAC_CONST(-0.00055252865047)

	@sbr_syntax.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 #ifde‡
SBR_DEC


33 
	~"sbr_sy¡ax.h
"

34 
	~"sy¡ax.h
"

35 
	~"sbr_huff.h
"

36 
	~"sbr_fbt.h
"

37 
	~"sbr_tf_grid.h
"

38 
	~"sbr_e_nf.h
"

39 
	~"bôs.h
"

40 #ifde‡
PS_DEC


41 
	~"ps_dec.h
"

43 #ifde‡
DRM_PS


44 
	~"drm_dec.h
"

46 
	~"™Æysis.h
"

49 
sbr_hódî
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
);

50 
uöt8_t
 
ˇlc_sbr_èbÀs
(
sbr_öfo
 *
sbr
, uöt8_à
°¨t_‰eq
, uöt8_à
°›_‰eq
,

51 
uöt8_t
 
ßm∂î©e_mode
, uöt8_à
‰eq_sˇÀ
,

52 
uöt8_t
 
Æãr_sˇÀ
, uöt8_à
xovî_b™d
);

53 
uöt8_t
 
sbr_d©a
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
);

54 
uöt16_t
 
sbr_exãnsi⁄
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
,

55 
uöt8_t
 
bs_exãnsi⁄_id
, 
uöt16_t
 
num_bôs_À·
);

56 
uöt8_t
 
sbr_sögÀ_ch™√l_ñemít
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
);

57 
uöt8_t
 
sbr_ch™√l_∑ú_ñemít
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
);

58 
uöt8_t
 
sbr_grid
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
, uöt8_à
ch
);

59 
sbr_dtdf
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
);

60 
övf_mode
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
);

61 
söusoidÆ_codög
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
);

64 
	$sbr_ª£t
(
sbr_öfo
 *
sbr
)

67 
	`¥ötf
("%d\n", 
sbr
->
bs_°¨t_‰eq_¥ev
);

68 
	`¥ötf
("%d\n", 
sbr
->
bs_°›_‰eq_¥ev
);

69 
	`¥ötf
("%d\n", 
sbr
->
bs_‰eq_sˇÀ_¥ev
);

70 
	`¥ötf
("%d\n", 
sbr
->
bs_Æãr_sˇÀ_¥ev
);

71 
	`¥ötf
("%d\n", 
sbr
->
bs_xovî_b™d_¥ev
);

72 
	`¥ötf
("%d\n\n", 
sbr
->
bs_noi£_b™ds_¥ev
);

76 i‡((
sbr
->
bs_°¨t_‰eq
 !sbr->
bs_°¨t_‰eq_¥ev
) ||

77 (
sbr
->
bs_°›_‰eq
 !sbr->
bs_°›_‰eq_¥ev
) ||

78 (
sbr
->
bs_‰eq_sˇÀ
 !sbr->
bs_‰eq_sˇÀ_¥ev
) ||

79 (
sbr
->
bs_Æãr_sˇÀ
 !sbr->
bs_Æãr_sˇÀ_¥ev
) ||

80 (
sbr
->
bs_xovî_b™d
 !sbr->
bs_xovî_b™d_¥ev
) ||

81 (
sbr
->
bs_noi£_b™ds
 !sbr->
bs_noi£_b™ds_¥ev
))

83 
sbr
->
Re£t
 = 1;

85 
sbr
->
Re£t
 = 0;

88 
sbr
->
bs_°¨t_‰eq_¥ev
 = sbr->
bs_°¨t_‰eq
;

89 
sbr
->
bs_°›_‰eq_¥ev
 = sbr->
bs_°›_‰eq
;

90 
sbr
->
bs_‰eq_sˇÀ_¥ev
 = sbr->
bs_‰eq_sˇÀ
;

91 
sbr
->
bs_Æãr_sˇÀ_¥ev
 = sbr->
bs_Æãr_sˇÀ
;

92 
sbr
->
bs_xovî_b™d_¥ev
 = sbr->
bs_xovî_b™d
;

93 
sbr
->
bs_noi£_b™ds_¥ev
 = sbr->
bs_noi£_b™ds
;

94 
	}
}

96 
uöt8_t
 
	$ˇlc_sbr_èbÀs
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
°¨t_‰eq
, uöt8_à
°›_‰eq
,

97 
uöt8_t
 
ßm∂î©e_mode
, uöt8_à
‰eq_sˇÀ
,

98 
uöt8_t
 
Æãr_sˇÀ
, uöt8_à
xovî_b™d
)

100 
uöt8_t
 
ªsu…
 = 0;

101 
uöt8_t
 
k2
;

104 
sbr
->
k0
 = 
	`qmf_°¨t_ch™√l
(
°¨t_‰eq
, 
ßm∂î©e_mode
, sbr->
ßm∂e_øã
);

105 
k2
 = 
	`qmf_°›_ch™√l
(
°›_‰eq
, 
sbr
->
ßm∂e_øã
, sbr->
k0
);

108 i‡(
sbr
->
ßm∂e_øã
 >= 48000)

110 i‡((
k2
 - 
sbr
->
k0
) > 32)

111 
ªsu…
 += 1;

112 } i‡(
sbr
->
ßm∂e_øã
 <= 32000) {

113 i‡((
k2
 - 
sbr
->
k0
) > 48)

114 
ªsu…
 += 1;

116 i‡((
k2
 - 
sbr
->
k0
) > 45)

117 
ªsu…
 += 1;

120 i‡(
‰eq_sˇÀ
 == 0)

122 
ªsu…
 +
	`ma°î_‰equícy_èbÀ_fs0
(
sbr
, sbr->
k0
, 
k2
, 
Æãr_sˇÀ
);

124 
ªsu…
 +
	`ma°î_‰equícy_èbÀ
(
sbr
, sbr->
k0
, 
k2
, 
‰eq_sˇÀ
, 
Æãr_sˇÀ
);

126 
ªsu…
 +
	`dîived_‰equícy_èbÀ
(
sbr
, 
xovî_b™d
, 
k2
);

128 
ªsu…
 = (result > 0) ? 1 : 0;

130  
ªsu…
;

131 
	}
}

134 
uöt8_t
 
	$sbr_exãnsi⁄_d©a
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
, 
uöt16_t
 
˙t
)

136 
uöt8_t
 
ªsu…
 = 0;

137 
uöt16_t
 
num_Æign_bôs
 = 0;

138 
uöt16_t
 
num_sbr_bôs
 = (uöt16_t)
	`Áad_gë_¥o˚s£d_bôs
(
ld
);

140 
uöt8_t
 
ßved_°¨t_‰eq
, 
ßved_ßm∂î©e_mode
;

141 
uöt8_t
 
ßved_°›_‰eq
, 
ßved_‰eq_sˇÀ
;

142 
uöt8_t
 
ßved_Æãr_sˇÀ
, 
ßved_xovî_b™d
;

144 #ifde‡
DRM


145 i‡(!
sbr
->
Is_DRM_SBR
)

148 
uöt8_t
 
bs_exãnsi⁄_ty≥
 = (uöt8_t)
	`Áad_gëbôs
(
ld
, 4

149 
	`DEBUGVAR
(1,198,"sbr_bitstream(): bs_extension_type"));

151 i‡(
bs_exãnsi⁄_ty≥
 =
EXT_SBR_DATA_CRC
)

153 
sbr
->
bs_sbr_¸c_bôs
 = (
uöt16_t
)
	`Áad_gëbôs
(
ld
, 10

154 
	`DEBUGVAR
(1,199,"sbr_bitstream(): bs_sbr_crc_bits"));

159 
ßved_°¨t_‰eq
 = 
sbr
->
bs_°¨t_‰eq
;

160 
ßved_ßm∂î©e_mode
 = 
sbr
->
bs_ßm∂î©e_mode
;

161 
ßved_°›_‰eq
 = 
sbr
->
bs_°›_‰eq
;

162 
ßved_‰eq_sˇÀ
 = 
sbr
->
bs_‰eq_sˇÀ
;

163 
ßved_Æãr_sˇÀ
 = 
sbr
->
bs_Æãr_sˇÀ
;

164 
ßved_xovî_b™d
 = 
sbr
->
bs_xovî_b™d
;

166 
sbr
->
bs_hódî_Êag
 = 
	`Áad_gë1bô
(
ld


167 
	`DEBUGVAR
(1,200,"sbr_bitstream(): bs_header_flag"));

169 i‡(
sbr
->
bs_hódî_Êag
)

170 
	`sbr_hódî
(
ld
, 
sbr
);

173 
	`sbr_ª£t
(
sbr
);

177 i‡(
sbr
->
hódî_cou¡
 != 0)

179 i‡(
sbr
->
Re£t
 || (sbr->
bs_hódî_Êag
 && sbr->
ju°_£eked
))

181 
uöt8_t
 
π
 = 
	`ˇlc_sbr_èbÀs
(
sbr
, sbr->
bs_°¨t_‰eq
, sbr->
bs_°›_‰eq
,

182 
sbr
->
bs_ßm∂î©e_mode
, sbr->
bs_‰eq_sˇÀ
,

183 
sbr
->
bs_Æãr_sˇÀ
, sbr->
bs_xovî_b™d
);

186 i‡(
π
 > 0)

188 
	`ˇlc_sbr_èbÀs
(
sbr
, 
ßved_°¨t_‰eq
, 
ßved_°›_‰eq
,

189 
ßved_ßm∂î©e_mode
, 
ßved_‰eq_sˇÀ
,

190 
ßved_Æãr_sˇÀ
, 
ßved_xovî_b™d
);

194 i‡(
ªsu…
 == 0)

196 
ªsu…
 = 
	`sbr_d©a
(
ld
, 
sbr
);

204 i‡((
ªsu…
 > 0) &&

205 (
sbr
->
Re£t
 || (sbr->
bs_hódî_Êag
 && sbr->
ju°_£eked
)))

207 
	`ˇlc_sbr_èbÀs
(
sbr
, 
ßved_°¨t_‰eq
, 
ßved_°›_‰eq
,

208 
ßved_ßm∂î©e_mode
, 
ßved_‰eq_sˇÀ
,

209 
ßved_Æãr_sˇÀ
, 
ßved_xovî_b™d
);

213 
ªsu…
 = 0;

216 
ªsu…
 = 1;

219 #ifde‡
DRM


220 i‡(!
sbr
->
Is_DRM_SBR
)

223 
num_sbr_bôs
 = (
uöt16_t
)
	`Áad_gë_¥o˚s£d_bôs
(
ld
) -Çum_sbr_bits;

226 i‡(8*
˙t
 < 
num_sbr_bôs
)

230 
num_Æign_bôs
 = 8*
˙t
 - 
num_sbr_bôs
;

232 
num_Æign_bôs
 > 7)

234 
	`Áad_gëbôs
(
ld
, 8

235 
	`DEBUGVAR
(1,999,"sbr_bitstream():Çum_align_bits"));

236 
num_Æign_bôs
 -= 8;

238 
	`Áad_gëbôs
(
ld
, 
num_Æign_bôs


239 
	`DEBUGVAR
(1,999,"sbr_bitstream():Çum_align_bits"));

242  
ªsu…
;

243 
	}
}

246 
	$sbr_hódî
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
)

248 
uöt8_t
 
bs_hódî_exåa_1
, 
bs_hódî_exåa_2
;

250 
sbr
->
hódî_cou¡
++;

252 
sbr
->
bs_amp_ªs
 = 
	`Áad_gë1bô
(
ld


253 
	`DEBUGVAR
(1,203,"sbr_header(): bs_amp_res"));

257 
sbr
->
bs_°¨t_‰eq
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

258 
	`DEBUGVAR
(1,204,"sbr_header(): bs_start_freq"));

259 
sbr
->
bs_°›_‰eq
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

260 
	`DEBUGVAR
(1,205,"sbr_header(): bs_stop_freq"));

261 
sbr
->
bs_xovî_b™d
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 3

262 
	`DEBUGVAR
(1,206,"sbr_header(): bs_xover_band"));

263 
	`Áad_gëbôs
(
ld
, 2

264 
	`DEBUGVAR
(1,207,"sbr_header(): bs_reserved_bits_hdr"));

265 
bs_hódî_exåa_1
 = (
uöt8_t
)
	`Áad_gë1bô
(
ld


266 
	`DEBUGVAR
(1,208,"sbr_header(): bs_header_extra_1"));

267 
bs_hódî_exåa_2
 = (
uöt8_t
)
	`Áad_gë1bô
(
ld


268 
	`DEBUGVAR
(1,209,"sbr_header(): bs_header_extra_2"));

270 i‡(
bs_hódî_exåa_1
)

272 
sbr
->
bs_‰eq_sˇÀ
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

273 
	`DEBUGVAR
(1,211,"sbr_header(): bs_freq_scale"));

274 
sbr
->
bs_Æãr_sˇÀ
 = (
uöt8_t
)
	`Áad_gë1bô
(
ld


275 
	`DEBUGVAR
(1,212,"sbr_header(): bs_alter_scale"));

276 
sbr
->
bs_noi£_b™ds
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

277 
	`DEBUGVAR
(1,213,"sbr_header(): bs_noise_bands"));

280 
sbr
->
bs_‰eq_sˇÀ
 = 2;

281 
sbr
->
bs_Æãr_sˇÀ
 = 1;

282 
sbr
->
bs_noi£_b™ds
 = 2;

285 i‡(
bs_hódî_exåa_2
)

287 
sbr
->
bs_limôî_b™ds
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

288 
	`DEBUGVAR
(1,214,"sbr_header(): bs_limiter_bands"));

289 
sbr
->
bs_limôî_gaös
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

290 
	`DEBUGVAR
(1,215,"sbr_header(): bs_limiter_gains"));

291 
sbr
->
bs_öãΩﬁ_‰eq
 = (
uöt8_t
)
	`Áad_gë1bô
(
ld


292 
	`DEBUGVAR
(1,216,"sbr_header(): bs_interpol_freq"));

293 
sbr
->
bs_smoŸhög_mode
 = (
uöt8_t
)
	`Áad_gë1bô
(
ld


294 
	`DEBUGVAR
(1,217,"sbr_header(): bs_smoothing_mode"));

297 
sbr
->
bs_limôî_b™ds
 = 2;

298 
sbr
->
bs_limôî_gaös
 = 2;

299 
sbr
->
bs_öãΩﬁ_‰eq
 = 1;

300 
sbr
->
bs_smoŸhög_mode
 = 1;

305 
	`¥ötf
("bs_amp_ªs: %d\n", 
sbr
->
bs_amp_ªs
);

306 
	`¥ötf
("bs_°¨t_‰eq: %d\n", 
sbr
->
bs_°¨t_‰eq
);

307 
	`¥ötf
("bs_°›_‰eq: %d\n", 
sbr
->
bs_°›_‰eq
);

308 
	`¥ötf
("bs_xovî_b™d: %d\n", 
sbr
->
bs_xovî_b™d
);

309 i‡(
bs_hódî_exåa_1
)

311 
	`¥ötf
("bs_‰eq_sˇÀ: %d\n", 
sbr
->
bs_‰eq_sˇÀ
);

312 
	`¥ötf
("bs_Æãr_sˇÀ: %d\n", 
sbr
->
bs_Æãr_sˇÀ
);

313 
	`¥ötf
("bs_noi£_b™ds: %d\n", 
sbr
->
bs_noi£_b™ds
);

315 i‡(
bs_hódî_exåa_2
)

317 
	`¥ötf
("bs_limôî_b™ds: %d\n", 
sbr
->
bs_limôî_b™ds
);

318 
	`¥ötf
("bs_limôî_gaös: %d\n", 
sbr
->
bs_limôî_gaös
);

319 
	`¥ötf
("bs_öãΩﬁ_‰eq: %d\n", 
sbr
->
bs_öãΩﬁ_‰eq
);

320 
	`¥ötf
("bs_smoŸhög_mode: %d\n", 
sbr
->
bs_smoŸhög_mode
);

322 
	`¥ötf
("\n");

324 
	}
}

327 
uöt8_t
 
	$sbr_d©a
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
)

329 
uöt8_t
 
ªsu…
;

331 
sbr
->
bs_ßm∂î©e_mode
 = 
	`Áad_gë1bô
(
ld


332 
	`DEBUGVAR
(1,219,"sbr_data(): bs_samplerate_mode"));

335 
sbr
->
øã
 = (sbr->
bs_ßm∂î©e_mode
) ? 2 : 1;

337 
sbr
->
id_Øc
)

339 
ID_SCE
:

340 i‡((
ªsu…
 = 
	`sbr_sögÀ_ch™√l_ñemít
(
ld
, 
sbr
)) > 0)

341  
ªsu…
;

343 
ID_CPE
:

344 i‡((
ªsu…
 = 
	`sbr_ch™√l_∑ú_ñemít
(
ld
, 
sbr
)) > 0)

345  
ªsu…
;

350 
	}
}

353 
uöt8_t
 
	$sbr_sögÀ_ch™√l_ñemít
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
)

355 
uöt8_t
 
ªsu…
;

357 i‡(
	`Áad_gë1bô
(
ld


358 
	`DEBUGVAR
(1,220,"sbr_single_channel_element(): bs_data_extra")))

360 
	`Áad_gëbôs
(
ld
, 4

361 
	`DEBUGVAR
(1,221,"sbr_single_channel_element(): bs_reserved_bits_data"));

364 #ifde‡
DRM


366 i‡(
sbr
->
Is_DRM_SBR
)

367 
	`Áad_gë1bô
(
ld
);

370 i‡((
ªsu…
 = 
	`sbr_grid
(
ld
, 
sbr
, 0)) > 0)

371  
ªsu…
;

372 
	`sbr_dtdf
(
ld
, 
sbr
, 0);

373 
	`övf_mode
(
ld
, 
sbr
, 0);

374 
	`sbr_ívñ›e
(
ld
, 
sbr
, 0);

375 
	`sbr_noi£
(
ld
, 
sbr
, 0);

377 #i‚de‡
FIXED_POINT


378 
	`ívñ›e_noi£_dequ™tißti⁄
(
sbr
, 0);

381 
	`mem£t
(
sbr
->
bs_add_h¨m⁄ic
[0], 0, 64*(
uöt8_t
));

383 
sbr
->
bs_add_h¨m⁄ic_Êag
[0] = 
	`Áad_gë1bô
(
ld


384 
	`DEBUGVAR
(1,223,"sbr_single_channel_element(): bs_add_harmonic_flag[0]"));

385 i‡(
sbr
->
bs_add_h¨m⁄ic_Êag
[0])

386 
	`söusoidÆ_codög
(
ld
, 
sbr
, 0);

388 
sbr
->
bs_exãnded_d©a
 = 
	`Áad_gë1bô
(
ld


389 
	`DEBUGVAR
(1,224,"sbr_single_channel_element(): bs_extended_data[0]"));

391 i‡(
sbr
->
bs_exãnded_d©a
)

393 
uöt16_t
 
ƒ_bôs_À·
;

394 #i‡(
	`deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

395 
uöt8_t
 
ps_ext_ªad
 = 0;

397 
uöt16_t
 
˙t
 = (uöt16_t)
	`Áad_gëbôs
(
ld
, 4

398 
	`DEBUGVAR
(1,225,"sbr_single_channel_element(): bs_extension_size"));

399 i‡(
˙t
 == 15)

401 
˙t
 +(
uöt16_t
)
	`Áad_gëbôs
(
ld
, 8

402 
	`DEBUGVAR
(1,226,"sbr_single_channel_element(): bs_esc_count"));

405 
ƒ_bôs_À·
 = 8 * 
˙t
;

406 
ƒ_bôs_À·
 > 7)

408 
uöt16_t
 
tmp_ƒ_bôs
 = 0;

410 
sbr
->
bs_exãnsi⁄_id
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

411 
	`DEBUGVAR
(1,227,"sbr_single_channel_element(): bs_extension_id"));

412 
tmp_ƒ_bôs
 += 2;

415 #i‡(
	`deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

416 #i‡(
	`deföed
(
PS_DEC
Ë&& deföed(
DRM_PS
))

417 i‡(
sbr
->
bs_exãnsi⁄_id
 =
EXTENSION_ID_PS
 || sbr->bs_exãnsi⁄_id =
DRM_PARAMETRIC_STEREO
)

419 #ifde‡
PS_DEC


420 i‡(
sbr
->
bs_exãnsi⁄_id
 =
EXTENSION_ID_PS
)

422 #ifde‡
DRM_PS


423 i‡(
sbr
->
bs_exãnsi⁄_id
 =
DRM_PARAMETRIC_STEREO
)

428 i‡(
ps_ext_ªad
 == 0)

430 
ps_ext_ªad
 = 1;

434 
sbr
->
bs_exãnsi⁄_id
 = 3;

439 
tmp_ƒ_bôs
 +
	`sbr_exãnsi⁄
(
ld
, 
sbr
, sbr->
bs_exãnsi⁄_id
, 
ƒ_bôs_À·
);

442 i‡(
tmp_ƒ_bôs
 > 
ƒ_bôs_À·
)

445 
ƒ_bôs_À·
 -
tmp_ƒ_bôs
;

449 i‡(
ƒ_bôs_À·
 > 0)

451 
	`Áad_gëbôs
(
ld
, 
ƒ_bôs_À·


452 
	`DEBUGVAR
(1,280,"sbr_single_channel_element():Çr_bits_left"));

457 
	}
}

460 
uöt8_t
 
	$sbr_ch™√l_∑ú_ñemít
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
)

462 
uöt8_t
 
n
, 
ªsu…
;

464 i‡(
	`Áad_gë1bô
(
ld


465 
	`DEBUGVAR
(1,228,"sbr_single_channel_element(): bs_data_extra")))

467 
	`Áad_gëbôs
(
ld
, 4

468 
	`DEBUGVAR
(1,228,"sbr_channel_pair_element(): bs_reserved_bits_data"));

469 
	`Áad_gëbôs
(
ld
, 4

470 
	`DEBUGVAR
(1,228,"sbr_channel_pair_element(): bs_reserved_bits_data"));

473 
sbr
->
bs_cou∂ög
 = 
	`Áad_gë1bô
(
ld


474 
	`DEBUGVAR
(1,228,"sbr_channel_pair_element(): bs_coupling"));

476 i‡(
sbr
->
bs_cou∂ög
)

478 i‡((
ªsu…
 = 
	`sbr_grid
(
ld
, 
sbr
, 0)) > 0)

479  
ªsu…
;

482 
sbr
->
bs_‰ame_˛ass
[1] = sbr->bs_frame_class[0];

483 
sbr
->
L_E
[1] = sbr->L_E[0];

484 
sbr
->
L_Q
[1] = sbr->L_Q[0];

485 
sbr
->
bs_poöãr
[1] = sbr->bs_pointer[0];

487 
n
 = 0;Ç <
sbr
->
L_E
[0];Ç++)

489 
sbr
->
t_E
[1][
n
] = sbr->t_E[0][n];

490 
sbr
->
f
[1][
n
] = sbr->f[0][n];

492 
n
 = 0;Ç <
sbr
->
L_Q
[0];Ç++)

493 
sbr
->
t_Q
[1][
n
] = sbr->t_Q[0][n];

495 
	`sbr_dtdf
(
ld
, 
sbr
, 0);

496 
	`sbr_dtdf
(
ld
, 
sbr
, 1);

497 
	`övf_mode
(
ld
, 
sbr
, 0);

500 
n
 = 0;Ç < 
sbr
->
N_Q
;Ç++)

501 
sbr
->
bs_övf_mode
[1][
n
] = sbr->bs_invf_mode[0][n];

503 
	`sbr_ívñ›e
(
ld
, 
sbr
, 0);

504 
	`sbr_noi£
(
ld
, 
sbr
, 0);

505 
	`sbr_ívñ›e
(
ld
, 
sbr
, 1);

506 
	`sbr_noi£
(
ld
, 
sbr
, 1);

508 
	`mem£t
(
sbr
->
bs_add_h¨m⁄ic
[0], 0, 64*(
uöt8_t
));

509 
	`mem£t
(
sbr
->
bs_add_h¨m⁄ic
[1], 0, 64*(
uöt8_t
));

511 
sbr
->
bs_add_h¨m⁄ic_Êag
[0] = 
	`Áad_gë1bô
(
ld


512 
	`DEBUGVAR
(1,231,"sbr_channel_pair_element(): bs_add_harmonic_flag[0]"));

513 i‡(
sbr
->
bs_add_h¨m⁄ic_Êag
[0])

514 
	`söusoidÆ_codög
(
ld
, 
sbr
, 0);

516 
sbr
->
bs_add_h¨m⁄ic_Êag
[1] = 
	`Áad_gë1bô
(
ld


517 
	`DEBUGVAR
(1,232,"sbr_channel_pair_element(): bs_add_harmonic_flag[1]"));

518 i‡(
sbr
->
bs_add_h¨m⁄ic_Êag
[1])

519 
	`söusoidÆ_codög
(
ld
, 
sbr
, 1);

521 
uöt8_t
 
ßved_t_E
[6] = {0}, 
ßved_t_Q
[3] = {0};

522 
uöt8_t
 
ßved_L_E
 = 
sbr
->
L_E
[0];

523 
uöt8_t
 
ßved_L_Q
 = 
sbr
->
L_Q
[0];

524 
uöt8_t
 
ßved_‰ame_˛ass
 = 
sbr
->
bs_‰ame_˛ass
[0];

526 
n
 = 0;Ç < 
ßved_L_E
;Ç++)

527 
ßved_t_E
[
n
] = 
sbr
->
t_E
[0][n];

528 
n
 = 0;Ç < 
ßved_L_Q
;Ç++)

529 
ßved_t_Q
[
n
] = 
sbr
->
t_Q
[0][n];

531 i‡((
ªsu…
 = 
	`sbr_grid
(
ld
, 
sbr
, 0)) > 0)

532  
ªsu…
;

533 i‡((
ªsu…
 = 
	`sbr_grid
(
ld
, 
sbr
, 1)) > 0)

536 
sbr
->
bs_‰ame_˛ass
[0] = 
ßved_‰ame_˛ass
;

537 
sbr
->
L_E
[0] = 
ßved_L_E
;

538 
sbr
->
L_Q
[0] = 
ßved_L_Q
;

539 
n
 = 0;Ç < 6;Ç++)

540 
sbr
->
t_E
[0][
n
] = 
ßved_t_E
[n];

541 
n
 = 0;Ç < 3;Ç++)

542 
sbr
->
t_Q
[0][
n
] = 
ßved_t_Q
[n];

544  
ªsu…
;

546 
	`sbr_dtdf
(
ld
, 
sbr
, 0);

547 
	`sbr_dtdf
(
ld
, 
sbr
, 1);

548 
	`övf_mode
(
ld
, 
sbr
, 0);

549 
	`övf_mode
(
ld
, 
sbr
, 1);

550 
	`sbr_ívñ›e
(
ld
, 
sbr
, 0);

551 
	`sbr_ívñ›e
(
ld
, 
sbr
, 1);

552 
	`sbr_noi£
(
ld
, 
sbr
, 0);

553 
	`sbr_noi£
(
ld
, 
sbr
, 1);

555 
	`mem£t
(
sbr
->
bs_add_h¨m⁄ic
[0], 0, 64*(
uöt8_t
));

556 
	`mem£t
(
sbr
->
bs_add_h¨m⁄ic
[1], 0, 64*(
uöt8_t
));

558 
sbr
->
bs_add_h¨m⁄ic_Êag
[0] = 
	`Áad_gë1bô
(
ld


559 
	`DEBUGVAR
(1,239,"sbr_channel_pair_element(): bs_add_harmonic_flag[0]"));

560 i‡(
sbr
->
bs_add_h¨m⁄ic_Êag
[0])

561 
	`söusoidÆ_codög
(
ld
, 
sbr
, 0);

563 
sbr
->
bs_add_h¨m⁄ic_Êag
[1] = 
	`Áad_gë1bô
(
ld


564 
	`DEBUGVAR
(1,240,"sbr_channel_pair_element(): bs_add_harmonic_flag[1]"));

565 i‡(
sbr
->
bs_add_h¨m⁄ic_Êag
[1])

566 
	`söusoidÆ_codög
(
ld
, 
sbr
, 1);

568 #i‚de‡
FIXED_POINT


569 
	`ívñ›e_noi£_dequ™tißti⁄
(
sbr
, 0);

570 
	`ívñ›e_noi£_dequ™tißti⁄
(
sbr
, 1);

572 i‡(
sbr
->
bs_cou∂ög
)

573 
	`unm≠_ívñ›e_noi£
(
sbr
);

576 
sbr
->
bs_exãnded_d©a
 = 
	`Áad_gë1bô
(
ld


577 
	`DEBUGVAR
(1,233,"sbr_channel_pair_element(): bs_extended_data[0]"));

578 i‡(
sbr
->
bs_exãnded_d©a
)

580 
uöt16_t
 
ƒ_bôs_À·
;

581 
uöt16_t
 
˙t
 = (uöt16_t)
	`Áad_gëbôs
(
ld
, 4

582 
	`DEBUGVAR
(1,234,"sbr_channel_pair_element(): bs_extension_size"));

583 i‡(
˙t
 == 15)

585 
˙t
 +(
uöt16_t
)
	`Áad_gëbôs
(
ld
, 8

586 
	`DEBUGVAR
(1,235,"sbr_channel_pair_element(): bs_esc_count"));

589 
ƒ_bôs_À·
 = 8 * 
˙t
;

590 
ƒ_bôs_À·
 > 7)

592 
uöt16_t
 
tmp_ƒ_bôs
 = 0;

594 
sbr
->
bs_exãnsi⁄_id
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

595 
	`DEBUGVAR
(1,236,"sbr_channel_pair_element(): bs_extension_id"));

596 
tmp_ƒ_bôs
 += 2;

597 
tmp_ƒ_bôs
 +
	`sbr_exãnsi⁄
(
ld
, 
sbr
, sbr->
bs_exãnsi⁄_id
, 
ƒ_bôs_À·
);

600 i‡(
tmp_ƒ_bôs
 > 
ƒ_bôs_À·
)

603 
ƒ_bôs_À·
 -
tmp_ƒ_bôs
;

607 i‡(
ƒ_bôs_À·
 > 0)

609 
	`Áad_gëbôs
(
ld
, 
ƒ_bôs_À·


610 
	`DEBUGVAR
(1,280,"sbr_channel_pair_element():Çr_bits_left"));

615 
	}
}

618 
öt8_t
 
	$sbr_log2
(c⁄° 
öt8_t
 
vÆ
)

620 
öt8_t
 
log2èb
[] = { 0, 0, 1, 2, 2, 3, 3, 3, 3, 4 };

621 i‡(
vÆ
 < 10 && val >= 0)

622  
log2èb
[
vÆ
];

625 
	}
}

629 
uöt8_t
 
	$sbr_grid
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
)

631 
uöt8_t
 
i
, 
ív
, 
ªl
, 
ªsu…
;

632 
uöt8_t
 
bs_abs_b‹d
, 
bs_abs_b‹d_1
;

633 
uöt8_t
 
bs_num_ív
 = 0;

634 
uöt8_t
 
ßved_L_E
 = 
sbr
->
L_E
[
ch
];

635 
uöt8_t
 
ßved_L_Q
 = 
sbr
->
L_Q
[
ch
];

636 
uöt8_t
 
ßved_‰ame_˛ass
 = 
sbr
->
bs_‰ame_˛ass
[
ch
];

638 
sbr
->
bs_‰ame_˛ass
[
ch
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

639 
	`DEBUGVAR
(1,248,"sbr_grid(): bs_frame_class"));

641 
sbr
->
bs_‰ame_˛ass
[
ch
])

643 
FIXFIX
:

644 
i
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

645 
	`DEBUGVAR
(1,249,"sbr_grid(): bs_num_env_raw"));

647 
bs_num_ív
 = 
	`mö
(1 << 
i
, 5);

649 
i
 = (
uöt8_t
)
	`Áad_gë1bô
(
ld


650 
	`DEBUGVAR
(1,250,"sbr_grid(): bs_freq_res_flag"));

651 
ív
 = 0;Énv < 
bs_num_ív
;Énv++)

652 
sbr
->
f
[
ch
][
ív
] = 
i
;

654 
sbr
->
abs_b‹d_Àad
[
ch
] = 0;

655 
sbr
->
abs_b‹d_åaû
[
ch
] = sbr->
numTimeSlŸs
;

656 
sbr
->
n_ªl_Àad
[
ch
] = 
bs_num_ív
 - 1;

657 
sbr
->
n_ªl_åaû
[
ch
] = 0;

660 
FIXVAR
:

661 
bs_abs_b‹d
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

662 
	`DEBUGVAR
(1,251,"sbr_grid(): bs_abs_b‹d")Ë+ 
sbr
->
numTimeSlŸs
;

663 
bs_num_ív
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

664 
	`DEBUGVAR
(1,252,"sbr_grid(): bs_num_env")) + 1;

666 
ªl
 = 0;Ññ < 
bs_num_ív
-1;Ñel++)

668 
sbr
->
bs_ªl_b‹d
[
ch
][
ªl
] = 2 * (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

669 
	`DEBUGVAR
(1,253,"sbr_grid(): bs_rel_bord")) + 2;

671 
i
 = 
	`sbr_log2
(
bs_num_ív
 + 1);

672 
sbr
->
bs_poöãr
[
ch
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 
i


673 
	`DEBUGVAR
(1,254,"sbr_grid(): bs_pointer"));

675 
ív
 = 0;Énv < 
bs_num_ív
;Énv++)

677 
sbr
->
f
[
ch
][
bs_num_ív
 - 
ív
 - 1] = (
uöt8_t
)
	`Áad_gë1bô
(
ld


678 
	`DEBUGVAR
(1,255,"sbr_grid(): bs_freq_res"));

681 
sbr
->
abs_b‹d_Àad
[
ch
] = 0;

682 
sbr
->
abs_b‹d_åaû
[
ch
] = 
bs_abs_b‹d
;

683 
sbr
->
n_ªl_Àad
[
ch
] = 0;

684 
sbr
->
n_ªl_åaû
[
ch
] = 
bs_num_ív
 - 1;

687 
VARFIX
:

688 
bs_abs_b‹d
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

689 
	`DEBUGVAR
(1,256,"sbr_grid(): bs_abs_bord"));

690 
bs_num_ív
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

691 
	`DEBUGVAR
(1,257,"sbr_grid(): bs_num_env")) + 1;

693 
ªl
 = 0;Ññ < 
bs_num_ív
-1;Ñel++)

695 
sbr
->
bs_ªl_b‹d
[
ch
][
ªl
] = 2 * (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

696 
	`DEBUGVAR
(1,258,"sbr_grid(): bs_rel_bord")) + 2;

698 
i
 = 
	`sbr_log2
(
bs_num_ív
 + 1);

699 
sbr
->
bs_poöãr
[
ch
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 
i


700 
	`DEBUGVAR
(1,259,"sbr_grid(): bs_pointer"));

702 
ív
 = 0;Énv < 
bs_num_ív
;Énv++)

704 
sbr
->
f
[
ch
][
ív
] = (
uöt8_t
)
	`Áad_gë1bô
(
ld


705 
	`DEBUGVAR
(1,260,"sbr_grid(): bs_freq_res"));

708 
sbr
->
abs_b‹d_Àad
[
ch
] = 
bs_abs_b‹d
;

709 
sbr
->
abs_b‹d_åaû
[
ch
] = sbr->
numTimeSlŸs
;

710 
sbr
->
n_ªl_Àad
[
ch
] = 
bs_num_ív
 - 1;

711 
sbr
->
n_ªl_åaû
[
ch
] = 0;

714 
VARVAR
:

715 
bs_abs_b‹d
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

716 
	`DEBUGVAR
(1,261,"sbr_grid(): bs_abs_bord_0"));

717 
bs_abs_b‹d_1
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

718 
	`DEBUGVAR
(1,262,"sbr_grid(): bs_abs_b‹d_1")Ë+ 
sbr
->
numTimeSlŸs
;

719 
sbr
->
bs_num_ªl_0
[
ch
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

720 
	`DEBUGVAR
(1,263,"sbr_grid(): bs_num_rel_0"));

721 
sbr
->
bs_num_ªl_1
[
ch
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

722 
	`DEBUGVAR
(1,264,"sbr_grid(): bs_num_rel_1"));

724 
bs_num_ív
 = 
	`mö
(5, 
sbr
->
bs_num_ªl_0
[
ch
] + sbr->
bs_num_ªl_1
[ch] + 1);

726 
ªl
 = 0;Ññ < 
sbr
->
bs_num_ªl_0
[
ch
];Ñel++)

728 
sbr
->
bs_ªl_b‹d_0
[
ch
][
ªl
] = 2 * (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

729 
	`DEBUGVAR
(1,265,"sbr_grid(): bs_rel_bord")) + 2;

731 
ªl
 = 0;Ññ < 
sbr
->
bs_num_ªl_1
[
ch
];Ñel++)

733 
sbr
->
bs_ªl_b‹d_1
[
ch
][
ªl
] = 2 * (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

734 
	`DEBUGVAR
(1,266,"sbr_grid(): bs_rel_bord")) + 2;

736 
i
 = 
	`sbr_log2
(
sbr
->
bs_num_ªl_0
[
ch
] + sbr->
bs_num_ªl_1
[ch] + 2);

737 
sbr
->
bs_poöãr
[
ch
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 
i


738 
	`DEBUGVAR
(1,267,"sbr_grid(): bs_pointer"));

740 
ív
 = 0;Énv < 
bs_num_ív
;Énv++)

742 
sbr
->
f
[
ch
][
ív
] = (
uöt8_t
)
	`Áad_gë1bô
(
ld


743 
	`DEBUGVAR
(1,268,"sbr_grid(): bs_freq_res"));

746 
sbr
->
abs_b‹d_Àad
[
ch
] = 
bs_abs_b‹d
;

747 
sbr
->
abs_b‹d_åaû
[
ch
] = 
bs_abs_b‹d_1
;

748 
sbr
->
n_ªl_Àad
[
ch
] = sbr->
bs_num_ªl_0
[ch];

749 
sbr
->
n_ªl_åaû
[
ch
] = sbr->
bs_num_ªl_1
[ch];

753 i‡(
sbr
->
bs_‰ame_˛ass
[
ch
] =
VARVAR
)

754 
sbr
->
L_E
[
ch
] = 
	`mö
(
bs_num_ív
, 5);

756 
sbr
->
L_E
[
ch
] = 
	`mö
(
bs_num_ív
, 4);

758 i‡(
sbr
->
L_E
[
ch
] <= 0)

761 i‡(
sbr
->
L_E
[
ch
] > 1)

762 
sbr
->
L_Q
[
ch
] = 2;

764 
sbr
->
L_Q
[
ch
] = 1;

767 i‡((
ªsu…
 = 
	`ívñ›e_time_b‹dî_ve˘‹
(
sbr
, 
ch
)) > 0)

769 
sbr
->
bs_‰ame_˛ass
[
ch
] = 
ßved_‰ame_˛ass
;

770 
sbr
->
L_E
[
ch
] = 
ßved_L_E
;

771 
sbr
->
L_Q
[
ch
] = 
ßved_L_Q
;

772  
ªsu…
;

774 
	`noi£_Êo‹_time_b‹dî_ve˘‹
(
sbr
, 
ch
);

777 
ív
 = 0;Énv < 
bs_num_ív
;Énv++)

779 
	`¥ötf
("‰eq_ªs[ch:%d][ív:%d]: %d\n", 
ch
, 
ív
, 
sbr
->
f
[ch][env]);

784 
	}
}

787 
	$sbr_dtdf
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
)

789 
uöt8_t
 
i
;

791 
i
 = 0; i < 
sbr
->
L_E
[
ch
]; i++)

793 
sbr
->
bs_df_ív
[
ch
][
i
] = 
	`Áad_gë1bô
(
ld


794 
	`DEBUGVAR
(1,269,"sbr_dtdf(): bs_df_env"));

797 
i
 = 0; i < 
sbr
->
L_Q
[
ch
]; i++)

799 
sbr
->
bs_df_noi£
[
ch
][
i
] = 
	`Áad_gë1bô
(
ld


800 
	`DEBUGVAR
(1,270,"sbr_dtdf(): bs_df_noise"));

802 
	}
}

805 
	$övf_mode
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
)

807 
uöt8_t
 
n
;

809 
n
 = 0;Ç < 
sbr
->
N_Q
;Ç++)

811 
sbr
->
bs_övf_mode
[
ch
][
n
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

812 
	`DEBUGVAR
(1,271,"invf_mode(): bs_invf_mode"));

814 
	}
}

816 
uöt16_t
 
	$sbr_exãnsi⁄
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
,

817 
uöt8_t
 
bs_exãnsi⁄_id
, 
uöt16_t
 
num_bôs_À·
)

819 #ifde‡
PS_DEC


820 
uöt8_t
 
hódî
;

821 
uöt16_t
 
ªt
;

824 
bs_exãnsi⁄_id
)

826 #ifde‡
PS_DEC


827 
EXTENSION_ID_PS
:

828 i‡(!
sbr
->
ps
)

830 
sbr
->
ps
 = 
	`ps_öô
(
	`gë_§_ödex
(sbr->
ßm∂e_øã
));

832 
ªt
 = 
	`ps_d©a
(
sbr
->
ps
, 
ld
, &
hódî
);

835 i‡(
sbr
->
ps_u£d
 =0 && 
hódî
 == 1)

837 
sbr
->
ps_u£d
 = 1;

840  
ªt
;

842 #ifde‡
DRM_PS


843 
DRM_PARAMETRIC_STEREO
:

844 
sbr
->
ps_u£d
 = 1;

845 i‡(!
sbr
->
drm_ps
)

847 
sbr
->
drm_ps
 = 
	`drm_ps_öô
();

849  
	`drm_ps_d©a
(
sbr
->
drm_ps
, 
ld
);

852 
sbr
->
bs_exãnsi⁄_d©a
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 6

853 
	`DEBUGVAR
(1,279,"sbr_single_channel_element(): bs_extension_data"));

856 
	}
}

859 
	$söusoidÆ_codög
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
)

861 
uöt8_t
 
n
;

863 
n
 = 0;Ç < 
sbr
->
N_high
;Ç++)

865 
sbr
->
bs_add_h¨m⁄ic
[
ch
][
n
] = 
	`Áad_gë1bô
(
ld


866 
	`DEBUGVAR
(1,278,"sinusoidal_coding(): bs_add_harmonic"));

868 
	}
}

	@sbr_syntax.h

28 #i‚de‡
__SBR_SYNTAX_H__


29 
	#__SBR_SYNTAX_H__


	)

31 #ifde‡
__˝lu•lus


35 
	~"bôs.h
"

37 
	#T_HFGEN
 8

	)

38 
	#T_HFADJ
 2

	)

40 
	#EXT_SBR_DATA
 13

	)

41 
	#EXT_SBR_DATA_CRC
 14

	)

43 
	#FIXFIX
 0

	)

44 
	#FIXVAR
 1

	)

45 
	#VARFIX
 2

	)

46 
	#VARVAR
 3

	)

48 
	#LO_RES
 0

	)

49 
	#HI_RES
 1

	)

51 
	#NO_TIME_SLOTS_960
 15

	)

52 
	#NO_TIME_SLOTS
 16

	)

53 
	#RATE
 2

	)

55 
	#NOISE_FLOOR_OFFSET
 6

	)

58 
uöt8_t
 
sbr_exãnsi⁄_d©a
(
bôfûe
 *
ld
, 
sbr_öfo
 *
sbr
, 
uöt16_t
 
˙t
);

60 #ifde‡
__˝lu•lus


	@sbr_tf_grid.c

30 
	~"comm⁄.h
"

31 
	~"°ru˘s.h
"

33 #ifde‡
SBR_DEC


35 
	~<°dlib.h
>

37 
	~"sbr_sy¡ax.h
"

38 
	~"sbr_tf_grid.h
"

43 
öt16_t
 
ªl_b‹d_Àad
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
, uöt8_à
l
);

44 
öt16_t
 
ªl_b‹d_åaû
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
, uöt8_à
l
);

46 
uöt8_t
 
middÀB‹dî
(
sbr_öfo
 *
sbr
, uöt8_à
ch
);

51 
uöt8_t
 
	$ívñ›e_time_b‹dî_ve˘‹
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
)

53 
uöt8_t
 
l
, 
b‹dî
, 
ãmp
;

54 
uöt8_t
 
t_E_ãmp
[6] = {0};

56 
t_E_ãmp
[0] = 
sbr
->
øã
 * sbr->
abs_b‹d_Àad
[
ch
];

57 
t_E_ãmp
[
sbr
->
L_E
[
ch
]] = sbr->
øã
 * sbr->
abs_b‹d_åaû
[ch];

59 
sbr
->
bs_‰ame_˛ass
[
ch
])

61 
FIXFIX
:

62 
sbr
->
L_E
[
ch
])

65 
ãmp
 = (Ë(
sbr
->
numTimeSlŸs
 / 4);

66 
t_E_ãmp
[3] = 
sbr
->
øã
 * 3 * 
ãmp
;

67 
t_E_ãmp
[2] = 
sbr
->
øã
 * 2 * 
ãmp
;

68 
t_E_ãmp
[1] = 
sbr
->
øã
 * 
ãmp
;

71 
t_E_ãmp
[1] = 
sbr
->
øã
 * (Ë(sbr->
numTimeSlŸs
 / 2);

78 
FIXVAR
:

79 i‡(
sbr
->
L_E
[
ch
] > 1)

81 
öt8_t
 
i
 = 
sbr
->
L_E
[
ch
];

82 
b‹dî
 = 
sbr
->
abs_b‹d_åaû
[
ch
];

84 
l
 = 0;Ü < (
sbr
->
L_E
[
ch
] - 1);Ü++)

86 i‡(
b‹dî
 < 
sbr
->
bs_ªl_b‹d
[
ch
][
l
])

89 
b‹dî
 -
sbr
->
bs_ªl_b‹d
[
ch
][
l
];

90 
t_E_ãmp
[--
i
] = 
sbr
->
øã
 * 
b‹dî
;

95 
VARFIX
:

96 i‡(
sbr
->
L_E
[
ch
] > 1)

98 
öt8_t
 
i
 = 1;

99 
b‹dî
 = 
sbr
->
abs_b‹d_Àad
[
ch
];

101 
l
 = 0;Ü < (
sbr
->
L_E
[
ch
] - 1);Ü++)

103 
b‹dî
 +
sbr
->
bs_ªl_b‹d
[
ch
][
l
];

105 i‡(
sbr
->
øã
 * 
b‹dî
 + sbr->
tHFAdj
 > sbr->
numTimeSlŸsR©e
+sbr->
tHFGí
)

108 
t_E_ãmp
[
i
++] = 
sbr
->
øã
 * 
b‹dî
;

113 
VARVAR
:

114 i‡(
sbr
->
bs_num_ªl_0
[
ch
])

116 
öt8_t
 
i
 = 1;

117 
b‹dî
 = 
sbr
->
abs_b‹d_Àad
[
ch
];

119 
l
 = 0;Ü < 
sbr
->
bs_num_ªl_0
[
ch
];Ü++)

121 
b‹dî
 +
sbr
->
bs_ªl_b‹d_0
[
ch
][
l
];

123 i‡(
sbr
->
øã
 * 
b‹dî
 + sbr->
tHFAdj
 > sbr->
numTimeSlŸsR©e
+sbr->
tHFGí
)

126 
t_E_ãmp
[
i
++] = 
sbr
->
øã
 * 
b‹dî
;

130 i‡(
sbr
->
bs_num_ªl_1
[
ch
])

132 
öt8_t
 
i
 = 
sbr
->
L_E
[
ch
];

133 
b‹dî
 = 
sbr
->
abs_b‹d_åaû
[
ch
];

135 
l
 = 0;Ü < 
sbr
->
bs_num_ªl_1
[
ch
];Ü++)

137 i‡(
b‹dî
 < 
sbr
->
bs_ªl_b‹d_1
[
ch
][
l
])

140 
b‹dî
 -
sbr
->
bs_ªl_b‹d_1
[
ch
][
l
];

141 
t_E_ãmp
[--
i
] = 
sbr
->
øã
 * 
b‹dî
;

148 
l
 = 0;Ü < 6;Ü++)

150 
sbr
->
t_E
[
ch
][
l
] = 
t_E_ãmp
[l];

154 
	}
}

156 
	$noi£_Êo‹_time_b‹dî_ve˘‹
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
)

158 
sbr
->
t_Q
[
ch
][0] = sbr->
t_E
[ch][0];

160 i‡(
sbr
->
L_E
[
ch
] == 1)

162 
sbr
->
t_Q
[
ch
][1] = sbr->
t_E
[ch][1];

163 
sbr
->
t_Q
[
ch
][2] = 0;

165 
uöt8_t
 
ödex
 = 
	`middÀB‹dî
(
sbr
, 
ch
);

166 
sbr
->
t_Q
[
ch
][1] = sbr->
t_E
[ch][
ödex
];

167 
sbr
->
t_Q
[
ch
][2] = sbr->
t_E
[ch][sbr->
L_E
[ch]];

169 
	}
}

172 
öt16_t
 
	$ªl_b‹d_Àad
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
, uöt8_à
l
)

174 
uöt8_t
 
i
;

175 
öt16_t
 
acc
 = 0;

177 
sbr
->
bs_‰ame_˛ass
[
ch
])

179 
FIXFIX
:

180  
sbr
->
numTimeSlŸs
/sbr->
L_E
[
ch
];

181 
FIXVAR
:

183 
VARFIX
:

184 
i
 = 0; i < 
l
; i++)

186 
acc
 +
sbr
->
bs_ªl_b‹d
[
ch
][
i
];

188  
acc
;

189 
VARVAR
:

190 
i
 = 0; i < 
l
; i++)

192 
acc
 +
sbr
->
bs_ªl_b‹d_0
[
ch
][
i
];

194  
acc
;

198 
	}
}

200 
öt16_t
 
	$ªl_b‹d_åaû
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
, uöt8_à
l
)

202 
uöt8_t
 
i
;

203 
öt16_t
 
acc
 = 0;

205 
sbr
->
bs_‰ame_˛ass
[
ch
])

207 
FIXFIX
:

208 
VARFIX
:

210 
FIXVAR
:

211 
i
 = 0; i < 
l
; i++)

213 
acc
 +
sbr
->
bs_ªl_b‹d
[
ch
][
i
];

215  
acc
;

216 
VARVAR
:

217 
i
 = 0; i < 
l
; i++)

219 
acc
 +
sbr
->
bs_ªl_b‹d_1
[
ch
][
i
];

221  
acc
;

225 
	}
}

228 
uöt8_t
 
	$middÀB‹dî
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
)

230 
öt8_t
 
ªtvÆ
 = 0;

232 
sbr
->
bs_‰ame_˛ass
[
ch
])

234 
FIXFIX
:

235 
ªtvÆ
 = 
sbr
->
L_E
[
ch
]/2;

237 
VARFIX
:

238 i‡(
sbr
->
bs_poöãr
[
ch
] == 0)

239 
ªtvÆ
 = 1;

240 i‡(
sbr
->
bs_poöãr
[
ch
] == 1)

241 
ªtvÆ
 = 
sbr
->
L_E
[
ch
] - 1;

243 
ªtvÆ
 = 
sbr
->
bs_poöãr
[
ch
] - 1;

245 
FIXVAR
:

246 
VARVAR
:

247 i‡(
sbr
->
bs_poöãr
[
ch
] > 1)

248 
ªtvÆ
 = 
sbr
->
L_E
[
ch
] + 1 - sbr->
bs_poöãr
[ch];

250 
ªtvÆ
 = 
sbr
->
L_E
[
ch
] - 1;

254  (
ªtvÆ
 > 0) ?Ñetval : 0;

255 
	}
}

	@sbr_tf_grid.h

28 #i‚de‡
__SBR_TF_GRID_H__


29 
	#__SBR_TF_GRID_H__


	)

31 #ifde‡
__˝lu•lus


36 
uöt8_t
 
ívñ›e_time_b‹dî_ve˘‹
(
sbr_öfo
 *
sbr
, uöt8_à
ch
);

37 
noi£_Êo‹_time_b‹dî_ve˘‹
(
sbr_öfo
 *
sbr
, 
uöt8_t
 
ch
);

40 #ifde‡
__˝lu•lus


	@sine_win.h

28 #i‚de‡
__SINE_WIN_H__


29 
	#__SINE_WIN_H__


	)

31 #ifde‡
__˝lu•lus


35 #ifde‡
_MSC_VER


36 #¥agm®
w¨nög
(
dißbÀ
:4305)

37 #¥agm®
w¨nög
(
dißbÀ
:4244)

40 
ALIGN
 c⁄° 
ªÆ_t
 
söe_l⁄g_1024
[] =

42 
FRAC_CONST
(0.00076699031874270449),

43 
FRAC_CONST
(0.002300969151425805),

44 
FRAC_CONST
(0.0038349425697062275),

45 
FRAC_CONST
(0.0053689069639963425),

46 
FRAC_CONST
(0.0069028587247297558),

47 
FRAC_CONST
(0.0084367942423697988),

48 
FRAC_CONST
(0.0099707099074180308),

49 
FRAC_CONST
(0.011504602110422714),

50 
FRAC_CONST
(0.013038467241987334),

51 
FRAC_CONST
(0.014572301692779064),

52 
FRAC_CONST
(0.016106101853537287),

53 
FRAC_CONST
(0.017639864115082053),

54 
FRAC_CONST
(0.019173584868322623),

55 
FRAC_CONST
(0.020707260504265895),

56 
FRAC_CONST
(0.022240887414024961),

57 
FRAC_CONST
(0.023774461988827555),

58 
FRAC_CONST
(0.025307980620024571),

59 
FRAC_CONST
(0.026841439699098531),

60 
FRAC_CONST
(0.028374835617672099),

61 
FRAC_CONST
(0.029908164767516555),

62 
FRAC_CONST
(0.031441423540560301),

63 
FRAC_CONST
(0.032974608328897335),

64 
FRAC_CONST
(0.03450771552479575),

65 
FRAC_CONST
(0.036040741520706229),

66 
FRAC_CONST
(0.037573682709270494),

67 
FRAC_CONST
(0.039106535483329888),

68 
FRAC_CONST
(0.040639296235933736),

69 
FRAC_CONST
(0.042171961360347947),

70 
FRAC_CONST
(0.043704527250063421),

71 
FRAC_CONST
(0.04523699029880459),

72 
FRAC_CONST
(0.046769346900537863),

73 
FRAC_CONST
(0.048301593449480144),

74 
FRAC_CONST
(0.049833726340107277),

75 
FRAC_CONST
(0.051365741967162593),

76 
FRAC_CONST
(0.052897636725665324),

77 
FRAC_CONST
(0.054429407010919133),

78 
FRAC_CONST
(0.055961049218520569),

79 
FRAC_CONST
(0.057492559744367566),

80 
FRAC_CONST
(0.059023934984667931),

81 
FRAC_CONST
(0.060555171335947788),

82 
FRAC_CONST
(0.062086265195060088),

83 
FRAC_CONST
(0.063617212959193106),

84 
FRAC_CONST
(0.065148011025878833),

85 
FRAC_CONST
(0.066678655793001557),

86 
FRAC_CONST
(0.068209143658806329),

87 
FRAC_CONST
(0.069739471021907307),

88 
FRAC_CONST
(0.071269634281296401),

89 
FRAC_CONST
(0.072799629836351673),

90 
FRAC_CONST
(0.074329454086845756),

91 
FRAC_CONST
(0.075859103432954447),

92 
FRAC_CONST
(0.077388574275265049),

93 
FRAC_CONST
(0.078917863014784942),

94 
FRAC_CONST
(0.080446966052950014),

95 
FRAC_CONST
(0.081975879791633066),

96 
FRAC_CONST
(0.083504600633152432),

97 
FRAC_CONST
(0.085033124980280275),

98 
FRAC_CONST
(0.08656144923625117),

99 
FRAC_CONST
(0.088089569804770507),

100 
FRAC_CONST
(0.089617483090022959),

101 
FRAC_CONST
(0.091145185496681005),

102 
FRAC_CONST
(0.09267267342991331),

103 
FRAC_CONST
(0.094199943295393204),

104 
FRAC_CONST
(0.095726991499307162),

105 
FRAC_CONST
(0.097253814448363271),

106 
FRAC_CONST
(0.098780408549799623),

107 
FRAC_CONST
(0.10030677021139286),

108 
FRAC_CONST
(0.10183289584146653),

109 
FRAC_CONST
(0.10335878184889961),

110 
FRAC_CONST
(0.10488442464313497),

111 
FRAC_CONST
(0.10640982063418768),

112 
FRAC_CONST
(0.10793496623265365),

113 
FRAC_CONST
(0.10945985784971798),

114 
FRAC_CONST
(0.11098449189716339),

115 
FRAC_CONST
(0.11250886478737869),

116 
FRAC_CONST
(0.1140329729333672),

117 
FRAC_CONST
(0.11555681274875526),

118 
FRAC_CONST
(0.11708038064780059),

119 
FRAC_CONST
(0.11860367304540072),

120 
FRAC_CONST
(0.1201266863571015),

121 
FRAC_CONST
(0.12164941699910553),

122 
FRAC_CONST
(0.12317186138828048),

123 
FRAC_CONST
(0.12469401594216764),

124 
FRAC_CONST
(0.12621587707899035),

125 
FRAC_CONST
(0.12773744121766231),

126 
FRAC_CONST
(0.12925870477779614),

127 
FRAC_CONST
(0.13077966417971171),

128 
FRAC_CONST
(0.13230031584444465),

129 
FRAC_CONST
(0.13382065619375472),

130 
FRAC_CONST
(0.13534068165013421),

131 
FRAC_CONST
(0.13686038863681638),

132 
FRAC_CONST
(0.13837977357778389),

133 
FRAC_CONST
(0.13989883289777721),

134 
FRAC_CONST
(0.14141756302230302),

135 
FRAC_CONST
(0.14293596037764267),

136 
FRAC_CONST
(0.14445402139086047),

137 
FRAC_CONST
(0.14597174248981221),

138 
FRAC_CONST
(0.14748912010315357),

139 
FRAC_CONST
(0.14900615066034845),

140 
FRAC_CONST
(0.1505228305916774),

141 
FRAC_CONST
(0.15203915632824605),

142 
FRAC_CONST
(0.15355512430199345),

143 
FRAC_CONST
(0.15507073094570051),

144 
FRAC_CONST
(0.15658597269299843),

145 
FRAC_CONST
(0.15810084597837698),

146 
FRAC_CONST
(0.15961534723719306),

147 
FRAC_CONST
(0.16112947290567881),

148 
FRAC_CONST
(0.16264321942095031),

149 
FRAC_CONST
(0.16415658322101581),

150 
FRAC_CONST
(0.16566956074478412),

151 
FRAC_CONST
(0.16718214843207294),

152 
FRAC_CONST
(0.16869434272361733),

153 
FRAC_CONST
(0.17020614006107807),

154 
FRAC_CONST
(0.17171753688704997),

155 
FRAC_CONST
(0.17322852964507032),

156 
FRAC_CONST
(0.1747391147796272),

157 
FRAC_CONST
(0.17624928873616788),

158 
FRAC_CONST
(0.17775904796110717),

159 
FRAC_CONST
(0.17926838890183575),

160 
FRAC_CONST
(0.18077730800672859),

161 
FRAC_CONST
(0.1822858017251533),

162 
FRAC_CONST
(0.18379386650747845),

163 
FRAC_CONST
(0.1853014988050819),

164 
FRAC_CONST
(0.18680869507035927),

165 
FRAC_CONST
(0.18831545175673212),

166 
FRAC_CONST
(0.18982176531865641),

167 
FRAC_CONST
(0.1913276322116309),

168 
FRAC_CONST
(0.19283304889220523),

169 
FRAC_CONST
(0.1943380118179886),

170 
FRAC_CONST
(0.19584251744765785),

171 
FRAC_CONST
(0.19734656224096592),

172 
FRAC_CONST
(0.19885014265875009),

173 
FRAC_CONST
(0.20035325516294045),

174 
FRAC_CONST
(0.20185589621656805),

175 
FRAC_CONST
(0.20335806228377332),

176 
FRAC_CONST
(0.20485974982981442),

177 
FRAC_CONST
(0.20636095532107551),

178 
FRAC_CONST
(0.20786167522507507),

179 
FRAC_CONST
(0.20936190601047416),

180 
FRAC_CONST
(0.21086164414708486),

181 
FRAC_CONST
(0.21236088610587842),

182 
FRAC_CONST
(0.21385962835899375),

183 
FRAC_CONST
(0.21535786737974555),

184 
FRAC_CONST
(0.21685559964263262),

185 
FRAC_CONST
(0.21835282162334632),

186 
FRAC_CONST
(0.2198495297987787),

187 
FRAC_CONST
(0.22134572064703081),

188 
FRAC_CONST
(0.22284139064742112),

189 
FRAC_CONST
(0.2243365362804936),

190 
FRAC_CONST
(0.22583115402802617),

191 
FRAC_CONST
(0.22732524037303886),

192 
FRAC_CONST
(0.22881879179980222),

193 
FRAC_CONST
(0.23031180479384544),

194 
FRAC_CONST
(0.23180427584196478),

195 
FRAC_CONST
(0.23329620143223159),

196 
FRAC_CONST
(0.23478757805400097),

197 
FRAC_CONST
(0.23627840219791957),

198 
FRAC_CONST
(0.23776867035593419),

199 
FRAC_CONST
(0.23925837902129998),

200 
FRAC_CONST
(0.24074752468858843),

201 
FRAC_CONST
(0.24223610385369601),

202 
FRAC_CONST
(0.24372411301385216),

203 
FRAC_CONST
(0.24521154866762754),

204 
FRAC_CONST
(0.24669840731494241),

205 
FRAC_CONST
(0.24818468545707478),

206 
FRAC_CONST
(0.24967037959666857),

207 
FRAC_CONST
(0.25115548623774192),

208 
FRAC_CONST
(0.25264000188569552),

209 
FRAC_CONST
(0.25412392304732062),

210 
FRAC_CONST
(0.25560724623080738),

211 
FRAC_CONST
(0.25708996794575312),

212 
FRAC_CONST
(0.25857208470317034),

213 
FRAC_CONST
(0.26005359301549519),

214 
FRAC_CONST
(0.26153448939659552),

215 
FRAC_CONST
(0.263014770361779),

216 
FRAC_CONST
(0.26449443242780163),

217 
FRAC_CONST
(0.26597347211287559),

218 
FRAC_CONST
(0.26745188593667762),

219 
FRAC_CONST
(0.26892967042035726),

220 
FRAC_CONST
(0.27040682208654482),

221 
FRAC_CONST
(0.27188333745935972),

222 
FRAC_CONST
(0.27335921306441868),

223 
FRAC_CONST
(0.27483444542884394),

224 
FRAC_CONST
(0.27630903108127108),

225 
FRAC_CONST
(0.27778296655185769),

226 
FRAC_CONST
(0.27925624837229118),

227 
FRAC_CONST
(0.28072887307579719),

228 
FRAC_CONST
(0.28220083719714756),

229 
FRAC_CONST
(0.28367213727266843),

230 
FRAC_CONST
(0.28514276984024867),

231 
FRAC_CONST
(0.28661273143934779),

232 
FRAC_CONST
(0.28808201861100413),

233 
FRAC_CONST
(0.28955062789784303),

234 
FRAC_CONST
(0.29101855584408509),

235 
FRAC_CONST
(0.29248579899555388),

236 
FRAC_CONST
(0.29395235389968466),

237 
FRAC_CONST
(0.29541821710553201),

238 
FRAC_CONST
(0.29688338516377827),

239 
FRAC_CONST
(0.2983478546267414),

240 
FRAC_CONST
(0.29981162204838335),

241 
FRAC_CONST
(0.30127468398431795),

242 
FRAC_CONST
(0.30273703699181914),

243 
FRAC_CONST
(0.30419867762982911),

244 
FRAC_CONST
(0.30565960245896612),

245 
FRAC_CONST
(0.3071198080415331),

246 
FRAC_CONST
(0.30857929094152509),

247 
FRAC_CONST
(0.31003804772463789),

248 
FRAC_CONST
(0.31149607495827591),

249 
FRAC_CONST
(0.3129533692115602),

250 
FRAC_CONST
(0.31440992705533666),

251 
FRAC_CONST
(0.31586574506218396),

252 
FRAC_CONST
(0.31732081980642174),

253 
FRAC_CONST
(0.31877514786411848),

254 
FRAC_CONST
(0.32022872581309986),

255 
FRAC_CONST
(0.32168155023295658),

256 
FRAC_CONST
(0.32313361770505233),

257 
FRAC_CONST
(0.32458492481253215),

258 
FRAC_CONST
(0.32603546814033024),

259 
FRAC_CONST
(0.327485244275178),

260 
FRAC_CONST
(0.3289342498056122),

261 
FRAC_CONST
(0.33038248132198278),

262 
FRAC_CONST
(0.33182993541646111),

263 
FRAC_CONST
(0.33327660868304793),

264 
FRAC_CONST
(0.33472249771758122),

265 
FRAC_CONST
(0.33616759911774452),

266 
FRAC_CONST
(0.33761190948307462),

267 
FRAC_CONST
(0.33905542541496964),

268 
FRAC_CONST
(0.34049814351669716),

269 
FRAC_CONST
(0.34194006039340219),

270 
FRAC_CONST
(0.34338117265211504),

271 
FRAC_CONST
(0.34482147690175929),

272 
FRAC_CONST
(0.34626096975316001),

273 
FRAC_CONST
(0.34769964781905138),

274 
FRAC_CONST
(0.34913750771408497),

275 
FRAC_CONST
(0.35057454605483751),

276 
FRAC_CONST
(0.35201075945981908),

277 
FRAC_CONST
(0.35344614454948081),

278 
FRAC_CONST
(0.35488069794622279),

279 
FRAC_CONST
(0.35631441627440241),

280 
FRAC_CONST
(0.3577472961603419),

281 
FRAC_CONST
(0.3591793342323365),

282 
FRAC_CONST
(0.36061052712066227),

283 
FRAC_CONST
(0.36204087145758418),

284 
FRAC_CONST
(0.36347036387736376),

285 
FRAC_CONST
(0.36489900101626732),

286 
FRAC_CONST
(0.36632677951257359),

287 
FRAC_CONST
(0.36775369600658198),

288 
FRAC_CONST
(0.36917974714062002),

289 
FRAC_CONST
(0.37060492955905167),

290 
FRAC_CONST
(0.37202923990828501),

291 
FRAC_CONST
(0.3734526748367803),

292 
FRAC_CONST
(0.37487523099505754),

293 
FRAC_CONST
(0.37629690503570479),

294 
FRAC_CONST
(0.37771769361338564),

295 
FRAC_CONST
(0.37913759338484732),

296 
FRAC_CONST
(0.38055660100892852),

297 
FRAC_CONST
(0.38197471314656722),

298 
FRAC_CONST
(0.38339192646080866),

299 
FRAC_CONST
(0.38480823761681288),

300 
FRAC_CONST
(0.38622364328186298),

301 
FRAC_CONST
(0.38763814012537273),

302 
FRAC_CONST
(0.38905172481889438),

303 
FRAC_CONST
(0.39046439403612659),

304 
FRAC_CONST
(0.39187614445292235),

305 
FRAC_CONST
(0.3932869727472964),

306 
FRAC_CONST
(0.39469687559943356),

307 
FRAC_CONST
(0.39610584969169627),

308 
FRAC_CONST
(0.39751389170863233),

309 
FRAC_CONST
(0.39892099833698291),

310 
FRAC_CONST
(0.40032716626569009),

311 
FRAC_CONST
(0.40173239218590501),

312 
FRAC_CONST
(0.4031366727909953),

313 
FRAC_CONST
(0.404540004776553),

314 
FRAC_CONST
(0.40594238484040251),

315 
FRAC_CONST
(0.40734380968260797),

316 
FRAC_CONST
(0.40874427600548136),

317 
FRAC_CONST
(0.41014378051359024),

318 
FRAC_CONST
(0.41154231991376522),

319 
FRAC_CONST
(0.41293989091510808),

320 
FRAC_CONST
(0.4143364902289991),

321 
FRAC_CONST
(0.41573211456910536),

322 
FRAC_CONST
(0.41712676065138787),

323 
FRAC_CONST
(0.4185204251941097),

324 
FRAC_CONST
(0.41991310491784362),

325 
FRAC_CONST
(0.42130479654547964),

326 
FRAC_CONST
(0.42269549680223295),

327 
FRAC_CONST
(0.42408520241565156),

328 
FRAC_CONST
(0.4254739101156238),

329 
FRAC_CONST
(0.42686161663438643),

330 
FRAC_CONST
(0.42824831870653196),

331 
FRAC_CONST
(0.42963401306901638),

332 
FRAC_CONST
(0.43101869646116703),

333 
FRAC_CONST
(0.43240236562469014),

334 
FRAC_CONST
(0.43378501730367852),

335 
FRAC_CONST
(0.43516664824461926),

336 
FRAC_CONST
(0.4365472551964012),

337 
FRAC_CONST
(0.43792683491032286),

338 
FRAC_CONST
(0.43930538414009995),

339 
FRAC_CONST
(0.4406828996418729),

340 
FRAC_CONST
(0.4420593781742147),

341 
FRAC_CONST
(0.44343481649813848),

342 
FRAC_CONST
(0.44480921137710488),

343 
FRAC_CONST
(0.44618255957703007),

344 
FRAC_CONST
(0.44755485786629301),

345 
FRAC_CONST
(0.44892610301574326),

346 
FRAC_CONST
(0.45029629179870861),

347 
FRAC_CONST
(0.45166542099100249),

348 
FRAC_CONST
(0.45303348737093158),

349 
FRAC_CONST
(0.45440048771930358),

350 
FRAC_CONST
(0.45576641881943464),

351 
FRAC_CONST
(0.45713127745715698),

352 
FRAC_CONST
(0.45849506042082627),

353 
FRAC_CONST
(0.45985776450132954),

354 
FRAC_CONST
(0.46121938649209238),

355 
FRAC_CONST
(0.46257992318908681),

356 
FRAC_CONST
(0.46393937139083852),

357 
FRAC_CONST
(0.4652977278984346),

358 
FRAC_CONST
(0.46665498951553092),

359 
FRAC_CONST
(0.46801115304835983),

360 
FRAC_CONST
(0.46936621530573752),

361 
FRAC_CONST
(0.4707201730990716),

362 
FRAC_CONST
(0.47207302324236866),

363 
FRAC_CONST
(0.47342476255224153),

364 
FRAC_CONST
(0.47477538784791712),

365 
FRAC_CONST
(0.47612489595124358),

366 
FRAC_CONST
(0.47747328368669806),

367 
FRAC_CONST
(0.47882054788139389),

368 
FRAC_CONST
(0.48016668536508839),

369 
FRAC_CONST
(0.48151169297018986),

370 
FRAC_CONST
(0.48285556753176567),

371 
FRAC_CONST
(0.48419830588754903),

372 
FRAC_CONST
(0.48553990487794696),

373 
FRAC_CONST
(0.48688036134604734),

374 
FRAC_CONST
(0.48821967213762679),

375 
FRAC_CONST
(0.48955783410115744),

376 
FRAC_CONST
(0.49089484408781509),

377 
FRAC_CONST
(0.49223069895148602),

378 
FRAC_CONST
(0.49356539554877477),

379 
FRAC_CONST
(0.49489893073901126),

380 
FRAC_CONST
(0.49623130138425825),

381 
FRAC_CONST
(0.49756250434931915),

382 
FRAC_CONST
(0.49889253650174459),

383 
FRAC_CONST
(0.50022139471184068),

384 
FRAC_CONST
(0.50154907585267539),

385 
FRAC_CONST
(0.50287557680008699),

386 
FRAC_CONST
(0.50420089443269034),

387 
FRAC_CONST
(0.50552502563188539),

388 
FRAC_CONST
(0.50684796728186321),

389 
FRAC_CONST
(0.5081697162696146),

390 
FRAC_CONST
(0.50949026948493636),

391 
FRAC_CONST
(0.51080962382043904),

392 
FRAC_CONST
(0.51212777617155469),

393 
FRAC_CONST
(0.51344472343654346),

394 
FRAC_CONST
(0.5147604625165012),

395 
FRAC_CONST
(0.51607499031536663),

396 
FRAC_CONST
(0.51738830373992906),

397 
FRAC_CONST
(0.51870039969983495),

398 
FRAC_CONST
(0.52001127510759604),

399 
FRAC_CONST
(0.52132092687859566),

400 
FRAC_CONST
(0.52262935193109661),

401 
FRAC_CONST
(0.5239365471862486),

402 
FRAC_CONST
(0.52524250956809471),

403 
FRAC_CONST
(0.52654723600357944),

404 
FRAC_CONST
(0.52785072342255523),

405 
FRAC_CONST
(0.52915296875779061),

406 
FRAC_CONST
(0.53045396894497632),

407 
FRAC_CONST
(0.53175372092273332),

408 
FRAC_CONST
(0.53305222163261945),

409 
FRAC_CONST
(0.53434946801913752),

410 
FRAC_CONST
(0.53564545702974109),

411 
FRAC_CONST
(0.53694018561484291),

412 
FRAC_CONST
(0.5382336507278217),

413 
FRAC_CONST
(0.53952584932502889),

414 
FRAC_CONST
(0.54081677836579667),

415 
FRAC_CONST
(0.54210643481244392),

416 
FRAC_CONST
(0.5433948156302848),

417 
FRAC_CONST
(0.54468191778763453),

418 
FRAC_CONST
(0.54596773825581757),

419 
FRAC_CONST
(0.54725227400917409),

420 
FRAC_CONST
(0.54853552202506739),

421 
FRAC_CONST
(0.54981747928389091),

422 
FRAC_CONST
(0.55109814276907543),

423 
FRAC_CONST
(0.55237750946709607),

424 
FRAC_CONST
(0.55365557636747931),

425 
FRAC_CONST
(0.55493234046281037),

426 
FRAC_CONST
(0.55620779874873993),

427 
FRAC_CONST
(0.55748194822399155),

428 
FRAC_CONST
(0.55875478589036831),

429 
FRAC_CONST
(0.56002630875276038),

430 
FRAC_CONST
(0.56129651381915147),

431 
FRAC_CONST
(0.56256539810062656),

432 
FRAC_CONST
(0.56383295861137817),

433 
FRAC_CONST
(0.56509919236871398),

434 
FRAC_CONST
(0.56636409639306384),

435 
FRAC_CONST
(0.56762766770798623),

436 
FRAC_CONST
(0.56888990334017586),

437 
FRAC_CONST
(0.5701508003194703),

438 
FRAC_CONST
(0.57141035567885723),

439 
FRAC_CONST
(0.57266856645448116),

440 
FRAC_CONST
(0.57392542968565075),

441 
FRAC_CONST
(0.57518094241484508),

442 
FRAC_CONST
(0.57643510168772183),

443 
FRAC_CONST
(0.5776879045531228),

444 
FRAC_CONST
(0.57893934806308178),

445 
FRAC_CONST
(0.58018942927283168),

446 
FRAC_CONST
(0.58143814524081017),

447 
FRAC_CONST
(0.58268549302866846),

448 
FRAC_CONST
(0.58393146970127618),

449 
FRAC_CONST
(0.58517607232673041),

450 
FRAC_CONST
(0.5864192979763605),

451 
FRAC_CONST
(0.58766114372473666),

452 
FRAC_CONST
(0.58890160664967572),

453 
FRAC_CONST
(0.59014068383224882),

454 
FRAC_CONST
(0.59137837235678758),

455 
FRAC_CONST
(0.59261466931089113),

456 
FRAC_CONST
(0.59384957178543363),

457 
FRAC_CONST
(0.59508307687456996),

458 
FRAC_CONST
(0.59631518167574371),

459 
FRAC_CONST
(0.59754588328969316),

460 
FRAC_CONST
(0.59877517882045872),

461 
FRAC_CONST
(0.60000306537538894),

462 
FRAC_CONST
(0.6012295400651485),

463 
FRAC_CONST
(0.60245460000372375),

464 
FRAC_CONST
(0.60367824230843037),

465 
FRAC_CONST
(0.60490046409991982),

466 
FRAC_CONST
(0.60612126250218612),

467 
FRAC_CONST
(0.60734063464257293),

468 
FRAC_CONST
(0.60855857765177945),

469 
FRAC_CONST
(0.60977508866386843),

470 
FRAC_CONST
(0.61099016481627166),

471 
FRAC_CONST
(0.61220380324979795),

472 
FRAC_CONST
(0.61341600110863859),

473 
FRAC_CONST
(0.61462675554037505),

474 
FRAC_CONST
(0.61583606369598509),

475 
FRAC_CONST
(0.61704392272984976),

476 
FRAC_CONST
(0.61825032979976025),

477 
FRAC_CONST
(0.61945528206692402),

478 
FRAC_CONST
(0.62065877669597214),

479 
FRAC_CONST
(0.62186081085496536),

480 
FRAC_CONST
(0.62306138171540126),

481 
FRAC_CONST
(0.62426048645222065),

482 
FRAC_CONST
(0.62545812224381436),

483 
FRAC_CONST
(0.62665428627202935),

484 
FRAC_CONST
(0.62784897572217646),

485 
FRAC_CONST
(0.629042187783036),

486 
FRAC_CONST
(0.63023391964686437),

487 
FRAC_CONST
(0.63142416850940186),

488 
FRAC_CONST
(0.63261293156987741),

489 
FRAC_CONST
(0.63380020603101728),

490 
FRAC_CONST
(0.63498598909904946),

491 
FRAC_CONST
(0.63617027798371217),

492 
FRAC_CONST
(0.63735306989825913),

493 
FRAC_CONST
(0.63853436205946679),

494 
FRAC_CONST
(0.63971415168764045),

495 
FRAC_CONST
(0.64089243600662138),

496 
FRAC_CONST
(0.64206921224379254),

497 
FRAC_CONST
(0.64324447763008585),

498 
FRAC_CONST
(0.64441822939998838),

499 
FRAC_CONST
(0.64559046479154869),

500 
FRAC_CONST
(0.64676118104638392),

501 
FRAC_CONST
(0.64793037540968534),

502 
FRAC_CONST
(0.64909804513022595),

503 
FRAC_CONST
(0.65026418746036585),

504 
FRAC_CONST
(0.65142879965605982),

505 
FRAC_CONST
(0.65259187897686244),

506 
FRAC_CONST
(0.65375342268593606),

507 
FRAC_CONST
(0.65491342805005603),

508 
FRAC_CONST
(0.6560718923396176),

509 
FRAC_CONST
(0.65722881282864254),

510 
FRAC_CONST
(0.65838418679478505),

511 
FRAC_CONST
(0.65953801151933866),

512 
FRAC_CONST
(0.6606902842872423),

513 
FRAC_CONST
(0.66184100238708687),

514 
FRAC_CONST
(0.66299016311112147),

515 
FRAC_CONST
(0.66413776375526001),

516 
FRAC_CONST
(0.66528380161908718),

517 
FRAC_CONST
(0.66642827400586524),

518 
FRAC_CONST
(0.66757117822254031),

519 
FRAC_CONST
(0.66871251157974798),

520 
FRAC_CONST
(0.66985227139182102),

521 
FRAC_CONST
(0.67099045497679422),

522 
FRAC_CONST
(0.67212705965641173),

523 
FRAC_CONST
(0.67326208275613297),

524 
FRAC_CONST
(0.67439552160513905),

525 
FRAC_CONST
(0.67552737353633852),

526 
FRAC_CONST
(0.67665763588637495),

527 
FRAC_CONST
(0.6777863059956315),

528 
FRAC_CONST
(0.67891338120823841),

529 
FRAC_CONST
(0.68003885887207893),

530 
FRAC_CONST
(0.68116273633879543),

531 
FRAC_CONST
(0.68228501096379557),

532 
FRAC_CONST
(0.68340568010625868),

533 
FRAC_CONST
(0.6845247411291423),

534 
FRAC_CONST
(0.68564219139918747),

535 
FRAC_CONST
(0.68675802828692589),

536 
FRAC_CONST
(0.68787224916668555),

537 
FRAC_CONST
(0.68898485141659704),

538 
FRAC_CONST
(0.69009583241859995),

539 
FRAC_CONST
(0.69120518955844845),

540 
FRAC_CONST
(0.69231292022571822),

541 
FRAC_CONST
(0.69341902181381176),

542 
FRAC_CONST
(0.69452349171996552),

543 
FRAC_CONST
(0.69562632734525487),

544 
FRAC_CONST
(0.6967275260946012),

545 
FRAC_CONST
(0.69782708537677729),

546 
FRAC_CONST
(0.69892500260441415),

547 
FRAC_CONST
(0.70002127519400625),

548 
FRAC_CONST
(0.70111590056591866),

549 
FRAC_CONST
(0.70220887614439187),

550 
FRAC_CONST
(0.70330019935754873),

551 
FRAC_CONST
(0.70438986763740041),

552 
FRAC_CONST
(0.7054778784198521),

553 
FRAC_CONST
(0.70656422914470951),

554 
FRAC_CONST
(0.70764891725568435),

555 
FRAC_CONST
(0.70873194020040065),

556 
FRAC_CONST
(0.70981329543040084),

557 
FRAC_CONST
(0.71089298040115168),

558 
FRAC_CONST
(0.71197099257204999),

559 
FRAC_CONST
(0.71304732940642923),

560 
FRAC_CONST
(0.71412198837156471),

561 
FRAC_CONST
(0.71519496693868001),

562 
FRAC_CONST
(0.71626626258295312),

563 
FRAC_CONST
(0.71733587278352173),

564 
FRAC_CONST
(0.71840379502348972),

565 
FRAC_CONST
(0.71947002678993299),

566 
FRAC_CONST
(0.72053456557390527),

567 
FRAC_CONST
(0.72159740887044366),

568 
FRAC_CONST
(0.72265855417857561),

569 
FRAC_CONST
(0.72371799900132339),

570 
FRAC_CONST
(0.72477574084571128),

571 
FRAC_CONST
(0.72583177722277037),

572 
FRAC_CONST
(0.72688610564754497),

573 
FRAC_CONST
(0.72793872363909862),

574 
FRAC_CONST
(0.72898962872051931),

575 
FRAC_CONST
(0.73003881841892615),

576 
FRAC_CONST
(0.73108629026547423),

577 
FRAC_CONST
(0.73213204179536129),

578 
FRAC_CONST
(0.73317607054783274),

579 
FRAC_CONST
(0.73421837406618817),

580 
FRAC_CONST
(0.73525894989778673),

581 
FRAC_CONST
(0.73629779559405306),

582 
FRAC_CONST
(0.73733490871048279),

583 
FRAC_CONST
(0.73837028680664851),

584 
FRAC_CONST
(0.73940392744620576),

585 
FRAC_CONST
(0.74043582819689802),

586 
FRAC_CONST
(0.74146598663056329),

587 
FRAC_CONST
(0.74249440032313918),

588 
FRAC_CONST
(0.74352106685466912),

589 
FRAC_CONST
(0.74454598380930725),

590 
FRAC_CONST
(0.74556914877532543),

591 
FRAC_CONST
(0.74659055934511731),

592 
FRAC_CONST
(0.74761021311520515),

593 
FRAC_CONST
(0.74862810768624533),

594 
FRAC_CONST
(0.74964424066303348),

595 
FRAC_CONST
(0.75065860965451059),

596 
FRAC_CONST
(0.75167121227376843),

597 
FRAC_CONST
(0.75268204613805523),

598 
FRAC_CONST
(0.75369110886878121),

599 
FRAC_CONST
(0.75469839809152439),

600 
FRAC_CONST
(0.75570391143603588),

601 
FRAC_CONST
(0.75670764653624567),

602 
FRAC_CONST
(0.75770960103026808),

603 
FRAC_CONST
(0.75870977256040739),

604 
FRAC_CONST
(0.75970815877316344),

605 
FRAC_CONST
(0.76070475731923692),

606 
FRAC_CONST
(0.76169956585353527),

607 
FRAC_CONST
(0.76269258203517787),

608 
FRAC_CONST
(0.76368380352750187),

609 
FRAC_CONST
(0.76467322799806714),

610 
FRAC_CONST
(0.76566085311866239),

611 
FRAC_CONST
(0.76664667656531038),

612 
FRAC_CONST
(0.76763069601827327),

613 
FRAC_CONST
(0.76861290916205827),

614 
FRAC_CONST
(0.76959331368542294),

615 
FRAC_CONST
(0.7705719072813807),

616 
FRAC_CONST
(0.7715486876472063),

617 
FRAC_CONST
(0.77252365248444133),

618 
FRAC_CONST
(0.77349679949889905),

619 
FRAC_CONST
(0.77446812640067086),

620 
FRAC_CONST
(0.77543763090413043),

621 
FRAC_CONST
(0.77640531072794039),

622 
FRAC_CONST
(0.7773711635950562),

623 
FRAC_CONST
(0.77833518723273309),

624 
FRAC_CONST
(0.7792973793725303),

625 
FRAC_CONST
(0.78025773775031659),

626 
FRAC_CONST
(0.78121626010627609),

627 
FRAC_CONST
(0.7821729441849129),

628 
FRAC_CONST
(0.78312778773505731),

629 
FRAC_CONST
(0.78408078850986995),

630 
FRAC_CONST
(0.78503194426684808),

631 
FRAC_CONST
(0.78598125276783015),

632 
FRAC_CONST
(0.7869287117790017),

633 
FRAC_CONST
(0.78787431907090011),

634 
FRAC_CONST
(0.78881807241842017),

635 
FRAC_CONST
(0.78975996960081907),

636 
FRAC_CONST
(0.79070000840172161),

637 
FRAC_CONST
(0.79163818660912577),

638 
FRAC_CONST
(0.79257450201540758),

639 
FRAC_CONST
(0.79350895241732666),

640 
FRAC_CONST
(0.79444153561603059),

641 
FRAC_CONST
(0.79537224941706119),

642 
FRAC_CONST
(0.79630109163035911),

643 
FRAC_CONST
(0.7972280600702687),

644 
FRAC_CONST
(0.79815315255554375),

645 
FRAC_CONST
(0.79907636690935235),

646 
FRAC_CONST
(0.79999770095928191),

647 
FRAC_CONST
(0.8009171525373443),

648 
FRAC_CONST
(0.80183471947998131),

649 
FRAC_CONST
(0.80275039962806916),

650 
FRAC_CONST
(0.80366419082692409),

651 
FRAC_CONST
(0.804576090926307),

652 
FRAC_CONST
(0.80548609778042912),

653 
FRAC_CONST
(0.80639420924795624),

654 
FRAC_CONST
(0.80730042319201445),

655 
FRAC_CONST
(0.80820473748019472),

656 
FRAC_CONST
(0.80910714998455813),

657 
FRAC_CONST
(0.81000765858164114),

658 
FRAC_CONST
(0.81090626115245967),

659 
FRAC_CONST
(0.81180295558251536),

660 
FRAC_CONST
(0.81269773976179949),

661 
FRAC_CONST
(0.81359061158479851),

662 
FRAC_CONST
(0.81448156895049861),

663 
FRAC_CONST
(0.81537060976239129),

664 
FRAC_CONST
(0.81625773192847739),

665 
FRAC_CONST
(0.81714293336127297),

666 
FRAC_CONST
(0.81802621197781344),

667 
FRAC_CONST
(0.81890756569965895),

668 
FRAC_CONST
(0.81978699245289899),

669 
FRAC_CONST
(0.82066449016815746),

670 
FRAC_CONST
(0.82154005678059761),

671 
FRAC_CONST
(0.82241369022992639),

672 
FRAC_CONST
(0.82328538846040011),

673 
FRAC_CONST
(0.82415514942082857),

674 
FRAC_CONST
(0.82502297106458022),

675 
FRAC_CONST
(0.82588885134958678),

676 
FRAC_CONST
(0.82675278823834852),

677 
FRAC_CONST
(0.8276147796979384),

678 
FRAC_CONST
(0.82847482370000713),

679 
FRAC_CONST
(0.82933291822078825),

680 
FRAC_CONST
(0.83018906124110237),

681 
FRAC_CONST
(0.83104325074636232),

682 
FRAC_CONST
(0.83189548472657759),

683 
FRAC_CONST
(0.83274576117635946),

684 
FRAC_CONST
(0.83359407809492514),

685 
FRAC_CONST
(0.83444043348610319),

686 
FRAC_CONST
(0.83528482535833737),

687 
FRAC_CONST
(0.83612725172469216),

688 
FRAC_CONST
(0.83696771060285702),

689 
FRAC_CONST
(0.83780620001515094),

690 
FRAC_CONST
(0.8386427179885273),

691 
FRAC_CONST
(0.83947726255457855),

692 
FRAC_CONST
(0.84030983174954077),

693 
FRAC_CONST
(0.84114042361429808),

694 
FRAC_CONST
(0.84196903619438768),

695 
FRAC_CONST
(0.84279566754000412),

696 
FRAC_CONST
(0.84362031570600404),

697 
FRAC_CONST
(0.84444297875191066),

698 
FRAC_CONST
(0.84526365474191822),

699 
FRAC_CONST
(0.84608234174489694),

700 
FRAC_CONST
(0.84689903783439735),

701 
FRAC_CONST
(0.84771374108865427),

702 
FRAC_CONST
(0.84852644959059265),

703 
FRAC_CONST
(0.84933716142783067),

704 
FRAC_CONST
(0.85014587469268521),

705 
FRAC_CONST
(0.85095258748217573),

706 
FRAC_CONST
(0.85175729789802912),

707 
FRAC_CONST
(0.85256000404668397),

708 
FRAC_CONST
(0.85336070403929543),

709 
FRAC_CONST
(0.85415939599173873),

710 
FRAC_CONST
(0.85495607802461482),

711 
FRAC_CONST
(0.85575074826325392),

712 
FRAC_CONST
(0.85654340483771996),

713 
FRAC_CONST
(0.85733404588281559),

714 
FRAC_CONST
(0.85812266953808602),

715 
FRAC_CONST
(0.8589092739478239),

716 
FRAC_CONST
(0.85969385726107261),

717 
FRAC_CONST
(0.86047641763163207),

718 
FRAC_CONST
(0.86125695321806206),

719 
FRAC_CONST
(0.86203546218368721),

720 
FRAC_CONST
(0.86281194269660033),

721 
FRAC_CONST
(0.86358639292966799),

722 
FRAC_CONST
(0.86435881106053403),

723 
FRAC_CONST
(0.86512919527162369),

724 
FRAC_CONST
(0.86589754375014882),

725 
FRAC_CONST
(0.86666385468811102),

726 
FRAC_CONST
(0.86742812628230692),

727 
FRAC_CONST
(0.86819035673433131),

728 
FRAC_CONST
(0.86895054425058238),

729 
FRAC_CONST
(0.86970868704226556),

730 
FRAC_CONST
(0.87046478332539767),

731 
FRAC_CONST
(0.8712188313208109),

732 
FRAC_CONST
(0.8719708292541577),

733 
FRAC_CONST
(0.8727207753559143),

734 
FRAC_CONST
(0.87346866786138488),

735 
FRAC_CONST
(0.8742145050107063),

736 
FRAC_CONST
(0.87495828504885154),

737 
FRAC_CONST
(0.8757000062256346),

738 
FRAC_CONST
(0.87643966679571361),

739 
FRAC_CONST
(0.87717726501859594),

740 
FRAC_CONST
(0.87791279915864173),

741 
FRAC_CONST
(0.87864626748506813),

742 
FRAC_CONST
(0.87937766827195318),

743 
FRAC_CONST
(0.88010699979824036),

744 
FRAC_CONST
(0.88083426034774204),

745 
FRAC_CONST
(0.88155944820914378),

746 
FRAC_CONST
(0.8822825616760086),

747 
FRAC_CONST
(0.88300359904678072),

748 
FRAC_CONST
(0.88372255862478966),

749 
FRAC_CONST
(0.8844394387182537),

750 
FRAC_CONST
(0.88515423764028511),

751 
FRAC_CONST
(0.88586695370889279),

752 
FRAC_CONST
(0.88657758524698704),

753 
FRAC_CONST
(0.88728613058238315),

754 
FRAC_CONST
(0.88799258804780556),

755 
FRAC_CONST
(0.88869695598089171),

756 
FRAC_CONST
(0.88939923272419552),

757 
FRAC_CONST
(0.89009941662519221),

758 
FRAC_CONST
(0.89079750603628149),

759 
FRAC_CONST
(0.89149349931479138),

760 
FRAC_CONST
(0.89218739482298248),

761 
FRAC_CONST
(0.89287919092805168),

762 
FRAC_CONST
(0.89356888600213602),

763 
FRAC_CONST
(0.89425647842231604),

764 
FRAC_CONST
(0.89494196657062075),

765 
FRAC_CONST
(0.89562534883403),

766 
FRAC_CONST
(0.89630662360447966),

767 
FRAC_CONST
(0.89698578927886397),

768 
FRAC_CONST
(0.89766284425904075),

769 
FRAC_CONST
(0.89833778695183419),

770 
FRAC_CONST
(0.89901061576903907),

771 
FRAC_CONST
(0.89968132912742393),

772 
FRAC_CONST
(0.9003499254487356),

773 
FRAC_CONST
(0.90101640315970233),

774 
FRAC_CONST
(0.90168076069203773),

775 
FRAC_CONST
(0.9023429964824442),

776 
FRAC_CONST
(0.90300310897261704),

777 
FRAC_CONST
(0.90366109660924798),

778 
FRAC_CONST
(0.90431695784402832),

779 
FRAC_CONST
(0.90497069113365325),

780 
FRAC_CONST
(0.90562229493982516),

781 
FRAC_CONST
(0.90627176772925766),

782 
FRAC_CONST
(0.90691910797367803),

783 
FRAC_CONST
(0.90756431414983252),

784 
FRAC_CONST
(0.9082073847394887),

785 
FRAC_CONST
(0.90884831822943912),

786 
FRAC_CONST
(0.90948711311150543),

787 
FRAC_CONST
(0.91012376788254157),

788 
FRAC_CONST
(0.91075828104443757),

789 
FRAC_CONST
(0.91139065110412232),

790 
FRAC_CONST
(0.91202087657356823),

791 
FRAC_CONST
(0.9126489559697939),

792 
FRAC_CONST
(0.91327488781486776),

793 
FRAC_CONST
(0.91389867063591168),

794 
FRAC_CONST
(0.91452030296510445),

795 
FRAC_CONST
(0.91513978333968526),

796 
FRAC_CONST
(0.91575711030195672),

797 
FRAC_CONST
(0.91637228239928914),

798 
FRAC_CONST
(0.91698529818412289),

799 
FRAC_CONST
(0.91759615621397295),

800 
FRAC_CONST
(0.9182048550514309),

801 
FRAC_CONST
(0.91881139326416994),

802 
FRAC_CONST
(0.91941576942494696),

803 
FRAC_CONST
(0.92001798211160657),

804 
FRAC_CONST
(0.92061802990708386),

805 
FRAC_CONST
(0.92121591139940873),

806 
FRAC_CONST
(0.92181162518170812),

807 
FRAC_CONST
(0.92240516985220988),

808 
FRAC_CONST
(0.92299654401424625),

809 
FRAC_CONST
(0.92358574627625656),

810 
FRAC_CONST
(0.9241727752517912),

811 
FRAC_CONST
(0.92475762955951391),

812 
FRAC_CONST
(0.9253403078232062),

813 
FRAC_CONST
(0.92592080867176996),

814 
FRAC_CONST
(0.92649913073923051),

815 
FRAC_CONST
(0.9270752726647401),

816 
FRAC_CONST
(0.92764923309258118),

817 
FRAC_CONST
(0.92822101067216944),

818 
FRAC_CONST
(0.92879060405805702),

819 
FRAC_CONST
(0.9293580119099355),

820 
FRAC_CONST
(0.92992323289263956),

821 
FRAC_CONST
(0.93048626567614978),

822 
FRAC_CONST
(0.93104710893559517),

823 
FRAC_CONST
(0.93160576135125783),

824 
FRAC_CONST
(0.93216222160857432),

825 
FRAC_CONST
(0.93271648839814025),

826 
FRAC_CONST
(0.93326856041571205),

827 
FRAC_CONST
(0.93381843636221096),

828 
FRAC_CONST
(0.9343661149437259),

829 
FRAC_CONST
(0.93491159487151609),

830 
FRAC_CONST
(0.93545487486201462),

831 
FRAC_CONST
(0.9359959536368313),

832 
FRAC_CONST
(0.9365348299227555),

833 
FRAC_CONST
(0.93707150245175919),

834 
FRAC_CONST
(0.93760596996099999),

835 
FRAC_CONST
(0.93813823119282436),

836 
FRAC_CONST
(0.93866828489477017),

837 
FRAC_CONST
(0.9391961298195699),

838 
FRAC_CONST
(0.93972176472515334),

839 
FRAC_CONST
(0.94024518837465088),

840 
FRAC_CONST
(0.94076639953639607),

841 
FRAC_CONST
(0.94128539698392866),

842 
FRAC_CONST
(0.94180217949599765),

843 
FRAC_CONST
(0.94231674585656378),

844 
FRAC_CONST
(0.94282909485480271),

845 
FRAC_CONST
(0.94333922528510772),

846 
FRAC_CONST
(0.94384713594709269),

847 
FRAC_CONST
(0.94435282564559475),

848 
FRAC_CONST
(0.94485629319067721),

849 
FRAC_CONST
(0.94535753739763229),

850 
FRAC_CONST
(0.94585655708698391),

851 
FRAC_CONST
(0.94635335108449059),

852 
FRAC_CONST
(0.946847918221148),

853 
FRAC_CONST
(0.94734025733319194),

854 
FRAC_CONST
(0.94783036726210101),

855 
FRAC_CONST
(0.94831824685459909),

856 
FRAC_CONST
(0.94880389496265838),

857 
FRAC_CONST
(0.94928731044350201),

858 
FRAC_CONST
(0.94976849215960668),

859 
FRAC_CONST
(0.95024743897870523),

860 
FRAC_CONST
(0.95072414977378961),

861 
FRAC_CONST
(0.95119862342311323),

862 
FRAC_CONST
(0.95167085881019386),

863 
FRAC_CONST
(0.95214085482381583),

864 
FRAC_CONST
(0.95260861035803324),

865 
FRAC_CONST
(0.9530741243121722),

866 
FRAC_CONST
(0.95353739559083328),

867 
FRAC_CONST
(0.95399842310389449),

868 
FRAC_CONST
(0.95445720576651349),

869 
FRAC_CONST
(0.95491374249913052),

870 
FRAC_CONST
(0.95536803222747024),

871 
FRAC_CONST
(0.95582007388254542),

872 
FRAC_CONST
(0.95626986640065814),

873 
FRAC_CONST
(0.95671740872340305),

874 
FRAC_CONST
(0.9571626997976701),

875 
FRAC_CONST
(0.95760573857564624),

876 
FRAC_CONST
(0.9580465240148186),

877 
FRAC_CONST
(0.9584850550779761),

878 
FRAC_CONST
(0.95892133073321306),

879 
FRAC_CONST
(0.95935534995393079),

880 
FRAC_CONST
(0.9597871117188399),

881 
FRAC_CONST
(0.96021661501196343),

882 
FRAC_CONST
(0.96064385882263847),

883 
FRAC_CONST
(0.96106884214551935),

884 
FRAC_CONST
(0.961491563980579),

885 
FRAC_CONST
(0.9619120233331121),

886 
FRAC_CONST
(0.9623302192137374),

887 
FRAC_CONST
(0.96274615063839941),

888 
FRAC_CONST
(0.96315981662837136),

889 
FRAC_CONST
(0.96357121621025721),

890 
FRAC_CONST
(0.96398034841599411),

891 
FRAC_CONST
(0.96438721228285429),

892 
FRAC_CONST
(0.9647918068534479),

893 
FRAC_CONST
(0.96519413117572472),

894 
FRAC_CONST
(0.96559418430297683),

895 
FRAC_CONST
(0.96599196529384057),

896 
FRAC_CONST
(0.96638747321229879),

897 
FRAC_CONST
(0.96678070712768327),

898 
FRAC_CONST
(0.96717166611467664),

899 
FRAC_CONST
(0.96756034925331436),

900 
FRAC_CONST
(0.9679467556289878),

901 
FRAC_CONST
(0.9683308843324453),

902 
FRAC_CONST
(0.96871273445979478),

903 
FRAC_CONST
(0.9690923051125061),

904 
FRAC_CONST
(0.96946959539741295),

905 
FRAC_CONST
(0.96984460442671483),

906 
FRAC_CONST
(0.97021733131797916),

907 
FRAC_CONST
(0.97058777519414363),

908 
FRAC_CONST
(0.97095593518351797),

909 
FRAC_CONST
(0.97132181041978616),

910 
FRAC_CONST
(0.97168540004200854),

911 
FRAC_CONST
(0.9720467031946235),

912 
FRAC_CONST
(0.97240571902744977),

913 
FRAC_CONST
(0.97276244669568857),

914 
FRAC_CONST
(0.97311688535992513),

915 
FRAC_CONST
(0.97346903418613095),

916 
FRAC_CONST
(0.9738188923456661),

917 
FRAC_CONST
(0.97416645901528032),

918 
FRAC_CONST
(0.97451173337711572),

919 
FRAC_CONST
(0.97485471461870843),

920 
FRAC_CONST
(0.97519540193299037),

921 
FRAC_CONST
(0.97553379451829136),

922 
FRAC_CONST
(0.97586989157834103),

923 
FRAC_CONST
(0.97620369232227056),

924 
FRAC_CONST
(0.97653519596461447),

925 
FRAC_CONST
(0.97686440172531264),

926 
FRAC_CONST
(0.97719130882971228),

927 
FRAC_CONST
(0.97751591650856928),

928 
FRAC_CONST
(0.97783822399805043),

929 
FRAC_CONST
(0.97815823053973505),

930 
FRAC_CONST
(0.97847593538061683),

931 
FRAC_CONST
(0.97879133777310567),

932 
FRAC_CONST
(0.97910443697502925),

933 
FRAC_CONST
(0.97941523224963478),

934 
FRAC_CONST
(0.97972372286559117),

935 
FRAC_CONST
(0.98002990809698998),

936 
FRAC_CONST
(0.98033378722334796),

937 
FRAC_CONST
(0.98063535952960812),

938 
FRAC_CONST
(0.98093462430614164),

939 
FRAC_CONST
(0.98123158084874973),

940 
FRAC_CONST
(0.98152622845866466),

941 
FRAC_CONST
(0.9818185664425525),

942 
FRAC_CONST
(0.98210859411251361),

943 
FRAC_CONST
(0.98239631078608469),

944 
FRAC_CONST
(0.98268171578624086),

945 
FRAC_CONST
(0.98296480844139644),

946 
FRAC_CONST
(0.98324558808540707),

947 
FRAC_CONST
(0.98352405405757126),

948 
FRAC_CONST
(0.98380020570263149),

949 
FRAC_CONST
(0.98407404237077645),

950 
FRAC_CONST
(0.9843455634176419),

951 
FRAC_CONST
(0.9846147682043126),

952 
FRAC_CONST
(0.9848816560973237),

953 
FRAC_CONST
(0.98514622646866223),

954 
FRAC_CONST
(0.98540847869576842),

955 
FRAC_CONST
(0.98566841216153755),

956 
FRAC_CONST
(0.98592602625432113),

957 
FRAC_CONST
(0.98618132036792827),

958 
FRAC_CONST
(0.98643429390162707),

959 
FRAC_CONST
(0.98668494626014669),

960 
FRAC_CONST
(0.98693327685367771),

961 
FRAC_CONST
(0.98717928509787434),

962 
FRAC_CONST
(0.98742297041385541),

963 
FRAC_CONST
(0.98766433222820571),

964 
FRAC_CONST
(0.98790336997297779),

965 
FRAC_CONST
(0.98814008308569257),

966 
FRAC_CONST
(0.98837447100934128),

967 
FRAC_CONST
(0.98860653319238645),

968 
FRAC_CONST
(0.98883626908876354),

969 
FRAC_CONST
(0.98906367815788154),

970 
FRAC_CONST
(0.98928875986462517),

971 
FRAC_CONST
(0.98951151367935519),

972 
FRAC_CONST
(0.98973193907791057),

973 
FRAC_CONST
(0.98995003554160899),

974 
FRAC_CONST
(0.9901658025572484),

975 
FRAC_CONST
(0.99037923961710816),

976 
FRAC_CONST
(0.99059034621895015),

977 
FRAC_CONST
(0.99079912186602037),

978 
FRAC_CONST
(0.99100556606704937),

979 
FRAC_CONST
(0.99120967833625406),

980 
FRAC_CONST
(0.99141145819333854),

981 
FRAC_CONST
(0.99161090516349537),

982 
FRAC_CONST
(0.99180801877740643),

983 
FRAC_CONST
(0.99200279857124452),

984 
FRAC_CONST
(0.99219524408667392),

985 
FRAC_CONST
(0.99238535487085167),

986 
FRAC_CONST
(0.99257313047642881),

987 
FRAC_CONST
(0.99275857046155114),

988 
FRAC_CONST
(0.99294167438986047),

989 
FRAC_CONST
(0.99312244183049558),

990 
FRAC_CONST
(0.99330087235809328),

991 
FRAC_CONST
(0.99347696555278919),

992 
FRAC_CONST
(0.99365072100021912),

993 
FRAC_CONST
(0.99382213829151966),

994 
FRAC_CONST
(0.99399121702332938),

995 
FRAC_CONST
(0.99415795679778973),

996 
FRAC_CONST
(0.99432235722254581),

997 
FRAC_CONST
(0.9944844179107476),

998 
FRAC_CONST
(0.99464413848105071),

999 
FRAC_CONST
(0.99480151855761711),

1000 
FRAC_CONST
(0.99495655777011638),

1001 
FRAC_CONST
(0.99510925575372611),

1002 
FRAC_CONST
(0.99525961214913339),

1003 
FRAC_CONST
(0.9954076266025349),

1004 
FRAC_CONST
(0.99555329876563847),

1005 
FRAC_CONST
(0.99569662829566352),

1006 
FRAC_CONST
(0.99583761485534161),

1007 
FRAC_CONST
(0.99597625811291779),

1008 
FRAC_CONST
(0.99611255774215113),

1009 
FRAC_CONST
(0.99624651342231552),

1010 
FRAC_CONST
(0.99637812483820021),

1011 
FRAC_CONST
(0.99650739168011082),

1012 
FRAC_CONST
(0.9966343136438699),

1013 
FRAC_CONST
(0.996758890430818),

1014 
FRAC_CONST
(0.99688112174781385),

1015 
FRAC_CONST
(0.99700100730723529),

1016 
FRAC_CONST
(0.99711854682697998),

1017 
FRAC_CONST
(0.99723374003046616),

1018 
FRAC_CONST
(0.99734658664663323),

1019 
FRAC_CONST
(0.99745708640994191),

1020 
FRAC_CONST
(0.99756523906037575),

1021 
FRAC_CONST
(0.997671044343441),

1022 
FRAC_CONST
(0.99777450201016782),

1023 
FRAC_CONST
(0.99787561181711015),

1024 
FRAC_CONST
(0.99797437352634699),

1025 
FRAC_CONST
(0.99807078690548234),

1026 
FRAC_CONST
(0.99816485172764624),

1027 
FRAC_CONST
(0.99825656777149518),

1028 
FRAC_CONST
(0.99834593482121237),

1029 
FRAC_CONST
(0.99843295266650844),

1030 
FRAC_CONST
(0.99851762110262221),

1031 
FRAC_CONST
(0.99859993993032037),

1032 
FRAC_CONST
(0.99867990895589909),

1033 
FRAC_CONST
(0.99875752799118334),

1034 
FRAC_CONST
(0.99883279685352799),

1035 
FRAC_CONST
(0.99890571536581829),

1036 
FRAC_CONST
(0.99897628335646982),

1037 
FRAC_CONST
(0.99904450065942929),

1038 
FRAC_CONST
(0.99911036711417489),

1039 
FRAC_CONST
(0.99917388256571638),

1040 
FRAC_CONST
(0.99923504686459585),

1041 
FRAC_CONST
(0.99929385986688779),

1042 
FRAC_CONST
(0.99935032143419944),

1043 
FRAC_CONST
(0.9994044314336713),

1044 
FRAC_CONST
(0.99945618973797734),

1045 
FRAC_CONST
(0.99950559622532531),

1046 
FRAC_CONST
(0.99955265077945699),

1047 
FRAC_CONST
(0.99959735328964838),

1048 
FRAC_CONST
(0.9996397036507102),

1049 
FRAC_CONST
(0.99967970176298793),

1050 
FRAC_CONST
(0.99971734753236219),

1051 
FRAC_CONST
(0.99975264087024884),

1052 
FRAC_CONST
(0.99978558169359921),

1053 
FRAC_CONST
(0.99981616992490041),

1054 
FRAC_CONST
(0.99984440549217524),

1055 
FRAC_CONST
(0.99987028832898295),

1056 
FRAC_CONST
(0.99989381837441849),

1057 
FRAC_CONST
(0.99991499557311347),

1058 
FRAC_CONST
(0.999933819875236),

1059 
FRAC_CONST
(0.99995029123649048),

1060 
FRAC_CONST
(0.99996440961811828),

1061 
FRAC_CONST
(0.99997617498689761),

1062 
FRAC_CONST
(0.9999855873151432),

1063 
FRAC_CONST
(0.99999264658070719),

1064 
FRAC_CONST
(0.99999735276697821),

1065 
FRAC_CONST
(0.99999970586288223)

1068 #ifde‡
ALLOW_SMALL_FRAMELENGTH


1069 
ALIGN
 c⁄° 
ªÆ_t
 
söe_l⁄g_960
[] =

1071 
FRAC_CONST
(0.00081812299560725323),

1072 
FRAC_CONST
(0.0024543667964602917),

1073 
FRAC_CONST
(0.0040906040262347889),

1074 
FRAC_CONST
(0.0057268303042312674),

1075 
FRAC_CONST
(0.0073630412497795667),

1076 
FRAC_CONST
(0.0089992324822505774),

1077 
FRAC_CONST
(0.010635399621067975),

1078 
FRAC_CONST
(0.012271538285719924),

1079 
FRAC_CONST
(0.013907644095770845),

1080 
FRAC_CONST
(0.015543712670873098),

1081 
FRAC_CONST
(0.017179739630778748),

1082 
FRAC_CONST
(0.018815720595351273),

1083 
FRAC_CONST
(0.020451651184577292),

1084 
FRAC_CONST
(0.022087527018578291),

1085 
FRAC_CONST
(0.023723343717622358),

1086 
FRAC_CONST
(0.025359096902135895),

1087 
FRAC_CONST
(0.02699478219271537),

1088 
FRAC_CONST
(0.028630395210139003),

1089 
FRAC_CONST
(0.030265931575378519),

1090 
FRAC_CONST
(0.031901386909610863),

1091 
FRAC_CONST
(0.033536756834229922),

1092 
FRAC_CONST
(0.035172036970858266),

1093 
FRAC_CONST
(0.036807222941358832),

1094 
FRAC_CONST
(0.038442310367846677),

1095 
FRAC_CONST
(0.040077294872700696),

1096 
FRAC_CONST
(0.041712172078575326),

1097 
FRAC_CONST
(0.043346937608412288),

1098 
FRAC_CONST
(0.044981587085452281),

1099 
FRAC_CONST
(0.046616116133246711),

1100 
FRAC_CONST
(0.048250520375669431),

1101 
FRAC_CONST
(0.049884795436928406),

1102 
FRAC_CONST
(0.051518936941577477),

1103 
FRAC_CONST
(0.053152940514528055),

1104 
FRAC_CONST
(0.05478680178106083),

1105 
FRAC_CONST
(0.056420516366837495),

1106 
FRAC_CONST
(0.05805407989791244),

1107 
FRAC_CONST
(0.059687488000744485),

1108 
FRAC_CONST
(0.061320736302208578),

1109 
FRAC_CONST
(0.062953820429607482),

1110 
FRAC_CONST
(0.064586736010683557),

1111 
FRAC_CONST
(0.066219478673630344),

1112 
FRAC_CONST
(0.06785204404710439),

1113 
FRAC_CONST
(0.069484427760236861),

1114 
FRAC_CONST
(0.071116625442645326),

1115 
FRAC_CONST
(0.072748632724445372),

1116 
FRAC_CONST
(0.07438044523626236),

1117 
FRAC_CONST
(0.076012058609243122),

1118 
FRAC_CONST
(0.077643468475067631),

1119 
FRAC_CONST
(0.079274670465960706),

1120 
FRAC_CONST
(0.080905660214703745),

1121 
FRAC_CONST
(0.082536433354646319),

1122 
FRAC_CONST
(0.084166985519717977),

1123 
FRAC_CONST
(0.085797312344439894),

1124 
FRAC_CONST
(0.08742740946393647),

1125 
FRAC_CONST
(0.089057272513947183),

1126 
FRAC_CONST
(0.090686897130838162),

1127 
FRAC_CONST
(0.092316278951613845),

1128 
FRAC_CONST
(0.093945413613928788),

1129 
FRAC_CONST
(0.095574296756099186),

1130 
FRAC_CONST
(0.097202924017114667),

1131 
FRAC_CONST
(0.098831291036649963),

1132 
FRAC_CONST
(0.10045939345507648),

1133 
FRAC_CONST
(0.10208722691347409),

1134 
FRAC_CONST
(0.10371478705364276),

1135 
FRAC_CONST
(0.10534206951811415),

1136 
FRAC_CONST
(0.10696906995016341),

1137 
FRAC_CONST
(0.10859578399382072),

1138 
FRAC_CONST
(0.11022220729388306),

1139 
FRAC_CONST
(0.11184833549592579),

1140 
FRAC_CONST
(0.11347416424631435),

1141 
FRAC_CONST
(0.11509968919221586),

1142 
FRAC_CONST
(0.11672490598161089),

1143 
FRAC_CONST
(0.11834981026330495),

1144 
FRAC_CONST
(0.11997439768694031),

1145 
FRAC_CONST
(0.12159866390300751),

1146 
FRAC_CONST
(0.12322260456285709),

1147 
FRAC_CONST
(0.12484621531871121),

1148 
FRAC_CONST
(0.12646949182367517),

1149 
FRAC_CONST
(0.12809242973174936),

1150 
FRAC_CONST
(0.12971502469784052),

1151 
FRAC_CONST
(0.13133727237777362),

1152 
FRAC_CONST
(0.13295916842830346),

1153 
FRAC_CONST
(0.13458070850712617),

1154 
FRAC_CONST
(0.13620188827289101),

1155 
FRAC_CONST
(0.1378227033852118),

1156 
FRAC_CONST
(0.13944314950467873),

1157 
FRAC_CONST
(0.14106322229286994),

1158 
FRAC_CONST
(0.14268291741236291),

1159 
FRAC_CONST
(0.14430223052674654),

1160 
FRAC_CONST
(0.1459211573006321),

1161 
FRAC_CONST
(0.14753969339966552),

1162 
FRAC_CONST
(0.14915783449053857),

1163 
FRAC_CONST
(0.15077557624100058),

1164 
FRAC_CONST
(0.15239291431987001),

1165 
FRAC_CONST
(0.1540098443970461),

1166 
FRAC_CONST
(0.15562636214352044),

1167 
FRAC_CONST
(0.15724246323138855),

1168 
FRAC_CONST
(0.15885814333386142),

1169 
FRAC_CONST
(0.16047339812527725),

1170 
FRAC_CONST
(0.16208822328111283),

1171 
FRAC_CONST
(0.16370261447799525),

1172 
FRAC_CONST
(0.16531656739371339),

1173 
FRAC_CONST
(0.16693007770722967),

1174 
FRAC_CONST
(0.16854314109869134),

1175 
FRAC_CONST
(0.17015575324944232),

1176 
FRAC_CONST
(0.17176790984203447),

1177 
FRAC_CONST
(0.17337960656023954),

1178 
FRAC_CONST
(0.1749908390890603),

1179 
FRAC_CONST
(0.17660160311474243),

1180 
FRAC_CONST
(0.17821189432478593),

1181 
FRAC_CONST
(0.17982170840795647),

1182 
FRAC_CONST
(0.18143104105429744),

1183 
FRAC_CONST
(0.18303988795514095),

1184 
FRAC_CONST
(0.1846482448031197),

1185 
FRAC_CONST
(0.18625610729217834),

1186 
FRAC_CONST
(0.1878634711175852),

1187 
FRAC_CONST
(0.18947033197594348),

1188 
FRAC_CONST
(0.19107668556520319),

1189 
FRAC_CONST
(0.19268252758467228),

1190 
FRAC_CONST
(0.19428785373502844),

1191 
FRAC_CONST
(0.19589265971833042),

1192 
FRAC_CONST
(0.19749694123802966),

1193 
FRAC_CONST
(0.19910069399898173),

1194 
FRAC_CONST
(0.20070391370745785),

1195 
FRAC_CONST
(0.20230659607115639),

1196 
FRAC_CONST
(0.20390873679921437),

1197 
FRAC_CONST
(0.20551033160221882),

1198 
FRAC_CONST
(0.20711137619221856),

1199 
FRAC_CONST
(0.2087118662827353),

1200 
FRAC_CONST
(0.21031179758877552),

1201 
FRAC_CONST
(0.21191116582684155),

1202 
FRAC_CONST
(0.21350996671494335),

1203 
FRAC_CONST
(0.21510819597260972),

1204 
FRAC_CONST
(0.21670584932089998),

1205 
FRAC_CONST
(0.2183029224824154),

1206 
FRAC_CONST
(0.21989941118131037),

1207 
FRAC_CONST
(0.22149531114330431),

1208 
FRAC_CONST
(0.22309061809569264),

1209 
FRAC_CONST
(0.22468532776735861),

1210 
FRAC_CONST
(0.22627943588878449),

1211 
FRAC_CONST
(0.22787293819206314),

1212 
FRAC_CONST
(0.22946583041090929),

1213 
FRAC_CONST
(0.23105810828067114),

1214 
FRAC_CONST
(0.23264976753834157),

1215 
FRAC_CONST
(0.23424080392256985),

1216 
FRAC_CONST
(0.2358312131736727),

1217 
FRAC_CONST
(0.23742099103364595),

1218 
FRAC_CONST
(0.23901013324617584),

1219 
FRAC_CONST
(0.24059863555665045),

1220 
FRAC_CONST
(0.24218649371217096),

1221 
FRAC_CONST
(0.24377370346156332),

1222 
FRAC_CONST
(0.24536026055538934),

1223 
FRAC_CONST
(0.24694616074595824),

1224 
FRAC_CONST
(0.24853139978733788),

1225 
FRAC_CONST
(0.25011597343536629),

1226 
FRAC_CONST
(0.25169987744766298),

1227 
FRAC_CONST
(0.25328310758364025),

1228 
FRAC_CONST
(0.25486565960451457),

1229 
FRAC_CONST
(0.25644752927331788),

1230 
FRAC_CONST
(0.25802871235490898),

1231 
FRAC_CONST
(0.25960920461598508),

1232 
FRAC_CONST
(0.26118900182509258),

1233 
FRAC_CONST
(0.26276809975263904),

1234 
FRAC_CONST
(0.264346494170904),

1235 
FRAC_CONST
(0.26592418085405067),

1236 
FRAC_CONST
(0.26750115557813692),

1237 
FRAC_CONST
(0.2690774141211269),

1238 
FRAC_CONST
(0.27065295226290209),

1239 
FRAC_CONST
(0.2722277657852728),

1240 
FRAC_CONST
(0.27380185047198918),

1241 
FRAC_CONST
(0.27537520210875299),

1242 
FRAC_CONST
(0.2769478164832283),

1243 
FRAC_CONST
(0.27851968938505312),

1244 
FRAC_CONST
(0.28009081660585067),

1245 
FRAC_CONST
(0.28166119393924061),

1246 
FRAC_CONST
(0.28323081718085019),

1247 
FRAC_CONST
(0.28479968212832563),

1248 
FRAC_CONST
(0.28636778458134327),

1249 
FRAC_CONST
(0.28793512034162105),

1250 
FRAC_CONST
(0.2895016852129294),

1251 
FRAC_CONST
(0.29106747500110264),

1252 
FRAC_CONST
(0.29263248551405047),

1253 
FRAC_CONST
(0.2941967125617686),

1254 
FRAC_CONST
(0.29576015195635058),

1255 
FRAC_CONST
(0.29732279951199847),

1256 
FRAC_CONST
(0.29888465104503475),

1257 
FRAC_CONST
(0.30044570237391266),

1258 
FRAC_CONST
(0.30200594931922808),

1259 
FRAC_CONST
(0.30356538770373032),

1260 
FRAC_CONST
(0.30512401335233358),

1261 
FRAC_CONST
(0.30668182209212791),

1262 
FRAC_CONST
(0.3082388097523906),

1263 
FRAC_CONST
(0.30979497216459695),

1264 
FRAC_CONST
(0.31135030516243201),

1265 
FRAC_CONST
(0.3129048045818012),

1266 
FRAC_CONST
(0.31445846626084178),

1267 
FRAC_CONST
(0.31601128603993378),

1268 
FRAC_CONST
(0.31756325976171151),

1269 
FRAC_CONST
(0.31911438327107416),

1270 
FRAC_CONST
(0.32066465241519732),

1271 
FRAC_CONST
(0.32221406304354389),

1272 
FRAC_CONST
(0.3237626110078754),

1273 
FRAC_CONST
(0.32531029216226293),

1274 
FRAC_CONST
(0.32685710236309828),

1275 
FRAC_CONST
(0.32840303746910487),

1276 
FRAC_CONST
(0.32994809334134939),

1277 
FRAC_CONST
(0.3314922658432522),

1278 
FRAC_CONST
(0.33303555084059877),

1279 
FRAC_CONST
(0.33457794420155085),

1280 
FRAC_CONST
(0.33611944179665709),

1281 
FRAC_CONST
(0.33766003949886464),

1282 
FRAC_CONST
(0.33919973318352969),

1283 
FRAC_CONST
(0.34073851872842903),

1284 
FRAC_CONST
(0.34227639201377064),

1285 
FRAC_CONST
(0.34381334892220483),

1286 
FRAC_CONST
(0.34534938533883547),

1287 
FRAC_CONST
(0.34688449715123082),

1288 
FRAC_CONST
(0.34841868024943456),

1289 
FRAC_CONST
(0.34995193052597684),

1290 
FRAC_CONST
(0.35148424387588523),

1291 
FRAC_CONST
(0.3530156161966958),

1292 
FRAC_CONST
(0.35454604338846402),

1293 
FRAC_CONST
(0.35607552135377557),

1294 
FRAC_CONST
(0.35760404599775775),

1295 
FRAC_CONST
(0.35913161322809023),

1296 
FRAC_CONST
(0.36065821895501554),

1297 
FRAC_CONST
(0.36218385909135092),

1298 
FRAC_CONST
(0.36370852955249849),

1299 
FRAC_CONST
(0.36523222625645668),

1300 
FRAC_CONST
(0.36675494512383078),

1301 
FRAC_CONST
(0.36827668207784414),

1302 
FRAC_CONST
(0.36979743304434909),

1303 
FRAC_CONST
(0.37131719395183754),

1304 
FRAC_CONST
(0.37283596073145214),

1305 
FRAC_CONST
(0.37435372931699717),

1306 
FRAC_CONST
(0.37587049564494951),

1307 
FRAC_CONST
(0.37738625565446909),

1308 
FRAC_CONST
(0.37890100528741022),

1309 
FRAC_CONST
(0.38041474048833229),

1310 
FRAC_CONST
(0.38192745720451066),

1311 
FRAC_CONST
(0.38343915138594736),

1312 
FRAC_CONST
(0.38494981898538222),

1313 
FRAC_CONST
(0.38645945595830333),

1314 
FRAC_CONST
(0.38796805826295838),

1315 
FRAC_CONST
(0.38947562186036483),

1316 
FRAC_CONST
(0.39098214271432141),

1317 
FRAC_CONST
(0.39248761679141814),

1318 
FRAC_CONST
(0.3939920400610481),

1319 
FRAC_CONST
(0.39549540849541737),

1320 
FRAC_CONST
(0.39699771806955625),

1321 
FRAC_CONST
(0.39849896476132979),

1322 
FRAC_CONST
(0.39999914455144892),

1323 
FRAC_CONST
(0.40149825342348083),

1324 
FRAC_CONST
(0.4029962873638599),

1325 
FRAC_CONST
(0.40449324236189854),

1326 
FRAC_CONST
(0.40598911440979762),

1327 
FRAC_CONST
(0.40748389950265762),

1328 
FRAC_CONST
(0.40897759363848879),

1329 
FRAC_CONST
(0.41047019281822261),

1330 
FRAC_CONST
(0.41196169304572178),

1331 
FRAC_CONST
(0.4134520903277914),

1332 
FRAC_CONST
(0.41494138067418929),

1333 
FRAC_CONST
(0.41642956009763715),

1334 
FRAC_CONST
(0.41791662461383078),

1335 
FRAC_CONST
(0.41940257024145089),

1336 
FRAC_CONST
(0.42088739300217382),

1337 
FRAC_CONST
(0.42237108892068231),

1338 
FRAC_CONST
(0.42385365402467584),

1339 
FRAC_CONST
(0.42533508434488143),

1340 
FRAC_CONST
(0.42681537591506419),

1341 
FRAC_CONST
(0.42829452477203828),

1342 
FRAC_CONST
(0.42977252695567697),

1343 
FRAC_CONST
(0.43124937850892364),

1344 
FRAC_CONST
(0.4327250754778022),

1345 
FRAC_CONST
(0.43419961391142781),

1346 
FRAC_CONST
(0.43567298986201736),

1347 
FRAC_CONST
(0.43714519938489987),

1348 
FRAC_CONST
(0.43861623853852766),

1349 
FRAC_CONST
(0.44008610338448595),

1350 
FRAC_CONST
(0.44155478998750436),

1351 
FRAC_CONST
(0.44302229441546676),

1352 
FRAC_CONST
(0.4444886127394222),

1353 
FRAC_CONST
(0.44595374103359531),

1354 
FRAC_CONST
(0.44741767537539667),

1355 
FRAC_CONST
(0.44888041184543348),

1356 
FRAC_CONST
(0.45034194652752002),

1357 
FRAC_CONST
(0.45180227550868812),

1358 
FRAC_CONST
(0.45326139487919759),

1359 
FRAC_CONST
(0.45471930073254679),

1360 
FRAC_CONST
(0.45617598916548296),

1361 
FRAC_CONST
(0.45763145627801283),

1362 
FRAC_CONST
(0.45908569817341294),

1363 
FRAC_CONST
(0.46053871095824001),

1364 
FRAC_CONST
(0.46199049074234161),

1365 
FRAC_CONST
(0.46344103363886635),

1366 
FRAC_CONST
(0.46489033576427435),

1367 
FRAC_CONST
(0.46633839323834758),

1368 
FRAC_CONST
(0.46778520218420055),

1369 
FRAC_CONST
(0.46923075872829029),

1370 
FRAC_CONST
(0.47067505900042683),

1371 
FRAC_CONST
(0.47211809913378361),

1372 
FRAC_CONST
(0.47355987526490806),

1373 
FRAC_CONST
(0.47500038353373153),

1374 
FRAC_CONST
(0.47643962008357982),

1375 
FRAC_CONST
(0.47787758106118372),

1376 
FRAC_CONST
(0.47931426261668875),

1377 
FRAC_CONST
(0.48074966090366611),

1378 
FRAC_CONST
(0.48218377207912272),

1379 
FRAC_CONST
(0.48361659230351117),

1380 
FRAC_CONST
(0.48504811774074069),

1381 
FRAC_CONST
(0.48647834455818684),

1382 
FRAC_CONST
(0.48790726892670194),

1383 
FRAC_CONST
(0.48933488702062544),

1384 
FRAC_CONST
(0.49076119501779414),

1385 
FRAC_CONST
(0.49218618909955225),

1386 
FRAC_CONST
(0.4936098654507618),

1387 
FRAC_CONST
(0.49503222025981269),

1388 
FRAC_CONST
(0.49645324971863303),

1389 
FRAC_CONST
(0.49787295002269943),

1390 
FRAC_CONST
(0.49929131737104687),

1391 
FRAC_CONST
(0.50070834796627917),

1392 
FRAC_CONST
(0.50212403801457872),

1393 
FRAC_CONST
(0.50353838372571758),

1394 
FRAC_CONST
(0.50495138131306638),

1395 
FRAC_CONST
(0.50636302699360547),

1396 
FRAC_CONST
(0.50777331698793449),

1397 
FRAC_CONST
(0.50918224752028263),

1398 
FRAC_CONST
(0.51058981481851906),

1399 
FRAC_CONST
(0.51199601511416237),

1400 
FRAC_CONST
(0.51340084464239111),

1401 
FRAC_CONST
(0.51480429964205421),

1402 
FRAC_CONST
(0.51620637635567967),

1403 
FRAC_CONST
(0.51760707102948678),

1404 
FRAC_CONST
(0.51900637991339404),

1405 
FRAC_CONST
(0.5204042992610306),

1406 
FRAC_CONST
(0.52180082532974559),

1407 
FRAC_CONST
(0.5231959543806185),

1408 
FRAC_CONST
(0.52458968267846895),

1409 
FRAC_CONST
(0.52598200649186677),

1410 
FRAC_CONST
(0.52737292209314235),

1411 
FRAC_CONST
(0.52876242575839572),

1412 
FRAC_CONST
(0.53015051376750777),

1413 
FRAC_CONST
(0.53153718240414882),

1414 
FRAC_CONST
(0.53292242795578992),

1415 
FRAC_CONST
(0.53430624671371152),

1416 
FRAC_CONST
(0.53568863497301467),

1417 
FRAC_CONST
(0.5370695890326298),

1418 
FRAC_CONST
(0.5384491051953274),

1419 
FRAC_CONST
(0.53982717976772743),

1420 
FRAC_CONST
(0.54120380906030963),

1421 
FRAC_CONST
(0.54257898938742311),

1422 
FRAC_CONST
(0.54395271706729609),

1423 
FRAC_CONST
(0.54532498842204646),

1424 
FRAC_CONST
(0.54669579977769045),

1425 
FRAC_CONST
(0.54806514746415402),

1426 
FRAC_CONST
(0.54943302781528081),

1427 
FRAC_CONST
(0.55079943716884383),

1428 
FRAC_CONST
(0.55216437186655387),

1429 
FRAC_CONST
(0.55352782825406999),

1430 
FRAC_CONST
(0.55488980268100907),

1431 
FRAC_CONST
(0.55625029150095584),

1432 
FRAC_CONST
(0.55760929107147217),

1433 
FRAC_CONST
(0.55896679775410718),

1434 
FRAC_CONST
(0.56032280791440714),

1435 
FRAC_CONST
(0.56167731792192455),

1436 
FRAC_CONST
(0.56303032415022869),

1437 
FRAC_CONST
(0.56438182297691453),

1438 
FRAC_CONST
(0.56573181078361312),

1439 
FRAC_CONST
(0.56708028395600085),

1440 
FRAC_CONST
(0.56842723888380908),

1441 
FRAC_CONST
(0.56977267196083425),

1442 
FRAC_CONST
(0.57111657958494688),

1443 
FRAC_CONST
(0.5724589581581021),

1444 
FRAC_CONST
(0.57379980408634845),

1445 
FRAC_CONST
(0.57513911377983773),

1446 
FRAC_CONST
(0.57647688365283478),

1447 
FRAC_CONST
(0.57781311012372738),

1448 
FRAC_CONST
(0.57914778961503466),

1449 
FRAC_CONST
(0.58048091855341843),

1450 
FRAC_CONST
(0.5818124933696911),

1451 
FRAC_CONST
(0.58314251049882604),

1452 
FRAC_CONST
(0.58447096637996743),

1453 
FRAC_CONST
(0.58579785745643886),

1454 
FRAC_CONST
(0.5871231801757536),

1455 
FRAC_CONST
(0.58844693098962408),

1456 
FRAC_CONST
(0.58976910635397084),

1457 
FRAC_CONST
(0.59108970272893235),

1458 
FRAC_CONST
(0.59240871657887517),

1459 
FRAC_CONST
(0.59372614437240179),

1460 
FRAC_CONST
(0.59504198258236196),

1461 
FRAC_CONST
(0.5963562276858605),

1462 
FRAC_CONST
(0.59766887616426767),

1463 
FRAC_CONST
(0.5989799245032289),

1464 
FRAC_CONST
(0.60028936919267273),

1465 
FRAC_CONST
(0.60159720672682204),

1466 
FRAC_CONST
(0.60290343360420195),

1467 
FRAC_CONST
(0.60420804632765002),

1468 
FRAC_CONST
(0.60551104140432543),

1469 
FRAC_CONST
(0.60681241534571839),

1470 
FRAC_CONST
(0.60811216466765883),

1471 
FRAC_CONST
(0.60941028589032709),

1472 
FRAC_CONST
(0.61070677553826169),

1473 
FRAC_CONST
(0.61200163014036979),

1474 
FRAC_CONST
(0.61329484622993602),

1475 
FRAC_CONST
(0.6145864203446314),

1476 
FRAC_CONST
(0.61587634902652377),

1477 
FRAC_CONST
(0.61716462882208556),

1478 
FRAC_CONST
(0.61845125628220421),

1479 
FRAC_CONST
(0.61973622796219074),

1480 
FRAC_CONST
(0.6210195404217892),

1481 
FRAC_CONST
(0.62230119022518593),

1482 
FRAC_CONST
(0.62358117394101897),

1483 
FRAC_CONST
(0.62485948814238634),

1484 
FRAC_CONST
(0.62613612940685637),

1485 
FRAC_CONST
(0.62741109431647646),

1486 
FRAC_CONST
(0.62868437945778133),

1487 
FRAC_CONST
(0.62995598142180387),

1488 
FRAC_CONST
(0.6312258968040827),

1489 
FRAC_CONST
(0.63249412220467238),

1490 
FRAC_CONST
(0.63376065422815175),

1491 
FRAC_CONST
(0.63502548948363347),

1492 
FRAC_CONST
(0.63628862458477287),

1493 
FRAC_CONST
(0.63755005614977711),

1494 
FRAC_CONST
(0.63880978080141437),

1495 
FRAC_CONST
(0.6400677951670225),

1496 
FRAC_CONST
(0.6413240958785188),

1497 
FRAC_CONST
(0.64257867957240766),

1498 
FRAC_CONST
(0.6438315428897915),

1499 
FRAC_CONST
(0.64508268247637779),

1500 
FRAC_CONST
(0.64633209498248945),

1501 
FRAC_CONST
(0.64757977706307335),

1502 
FRAC_CONST
(0.64882572537770888),

1503 
FRAC_CONST
(0.65006993659061751),

1504 
FRAC_CONST
(0.65131240737067142),

1505 
FRAC_CONST
(0.65255313439140239),

1506 
FRAC_CONST
(0.65379211433101081),

1507 
FRAC_CONST
(0.65502934387237444),

1508 
FRAC_CONST
(0.6562648197030575),

1509 
FRAC_CONST
(0.65749853851531959),

1510 
FRAC_CONST
(0.65873049700612374),

1511 
FRAC_CONST
(0.65996069187714679),

1512 
FRAC_CONST
(0.66118911983478657),

1513 
FRAC_CONST
(0.66241577759017178),

1514 
FRAC_CONST
(0.66364066185917048),

1515 
FRAC_CONST
(0.66486376936239888),

1516 
FRAC_CONST
(0.66608509682523009),

1517 
FRAC_CONST
(0.66730464097780284),

1518 
FRAC_CONST
(0.66852239855503071),

1519 
FRAC_CONST
(0.66973836629660977),

1520 
FRAC_CONST
(0.67095254094702894),

1521 
FRAC_CONST
(0.67216491925557675),

1522 
FRAC_CONST
(0.67337549797635199),

1523 
FRAC_CONST
(0.67458427386827102),

1524 
FRAC_CONST
(0.67579124369507693),

1525 
FRAC_CONST
(0.67699640422534846),

1526 
FRAC_CONST
(0.67819975223250772),

1527 
FRAC_CONST
(0.6794012844948305),

1528 
FRAC_CONST
(0.68060099779545302),

1529 
FRAC_CONST
(0.68179888892238183),

1530 
FRAC_CONST
(0.6829949546685018),

1531 
FRAC_CONST
(0.68418919183158522),

1532 
FRAC_CONST
(0.68538159721429948),

1533 
FRAC_CONST
(0.6865721676242168),

1534 
FRAC_CONST
(0.68776089987382172),

1535 
FRAC_CONST
(0.68894779078052026),

1536 
FRAC_CONST
(0.69013283716664853),

1537 
FRAC_CONST
(0.69131603585948032),

1538 
FRAC_CONST
(0.69249738369123692),

1539 
FRAC_CONST
(0.69367687749909468),

1540 
FRAC_CONST
(0.69485451412519361),

1541 
FRAC_CONST
(0.69603029041664599),

1542 
FRAC_CONST
(0.6972042032255451),

1543 
FRAC_CONST
(0.6983762494089728),

1544 
FRAC_CONST
(0.69954642582900894),

1545 
FRAC_CONST
(0.70071472935273893),

1546 
FRAC_CONST
(0.70188115685226271),

1547 
FRAC_CONST
(0.703045705204703),

1548 
FRAC_CONST
(0.70420837129221303),

1549 
FRAC_CONST
(0.70536915200198613),

1550 
FRAC_CONST
(0.70652804422626281),

1551 
FRAC_CONST
(0.70768504486233985),

1552 
FRAC_CONST
(0.70884015081257845),

1553 
FRAC_CONST
(0.70999335898441229),

1554 
FRAC_CONST
(0.711144666290356),

1555 
FRAC_CONST
(0.71229406964801356),

1556 
FRAC_CONST
(0.71344156598008623),

1557 
FRAC_CONST
(0.71458715221438096),

1558 
FRAC_CONST
(0.71573082528381871),

1559 
FRAC_CONST
(0.71687258212644234),

1560 
FRAC_CONST
(0.7180124196854254),

1561 
FRAC_CONST
(0.71915033490907943),

1562 
FRAC_CONST
(0.72028632475086318),

1563 
FRAC_CONST
(0.72142038616938997),

1564 
FRAC_CONST
(0.72255251612843596),

1565 
FRAC_CONST
(0.72368271159694852),

1566 
FRAC_CONST
(0.72481096954905444),

1567 
FRAC_CONST
(0.72593728696406756),

1568 
FRAC_CONST
(0.72706166082649704),

1569 
FRAC_CONST
(0.72818408812605595),

1570 
FRAC_CONST
(0.72930456585766834),

1571 
FRAC_CONST
(0.73042309102147851),

1572 
FRAC_CONST
(0.73153966062285747),

1573 
FRAC_CONST
(0.73265427167241282),

1574 
FRAC_CONST
(0.73376692118599507),

1575 
FRAC_CONST
(0.73487760618470677),

1576 
FRAC_CONST
(0.73598632369490979),

1577 
FRAC_CONST
(0.73709307074823405),

1578 
FRAC_CONST
(0.73819784438158409),

1579 
FRAC_CONST
(0.73930064163714881),

1580 
FRAC_CONST
(0.74040145956240788),

1581 
FRAC_CONST
(0.74150029521014049),

1582 
FRAC_CONST
(0.74259714563843304),

1583 
FRAC_CONST
(0.74369200791068657),

1584 
FRAC_CONST
(0.74478487909562552),

1585 
FRAC_CONST
(0.74587575626730485),

1586 
FRAC_CONST
(0.74696463650511791),

1587 
FRAC_CONST
(0.74805151689380456),

1588 
FRAC_CONST
(0.74913639452345926),

1589 
FRAC_CONST
(0.75021926648953785),

1590 
FRAC_CONST
(0.75130012989286621),

1591 
FRAC_CONST
(0.7523789818396478),

1592 
FRAC_CONST
(0.75345581944147111),

1593 
FRAC_CONST
(0.75453063981531809),

1594 
FRAC_CONST
(0.75560344008357094),

1595 
FRAC_CONST
(0.75667421737402052),

1596 
FRAC_CONST
(0.7577429688198738),

1597 
FRAC_CONST
(0.75880969155976163),

1598 
FRAC_CONST
(0.75987438273774599),

1599 
FRAC_CONST
(0.76093703950332836),

1600 
FRAC_CONST
(0.76199765901145666),

1601 
FRAC_CONST
(0.76305623842253345),

1602 
FRAC_CONST
(0.76411277490242291),

1603 
FRAC_CONST
(0.76516726562245885),

1604 
FRAC_CONST
(0.76621970775945258),

1605 
FRAC_CONST
(0.76727009849569949),

1606 
FRAC_CONST
(0.76831843501898767),

1607 
FRAC_CONST
(0.76936471452260458),

1608 
FRAC_CONST
(0.77040893420534517),

1609 
FRAC_CONST
(0.77145109127151923),

1610 
FRAC_CONST
(0.77249118293095853),

1611 
FRAC_CONST
(0.77352920639902467),

1612 
FRAC_CONST
(0.77456515889661659),

1613 
FRAC_CONST
(0.77559903765017746),

1614 
FRAC_CONST
(0.7766308398917029),

1615 
FRAC_CONST
(0.77766056285874774),

1616 
FRAC_CONST
(0.77868820379443371),

1617 
FRAC_CONST
(0.77971375994745684),

1618 
FRAC_CONST
(0.78073722857209438),

1619 
FRAC_CONST
(0.7817586069282132),

1620 
FRAC_CONST
(0.78277789228127592),

1621 
FRAC_CONST
(0.78379508190234881),

1622 
FRAC_CONST
(0.78481017306810918),

1623 
FRAC_CONST
(0.78582316306085265),

1624 
FRAC_CONST
(0.78683404916849986),

1625 
FRAC_CONST
(0.78784282868460476),

1626 
FRAC_CONST
(0.78884949890836087),

1627 
FRAC_CONST
(0.78985405714460888),

1628 
FRAC_CONST
(0.7908565007038445),

1629 
FRAC_CONST
(0.79185682690222425),

1630 
FRAC_CONST
(0.79285503306157412),

1631 
FRAC_CONST
(0.79385111650939566),

1632 
FRAC_CONST
(0.79484507457887377),

1633 
FRAC_CONST
(0.79583690460888357),

1634 
FRAC_CONST
(0.79682660394399751),

1635 
FRAC_CONST
(0.79781416993449272),

1636 
FRAC_CONST
(0.79879959993635785),

1637 
FRAC_CONST
(0.7997828913113002),

1638 
FRAC_CONST
(0.80076404142675273),

1639 
FRAC_CONST
(0.80174304765588156),

1640 
FRAC_CONST
(0.80271990737759213),

1641 
FRAC_CONST
(0.80369461797653707),

1642 
FRAC_CONST
(0.80466717684312306),

1643 
FRAC_CONST
(0.80563758137351682),

1644 
FRAC_CONST
(0.80660582896965372),

1645 
FRAC_CONST
(0.80757191703924336),

1646 
FRAC_CONST
(0.80853584299577752),

1647 
FRAC_CONST
(0.80949760425853612),

1648 
FRAC_CONST
(0.81045719825259477),

1649 
FRAC_CONST
(0.81141462240883167),

1650 
FRAC_CONST
(0.81236987416393436),

1651 
FRAC_CONST
(0.81332295096040608),

1652 
FRAC_CONST
(0.81427385024657373),

1653 
FRAC_CONST
(0.81522256947659355),

1654 
FRAC_CONST
(0.81616910611045879),

1655 
FRAC_CONST
(0.817113457614006),

1656 
FRAC_CONST
(0.81805562145892186),

1657 
FRAC_CONST
(0.81899559512275044),

1658 
FRAC_CONST
(0.81993337608889916),

1659 
FRAC_CONST
(0.82086896184664637),

1660 
FRAC_CONST
(0.8218023498911472),

1661 
FRAC_CONST
(0.82273353772344116),

1662 
FRAC_CONST
(0.82366252285045805),

1663 
FRAC_CONST
(0.82458930278502529),

1664 
FRAC_CONST
(0.82551387504587381),

1665 
FRAC_CONST
(0.82643623715764558),

1666 
FRAC_CONST
(0.82735638665089983),

1667 
FRAC_CONST
(0.82827432106211907),

1668 
FRAC_CONST
(0.82919003793371693),

1669 
FRAC_CONST
(0.83010353481404364),

1670 
FRAC_CONST
(0.83101480925739324),

1671 
FRAC_CONST
(0.83192385882400965),

1672 
FRAC_CONST
(0.83283068108009373),

1673 
FRAC_CONST
(0.8337352735978093),

1674 
FRAC_CONST
(0.83463763395529011),

1675 
FRAC_CONST
(0.83553775973664579),

1676 
FRAC_CONST
(0.83643564853196872),

1677 
FRAC_CONST
(0.83733129793734051),

1678 
FRAC_CONST
(0.83822470555483797),

1679 
FRAC_CONST
(0.83911586899254031),

1680 
FRAC_CONST
(0.84000478586453453),

1681 
FRAC_CONST
(0.84089145379092289),

1682 
FRAC_CONST
(0.84177587039782842),

1683 
FRAC_CONST
(0.84265803331740163),

1684 
FRAC_CONST
(0.84353794018782702),

1685 
FRAC_CONST
(0.844415588653329),

1686 
FRAC_CONST
(0.8452909763641786),

1687 
FRAC_CONST
(0.84616410097669936),

1688 
FRAC_CONST
(0.84703496015327406),

1689 
FRAC_CONST
(0.84790355156235053),

1690 
FRAC_CONST
(0.84876987287844818),

1691 
FRAC_CONST
(0.8496339217821639),

1692 
FRAC_CONST
(0.85049569596017938),

1693 
FRAC_CONST
(0.85135519310526508),

1694 
FRAC_CONST
(0.85221241091628896),

1695 
FRAC_CONST
(0.85306734709822085),

1696 
FRAC_CONST
(0.85391999936213903),

1697 
FRAC_CONST
(0.85477036542523732),

1698 
FRAC_CONST
(0.85561844301082923),

1699 
FRAC_CONST
(0.85646422984835635),

1700 
FRAC_CONST
(0.85730772367339259),

1701 
FRAC_CONST
(0.85814892222765116),

1702 
FRAC_CONST
(0.85898782325899026),

1703 
FRAC_CONST
(0.85982442452141961),

1704 
FRAC_CONST
(0.86065872377510555),

1705 
FRAC_CONST
(0.86149071878637817),

1706 
FRAC_CONST
(0.8623204073277364),

1707 
FRAC_CONST
(0.86314778717785412),

1708 
FRAC_CONST
(0.8639728561215867),

1709 
FRAC_CONST
(0.86479561194997623),

1710 
FRAC_CONST
(0.86561605246025763),

1711 
FRAC_CONST
(0.86643417545586487),

1712 
FRAC_CONST
(0.8672499787464365),

1713 
FRAC_CONST
(0.86806346014782154),

1714 
FRAC_CONST
(0.8688746174820855),

1715 
FRAC_CONST
(0.86968344857751589),

1716 
FRAC_CONST
(0.87048995126862883),

1717 
FRAC_CONST
(0.87129412339617363),

1718 
FRAC_CONST
(0.87209596280713941),

1719 
FRAC_CONST
(0.8728954673547612),

1720 
FRAC_CONST
(0.87369263489852422),

1721 
FRAC_CONST
(0.87448746330417149),

1722 
FRAC_CONST
(0.87527995044370765),

1723 
FRAC_CONST
(0.8760700941954066),

1724 
FRAC_CONST
(0.87685789244381551),

1725 
FRAC_CONST
(0.87764334307976144),

1726 
FRAC_CONST
(0.87842644400035663),

1727 
FRAC_CONST
(0.8792071931090043),

1728 
FRAC_CONST
(0.87998558831540408),

1729 
FRAC_CONST
(0.88076162753555787),

1730 
FRAC_CONST
(0.88153530869177488),

1731 
FRAC_CONST
(0.88230662971267804),

1732 
FRAC_CONST
(0.88307558853320878),

1733 
FRAC_CONST
(0.88384218309463292),

1734 
FRAC_CONST
(0.8846064113445461),

1735 
FRAC_CONST
(0.88536827123687933),

1736 
FRAC_CONST
(0.88612776073190425),

1737 
FRAC_CONST
(0.88688487779623937),

1738 
FRAC_CONST
(0.88763962040285393),

1739 
FRAC_CONST
(0.8883919865310751),

1740 
FRAC_CONST
(0.88914197416659235),

1741 
FRAC_CONST
(0.88988958130146301),

1742 
FRAC_CONST
(0.8906348059341177),

1743 
FRAC_CONST
(0.89137764606936609),

1744 
FRAC_CONST
(0.89211809971840139),

1745 
FRAC_CONST
(0.89285616489880615),

1746 
FRAC_CONST
(0.89359183963455813),

1747 
FRAC_CONST
(0.89432512195603453),

1748 
FRAC_CONST
(0.89505600990001799),

1749 
FRAC_CONST
(0.89578450150970124),

1750 
FRAC_CONST
(0.8965105948346932),

1751 
FRAC_CONST
(0.89723428793102367),

1752 
FRAC_CONST
(0.89795557886114807),

1753 
FRAC_CONST
(0.89867446569395382),

1754 
FRAC_CONST
(0.89939094650476448),

1755 
FRAC_CONST
(0.90010501937534515),

1756 
FRAC_CONST
(0.900816682393908),

1757 
FRAC_CONST
(0.90152593365511691),

1758 
FRAC_CONST
(0.90223277126009283),

1759 
FRAC_CONST
(0.90293719331641886),

1760 
FRAC_CONST
(0.90363919793814496),

1761 
FRAC_CONST
(0.90433878324579353),

1762 
FRAC_CONST
(0.90503594736636439),

1763 
FRAC_CONST
(0.90573068843333915),

1764 
FRAC_CONST
(0.90642300458668679),

1765 
FRAC_CONST
(0.90711289397286898),

1766 
FRAC_CONST
(0.90780035474484411),

1767 
FRAC_CONST
(0.90848538506207266),

1768 
FRAC_CONST
(0.90916798309052227),

1769 
FRAC_CONST
(0.90984814700267291),

1770 
FRAC_CONST
(0.9105258749775208),

1771 
FRAC_CONST
(0.91120116520058425),

1772 
FRAC_CONST
(0.91187401586390815),

1773 
FRAC_CONST
(0.91254442516606893),

1774 
FRAC_CONST
(0.9132123913121788),

1775 
FRAC_CONST
(0.91387791251389161),

1776 
FRAC_CONST
(0.91454098698940678),

1777 
FRAC_CONST
(0.91520161296347435),

1778 
FRAC_CONST
(0.91585978866739981),

1779 
FRAC_CONST
(0.91651551233904871),

1780 
FRAC_CONST
(0.91716878222285148),

1781 
FRAC_CONST
(0.91781959656980805),

1782 
FRAC_CONST
(0.91846795363749245),

1783 
FRAC_CONST
(0.91911385169005766),

1784 
FRAC_CONST
(0.9197572889982405),

1785 
FRAC_CONST
(0.9203982638393654),

1786 
FRAC_CONST
(0.92103677449734989),

1787 
FRAC_CONST
(0.92167281926270861),

1788 
FRAC_CONST
(0.92230639643255874),

1789 
FRAC_CONST
(0.92293750431062316),

1790 
FRAC_CONST
(0.92356614120723612),

1791 
FRAC_CONST
(0.92419230543934783),

1792 
FRAC_CONST
(0.92481599533052783),

1793 
FRAC_CONST
(0.92543720921097061),

1794 
FRAC_CONST
(0.92605594541749991),

1795 
FRAC_CONST
(0.92667220229357261),

1796 
FRAC_CONST
(0.92728597818928349),

1797 
FRAC_CONST
(0.9278972714613698),

1798 
FRAC_CONST
(0.92850608047321548),

1799 
FRAC_CONST
(0.9291124035948557),

1800 
FRAC_CONST
(0.92971623920298097),

1801 
FRAC_CONST
(0.93031758568094147),

1802 
FRAC_CONST
(0.93091644141875196),

1803 
FRAC_CONST
(0.93151280481309506),

1804 
FRAC_CONST
(0.93210667426732674),

1805 
FRAC_CONST
(0.93269804819147983),

1806 
FRAC_CONST
(0.93328692500226818),

1807 
FRAC_CONST
(0.93387330312309147),

1808 
FRAC_CONST
(0.93445718098403896),

1809 
FRAC_CONST
(0.93503855702189376),

1810 
FRAC_CONST
(0.9356174296801375),

1811 
FRAC_CONST
(0.93619379740895381),

1812 
FRAC_CONST
(0.93676765866523259),

1813 
FRAC_CONST
(0.93733901191257496),

1814 
FRAC_CONST
(0.93790785562129597),

1815 
FRAC_CONST
(0.93847418826842988),

1816 
FRAC_CONST
(0.93903800833773399),

1817 
FRAC_CONST
(0.93959931431969212),

1818 
FRAC_CONST
(0.94015810471151917),

1819 
FRAC_CONST
(0.94071437801716529),

1820 
FRAC_CONST
(0.94126813274731924),

1821 
FRAC_CONST
(0.94181936741941319),

1822 
FRAC_CONST
(0.94236808055762578),

1823 
FRAC_CONST
(0.94291427069288691),

1824 
FRAC_CONST
(0.94345793636288133),

1825 
FRAC_CONST
(0.94399907611205225),

1826 
FRAC_CONST
(0.9445376884916058),

1827 
FRAC_CONST
(0.94507377205951448),

1828 
FRAC_CONST
(0.94560732538052128),

1829 
FRAC_CONST
(0.94613834702614352),

1830 
FRAC_CONST
(0.94666683557467624),

1831 
FRAC_CONST
(0.94719278961119657),

1832 
FRAC_CONST
(0.94771620772756759),

1833 
FRAC_CONST
(0.94823708852244104),

1834 
FRAC_CONST
(0.94875543060126255),

1835 
FRAC_CONST
(0.94927123257627433),

1836 
FRAC_CONST
(0.94978449306651924),

1837 
FRAC_CONST
(0.95029521069784428),

1838 
FRAC_CONST
(0.9508033841029051),

1839 
FRAC_CONST
(0.95130901192116835),

1840 
FRAC_CONST
(0.9518120927989161),

1841 
FRAC_CONST
(0.95231262538924943),

1842 
FRAC_CONST
(0.95281060835209208),

1843 
FRAC_CONST
(0.95330604035419386),

1844 
FRAC_CONST
(0.95379892006913403),

1845 
FRAC_CONST
(0.95428924617732525),

1846 
FRAC_CONST
(0.95477701736601728),

1847 
FRAC_CONST
(0.95526223232929941),

1848 
FRAC_CONST
(0.95574488976810545),

1849 
FRAC_CONST
(0.95622498839021619),

1850 
FRAC_CONST
(0.95670252691026292),

1851 
FRAC_CONST
(0.95717750404973156),

1852 
FRAC_CONST
(0.95764991853696524),

1853 
FRAC_CONST
(0.95811976910716812),

1854 
FRAC_CONST
(0.95858705450240911),

1855 
FRAC_CONST
(0.95905177347162429),

1856 
FRAC_CONST
(0.95951392477062125),

1857 
FRAC_CONST
(0.95997350716208196),

1858 
FRAC_CONST
(0.96043051941556579),

1859 
FRAC_CONST
(0.96088496030751369),

1860 
FRAC_CONST
(0.96133682862125036),

1861 
FRAC_CONST
(0.96178612314698864),

1862 
FRAC_CONST
(0.96223284268183173),

1863 
FRAC_CONST
(0.9626769860297768),

1864 
FRAC_CONST
(0.96311855200171881),

1865 
FRAC_CONST
(0.96355753941545252),

1866 
FRAC_CONST
(0.96399394709567654),

1867 
FRAC_CONST
(0.96442777387399625),

1868 
FRAC_CONST
(0.96485901858892686),

1869 
FRAC_CONST
(0.96528768008589627),

1870 
FRAC_CONST
(0.96571375721724895),

1871 
FRAC_CONST
(0.96613724884224783),

1872 
FRAC_CONST
(0.96655815382707866),

1873 
FRAC_CONST
(0.96697647104485207),

1874 
FRAC_CONST
(0.96739219937560694),

1875 
FRAC_CONST
(0.96780533770631338),

1876 
FRAC_CONST
(0.96821588493087585),

1877 
FRAC_CONST
(0.9686238399501359),

1878 
FRAC_CONST
(0.96902920167187501),

1879 
FRAC_CONST
(0.96943196901081796),

1880 
FRAC_CONST
(0.96983214088863534),

1881 
FRAC_CONST
(0.9702297162339466),

1882 
FRAC_CONST
(0.97062469398232287),

1883 
FRAC_CONST
(0.97101707307629004),

1884 
FRAC_CONST
(0.97140685246533098),

1885 
FRAC_CONST
(0.97179403110588902),

1886 
FRAC_CONST
(0.97217860796137046),

1887 
FRAC_CONST
(0.97256058200214734),

1888 
FRAC_CONST
(0.97293995220556007),

1889 
FRAC_CONST
(0.97331671755592064),

1890 
FRAC_CONST
(0.97369087704451474),

1891 
FRAC_CONST
(0.97406242966960455),

1892 
FRAC_CONST
(0.97443137443643235),

1893 
FRAC_CONST
(0.97479771035722163),

1894 
FRAC_CONST
(0.97516143645118103),

1895 
FRAC_CONST
(0.97552255174450631),

1896 
FRAC_CONST
(0.97588105527038305),

1897 
FRAC_CONST
(0.97623694606898959),

1898 
FRAC_CONST
(0.97659022318749911),

1899 
FRAC_CONST
(0.97694088568008242),

1900 
FRAC_CONST
(0.97728893260791039),

1901 
FRAC_CONST
(0.97763436303915685),

1902 
FRAC_CONST
(0.97797717604900047),

1903 
FRAC_CONST
(0.97831737071962765),

1904 
FRAC_CONST
(0.97865494614023485),

1905 
FRAC_CONST
(0.97898990140703124),

1906 
FRAC_CONST
(0.97932223562324061),

1907 
FRAC_CONST
(0.97965194789910426),

1908 
FRAC_CONST
(0.9799790373518833),

1909 
FRAC_CONST
(0.98030350310586067),

1910 
FRAC_CONST
(0.98062534429234405),

1911 
FRAC_CONST
(0.98094456004966768),

1912 
FRAC_CONST
(0.98126114952319499),

1913 
FRAC_CONST
(0.98157511186532054),

1914 
FRAC_CONST
(0.98188644623547261),

1915 
FRAC_CONST
(0.98219515180011563),

1916 
FRAC_CONST
(0.98250122773275184),

1917 
FRAC_CONST
(0.98280467321392362),

1918 
FRAC_CONST
(0.98310548743121629),

1919 
FRAC_CONST
(0.98340366957925973),

1920 
FRAC_CONST
(0.98369921885973044),

1921 
FRAC_CONST
(0.98399213448135414),

1922 
FRAC_CONST
(0.98428241565990748),

1923 
FRAC_CONST
(0.98457006161822058),

1924 
FRAC_CONST
(0.98485507158617835),

1925 
FRAC_CONST
(0.98513744480072363),

1926 
FRAC_CONST
(0.98541718050585803),

1927 
FRAC_CONST
(0.98569427795264519),

1928 
FRAC_CONST
(0.98596873639921168),

1929 
FRAC_CONST
(0.98624055511074971),

1930 
FRAC_CONST
(0.98650973335951875),

1931 
FRAC_CONST
(0.98677627042484772),

1932 
FRAC_CONST
(0.98704016559313645),

1933 
FRAC_CONST
(0.98730141815785832),

1934 
FRAC_CONST
(0.98756002741956173),

1935 
FRAC_CONST
(0.9878159926858715),

1936 
FRAC_CONST
(0.98806931327149194),

1937 
FRAC_CONST
(0.98831998849820735),

1938 
FRAC_CONST
(0.98856801769488489),

1939 
FRAC_CONST
(0.98881340019747566),

1940 
FRAC_CONST
(0.98905613534901682),

1941 
FRAC_CONST
(0.98929622249963345),

1942 
FRAC_CONST
(0.98953366100653983),

1943 
FRAC_CONST
(0.98976845023404181),

1944 
FRAC_CONST
(0.99000058955353776),

1945 
FRAC_CONST
(0.99023007834352106),

1946 
FRAC_CONST
(0.99045691598958097),

1947 
FRAC_CONST
(0.99068110188440506),

1948 
FRAC_CONST
(0.99090263542778001),

1949 
FRAC_CONST
(0.99112151602659404),

1950 
FRAC_CONST
(0.99133774309483769),

1951 
FRAC_CONST
(0.99155131605360625),

1952 
FRAC_CONST
(0.99176223433110056),

1953 
FRAC_CONST
(0.99197049736262888),

1954 
FRAC_CONST
(0.99217610459060845),

1955 
FRAC_CONST
(0.99237905546456673),

1956 
FRAC_CONST
(0.99257934944114334),

1957 
FRAC_CONST
(0.99277698598409092),

1958 
FRAC_CONST
(0.99297196456427694),

1959 
FRAC_CONST
(0.99316428465968509),

1960 
FRAC_CONST
(0.99335394575541669),

1961 
FRAC_CONST
(0.99354094734369169),

1962 
FRAC_CONST
(0.99372528892385081),

1963 
FRAC_CONST
(0.99390697000235606),

1964 
FRAC_CONST
(0.99408599009279242),

1965 
FRAC_CONST
(0.99426234871586938),

1966 
FRAC_CONST
(0.99443604539942176),

1967 
FRAC_CONST
(0.99460707967841133),

1968 
FRAC_CONST
(0.99477545109492771),

1969 
FRAC_CONST
(0.99494115919819004),

1970 
FRAC_CONST
(0.99510420354454787),

1971 
FRAC_CONST
(0.99526458369748239),

1972 
FRAC_CONST
(0.99542229922760772),

1973 
FRAC_CONST
(0.99557734971267187),

1974 
FRAC_CONST
(0.9957297347375581),

1975 
FRAC_CONST
(0.99587945389428578),

1976 
FRAC_CONST
(0.99602650678201154),

1977 
FRAC_CONST
(0.99617089300703077),

1978 
FRAC_CONST
(0.996312612182778),

1979 
FRAC_CONST
(0.99645166392982831),

1980 
FRAC_CONST
(0.99658804787589839),

1981 
FRAC_CONST
(0.99672176365584741),

1982 
FRAC_CONST
(0.99685281091167788),

1983 
FRAC_CONST
(0.99698118929253687),

1984 
FRAC_CONST
(0.99710689845471678),

1985 
FRAC_CONST
(0.99722993806165661),

1986 
FRAC_CONST
(0.99735030778394196),

1987 
FRAC_CONST
(0.99746800729930707),

1988 
FRAC_CONST
(0.99758303629263489),

1989 
FRAC_CONST
(0.99769539445595812),

1990 
FRAC_CONST
(0.99780508148846014),

1991 
FRAC_CONST
(0.99791209709647588),

1992 
FRAC_CONST
(0.99801644099349218),

1993 
FRAC_CONST
(0.99811811290014918),

1994 
FRAC_CONST
(0.9982171125442405),

1995 
FRAC_CONST
(0.9983134396607144),

1996 
FRAC_CONST
(0.99840709399167404),

1997 
FRAC_CONST
(0.99849807528637868),

1998 
FRAC_CONST
(0.99858638330124405),

1999 
FRAC_CONST
(0.99867201779984294),

2000 
FRAC_CONST
(0.99875497855290607),

2001 
FRAC_CONST
(0.99883526533832245),

2002 
FRAC_CONST
(0.99891287794114036),

2003 
FRAC_CONST
(0.99898781615356746),

2004 
FRAC_CONST
(0.99906007977497147),

2005 
FRAC_CONST
(0.99912966861188113),

2006 
FRAC_CONST
(0.99919658247798593),

2007 
FRAC_CONST
(0.99926082119413751),

2008 
FRAC_CONST
(0.99932238458834954),

2009 
FRAC_CONST
(0.999381272495798),

2010 
FRAC_CONST
(0.99943748475882255),

2011 
FRAC_CONST
(0.9994910212269259),

2012 
FRAC_CONST
(0.99954188175677483),

2013 
FRAC_CONST
(0.99959006621220048),

2014 
FRAC_CONST
(0.99963557446419837),

2015 
FRAC_CONST
(0.99967840639092931),

2016 
FRAC_CONST
(0.99971856187771946),

2017 
FRAC_CONST
(0.99975604081706027),

2018 
FRAC_CONST
(0.99979084310860955),

2019 
FRAC_CONST
(0.99982296865919107),

2020 
FRAC_CONST
(0.99985241738279484),

2021 
FRAC_CONST
(0.99987918920057806),

2022 
FRAC_CONST
(0.99990328404086426),

2023 
FRAC_CONST
(0.9999247018391445),

2024 
FRAC_CONST
(0.99994344253807688),

2025 
FRAC_CONST
(0.99995950608748674),

2026 
FRAC_CONST
(0.99997289244436727),

2027 
FRAC_CONST
(0.99998360157287902),

2028 
FRAC_CONST
(0.9999916334443506),

2029 
FRAC_CONST
(0.99999698803727821),

2030 
FRAC_CONST
(0.99999966533732598)

2034 
ALIGN
 c⁄° 
ªÆ_t
 
söe_sh‹t_128
[] =

2036 
FRAC_CONST
(0.0061358846491544753),

2037 
FRAC_CONST
(0.01840672990580482),

2038 
FRAC_CONST
(0.030674803176636626),

2039 
FRAC_CONST
(0.04293825693494082),

2040 
FRAC_CONST
(0.055195244349689934),

2041 
FRAC_CONST
(0.067443919563664051),

2042 
FRAC_CONST
(0.079682437971430126),

2043 
FRAC_CONST
(0.091908956497132724),

2044 
FRAC_CONST
(0.10412163387205459),

2045 
FRAC_CONST
(0.11631863091190475),

2046 
FRAC_CONST
(0.12849811079379317),

2047 
FRAC_CONST
(0.14065823933284921),

2048 
FRAC_CONST
(0.15279718525844344),

2049 
FRAC_CONST
(0.16491312048996989),

2050 
FRAC_CONST
(0.17700422041214875),

2051 
FRAC_CONST
(0.18906866414980619),

2052 
FRAC_CONST
(0.2011046348420919),

2053 
FRAC_CONST
(0.21311031991609136),

2054 
FRAC_CONST
(0.22508391135979283),

2055 
FRAC_CONST
(0.2370236059943672),

2056 
FRAC_CONST
(0.24892760574572015),

2057 
FRAC_CONST
(0.26079411791527551),

2058 
FRAC_CONST
(0.27262135544994898),

2059 
FRAC_CONST
(0.28440753721127188),

2060 
FRAC_CONST
(0.29615088824362379),

2061 
FRAC_CONST
(0.30784964004153487),

2062 
FRAC_CONST
(0.31950203081601569),

2063 
FRAC_CONST
(0.33110630575987643),

2064 
FRAC_CONST
(0.34266071731199438),

2065 
FRAC_CONST
(0.35416352542049034),

2066 
FRAC_CONST
(0.36561299780477385),

2067 
FRAC_CONST
(0.37700741021641826),

2068 
FRAC_CONST
(0.38834504669882625),

2069 
FRAC_CONST
(0.39962419984564679),

2070 
FRAC_CONST
(0.41084317105790391),

2071 
FRAC_CONST
(0.42200027079979968),

2072 
FRAC_CONST
(0.43309381885315196),

2073 
FRAC_CONST
(0.4441221445704292),

2074 
FRAC_CONST
(0.45508358712634384),

2075 
FRAC_CONST
(0.46597649576796618),

2076 
FRAC_CONST
(0.47679923006332209),

2077 
FRAC_CONST
(0.487550160148436),

2078 
FRAC_CONST
(0.49822766697278187),

2079 
FRAC_CONST
(0.50883014254310699),

2080 
FRAC_CONST
(0.51935599016558964),

2081 
FRAC_CONST
(0.52980362468629461),

2082 
FRAC_CONST
(0.54017147272989285),

2083 
FRAC_CONST
(0.55045797293660481),

2084 
FRAC_CONST
(0.56066157619733603),

2085 
FRAC_CONST
(0.57078074588696726),

2086 
FRAC_CONST
(0.58081395809576453),

2087 
FRAC_CONST
(0.59075970185887416),

2088 
FRAC_CONST
(0.60061647938386897),

2089 
FRAC_CONST
(0.61038280627630948),

2090 
FRAC_CONST
(0.6200572117632891),

2091 
FRAC_CONST
(0.62963823891492698),

2092 
FRAC_CONST
(0.63912444486377573),

2093 
FRAC_CONST
(0.64851440102211244),

2094 
FRAC_CONST
(0.65780669329707864),

2095 
FRAC_CONST
(0.66699992230363747),

2096 
FRAC_CONST
(0.67609270357531592),

2097 
FRAC_CONST
(0.68508366777270036),

2098 
FRAC_CONST
(0.693971460889654),

2099 
FRAC_CONST
(0.7027547444572253),

2100 
FRAC_CONST
(0.71143219574521643),

2101 
FRAC_CONST
(0.72000250796138165),

2102 
FRAC_CONST
(0.7284643904482252),

2103 
FRAC_CONST
(0.73681656887736979),

2104 
FRAC_CONST
(0.74505778544146595),

2105 
FRAC_CONST
(0.75318679904361241),

2106 
FRAC_CONST
(0.76120238548426178),

2107 
FRAC_CONST
(0.76910333764557959),

2108 
FRAC_CONST
(0.77688846567323244),

2109 
FRAC_CONST
(0.78455659715557524),

2110 
FRAC_CONST
(0.79210657730021239),

2111 
FRAC_CONST
(0.79953726910790501),

2112 
FRAC_CONST
(0.80684755354379922),

2113 
FRAC_CONST
(0.8140363297059483),

2114 
FRAC_CONST
(0.82110251499110465),

2115 
FRAC_CONST
(0.8280450452577558),

2116 
FRAC_CONST
(0.83486287498638001),

2117 
FRAC_CONST
(0.84155497743689833),

2118 
FRAC_CONST
(0.84812034480329712),

2119 
FRAC_CONST
(0.85455798836540053),

2120 
FRAC_CONST
(0.86086693863776731),

2121 
FRAC_CONST
(0.86704624551569265),

2122 
FRAC_CONST
(0.87309497841829009),

2123 
FRAC_CONST
(0.87901222642863341),

2124 
FRAC_CONST
(0.88479709843093779),

2125 
FRAC_CONST
(0.89044872324475788),

2126 
FRAC_CONST
(0.89596624975618511),

2127 
FRAC_CONST
(0.90134884704602203),

2128 
FRAC_CONST
(0.90659570451491533),

2129 
FRAC_CONST
(0.91170603200542988),

2130 
FRAC_CONST
(0.9166790599210427),

2131 
FRAC_CONST
(0.9215140393420419),

2132 
FRAC_CONST
(0.92621024213831127),

2133 
FRAC_CONST
(0.93076696107898371),

2134 
FRAC_CONST
(0.9351835099389475),

2135 
FRAC_CONST
(0.93945922360218992),

2136 
FRAC_CONST
(0.94359345816196039),

2137 
FRAC_CONST
(0.94758559101774109),

2138 
FRAC_CONST
(0.95143502096900834),

2139 
FRAC_CONST
(0.95514116830577067),

2140 
FRAC_CONST
(0.9587034748958716),

2141 
FRAC_CONST
(0.96212140426904158),

2142 
FRAC_CONST
(0.9653944416976894),

2143 
FRAC_CONST
(0.96852209427441727),

2144 
FRAC_CONST
(0.97150389098625178),

2145 
FRAC_CONST
(0.97433938278557586),

2146 
FRAC_CONST
(0.97702814265775439),

2147 
FRAC_CONST
(0.97956976568544052),

2148 
FRAC_CONST
(0.98196386910955524),

2149 
FRAC_CONST
(0.98421009238692903),

2150 
FRAC_CONST
(0.98630809724459867),

2151 
FRAC_CONST
(0.98825756773074946),

2152 
FRAC_CONST
(0.99005821026229712),

2153 
FRAC_CONST
(0.99170975366909953),

2154 
FRAC_CONST
(0.9932119492347945),

2155 
FRAC_CONST
(0.99456457073425542),

2156 
FRAC_CONST
(0.99576741446765982),

2157 
FRAC_CONST
(0.99682029929116567),

2158 
FRAC_CONST
(0.99772306664419164),

2159 
FRAC_CONST
(0.99847558057329477),

2160 
FRAC_CONST
(0.99907772775264536),

2161 
FRAC_CONST
(0.99952941750109314),

2162 
FRAC_CONST
(0.9998305817958234),

2163 
FRAC_CONST
(0.99998117528260111)

2166 #ifde‡
ALLOW_SMALL_FRAMELENGTH


2167 
ALIGN
 c⁄° 
ªÆ_t
 
söe_sh‹t_120
[] =

2169 
FRAC_CONST
(0.0065449379673518581),

2170 
FRAC_CONST
(0.019633692460628301),

2171 
FRAC_CONST
(0.032719082821776137),

2172 
FRAC_CONST
(0.045798866936520771),

2173 
FRAC_CONST
(0.058870803651189033),

2174 
FRAC_CONST
(0.071932653156719387),

2175 
FRAC_CONST
(0.084982177372441667),

2176 
FRAC_CONST
(0.09801714032956059),

2177 
FRAC_CONST
(0.11103530855427769),

2178 
FRAC_CONST
(0.12403445145048532),

2179 
FRAC_CONST
(0.13701234168196802),

2180 
FRAC_CONST
(0.14996675555404498),

2181 
FRAC_CONST
(0.16289547339458874),

2182 
FRAC_CONST
(0.17579627993435451),

2183 
FRAC_CONST
(0.18866696468655525),

2184 
FRAC_CONST
(0.2015053223256171),

2185 
FRAC_CONST
(0.21430915306505074),

2186 
FRAC_CONST
(0.2270762630343732),

2187 
FRAC_CONST
(0.23980446465501654),

2188 
FRAC_CONST
(0.25249157701515795),

2189 
FRAC_CONST
(0.26513542624340797),

2190 
FRAC_CONST
(0.27773384588129219),

2191 
FRAC_CONST
(0.29028467725446233),

2192 
FRAC_CONST
(0.3027857698425746),

2193 
FRAC_CONST
(0.31523498164776964),

2194 
FRAC_CONST
(0.32763017956169349),

2195 
FRAC_CONST
(0.33996923973099424),

2196 
FRAC_CONST
(0.35225004792123354),

2197 
FRAC_CONST
(0.36447049987914965),

2198 
FRAC_CONST
(0.37662850169321077),

2199 
FRAC_CONST
(0.38872197015239557),

2200 
FRAC_CONST
(0.40074883310314097),

2201 
FRAC_CONST
(0.41270702980439467),

2202 
FRAC_CONST
(0.42459451128071307),

2203 
FRAC_CONST
(0.43640924067334208),

2204 
FRAC_CONST
(0.44814919358922256),

2205 
FRAC_CONST
(0.45981235844785984),

2206 
FRAC_CONST
(0.47139673682599764),

2207 
FRAC_CONST
(0.48290034380003727),

2208 
FRAC_CONST
(0.49432120828614462),

2209 
FRAC_CONST
(0.50565737337798455),

2210 
FRAC_CONST
(0.51690689668202761),

2211 
FRAC_CONST
(0.52806785065036799),

2212 
FRAC_CONST
(0.53913832291100017),

2213 
FRAC_CONST
(0.55011641659549337),

2214 
FRAC_CONST
(0.56100025066400983),

2215 
FRAC_CONST
(0.57178796022761225),

2216 
FRAC_CONST
(0.58247769686780215),

2217 
FRAC_CONST
(0.59306762895323706),

2218 
FRAC_CONST
(0.60355594195357143),

2219 
FRAC_CONST
(0.61394083875036642),

2220 
FRAC_CONST
(0.62422053994501758),

2221 
FRAC_CONST
(0.63439328416364549),

2222 
FRAC_CONST
(0.64445732835889735),

2223 
FRAC_CONST
(0.65441094810861034),

2224 
FRAC_CONST
(0.66425243791128175),

2225 
FRAC_CONST
(0.67398011147829784),

2226 
FRAC_CONST
(0.68359230202287125),

2227 
FRAC_CONST
(0.69308736254563585),

2228 
FRAC_CONST
(0.70246366611685174),

2229 
FRAC_CONST
(0.71171960615517138),

2230 
FRAC_CONST
(0.72085359670291882),

2231 
FRAC_CONST
(0.7298640726978356),

2232 
FRAC_CONST
(0.73874949024124625),

2233 
FRAC_CONST
(0.74750832686259672),

2234 
FRAC_CONST
(0.75613908178032285),

2235 
FRAC_CONST
(0.76464027615900032),

2236 
FRAC_CONST
(0.77301045336273699),

2237 
FRAC_CONST
(0.78124817920475853),

2238 
FRAC_CONST
(0.78935204219315003),

2239 
FRAC_CONST
(0.79732065377270711),

2240 
FRAC_CONST
(0.80515264856285829),

2241 
FRAC_CONST
(0.81284668459161513),

2242 
FRAC_CONST
(0.82040144352551359),

2243 
FRAC_CONST
(0.82781563089550203),

2244 
FRAC_CONST
(0.83508797631874299),

2245 
FRAC_CONST
(0.84221723371628654),

2246 
FRAC_CONST
(0.84920218152657889),

2247 
FRAC_CONST
(0.85604162291477137),

2248 
FRAC_CONST
(0.86273438597779184),

2249 
FRAC_CONST
(0.86927932394514362),

2250 
FRAC_CONST
(0.87567531537539967),

2251 
FRAC_CONST
(0.88192126434835494),

2252 
FRAC_CONST
(0.88801610065280734),

2253 
FRAC_CONST
(0.89395877996993212),

2254 
FRAC_CONST
(0.8997482840522214),

2255 
FRAC_CONST
(0.90538362089795521),

2256 
FRAC_CONST
(0.91086382492117568),

2257 
FRAC_CONST
(0.91618795711713596),

2258 
FRAC_CONST
(0.92135510522319242),

2259 
FRAC_CONST
(0.9263643838751181),

2260 
FRAC_CONST
(0.93121493475880346),

2261 
FRAC_CONST
(0.93590592675732565),

2262 
FRAC_CONST
(0.94043655609335486),

2263 
FRAC_CONST
(0.94480604646687805),

2264 
FRAC_CONST
(0.94901364918821385),

2265 
FRAC_CONST
(0.95305864330629697),

2266 
FRAC_CONST
(0.95694033573220882),

2267 
FRAC_CONST
(0.9606580613579353),

2268 
FRAC_CONST
(0.96421118317032928),

2269 
FRAC_CONST
(0.96759909236025976),

2270 
FRAC_CONST
(0.9708212084269281),

2271 
FRAC_CONST
(0.97387697927733363),

2272 
FRAC_CONST
(0.97676588132087239),

2273 
FRAC_CONST
(0.97948741955905139),

2274 
FRAC_CONST
(0.98204112767030394),

2275 
FRAC_CONST
(0.98442656808989171),

2276 
FRAC_CONST
(0.98664333208487898),

2277 
FRAC_CONST
(0.98869103982416728),

2278 
FRAC_CONST
(0.99056934044357725),

2279 
FRAC_CONST
(0.99227791210596705),

2280 
FRAC_CONST
(0.99381646205637808),

2281 
FRAC_CONST
(0.99518472667219682),

2282 
FRAC_CONST
(0.99638247150832537),

2283 
FRAC_CONST
(0.99740949133735191),

2284 
FRAC_CONST
(0.99826561018471593),

2285 
FRAC_CONST
(0.99895068135886012),

2286 
FRAC_CONST
(0.99946458747636568),

2287 
FRAC_CONST
(0.99980724048206482),

2288 
FRAC_CONST
(0.99997858166412923)

2292 #ifde‡
LD_DEC


2293 
ALIGN
 c⁄° 
ªÆ_t
 
söe_mid_512
[] =

2295 
FRAC_CONST
(0.0015339801862847655),

2296 
FRAC_CONST
(0.0046019261204485705),

2297 
FRAC_CONST
(0.007669828739531097),

2298 
FRAC_CONST
(0.010737659167264491),

2299 
FRAC_CONST
(0.013805388528060391),

2300 
FRAC_CONST
(0.01687298794728171),

2301 
FRAC_CONST
(0.019940428551514441),

2302 
FRAC_CONST
(0.023007681468839369),

2303 
FRAC_CONST
(0.026074717829103901),

2304 
FRAC_CONST
(0.029141508764193722),

2305 
FRAC_CONST
(0.032208025408304586),

2306 
FRAC_CONST
(0.035274238898213947),

2307 
FRAC_CONST
(0.038340120373552694),

2308 
FRAC_CONST
(0.041405640977076739),

2309 
FRAC_CONST
(0.044470771854938668),

2310 
FRAC_CONST
(0.047535484156959303),

2311 
FRAC_CONST
(0.050599749036899282),

2312 
FRAC_CONST
(0.05366353765273052),

2313 
FRAC_CONST
(0.056726821166907748),

2314 
FRAC_CONST
(0.059789570746639868),

2315 
FRAC_CONST
(0.062851757564161406),

2316 
FRAC_CONST
(0.065913352797003805),

2317 
FRAC_CONST
(0.068974327628266746),

2318 
FRAC_CONST
(0.072034653246889332),

2319 
FRAC_CONST
(0.075094300847921305),

2320 
FRAC_CONST
(0.078153241632794232),

2321 
FRAC_CONST
(0.081211446809592441),

2322 
FRAC_CONST
(0.084268887593324071),

2323 
FRAC_CONST
(0.087325535206192059),

2324 
FRAC_CONST
(0.090381360877864983),

2325 
FRAC_CONST
(0.093436335845747787),

2326 
FRAC_CONST
(0.096490431355252593),

2327 
FRAC_CONST
(0.099543618660069319),

2328 
FRAC_CONST
(0.10259586902243628),

2329 
FRAC_CONST
(0.10564715371341062),

2330 
FRAC_CONST
(0.10869744401313872),

2331 
FRAC_CONST
(0.11174671121112659),

2332 
FRAC_CONST
(0.11479492660651008),

2333 
FRAC_CONST
(0.11784206150832498),

2334 
FRAC_CONST
(0.12088808723577708),

2335 
FRAC_CONST
(0.12393297511851216),

2336 
FRAC_CONST
(0.12697669649688587),

2337 
FRAC_CONST
(0.13001922272223335),

2338 
FRAC_CONST
(0.13306052515713906),

2339 
FRAC_CONST
(0.1361005751757062),

2340 
FRAC_CONST
(0.1391393441638262),

2341 
FRAC_CONST
(0.14217680351944803),

2342 
FRAC_CONST
(0.14521292465284746),

2343 
FRAC_CONST
(0.14824767898689603),

2344 
FRAC_CONST
(0.15128103795733022),

2345 
FRAC_CONST
(0.1543129730130201),

2346 
FRAC_CONST
(0.15734345561623825),

2347 
FRAC_CONST
(0.16037245724292828),

2348 
FRAC_CONST
(0.16339994938297323),

2349 
FRAC_CONST
(0.1664259035404641),

2350 
FRAC_CONST
(0.16945029123396796),

2351 
FRAC_CONST
(0.17247308399679595),

2352 
FRAC_CONST
(0.17549425337727143),

2353 
FRAC_CONST
(0.17851377093899751),

2354 
FRAC_CONST
(0.18153160826112497),

2355 
FRAC_CONST
(0.18454773693861962),

2356 
FRAC_CONST
(0.1875621285825296),

2357 
FRAC_CONST
(0.19057475482025274),

2358 
FRAC_CONST
(0.19358558729580361),

2359 
FRAC_CONST
(0.19659459767008022),

2360 
FRAC_CONST
(0.19960175762113097),

2361 
FRAC_CONST
(0.20260703884442113),

2362 
FRAC_CONST
(0.20561041305309924),

2363 
FRAC_CONST
(0.20861185197826349),

2364 
FRAC_CONST
(0.21161132736922755),

2365 
FRAC_CONST
(0.21460881099378676),

2366 
FRAC_CONST
(0.21760427463848364),

2367 
FRAC_CONST
(0.22059769010887351),

2368 
FRAC_CONST
(0.22358902922978999),

2369 
FRAC_CONST
(0.22657826384561),

2370 
FRAC_CONST
(0.22956536582051887),

2371 
FRAC_CONST
(0.23255030703877524),

2372 
FRAC_CONST
(0.23553305940497549),

2373 
FRAC_CONST
(0.23851359484431842),

2374 
FRAC_CONST
(0.24149188530286933),

2375 
FRAC_CONST
(0.24446790274782415),

2376 
FRAC_CONST
(0.24744161916777327),

2377 
FRAC_CONST
(0.25041300657296522),

2378 
FRAC_CONST
(0.25338203699557016),

2379 
FRAC_CONST
(0.25634868248994291),

2380 
FRAC_CONST
(0.25931291513288623),

2381 
FRAC_CONST
(0.26227470702391359),

2382 
FRAC_CONST
(0.26523403028551179),

2383 
FRAC_CONST
(0.26819085706340318),

2384 
FRAC_CONST
(0.27114515952680801),

2385 
FRAC_CONST
(0.27409690986870638),

2386 
FRAC_CONST
(0.2770460803060999),

2387 
FRAC_CONST
(0.27999264308027322),

2388 
FRAC_CONST
(0.28293657045705539),

2389 
FRAC_CONST
(0.28587783472708062),

2390 
FRAC_CONST
(0.28881640820604948),

2391 
FRAC_CONST
(0.29175226323498926),

2392 
FRAC_CONST
(0.29468537218051433),

2393 
FRAC_CONST
(0.2976157074350862),

2394 
FRAC_CONST
(0.30054324141727345),

2395 
FRAC_CONST
(0.30346794657201132),

2396 
FRAC_CONST
(0.30638979537086092),

2397 
FRAC_CONST
(0.30930876031226873),

2398 
FRAC_CONST
(0.31222481392182488),

2399 
FRAC_CONST
(0.31513792875252244),

2400 
FRAC_CONST
(0.31804807738501495),

2401 
FRAC_CONST
(0.32095523242787521),

2402 
FRAC_CONST
(0.32385936651785285),

2403 
FRAC_CONST
(0.32676045232013173),

2404 
FRAC_CONST
(0.32965846252858749),

2405 
FRAC_CONST
(0.33255336986604422),

2406 
FRAC_CONST
(0.3354451470845316),

2407 
FRAC_CONST
(0.33833376696554113),

2408 
FRAC_CONST
(0.34121920232028236),

2409 
FRAC_CONST
(0.34410142598993881),

2410 
FRAC_CONST
(0.34698041084592368),

2411 
FRAC_CONST
(0.34985612979013492),

2412 
FRAC_CONST
(0.35272855575521073),

2413 
FRAC_CONST
(0.35559766170478385),

2414 
FRAC_CONST
(0.35846342063373654),

2415 
FRAC_CONST
(0.36132580556845428),

2416 
FRAC_CONST
(0.36418478956707989),

2417 
FRAC_CONST
(0.36704034571976718),

2418 
FRAC_CONST
(0.3698924471489341),

2419 
FRAC_CONST
(0.37274106700951576),

2420 
FRAC_CONST
(0.37558617848921722),

2421 
FRAC_CONST
(0.37842775480876556),

2422 
FRAC_CONST
(0.38126576922216238),

2423 
FRAC_CONST
(0.38410019501693504),

2424 
FRAC_CONST
(0.38693100551438858),

2425 
FRAC_CONST
(0.38975817406985641),

2426 
FRAC_CONST
(0.39258167407295147),

2427 
FRAC_CONST
(0.39540147894781635),

2428 
FRAC_CONST
(0.39821756215337356),

2429 
FRAC_CONST
(0.40102989718357562),

2430 
FRAC_CONST
(0.40383845756765407),

2431 
FRAC_CONST
(0.40664321687036903),

2432 
FRAC_CONST
(0.40944414869225759),

2433 
FRAC_CONST
(0.41224122666988289),

2434 
FRAC_CONST
(0.41503442447608163),

2435 
FRAC_CONST
(0.41782371582021227),

2436 
FRAC_CONST
(0.42060907444840251),

2437 
FRAC_CONST
(0.42339047414379605),

2438 
FRAC_CONST
(0.42616788872679962),

2439 
FRAC_CONST
(0.42894129205532949),

2440 
FRAC_CONST
(0.43171065802505726),

2441 
FRAC_CONST
(0.43447596056965565),

2442 
FRAC_CONST
(0.43723717366104409),

2443 
FRAC_CONST
(0.43999427130963326),

2444 
FRAC_CONST
(0.44274722756457002),

2445 
FRAC_CONST
(0.44549601651398174),

2446 
FRAC_CONST
(0.44824061228521989),

2447 
FRAC_CONST
(0.45098098904510386),

2448 
FRAC_CONST
(0.45371712100016387),

2449 
FRAC_CONST
(0.45644898239688392),

2450 
FRAC_CONST
(0.45917654752194409),

2451 
FRAC_CONST
(0.46189979070246273),

2452 
FRAC_CONST
(0.46461868630623782),

2453 
FRAC_CONST
(0.46733320874198842),

2454 
FRAC_CONST
(0.47004333245959562),

2455 
FRAC_CONST
(0.47274903195034279),

2456 
FRAC_CONST
(0.47545028174715587),

2457 
FRAC_CONST
(0.47814705642484301),

2458 
FRAC_CONST
(0.48083933060033396),

2459 
FRAC_CONST
(0.48352707893291874),

2460 
FRAC_CONST
(0.48621027612448642),

2461 
FRAC_CONST
(0.48888889691976317),

2462 
FRAC_CONST
(0.4915629161065499),

2463 
FRAC_CONST
(0.49423230851595967),

2464 
FRAC_CONST
(0.49689704902265447),

2465 
FRAC_CONST
(0.49955711254508184),

2466 
FRAC_CONST
(0.50221247404571079),

2467 
FRAC_CONST
(0.50486310853126759),

2468 
FRAC_CONST
(0.50750899105297087),

2469 
FRAC_CONST
(0.51015009670676681),

2470 
FRAC_CONST
(0.51278640063356296),

2471 
FRAC_CONST
(0.51541787801946293),

2472 
FRAC_CONST
(0.51804450409599934),

2473 
FRAC_CONST
(0.52066625414036716),

2474 
FRAC_CONST
(0.52328310347565643),

2475 
FRAC_CONST
(0.52589502747108463),

2476 
FRAC_CONST
(0.52850200154222848),

2477 
FRAC_CONST
(0.531104001151255),

2478 
FRAC_CONST
(0.53370100180715296),

2479 
FRAC_CONST
(0.53629297906596318),

2480 
FRAC_CONST
(0.53887990853100842),

2481 
FRAC_CONST
(0.54146176585312344),

2482 
FRAC_CONST
(0.54403852673088382),

2483 
FRAC_CONST
(0.54661016691083486),

2484 
FRAC_CONST
(0.54917666218771966),

2485 
FRAC_CONST
(0.55173798840470734),

2486 
FRAC_CONST
(0.55429412145362),

2487 
FRAC_CONST
(0.5568450372751601),

2488 
FRAC_CONST
(0.55939071185913614),

2489 
FRAC_CONST
(0.56193112124468947),

2490 
FRAC_CONST
(0.5644662415205195),

2491 
FRAC_CONST
(0.56699604882510868),

2492 
FRAC_CONST
(0.56952051934694714),

2493 
FRAC_CONST
(0.57203962932475705),

2494 
FRAC_CONST
(0.57455335504771576),

2495 
FRAC_CONST
(0.57706167285567944),

2496 
FRAC_CONST
(0.57956455913940563),

2497 
FRAC_CONST
(0.58206199034077544),

2498 
FRAC_CONST
(0.58455394295301533),

2499 
FRAC_CONST
(0.58704039352091797),

2500 
FRAC_CONST
(0.58952131864106394),

2501 
FRAC_CONST
(0.59199669496204099),

2502 
FRAC_CONST
(0.59446649918466443),

2503 
FRAC_CONST
(0.5969307080621965),

2504 
FRAC_CONST
(0.59938929840056454),

2505 
FRAC_CONST
(0.60184224705858003),

2506 
FRAC_CONST
(0.60428953094815596),

2507 
FRAC_CONST
(0.60673112703452448),

2508 
FRAC_CONST
(0.60916701233645321),

2509 
FRAC_CONST
(0.61159716392646191),

2510 
FRAC_CONST
(0.61402155893103838),

2511 
FRAC_CONST
(0.61644017453085365),

2512 
FRAC_CONST
(0.61885298796097632),

2513 
FRAC_CONST
(0.62125997651108755),

2514 
FRAC_CONST
(0.62366111752569453),

2515 
FRAC_CONST
(0.62605638840434352),

2516 
FRAC_CONST
(0.62844576660183271),

2517 
FRAC_CONST
(0.63082922962842447),

2518 
FRAC_CONST
(0.63320675505005719),

2519 
FRAC_CONST
(0.63557832048855611),

2520 
FRAC_CONST
(0.63794390362184406),

2521 
FRAC_CONST
(0.64030348218415167),

2522 
FRAC_CONST
(0.64265703396622686),

2523 
FRAC_CONST
(0.64500453681554393),

2524 
FRAC_CONST
(0.64734596863651206),

2525 
FRAC_CONST
(0.64968130739068319),

2526 
FRAC_CONST
(0.6520105310969595),

2527 
FRAC_CONST
(0.65433361783180044),

2528 
FRAC_CONST
(0.65665054572942894),

2529 
FRAC_CONST
(0.65896129298203732),

2530 
FRAC_CONST
(0.66126583783999227),

2531 
FRAC_CONST
(0.66356415861203977),

2532 
FRAC_CONST
(0.66585623366550972),

2533 
FRAC_CONST
(0.66814204142651845),

2534 
FRAC_CONST
(0.67042156038017309),

2535 
FRAC_CONST
(0.67269476907077286),

2536 
FRAC_CONST
(0.67496164610201193),

2537 
FRAC_CONST
(0.67722217013718033),

2538 
FRAC_CONST
(0.67947631989936497),

2539 
FRAC_CONST
(0.68172407417164971),

2540 
FRAC_CONST
(0.6839654117973154),

2541 
FRAC_CONST
(0.68620031168003859),

2542 
FRAC_CONST
(0.68842875278409044),

2543 
FRAC_CONST
(0.6906507141345346),

2544 
FRAC_CONST
(0.69286617481742463),

2545 
FRAC_CONST
(0.69507511398000088),

2546 
FRAC_CONST
(0.69727751083088652),

2547 
FRAC_CONST
(0.69947334464028377),

2548 
FRAC_CONST
(0.70166259474016845),

2549 
FRAC_CONST
(0.70384524052448494),

2550 
FRAC_CONST
(0.70602126144933974),

2551 
FRAC_CONST
(0.70819063703319529),

2552 
FRAC_CONST
(0.71035334685706231),

2553 
FRAC_CONST
(0.71250937056469232),

2554 
FRAC_CONST
(0.71465868786276898),

2555 
FRAC_CONST
(0.71680127852109954),

2556 
FRAC_CONST
(0.71893712237280438),

2557 
FRAC_CONST
(0.72106619931450811),

2558 
FRAC_CONST
(0.72318848930652735),

2559 
FRAC_CONST
(0.72530397237306066),

2560 
FRAC_CONST
(0.72741262860237577),

2561 
FRAC_CONST
(0.7295144381469969),

2562 
FRAC_CONST
(0.73160938122389252),

2563 
FRAC_CONST
(0.73369743811466026),

2564 
FRAC_CONST
(0.73577858916571348),

2565 
FRAC_CONST
(0.73785281478846598),

2566 
FRAC_CONST
(0.73992009545951609),

2567 
FRAC_CONST
(0.74198041172083096),

2568 
FRAC_CONST
(0.74403374417992918),

2569 
FRAC_CONST
(0.74608007351006378),

2570 
FRAC_CONST
(0.74811938045040349),

2571 
FRAC_CONST
(0.75015164580621496),

2572 
FRAC_CONST
(0.7521768504490427),

2573 
FRAC_CONST
(0.75419497531688917),

2574 
FRAC_CONST
(0.75620600141439454),

2575 
FRAC_CONST
(0.75820990981301528),

2576 
FRAC_CONST
(0.76020668165120242),

2577 
FRAC_CONST
(0.7621962981345789),

2578 
FRAC_CONST
(0.76417874053611667),

2579 
FRAC_CONST
(0.76615399019631281),

2580 
FRAC_CONST
(0.76812202852336531),

2581 
FRAC_CONST
(0.7700828369933479),

2582 
FRAC_CONST
(0.77203639715038441),

2583 
FRAC_CONST
(0.77398269060682279),

2584 
FRAC_CONST
(0.77592169904340758),

2585 
FRAC_CONST
(0.77785340420945304),

2586 
FRAC_CONST
(0.77977778792301444),

2587 
FRAC_CONST
(0.78169483207105939),

2588 
FRAC_CONST
(0.7836045186096382),

2589 
FRAC_CONST
(0.78550682956405393),

2590 
FRAC_CONST
(0.78740174702903132),

2591 
FRAC_CONST
(0.78928925316888565),

2592 
FRAC_CONST
(0.79116933021769009),

2593 
FRAC_CONST
(0.79304196047944364),

2594 
FRAC_CONST
(0.79490712632823701),

2595 
FRAC_CONST
(0.79676481020841872),

2596 
FRAC_CONST
(0.79861499463476082),

2597 
FRAC_CONST
(0.80045766219262271),

2598 
FRAC_CONST
(0.80229279553811572),

2599 
FRAC_CONST
(0.8041203773982657),

2600 
FRAC_CONST
(0.80594039057117628),

2601 
FRAC_CONST
(0.80775281792619036),

2602 
FRAC_CONST
(0.80955764240405126),

2603 
FRAC_CONST
(0.81135484701706373),

2604 
FRAC_CONST
(0.81314441484925359),

2605 
FRAC_CONST
(0.81492632905652662),

2606 
FRAC_CONST
(0.81670057286682785),

2607 
FRAC_CONST
(0.81846712958029866),

2608 
FRAC_CONST
(0.82022598256943469),

2609 
FRAC_CONST
(0.82197711527924155),

2610 
FRAC_CONST
(0.82372051122739132),

2611 
FRAC_CONST
(0.82545615400437744),

2612 
FRAC_CONST
(0.82718402727366902),

2613 
FRAC_CONST
(0.82890411477186487),

2614 
FRAC_CONST
(0.8306164003088462),

2615 
FRAC_CONST
(0.83232086776792968),

2616 
FRAC_CONST
(0.83401750110601813),

2617 
FRAC_CONST
(0.8357062843537526),

2618 
FRAC_CONST
(0.83738720161566194),

2619 
FRAC_CONST
(0.83906023707031263),

2620 
FRAC_CONST
(0.84072537497045807),

2621 
FRAC_CONST
(0.84238259964318596),

2622 
FRAC_CONST
(0.84403189549006641),

2623 
FRAC_CONST
(0.84567324698729907),

2624 
FRAC_CONST
(0.84730663868585832),

2625 
FRAC_CONST
(0.84893205521163961),

2626 
FRAC_CONST
(0.85054948126560337),

2627 
FRAC_CONST
(0.85215890162391983),

2628 
FRAC_CONST
(0.8537603011381113),

2629 
FRAC_CONST
(0.85535366473519603),

2630 
FRAC_CONST
(0.85693897741782865),

2631 
FRAC_CONST
(0.85851622426444274),

2632 
FRAC_CONST
(0.86008539042939014),

2633 
FRAC_CONST
(0.8616464611430813),

2634 
FRAC_CONST
(0.86319942171212416),

2635 
FRAC_CONST
(0.86474425751946238),

2636 
FRAC_CONST
(0.86628095402451299),

2637 
FRAC_CONST
(0.86780949676330321),

2638 
FRAC_CONST
(0.86932987134860673),

2639 
FRAC_CONST
(0.87084206347007886),

2640 
FRAC_CONST
(0.87234605889439154),

2641 
FRAC_CONST
(0.87384184346536675),

2642 
FRAC_CONST
(0.87532940310411078),

2643 
FRAC_CONST
(0.87680872380914576),

2644 
FRAC_CONST
(0.87827979165654146),

2645 
FRAC_CONST
(0.87974259280004741),

2646 
FRAC_CONST
(0.88119711347122198),

2647 
FRAC_CONST
(0.88264333997956279),

2648 
FRAC_CONST
(0.88408125871263499),

2649 
FRAC_CONST
(0.88551085613619995),

2650 
FRAC_CONST
(0.88693211879434208),

2651 
FRAC_CONST
(0.88834503330959624),

2652 
FRAC_CONST
(0.88974958638307289),

2653 
FRAC_CONST
(0.89114576479458318),

2654 
FRAC_CONST
(0.89253355540276469),

2655 
FRAC_CONST
(0.89391294514520325),

2656 
FRAC_CONST
(0.89528392103855758),

2657 
FRAC_CONST
(0.89664647017868015),

2658 
FRAC_CONST
(0.89800057974073988),

2659 
FRAC_CONST
(0.89934623697934146),

2660 
FRAC_CONST
(0.90068342922864686),

2661 
FRAC_CONST
(0.90201214390249307),

2662 
FRAC_CONST
(0.90333236849451182),

2663 
FRAC_CONST
(0.90464409057824624),

2664 
FRAC_CONST
(0.90594729780726846),

2665 
FRAC_CONST
(0.90724197791529593),

2666 
FRAC_CONST
(0.90852811871630612),

2667 
FRAC_CONST
(0.90980570810465222),

2668 
FRAC_CONST
(0.91107473405517625),

2669 
FRAC_CONST
(0.91233518462332275),

2670 
FRAC_CONST
(0.91358704794525081),

2671 
FRAC_CONST
(0.91483031223794609),

2672 
FRAC_CONST
(0.91606496579933161),

2673 
FRAC_CONST
(0.91729099700837791),

2674 
FRAC_CONST
(0.91850839432521225),

2675 
FRAC_CONST
(0.91971714629122736),

2676 
FRAC_CONST
(0.92091724152918952),

2677 
FRAC_CONST
(0.92210866874334507),

2678 
FRAC_CONST
(0.92329141671952764),

2679 
FRAC_CONST
(0.9244654743252626),

2680 
FRAC_CONST
(0.92563083050987272),

2681 
FRAC_CONST
(0.92678747430458175),

2682 
FRAC_CONST
(0.92793539482261789),

2683 
FRAC_CONST
(0.92907458125931575),

2684 
FRAC_CONST
(0.93020502289221907),

2685 
FRAC_CONST
(0.93132670908118043),

2686 
FRAC_CONST
(0.93243962926846236),

2687 
FRAC_CONST
(0.93354377297883617),

2688 
FRAC_CONST
(0.93463912981968078),

2689 
FRAC_CONST
(0.93572568948108037),

2690 
FRAC_CONST
(0.93680344173592156),

2691 
FRAC_CONST
(0.93787237643998989),

2692 
FRAC_CONST
(0.93893248353206449),

2693 
FRAC_CONST
(0.93998375303401394),

2694 
FRAC_CONST
(0.94102617505088926),

2695 
FRAC_CONST
(0.94205973977101731),

2696 
FRAC_CONST
(0.94308443746609349),

2697 
FRAC_CONST
(0.94410025849127266),

2698 
FRAC_CONST
(0.94510719328526061),

2699 
FRAC_CONST
(0.94610523237040334),

2700 
FRAC_CONST
(0.94709436635277722),

2701 
FRAC_CONST
(0.94807458592227623),

2702 
FRAC_CONST
(0.94904588185270056),

2703 
FRAC_CONST
(0.950008245001843),

2704 
FRAC_CONST
(0.95096166631157508),

2705 
FRAC_CONST
(0.95190613680793223),

2706 
FRAC_CONST
(0.95284164760119872),

2707 
FRAC_CONST
(0.95376818988599033),

2708 
FRAC_CONST
(0.95468575494133834),

2709 
FRAC_CONST
(0.95559433413077111),

2710 
FRAC_CONST
(0.95649391890239499),

2711 
FRAC_CONST
(0.95738450078897586),

2712 
FRAC_CONST
(0.95826607140801767),

2713 
FRAC_CONST
(0.95913862246184189),

2714 
FRAC_CONST
(0.96000214573766585),

2715 
FRAC_CONST
(0.96085663310767966),

2716 
FRAC_CONST
(0.96170207652912254),

2717 
FRAC_CONST
(0.96253846804435916),

2718 
FRAC_CONST
(0.96336579978095405),

2719 
FRAC_CONST
(0.96418406395174572),

2720 
FRAC_CONST
(0.96499325285492032),

2721 
FRAC_CONST
(0.96579335887408357),

2722 
FRAC_CONST
(0.96658437447833312),

2723 
FRAC_CONST
(0.96736629222232851),

2724 
FRAC_CONST
(0.96813910474636233),

2725 
FRAC_CONST
(0.96890280477642887),

2726 
FRAC_CONST
(0.96965738512429245),

2727 
FRAC_CONST
(0.9704028386875555),

2728 
FRAC_CONST
(0.97113915844972509),

2729 
FRAC_CONST
(0.9718663374802794),

2730 
FRAC_CONST
(0.97258436893473221),

2731 
FRAC_CONST
(0.97329324605469825),

2732 
FRAC_CONST
(0.97399296216795583),

2733 
FRAC_CONST
(0.97468351068851067),

2734 
FRAC_CONST
(0.97536488511665687),

2735 
FRAC_CONST
(0.97603707903903902),

2736 
FRAC_CONST
(0.97670008612871184),

2737 
FRAC_CONST
(0.97735390014519996),

2738 
FRAC_CONST
(0.97799851493455714),

2739 
FRAC_CONST
(0.9786339244294231),

2740 
FRAC_CONST
(0.97926012264908202),

2741 
FRAC_CONST
(0.97987710369951764),

2742 
FRAC_CONST
(0.98048486177346938),

2743 
FRAC_CONST
(0.98108339115048659),

2744 
FRAC_CONST
(0.98167268619698311),

2745 
FRAC_CONST
(0.98225274136628937),

2746 
FRAC_CONST
(0.98282355119870524),

2747 
FRAC_CONST
(0.98338511032155118),

2748 
FRAC_CONST
(0.98393741344921892),

2749 
FRAC_CONST
(0.98448045538322093),

2750 
FRAC_CONST
(0.98501423101223984),

2751 
FRAC_CONST
(0.98553873531217606),

2752 
FRAC_CONST
(0.98605396334619544),

2753 
FRAC_CONST
(0.98655991026477541),

2754 
FRAC_CONST
(0.98705657130575097),

2755 
FRAC_CONST
(0.98754394179435923),

2756 
FRAC_CONST
(0.98802201714328353),

2757 
FRAC_CONST
(0.98849079285269659),

2758 
FRAC_CONST
(0.98895026451030299),

2759 
FRAC_CONST
(0.98940042779138038),

2760 
FRAC_CONST
(0.98984127845882053),

2761 
FRAC_CONST
(0.99027281236316911),

2762 
FRAC_CONST
(0.99069502544266463),

2763 
FRAC_CONST
(0.99110791372327678),

2764 
FRAC_CONST
(0.9915114733187439),

2765 
FRAC_CONST
(0.99190570043060933),

2766 
FRAC_CONST
(0.99229059134825737),

2767 
FRAC_CONST
(0.99266614244894802),

2768 
FRAC_CONST
(0.99303235019785141),

2769 
FRAC_CONST
(0.99338921114808065),

2770 
FRAC_CONST
(0.9937367219407246),

2771 
FRAC_CONST
(0.99407487930487937),

2772 
FRAC_CONST
(0.9944036800576791),

2773 
FRAC_CONST
(0.9947231211043257),

2774 
FRAC_CONST
(0.99503319943811863),

2775 
FRAC_CONST
(0.99533391214048228),

2776 
FRAC_CONST
(0.99562525638099431),

2777 
FRAC_CONST
(0.99590722941741172),

2778 
FRAC_CONST
(0.99617982859569687),

2779 
FRAC_CONST
(0.99644305135004263),

2780 
FRAC_CONST
(0.99669689520289606),

2781 
FRAC_CONST
(0.99694135776498216),

2782 
FRAC_CONST
(0.99717643673532619),

2783 
FRAC_CONST
(0.9974021299012753),

2784 
FRAC_CONST
(0.99761843513851955),

2785 
FRAC_CONST
(0.99782535041111164),

2786 
FRAC_CONST
(0.99802287377148624),

2787 
FRAC_CONST
(0.99821100336047819),

2788 
FRAC_CONST
(0.99838973740734016),

2789 
FRAC_CONST
(0.99855907422975931),

2790 
FRAC_CONST
(0.99871901223387294),

2791 
FRAC_CONST
(0.99886954991428356),

2792 
FRAC_CONST
(0.99901068585407338),

2793 
FRAC_CONST
(0.99914241872481691),

2794 
FRAC_CONST
(0.99926474728659442),

2795 
FRAC_CONST
(0.99937767038800285),

2796 
FRAC_CONST
(0.99948118696616695),

2797 
FRAC_CONST
(0.99957529604674922),

2798 
FRAC_CONST
(0.99965999674395922),

2799 
FRAC_CONST
(0.99973528826056168),

2800 
FRAC_CONST
(0.99980116988788426),

2801 
FRAC_CONST
(0.99985764100582386),

2802 
FRAC_CONST
(0.9999047010828529),

2803 
FRAC_CONST
(0.99994234967602391),

2804 
FRAC_CONST
(0.99997058643097414),

2805 
FRAC_CONST
(0.9999894110819284),

2806 
FRAC_CONST
(0.99999882345170188)

2809 #ifde‡
ALLOW_SMALL_FRAMELENGTH


2810 
ALIGN
 c⁄° 
ªÆ_t
 
söe_mid_480
[] =

2812 
FRAC_CONST
(0.0016362454436240478),

2813 
FRAC_CONST
(0.00490871880799799),

2814 
FRAC_CONST
(0.0081811396039371282),

2815 
FRAC_CONST
(0.011453472786443779),

2816 
FRAC_CONST
(0.014725683311458524),

2817 
FRAC_CONST
(0.017997736136235509),

2818 
FRAC_CONST
(0.021269596219717739),

2819 
FRAC_CONST
(0.024541228522912285),

2820 
FRAC_CONST
(0.027812598009265607),

2821 
FRAC_CONST
(0.03108366964503869),

2822 
FRAC_CONST
(0.034354408399682276),

2823 
FRAC_CONST
(0.037624779246211978),

2824 
FRAC_CONST
(0.04089474716158345),

2825 
FRAC_CONST
(0.044164277127067358),

2826 
FRAC_CONST
(0.047433334128624507),

2827 
FRAC_CONST
(0.050701883157280733),

2828 
FRAC_CONST
(0.053969889209501881),

2829 
FRAC_CONST
(0.057237317287568618),

2830 
FRAC_CONST
(0.060504132399951269),

2831 
FRAC_CONST
(0.063770299561684493),

2832 
FRAC_CONST
(0.06703578379474201),

2833 
FRAC_CONST
(0.070300550128411174),

2834 
FRAC_CONST
(0.073564563599667426),

2835 
FRAC_CONST
(0.076827789253548759),

2836 
FRAC_CONST
(0.080090192143530081),

2837 
FRAC_CONST
(0.083351737331897449),

2838 
FRAC_CONST
(0.086612389890122182),

2839 
FRAC_CONST
(0.089872114899234967),

2840 
FRAC_CONST
(0.093130877450199795),

2841 
FRAC_CONST
(0.096388642644287828),

2842 
FRAC_CONST
(0.09964537559345106),

2843 
FRAC_CONST
(0.1029010414206961),

2844 
FRAC_CONST
(0.10615560526045748),

2845 
FRAC_CONST
(0.10940903225897117),

2846 
FRAC_CONST
(0.11266128757464781),

2847 
FRAC_CONST
(0.11591233637844581),

2848 
FRAC_CONST
(0.11916214385424433),

2849 
FRAC_CONST
(0.1224106751992162),

2850 
FRAC_CONST
(0.12565789562420052),

2851 
FRAC_CONST
(0.12890377035407541),

2852 
FRAC_CONST
(0.13214826462813015),

2853 
FRAC_CONST
(0.13539134370043773),

2854 
FRAC_CONST
(0.13863297284022669),

2855 
FRAC_CONST
(0.14187311733225325),

2856 
FRAC_CONST
(0.14511174247717309),

2857 
FRAC_CONST
(0.14834881359191271),

2858 
FRAC_CONST
(0.15158429601004111),

2859 
FRAC_CONST
(0.15481815508214106),

2860 
FRAC_CONST
(0.1580503561761798),

2861 
FRAC_CONST
(0.16128086467788047),

2862 
FRAC_CONST
(0.16450964599109233),

2863 
FRAC_CONST
(0.16773666553816149),

2864 
FRAC_CONST
(0.17096188876030122),

2865 
FRAC_CONST
(0.17418528111796186),

2866 
FRAC_CONST
(0.17740680809120093),

2867 
FRAC_CONST
(0.18062643518005275),

2868 
FRAC_CONST
(0.18384412790489776),

2869 
FRAC_CONST
(0.18705985180683199),

2870 
FRAC_CONST
(0.19027357244803589),

2871 
FRAC_CONST
(0.19348525541214331),

2872 
FRAC_CONST
(0.19669486630460997),

2873 
FRAC_CONST
(0.19990237075308173),

2874 
FRAC_CONST
(0.20310773440776286),

2875 
FRAC_CONST
(0.20631092294178383),

2876 
FRAC_CONST
(0.20951190205156878),

2877 
FRAC_CONST
(0.21271063745720317),

2878 
FRAC_CONST
(0.21590709490280058),

2879 
FRAC_CONST
(0.2191012401568698),

2880 
FRAC_CONST
(0.22229303901268133),

2881 
FRAC_CONST
(0.22548245728863364),

2882 
FRAC_CONST
(0.22866946082861941),

2883 
FRAC_CONST
(0.23185401550239115),

2884 
FRAC_CONST
(0.23503608720592667),

2885 
FRAC_CONST
(0.23821564186179459),

2886 
FRAC_CONST
(0.24139264541951888),

2887 
FRAC_CONST
(0.24456706385594387),

2888 
FRAC_CONST
(0.24773886317559846),

2889 
FRAC_CONST
(0.25090800941106001),

2890 
FRAC_CONST
(0.25407446862331851),

2891 
FRAC_CONST
(0.25723820690213967),

2892 
FRAC_CONST
(0.26039919036642817),

2893 
FRAC_CONST
(0.26355738516459076),

2894 
FRAC_CONST
(0.26671275747489837),

2895 
FRAC_CONST
(0.2698652735058486),

2896 
FRAC_CONST
(0.27301489949652735),

2897 
FRAC_CONST
(0.27616160171697068),

2898 
FRAC_CONST
(0.27930534646852595),

2899 
FRAC_CONST
(0.28244610008421245),

2900 
FRAC_CONST
(0.2855838289290823),

2901 
FRAC_CONST
(0.28871849940058025),

2902 
FRAC_CONST
(0.29185007792890405),

2903 
FRAC_CONST
(0.29497853097736348),

2904 
FRAC_CONST
(0.2981038250427398),

2905 
FRAC_CONST
(0.30122592665564446),

2906 
FRAC_CONST
(0.30434480238087736),

2907 
FRAC_CONST
(0.30746041881778519),

2908 
FRAC_CONST
(0.31057274260061901),

2909 
FRAC_CONST
(0.31368174039889146),

2910 
FRAC_CONST
(0.31678737891773395),

2911 
FRAC_CONST
(0.31988962489825296),

2912 
FRAC_CONST
(0.32298844511788638),

2913 
FRAC_CONST
(0.32608380639075912),

2914 
FRAC_CONST
(0.32917567556803889),

2915 
FRAC_CONST
(0.33226401953829071),

2916 
FRAC_CONST
(0.33534880522783189),

2917 
FRAC_CONST
(0.33842999960108583),

2918 
FRAC_CONST
(0.34150756966093632),

2919 
FRAC_CONST
(0.34458148244908043),

2920 
FRAC_CONST
(0.34765170504638188),

2921 
FRAC_CONST
(0.35071820457322322),

2922 
FRAC_CONST
(0.35378094818985806),

2923 
FRAC_CONST
(0.35683990309676283),

2924 
FRAC_CONST
(0.35989503653498811),

2925 
FRAC_CONST
(0.36294631578650921),

2926 
FRAC_CONST
(0.36599370817457672),

2927 
FRAC_CONST
(0.36903718106406647),

2928 
FRAC_CONST
(0.37207670186182878),

2929 
FRAC_CONST
(0.37511223801703802),

2930 
FRAC_CONST
(0.37814375702154046),

2931 
FRAC_CONST
(0.38117122641020335),

2932 
FRAC_CONST
(0.38419461376126157),

2933 
FRAC_CONST
(0.38721388669666562),

2934 
FRAC_CONST
(0.39022901288242801),

2935 
FRAC_CONST
(0.39323996002896966),

2936 
FRAC_CONST
(0.39624669589146555),

2937 
FRAC_CONST
(0.39924918827019029),

2938 
FRAC_CONST
(0.40224740501086254),

2939 
FRAC_CONST
(0.40524131400498986),

2940 
FRAC_CONST
(0.40823088319021217),

2941 
FRAC_CONST
(0.41121608055064529),

2942 
FRAC_CONST
(0.41419687411722372),

2943 
FRAC_CONST
(0.41717323196804335),

2944 
FRAC_CONST
(0.42014512222870243),

2945 
FRAC_CONST
(0.42311251307264408),

2946 
FRAC_CONST
(0.42607537272149631),

2947 
FRAC_CONST
(0.4290336694454126),

2948 
FRAC_CONST
(0.43198737156341183),

2949 
FRAC_CONST
(0.43493644744371707),

2950 
FRAC_CONST
(0.43788086550409511),

2951 
FRAC_CONST
(0.44082059421219388),

2952 
FRAC_CONST
(0.44375560208588088),

2953 
FRAC_CONST
(0.44668585769357955),

2954 
FRAC_CONST
(0.4496113296546066),

2955 
FRAC_CONST
(0.45253198663950756),

2956 
FRAC_CONST
(0.45544779737039259),

2957 
FRAC_CONST
(0.45835873062127125),

2958 
FRAC_CONST
(0.46126475521838717),

2959 
FRAC_CONST
(0.46416584004055156),

2960 
FRAC_CONST
(0.46706195401947659),

2961 
FRAC_CONST
(0.46995306614010829),

2962 
FRAC_CONST
(0.47283914544095862),

2963 
FRAC_CONST
(0.47572016101443682),

2964 
FRAC_CONST
(0.47859608200718085),

2965 
FRAC_CONST
(0.4814668776203872),

2966 
FRAC_CONST
(0.48433251711014125),

2967 
FRAC_CONST
(0.4871929697877464),

2968 
FRAC_CONST
(0.49004820502005247),

2969 
FRAC_CONST
(0.49289819222978404),

2970 
FRAC_CONST
(0.49574290089586776),

2971 
FRAC_CONST
(0.49858230055375902),

2972 
FRAC_CONST
(0.50141636079576901),

2973 
FRAC_CONST
(0.50424505127138919),

2974 
FRAC_CONST
(0.50706834168761705),

2975 
FRAC_CONST
(0.50988620180928057),

2976 
FRAC_CONST
(0.51269860145936175),

2977 
FRAC_CONST
(0.51550551051931948),

2978 
FRAC_CONST
(0.51830689892941317),

2979 
FRAC_CONST
(0.5211027366890234),

2980 
FRAC_CONST
(0.52389299385697385),

2981 
FRAC_CONST
(0.52667764055185196),

2982 
FRAC_CONST
(0.52945664695232897),

2983 
FRAC_CONST
(0.53222998329747884),

2984 
FRAC_CONST
(0.53499761988709726),

2985 
FRAC_CONST
(0.53775952708201991),

2986 
FRAC_CONST
(0.54051567530443978),

2987 
FRAC_CONST
(0.54326603503822357),

2988 
FRAC_CONST
(0.54601057682922816),

2989 
FRAC_CONST
(0.54874927128561579),

2990 
FRAC_CONST
(0.55148208907816942),

2991 
FRAC_CONST
(0.55420900094060566),

2992 
FRAC_CONST
(0.55692997766988939),

2993 
FRAC_CONST
(0.559644990126546),

2994 
FRAC_CONST
(0.56235400923497314),

2995 
FRAC_CONST
(0.56505700598375252),

2996 
FRAC_CONST
(0.56775395142596052),

2997 
FRAC_CONST
(0.57044481667947822),

2998 
FRAC_CONST
(0.57312957292730071),

2999 
FRAC_CONST
(0.57580819141784534),

3000 
FRAC_CONST
(0.57848064346525996),

3001 
FRAC_CONST
(0.58114690044973039),

3002 
FRAC_CONST
(0.58380693381778626),

3003 
FRAC_CONST
(0.58646071508260733),

3004 
FRAC_CONST
(0.58910821582432815),

3005 
FRAC_CONST
(0.5917494076903429),

3006 
FRAC_CONST
(0.5943842623956086),

3007 
FRAC_CONST
(0.59701275172294799),

3008 
FRAC_CONST
(0.59963484752335228),

3009 
FRAC_CONST
(0.60225052171628191),

3010 
FRAC_CONST
(0.60485974628996786),

3011 
FRAC_CONST
(0.60746249330171098),

3012 
FRAC_CONST
(0.61005873487818185),

3013 
FRAC_CONST
(0.61264844321571899),

3014 
FRAC_CONST
(0.61523159058062682),

3015 
FRAC_CONST
(0.61780814930947225),

3016 
FRAC_CONST
(0.62037809180938108),

3017 
FRAC_CONST
(0.62294139055833397),

3018 
FRAC_CONST
(0.6254980181054608),

3019 
FRAC_CONST
(0.62804794707133416),

3020 
FRAC_CONST
(0.63059115014826372),

3021 
FRAC_CONST
(0.63312760010058777),

3022 
FRAC_CONST
(0.63565726976496484),

3023 
FRAC_CONST
(0.63818013205066515),

3024 
FRAC_CONST
(0.64069615993986073),

3025 
FRAC_CONST
(0.64320532648791406),

3026 
FRAC_CONST
(0.64570760482366729),

3027 
FRAC_CONST
(0.64820296814972966),

3028 
FRAC_CONST
(0.65069138974276486),

3029 
FRAC_CONST
(0.65317284295377676),

3030 
FRAC_CONST
(0.65564730120839498),

3031 
FRAC_CONST
(0.65811473800715958),

3032 
FRAC_CONST
(0.660575126925805),

3033 
FRAC_CONST
(0.66302844161554231),

3034 
FRAC_CONST
(0.6654746558033422),

3035 
FRAC_CONST
(0.66791374329221598),

3036 
FRAC_CONST
(0.67034567796149647),

3037 
FRAC_CONST
(0.67277043376711676),

3038 
FRAC_CONST
(0.67518798474189046),

3039 
FRAC_CONST
(0.67759830499578866),

3040 
FRAC_CONST
(0.68000136871621808),

3041 
FRAC_CONST
(0.68239715016829683),

3042 
FRAC_CONST
(0.6847856236951303),

3043 
FRAC_CONST
(0.68716676371808583),

3044 
FRAC_CONST
(0.68954054473706683),

3045 
FRAC_CONST
(0.69190694133078579),

3046 
FRAC_CONST
(0.69426592815703603),

3047 
FRAC_CONST
(0.69661747995296419),

3048 
FRAC_CONST
(0.69896157153533944),

3049 
FRAC_CONST
(0.70129817780082437),

3050 
FRAC_CONST
(0.7036272737262429),

3051 
FRAC_CONST
(0.70594883436884903),

3052 
FRAC_CONST
(0.70826283486659336),

3053 
FRAC_CONST
(0.71056925043838959),

3054 
FRAC_CONST
(0.71286805638437978),

3055 
FRAC_CONST
(0.71515922808619936),

3056 
FRAC_CONST
(0.71744274100723993),

3057 
FRAC_CONST
(0.71971857069291278),

3058 
FRAC_CONST
(0.7219866927709101),

3059 
FRAC_CONST
(0.72424708295146689),

3060 
FRAC_CONST
(0.72649971702762028),

3061 
FRAC_CONST
(0.72874457087546896),

3062 
FRAC_CONST
(0.73098162045443171),

3063 
FRAC_CONST
(0.73321084180750484),

3064 
FRAC_CONST
(0.73543221106151868),

3065 
FRAC_CONST
(0.73764570442739286),

3066 
FRAC_CONST
(0.73985129820039208),

3067 
FRAC_CONST
(0.74204896876037885),

3068 
FRAC_CONST
(0.7442386925720671),

3069 
FRAC_CONST
(0.74642044618527381),

3070 
FRAC_CONST
(0.74859420623517081),

3071 
FRAC_CONST
(0.75075994944253421),

3072 
FRAC_CONST
(0.75291765261399446),

3073 
FRAC_CONST
(0.75506729264228367),

3074 
FRAC_CONST
(0.75720884650648446),

3075 
FRAC_CONST
(0.75934229127227548),

3076 
FRAC_CONST
(0.76146760409217706),

3077 
FRAC_CONST
(0.76358476220579641),

3078 
FRAC_CONST
(0.7656937429400712),

3079 
FRAC_CONST
(0.76779452370951196),

3080 
FRAC_CONST
(0.76988708201644451),

3081 
FRAC_CONST
(0.77197139545125026),

3082 
FRAC_CONST
(0.7740474416926072),

3083 
FRAC_CONST
(0.77611519850772781),

3084 
FRAC_CONST
(0.77817464375259782),

3085 
FRAC_CONST
(0.78022575537221317),

3086 
FRAC_CONST
(0.78226851140081632),

3087 
FRAC_CONST
(0.78430288996213138),

3088 
FRAC_CONST
(0.78632886926959822),

3089 
FRAC_CONST
(0.78834642762660623),

3090 
FRAC_CONST
(0.79035554342672631),

3091 
FRAC_CONST
(0.79235619515394229),

3092 
FRAC_CONST
(0.79434836138288134),

3093 
FRAC_CONST
(0.79633202077904397),

3094 
FRAC_CONST
(0.79830715209903147),

3095 
FRAC_CONST
(0.8002737341907743),

3096 
FRAC_CONST
(0.80223174599375802),

3097 
FRAC_CONST
(0.80418116653924954),

3098 
FRAC_CONST
(0.80612197495052085),

3099 
FRAC_CONST
(0.80805415044307316),

3100 
FRAC_CONST
(0.80997767232485907),

3101 
FRAC_CONST
(0.81189251999650469),

3102 
FRAC_CONST
(0.81379867295152986),

3103 
FRAC_CONST
(0.81569611077656778),

3104 
FRAC_CONST
(0.81758481315158371),

3105 
FRAC_CONST
(0.81946475985009259),

3106 
FRAC_CONST
(0.82133593073937561),

3107 
FRAC_CONST
(0.82319830578069586),

3108 
FRAC_CONST
(0.82505186502951278),

3109 
FRAC_CONST
(0.82689658863569615),

3110 
FRAC_CONST
(0.82873245684373809),

3111 
FRAC_CONST
(0.83055944999296494),

3112 
FRAC_CONST
(0.83237754851774781),

3113 
FRAC_CONST
(0.83418673294771239),

3114 
FRAC_CONST
(0.83598698390794668),

3115 
FRAC_CONST
(0.83777828211920935),

3116 
FRAC_CONST
(0.83956060839813562),

3117 
FRAC_CONST
(0.84133394365744296),

3118 
FRAC_CONST
(0.84309826890613537),

3119 
FRAC_CONST
(0.84485356524970701),

3120 
FRAC_CONST
(0.84659981389034411),

3121 
FRAC_CONST
(0.84833699612712676),

3122 
FRAC_CONST
(0.85006509335622882),

3123 
FRAC_CONST
(0.8517840870711173),

3124 
FRAC_CONST
(0.85349395886275037),

3125 
FRAC_CONST
(0.85519469041977514),

3126 
FRAC_CONST
(0.85688626352872277),

3127 
FRAC_CONST
(0.85856866007420429),

3128 
FRAC_CONST
(0.86024186203910447),

3129 
FRAC_CONST
(0.86190585150477417),

3130 
FRAC_CONST
(0.86356061065122347),

3131 
FRAC_CONST
(0.86520612175731115),

3132 
FRAC_CONST
(0.86684236720093533),

3133 
FRAC_CONST
(0.86846932945922151),

3134 
FRAC_CONST
(0.87008699110871135),

3135 
FRAC_CONST
(0.87169533482554817),

3136 
FRAC_CONST
(0.87329434338566281),

3137 
FRAC_CONST
(0.87488399966495822),

3138 
FRAC_CONST
(0.87646428663949283),

3139 
FRAC_CONST
(0.87803518738566277),

3140 
FRAC_CONST
(0.87959668508038291),

3141 
FRAC_CONST
(0.88114876300126743),

3142 
FRAC_CONST
(0.88269140452680916),

3143 
FRAC_CONST
(0.8842245931365561),

3144 
FRAC_CONST
(0.88574831241129048),

3145 
FRAC_CONST
(0.88726254603320276),

3146 
FRAC_CONST
(0.88876727778606746),

3147 
FRAC_CONST
(0.89026249155541637),

3148 
FRAC_CONST
(0.8917481713287112),

3149 
FRAC_CONST
(0.89322430119551532),

3150 
FRAC_CONST
(0.89469086534766362),

3151 
FRAC_CONST
(0.89614784807943237),

3152 
FRAC_CONST
(0.89759523378770689),

3153 
FRAC_CONST
(0.89903300697214927),

3154 
FRAC_CONST
(0.9004611522353636),

3155 
FRAC_CONST
(0.90187965428306172),

3156 
FRAC_CONST
(0.90328849792422594),

3157 
FRAC_CONST
(0.90468766807127299),

3158 
FRAC_CONST
(0.90607714974021469),

3159 
FRAC_CONST
(0.90745692805081868),

3160 
FRAC_CONST
(0.90882698822676755),

3161 
FRAC_CONST
(0.91018731559581767),

3162 
FRAC_CONST
(0.91153789558995579),

3163 
FRAC_CONST
(0.91287871374555518),

3164 
FRAC_CONST
(0.91420975570353069),

3165 
FRAC_CONST
(0.9155310072094921),

3166 
FRAC_CONST
(0.91684245411389753),

3167 
FRAC_CONST
(0.91814408237220391),

3168 
FRAC_CONST
(0.91943587804501858),

3169 
FRAC_CONST
(0.92071782729824769),

3170 
FRAC_CONST
(0.92198991640324446),

3171 
FRAC_CONST
(0.92325213173695675),

3172 
FRAC_CONST
(0.92450445978207241),

3173 
FRAC_CONST
(0.92574688712716402),

3174 
FRAC_CONST
(0.92697940046683291),

3175 
FRAC_CONST
(0.92820198660185149),

3176 
FRAC_CONST
(0.92941463243930444),

3177 
FRAC_CONST
(0.93061732499272909),

3178 
FRAC_CONST
(0.93181005138225426),

3179 
FRAC_CONST
(0.93299279883473885),

3180 
FRAC_CONST
(0.93416555468390772),

3181 
FRAC_CONST
(0.93532830637048769),

3182 
FRAC_CONST
(0.93648104144234268),

3183 
FRAC_CONST
(0.93762374755460598),

3184 
FRAC_CONST
(0.93875641246981323),

3185 
FRAC_CONST
(0.93987902405803303),

3186 
FRAC_CONST
(0.94099157029699743),

3187 
FRAC_CONST
(0.94209403927222979),

3188 
FRAC_CONST
(0.94318641917717327),

3189 
FRAC_CONST
(0.9442686983133165),

3190 
FRAC_CONST
(0.94534086509031956),

3191 
FRAC_CONST
(0.9464029080261378),

3192 
FRAC_CONST
(0.94745481574714419),

3193 
FRAC_CONST
(0.94849657698825252),

3194 
FRAC_CONST
(0.94952818059303667),

3195 
FRAC_CONST
(0.95054961551385087),

3196 
FRAC_CONST
(0.95156087081194762),

3197 
FRAC_CONST
(0.95256193565759528),

3198 
FRAC_CONST
(0.95355279933019343),

3199 
FRAC_CONST
(0.9545334512183884),

3200 
FRAC_CONST
(0.95550388082018611),

3201 
FRAC_CONST
(0.95646407774306541),

3202 
FRAC_CONST
(0.95741403170408834),

3203 
FRAC_CONST
(0.95835373253001133),

3204 
FRAC_CONST
(0.95928317015739362),

3205 
FRAC_CONST
(0.96020233463270466),

3206 
FRAC_CONST
(0.96111121611243155),

3207 
FRAC_CONST
(0.96200980486318388),

3208 
FRAC_CONST
(0.96289809126179782),

3209 
FRAC_CONST
(0.96377606579543984),

3210 
FRAC_CONST
(0.96464371906170809),

3211 
FRAC_CONST
(0.96550104176873297),

3212 
FRAC_CONST
(0.96634802473527726),

3213 
FRAC_CONST
(0.96718465889083372),

3214 
FRAC_CONST
(0.96801093527572268),

3215 
FRAC_CONST
(0.96882684504118799),

3216 
FRAC_CONST
(0.96963237944949143),

3217 
FRAC_CONST
(0.97042752987400682),

3218 
FRAC_CONST
(0.97121228779931179),

3219 
FRAC_CONST
(0.97198664482127939),

3220 
FRAC_CONST
(0.97275059264716823),

3221 
FRAC_CONST
(0.97350412309571066),

3222 
FRAC_CONST
(0.97424722809720088),

3223 
FRAC_CONST
(0.97497989969358168),

3224 
FRAC_CONST
(0.97570213003852857),

3225 
FRAC_CONST
(0.97641391139753486),

3226 
FRAC_CONST
(0.97711523614799412),

3227 
FRAC_CONST
(0.97780609677928154),

3228 
FRAC_CONST
(0.97848648589283505),

3229 
FRAC_CONST
(0.97915639620223371),

3230 
FRAC_CONST
(0.9798158205332762),

3231 
FRAC_CONST
(0.98046475182405801),

3232 
FRAC_CONST
(0.98110318312504607),

3233 
FRAC_CONST
(0.98173110759915416),

3234 
FRAC_CONST
(0.98234851852181571),

3235 
FRAC_CONST
(0.98295540928105563),

3236 
FRAC_CONST
(0.9835517733775615),

3237 
FRAC_CONST
(0.98413760442475307),

3238 
FRAC_CONST
(0.98471289614885038),

3239 
FRAC_CONST
(0.98527764238894122),

3240 
FRAC_CONST
(0.98583183709704714),

3241 
FRAC_CONST
(0.98637547433818806),

3242 
FRAC_CONST
(0.98690854829044583),

3243 
FRAC_CONST
(0.98743105324502667),

3244 
FRAC_CONST
(0.98794298360632238),

3245 
FRAC_CONST
(0.98844433389196995),

3246 
FRAC_CONST
(0.98893509873291074),

3247 
FRAC_CONST
(0.98941527287344755),

3248 
FRAC_CONST
(0.98988485117130098),

3249 
FRAC_CONST
(0.99034382859766479),

3250 
FRAC_CONST
(0.99079220023725967),

3251 
FRAC_CONST
(0.99122996128838525),

3252 
FRAC_CONST
(0.9916571070629725),

3253 
FRAC_CONST
(0.99207363298663342),

3254 
FRAC_CONST
(0.99247953459870997),

3255 
FRAC_CONST
(0.99287480755232194),

3256 
FRAC_CONST
(0.99325944761441354),

3257 
FRAC_CONST
(0.99363345066579889),

3258 
FRAC_CONST
(0.99399681270120555),

3259 
FRAC_CONST
(0.99434952982931812),

3260 
FRAC_CONST
(0.9946915982728195),

3261 
FRAC_CONST
(0.99502301436843166),

3262 
FRAC_CONST
(0.99534377456695422),

3263 
FRAC_CONST
(0.9956538754333033),

3264 
FRAC_CONST
(0.99595331364654771),

3265 
FRAC_CONST
(0.99624208599994479),

3266 
FRAC_CONST
(0.99652018940097464),

3267 
FRAC_CONST
(0.99678762087137318),

3268 
FRAC_CONST
(0.99704437754716424),

3269 
FRAC_CONST
(0.99729045667869021),

3270 
FRAC_CONST
(0.99752585563064111),

3271 
FRAC_CONST
(0.99775057188208349),

3272 
FRAC_CONST
(0.9979646030264866),

3273 
FRAC_CONST
(0.99816794677174903),

3274 
FRAC_CONST
(0.9983606009402225),

3275 
FRAC_CONST
(0.99854256346873571),

3276 
FRAC_CONST
(0.99871383240861611),

3277 
FRAC_CONST
(0.99887440592571108),

3278 
FRAC_CONST
(0.99902428230040718),

3279 
FRAC_CONST
(0.99916345992764877),

3280 
FRAC_CONST
(0.99929193731695531),

3281 
FRAC_CONST
(0.99940971309243731),

3282 
FRAC_CONST
(0.99951678599281069),

3283 
FRAC_CONST
(0.99961315487141078),

3284 
FRAC_CONST
(0.99969881869620425),

3285 
FRAC_CONST
(0.99977377654980037),

3286 
FRAC_CONST
(0.99983802762946083),

3287 
FRAC_CONST
(0.99989157124710804),

3288 
FRAC_CONST
(0.9999344068293331),

3289 
FRAC_CONST
(0.99996653391740109),

3290 
FRAC_CONST
(0.99998795216725689),

3291 
FRAC_CONST
(0.99999866134952808)

3295 
ALIGN
 c⁄° 
ªÆ_t
 
ld_mid_512
[] =

3297 
FRAC_CONST
(0),

3298 
FRAC_CONST
(0),

3299 
FRAC_CONST
(0),

3300 
FRAC_CONST
(0),

3301 
FRAC_CONST
(0),

3302 
FRAC_CONST
(0),

3303 
FRAC_CONST
(0),

3304 
FRAC_CONST
(0),

3305 
FRAC_CONST
(0),

3306 
FRAC_CONST
(0),

3307 
FRAC_CONST
(0),

3308 
FRAC_CONST
(0),

3309 
FRAC_CONST
(0),

3310 
FRAC_CONST
(0),

3311 
FRAC_CONST
(0),

3312 
FRAC_CONST
(0),

3313 
FRAC_CONST
(0),

3314 
FRAC_CONST
(0),

3315 
FRAC_CONST
(0),

3316 
FRAC_CONST
(0),

3317 
FRAC_CONST
(0),

3318 
FRAC_CONST
(0),

3319 
FRAC_CONST
(0),

3320 
FRAC_CONST
(0),

3321 
FRAC_CONST
(0),

3322 
FRAC_CONST
(0),

3323 
FRAC_CONST
(0),

3324 
FRAC_CONST
(0),

3325 
FRAC_CONST
(0),

3326 
FRAC_CONST
(0),

3327 
FRAC_CONST
(0),

3328 
FRAC_CONST
(0),

3329 
FRAC_CONST
(0),

3330 
FRAC_CONST
(0),

3331 
FRAC_CONST
(0),

3332 
FRAC_CONST
(0),

3333 
FRAC_CONST
(0),

3334 
FRAC_CONST
(0),

3335 
FRAC_CONST
(0),

3336 
FRAC_CONST
(0),

3337 
FRAC_CONST
(0),

3338 
FRAC_CONST
(0),

3339 
FRAC_CONST
(0),

3340 
FRAC_CONST
(0),

3341 
FRAC_CONST
(0),

3342 
FRAC_CONST
(0),

3343 
FRAC_CONST
(0),

3344 
FRAC_CONST
(0),

3345 
FRAC_CONST
(0),

3346 
FRAC_CONST
(0),

3347 
FRAC_CONST
(0),

3348 
FRAC_CONST
(0),

3349 
FRAC_CONST
(0),

3350 
FRAC_CONST
(0),

3351 
FRAC_CONST
(0),

3352 
FRAC_CONST
(0),

3353 
FRAC_CONST
(0),

3354 
FRAC_CONST
(0),

3355 
FRAC_CONST
(0),

3356 
FRAC_CONST
(0),

3357 
FRAC_CONST
(0),

3358 
FRAC_CONST
(0),

3359 
FRAC_CONST
(0),

3360 
FRAC_CONST
(0),

3361 
FRAC_CONST
(0),

3362 
FRAC_CONST
(0),

3363 
FRAC_CONST
(0),

3364 
FRAC_CONST
(0),

3365 
FRAC_CONST
(0),

3366 
FRAC_CONST
(0),

3367 
FRAC_CONST
(0),

3368 
FRAC_CONST
(0),

3369 
FRAC_CONST
(0),

3370 
FRAC_CONST
(0),

3371 
FRAC_CONST
(0),

3372 
FRAC_CONST
(0),

3373 
FRAC_CONST
(0),

3374 
FRAC_CONST
(0),

3375 
FRAC_CONST
(0),

3376 
FRAC_CONST
(0),

3377 
FRAC_CONST
(0),

3378 
FRAC_CONST
(0),

3379 
FRAC_CONST
(0),

3380 
FRAC_CONST
(0),

3381 
FRAC_CONST
(0),

3382 
FRAC_CONST
(0),

3383 
FRAC_CONST
(0),

3384 
FRAC_CONST
(0),

3385 
FRAC_CONST
(0),

3386 
FRAC_CONST
(0),

3387 
FRAC_CONST
(0),

3388 
FRAC_CONST
(0),

3389 
FRAC_CONST
(0),

3390 
FRAC_CONST
(0),

3391 
FRAC_CONST
(0),

3392 
FRAC_CONST
(0),

3393 
FRAC_CONST
(0),

3394 
FRAC_CONST
(0),

3395 
FRAC_CONST
(0),

3396 
FRAC_CONST
(0),

3397 
FRAC_CONST
(0),

3398 
FRAC_CONST
(0),

3399 
FRAC_CONST
(0),

3400 
FRAC_CONST
(0),

3401 
FRAC_CONST
(0),

3402 
FRAC_CONST
(0),

3403 
FRAC_CONST
(0),

3404 
FRAC_CONST
(0),

3405 
FRAC_CONST
(0),

3406 
FRAC_CONST
(0),

3407 
FRAC_CONST
(0),

3408 
FRAC_CONST
(0),

3409 
FRAC_CONST
(0),

3410 
FRAC_CONST
(0),

3411 
FRAC_CONST
(0),

3412 
FRAC_CONST
(0),

3413 
FRAC_CONST
(0),

3414 
FRAC_CONST
(0),

3415 
FRAC_CONST
(0),

3416 
FRAC_CONST
(0),

3417 
FRAC_CONST
(0),

3418 
FRAC_CONST
(0),

3419 
FRAC_CONST
(0),

3420 
FRAC_CONST
(0),

3421 
FRAC_CONST
(0),

3422 
FRAC_CONST
(0),

3423 
FRAC_CONST
(0),

3424 
FRAC_CONST
(0),

3425 
FRAC_CONST
(0),

3426 
FRAC_CONST
(0),

3427 
FRAC_CONST
(0),

3428 
FRAC_CONST
(0),

3429 
FRAC_CONST
(0),

3430 
FRAC_CONST
(0),

3431 
FRAC_CONST
(0),

3432 
FRAC_CONST
(0),

3433 
FRAC_CONST
(0),

3434 
FRAC_CONST
(0),

3435 
FRAC_CONST
(0),

3436 
FRAC_CONST
(0),

3437 
FRAC_CONST
(0),

3438 
FRAC_CONST
(0),

3439 
FRAC_CONST
(0),

3440 
FRAC_CONST
(0),

3441 
FRAC_CONST
(0),

3442 
FRAC_CONST
(0),

3443 
FRAC_CONST
(0),

3444 
FRAC_CONST
(0),

3445 
FRAC_CONST
(0),

3446 
FRAC_CONST
(0),

3447 
FRAC_CONST
(0),

3448 
FRAC_CONST
(0),

3449 
FRAC_CONST
(0),

3450 
FRAC_CONST
(0),

3451 
FRAC_CONST
(0),

3452 
FRAC_CONST
(0),

3453 
FRAC_CONST
(0),

3454 
FRAC_CONST
(0),

3455 
FRAC_CONST
(0),

3456 
FRAC_CONST
(0),

3457 
FRAC_CONST
(0),

3458 
FRAC_CONST
(0),

3459 
FRAC_CONST
(0),

3460 
FRAC_CONST
(0),

3461 
FRAC_CONST
(0),

3462 
FRAC_CONST
(0),

3463 
FRAC_CONST
(0),

3464 
FRAC_CONST
(0),

3465 
FRAC_CONST
(0),

3466 
FRAC_CONST
(0),

3467 
FRAC_CONST
(0),

3468 
FRAC_CONST
(0),

3469 
FRAC_CONST
(0),

3470 
FRAC_CONST
(0),

3471 
FRAC_CONST
(0),

3472 
FRAC_CONST
(0),

3473 
FRAC_CONST
(0),

3474 
FRAC_CONST
(0),

3475 
FRAC_CONST
(0),

3476 
FRAC_CONST
(0),

3477 
FRAC_CONST
(0),

3478 
FRAC_CONST
(0),

3479 
FRAC_CONST
(0),

3480 
FRAC_CONST
(0),

3481 
FRAC_CONST
(0),

3482 
FRAC_CONST
(0),

3483 
FRAC_CONST
(0),

3484 
FRAC_CONST
(0),

3485 
FRAC_CONST
(0),

3486 
FRAC_CONST
(0),

3487 
FRAC_CONST
(0),

3488 
FRAC_CONST
(0),

3489 
FRAC_CONST
(0.0061358846491544753),

3490 
FRAC_CONST
(0.01840672990580482),

3491 
FRAC_CONST
(0.030674803176636626),

3492 
FRAC_CONST
(0.04293825693494082),

3493 
FRAC_CONST
(0.055195244349689934),

3494 
FRAC_CONST
(0.067443919563664051),

3495 
FRAC_CONST
(0.079682437971430126),

3496 
FRAC_CONST
(0.091908956497132724),

3497 
FRAC_CONST
(0.10412163387205459),

3498 
FRAC_CONST
(0.11631863091190475),

3499 
FRAC_CONST
(0.12849811079379317),

3500 
FRAC_CONST
(0.14065823933284921),

3501 
FRAC_CONST
(0.15279718525844344),

3502 
FRAC_CONST
(0.16491312048996989),

3503 
FRAC_CONST
(0.17700422041214875),

3504 
FRAC_CONST
(0.18906866414980619),

3505 
FRAC_CONST
(0.2011046348420919),

3506 
FRAC_CONST
(0.21311031991609136),

3507 
FRAC_CONST
(0.22508391135979283),

3508 
FRAC_CONST
(0.2370236059943672),

3509 
FRAC_CONST
(0.24892760574572015),

3510 
FRAC_CONST
(0.26079411791527551),

3511 
FRAC_CONST
(0.27262135544994898),

3512 
FRAC_CONST
(0.28440753721127188),

3513 
FRAC_CONST
(0.29615088824362379),

3514 
FRAC_CONST
(0.30784964004153487),

3515 
FRAC_CONST
(0.31950203081601569),

3516 
FRAC_CONST
(0.33110630575987643),

3517 
FRAC_CONST
(0.34266071731199438),

3518 
FRAC_CONST
(0.35416352542049034),

3519 
FRAC_CONST
(0.36561299780477385),

3520 
FRAC_CONST
(0.37700741021641826),

3521 
FRAC_CONST
(0.38834504669882625),

3522 
FRAC_CONST
(0.39962419984564679),

3523 
FRAC_CONST
(0.41084317105790391),

3524 
FRAC_CONST
(0.42200027079979968),

3525 
FRAC_CONST
(0.43309381885315196),

3526 
FRAC_CONST
(0.4441221445704292),

3527 
FRAC_CONST
(0.45508358712634384),

3528 
FRAC_CONST
(0.46597649576796618),

3529 
FRAC_CONST
(0.47679923006332209),

3530 
FRAC_CONST
(0.487550160148436),

3531 
FRAC_CONST
(0.49822766697278187),

3532 
FRAC_CONST
(0.50883014254310699),

3533 
FRAC_CONST
(0.51935599016558964),

3534 
FRAC_CONST
(0.52980362468629461),

3535 
FRAC_CONST
(0.54017147272989285),

3536 
FRAC_CONST
(0.55045797293660481),

3537 
FRAC_CONST
(0.56066157619733603),

3538 
FRAC_CONST
(0.57078074588696726),

3539 
FRAC_CONST
(0.58081395809576453),

3540 
FRAC_CONST
(0.59075970185887416),

3541 
FRAC_CONST
(0.60061647938386897),

3542 
FRAC_CONST
(0.61038280627630948),

3543 
FRAC_CONST
(0.6200572117632891),

3544 
FRAC_CONST
(0.62963823891492698),

3545 
FRAC_CONST
(0.63912444486377573),

3546 
FRAC_CONST
(0.64851440102211244),

3547 
FRAC_CONST
(0.65780669329707864),

3548 
FRAC_CONST
(0.66699992230363747),

3549 
FRAC_CONST
(0.67609270357531592),

3550 
FRAC_CONST
(0.68508366777270036),

3551 
FRAC_CONST
(0.693971460889654),

3552 
FRAC_CONST
(0.7027547444572253),

3553 
FRAC_CONST
(0.71143219574521643),

3554 
FRAC_CONST
(0.72000250796138165),

3555 
FRAC_CONST
(0.7284643904482252),

3556 
FRAC_CONST
(0.73681656887736979),

3557 
FRAC_CONST
(0.74505778544146595),

3558 
FRAC_CONST
(0.75318679904361241),

3559 
FRAC_CONST
(0.76120238548426178),

3560 
FRAC_CONST
(0.76910333764557959),

3561 
FRAC_CONST
(0.77688846567323244),

3562 
FRAC_CONST
(0.78455659715557524),

3563 
FRAC_CONST
(0.79210657730021239),

3564 
FRAC_CONST
(0.79953726910790501),

3565 
FRAC_CONST
(0.80684755354379922),

3566 
FRAC_CONST
(0.8140363297059483),

3567 
FRAC_CONST
(0.82110251499110465),

3568 
FRAC_CONST
(0.8280450452577558),

3569 
FRAC_CONST
(0.83486287498638001),

3570 
FRAC_CONST
(0.84155497743689833),

3571 
FRAC_CONST
(0.84812034480329712),

3572 
FRAC_CONST
(0.85455798836540053),

3573 
FRAC_CONST
(0.86086693863776731),

3574 
FRAC_CONST
(0.86704624551569265),

3575 
FRAC_CONST
(0.87309497841829009),

3576 
FRAC_CONST
(0.87901222642863341),

3577 
FRAC_CONST
(0.88479709843093779),

3578 
FRAC_CONST
(0.89044872324475788),

3579 
FRAC_CONST
(0.89596624975618511),

3580 
FRAC_CONST
(0.90134884704602203),

3581 
FRAC_CONST
(0.90659570451491533),

3582 
FRAC_CONST
(0.91170603200542988),

3583 
FRAC_CONST
(0.9166790599210427),

3584 
FRAC_CONST
(0.9215140393420419),

3585 
FRAC_CONST
(0.92621024213831127),

3586 
FRAC_CONST
(0.93076696107898371),

3587 
FRAC_CONST
(0.9351835099389475),

3588 
FRAC_CONST
(0.93945922360218992),

3589 
FRAC_CONST
(0.94359345816196039),

3590 
FRAC_CONST
(0.94758559101774109),

3591 
FRAC_CONST
(0.95143502096900834),

3592 
FRAC_CONST
(0.95514116830577067),

3593 
FRAC_CONST
(0.9587034748958716),

3594 
FRAC_CONST
(0.96212140426904158),

3595 
FRAC_CONST
(0.9653944416976894),

3596 
FRAC_CONST
(0.96852209427441727),

3597 
FRAC_CONST
(0.97150389098625178),

3598 
FRAC_CONST
(0.97433938278557586),

3599 
FRAC_CONST
(0.97702814265775439),

3600 
FRAC_CONST
(0.97956976568544052),

3601 
FRAC_CONST
(0.98196386910955524),

3602 
FRAC_CONST
(0.98421009238692903),

3603 
FRAC_CONST
(0.98630809724459867),

3604 
FRAC_CONST
(0.98825756773074946),

3605 
FRAC_CONST
(0.99005821026229712),

3606 
FRAC_CONST
(0.99170975366909953),

3607 
FRAC_CONST
(0.9932119492347945),

3608 
FRAC_CONST
(0.99456457073425542),

3609 
FRAC_CONST
(0.99576741446765982),

3610 
FRAC_CONST
(0.99682029929116567),

3611 
FRAC_CONST
(0.99772306664419164),

3612 
FRAC_CONST
(0.99847558057329477),

3613 
FRAC_CONST
(0.99907772775264536),

3614 
FRAC_CONST
(0.99952941750109314),

3615 
FRAC_CONST
(0.9998305817958234),

3616 
FRAC_CONST
(0.99998117528260111),

3617 
FRAC_CONST
(1),

3618 
FRAC_CONST
(1),

3619 
FRAC_CONST
(1),

3620 
FRAC_CONST
(1),

3621 
FRAC_CONST
(1),

3622 
FRAC_CONST
(1),

3623 
FRAC_CONST
(1),

3624 
FRAC_CONST
(1),

3625 
FRAC_CONST
(1),

3626 
FRAC_CONST
(1),

3627 
FRAC_CONST
(1),

3628 
FRAC_CONST
(1),

3629 
FRAC_CONST
(1),

3630 
FRAC_CONST
(1),

3631 
FRAC_CONST
(1),

3632 
FRAC_CONST
(1),

3633 
FRAC_CONST
(1),

3634 
FRAC_CONST
(1),

3635 
FRAC_CONST
(1),

3636 
FRAC_CONST
(1),

3637 
FRAC_CONST
(1),

3638 
FRAC_CONST
(1),

3639 
FRAC_CONST
(1),

3640 
FRAC_CONST
(1),

3641 
FRAC_CONST
(1),

3642 
FRAC_CONST
(1),

3643 
FRAC_CONST
(1),

3644 
FRAC_CONST
(1),

3645 
FRAC_CONST
(1),

3646 
FRAC_CONST
(1),

3647 
FRAC_CONST
(1),

3648 
FRAC_CONST
(1),

3649 
FRAC_CONST
(1),

3650 
FRAC_CONST
(1),

3651 
FRAC_CONST
(1),

3652 
FRAC_CONST
(1),

3653 
FRAC_CONST
(1),

3654 
FRAC_CONST
(1),

3655 
FRAC_CONST
(1),

3656 
FRAC_CONST
(1),

3657 
FRAC_CONST
(1),

3658 
FRAC_CONST
(1),

3659 
FRAC_CONST
(1),

3660 
FRAC_CONST
(1),

3661 
FRAC_CONST
(1),

3662 
FRAC_CONST
(1),

3663 
FRAC_CONST
(1),

3664 
FRAC_CONST
(1),

3665 
FRAC_CONST
(1),

3666 
FRAC_CONST
(1),

3667 
FRAC_CONST
(1),

3668 
FRAC_CONST
(1),

3669 
FRAC_CONST
(1),

3670 
FRAC_CONST
(1),

3671 
FRAC_CONST
(1),

3672 
FRAC_CONST
(1),

3673 
FRAC_CONST
(1),

3674 
FRAC_CONST
(1),

3675 
FRAC_CONST
(1),

3676 
FRAC_CONST
(1),

3677 
FRAC_CONST
(1),

3678 
FRAC_CONST
(1),

3679 
FRAC_CONST
(1),

3680 
FRAC_CONST
(1),

3681 
FRAC_CONST
(1),

3682 
FRAC_CONST
(1),

3683 
FRAC_CONST
(1),

3684 
FRAC_CONST
(1),

3685 
FRAC_CONST
(1),

3686 
FRAC_CONST
(1),

3687 
FRAC_CONST
(1),

3688 
FRAC_CONST
(1),

3689 
FRAC_CONST
(1),

3690 
FRAC_CONST
(1),

3691 
FRAC_CONST
(1),

3692 
FRAC_CONST
(1),

3693 
FRAC_CONST
(1),

3694 
FRAC_CONST
(1),

3695 
FRAC_CONST
(1),

3696 
FRAC_CONST
(1),

3697 
FRAC_CONST
(1),

3698 
FRAC_CONST
(1),

3699 
FRAC_CONST
(1),

3700 
FRAC_CONST
(1),

3701 
FRAC_CONST
(1),

3702 
FRAC_CONST
(1),

3703 
FRAC_CONST
(1),

3704 
FRAC_CONST
(1),

3705 
FRAC_CONST
(1),

3706 
FRAC_CONST
(1),

3707 
FRAC_CONST
(1),

3708 
FRAC_CONST
(1),

3709 
FRAC_CONST
(1),

3710 
FRAC_CONST
(1),

3711 
FRAC_CONST
(1),

3712 
FRAC_CONST
(1),

3713 
FRAC_CONST
(1),

3714 
FRAC_CONST
(1),

3715 
FRAC_CONST
(1),

3716 
FRAC_CONST
(1),

3717 
FRAC_CONST
(1),

3718 
FRAC_CONST
(1),

3719 
FRAC_CONST
(1),

3720 
FRAC_CONST
(1),

3721 
FRAC_CONST
(1),

3722 
FRAC_CONST
(1),

3723 
FRAC_CONST
(1),

3724 
FRAC_CONST
(1),

3725 
FRAC_CONST
(1),

3726 
FRAC_CONST
(1),

3727 
FRAC_CONST
(1),

3728 
FRAC_CONST
(1),

3729 
FRAC_CONST
(1),

3730 
FRAC_CONST
(1),

3731 
FRAC_CONST
(1),

3732 
FRAC_CONST
(1),

3733 
FRAC_CONST
(1),

3734 
FRAC_CONST
(1),

3735 
FRAC_CONST
(1),

3736 
FRAC_CONST
(1),

3737 
FRAC_CONST
(1),

3738 
FRAC_CONST
(1),

3739 
FRAC_CONST
(1),

3740 
FRAC_CONST
(1),

3741 
FRAC_CONST
(1),

3742 
FRAC_CONST
(1),

3743 
FRAC_CONST
(1),

3744 
FRAC_CONST
(1),

3745 
FRAC_CONST
(1),

3746 
FRAC_CONST
(1),

3747 
FRAC_CONST
(1),

3748 
FRAC_CONST
(1),

3749 
FRAC_CONST
(1),

3750 
FRAC_CONST
(1),

3751 
FRAC_CONST
(1),

3752 
FRAC_CONST
(1),

3753 
FRAC_CONST
(1),

3754 
FRAC_CONST
(1),

3755 
FRAC_CONST
(1),

3756 
FRAC_CONST
(1),

3757 
FRAC_CONST
(1),

3758 
FRAC_CONST
(1),

3759 
FRAC_CONST
(1),

3760 
FRAC_CONST
(1),

3761 
FRAC_CONST
(1),

3762 
FRAC_CONST
(1),

3763 
FRAC_CONST
(1),

3764 
FRAC_CONST
(1),

3765 
FRAC_CONST
(1),

3766 
FRAC_CONST
(1),

3767 
FRAC_CONST
(1),

3768 
FRAC_CONST
(1),

3769 
FRAC_CONST
(1),

3770 
FRAC_CONST
(1),

3771 
FRAC_CONST
(1),

3772 
FRAC_CONST
(1),

3773 
FRAC_CONST
(1),

3774 
FRAC_CONST
(1),

3775 
FRAC_CONST
(1),

3776 
FRAC_CONST
(1),

3777 
FRAC_CONST
(1),

3778 
FRAC_CONST
(1),

3779 
FRAC_CONST
(1),

3780 
FRAC_CONST
(1),

3781 
FRAC_CONST
(1),

3782 
FRAC_CONST
(1),

3783 
FRAC_CONST
(1),

3784 
FRAC_CONST
(1),

3785 
FRAC_CONST
(1),

3786 
FRAC_CONST
(1),

3787 
FRAC_CONST
(1),

3788 
FRAC_CONST
(1),

3789 
FRAC_CONST
(1),

3790 
FRAC_CONST
(1),

3791 
FRAC_CONST
(1),

3792 
FRAC_CONST
(1),

3793 
FRAC_CONST
(1),

3794 
FRAC_CONST
(1),

3795 
FRAC_CONST
(1),

3796 
FRAC_CONST
(1),

3797 
FRAC_CONST
(1),

3798 
FRAC_CONST
(1),

3799 
FRAC_CONST
(1),

3800 
FRAC_CONST
(1),

3801 
FRAC_CONST
(1),

3802 
FRAC_CONST
(1),

3803 
FRAC_CONST
(1),

3804 
FRAC_CONST
(1),

3805 
FRAC_CONST
(1),

3806 
FRAC_CONST
(1),

3807 
FRAC_CONST
(1),

3808 
FRAC_CONST
(1)

3811 #ifde‡
ALLOW_SMALL_FRAMELENGTH


3812 
ALIGN
 c⁄° 
ªÆ_t
 
ld_mid_480
[] =

3814 
FRAC_CONST
(0),

3815 
FRAC_CONST
(0),

3816 
FRAC_CONST
(0),

3817 
FRAC_CONST
(0),

3818 
FRAC_CONST
(0),

3819 
FRAC_CONST
(0),

3820 
FRAC_CONST
(0),

3821 
FRAC_CONST
(0),

3822 
FRAC_CONST
(0),

3823 
FRAC_CONST
(0),

3824 
FRAC_CONST
(0),

3825 
FRAC_CONST
(0),

3826 
FRAC_CONST
(0),

3827 
FRAC_CONST
(0),

3828 
FRAC_CONST
(0),

3829 
FRAC_CONST
(0),

3830 
FRAC_CONST
(0),

3831 
FRAC_CONST
(0),

3832 
FRAC_CONST
(0),

3833 
FRAC_CONST
(0),

3834 
FRAC_CONST
(0),

3835 
FRAC_CONST
(0),

3836 
FRAC_CONST
(0),

3837 
FRAC_CONST
(0),

3838 
FRAC_CONST
(0),

3839 
FRAC_CONST
(0),

3840 
FRAC_CONST
(0),

3841 
FRAC_CONST
(0),

3842 
FRAC_CONST
(0),

3843 
FRAC_CONST
(0),

3844 
FRAC_CONST
(0),

3845 
FRAC_CONST
(0),

3846 
FRAC_CONST
(0),

3847 
FRAC_CONST
(0),

3848 
FRAC_CONST
(0),

3849 
FRAC_CONST
(0),

3850 
FRAC_CONST
(0),

3851 
FRAC_CONST
(0),

3852 
FRAC_CONST
(0),

3853 
FRAC_CONST
(0),

3854 
FRAC_CONST
(0),

3855 
FRAC_CONST
(0),

3856 
FRAC_CONST
(0),

3857 
FRAC_CONST
(0),

3858 
FRAC_CONST
(0),

3859 
FRAC_CONST
(0),

3860 
FRAC_CONST
(0),

3861 
FRAC_CONST
(0),

3862 
FRAC_CONST
(0),

3863 
FRAC_CONST
(0),

3864 
FRAC_CONST
(0),

3865 
FRAC_CONST
(0),

3866 
FRAC_CONST
(0),

3867 
FRAC_CONST
(0),

3868 
FRAC_CONST
(0),

3869 
FRAC_CONST
(0),

3870 
FRAC_CONST
(0),

3871 
FRAC_CONST
(0),

3872 
FRAC_CONST
(0),

3873 
FRAC_CONST
(0),

3874 
FRAC_CONST
(0),

3875 
FRAC_CONST
(0),

3876 
FRAC_CONST
(0),

3877 
FRAC_CONST
(0),

3878 
FRAC_CONST
(0),

3879 
FRAC_CONST
(0),

3880 
FRAC_CONST
(0),

3881 
FRAC_CONST
(0),

3882 
FRAC_CONST
(0),

3883 
FRAC_CONST
(0),

3884 
FRAC_CONST
(0),

3885 
FRAC_CONST
(0),

3886 
FRAC_CONST
(0),

3887 
FRAC_CONST
(0),

3888 
FRAC_CONST
(0),

3889 
FRAC_CONST
(0),

3890 
FRAC_CONST
(0),

3891 
FRAC_CONST
(0),

3892 
FRAC_CONST
(0),

3893 
FRAC_CONST
(0),

3894 
FRAC_CONST
(0),

3895 
FRAC_CONST
(0),

3896 
FRAC_CONST
(0),

3897 
FRAC_CONST
(0),

3898 
FRAC_CONST
(0),

3899 
FRAC_CONST
(0),

3900 
FRAC_CONST
(0),

3901 
FRAC_CONST
(0),

3902 
FRAC_CONST
(0),

3903 
FRAC_CONST
(0),

3904 
FRAC_CONST
(0),

3905 
FRAC_CONST
(0),

3906 
FRAC_CONST
(0),

3907 
FRAC_CONST
(0),

3908 
FRAC_CONST
(0),

3909 
FRAC_CONST
(0),

3910 
FRAC_CONST
(0),

3911 
FRAC_CONST
(0),

3912 
FRAC_CONST
(0),

3913 
FRAC_CONST
(0),

3914 
FRAC_CONST
(0),

3915 
FRAC_CONST
(0),

3916 
FRAC_CONST
(0),

3917 
FRAC_CONST
(0),

3918 
FRAC_CONST
(0),

3919 
FRAC_CONST
(0),

3920 
FRAC_CONST
(0),

3921 
FRAC_CONST
(0),

3922 
FRAC_CONST
(0),

3923 
FRAC_CONST
(0),

3924 
FRAC_CONST
(0),

3925 
FRAC_CONST
(0),

3926 
FRAC_CONST
(0),

3927 
FRAC_CONST
(0),

3928 
FRAC_CONST
(0),

3929 
FRAC_CONST
(0),

3930 
FRAC_CONST
(0),

3931 
FRAC_CONST
(0),

3932 
FRAC_CONST
(0),

3933 
FRAC_CONST
(0),

3934 
FRAC_CONST
(0),

3935 
FRAC_CONST
(0),

3936 
FRAC_CONST
(0),

3937 
FRAC_CONST
(0),

3938 
FRAC_CONST
(0),

3939 
FRAC_CONST
(0),

3940 
FRAC_CONST
(0),

3941 
FRAC_CONST
(0),

3942 
FRAC_CONST
(0),

3943 
FRAC_CONST
(0),

3944 
FRAC_CONST
(0),

3945 
FRAC_CONST
(0),

3946 
FRAC_CONST
(0),

3947 
FRAC_CONST
(0),

3948 
FRAC_CONST
(0),

3949 
FRAC_CONST
(0),

3950 
FRAC_CONST
(0),

3951 
FRAC_CONST
(0),

3952 
FRAC_CONST
(0),

3953 
FRAC_CONST
(0),

3954 
FRAC_CONST
(0),

3955 
FRAC_CONST
(0),

3956 
FRAC_CONST
(0),

3957 
FRAC_CONST
(0),

3958 
FRAC_CONST
(0),

3959 
FRAC_CONST
(0),

3960 
FRAC_CONST
(0),

3961 
FRAC_CONST
(0),

3962 
FRAC_CONST
(0),

3963 
FRAC_CONST
(0),

3964 
FRAC_CONST
(0),

3965 
FRAC_CONST
(0),

3966 
FRAC_CONST
(0),

3967 
FRAC_CONST
(0),

3968 
FRAC_CONST
(0),

3969 
FRAC_CONST
(0),

3970 
FRAC_CONST
(0),

3971 
FRAC_CONST
(0),

3972 
FRAC_CONST
(0),

3973 
FRAC_CONST
(0),

3974 
FRAC_CONST
(0),

3975 
FRAC_CONST
(0),

3976 
FRAC_CONST
(0),

3977 
FRAC_CONST
(0),

3978 
FRAC_CONST
(0),

3979 
FRAC_CONST
(0),

3980 
FRAC_CONST
(0),

3981 
FRAC_CONST
(0),

3982 
FRAC_CONST
(0),

3983 
FRAC_CONST
(0),

3984 
FRAC_CONST
(0),

3985 
FRAC_CONST
(0),

3986 
FRAC_CONST
(0),

3987 
FRAC_CONST
(0),

3988 
FRAC_CONST
(0),

3989 
FRAC_CONST
(0),

3990 
FRAC_CONST
(0),

3991 
FRAC_CONST
(0),

3992 
FRAC_CONST
(0),

3993 
FRAC_CONST
(0),

3994 
FRAC_CONST
(0.0065449379673518581),

3995 
FRAC_CONST
(0.019633692460628301),

3996 
FRAC_CONST
(0.032719082821776137),

3997 
FRAC_CONST
(0.045798866936520771),

3998 
FRAC_CONST
(0.058870803651189033),

3999 
FRAC_CONST
(0.071932653156719387),

4000 
FRAC_CONST
(0.084982177372441667),

4001 
FRAC_CONST
(0.09801714032956059),

4002 
FRAC_CONST
(0.11103530855427769),

4003 
FRAC_CONST
(0.12403445145048532),

4004 
FRAC_CONST
(0.13701234168196802),

4005 
FRAC_CONST
(0.14996675555404498),

4006 
FRAC_CONST
(0.16289547339458874),

4007 
FRAC_CONST
(0.17579627993435451),

4008 
FRAC_CONST
(0.18866696468655525),

4009 
FRAC_CONST
(0.2015053223256171),

4010 
FRAC_CONST
(0.21430915306505074),

4011 
FRAC_CONST
(0.2270762630343732),

4012 
FRAC_CONST
(0.23980446465501654),

4013 
FRAC_CONST
(0.25249157701515795),

4014 
FRAC_CONST
(0.26513542624340797),

4015 
FRAC_CONST
(0.27773384588129219),

4016 
FRAC_CONST
(0.29028467725446233),

4017 
FRAC_CONST
(0.3027857698425746),

4018 
FRAC_CONST
(0.31523498164776964),

4019 
FRAC_CONST
(0.32763017956169349),

4020 
FRAC_CONST
(0.33996923973099424),

4021 
FRAC_CONST
(0.35225004792123354),

4022 
FRAC_CONST
(0.36447049987914965),

4023 
FRAC_CONST
(0.37662850169321077),

4024 
FRAC_CONST
(0.38872197015239557),

4025 
FRAC_CONST
(0.40074883310314097),

4026 
FRAC_CONST
(0.41270702980439467),

4027 
FRAC_CONST
(0.42459451128071307),

4028 
FRAC_CONST
(0.43640924067334208),

4029 
FRAC_CONST
(0.44814919358922256),

4030 
FRAC_CONST
(0.45981235844785984),

4031 
FRAC_CONST
(0.47139673682599764),

4032 
FRAC_CONST
(0.48290034380003727),

4033 
FRAC_CONST
(0.49432120828614462),

4034 
FRAC_CONST
(0.50565737337798455),

4035 
FRAC_CONST
(0.51690689668202761),

4036 
FRAC_CONST
(0.52806785065036799),

4037 
FRAC_CONST
(0.53913832291100017),

4038 
FRAC_CONST
(0.55011641659549337),

4039 
FRAC_CONST
(0.56100025066400983),

4040 
FRAC_CONST
(0.57178796022761225),

4041 
FRAC_CONST
(0.58247769686780215),

4042 
FRAC_CONST
(0.59306762895323706),

4043 
FRAC_CONST
(0.60355594195357143),

4044 
FRAC_CONST
(0.61394083875036642),

4045 
FRAC_CONST
(0.62422053994501758),

4046 
FRAC_CONST
(0.63439328416364549),

4047 
FRAC_CONST
(0.64445732835889735),

4048 
FRAC_CONST
(0.65441094810861034),

4049 
FRAC_CONST
(0.66425243791128175),

4050 
FRAC_CONST
(0.67398011147829784),

4051 
FRAC_CONST
(0.68359230202287125),

4052 
FRAC_CONST
(0.69308736254563585),

4053 
FRAC_CONST
(0.70246366611685174),

4054 
FRAC_CONST
(0.71171960615517138),

4055 
FRAC_CONST
(0.72085359670291882),

4056 
FRAC_CONST
(0.7298640726978356),

4057 
FRAC_CONST
(0.73874949024124625),

4058 
FRAC_CONST
(0.74750832686259672),

4059 
FRAC_CONST
(0.75613908178032285),

4060 
FRAC_CONST
(0.76464027615900032),

4061 
FRAC_CONST
(0.77301045336273699),

4062 
FRAC_CONST
(0.78124817920475853),

4063 
FRAC_CONST
(0.78935204219315003),

4064 
FRAC_CONST
(0.79732065377270711),

4065 
FRAC_CONST
(0.80515264856285829),

4066 
FRAC_CONST
(0.81284668459161513),

4067 
FRAC_CONST
(0.82040144352551359),

4068 
FRAC_CONST
(0.82781563089550203),

4069 
FRAC_CONST
(0.83508797631874299),

4070 
FRAC_CONST
(0.84221723371628654),

4071 
FRAC_CONST
(0.84920218152657889),

4072 
FRAC_CONST
(0.85604162291477137),

4073 
FRAC_CONST
(0.86273438597779184),

4074 
FRAC_CONST
(0.86927932394514362),

4075 
FRAC_CONST
(0.87567531537539967),

4076 
FRAC_CONST
(0.88192126434835494),

4077 
FRAC_CONST
(0.88801610065280734),

4078 
FRAC_CONST
(0.89395877996993212),

4079 
FRAC_CONST
(0.8997482840522214),

4080 
FRAC_CONST
(0.90538362089795521),

4081 
FRAC_CONST
(0.91086382492117568),

4082 
FRAC_CONST
(0.91618795711713596),

4083 
FRAC_CONST
(0.92135510522319242),

4084 
FRAC_CONST
(0.9263643838751181),

4085 
FRAC_CONST
(0.93121493475880346),

4086 
FRAC_CONST
(0.93590592675732565),

4087 
FRAC_CONST
(0.94043655609335486),

4088 
FRAC_CONST
(0.94480604646687805),

4089 
FRAC_CONST
(0.94901364918821385),

4090 
FRAC_CONST
(0.95305864330629697),

4091 
FRAC_CONST
(0.95694033573220882),

4092 
FRAC_CONST
(0.9606580613579353),

4093 
FRAC_CONST
(0.96421118317032928),

4094 
FRAC_CONST
(0.96759909236025976),

4095 
FRAC_CONST
(0.9708212084269281),

4096 
FRAC_CONST
(0.97387697927733363),

4097 
FRAC_CONST
(0.97676588132087239),

4098 
FRAC_CONST
(0.97948741955905139),

4099 
FRAC_CONST
(0.98204112767030394),

4100 
FRAC_CONST
(0.98442656808989171),

4101 
FRAC_CONST
(0.98664333208487898),

4102 
FRAC_CONST
(0.98869103982416728),

4103 
FRAC_CONST
(0.99056934044357725),

4104 
FRAC_CONST
(0.99227791210596705),

4105 
FRAC_CONST
(0.99381646205637808),

4106 
FRAC_CONST
(0.99518472667219682),

4107 
FRAC_CONST
(0.99638247150832537),

4108 
FRAC_CONST
(0.99740949133735191),

4109 
FRAC_CONST
(0.99826561018471593),

4110 
FRAC_CONST
(0.99895068135886012),

4111 
FRAC_CONST
(0.99946458747636568),

4112 
FRAC_CONST
(0.99980724048206482),

4113 
FRAC_CONST
(0.99997858166412923),

4114 
FRAC_CONST
(1),

4115 
FRAC_CONST
(1),

4116 
FRAC_CONST
(1),

4117 
FRAC_CONST
(1),

4118 
FRAC_CONST
(1),

4119 
FRAC_CONST
(1),

4120 
FRAC_CONST
(1),

4121 
FRAC_CONST
(1),

4122 
FRAC_CONST
(1),

4123 
FRAC_CONST
(1),

4124 
FRAC_CONST
(1),

4125 
FRAC_CONST
(1),

4126 
FRAC_CONST
(1),

4127 
FRAC_CONST
(1),

4128 
FRAC_CONST
(1),

4129 
FRAC_CONST
(1),

4130 
FRAC_CONST
(1),

4131 
FRAC_CONST
(1),

4132 
FRAC_CONST
(1),

4133 
FRAC_CONST
(1),

4134 
FRAC_CONST
(1),

4135 
FRAC_CONST
(1),

4136 
FRAC_CONST
(1),

4137 
FRAC_CONST
(1),

4138 
FRAC_CONST
(1),

4139 
FRAC_CONST
(1),

4140 
FRAC_CONST
(1),

4141 
FRAC_CONST
(1),

4142 
FRAC_CONST
(1),

4143 
FRAC_CONST
(1),

4144 
FRAC_CONST
(1),

4145 
FRAC_CONST
(1),

4146 
FRAC_CONST
(1),

4147 
FRAC_CONST
(1),

4148 
FRAC_CONST
(1),

4149 
FRAC_CONST
(1),

4150 
FRAC_CONST
(1),

4151 
FRAC_CONST
(1),

4152 
FRAC_CONST
(1),

4153 
FRAC_CONST
(1),

4154 
FRAC_CONST
(1),

4155 
FRAC_CONST
(1),

4156 
FRAC_CONST
(1),

4157 
FRAC_CONST
(1),

4158 
FRAC_CONST
(1),

4159 
FRAC_CONST
(1),

4160 
FRAC_CONST
(1),

4161 
FRAC_CONST
(1),

4162 
FRAC_CONST
(1),

4163 
FRAC_CONST
(1),

4164 
FRAC_CONST
(1),

4165 
FRAC_CONST
(1),

4166 
FRAC_CONST
(1),

4167 
FRAC_CONST
(1),

4168 
FRAC_CONST
(1),

4169 
FRAC_CONST
(1),

4170 
FRAC_CONST
(1),

4171 
FRAC_CONST
(1),

4172 
FRAC_CONST
(1),

4173 
FRAC_CONST
(1),

4174 
FRAC_CONST
(1),

4175 
FRAC_CONST
(1),

4176 
FRAC_CONST
(1),

4177 
FRAC_CONST
(1),

4178 
FRAC_CONST
(1),

4179 
FRAC_CONST
(1),

4180 
FRAC_CONST
(1),

4181 
FRAC_CONST
(1),

4182 
FRAC_CONST
(1),

4183 
FRAC_CONST
(1),

4184 
FRAC_CONST
(1),

4185 
FRAC_CONST
(1),

4186 
FRAC_CONST
(1),

4187 
FRAC_CONST
(1),

4188 
FRAC_CONST
(1),

4189 
FRAC_CONST
(1),

4190 
FRAC_CONST
(1),

4191 
FRAC_CONST
(1),

4192 
FRAC_CONST
(1),

4193 
FRAC_CONST
(1),

4194 
FRAC_CONST
(1),

4195 
FRAC_CONST
(1),

4196 
FRAC_CONST
(1),

4197 
FRAC_CONST
(1),

4198 
FRAC_CONST
(1),

4199 
FRAC_CONST
(1),

4200 
FRAC_CONST
(1),

4201 
FRAC_CONST
(1),

4202 
FRAC_CONST
(1),

4203 
FRAC_CONST
(1),

4204 
FRAC_CONST
(1),

4205 
FRAC_CONST
(1),

4206 
FRAC_CONST
(1),

4207 
FRAC_CONST
(1),

4208 
FRAC_CONST
(1),

4209 
FRAC_CONST
(1),

4210 
FRAC_CONST
(1),

4211 
FRAC_CONST
(1),

4212 
FRAC_CONST
(1),

4213 
FRAC_CONST
(1),

4214 
FRAC_CONST
(1),

4215 
FRAC_CONST
(1),

4216 
FRAC_CONST
(1),

4217 
FRAC_CONST
(1),

4218 
FRAC_CONST
(1),

4219 
FRAC_CONST
(1),

4220 
FRAC_CONST
(1),

4221 
FRAC_CONST
(1),

4222 
FRAC_CONST
(1),

4223 
FRAC_CONST
(1),

4224 
FRAC_CONST
(1),

4225 
FRAC_CONST
(1),

4226 
FRAC_CONST
(1),

4227 
FRAC_CONST
(1),

4228 
FRAC_CONST
(1),

4229 
FRAC_CONST
(1),

4230 
FRAC_CONST
(1),

4231 
FRAC_CONST
(1),

4232 
FRAC_CONST
(1),

4233 
FRAC_CONST
(1),

4234 
FRAC_CONST
(1),

4235 
FRAC_CONST
(1),

4236 
FRAC_CONST
(1),

4237 
FRAC_CONST
(1),

4238 
FRAC_CONST
(1),

4239 
FRAC_CONST
(1),

4240 
FRAC_CONST
(1),

4241 
FRAC_CONST
(1),

4242 
FRAC_CONST
(1),

4243 
FRAC_CONST
(1),

4244 
FRAC_CONST
(1),

4245 
FRAC_CONST
(1),

4246 
FRAC_CONST
(1),

4247 
FRAC_CONST
(1),

4248 
FRAC_CONST
(1),

4249 
FRAC_CONST
(1),

4250 
FRAC_CONST
(1),

4251 
FRAC_CONST
(1),

4252 
FRAC_CONST
(1),

4253 
FRAC_CONST
(1),

4254 
FRAC_CONST
(1),

4255 
FRAC_CONST
(1),

4256 
FRAC_CONST
(1),

4257 
FRAC_CONST
(1),

4258 
FRAC_CONST
(1),

4259 
FRAC_CONST
(1),

4260 
FRAC_CONST
(1),

4261 
FRAC_CONST
(1),

4262 
FRAC_CONST
(1),

4263 
FRAC_CONST
(1),

4264 
FRAC_CONST
(1),

4265 
FRAC_CONST
(1),

4266 
FRAC_CONST
(1),

4267 
FRAC_CONST
(1),

4268 
FRAC_CONST
(1),

4269 
FRAC_CONST
(1),

4270 
FRAC_CONST
(1),

4271 
FRAC_CONST
(1),

4272 
FRAC_CONST
(1),

4273 
FRAC_CONST
(1),

4274 
FRAC_CONST
(1),

4275 
FRAC_CONST
(1),

4276 
FRAC_CONST
(1),

4277 
FRAC_CONST
(1),

4278 
FRAC_CONST
(1),

4279 
FRAC_CONST
(1),

4280 
FRAC_CONST
(1),

4281 
FRAC_CONST
(1),

4282 
FRAC_CONST
(1),

4283 
FRAC_CONST
(1),

4284 
FRAC_CONST
(1),

4285 
FRAC_CONST
(1),

4286 
FRAC_CONST
(1),

4287 
FRAC_CONST
(1),

4288 
FRAC_CONST
(1),

4289 
FRAC_CONST
(1),

4290 
FRAC_CONST
(1),

4291 
FRAC_CONST
(1),

4292 
FRAC_CONST
(1),

4293 
FRAC_CONST
(1)

4298 #ifde‡
__˝lu•lus


	@specrec.c

35 
	~"comm⁄.h
"

36 
	~"°ru˘s.h
"

38 
	~<°rög.h
>

39 
	~<°dlib.h
>

40 
	~"•e¸ec.h
"

41 
	~"fûtb™k.h
"

42 
	~"sy¡ax.h
"

43 
	~"iq_èbÀ.h
"

44 
	~"ms.h
"

45 
	~"is.h
"

46 
	~"≤s.h
"

47 
	~"äs.h
"

48 
	~"drc.h
"

49 
	~"…_¥edi˘.h
"

50 
	~"ic_¥edi˘.h
"

51 #ifde‡
SSR_DEC


52 
	~"s§.h
"

53 
	~"s§_fb.h
"

58 
uöt8_t
 
qu™t_to_•ec
(
NeAACDecH™dÀ
 
hDecodî
,

59 
ic_°ªam
 *
ics
, 
öt16_t
 *
qu™t_d©a
,

60 
ªÆ_t
 *
•ec_d©a
, 
uöt16_t
 
‰ame_Àn
);

63 #ifde‡
LD_DEC


64 
ALIGN
 c⁄° 
uöt8_t
 
	gnum_swb_512_wödow
[] =

68 
ALIGN
 c⁄° 
uöt8_t
 
	gnum_swb_480_wödow
[] =

74 
ALIGN
 c⁄° 
uöt8_t
 
	gnum_swb_960_wödow
[] =

79 
ALIGN
 c⁄° 
uöt8_t
 
	gnum_swb_1024_wödow
[] =

84 
ALIGN
 c⁄° 
uöt8_t
 
	gnum_swb_128_wödow
[] =

89 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_1024_96
[] =

96 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_128_96
[] =

101 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_1024_64
[] =

109 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_128_64
[] =

114 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_1024_48
[] =

122 #ifde‡
LD_DEC


123 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_512_48
[] =

130 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_480_48
[] =

138 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_128_48
[] =

143 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_1024_32
[] =

151 #ifde‡
LD_DEC


152 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_512_32
[] =

159 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_480_32
[] =

167 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_1024_24
[] =

175 #ifde‡
LD_DEC


176 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_512_24
[] =

183 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_480_24
[] =

190 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_128_24
[] =

195 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_1024_16
[] =

202 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_128_16
[] =

207 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_1024_8
[] =

214 
ALIGN
 c⁄° 
uöt16_t
 
	gswb_off£t_128_8
[] =

219 
ALIGN
 c⁄° 
uöt16_t
 *
	gswb_off£t_1024_wödow
[] =

221 
swb_off£t_1024_96
,

222 
swb_off£t_1024_96
,

223 
swb_off£t_1024_64
,

224 
swb_off£t_1024_48
,

225 
swb_off£t_1024_48
,

226 
swb_off£t_1024_32
,

227 
swb_off£t_1024_24
,

228 
swb_off£t_1024_24
,

229 
swb_off£t_1024_16
,

230 
swb_off£t_1024_16
,

231 
swb_off£t_1024_16
,

232 
swb_off£t_1024_8


235 #ifde‡
LD_DEC


236 
ALIGN
 c⁄° 
uöt16_t
 *
	gswb_off£t_512_wödow
[] =

241 
swb_off£t_512_48
,

242 
swb_off£t_512_48
,

243 
swb_off£t_512_32
,

244 
swb_off£t_512_24
,

245 
swb_off£t_512_24
,

252 
ALIGN
 c⁄° 
uöt16_t
 *
	gswb_off£t_480_wödow
[] =

257 
swb_off£t_480_48
,

258 
swb_off£t_480_48
,

259 
swb_off£t_480_32
,

260 
swb_off£t_480_24
,

261 
swb_off£t_480_24
,

269 
ALIGN
 c⁄° 
uöt16_t
 *
	gswb_off£t_128_wödow
[] =

271 
swb_off£t_128_96
,

272 
swb_off£t_128_96
,

273 
swb_off£t_128_64
,

274 
swb_off£t_128_48
,

275 
swb_off£t_128_48
,

276 
swb_off£t_128_48
,

277 
swb_off£t_128_24
,

278 
swb_off£t_128_24
,

279 
swb_off£t_128_16
,

280 
swb_off£t_128_16
,

281 
swb_off£t_128_16
,

282 
swb_off£t_128_8


285 
	#bô_£t
(
A
, 
B
Ë((AË& (1<<(B)))

	)

300 
uöt8_t
 
	$wödow_groupög_öfo
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics
)

302 
uöt8_t
 
i
, 
g
;

304 
uöt8_t
 
sf_ödex
 = 
hDecodî
->sf_index;

306 
ics
->
wödow_£quí˚
) {

307 
ONLY_LONG_SEQUENCE
:

308 
LONG_START_SEQUENCE
:

309 
LONG_STOP_SEQUENCE
:

310 
ics
->
num_wödows
 = 1;

311 
ics
->
num_wödow_groups
 = 1;

312 
ics
->
wödow_group_Àngth
[ics->
num_wödow_groups
-1] = 1;

313 #ifde‡
LD_DEC


314 i‡(
hDecodî
->
obje˘_ty≥
 =
LD
)

316 i‡(
hDecodî
->
‰ameLígth
 == 512)

317 
ics
->
num_swb
 = 
num_swb_512_wödow
[
sf_ödex
];

319 
ics
->
num_swb
 = 
num_swb_480_wödow
[
sf_ödex
];

322 i‡(
hDecodî
->
‰ameLígth
 == 1024)

323 
ics
->
num_swb
 = 
num_swb_1024_wödow
[
sf_ödex
];

325 
ics
->
num_swb
 = 
num_swb_960_wödow
[
sf_ödex
];

326 #ifde‡
LD_DEC


332 #ifde‡
LD_DEC


333 i‡(
hDecodî
->
obje˘_ty≥
 =
LD
)

335 i‡(
hDecodî
->
‰ameLígth
 == 512)

337 
i
 = 0; i < 
ics
->
num_swb
; i++)

339 
ics
->
£˘_sfb_off£t
[0][
i
] = 
swb_off£t_512_wödow
[
sf_ödex
][i];

340 
ics
->
swb_off£t
[
i
] = 
swb_off£t_512_wödow
[
sf_ödex
][i];

343 
i
 = 0; i < 
ics
->
num_swb
; i++)

345 
ics
->
£˘_sfb_off£t
[0][
i
] = 
swb_off£t_480_wödow
[
sf_ödex
][i];

346 
ics
->
swb_off£t
[
i
] = 
swb_off£t_480_wödow
[
sf_ödex
][i];

349 
ics
->
£˘_sfb_off£t
[0][ics->
num_swb
] = 
hDecodî
->
‰ameLígth
;

350 
ics
->
swb_off£t
[ics->
num_swb
] = 
hDecodî
->
‰ameLígth
;

353 
i
 = 0; i < 
ics
->
num_swb
; i++)

355 
ics
->
£˘_sfb_off£t
[0][
i
] = 
swb_off£t_1024_wödow
[
sf_ödex
][i];

356 
ics
->
swb_off£t
[
i
] = 
swb_off£t_1024_wödow
[
sf_ödex
][i];

358 
ics
->
£˘_sfb_off£t
[0][ics->
num_swb
] = 
hDecodî
->
‰ameLígth
;

359 
ics
->
swb_off£t
[ics->
num_swb
] = 
hDecodî
->
‰ameLígth
;

360 #ifde‡
LD_DEC


364 
EIGHT_SHORT_SEQUENCE
:

365 
ics
->
num_wödows
 = 8;

366 
ics
->
num_wödow_groups
 = 1;

367 
ics
->
wödow_group_Àngth
[ics->
num_wödow_groups
-1] = 1;

368 
ics
->
num_swb
 = 
num_swb_128_wödow
[
sf_ödex
];

370 
i
 = 0; i < 
ics
->
num_swb
; i++)

371 
ics
->
swb_off£t
[
i
] = 
swb_off£t_128_wödow
[
sf_ödex
][i];

372 
ics
->
swb_off£t
[ics->
num_swb
] = 
hDecodî
->
‰ameLígth
/8;

374 
i
 = 0; i < 
ics
->
num_wödows
-1; i++) {

375 i‡(
	`bô_£t
(
ics
->
sˇÀ_Á˘‹_groupög
, 6-
i
) == 0)

377 
ics
->
num_wödow_groups
 += 1;

378 
ics
->
wödow_group_Àngth
[ics->
num_wödow_groups
-1] = 1;

380 
ics
->
wödow_group_Àngth
[ics->
num_wödow_groups
-1] += 1;

385 
g
 = 0; g < 
ics
->
num_wödow_groups
; g++)

387 
uöt16_t
 
width
;

388 
uöt8_t
 
£˘_sfb
 = 0;

389 
uöt16_t
 
off£t
 = 0;

391 
i
 = 0; i < 
ics
->
num_swb
; i++)

393 i‡(
i
+1 =
ics
->
num_swb
)

395 
width
 = (
hDecodî
->
‰ameLígth
/8Ë- 
swb_off£t_128_wödow
[
sf_ödex
][
i
];

397 
width
 = 
swb_off£t_128_wödow
[
sf_ödex
][
i
+1] -

398 
swb_off£t_128_wödow
[
sf_ödex
][
i
];

400 
width
 *
ics
->
wödow_group_Àngth
[
g
];

401 
ics
->
£˘_sfb_off£t
[
g
][
£˘_sfb
++] = 
off£t
;

402 
off£t
 +
width
;

404 
ics
->
£˘_sfb_off£t
[
g
][
£˘_sfb
] = 
off£t
;

415 
INLINE
 
ªÆ_t
 
	`iqu™t
(
öt16_t
 
q
, c⁄°Ñól_à*
èb
, 
uöt8_t
 *
îr‹
)

417 #ifde‡
FIXED_POINT


422 #i‚de‡
BIG_IQ_TABLE


423 c⁄° 
ªÆ_t
 
îrc‹r
[] = {

424 
	`REAL_CONST
(0), REAL_CONST(1.0/8.0), REAL_CONST(2.0/8.0), REAL_CONST(3.0/8.0),

425 
	`REAL_CONST
(4.0/8.0), REAL_CONST(5.0/8.0), REAL_CONST(6.0/8.0), REAL_CONST(7.0/8.0),

426 
	`REAL_CONST
(0)

428 
ªÆ_t
 
x1
, 
x2
;

430 
öt16_t
 
sgn
 = 1;

432 i‡(
q
 < 0)

434 
q
 = -q;

435 
sgn
 = -1;

438 i‡(
q
 < 
IQ_TABLE_SIZE
)

441 #ifde‡
IQUANT_PRINT


443 
	`¥ötf
("%d\n", 
sgn
 * 
èb
[
q
]);

445  
sgn
 * 
èb
[
q
];

448 #i‚de‡
BIG_IQ_TABLE


449 i‡(
q
 >= 8192)

451 *
îr‹
 = 17;

456 
x1
 = 
èb
[
q
>>3];

457 
x2
 = 
èb
[(
q
>>3) + 1];

458  
sgn
 * 16 * (
	`MUL_R
(
îrc‹r
[
q
&7],(
x2
-
x1
)) + x1);

460 *
îr‹
 = 17;

465 i‡(
q
 < 0)

468 i‡(-
q
 < 
IQ_TABLE_SIZE
)

469  -
èb
[-
q
];

471 *
îr‹
 = 17;

475 i‡(
q
 < 
IQ_TABLE_SIZE
)

476  
èb
[
q
];

478 *
îr‹
 = 17;

484 #i‚de‡
FIXED_POINT


485 
ALIGN
 c⁄° 
ªÆ_t
 
pow2sf_èb
[] = {

533 
uöt8_t
 
	`qu™t_to_•ec
(
NeAACDecH™dÀ
 
hDecodî
,

534 
ic_°ªam
 *
ics
, 
öt16_t
 *
qu™t_d©a
,

535 
ªÆ_t
 *
•ec_d©a
, 
uöt16_t
 
‰ame_Àn
)

537 
ALIGN
 c⁄° 
ªÆ_t
 
pow2_èbÀ
[] =

539 
	`COEF_CONST
(1.0),

540 
	`COEF_CONST
(1.1892071150027210667174999705605),

541 
	`COEF_CONST
(1.4142135623730950488016887242097),

542 
	`COEF_CONST
(1.6817928305074290860622509524664)

544 c⁄° 
ªÆ_t
 *
èb
 = 
iq_èbÀ
;

546 
uöt8_t
 
g
, 
sfb
, 
wö
;

547 
uöt16_t
 
width
, 
bö
, 
k
, 
gödex
, 
wa
, 
wb
;

548 
uöt8_t
 
îr‹
 = 0;

549 #i‚de‡
FIXED_POINT


550 
ªÆ_t
 
scf
;

553 
k
 = 0;

554 
gödex
 = 0;

556 
g
 = 0; g < 
ics
->
num_wödow_groups
; g++)

558 
uöt16_t
 
j
 = 0;

559 
uöt16_t
 
gö¸ó£
 = 0;

560 
uöt16_t
 
wö_öc
 = 
ics
->
swb_off£t
[ics->
num_swb
];

562 
sfb
 = 0; sfb < 
ics
->
num_swb
; sfb++)

564 
öt32_t
 
exp
, 
‰ac
;

566 
width
 = 
ics
->
swb_off£t
[
sfb
+1] - ics->swb_offset[sfb];

570 i‡(
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] < 0 || ics->scale_factors[g][sfb] > 255)

572 
exp
 = 0;

573 
‰ac
 = 0;

576 
exp
 = (
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] ) >> 2;

578 
‰ac
 = (
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] ) & 3;

581 #ifde‡
FIXED_POINT


582 
exp
 -= 25;

584 i‡(
hDecodî
->
obje˘_ty≥
 =
LD
)

586 
exp
 -= 6 ;

588 i‡(
ics
->
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
)

589 
exp
 -= 4 ;

591 
exp
 -= 7 ;

595 
wa
 = 
gödex
 + 
j
;

597 #i‚de‡
FIXED_POINT


598 
scf
 = 
pow2sf_èb
[
exp
 ] * 
pow2_èbÀ
[
‰ac
];

601 
wö
 = 0; wö < 
ics
->
wödow_group_Àngth
[
g
]; win++)

603 
bö
 = 0; bö < 
width
; bin += 4)

605 #i‚de‡
FIXED_POINT


606 
wb
 = 
wa
 + 
bö
;

608 
•ec_d©a
[
wb
+0] = 
	`iqu™t
(
qu™t_d©a
[
k
+0], 
èb
, &
îr‹
Ë* 
scf
;

609 
•ec_d©a
[
wb
+1] = 
	`iqu™t
(
qu™t_d©a
[
k
+1], 
èb
, &
îr‹
Ë* 
scf
;

610 
•ec_d©a
[
wb
+2] = 
	`iqu™t
(
qu™t_d©a
[
k
+2], 
èb
, &
îr‹
Ë* 
scf
;

611 
•ec_d©a
[
wb
+3] = 
	`iqu™t
(
qu™t_d©a
[
k
+3], 
èb
, &
îr‹
Ë* 
scf
;

614 
ªÆ_t
 
iq0
 = 
	`iqu™t
(
qu™t_d©a
[
k
+0], 
èb
, &
îr‹
);

615 
ªÆ_t
 
iq1
 = 
	`iqu™t
(
qu™t_d©a
[
k
+1], 
èb
, &
îr‹
);

616 
ªÆ_t
 
iq2
 = 
	`iqu™t
(
qu™t_d©a
[
k
+2], 
èb
, &
îr‹
);

617 
ªÆ_t
 
iq3
 = 
	`iqu™t
(
qu™t_d©a
[
k
+3], 
èb
, &
îr‹
);

619 
wb
 = 
wa
 + 
bö
;

621 i‡(
exp
 < 0)

623 
•ec_d©a
[
wb
+0] = 
iq0
 >>-
exp
;

624 
•ec_d©a
[
wb
+1] = 
iq1
 >>-
exp
;

625 
•ec_d©a
[
wb
+2] = 
iq2
 >>-
exp
;

626 
•ec_d©a
[
wb
+3] = 
iq3
 >>-
exp
;

628 
•ec_d©a
[
wb
+0] = 
iq0
 <<
exp
;

629 
•ec_d©a
[
wb
+1] = 
iq1
 <<
exp
;

630 
•ec_d©a
[
wb
+2] = 
iq2
 <<
exp
;

631 
•ec_d©a
[
wb
+3] = 
iq3
 <<
exp
;

633 i‡(
‰ac
 != 0)

635 
•ec_d©a
[
wb
+0] = 
	`MUL_C
(•ec_d©a[wb+0],
pow2_èbÀ
[
‰ac
]);

636 
•ec_d©a
[
wb
+1] = 
	`MUL_C
(•ec_d©a[wb+1],
pow2_èbÀ
[
‰ac
]);

637 
•ec_d©a
[
wb
+2] = 
	`MUL_C
(•ec_d©a[wb+2],
pow2_èbÀ
[
‰ac
]);

638 
•ec_d©a
[
wb
+3] = 
	`MUL_C
(•ec_d©a[wb+3],
pow2_èbÀ
[
‰ac
]);

642 #ifde‡
SCFS_PRINT


643 
	`¥ötf
("%d\n", 
•ec_d©a
[
gödex
+(
wö
*
wö_öc
)+
j
+
bö
+0]);

644 
	`¥ötf
("%d\n", 
•ec_d©a
[
gödex
+(
wö
*
wö_öc
)+
j
+
bö
+1]);

645 
	`¥ötf
("%d\n", 
•ec_d©a
[
gödex
+(
wö
*
wö_öc
)+
j
+
bö
+2]);

646 
	`¥ötf
("%d\n", 
•ec_d©a
[
gödex
+(
wö
*
wö_öc
)+
j
+
bö
+3]);

654 
gö¸ó£
 += 4;

655 
k
 += 4;

657 
wa
 +
wö_öc
;

659 
j
 +
width
;

661 
gödex
 +
gö¸ó£
;

664  
îr‹
;

667 
uöt8_t
 
	`Æloˇã_sögÀ_ch™√l
(
NeAACDecH™dÀ
 
hDecodî
, uöt8_à
ch™√l
,

668 
uöt8_t
 
ouçut_ch™√ls
)

670 
uöt8_t
 
mul
 = 1;

672 #ifde‡
MAIN_DEC


674 i‡(
hDecodî
->
obje˘_ty≥
 =
MAIN
)

677 i‡(
hDecodî
->
¥ed_°©
[
ch™√l
] =
NULL
)

679 
hDecodî
->
¥ed_°©
[
ch™√l
] = (
¥ed_°©e
*)
	`Áad_mÆloc
(hDecodî->
‰ameLígth
 * (pred_state));

680 
	`ª£t_Æl_¥edi˘‹s
(
hDecodî
->
¥ed_°©
[
ch™√l
], hDecodî->
‰ameLígth
);

685 #ifde‡
LTP_DEC


686 i‡(
	`is_…p_Ÿ
(
hDecodî
->
obje˘_ty≥
))

689 i‡(
hDecodî
->
…_¥ed_°©
[
ch™√l
] =
NULL
)

691 
hDecodî
->
…_¥ed_°©
[
ch™√l
] = (
öt16_t
*)
	`Áad_mÆloc
(hDecodî->
‰ameLígth
*4 * (int16_t));

692 
	`mem£t
(
hDecodî
->
…_¥ed_°©
[
ch™√l
], 0, hDecodî->
‰ameLígth
*4 * (
öt16_t
));

697 i‡(
hDecodî
->
time_out
[
ch™√l
] =
NULL
)

699 
mul
 = 1;

700 #ifde‡
SBR_DEC


701 
hDecodî
->
sbr_Ælo˚d
[hDecodî->
‰_ch_ñe
] = 0;

702 i‡((
hDecodî
->
sbr_¥e£¡_Êag
 =1Ë|| (hDecodî->
f‹˚UpSam∂ög
 == 1))

705 
mul
 = 2;

706 
hDecodî
->
sbr_Ælo˚d
[hDecodî->
‰_ch_ñe
] = 1;

709 
hDecodî
->
time_out
[
ch™√l
] = (
ªÆ_t
*)
	`Áad_mÆloc
(
mul
*hDecodî->
‰ameLígth
*(real_t));

710 
	`mem£t
(
hDecodî
->
time_out
[
ch™√l
], 0, 
mul
*hDecodî->
‰ameLígth
*(
ªÆ_t
));

712 #i‡(
	`deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

713 i‡(
ouçut_ch™√ls
 == 2)

715 i‡(
hDecodî
->
time_out
[
ch™√l
+1] =
NULL
)

717 
hDecodî
->
time_out
[
ch™√l
+1] = (
ªÆ_t
*)
	`Áad_mÆloc
(
mul
*hDecodî->
‰ameLígth
*(real_t));

718 
	`mem£t
(
hDecodî
->
time_out
[
ch™√l
+1], 0, 
mul
*hDecodî->
‰ameLígth
*(
ªÆ_t
));

723 i‡(
hDecodî
->
fb_öãrmed
[
ch™√l
] =
NULL
)

725 
hDecodî
->
fb_öãrmed
[
ch™√l
] = (
ªÆ_t
*)
	`Áad_mÆloc
(hDecodî->
‰ameLígth
*(real_t));

726 
	`mem£t
(
hDecodî
->
fb_öãrmed
[
ch™√l
], 0, hDecodî->
‰ameLígth
*(
ªÆ_t
));

729 #ifde‡
SSR_DEC


730 i‡(
hDecodî
->
obje˘_ty≥
 =
SSR
)

732 i‡(
hDecodî
->
s§_ovîœp
[
ch™√l
] =
NULL
)

734 
hDecodî
->
s§_ovîœp
[
ch™√l
] = (
ªÆ_t
*)
	`Áad_mÆloc
(2*hDecodî->
‰ameLígth
*(real_t));

735 
	`mem£t
(
hDecodî
->
s§_ovîœp
[
ch™√l
], 0, 2*hDecodî->
‰ameLígth
*(
ªÆ_t
));

737 i‡(
hDecodî
->
¥ev_fmd
[
ch™√l
] =
NULL
)

739 
uöt16_t
 
k
;

740 
hDecodî
->
¥ev_fmd
[
ch™√l
] = (
ªÆ_t
*)
	`Áad_mÆloc
(2*hDecodî->
‰ameLígth
*(real_t));

741 
k
 = 0; k < 2*
hDecodî
->
‰ameLígth
; k++)

742 
hDecodî
->
¥ev_fmd
[
ch™√l
][
k
] = 
	`REAL_CONST
(-1);

750 
uöt8_t
 
	`Æloˇã_ch™√l_∑ú
(
NeAACDecH™dÀ
 
hDecodî
,

751 
uöt8_t
 
ch™√l
, uöt8_à
∑úed_ch™√l
)

753 
uöt8_t
 
mul
 = 1;

755 #ifde‡
MAIN_DEC


757 i‡(
hDecodî
->
obje˘_ty≥
 =
MAIN
)

760 i‡(
hDecodî
->
¥ed_°©
[
ch™√l
] =
NULL
)

762 
hDecodî
->
¥ed_°©
[
ch™√l
] = (
¥ed_°©e
*)
	`Áad_mÆloc
(hDecodî->
‰ameLígth
 * (pred_state));

763 
	`ª£t_Æl_¥edi˘‹s
(
hDecodî
->
¥ed_°©
[
ch™√l
], hDecodî->
‰ameLígth
);

765 i‡(
hDecodî
->
¥ed_°©
[
∑úed_ch™√l
] =
NULL
)

767 
hDecodî
->
¥ed_°©
[
∑úed_ch™√l
] = (
¥ed_°©e
*)
	`Áad_mÆloc
(hDecodî->
‰ameLígth
 * (pred_state));

768 
	`ª£t_Æl_¥edi˘‹s
(
hDecodî
->
¥ed_°©
[
∑úed_ch™√l
], hDecodî->
‰ameLígth
);

773 #ifde‡
LTP_DEC


774 i‡(
	`is_…p_Ÿ
(
hDecodî
->
obje˘_ty≥
))

777 i‡(
hDecodî
->
…_¥ed_°©
[
ch™√l
] =
NULL
)

779 
hDecodî
->
…_¥ed_°©
[
ch™√l
] = (
öt16_t
*)
	`Áad_mÆloc
(hDecodî->
‰ameLígth
*4 * (int16_t));

780 
	`mem£t
(
hDecodî
->
…_¥ed_°©
[
ch™√l
], 0, hDecodî->
‰ameLígth
*4 * (
öt16_t
));

782 i‡(
hDecodî
->
…_¥ed_°©
[
∑úed_ch™√l
] =
NULL
)

784 
hDecodî
->
…_¥ed_°©
[
∑úed_ch™√l
] = (
öt16_t
*)
	`Áad_mÆloc
(hDecodî->
‰ameLígth
*4 * (int16_t));

785 
	`mem£t
(
hDecodî
->
…_¥ed_°©
[
∑úed_ch™√l
], 0, hDecodî->
‰ameLígth
*4 * (
öt16_t
));

790 i‡(
hDecodî
->
time_out
[
ch™√l
] =
NULL
)

792 
mul
 = 1;

793 #ifde‡
SBR_DEC


794 
hDecodî
->
sbr_Ælo˚d
[hDecodî->
‰_ch_ñe
] = 0;

795 i‡((
hDecodî
->
sbr_¥e£¡_Êag
 =1Ë|| (hDecodî->
f‹˚UpSam∂ög
 == 1))

798 
mul
 = 2;

799 
hDecodî
->
sbr_Ælo˚d
[hDecodî->
‰_ch_ñe
] = 1;

802 
hDecodî
->
time_out
[
ch™√l
] = (
ªÆ_t
*)
	`Áad_mÆloc
(
mul
*hDecodî->
‰ameLígth
*(real_t));

803 
	`mem£t
(
hDecodî
->
time_out
[
ch™√l
], 0, 
mul
*hDecodî->
‰ameLígth
*(
ªÆ_t
));

805 i‡(
hDecodî
->
time_out
[
∑úed_ch™√l
] =
NULL
)

807 
hDecodî
->
time_out
[
∑úed_ch™√l
] = (
ªÆ_t
*)
	`Áad_mÆloc
(
mul
*hDecodî->
‰ameLígth
*(real_t));

808 
	`mem£t
(
hDecodî
->
time_out
[
∑úed_ch™√l
], 0, 
mul
*hDecodî->
‰ameLígth
*(
ªÆ_t
));

811 i‡(
hDecodî
->
fb_öãrmed
[
ch™√l
] =
NULL
)

813 
hDecodî
->
fb_öãrmed
[
ch™√l
] = (
ªÆ_t
*)
	`Áad_mÆloc
(hDecodî->
‰ameLígth
*(real_t));

814 
	`mem£t
(
hDecodî
->
fb_öãrmed
[
ch™√l
], 0, hDecodî->
‰ameLígth
*(
ªÆ_t
));

816 i‡(
hDecodî
->
fb_öãrmed
[
∑úed_ch™√l
] =
NULL
)

818 
hDecodî
->
fb_öãrmed
[
∑úed_ch™√l
] = (
ªÆ_t
*)
	`Áad_mÆloc
(hDecodî->
‰ameLígth
*(real_t));

819 
	`mem£t
(
hDecodî
->
fb_öãrmed
[
∑úed_ch™√l
], 0, hDecodî->
‰ameLígth
*(
ªÆ_t
));

822 #ifde‡
SSR_DEC


823 i‡(
hDecodî
->
obje˘_ty≥
 =
SSR
)

825 i‡(
hDecodî
->
s§_ovîœp
[
˝e
->
ch™√l
] =
NULL
)

827 
hDecodî
->
s§_ovîœp
[
˝e
->
ch™√l
] = (
ªÆ_t
*)
	`Áad_mÆloc
(2*hDecodî->
‰ameLígth
*(real_t));

828 
	`mem£t
(
hDecodî
->
s§_ovîœp
[
˝e
->
ch™√l
], 0, 2*hDecodî->
‰ameLígth
*(
ªÆ_t
));

830 i‡(
hDecodî
->
s§_ovîœp
[
˝e
->
∑úed_ch™√l
] =
NULL
)

832 
hDecodî
->
s§_ovîœp
[
˝e
->
∑úed_ch™√l
] = (
ªÆ_t
*)
	`Áad_mÆloc
(2*hDecodî->
‰ameLígth
*(real_t));

833 
	`mem£t
(
hDecodî
->
s§_ovîœp
[
˝e
->
∑úed_ch™√l
], 0, 2*hDecodî->
‰ameLígth
*(
ªÆ_t
));

835 i‡(
hDecodî
->
¥ev_fmd
[
˝e
->
ch™√l
] =
NULL
)

837 
uöt16_t
 
k
;

838 
hDecodî
->
¥ev_fmd
[
˝e
->
ch™√l
] = (
ªÆ_t
*)
	`Áad_mÆloc
(2*hDecodî->
‰ameLígth
*(real_t));

839 
k
 = 0; k < 2*
hDecodî
->
‰ameLígth
; k++)

840 
hDecodî
->
¥ev_fmd
[
˝e
->
ch™√l
][
k
] = 
	`REAL_CONST
(-1);

842 i‡(
hDecodî
->
¥ev_fmd
[
˝e
->
∑úed_ch™√l
] =
NULL
)

844 
uöt16_t
 
k
;

845 
hDecodî
->
¥ev_fmd
[
˝e
->
∑úed_ch™√l
] = (
ªÆ_t
*)
	`Áad_mÆloc
(2*hDecodî->
‰ameLígth
*(real_t));

846 
k
 = 0; k < 2*
hDecodî
->
‰ameLígth
; k++)

847 
hDecodî
->
¥ev_fmd
[
˝e
->
∑úed_ch™√l
][
k
] = 
	`REAL_CONST
(-1);

855 
uöt8_t
 
	`ªc⁄°ru˘_sögÀ_ch™√l
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics
,

856 
ñemít
 *
s˚
, 
öt16_t
 *
•ec_d©a
)

858 
uöt8_t
 
ªtvÆ
, 
ouçut_ch™√ls
;

859 
ALIGN
 
ªÆ_t
 
•ec_c€f
[1024];

861 #ifde‡
PROFILE


862 
öt64_t
 
cou¡
 = 
	`Áad_gë_ts
();

867 #i‡(
	`deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

868 
ouçut_ch™√ls
 = 2;

870 
ouçut_ch™√ls
 = 1;

873 i‡(
hDecodî
->
ñemít_ouçut_ch™√ls
[hDecodî->
‰_ch_ñe
] == 0)

876 
hDecodî
->
ñemít_ouçut_ch™√ls
[hDecodî->
‰_ch_ñe
] = 
ouçut_ch™√ls
;

877 } i‡(
hDecodî
->
ñemít_ouçut_ch™√ls
[hDecodî->
‰_ch_ñe
] !
ouçut_ch™√ls
) {

882 i‡(
hDecodî
->
ñemít_Ælo˚d
[hDecodî->
‰_ch_ñe
] == 0)

884 
ªtvÆ
 = 
	`Æloˇã_sögÀ_ch™√l
(
hDecodî
, 
s˚
->
ch™√l
, 
ouçut_ch™√ls
);

885 i‡(
ªtvÆ
 > 0)

886  
ªtvÆ
;

888 
hDecodî
->
ñemít_Ælo˚d
[hDecodî->
‰_ch_ñe
] = 1;

893 
ªtvÆ
 = 
	`qu™t_to_•ec
(
hDecodî
, 
ics
, 
•ec_d©a
, 
•ec_c€f
, hDecodî->
‰ameLígth
);

894 i‡(
ªtvÆ
 > 0)

895  
ªtvÆ
;

897 #ifde‡
PROFILE


898 
cou¡
 = 
	`Áad_gë_ts
() - count;

899 
hDecodî
->
ªqu™t_cy˛es
 +
cou¡
;

904 
	`≤s_decode
(
ics
, 
NULL
, 
•ec_c€f
, NULL, 
hDecodî
->
‰ameLígth
, 0, hDecodî->
obje˘_ty≥
);

906 #ifde‡
MAIN_DEC


908 i‡(
hDecodî
->
obje˘_ty≥
 =
MAIN
)

911 
	`ic_¥edi˘i⁄
(
ics
, 
•ec_c€f
, 
hDecodî
->
¥ed_°©
[
s˚
->
ch™√l
], hDecodî->
‰ameLígth
,

912 
hDecodî
->
sf_ödex
);

918 
	`≤s_ª£t_¥ed_°©e
(
ics
, 
hDecodî
->
¥ed_°©
[
s˚
->
ch™√l
]);

922 #ifde‡
LTP_DEC


923 i‡(
	`is_…p_Ÿ
(
hDecodî
->
obje˘_ty≥
))

925 #ifde‡
LD_DEC


926 i‡(
hDecodî
->
obje˘_ty≥
 =
LD
)

928 i‡(
ics
->
…p
.
d©a_¥e£¡
)

930 i‡(
ics
->
…p
.
œg_upd©e
)

931 
hDecodî
->
…p_œg
[
s˚
->
ch™√l
] = 
ics
->
…p
.
œg
;

933 
ics
->
…p
.
œg
 = 
hDecodî
->
…p_œg
[
s˚
->
ch™√l
];

938 
	`…_¥edi˘i⁄
(
ics
, &(ics->
…p
), 
•ec_c€f
, 
hDecodî
->
…_¥ed_°©
[
s˚
->
ch™√l
], hDecodî->
fb
,

939 
ics
->
wödow_sh≠e
, 
hDecodî
->
wödow_sh≠e_¥ev
[
s˚
->
ch™√l
],

940 
hDecodî
->
sf_ödex
, hDecodî->
obje˘_ty≥
, hDecodî->
‰ameLígth
);

945 
	`äs_decode_‰ame
(
ics
, &(ics->
äs
), 
hDecodî
->
sf_ödex
, hDecodî->
obje˘_ty≥
,

946 
•ec_c€f
, 
hDecodî
->
‰ameLígth
);

949 i‡(
hDecodî
->
drc
->
¥e£¡
)

951 i‡(!
hDecodî
->
drc
->
ex˛ude_mask
[
s˚
->
ch™√l
] || !hDecodî->drc->
ex˛uded_chns_¥e£¡
)

952 
	`drc_decode
(
hDecodî
->
drc
, 
•ec_c€f
);

956 #ifde‡
SSR_DEC


957 i‡(
hDecodî
->
obje˘_ty≥
 !
SSR
)

960 
	`ifûãr_b™k
(
hDecodî
->
fb
, 
ics
->
wödow_£quí˚
, ics->
wödow_sh≠e
,

961 
hDecodî
->
wödow_sh≠e_¥ev
[
s˚
->
ch™√l
], 
•ec_c€f
,

962 
hDecodî
->
time_out
[
s˚
->
ch™√l
], hDecodî->
fb_öãrmed
[sce->channel],

963 
hDecodî
->
obje˘_ty≥
, hDecodî->
‰ameLígth
);

964 #ifde‡
SSR_DEC


966 
	`s§_decode
(&(
ics
->
s§
), 
hDecodî
->
fb
, ics->
wödow_£quí˚
, ics->
wödow_sh≠e
,

967 
hDecodî
->
wödow_sh≠e_¥ev
[
s˚
->
ch™√l
], 
•ec_c€f
, hDecodî->
time_out
[sce->channel],

968 
hDecodî
->
s§_ovîœp
[
s˚
->
ch™√l
], hDecodî->
ùqf_buf„r
[s˚->ch™√l], hDecodî->
¥ev_fmd
[sce->channel],

969 
hDecodî
->
‰ameLígth
);

974 
hDecodî
->
wödow_sh≠e_¥ev
[
s˚
->
ch™√l
] = 
ics
->
wödow_sh≠e
;

976 #ifde‡
LTP_DEC


977 i‡(
	`is_…p_Ÿ
(
hDecodî
->
obje˘_ty≥
))

979 
	`…_upd©e_°©e
(
hDecodî
->
…_¥ed_°©
[
s˚
->
ch™√l
], hDecodî->
time_out
[sce->channel],

980 
hDecodî
->
fb_öãrmed
[
s˚
->
ch™√l
], hDecodî->
‰ameLígth
, hDecodî->
obje˘_ty≥
);

984 #ifde‡
SBR_DEC


985 i‡(((
hDecodî
->
sbr_¥e£¡_Êag
 =1Ë|| (hDecodî->
f‹˚UpSam∂ög
 == 1))

986 && 
hDecodî
->
sbr_Ælo˚d
[hDecodî->
‰_ch_ñe
])

988 
uöt8_t
 
ñe
 = 
hDecodî
->
‰_ch_ñe
;

989 
uöt8_t
 
ch
 = 
s˚
->
ch™√l
;

992 i‡(
hDecodî
->
sbr
[
ñe
] =
NULL
)

994 
hDecodî
->
sbr
[
ñe
] = 
	`sbrDecodeInô
(hDecodî->
‰ameLígth
,

995 
hDecodî
->
ñemít_id
[
ñe
], 2*
	`gë_ßm∂e_øã
(hDecodî->
sf_ödex
),

996 
hDecodî
->
downSam∂edSBR


997 #ifde‡
DRM


1003 i‡(
s˚
->
ics1
.
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
)

1004 
hDecodî
->
sbr
[
ñe
]->
maxAACLöe
 = 8*
s˚
->
ics1
.
swb_off£t
[
	`max
(s˚->ics1.
max_sfb
-1, 0)];

1006 
hDecodî
->
sbr
[
ñe
]->
maxAACLöe
 = 
s˚
->
ics1
.
swb_off£t
[
	`max
(s˚->ics1.
max_sfb
-1, 0)];

1009 #i‡(
	`deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

1010 i‡(
hDecodî
->
ps_u£d
[
ñe
] == 0)

1013 
ªtvÆ
 = 
	`sbrDecodeSögÀFøme
(
hDecodî
->
sbr
[
ñe
], hDecodî->
time_out
[
ch
],

1014 
hDecodî
->
po°SìkRe£tFœg
, hDecodî->
downSam∂edSBR
);

1015 #i‡(
	`deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

1017 
ªtvÆ
 = 
	`sbrDecodeSögÀFømePS
(
hDecodî
->
sbr
[
ñe
], hDecodî->
time_out
[
ch
],

1018 
hDecodî
->
time_out
[
ch
+1], hDecodî->
po°SìkRe£tFœg
,

1019 
hDecodî
->
downSam∂edSBR
);

1022 i‡(
ªtvÆ
 > 0)

1023  
ªtvÆ
;

1024 } i‡(((
hDecodî
->
sbr_¥e£¡_Êag
 =1Ë|| (hDecodî->
f‹˚UpSam∂ög
 == 1))

1025 && !
hDecodî
->
sbr_Ælo˚d
[hDecodî->
‰_ch_ñe
])

1032 #i‡(
	`deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

1033 i‡((
hDecodî
->
ps_u£d
[hDecodî->
‰_ch_ñe
] == 0))

1035 
uöt8_t
 
ñe
 = 
hDecodî
->
‰_ch_ñe
;

1036 
uöt8_t
 
ch
 = 
s˚
->
ch™√l
;

1037 
uöt16_t
 
‰ame_size
 = (
hDecodî
->
sbr_Ælo˚d
[
ñe
]) ? 2 : 1;

1038 
‰ame_size
 *
hDecodî
->
‰ameLígth
*(
ªÆ_t
);

1040 
	`mem˝y
(
hDecodî
->
time_out
[
ch
+1], hDecodî->time_out[ch], 
‰ame_size
);

1047 
uöt8_t
 
	`ªc⁄°ru˘_ch™√l_∑ú
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics1
, ic_°ªam *
ics2
,

1048 
ñemít
 *
˝e
, 
öt16_t
 *
•ec_d©a1
, i¡16_à*
•ec_d©a2
)

1050 
uöt8_t
 
ªtvÆ
;

1051 
ALIGN
 
ªÆ_t
 
•ec_c€f1
[1024];

1052 
ALIGN
 
ªÆ_t
 
•ec_c€f2
[1024];

1054 #ifde‡
PROFILE


1055 
öt64_t
 
cou¡
 = 
	`Áad_gë_ts
();

1057 i‡(
hDecodî
->
ñemít_Ælo˚d
[hDecodî->
‰_ch_ñe
] == 0)

1059 
ªtvÆ
 = 
	`Æloˇã_ch™√l_∑ú
(
hDecodî
, 
˝e
->
ch™√l
, (
uöt8_t
)˝e->
∑úed_ch™√l
);

1060 i‡(
ªtvÆ
 > 0)

1061  
ªtvÆ
;

1063 
hDecodî
->
ñemít_Ælo˚d
[hDecodî->
‰_ch_ñe
] = 1;

1067 
ªtvÆ
 = 
	`qu™t_to_•ec
(
hDecodî
, 
ics1
, 
•ec_d©a1
, 
•ec_c€f1
, hDecodî->
‰ameLígth
);

1068 i‡(
ªtvÆ
 > 0)

1069  
ªtvÆ
;

1070 
ªtvÆ
 = 
	`qu™t_to_•ec
(
hDecodî
, 
ics2
, 
•ec_d©a2
, 
•ec_c€f2
, hDecodî->
‰ameLígth
);

1071 i‡(
ªtvÆ
 > 0)

1072  
ªtvÆ
;

1074 #ifde‡
PROFILE


1075 
cou¡
 = 
	`Áad_gë_ts
() - count;

1076 
hDecodî
->
ªqu™t_cy˛es
 +
cou¡
;

1081 i‡(
ics1
->
ms_mask_¥e£¡
)

1083 
	`≤s_decode
(
ics1
, 
ics2
, 
•ec_c€f1
, 
•ec_c€f2
, 
hDecodî
->
‰ameLígth
, 1, hDecodî->
obje˘_ty≥
);

1085 
	`≤s_decode
(
ics1
, 
NULL
, 
•ec_c€f1
, NULL, 
hDecodî
->
‰ameLígth
, 0, hDecodî->
obje˘_ty≥
);

1086 
	`≤s_decode
(
ics2
, 
NULL
, 
•ec_c€f2
, NULL, 
hDecodî
->
‰ameLígth
, 0, hDecodî->
obje˘_ty≥
);

1090 
	`ms_decode
(
ics1
, 
ics2
, 
•ec_c€f1
, 
•ec_c€f2
, 
hDecodî
->
‰ameLígth
);

1094 
i
;

1095 
i
 = 0; i < 1024; i++)

1098 
	`¥ötf
("0x%.8X\n", 
•ec_c€f1
[
i
]);

1100 
i
 = 0; i < 1024; i++)

1103 
	`¥ötf
("0x%.8X\n", 
•ec_c€f2
[
i
]);

1109 
	`is_decode
(
ics1
, 
ics2
, 
•ec_c€f1
, 
•ec_c€f2
, 
hDecodî
->
‰ameLígth
);

1113 
i
;

1114 
i
 = 0; i < 1024; i++)

1116 
	`¥ötf
("%d\n", 
•ec_c€f1
[
i
]);

1119 
i
 = 0; i < 1024; i++)

1121 
	`¥ötf
("%d\n", 
•ec_c€f2
[
i
]);

1127 #ifde‡
MAIN_DEC


1129 i‡(
hDecodî
->
obje˘_ty≥
 =
MAIN
)

1132 
	`ic_¥edi˘i⁄
(
ics1
, 
•ec_c€f1
, 
hDecodî
->
¥ed_°©
[
˝e
->
ch™√l
], hDecodî->
‰ameLígth
,

1133 
hDecodî
->
sf_ödex
);

1134 
	`ic_¥edi˘i⁄
(
ics2
, 
•ec_c€f2
, 
hDecodî
->
¥ed_°©
[
˝e
->
∑úed_ch™√l
], hDecodî->
‰ameLígth
,

1135 
hDecodî
->
sf_ödex
);

1141 
	`≤s_ª£t_¥ed_°©e
(
ics1
, 
hDecodî
->
¥ed_°©
[
˝e
->
ch™√l
]);

1142 
	`≤s_ª£t_¥ed_°©e
(
ics2
, 
hDecodî
->
¥ed_°©
[
˝e
->
∑úed_ch™√l
]);

1146 #ifde‡
LTP_DEC


1147 i‡(
	`is_…p_Ÿ
(
hDecodî
->
obje˘_ty≥
))

1149 
…p_öfo
 *
…p1
 = &(
ics1
->
…p
);

1150 
…p_öfo
 *
…p2
 = (
˝e
->
comm⁄_wödow
Ë? &(
ics2
->…p2Ë: &(ics2->
…p
);

1151 #ifde‡
LD_DEC


1152 i‡(
hDecodî
->
obje˘_ty≥
 =
LD
)

1154 i‡(
…p1
->
d©a_¥e£¡
)

1156 i‡(
…p1
->
œg_upd©e
)

1157 
hDecodî
->
…p_œg
[
˝e
->
ch™√l
] = 
…p1
->
œg
;

1159 
…p1
->
œg
 = 
hDecodî
->
…p_œg
[
˝e
->
ch™√l
];

1160 i‡(
…p2
->
d©a_¥e£¡
)

1162 i‡(
…p2
->
œg_upd©e
)

1163 
hDecodî
->
…p_œg
[
˝e
->
∑úed_ch™√l
] = 
…p2
->
œg
;

1165 
…p2
->
œg
 = 
hDecodî
->
…p_œg
[
˝e
->
∑úed_ch™√l
];

1170 
	`…_¥edi˘i⁄
(
ics1
, 
…p1
, 
•ec_c€f1
, 
hDecodî
->
…_¥ed_°©
[
˝e
->
ch™√l
], hDecodî->
fb
,

1171 
ics1
->
wödow_sh≠e
, 
hDecodî
->
wödow_sh≠e_¥ev
[
˝e
->
ch™√l
],

1172 
hDecodî
->
sf_ödex
, hDecodî->
obje˘_ty≥
, hDecodî->
‰ameLígth
);

1173 
	`…_¥edi˘i⁄
(
ics2
, 
…p2
, 
•ec_c€f2
, 
hDecodî
->
…_¥ed_°©
[
˝e
->
∑úed_ch™√l
], hDecodî->
fb
,

1174 
ics2
->
wödow_sh≠e
, 
hDecodî
->
wödow_sh≠e_¥ev
[
˝e
->
∑úed_ch™√l
],

1175 
hDecodî
->
sf_ödex
, hDecodî->
obje˘_ty≥
, hDecodî->
‰ameLígth
);

1180 
	`äs_decode_‰ame
(
ics1
, &(ics1->
äs
), 
hDecodî
->
sf_ödex
, hDecodî->
obje˘_ty≥
,

1181 
•ec_c€f1
, 
hDecodî
->
‰ameLígth
);

1182 
	`äs_decode_‰ame
(
ics2
, &(ics2->
äs
), 
hDecodî
->
sf_ödex
, hDecodî->
obje˘_ty≥
,

1183 
•ec_c€f2
, 
hDecodî
->
‰ameLígth
);

1186 i‡(
hDecodî
->
drc
->
¥e£¡
)

1188 i‡(!
hDecodî
->
drc
->
ex˛ude_mask
[
˝e
->
ch™√l
] || !hDecodî->drc->
ex˛uded_chns_¥e£¡
)

1189 
	`drc_decode
(
hDecodî
->
drc
, 
•ec_c€f1
);

1190 i‡(!
hDecodî
->
drc
->
ex˛ude_mask
[
˝e
->
∑úed_ch™√l
] || !hDecodî->drc->
ex˛uded_chns_¥e£¡
)

1191 
	`drc_decode
(
hDecodî
->
drc
, 
•ec_c€f2
);

1195 #ifde‡
SSR_DEC


1196 i‡(
hDecodî
->
obje˘_ty≥
 !
SSR
)

1199 
	`ifûãr_b™k
(
hDecodî
->
fb
, 
ics1
->
wödow_£quí˚
, ics1->
wödow_sh≠e
,

1200 
hDecodî
->
wödow_sh≠e_¥ev
[
˝e
->
ch™√l
], 
•ec_c€f1
,

1201 
hDecodî
->
time_out
[
˝e
->
ch™√l
], hDecodî->
fb_öãrmed
[cpe->channel],

1202 
hDecodî
->
obje˘_ty≥
, hDecodî->
‰ameLígth
);

1203 
	`ifûãr_b™k
(
hDecodî
->
fb
, 
ics2
->
wödow_£quí˚
, ics2->
wödow_sh≠e
,

1204 
hDecodî
->
wödow_sh≠e_¥ev
[
˝e
->
∑úed_ch™√l
], 
•ec_c€f2
,

1205 
hDecodî
->
time_out
[
˝e
->
∑úed_ch™√l
], hDecodî->
fb_öãrmed
[cpe->paired_channel],

1206 
hDecodî
->
obje˘_ty≥
, hDecodî->
‰ameLígth
);

1207 #ifde‡
SSR_DEC


1209 
	`s§_decode
(&(
ics1
->
s§
), 
hDecodî
->
fb
, ics1->
wödow_£quí˚
, ics1->
wödow_sh≠e
,

1210 
hDecodî
->
wödow_sh≠e_¥ev
[
˝e
->
ch™√l
], 
•ec_c€f1
, hDecodî->
time_out
[cpe->channel],

1211 
hDecodî
->
s§_ovîœp
[
˝e
->
ch™√l
], hDecodî->
ùqf_buf„r
[cpe->channel],

1212 
hDecodî
->
¥ev_fmd
[
˝e
->
ch™√l
], hDecodî->
‰ameLígth
);

1213 
	`s§_decode
(&(
ics2
->
s§
), 
hDecodî
->
fb
, ics2->
wödow_£quí˚
, ics2->
wödow_sh≠e
,

1214 
hDecodî
->
wödow_sh≠e_¥ev
[
˝e
->
∑úed_ch™√l
], 
•ec_c€f2
, hDecodî->
time_out
[cpe->paired_channel],

1215 
hDecodî
->
s§_ovîœp
[
˝e
->
∑úed_ch™√l
], hDecodî->
ùqf_buf„r
[cpe->paired_channel],

1216 
hDecodî
->
¥ev_fmd
[
˝e
->
∑úed_ch™√l
], hDecodî->
‰ameLígth
);

1221 
hDecodî
->
wödow_sh≠e_¥ev
[
˝e
->
ch™√l
] = 
ics1
->
wödow_sh≠e
;

1222 
hDecodî
->
wödow_sh≠e_¥ev
[
˝e
->
∑úed_ch™√l
] = 
ics2
->
wödow_sh≠e
;

1224 #ifde‡
LTP_DEC


1225 i‡(
	`is_…p_Ÿ
(
hDecodî
->
obje˘_ty≥
))

1227 
	`…_upd©e_°©e
(
hDecodî
->
…_¥ed_°©
[
˝e
->
ch™√l
], hDecodî->
time_out
[cpe->channel],

1228 
hDecodî
->
fb_öãrmed
[
˝e
->
ch™√l
], hDecodî->
‰ameLígth
, hDecodî->
obje˘_ty≥
);

1229 
	`…_upd©e_°©e
(
hDecodî
->
…_¥ed_°©
[
˝e
->
∑úed_ch™√l
], hDecodî->
time_out
[cpe->paired_channel],

1230 
hDecodî
->
fb_öãrmed
[
˝e
->
∑úed_ch™√l
], hDecodî->
‰ameLígth
, hDecodî->
obje˘_ty≥
);

1234 #ifde‡
SBR_DEC


1235 i‡(((
hDecodî
->
sbr_¥e£¡_Êag
 =1Ë|| (hDecodî->
f‹˚UpSam∂ög
 == 1))

1236 && 
hDecodî
->
sbr_Ælo˚d
[hDecodî->
‰_ch_ñe
])

1238 
uöt8_t
 
ñe
 = 
hDecodî
->
‰_ch_ñe
;

1239 
uöt8_t
 
ch0
 = 
˝e
->
ch™√l
;

1240 
uöt8_t
 
ch1
 = 
˝e
->
∑úed_ch™√l
;

1243 i‡(
hDecodî
->
sbr
[
ñe
] =
NULL
)

1245 
hDecodî
->
sbr
[
ñe
] = 
	`sbrDecodeInô
(hDecodî->
‰ameLígth
,

1246 
hDecodî
->
ñemít_id
[
ñe
], 2*
	`gë_ßm∂e_øã
(hDecodî->
sf_ödex
),

1247 
hDecodî
->
downSam∂edSBR


1248 #ifde‡
DRM


1254 i‡(
˝e
->
ics1
.
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
)

1255 
hDecodî
->
sbr
[
ñe
]->
maxAACLöe
 = 8*
˝e
->
ics1
.
swb_off£t
[
	`max
(˝e->ics1.
max_sfb
-1, 0)];

1257 
hDecodî
->
sbr
[
ñe
]->
maxAACLöe
 = 
˝e
->
ics1
.
swb_off£t
[
	`max
(˝e->ics1.
max_sfb
-1, 0)];

1259 
ªtvÆ
 = 
	`sbrDecodeCou∂eFøme
(
hDecodî
->
sbr
[
ñe
],

1260 
hDecodî
->
time_out
[
ch0
], hDecodî->time_out[
ch1
],

1261 
hDecodî
->
po°SìkRe£tFœg
, hDecodî->
downSam∂edSBR
);

1262 i‡(
ªtvÆ
 > 0)

1263  
ªtvÆ
;

1264 } i‡(((
hDecodî
->
sbr_¥e£¡_Êag
 =1Ë|| (hDecodî->
f‹˚UpSam∂ög
 == 1))

1265 && !
hDecodî
->
sbr_Ælo˚d
[hDecodî->
‰_ch_ñe
])

	@specrec.h

28 #i‚de‡
__SPECREC_H__


29 
	#__SPECREC_H__


	)

31 #ifde‡
__˝lu•lus


35 
	~"sy¡ax.h
"

37 
uöt8_t
 
wödow_groupög_öfo
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics
);

38 
uöt8_t
 
ªc⁄°ru˘_ch™√l_∑ú
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics1
, ic_°ªam *
ics2
,

39 
ñemít
 *
˝e
, 
öt16_t
 *
•ec_d©a1
, i¡16_à*
•ec_d©a2
);

40 
uöt8_t
 
ªc⁄°ru˘_sögÀ_ch™√l
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics
, 
ñemít
 *
s˚
,

41 
öt16_t
 *
•ec_d©a
);

43 #ifde‡
__˝lu•lus


	@ssr.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 #ifde‡
SSR_DEC


33 
	~"sy¡ax.h
"

34 
	~"fûtb™k.h
"

35 
	~"s§.h
"

36 
	~"s§_fb.h
"

38 
s§_decode
(
s§_öfo
 *
s§
, 
fb_öfo
 *
fb
, 
uöt8_t
 
wödow_£quí˚
,

39 
uöt8_t
 
wödow_sh≠e
, uöt8_à
wödow_sh≠e_¥ev
,

40 
ªÆ_t
 *
‰eq_ö
,Ñól_à*
time_out
,Ñól_à*
ovîœp
,

41 
ªÆ_t
 
ùqf_buf„r
[
SSR_BANDS
][96/4],

42 
ªÆ_t
 *
¥ev_fmd
, 
uöt16_t
 
‰ame_Àn
)

44 
uöt8_t
 
	gb™d
;

45 
uöt16_t
 
	gs§_‰ame_Àn
 = 
‰ame_Àn
/
SSR_BANDS
;

46 
ªÆ_t
 
	gtime_tmp
[2048] = {0};

47 
ªÆ_t
 
	gouçut
[1024] = {0};

49 
	gb™d
 = 0; b™d < 
	gSSR_BANDS
; band++)

51 
öt16_t
 
	gj
;

54 i‡(
	gb™d
 =1 || 
b™d
 == 3)

56 
j
 = 0; 
	gj
 < 
	gs§_‰ame_Àn
/2; j++)

58 
ªÆ_t
 
	gtmp
;

59 
	gtmp
 = 
‰eq_ö
[
j
 + 
s§_‰ame_Àn
*
b™d
];

60 
	g‰eq_ö
[
j
 + 
s§_‰ame_Àn
*
b™d
] =

61 
‰eq_ö
[
s§_‰ame_Àn
 - 
j
 - 1 + s§_‰ame_Àn*
b™d
];

62 
	g‰eq_ö
[
s§_‰ame_Àn
 - 
j
 - 1 + s§_‰ame_Àn*
b™d
] = 
tmp
;

67 
s§_ifûãr_b™k
(
fb
, 
wödow_£quí˚
, 
wödow_sh≠e
, 
wödow_sh≠e_¥ev
,

68 
‰eq_ö
 + 
b™d
*
s§_‰ame_Àn
, 
time_tmp
 + band*ssr_frame_len,

69 
s§_‰ame_Àn
);

72 
s§_gaö_c⁄åﬁ
(
s§
, 
time_tmp
, 
ouçut
, 
ovîœp
, 
¥ev_fmd
,

73 
b™d
, 
wödow_£quí˚
, 
s§_‰ame_Àn
);

77 
s§_ùqf
(
s§
, 
ouçut
, 
time_out
, 
ùqf_buf„r
, 
‰ame_Àn
, 
SSR_BANDS
);

80 
	$s§_gaö_c⁄åﬁ
(
s§_öfo
 *
s§
, 
ªÆ_t
 *
d©a
,Ñól_à*
ouçut
,

81 
ªÆ_t
 *
ovîœp
,Ñól_à*
¥ev_fmd
, 
uöt8_t
 
b™d
,

82 
uöt8_t
 
wödow_£quí˚
, 
uöt16_t
 
‰ame_Àn
)

84 
uöt16_t
 
i
;

85 
ªÆ_t
 
gc_fun˘i⁄
[2*1024/
SSR_BANDS
];

87 i‡(
wödow_£quí˚
 !
EIGHT_SHORT_SEQUENCE
)

89 
	`s§_gc_fun˘i⁄
(
s§
, &
¥ev_fmd
[
b™d
 * 
‰ame_Àn
*2],

90 
gc_fun˘i⁄
, 
wödow_£quí˚
, 
b™d
, 
‰ame_Àn
);

92 
i
 = 0; i < 
‰ame_Àn
*2; i++)

93 
d©a
[
b™d
 * 
‰ame_Àn
*2 + 
i
] *
gc_fun˘i⁄
[i];

94 
i
 = 0; i < 
‰ame_Àn
; i++)

96 
ouçut
[
b™d
*
‰ame_Àn
 + 
i
] = 
ovîœp
[band*frame_len + i] +

97 
d©a
[
b™d
*
‰ame_Àn
*2 + 
i
];

99 
i
 = 0; i < 
‰ame_Àn
; i++)

101 
ovîœp
[
b™d
*
‰ame_Àn
 + 
i
] =

102 
d©a
[
b™d
*
‰ame_Àn
*2 + føme_À¿+ 
i
];

105 
uöt8_t
 
w
;

106 
w
 = 0; w < 8; w++)

108 
uöt16_t
 
‰ame_Àn8
 = 
‰ame_Àn
/8;

109 
uöt16_t
 
‰ame_Àn16
 = 
‰ame_Àn
/16;

111 
	`s§_gc_fun˘i⁄
(
s§
, &
¥ev_fmd
[
b™d
*
‰ame_Àn
*2 + 
w
*frame_len*2/8],

112 
gc_fun˘i⁄
, 
wödow_£quí˚
, 
‰ame_Àn
);

114 
i
 = 0; i < 
‰ame_Àn8
*2; i++)

115 
d©a
[
b™d
*
‰ame_Àn
*2 + 
w
*
‰ame_Àn8
*2+
i
] *
gc_fun˘i⁄
[i];

116 
i
 = 0; i < 
‰ame_Àn8
; i++)

118 
ovîœp
[
b™d
*
‰ame_Àn
 + 
i
 + 7*
‰ame_Àn16
 + 
w
*
‰ame_Àn8
] +=

119 
d©a
[
b™d
*
‰ame_Àn
*2 + 2*
w
*
‰ame_Àn8
 + 
i
];

121 
i
 = 0; i < 
‰ame_Àn8
; i++)

123 
ovîœp
[
b™d
*
‰ame_Àn
 + 
i
 + 7*
‰ame_Àn16
 + (
w
+1)*
‰ame_Àn8
] =

124 
d©a
[
b™d
*
‰ame_Àn
*2 + 2*
w
*
‰ame_Àn8
 + føme_Àn8 + 
i
];

127 
i
 = 0; i < 
‰ame_Àn
; i++)

128 
ouçut
[
b™d
*
‰ame_Àn
 + 
i
] = 
ovîœp
[band*frame_len + i];

129 
i
 = 0; i < 
‰ame_Àn
; i++)

130 
ovîœp
[
b™d
*
‰ame_Àn
 + 
i
] = overlap[band*frame_len + i + frame_len];

132 
	}
}

134 
	$s§_gc_fun˘i⁄
(
s§_öfo
 *
s§
, 
ªÆ_t
 *
¥ev_fmd
,

135 
ªÆ_t
 *
gc_fun˘i⁄
, 
uöt8_t
 
wödow_£quí˚
,

136 
uöt8_t
 
b™d
, 
uöt16_t
 
‰ame_Àn
)

138 
uöt16_t
 
i
;

139 
uöt16_t
 
Àn_¨ó1
, 
Àn_¨ó2
;

140 
öt32_t
 
Æoc
[10];

141 
ªÆ_t
 
Æev
[10];

143 
wödow_£quí˚
)

145 
ONLY_LONG_SEQUENCE
:

146 
Àn_¨ó1
 = 
‰ame_Àn
/
SSR_BANDS
;

147 
Àn_¨ó2
 = 0;

149 
LONG_START_SEQUENCE
:

150 
Àn_¨ó1
 = (
‰ame_Àn
/
SSR_BANDS
)*7/32;

151 
Àn_¨ó2
 = (
‰ame_Àn
/
SSR_BANDS
)/16;

153 
EIGHT_SHORT_SEQUENCE
:

154 
Àn_¨ó1
 = (
‰ame_Àn
/8)/
SSR_BANDS
;

155 
Àn_¨ó2
 = 0;

157 
LONG_STOP_SEQUENCE
:

158 
Àn_¨ó1
 = (
‰ame_Àn
/
SSR_BANDS
);

159 
Àn_¨ó2
 = 0;

168 
i
 = 0; i < 
‰ame_Àn
*2; i++)

169 
gc_fun˘i⁄
[
i
] = 1;

170 
	}
}

	@ssr.h

28 #i‚de‡
__SSR_H__


29 
	#__SSR_H__


	)

31 #ifde‡
__˝lu•lus


35 
	#SSR_BANDS
 4

	)

36 
	#PQFTAPS
 96

	)

38 
s§_decode
(
s§_öfo
 *
s§
, 
fb_öfo
 *
fb
, 
uöt8_t
 
wödow_£quí˚
,

39 
uöt8_t
 
wödow_sh≠e
, uöt8_à
wödow_sh≠e_¥ev
,

40 
ªÆ_t
 *
‰eq_ö
,Ñól_à*
time_out
,Ñól_à*
ovîœp
,

41 
ªÆ_t
 
ùqf_buf„r
[
SSR_BANDS
][96/4],

42 
ªÆ_t
 *
¥ev_fmd
, 
uöt16_t
 
‰ame_Àn
);

45 
s§_gaö_c⁄åﬁ
(
s§_öfo
 *
s§
, 
ªÆ_t
 *
d©a
,Ñól_à*
ouçut
,

46 
ªÆ_t
 *
ovîœp
,Ñól_à*
¥ev_fmd
, 
uöt8_t
 
b™d
,

47 
uöt8_t
 
wödow_£quí˚
, 
uöt16_t
 
‰ame_Àn
);

48 
s§_gc_fun˘i⁄
(
s§_öfo
 *
s§
, 
ªÆ_t
 *
¥ev_fmd
,

49 
ªÆ_t
 *
gc_fun˘i⁄
, 
uöt8_t
 
wödow_£quí˚
,

50 
uöt16_t
 
‰ame_Àn
);

53 #ifde‡
__˝lu•lus


	@ssr_fb.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 #ifde‡
SSR_DEC


33 
	~<°rög.h
>

34 
	~<°dlib.h
>

35 
	~"sy¡ax.h
"

36 
	~"fûtb™k.h
"

37 
	~"md˘.h
"

38 
	~"s§_fb.h
"

39 
	~"s§_wö.h
"

41 
fb_öfo
 *
	$s§_fûãr_b™k_öô
(
uöt16_t
 
‰ame_Àn
)

43 
uöt16_t
 
nsh‹t
 = 
‰ame_Àn
/8;

45 
fb_öfo
 *
fb
 = (fb_öfo*)
	`Áad_mÆloc
((fb_info));

46 
	`mem£t
(
fb
, 0, (
fb_öfo
));

49 
fb
->
md˘256
 = 
	`Áad_md˘_öô
(2*
nsh‹t
);

50 
fb
->
md˘2048
 = 
	`Áad_md˘_öô
(2*
‰ame_Àn
);

52 
fb
->
l⁄g_wödow
[0] = 
söe_l⁄g_256
;

53 
fb
->
sh‹t_wödow
[0] = 
söe_sh‹t_32
;

54 
fb
->
l⁄g_wödow
[1] = 
kbd_l⁄g_256
;

55 
fb
->
sh‹t_wödow
[1] = 
kbd_sh‹t_32
;

57  
fb
;

58 
	}
}

60 
	$s§_fûãr_b™k_íd
(
fb_öfo
 *
fb
)

62 
	`Áad_md˘_íd
(
fb
->
md˘256
);

63 
	`Áad_md˘_íd
(
fb
->
md˘2048
);

65 i‡(
fb
Ë
	`Áad_‰ì
(fb);

66 
	}
}

68 
INLINE
 
	$imd˘_s§
(
fb_öfo
 *
fb
, 
ªÆ_t
 *
ö_d©a
,

69 
ªÆ_t
 *
out_d©a
, 
uöt16_t
 
Àn
)

71 
md˘_öfo
 *
md˘
;

73 
Àn
)

76 
md˘
 = 
fb
->
md˘2048
;

79 
md˘
 = 
fb
->
md˘256
;

83 
	`Áad_imd˘
(
md˘
, 
ö_d©a
, 
out_d©a
);

84 
	}
}

87 
	$s§_ifûãr_b™k
(
fb_öfo
 *
fb
, 
uöt8_t
 
wödow_£quí˚
, uöt8_à
wödow_sh≠e
,

88 
uöt8_t
 
wödow_sh≠e_¥ev
, 
ªÆ_t
 *
‰eq_ö
,

89 
ªÆ_t
 *
time_out
, 
uöt16_t
 
‰ame_Àn
)

91 
öt16_t
 
i
;

92 
ªÆ_t
 *
å™sf_buf
;

94 
ªÆ_t
 *
wödow_l⁄g
;

95 
ªÆ_t
 *
wödow_l⁄g_¥ev
;

96 
ªÆ_t
 *
wödow_sh‹t
;

97 
ªÆ_t
 *
wödow_sh‹t_¥ev
;

99 
uöt16_t
 
∆⁄g
 = 
‰ame_Àn
;

100 
uöt16_t
 
nsh‹t
 = 
‰ame_Àn
/8;

101 
uöt16_t
 
å™s
 = 
nsh‹t
/2;

103 
uöt16_t
 
nÊ©_ls
 = (
∆⁄g
-
nsh‹t
)/2;

105 
å™sf_buf
 = (
ªÆ_t
*)
	`Áad_mÆloc
(2*
∆⁄g
*(real_t));

107 
wödow_l⁄g
 = 
fb
->
l⁄g_wödow
[
wödow_sh≠e
];

108 
wödow_l⁄g_¥ev
 = 
fb
->
l⁄g_wödow
[
wödow_sh≠e_¥ev
];

109 
wödow_sh‹t
 = 
fb
->
sh‹t_wödow
[
wödow_sh≠e
];

110 
wödow_sh‹t_¥ev
 = 
fb
->
sh‹t_wödow
[
wödow_sh≠e_¥ev
];

112 
wödow_£quí˚
)

114 
ONLY_LONG_SEQUENCE
:

115 
	`imd˘_s§
(
fb
, 
‰eq_ö
, 
å™sf_buf
, 2*
∆⁄g
);

116 
i
 = 
∆⁄g
-1; i >= 0; i--)

118 
time_out
[
i
] = 
	`MUL_R_C
(
å™sf_buf
[i],
wödow_l⁄g_¥ev
[i]);

119 
time_out
[
∆⁄g
+
i
] = 
	`MUL_R_C
(
å™sf_buf
[∆⁄g+i],
wödow_l⁄g
[nlong-1-i]);

123 
LONG_START_SEQUENCE
:

124 
	`imd˘_s§
(
fb
, 
‰eq_ö
, 
å™sf_buf
, 2*
∆⁄g
);

125 
i
 = 0; i < 
∆⁄g
; i++)

126 
time_out
[
i
] = 
	`MUL_R_C
(
å™sf_buf
[i],
wödow_l⁄g_¥ev
[i]);

127 
i
 = 0; i < 
nÊ©_ls
; i++)

128 
time_out
[
∆⁄g
+
i
] = 
å™sf_buf
[nlong+i];

129 
i
 = 0; i < 
nsh‹t
; i++)

130 
time_out
[
∆⁄g
+
nÊ©_ls
+
i
] = 
	`MUL_R_C
(
å™sf_buf
[∆⁄g+nÊ©_ls+i],
wödow_sh‹t
[
nsh‹t
-i-1]);

131 
i
 = 0; i < 
nÊ©_ls
; i++)

132 
time_out
[
∆⁄g
+
nÊ©_ls
+
nsh‹t
+
i
] = 0;

135 
EIGHT_SHORT_SEQUENCE
:

136 
	`imd˘_s§
(
fb
, 
‰eq_ö
+0*
nsh‹t
, 
å™sf_buf
+2*nshort*0, 2*nshort);

137 
	`imd˘_s§
(
fb
, 
‰eq_ö
+1*
nsh‹t
, 
å™sf_buf
+2*nshort*1, 2*nshort);

138 
	`imd˘_s§
(
fb
, 
‰eq_ö
+2*
nsh‹t
, 
å™sf_buf
+2*nshort*2, 2*nshort);

139 
	`imd˘_s§
(
fb
, 
‰eq_ö
+3*
nsh‹t
, 
å™sf_buf
+2*nshort*3, 2*nshort);

140 
	`imd˘_s§
(
fb
, 
‰eq_ö
+4*
nsh‹t
, 
å™sf_buf
+2*nshort*4, 2*nshort);

141 
	`imd˘_s§
(
fb
, 
‰eq_ö
+5*
nsh‹t
, 
å™sf_buf
+2*nshort*5, 2*nshort);

142 
	`imd˘_s§
(
fb
, 
‰eq_ö
+6*
nsh‹t
, 
å™sf_buf
+2*nshort*6, 2*nshort);

143 
	`imd˘_s§
(
fb
, 
‰eq_ö
+7*
nsh‹t
, 
å™sf_buf
+2*nshort*7, 2*nshort);

144 
i
 = 
nsh‹t
-1; i >= 0; i--)

146 
time_out
[
i
+0*
nsh‹t
] = 
	`MUL_R_C
(
å™sf_buf
[nsh‹t*0+i],
wödow_sh‹t_¥ev
[i]);

147 
time_out
[
i
+1*
nsh‹t
] = 
	`MUL_R_C
(
å™sf_buf
[nsh‹t*1+i],
wödow_sh‹t
[i]);

148 
time_out
[
i
+2*
nsh‹t
] = 
	`MUL_R_C
(
å™sf_buf
[nsh‹t*2+i],
wödow_sh‹t_¥ev
[i]);

149 
time_out
[
i
+3*
nsh‹t
] = 
	`MUL_R_C
(
å™sf_buf
[nsh‹t*3+i],
wödow_sh‹t
[i]);

150 
time_out
[
i
+4*
nsh‹t
] = 
	`MUL_R_C
(
å™sf_buf
[nsh‹t*4+i],
wödow_sh‹t_¥ev
[i]);

151 
time_out
[
i
+5*
nsh‹t
] = 
	`MUL_R_C
(
å™sf_buf
[nsh‹t*5+i],
wödow_sh‹t
[i]);

152 
time_out
[
i
+6*
nsh‹t
] = 
	`MUL_R_C
(
å™sf_buf
[nsh‹t*6+i],
wödow_sh‹t_¥ev
[i]);

153 
time_out
[
i
+7*
nsh‹t
] = 
	`MUL_R_C
(
å™sf_buf
[nsh‹t*7+i],
wödow_sh‹t
[i]);

154 
time_out
[
i
+8*
nsh‹t
] = 
	`MUL_R_C
(
å™sf_buf
[nsh‹t*8+i],
wödow_sh‹t_¥ev
[i]);

155 
time_out
[
i
+9*
nsh‹t
] = 
	`MUL_R_C
(
å™sf_buf
[nsh‹t*9+i],
wödow_sh‹t
[i]);

156 
time_out
[
i
+10*
nsh‹t
] = 
	`MUL_R_C
(
å™sf_buf
[nsh‹t*10+i],
wödow_sh‹t_¥ev
[i]);

157 
time_out
[
i
+11*
nsh‹t
] = 
	`MUL_R_C
(
å™sf_buf
[nsh‹t*11+i],
wödow_sh‹t
[i]);

158 
time_out
[
i
+12*
nsh‹t
] = 
	`MUL_R_C
(
å™sf_buf
[nsh‹t*12+i],
wödow_sh‹t_¥ev
[i]);

159 
time_out
[
i
+13*
nsh‹t
] = 
	`MUL_R_C
(
å™sf_buf
[nsh‹t*13+i],
wödow_sh‹t
[i]);

160 
time_out
[
i
+14*
nsh‹t
] = 
	`MUL_R_C
(
å™sf_buf
[nsh‹t*14+i],
wödow_sh‹t_¥ev
[i]);

161 
time_out
[
i
+15*
nsh‹t
] = 
	`MUL_R_C
(
å™sf_buf
[nsh‹t*15+i],
wödow_sh‹t
[i]);

165 
LONG_STOP_SEQUENCE
:

166 
	`imd˘_s§
(
fb
, 
‰eq_ö
, 
å™sf_buf
, 2*
∆⁄g
);

167 
i
 = 0; i < 
nÊ©_ls
; i++)

168 
time_out
[
i
] = 0;

169 
i
 = 0; i < 
nsh‹t
; i++)

170 
time_out
[
nÊ©_ls
+
i
] = 
	`MUL_R_C
(
å™sf_buf
[nÊ©_ls+i],
wödow_sh‹t_¥ev
[i]);

171 
i
 = 0; i < 
nÊ©_ls
; i++)

172 
time_out
[
nÊ©_ls
+
nsh‹t
+
i
] = 
å™sf_buf
[nflat_ls+nshort+i];

173 
i
 = 0; i < 
∆⁄g
; i++)

174 
time_out
[
∆⁄g
+
i
] = 
	`MUL_R_C
(
å™sf_buf
[∆⁄g+i],
wödow_l⁄g
[nlong-1-i]);

178 
	`Áad_‰ì
(
å™sf_buf
);

179 
	}
}

	@ssr_fb.h

22 #i‚de‡
__SSR_FB_H__


23 
	#__SSR_FB_H__


	)

25 #ifde‡
__˝lu•lus


29 
fb_öfo
 *
s§_fûãr_b™k_öô
(
uöt16_t
 
‰ame_Àn
);

30 
s§_fûãr_b™k_íd
(
fb_öfo
 *
fb
);

33 
s§_ifûãr_b™k
(
fb_öfo
 *
fb
,

34 
uöt8_t
 
wödow_£quí˚
,

35 
uöt8_t
 
wödow_sh≠e
,

36 
uöt8_t
 
wödow_sh≠e_¥ev
,

37 
ªÆ_t
 *
‰eq_ö
,

38 
ªÆ_t
 *
time_out
,

39 
uöt16_t
 
‰ame_Àn
);

41 #ifde‡
__˝lu•lus


	@ssr_ipqf.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 #ifde‡
SSR_DEC


33 
	~"s§.h
"

34 
	~"s§_ùqf.h
"

36 
ªÆ_t
 **
	g≠p_pqfbuf
;

37 
ªÆ_t
 **
	gµ_q0
, **
	gµ_t0
, **
	gµ_t1
;

39 
	$gc_£t_¥Ÿ›qf
(
ªÆ_t
 *
p_¥Ÿo
)

41 
j
;

42 
ªÆ_t
 
a_hÆf
[48] =

62 
j
 = 0; j < 48; ++j)

64 
p_¥Ÿo
[
j
] =Ö_¥Ÿo[95-j] = 
a_hÆf
[j];

66 
	}
}

68 
	$gc_£tc€f_eff_pqfsyn
(
mm
,

69 
kk
,

70 
ªÆ_t
 *
p_¥Ÿo
,

71 
ªÆ_t
 ***
µp_q0
,

72 
ªÆ_t
 ***
µp_t0
,

73 
ªÆ_t
 ***
µp_t1
)

75 
i
, 
k
, 
n
;

76 
ªÆ_t
 
w
;

79 *
µp_q0
 = (
ªÆ_t
 **Ë
	`ˇŒoc
(
mm
, (real_t *));

80 
n
 = 0;Ç < 
mm
; ++n)

82 (*
µp_q0
)[
n
] = (
ªÆ_t
 *Ë
	`ˇŒoc
(
mm
, (real_t));

84 
n
 = 0;Ç < 
mm
/2; ++n)

86 
i
 = 0; i < 
mm
; ++i)

88 
w
 = (2*
i
+1)*(2*
n
+1-
mm
)*
M_PI
/(4*mm);

89 (*
µp_q0
)[
n
][
i
] = 2.0 * 
	`cos
((
ªÆ_t
Ë
w
);

91 
w
 = (2*
i
+1)*(2*(
mm
+
n
)+1-mm)*
M_PI
/(4*mm);

92 (*
µp_q0
)[
n
 + 
mm
/2][
i
] = 2.0 * 
	`cos
((
ªÆ_t
Ë
w
);

97 *
µp_t0
 = (
ªÆ_t
 **Ë
	`ˇŒoc
(
mm
, (real_t *));

98 *
µp_t1
 = (
ªÆ_t
 **Ë
	`ˇŒoc
(
mm
, (real_t *));

99 
n
 = 0;Ç < 
mm
; ++n)

101 (*
µp_t0
)[
n
] = (
ªÆ_t
 *Ë
	`ˇŒoc
(
kk
, (real_t));

102 (*
µp_t1
)[
n
] = (
ªÆ_t
 *Ë
	`ˇŒoc
(
kk
, (real_t));

104 
n
 = 0;Ç < 
mm
; ++n)

106 
k
 = 0; k < 
kk
; ++k)

108 (*
µp_t0
)[
n
][
k
] = 
mm
 * 
p_¥Ÿo
[2*k *mm +Ç];

109 (*
µp_t1
)[
n
][
k
] = 
mm
 * 
p_¥Ÿo
[(2*k+1)*mm +Ç];

111 i‡(
k
%2 != 0)

113 (*
µp_t0
)[
n
][
k
] = -(*ppp_t0)[n][k];

114 (*
µp_t1
)[
n
][
k
] = -(*ppp_t1)[n][k];

118 
	}
}

120 
s§_ùqf
(
s§_öfo
 *
s§
, 
ªÆ_t
 *
ö_d©a
,Ñól_à*
out_d©a
,

121 
ªÆ_t
 
buf„r
[
SSR_BANDS
][96/4],

122 
uöt16_t
 
‰ame_Àn
, 
uöt8_t
 
b™ds
)

124 
	göôFœg
 = 0;

125 
ªÆ_t
 
	ga_pqÂrŸo
[
PQFTAPS
];

127 
	gi
;

129 i‡(
	göôFœg
 == 0)

131 
gc_£t_¥Ÿ›qf
(
a_pqÂrŸo
);

132 
gc_£tc€f_eff_pqfsyn
(
SSR_BANDS
, 
PQFTAPS
/(2*SSR_BANDS), 
a_pqÂrŸo
,

133 &
µ_q0
, &
µ_t0
, &
µ_t1
);

134 
	göôFœg
 = 1;

137 
	gi
 = 0; i < 
	g‰ame_Àn
 / 
	gSSR_BANDS
; i++)

139 
	gl
, 
	gn
, 
	gk
;

140 
	gmm
 = 
SSR_BANDS
;

141 
	gkk
 = 
PQFTAPS
/(2*
SSR_BANDS
);

143 
	gn
 = 0;Ç < 
	gmm
;Ç++)

145 
	gk
 = 0; k < 2*
	gkk
-1; k++)

147 
	gbuf„r
[
n
][
k
] = 
buf„r
[n][k+1];

151 
	gn
 = 0;Ç < 
	gmm
;Ç++)

153 
ªÆ_t
 
	gacc
 = 0.0;

154 
	gl
 = 0;Ü < 
	gmm
;Ü++)

156 
	gacc
 +
µ_q0
[
n
][
l
] * 
ö_d©a
[l*
‰ame_Àn
/
SSR_BANDS
 + 
i
];

158 
	gbuf„r
[
n
][2*
kk
-1] = 
acc
;

161 
	gn
 = 0;Ç < 
	gmm
/2;Ç++)

163 
ªÆ_t
 
	gacc
 = 0.0;

164 
	gk
 = 0; k < 
	gkk
; k++)

166 
	gacc
 +
µ_t0
[
n
][
k
] * 
buf„r
[n][2*
kk
-1-2*k];

168 
	gk
 = 0; k < 
	gkk
; ++k)

170 
	gacc
 +
µ_t1
[
n
][
k
] * 
buf„r
[¿+ 
mm
/2][2*
kk
-2-2*k];

172 
	gout_d©a
[
i
*
SSR_BANDS
 + 
n
] = 
acc
;

174 
	gacc
 = 0.0;

175 
	gk
 = 0; k < 
	gkk
; k++)

177 
	gacc
 +
µ_t0
[
mm
-1-
n
][
k
] * 
buf„r
[n][2*
kk
-1-2*k];

179 
	gk
 = 0; k < 
	gkk
; k++)

181 
	gacc
 -
µ_t1
[
mm
-1-
n
][
k
] * 
buf„r
[¿+ mm/2][2*
kk
-2-2*k];

183 
	gout_d©a
[
i
*
SSR_BANDS
 + 
mm
-1-
n
] = 
acc
;

	@ssr_ipqf.h

22 #i‚de‡
__SSR_IPQF_H__


23 
	#__SSR_IPQF_H__


	)

25 #ifde‡
__˝lu•lus


29 
s§_ùqf
(
s§_öfo
 *
s§
, 
ªÆ_t
 *
ö_d©a
,Ñól_à*
out_d©a
,

30 
ªÆ_t
 
buf„r
[
SSR_BANDS
][96/4],

31 
uöt16_t
 
‰ame_Àn
, 
uöt8_t
 
b™ds
);

34 #ifde‡
__˝lu•lus


	@ssr_win.h

22 #i‚de‡
__SSR_WIN_H__


23 
	#__SSR_WIN_H__


	)

25 #ifde‡
__˝lu•lus


29 #ifde‡
_MSC_VER


30 #¥agm®
w¨nög
(
dißbÀ
:4305)

31 #¥agm®
w¨nög
(
dißbÀ
:4244)

34 
ªÆ_t
 
söe_sh‹t_32
[] = {

69 
ªÆ_t
 
söe_l⁄g_256
[] = {

328 
ªÆ_t
 
kbd_sh‹t_32
[] = {

364 
ªÆ_t
 
kbd_l⁄g_256
[] = {

623 #ifde‡
__˝lu•lus


	@structs.h

28 #i‚de‡
__STRUCTS_H__


29 
	#__STRUCTS_H__


	)

31 #ifde‡
__˝lu•lus


35 
	~"cf·.h
"

36 #ifde‡
SBR_DEC


37 
	~"sbr_dec.h
"

40 
	#MAX_CHANNELS
 64

	)

41 
	#MAX_SYNTAX_ELEMENTS
 48

	)

42 
	#MAX_WINDOW_GROUPS
 8

	)

43 
	#MAX_SFB
 51

	)

44 
	#MAX_LTP_SFB
 40

	)

45 
	#MAX_LTP_SFB_S
 8

	)

49 
öt16_t
 
r
[2];

50 
öt16_t
 
COR
[2];

51 
öt16_t
 
VAR
[2];

52 } 
	t¥ed_°©e
;

55 
uöt16_t
 
N
;

56 
cf·_öfo
 *
cf·
;

57 
com∂ex_t
 *
söcos
;

58 #ifde‡
PROFILE


59 
öt64_t
 
cy˛es
;

60 
öt64_t
 
f·_cy˛es
;

62 } 
	tmd˘_öfo
;

66 c⁄° 
ªÆ_t
 *
l⁄g_wödow
[2];

67 c⁄° 
ªÆ_t
 *
sh‹t_wödow
[2];

68 #ifde‡
LD_DEC


69 c⁄° 
ªÆ_t
 *
ld_wödow
[2];

72 
md˘_öfo
 *
md˘256
;

73 #ifde‡
LD_DEC


74 
md˘_öfo
 *
md˘1024
;

76 
md˘_öfo
 *
md˘2048
;

77 #ifde‡
PROFILE


78 
öt64_t
 
cy˛es
;

80 } 
	tfb_öfo
;

84 
uöt8_t
 
¥e£¡
;

86 
uöt8_t
 
num_b™ds
;

87 
uöt8_t
 
p˚_ö°™˚_èg
;

88 
uöt8_t
 
ex˛uded_chns_¥e£¡
;

89 
uöt8_t
 
b™d_t›
[17];

90 
uöt8_t
 
¥og_ªf_Àvñ
;

91 
uöt8_t
 
dyn_∫g_sgn
[17];

92 
uöt8_t
 
dyn_∫g_˘l
[17];

93 
uöt8_t
 
ex˛ude_mask
[
MAX_CHANNELS
];

94 
uöt8_t
 
addôi⁄Æ_ex˛uded_chns
[
MAX_CHANNELS
];

96 
ªÆ_t
 
˘æ1
;

97 
ªÆ_t
 
˘æ2
;

98 } 
	tdrc_öfo
;

102 
uöt8_t
 
ñemít_ö°™˚_èg
;

103 
uöt8_t
 
obje˘_ty≥
;

104 
uöt8_t
 
sf_ödex
;

105 
uöt8_t
 
num_‰⁄t_ch™√l_ñemíts
;

106 
uöt8_t
 
num_side_ch™√l_ñemíts
;

107 
uöt8_t
 
num_back_ch™√l_ñemíts
;

108 
uöt8_t
 
num_l„_ch™√l_ñemíts
;

109 
uöt8_t
 
num_assoc_d©a_ñemíts
;

110 
uöt8_t
 
num_vÆid_cc_ñemíts
;

111 
uöt8_t
 
m⁄o_mixdown_¥e£¡
;

112 
uöt8_t
 
m⁄o_mixdown_ñemít_numbî
;

113 
uöt8_t
 
°îeo_mixdown_¥e£¡
;

114 
uöt8_t
 
°îeo_mixdown_ñemít_numbî
;

115 
uöt8_t
 
m©rix_mixdown_idx_¥e£¡
;

116 
uöt8_t
 
p£udo_suºound_íabÀ
;

117 
uöt8_t
 
m©rix_mixdown_idx
;

118 
uöt8_t
 
‰⁄t_ñemít_is_˝e
[16];

119 
uöt8_t
 
‰⁄t_ñemít_èg_£À˘
[16];

120 
uöt8_t
 
side_ñemít_is_˝e
[16];

121 
uöt8_t
 
side_ñemít_èg_£À˘
[16];

122 
uöt8_t
 
back_ñemít_is_˝e
[16];

123 
uöt8_t
 
back_ñemít_èg_£À˘
[16];

124 
uöt8_t
 
l„_ñemít_èg_£À˘
[16];

125 
uöt8_t
 
assoc_d©a_ñemít_èg_£À˘
[16];

126 
uöt8_t
 
cc_ñemít_is_öd_sw
[16];

127 
uöt8_t
 
vÆid_cc_ñemít_èg_£À˘
[16];

129 
uöt8_t
 
ch™√ls
;

131 
uöt8_t
 
commít_fõld_byãs
;

132 
uöt8_t
 
commít_fõld_d©a
[257];

135 
uöt8_t
 
num_‰⁄t_ch™√ls
;

136 
uöt8_t
 
num_side_ch™√ls
;

137 
uöt8_t
 
num_back_ch™√ls
;

138 
uöt8_t
 
num_l„_ch™√ls
;

139 
uöt8_t
 
s˚_ch™√l
[16];

140 
uöt8_t
 
˝e_ch™√l
[16];

141 } 
	t¥ogøm_c⁄fig
;

145 
uöt16_t
 
syncw‹d
;

146 
uöt8_t
 
id
;

147 
uöt8_t
 
œyî
;

148 
uöt8_t
 
¥Ÿe˘i⁄_ab£¡
;

149 
uöt8_t
 
¥ofûe
;

150 
uöt8_t
 
sf_ödex
;

151 
uöt8_t
 
¥iv©e_bô
;

152 
uöt8_t
 
ch™√l_c⁄figuøti⁄
;

153 
uöt8_t
 
‹igöÆ
;

154 
uöt8_t
 
home
;

155 
uöt8_t
 
emphasis
;

156 
uöt8_t
 
c›yright_idítifiˇti⁄_bô
;

157 
uöt8_t
 
c›yright_idítifiˇti⁄_°¨t
;

158 
uöt16_t
 
Øc_‰ame_Àngth
;

159 
uöt16_t
 
adts_buf„r_fuŒ√ss
;

160 
uöt8_t
 
no_øw_d©a_blocks_ö_‰ame
;

161 
uöt16_t
 
¸c_check
;

164 
uöt8_t
 
ﬁd_f‹m©
;

165 } 
	tadts_hódî
;

169 
uöt8_t
 
c›yright_id_¥e£¡
;

170 
öt8_t
 
c›yright_id
[10];

171 
uöt8_t
 
‹igöÆ_c›y
;

172 
uöt8_t
 
home
;

173 
uöt8_t
 
bô°ªam_ty≥
;

174 
uöt32_t
 
bôøã
;

175 
uöt8_t
 
num_¥ogøm_c⁄fig_ñemíts
;

176 
uöt32_t
 
adif_buf„r_fuŒ√ss
;

179 
¥ogøm_c⁄fig
 
p˚
[16];

180 } 
	tadif_hódî
;

182 #ifde‡
LTP_DEC


185 
uöt8_t
 
œ°_b™d
;

186 
uöt8_t
 
d©a_¥e£¡
;

187 
uöt16_t
 
œg
;

188 
uöt8_t
 
œg_upd©e
;

189 
uöt8_t
 
c€f
;

190 
uöt8_t
 
l⁄g_u£d
[
MAX_SFB
];

191 
uöt8_t
 
sh‹t_u£d
[8];

192 
uöt8_t
 
sh‹t_œg_¥e£¡
[8];

193 
uöt8_t
 
sh‹t_œg
[8];

194 } 
	t…p_öfo
;

197 #ifde‡
MAIN_DEC


200 
uöt8_t
 
limô
;

201 
uöt8_t
 
¥edi˘‹_ª£t
;

202 
uöt8_t
 
¥edi˘‹_ª£t_group_numbî
;

203 
uöt8_t
 
¥edi˘i⁄_u£d
[
MAX_SFB
];

204 } 
	t¥ed_öfo
;

209 
uöt8_t
 
numbî_pul£
;

210 
uöt8_t
 
pul£_°¨t_sfb
;

211 
uöt8_t
 
pul£_off£t
[4];

212 
uöt8_t
 
pul£_amp
[4];

213 } 
	tpul£_öfo
;

217 
uöt8_t
 
n_fût
[8];

218 
uöt8_t
 
c€f_ªs
[8];

219 
uöt8_t
 
Àngth
[8][4];

220 
uöt8_t
 
‹dî
[8][4];

221 
uöt8_t
 
dúe˘i⁄
[8][4];

222 
uöt8_t
 
c€f_com¥ess
[8][4];

223 
uöt8_t
 
c€f
[8][4][32];

224 } 
	täs_öfo
;

226 #ifde‡
SSR_DEC


229 
uöt8_t
 
max_b™d
;

231 
uöt8_t
 
adju°_num
[4][8];

232 
uöt8_t
 
Æevcode
[4][8][8];

233 
uöt8_t
 
Æoccode
[4][8][8];

234 } 
	ts§_öfo
;

239 
uöt8_t
 
max_sfb
;

241 
uöt8_t
 
num_swb
;

242 
uöt8_t
 
num_wödow_groups
;

243 
uöt8_t
 
num_wödows
;

244 
uöt8_t
 
wödow_£quí˚
;

245 
uöt8_t
 
wödow_group_Àngth
[8];

246 
uöt8_t
 
wödow_sh≠e
;

247 
uöt8_t
 
sˇÀ_Á˘‹_groupög
;

248 
uöt16_t
 
£˘_sfb_off£t
[8][15*8];

249 
uöt16_t
 
swb_off£t
[52];

251 
uöt8_t
 
£˘_cb
[8][15*8];

252 
uöt16_t
 
£˘_°¨t
[8][15*8];

253 
uöt16_t
 
£˘_íd
[8][15*8];

254 
uöt8_t
 
sfb_cb
[8][8*15];

255 
uöt8_t
 
num_£c
[8];

257 
uöt8_t
 
globÆ_gaö
;

258 
öt16_t
 
sˇÀ_Á˘‹s
[8][51];

260 
uöt8_t
 
ms_mask_¥e£¡
;

261 
uöt8_t
 
ms_u£d
[
MAX_WINDOW_GROUPS
][
MAX_SFB
];

263 
uöt8_t
 
noi£_u£d
;

265 
uöt8_t
 
pul£_d©a_¥e£¡
;

266 
uöt8_t
 
äs_d©a_¥e£¡
;

267 
uöt8_t
 
gaö_c⁄åﬁ_d©a_¥e£¡
;

268 
uöt8_t
 
¥edi˘‹_d©a_¥e£¡
;

270 
pul£_öfo
 
pul
;

271 
äs_öfo
 
äs
;

272 #ifde‡
MAIN_DEC


273 
¥ed_öfo
 
¥ed
;

275 #ifde‡
LTP_DEC


276 
…p_öfo
 
…p
;

277 
…p_öfo
 
…p2
;

279 #ifde‡
SSR_DEC


280 
s§_öfo
 
s§
;

283 #ifde‡
ERROR_RESILIENCE


285 
uöt16_t
 
Àngth_of_ª‹dîed_•e˘øl_d©a
;

286 
uöt8_t
 
Àngth_of_l⁄ge°_codew‹d
;

288 
uöt8_t
 
sf_c⁄˚Æmít
;

289 
uöt8_t
 
ªv_globÆ_gaö
;

290 
uöt16_t
 
Àngth_of_rvlc_sf
;

291 
uöt16_t
 
dpcm_noi£_ƒg
;

292 
uöt8_t
 
sf_esˇ≥s_¥e£¡
;

293 
uöt8_t
 
Àngth_of_rvlc_esˇ≥s
;

294 
uöt16_t
 
dpcm_noi£_œ°_posôi⁄
;

296 } 
	tic_°ªam
;

300 
uöt8_t
 
ch™√l
;

301 
öt16_t
 
∑úed_ch™√l
;

303 
uöt8_t
 
ñemít_ö°™˚_èg
;

304 
uöt8_t
 
comm⁄_wödow
;

306 
ic_°ªam
 
ics1
;

307 
ic_°ªam
 
ics2
;

308 } 
	tñemít
;

310 
	smp4AudioS≥cificC⁄fig


313  
obje˘Ty≥Index
;

314  
ßm∂ögFªquícyIndex
;

315  
ßm∂ögFªquícy
;

316  
ch™√lsC⁄figuøti⁄
;

319  
‰ameLígthFœg
;

320  
dïídsOnC‹eCodî
;

321  
c‹eCodîDñay
;

322  
exãnsi⁄Fœg
;

323  
ØcSe˘i⁄D©aResûõn˚Fœg
;

324  
ØcSˇÀÁ˘‹D©aResûõn˚Fœg
;

325  
ØcS≥˘ølD©aResûõn˚Fœg
;

326  
ïC⁄fig
;

328  
sbr_¥e£¡_Êag
;

329  
f‹˚UpSam∂ög
;

330  
downSam∂edSBR
;

331 } 
	tmp4AudioS≥cificC⁄fig
;

333 
	sNeAACDecC⁄figuøti⁄


335  
defObje˘Ty≥
;

336  
defSam∂eR©e
;

337  
ouçutF‹m©
;

338  
downM©rix
;

339  
u£OldADTSF‹m©
;

340  
d⁄tUpSam∂eIm∂icôSBR
;

341 } 
	tNeAACDecC⁄figuøti⁄
, *
	tNeAACDecC⁄figuøti⁄På
;

343 
	sNeAACDecFømeInfo


345  
byãsc⁄sumed
;

346  
ßm∂es
;

347  
ch™√ls
;

348  
îr‹
;

349  
ßm∂î©e
;

352  
sbr
;

355  
obje˘_ty≥
;

358  
hódî_ty≥
;

361  
num_‰⁄t_ch™√ls
;

362  
num_side_ch™√ls
;

363  
num_back_ch™√ls
;

364  
num_l„_ch™√ls
;

365  
ch™√l_posôi⁄
[
MAX_CHANNELS
];

368  
ps
;

369 } 
	tNeAACDecFømeInfo
;

373 
uöt8_t
 
adts_hódî_¥e£¡
;

374 
uöt8_t
 
adif_hódî_¥e£¡
;

375 
uöt8_t
 
sf_ödex
;

376 
uöt8_t
 
obje˘_ty≥
;

377 
uöt8_t
 
ch™√lC⁄figuøti⁄
;

378 #ifde‡
ERROR_RESILIENCE


379 
uöt8_t
 
ØcSe˘i⁄D©aResûõn˚Fœg
;

380 
uöt8_t
 
ØcSˇÀÁ˘‹D©aResûõn˚Fœg
;

381 
uöt8_t
 
ØcS≥˘ølD©aResûõn˚Fœg
;

383 
uöt16_t
 
‰ameLígth
;

384 
uöt8_t
 
po°SìkRe£tFœg
;

386 
uöt32_t
 
‰ame
;

388 
uöt8_t
 
downM©rix
;

389 
uöt8_t
 
upM©rix
;

390 
uöt8_t
 
fú°_syn_ñe
;

391 
uöt8_t
 
has_l„
;

393 
uöt8_t
 
‰_ch™√ls
;

395 
uöt8_t
 
‰_ch_ñe
;

400 
uöt8_t
 
ñemít_ouçut_ch™√ls
[
MAX_SYNTAX_ELEMENTS
];

404 
uöt8_t
 
ñemít_Ælo˚d
[
MAX_SYNTAX_ELEMENTS
];

408 
uöt8_t
 
Ælo˚d_ch™√ls
;

411 *
ßm∂e_buf„r
;

413 
uöt8_t
 
wödow_sh≠e_¥ev
[
MAX_CHANNELS
];

414 #ifde‡
LTP_DEC


415 
uöt16_t
 
…p_œg
[
MAX_CHANNELS
];

417 
fb_öfo
 *
fb
;

418 
drc_öfo
 *
drc
;

420 
ªÆ_t
 *
time_out
[
MAX_CHANNELS
];

421 
ªÆ_t
 *
fb_öãrmed
[
MAX_CHANNELS
];

423 #ifde‡
SBR_DEC


424 
öt8_t
 
sbr_¥e£¡_Êag
;

425 
öt8_t
 
f‹˚UpSam∂ög
;

426 
öt8_t
 
downSam∂edSBR
;

428 
uöt8_t
 
sbr_Ælo˚d
[
MAX_SYNTAX_ELEMENTS
];

430 
sbr_öfo
 *
sbr
[
MAX_SYNTAX_ELEMENTS
];

432 #i‡(
deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

433 
uöt8_t
 
ps_u£d
[
MAX_SYNTAX_ELEMENTS
];

434 
uöt8_t
 
ps_u£d_globÆ
;

437 #ifde‡
SSR_DEC


438 
ªÆ_t
 *
s§_ovîœp
[
MAX_CHANNELS
];

439 
ªÆ_t
 *
¥ev_fmd
[
MAX_CHANNELS
];

440 
ªÆ_t
 
ùqf_buf„r
[
MAX_CHANNELS
][4][96/4];

443 #ifde‡
MAIN_DEC


444 
¥ed_°©e
 *
¥ed_°©
[
MAX_CHANNELS
];

446 #ifde‡
LTP_DEC


447 
öt16_t
 *
…_¥ed_°©
[
MAX_CHANNELS
];

451 
uöt8_t
 
p˚_£t
;

452 
¥ogøm_c⁄fig
 
p˚
;

453 
uöt8_t
 
ñemít_id
[
MAX_CHANNELS
];

454 
uöt8_t
 
öã∫Æ_ch™√l
[
MAX_CHANNELS
];

457 
NeAACDecC⁄figuøti⁄
 
c⁄fig
;

459 #ifde‡
PROFILE


460 
öt64_t
 
cy˛es
;

461 
öt64_t
 
•e˘øl_cy˛es
;

462 
öt64_t
 
ouçut_cy˛es
;

463 
öt64_t
 
sˇÀÁc_cy˛es
;

464 
öt64_t
 
ªqu™t_cy˛es
;

466 } 
	tNeAACDecSåu˘
, *
	tNeAACDecH™dÀ
;

470 #ifde‡
__˝lu•lus


	@syntax.c

32 
	~"comm⁄.h
"

33 
	~"°ru˘s.h
"

35 
	~<°dlib.h
>

36 
	~<°rög.h
>

38 
	~"decodî.h
"

39 
	~"sy¡ax.h
"

40 
	~"•e¸ec.h
"

41 
	~"huffm™.h
"

42 
	~"bôs.h
"

43 
	~"pul£.h
"

44 
	~"™Æysis.h
"

45 
	~"drc.h
"

46 #ifde‡
ERROR_RESILIENCE


47 
	~"rvlc.h
"

49 #ifde‡
SBR_DEC


50 
	~"sbr_sy¡ax.h
"

55 
decode_s˚_l„
(
NeAACDecH™dÀ
 
hDecodî
, 
NeAACDecFømeInfo
 *
hInfo
, 
bôfûe
 *
ld
,

56 
uöt8_t
 
id_syn_ñe
);

57 
decode_˝e
(
NeAACDecH™dÀ
 
hDecodî
, 
NeAACDecFømeInfo
 *
hInfo
, 
bôfûe
 *
ld
,

58 
uöt8_t
 
id_syn_ñe
);

59 
uöt8_t
 
sögÀ_l„_ch™√l_ñemít
(
NeAACDecH™dÀ
 
hDecodî
, 
bôfûe
 *
ld
,

60 
uöt8_t
 
ch™√l
, uöt8_à*
èg
);

61 
uöt8_t
 
ch™√l_∑ú_ñemít
(
NeAACDecH™dÀ
 
hDecodî
, 
bôfûe
 *
ld
,

62 
uöt8_t
 
ch™√l
, uöt8_à*
èg
);

63 #ifde‡
COUPLING_DEC


64 
uöt8_t
 
cou∂ög_ch™√l_ñemít
(
NeAACDecH™dÀ
 
hDecodî
, 
bôfûe
 *
ld
);

66 
uöt16_t
 
d©a_°ªam_ñemít
(
NeAACDecH™dÀ
 
hDecodî
, 
bôfûe
 *
ld
);

67 
uöt8_t
 
¥ogøm_c⁄fig_ñemít
(
¥ogøm_c⁄fig
 *
p˚
, 
bôfûe
 *
ld
);

68 
uöt8_t
 
fûl_ñemít
(
NeAACDecH™dÀ
 
hDecodî
, 
bôfûe
 *
ld
, 
drc_öfo
 *
drc


69 #ifde‡
SBR_DEC


70 ,
uöt8_t
 
sbr_ñe


73 
uöt8_t
 
ödividuÆ_ch™√l_°ªam
(
NeAACDecH™dÀ
 
hDecodî
, 
ñemít
 *
ñe
,

74 
bôfûe
 *
ld
, 
ic_°ªam
 *
ics
, 
uöt8_t
 
sˇl_Êag
,

75 
öt16_t
 *
•ec_d©a
);

76 
uöt8_t
 
ics_öfo
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics
, 
bôfûe
 *
ld
,

77 
uöt8_t
 
comm⁄_wödow
);

78 
uöt8_t
 
£˘i⁄_d©a
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics
, 
bôfûe
 *
ld
);

79 
uöt8_t
 
sˇÀ_Á˘‹_d©a
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics
, 
bôfûe
 *
ld
);

80 #ifde‡
SSR_DEC


81 
gaö_c⁄åﬁ_d©a
(
bôfûe
 *
ld
, 
ic_°ªam
 *
ics
);

83 
uöt8_t
 
•e˘øl_d©a
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics
, 
bôfûe
 *
ld
,

84 
öt16_t
 *
•e˘øl_d©a
);

85 
uöt16_t
 
exãnsi⁄_∑ylﬂd
(
bôfûe
 *
ld
, 
drc_öfo
 *
drc
, uöt16_à
cou¡
);

86 
uöt8_t
 
pul£_d©a
(
ic_°ªam
 *
ics
, 
pul£_öfo
 *
pul
, 
bôfûe
 *
ld
);

87 
äs_d©a
(
ic_°ªam
 *
ics
, 
äs_öfo
 *
äs
, 
bôfûe
 *
ld
);

88 #ifde‡
LTP_DEC


89 
uöt8_t
 
…p_d©a
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics
, 
…p_öfo
 *
…p
, 
bôfûe
 *
ld
);

91 
uöt8_t
 
adts_fixed_hódî
(
adts_hódî
 *
adts
, 
bôfûe
 *
ld
);

92 
adts_v¨übÀ_hódî
(
adts_hódî
 *
adts
, 
bôfûe
 *
ld
);

93 
adts_îr‹_check
(
adts_hódî
 *
adts
, 
bôfûe
 *
ld
);

94 
uöt8_t
 
dy«mic_ønge_öfo
(
bôfûe
 *
ld
, 
drc_öfo
 *
drc
);

95 
uöt8_t
 
ex˛uded_ch™√ls
(
bôfûe
 *
ld
, 
drc_öfo
 *
drc
);

96 #ifde‡
SCALABLE_DEC


97 
öt8_t
 
Øc_sˇœbÀ_maö_hódî
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics1
, ic_°ªam *
ics2
,

98 
bôfûe
 *
ld
, 
uöt8_t
 
this_œyî_°îeo
);

103 
öt8_t
 
	$GAS≥cificC⁄fig
(
bôfûe
 *
ld
, 
mp4AudioS≥cificC⁄fig
 *
mp4ASC
,

104 
¥ogøm_c⁄fig
 *
p˚_out
)

106 
¥ogøm_c⁄fig
 
p˚
;

109 
mp4ASC
->
‰ameLígthFœg
 = 
	`Áad_gë1bô
(
ld


110 
	`DEBUGVAR
(1,138,"GASpecificConfig(): FrameLengthFlag"));

111 #i‚de‡
ALLOW_SMALL_FRAMELENGTH


112 i‡(
mp4ASC
->
‰ameLígthFœg
 == 1)

116 
mp4ASC
->
dïídsOnC‹eCodî
 = 
	`Áad_gë1bô
(
ld


117 
	`DEBUGVAR
(1,139,"GASpecificConfig(): DependsOnCoreCoder"));

118 i‡(
mp4ASC
->
dïídsOnC‹eCodî
 == 1)

120 
mp4ASC
->
c‹eCodîDñay
 = (
uöt16_t
)
	`Áad_gëbôs
(
ld
, 14

121 
	`DEBUGVAR
(1,140,"GASpecificConfig(): CoreCoderDelay"));

124 
mp4ASC
->
exãnsi⁄Fœg
 = 
	`Áad_gë1bô
(
ld
 
	`DEBUGVAR
(1,141,"GASpecificConfig(): ExtensionFlag"));

125 i‡(
mp4ASC
->
ch™√lsC⁄figuøti⁄
 == 0)

127 i‡(
	`¥ogøm_c⁄fig_ñemít
(&
p˚
, 
ld
))

131 i‡(
p˚_out
 !
NULL
)

132 
	`mem˝y
(
p˚_out
, &
p˚
, (
¥ogøm_c⁄fig
));

140 #ifde‡
ERROR_RESILIENCE


141 i‡(
mp4ASC
->
exãnsi⁄Fœg
 == 1)

144 i‡(
mp4ASC
->
obje˘Ty≥Index
 >
ER_OBJECT_START
)

146 
mp4ASC
->
ØcSe˘i⁄D©aResûõn˚Fœg
 = 
	`Áad_gë1bô
(
ld


147 
	`DEBUGVAR
(1,144,"GASpecificConfig():áacSectionDataResilienceFlag"));

148 
mp4ASC
->
ØcSˇÀÁ˘‹D©aResûõn˚Fœg
 = 
	`Áad_gë1bô
(
ld


149 
	`DEBUGVAR
(1,145,"GASpecificConfig():áacScalefactorDataResilienceFlag"));

150 
mp4ASC
->
ØcS≥˘ølD©aResûõn˚Fœg
 = 
	`Áad_gë1bô
(
ld


151 
	`DEBUGVAR
(1,146,"GASpecificConfig():áacSpectralDataResilienceFlag"));

159 
	}
}

168 
uöt8_t
 
	$¥ogøm_c⁄fig_ñemít
(
¥ogøm_c⁄fig
 *
p˚
, 
bôfûe
 *
ld
)

170 
uöt8_t
 
i
;

172 
	`mem£t
(
p˚
, 0, (
¥ogøm_c⁄fig
));

174 
p˚
->
ch™√ls
 = 0;

176 
p˚
->
ñemít_ö°™˚_èg
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

177 
	`DEBUGVAR
(1,10,"program_config_element():Élement_instance_tag"));

179 
p˚
->
obje˘_ty≥
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

180 
	`DEBUGVAR
(1,11,"program_config_element(): object_type"));

181 
p˚
->
sf_ödex
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

182 
	`DEBUGVAR
(1,12,"program_config_element(): sf_index"));

183 
p˚
->
num_‰⁄t_ch™√l_ñemíts
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

184 
	`DEBUGVAR
(1,13,"program_config_element():Çum_front_channel_elements"));

185 
p˚
->
num_side_ch™√l_ñemíts
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

186 
	`DEBUGVAR
(1,14,"program_config_element():Çum_side_channel_elements"));

187 
p˚
->
num_back_ch™√l_ñemíts
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

188 
	`DEBUGVAR
(1,15,"program_config_element():Çum_back_channel_elements"));

189 
p˚
->
num_l„_ch™√l_ñemíts
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

190 
	`DEBUGVAR
(1,16,"program_config_element():Çum_lfe_channel_elements"));

191 
p˚
->
num_assoc_d©a_ñemíts
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 3

192 
	`DEBUGVAR
(1,17,"program_config_element():Çum_assoc_data_elements"));

193 
p˚
->
num_vÆid_cc_ñemíts
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

194 
	`DEBUGVAR
(1,18,"program_config_element():Çum_valid_cc_elements"));

196 
p˚
->
m⁄o_mixdown_¥e£¡
 = 
	`Áad_gë1bô
(
ld


197 
	`DEBUGVAR
(1,19,"program_config_element(): mono_mixdown_present"));

198 i‡(
p˚
->
m⁄o_mixdown_¥e£¡
 == 1)

200 
p˚
->
m⁄o_mixdown_ñemít_numbî
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

201 
	`DEBUGVAR
(1,20,"program_config_element(): mono_mixdown_element_number"));

204 
p˚
->
°îeo_mixdown_¥e£¡
 = 
	`Áad_gë1bô
(
ld


205 
	`DEBUGVAR
(1,21,"program_config_element(): stereo_mixdown_present"));

206 i‡(
p˚
->
°îeo_mixdown_¥e£¡
 == 1)

208 
p˚
->
°îeo_mixdown_ñemít_numbî
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

209 
	`DEBUGVAR
(1,22,"program_config_element(): stereo_mixdown_element_number"));

212 
p˚
->
m©rix_mixdown_idx_¥e£¡
 = 
	`Áad_gë1bô
(
ld


213 
	`DEBUGVAR
(1,23,"program_config_element(): matrix_mixdown_idx_present"));

214 i‡(
p˚
->
m©rix_mixdown_idx_¥e£¡
 == 1)

216 
p˚
->
m©rix_mixdown_idx
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

217 
	`DEBUGVAR
(1,24,"program_config_element(): matrix_mixdown_idx"));

218 
p˚
->
p£udo_suºound_íabÀ
 = 
	`Áad_gë1bô
(
ld


219 
	`DEBUGVAR
(1,25,"program_config_element():Öseudo_surround_enable"));

222 
i
 = 0; i < 
p˚
->
num_‰⁄t_ch™√l_ñemíts
; i++)

224 
p˚
->
‰⁄t_ñemít_is_˝e
[
i
] = 
	`Áad_gë1bô
(
ld


225 
	`DEBUGVAR
(1,26,"program_config_element(): front_element_is_cpe"));

226 
p˚
->
‰⁄t_ñemít_èg_£À˘
[
i
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

227 
	`DEBUGVAR
(1,27,"program_config_element(): front_element_tag_select"));

229 i‡(
p˚
->
‰⁄t_ñemít_is_˝e
[
i
] & 1)

231 
p˚
->
˝e_ch™√l
[p˚->
‰⁄t_ñemít_èg_£À˘
[
i
]] =Ö˚->
ch™√ls
;

232 
p˚
->
num_‰⁄t_ch™√ls
 += 2;

233 
p˚
->
ch™√ls
 += 2;

235 
p˚
->
s˚_ch™√l
[p˚->
‰⁄t_ñemít_èg_£À˘
[
i
]] =Ö˚->
ch™√ls
;

236 
p˚
->
num_‰⁄t_ch™√ls
++;

237 
p˚
->
ch™√ls
++;

241 
i
 = 0; i < 
p˚
->
num_side_ch™√l_ñemíts
; i++)

243 
p˚
->
side_ñemít_is_˝e
[
i
] = 
	`Áad_gë1bô
(
ld


244 
	`DEBUGVAR
(1,28,"program_config_element(): side_element_is_cpe"));

245 
p˚
->
side_ñemít_èg_£À˘
[
i
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

246 
	`DEBUGVAR
(1,29,"program_config_element(): side_element_tag_select"));

248 i‡(
p˚
->
side_ñemít_is_˝e
[
i
] & 1)

250 
p˚
->
˝e_ch™√l
[p˚->
side_ñemít_èg_£À˘
[
i
]] =Ö˚->
ch™√ls
;

251 
p˚
->
num_side_ch™√ls
 += 2;

252 
p˚
->
ch™√ls
 += 2;

254 
p˚
->
s˚_ch™√l
[p˚->
side_ñemít_èg_£À˘
[
i
]] =Ö˚->
ch™√ls
;

255 
p˚
->
num_side_ch™√ls
++;

256 
p˚
->
ch™√ls
++;

260 
i
 = 0; i < 
p˚
->
num_back_ch™√l_ñemíts
; i++)

262 
p˚
->
back_ñemít_is_˝e
[
i
] = 
	`Áad_gë1bô
(
ld


263 
	`DEBUGVAR
(1,30,"program_config_element(): back_element_is_cpe"));

264 
p˚
->
back_ñemít_èg_£À˘
[
i
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

265 
	`DEBUGVAR
(1,31,"program_config_element(): back_element_tag_select"));

267 i‡(
p˚
->
back_ñemít_is_˝e
[
i
] & 1)

269 
p˚
->
˝e_ch™√l
[p˚->
back_ñemít_èg_£À˘
[
i
]] =Ö˚->
ch™√ls
;

270 
p˚
->
ch™√ls
 += 2;

271 
p˚
->
num_back_ch™√ls
 += 2;

273 
p˚
->
s˚_ch™√l
[p˚->
back_ñemít_èg_£À˘
[
i
]] =Ö˚->
ch™√ls
;

274 
p˚
->
num_back_ch™√ls
++;

275 
p˚
->
ch™√ls
++;

279 
i
 = 0; i < 
p˚
->
num_l„_ch™√l_ñemíts
; i++)

281 
p˚
->
l„_ñemít_èg_£À˘
[
i
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

282 
	`DEBUGVAR
(1,32,"program_config_element():Üfe_element_tag_select"));

284 
p˚
->
s˚_ch™√l
[p˚->
l„_ñemít_èg_£À˘
[
i
]] =Ö˚->
ch™√ls
;

285 
p˚
->
num_l„_ch™√ls
++;

286 
p˚
->
ch™√ls
++;

289 
i
 = 0; i < 
p˚
->
num_assoc_d©a_ñemíts
; i++)

290 
p˚
->
assoc_d©a_ñemít_èg_£À˘
[
i
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

291 
	`DEBUGVAR
(1,33,"program_config_element():ássoc_data_element_tag_select"));

293 
i
 = 0; i < 
p˚
->
num_vÆid_cc_ñemíts
; i++)

295 
p˚
->
cc_ñemít_is_öd_sw
[
i
] = 
	`Áad_gë1bô
(
ld


296 
	`DEBUGVAR
(1,34,"program_config_element(): cc_element_is_ind_sw"));

297 
p˚
->
vÆid_cc_ñemít_èg_£À˘
[
i
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

298 
	`DEBUGVAR
(1,35,"program_config_element(): valid_cc_element_tag_select"));

301 
	`Áad_byã_Æign
(
ld
);

303 
p˚
->
commít_fõld_byãs
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 8

304 
	`DEBUGVAR
(1,36,"program_config_element(): comment_field_bytes"));

306 
i
 = 0; i < 
p˚
->
commít_fõld_byãs
; i++)

308 
p˚
->
commít_fõld_d©a
[
i
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 8

309 
	`DEBUGVAR
(1,37,"program_config_element(): comment_field_data"));

311 
p˚
->
commít_fõld_d©a
[
i
] = 0;

313 i‡(
p˚
->
ch™√ls
 > 
MAX_CHANNELS
)

317 
	}
}

319 
	$decode_s˚_l„
(
NeAACDecH™dÀ
 
hDecodî
,

320 
NeAACDecFømeInfo
 *
hInfo
, 
bôfûe
 *
ld
,

321 
uöt8_t
 
id_syn_ñe
)

323 
uöt8_t
 
ch™√ls
 = 
hDecodî
->
‰_ch™√ls
;

324 
uöt8_t
 
èg
 = 0;

326 i‡(
ch™√ls
+1 > 
MAX_CHANNELS
)

328 
hInfo
->
îr‹
 = 12;

331 i‡(
hDecodî
->
‰_ch_ñe
+1 > 
MAX_SYNTAX_ELEMENTS
)

333 
hInfo
->
îr‹
 = 13;

342 
hDecodî
->
ñemít_id
[hDecodî->
‰_ch_ñe
] = 
id_syn_ñe
;

345 
hInfo
->
îr‹
 = 
	`sögÀ_l„_ch™√l_ñemít
(
hDecodî
, 
ld
, 
ch™√ls
, &
èg
);

348 i‡(
hDecodî
->
ñemít_ouçut_ch™√ls
[hDecodî->
‰_ch_ñe
] == 2)

351 
hDecodî
->
öã∫Æ_ch™√l
[
ch™√ls
] = channels;

352 
hDecodî
->
öã∫Æ_ch™√l
[
ch™√ls
+1] = channels+1;

354 i‡(
hDecodî
->
p˚_£t
)

355 
hDecodî
->
öã∫Æ_ch™√l
[hDecodî->
p˚
.
s˚_ch™√l
[
èg
]] = 
ch™√ls
;

357 
hDecodî
->
öã∫Æ_ch™√l
[
ch™√ls
] = channels;

360 
hDecodî
->
‰_ch™√ls
 +hDecodî->
ñemít_ouçut_ch™√ls
[hDecodî->
‰_ch_ñe
];

361 
hDecodî
->
‰_ch_ñe
++;

362 
	}
}

364 
	$decode_˝e
(
NeAACDecH™dÀ
 
hDecodî
, 
NeAACDecFømeInfo
 *
hInfo
, 
bôfûe
 *
ld
,

365 
uöt8_t
 
id_syn_ñe
)

367 
uöt8_t
 
ch™√ls
 = 
hDecodî
->
‰_ch™√ls
;

368 
uöt8_t
 
èg
 = 0;

370 i‡(
ch™√ls
+2 > 
MAX_CHANNELS
)

372 
hInfo
->
îr‹
 = 12;

375 i‡(
hDecodî
->
‰_ch_ñe
+1 > 
MAX_SYNTAX_ELEMENTS
)

377 
hInfo
->
îr‹
 = 13;

382 i‡(
hDecodî
->
ñemít_ouçut_ch™√ls
[hDecodî->
‰_ch_ñe
] == 0)

385 
hDecodî
->
ñemít_ouçut_ch™√ls
[hDecodî->
‰_ch_ñe
] = 2;

386 } i‡(
hDecodî
->
ñemít_ouçut_ch™√ls
[hDecodî->
‰_ch_ñe
] != 2) {

388 
hInfo
->
îr‹
 = 21;

393 
hDecodî
->
ñemít_id
[hDecodî->
‰_ch_ñe
] = 
id_syn_ñe
;

396 
hInfo
->
îr‹
 = 
	`ch™√l_∑ú_ñemít
(
hDecodî
, 
ld
, 
ch™√ls
, &
èg
);

399 i‡(
hDecodî
->
p˚_£t
)

401 
hDecodî
->
öã∫Æ_ch™√l
[hDecodî->
p˚
.
˝e_ch™√l
[
èg
]] = 
ch™√ls
;

402 
hDecodî
->
öã∫Æ_ch™√l
[hDecodî->
p˚
.
˝e_ch™√l
[
èg
]+1] = 
ch™√ls
+1;

404 
hDecodî
->
öã∫Æ_ch™√l
[
ch™√ls
] = channels;

405 
hDecodî
->
öã∫Æ_ch™√l
[
ch™√ls
+1] = channels+1;

408 
hDecodî
->
‰_ch™√ls
 += 2;

409 
hDecodî
->
‰_ch_ñe
++;

410 
	}
}

412 
	$øw_d©a_block
(
NeAACDecH™dÀ
 
hDecodî
, 
NeAACDecFømeInfo
 *
hInfo
,

413 
bôfûe
 *
ld
, 
¥ogøm_c⁄fig
 *
p˚
, 
drc_öfo
 *
drc
)

415 
uöt8_t
 
id_syn_ñe
;

417 
hDecodî
->
‰_ch™√ls
 = 0;

418 
hDecodî
->
‰_ch_ñe
 = 0;

419 
hDecodî
->
fú°_syn_ñe
 = 25;

420 
hDecodî
->
has_l„
 = 0;

422 #ifde‡
ERROR_RESILIENCE


423 i‡(
hDecodî
->
obje˘_ty≥
 < 
ER_OBJECT_START
)

427 (
id_syn_ñe
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 
LEN_SE_ID


428 
	`DEBUGVAR
(1,4,"NeAACDecDecode(): id_syn_ñe"))Ë!
ID_END
)

430 
id_syn_ñe
) {

431 
ID_SCE
:

432 i‡(
hDecodî
->
fú°_syn_ñe
 =25ËhDecodî->fú°_syn_ñê
id_syn_ñe
;

433 
	`decode_s˚_l„
(
hDecodî
, 
hInfo
, 
ld
, 
id_syn_ñe
);

434 i‡(
hInfo
->
îr‹
 > 0)

437 
ID_CPE
:

438 i‡(
hDecodî
->
fú°_syn_ñe
 =25ËhDecodî->fú°_syn_ñê
id_syn_ñe
;

439 
	`decode_˝e
(
hDecodî
, 
hInfo
, 
ld
, 
id_syn_ñe
);

440 i‡(
hInfo
->
îr‹
 > 0)

443 
ID_LFE
:

444 
hDecodî
->
has_l„
++;

445 
	`decode_s˚_l„
(
hDecodî
, 
hInfo
, 
ld
, 
id_syn_ñe
);

446 i‡(
hInfo
->
îr‹
 > 0)

449 
ID_CCE
:

450 #ifde‡
COUPLING_DEC


451 
hInfo
->
îr‹
 = 
	`cou∂ög_ch™√l_ñemít
(
hDecodî
, 
ld
);

453 
hInfo
->
îr‹
 = 6;

455 i‡(
hInfo
->
îr‹
 > 0)

458 
ID_DSE
:

459 
	`d©a_°ªam_ñemít
(
hDecodî
, 
ld
);

461 
ID_PCE
:

464 
	`¥ogøm_c⁄fig_ñemít
(
p˚
, 
ld
);

469 
ID_FIL
:

473 i‡((
hInfo
->
îr‹
 = 
	`fûl_ñemít
(
hDecodî
, 
ld
, 
drc


474 #ifde‡
SBR_DEC


475 , 
INVALID_SBR_ELEMENT


482 #ifde‡
ERROR_RESILIENCE


485 
hDecodî
->
ch™√lC⁄figuøti⁄
)

488 
	`decode_s˚_l„
(
hDecodî
, 
hInfo
, 
ld
, 
ID_SCE
);

489 i‡(
hInfo
->
îr‹
 > 0)

493 
	`decode_˝e
(
hDecodî
, 
hInfo
, 
ld
, 
ID_CPE
);

494 i‡(
hInfo
->
îr‹
 > 0)

498 
	`decode_s˚_l„
(
hDecodî
, 
hInfo
, 
ld
, 
ID_SCE
);

499 
	`decode_˝e
(
hDecodî
, 
hInfo
, 
ld
, 
ID_CPE
);

500 i‡(
hInfo
->
îr‹
 > 0)

504 
	`decode_s˚_l„
(
hDecodî
, 
hInfo
, 
ld
, 
ID_SCE
);

505 
	`decode_˝e
(
hDecodî
, 
hInfo
, 
ld
, 
ID_CPE
);

506 
	`decode_s˚_l„
(
hDecodî
, 
hInfo
, 
ld
, 
ID_SCE
);

507 i‡(
hInfo
->
îr‹
 > 0)

511 
	`decode_s˚_l„
(
hDecodî
, 
hInfo
, 
ld
, 
ID_SCE
);

512 
	`decode_˝e
(
hDecodî
, 
hInfo
, 
ld
, 
ID_CPE
);

513 
	`decode_˝e
(
hDecodî
, 
hInfo
, 
ld
, 
ID_CPE
);

514 i‡(
hInfo
->
îr‹
 > 0)

518 
	`decode_s˚_l„
(
hDecodî
, 
hInfo
, 
ld
, 
ID_SCE
);

519 
	`decode_˝e
(
hDecodî
, 
hInfo
, 
ld
, 
ID_CPE
);

520 
	`decode_˝e
(
hDecodî
, 
hInfo
, 
ld
, 
ID_CPE
);

521 
	`decode_s˚_l„
(
hDecodî
, 
hInfo
, 
ld
, 
ID_LFE
);

522 i‡(
hInfo
->
îr‹
 > 0)

526 
	`decode_s˚_l„
(
hDecodî
, 
hInfo
, 
ld
, 
ID_SCE
);

527 
	`decode_˝e
(
hDecodî
, 
hInfo
, 
ld
, 
ID_CPE
);

528 
	`decode_˝e
(
hDecodî
, 
hInfo
, 
ld
, 
ID_CPE
);

529 
	`decode_˝e
(
hDecodî
, 
hInfo
, 
ld
, 
ID_CPE
);

530 
	`decode_s˚_l„
(
hDecodî
, 
hInfo
, 
ld
, 
ID_LFE
);

531 i‡(
hInfo
->
îr‹
 > 0)

535 
hInfo
->
îr‹
 = 7;

539 
˙t
 = 
	`bôs_to_decode
() / 8;

540 
˙t
 >= 1)

542 
˙t
 -
	`exãnsi⁄_∑ylﬂd
(cnt);

549 #ifde‡
DRM


550 i‡(
hDecodî
->
obje˘_ty≥
 !
DRM_ER_LC
)

553 
	`Áad_byã_Æign
(
ld
);

561 
uöt8_t
 
	`sögÀ_l„_ch™√l_ñemít
(
NeAACDecH™dÀ
 
hDecodî
, 
bôfûe
 *
ld
,

562 
uöt8_t
 
ch™√l
, uöt8_à*
èg
)

564 
uöt8_t
 
ªtvÆ
 = 0;

565 
ñemít
 
s˚
 = {0};

566 
ic_°ªam
 *
ics
 = &(
s˚
.
ics1
);

567 
ALIGN
 
öt16_t
 
•ec_d©a
[1024] = {0};

569 
s˚
.
ñemít_ö°™˚_èg
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 
LEN_TAG


570 
	`DEBUGVAR
(1,38,"single_lfe_channel_element():Élement_instance_tag"));

572 *
èg
 = 
s˚
.
ñemít_ö°™˚_èg
;

573 
s˚
.
ch™√l
 = channel;

574 
s˚
.
∑úed_ch™√l
 = -1;

576 
ªtvÆ
 = 
	`ödividuÆ_ch™√l_°ªam
(
hDecodî
, &
s˚
, 
ld
, 
ics
, 0, 
•ec_d©a
);

577 i‡(
ªtvÆ
 > 0)

578  
ªtvÆ
;

580 #ifde‡
SBR_DEC


583 i‡(
	`Áad_showbôs
(
ld
, 
LEN_SE_ID
Ë=
ID_FIL
)

585 
	`Áad_Êushbôs
(
ld
, 
LEN_SE_ID
);

588 i‡((
ªtvÆ
 = 
	`fûl_ñemít
(
hDecodî
, 
ld
, hDecodî->
drc
, hDecodî->
‰_ch_ñe
)) > 0)

590  
ªtvÆ
;

596 
ªtvÆ
 = 
	`ªc⁄°ru˘_sögÀ_ch™√l
(
hDecodî
, 
ics
, &
s˚
, 
•ec_d©a
);

597 i‡(
ªtvÆ
 > 0)

598  
ªtvÆ
;

604 
uöt8_t
 
	`ch™√l_∑ú_ñemít
(
NeAACDecH™dÀ
 
hDecodî
, 
bôfûe
 *
ld
,

605 
uöt8_t
 
ch™√ls
, uöt8_à*
èg
)

607 
ALIGN
 
öt16_t
 
•ec_d©a1
[1024] = {0};

608 
ALIGN
 
öt16_t
 
•ec_d©a2
[1024] = {0};

609 
ñemít
 
˝e
 = {0};

610 
ic_°ªam
 *
ics1
 = &(
˝e
.ics1);

611 
ic_°ªam
 *
ics2
 = &(
˝e
.ics2);

612 
uöt8_t
 
ªsu…
;

614 
˝e
.
ch™√l
 = 
ch™√ls
;

615 
˝e
.
∑úed_ch™√l
 = 
ch™√ls
+1;

617 
˝e
.
ñemít_ö°™˚_èg
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 
LEN_TAG


618 
	`DEBUGVAR
(1,39,"channel_pair_element():Élement_instance_tag"));

619 *
èg
 = 
˝e
.
ñemít_ö°™˚_èg
;

621 i‡((
˝e
.
comm⁄_wödow
 = 
	`Áad_gë1bô
(
ld


622 
	`DEBUGVAR
(1,40,"channel_pair_element(): common_window"))) & 1)

625 i‡((
ªsu…
 = 
	`ics_öfo
(
hDecodî
, 
ics1
, 
ld
, 
˝e
.
comm⁄_wödow
)) > 0)

626  
ªsu…
;

628 
ics1
->
ms_mask_¥e£¡
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

629 
	`DEBUGVAR
(1,41,"channel_pair_element(): ms_mask_present"));

630 i‡(
ics1
->
ms_mask_¥e£¡
 == 1)

632 
uöt8_t
 
g
, 
sfb
;

633 
g
 = 0; g < 
ics1
->
num_wödow_groups
; g++)

635 
sfb
 = 0; sfb < 
ics1
->
max_sfb
; sfb++)

637 
ics1
->
ms_u£d
[
g
][
sfb
] = 
	`Áad_gë1bô
(
ld


638 
	`DEBUGVAR
(1,42,"channel_pair_element(): faad_get1bit"));

643 #ifde‡
ERROR_RESILIENCE


644 i‡((
hDecodî
->
obje˘_ty≥
 >
ER_OBJECT_START
Ë&& (
ics1
->
¥edi˘‹_d©a_¥e£¡
))

647 #ifde‡
LTP_DEC


648 
ics1
->
…p
.
d©a_¥e£¡
 =

650 
	`Áad_gë1bô
(
ld
 
	`DEBUGVAR
(1,50,"channel_pair_element():Ütp.data_present"))) & 1)

652 #ifde‡
LTP_DEC


653 i‡((
ªsu…
 = 
	`…p_d©a
(
hDecodî
, 
ics1
, &(ics1->
…p
), 
ld
)) > 0)

655  
ªsu…
;

664 
	`mem˝y
(
ics2
, 
ics1
, (
ic_°ªam
));

666 
ics1
->
ms_mask_¥e£¡
 = 0;

669 i‡((
ªsu…
 = 
	`ödividuÆ_ch™√l_°ªam
(
hDecodî
, &
˝e
, 
ld
, 
ics1
,

670 0, 
•ec_d©a1
)) > 0)

672  
ªsu…
;

675 #ifde‡
ERROR_RESILIENCE


676 i‡(
˝e
.
comm⁄_wödow
 && (
hDecodî
->
obje˘_ty≥
 >
ER_OBJECT_START
) &&

677 (
ics1
->
¥edi˘‹_d©a_¥e£¡
))

680 #ifde‡
LTP_DEC


681 
ics1
->
…p2
.
d©a_¥e£¡
 =

683 
	`Áad_gë1bô
(
ld
 
	`DEBUGVAR
(1,50,"channel_pair_element():Ütp.data_present"))) & 1)

685 #ifde‡
LTP_DEC


686 i‡((
ªsu…
 = 
	`…p_d©a
(
hDecodî
, 
ics1
, &(ics1->
…p2
), 
ld
)) > 0)

688  
ªsu…
;

697 i‡((
ªsu…
 = 
	`ödividuÆ_ch™√l_°ªam
(
hDecodî
, &
˝e
, 
ld
, 
ics2
,

698 0, 
•ec_d©a2
)) > 0)

700  
ªsu…
;

703 #ifde‡
SBR_DEC


706 i‡(
	`Áad_showbôs
(
ld
, 
LEN_SE_ID
Ë=
ID_FIL
)

708 
	`Áad_Êushbôs
(
ld
, 
LEN_SE_ID
);

711 i‡((
ªsu…
 = 
	`fûl_ñemít
(
hDecodî
, 
ld
, hDecodî->
drc
, hDecodî->
‰_ch_ñe
)) > 0)

713  
ªsu…
;

719 i‡((
ªsu…
 = 
	`ªc⁄°ru˘_ch™√l_∑ú
(
hDecodî
, 
ics1
, 
ics2
, &
˝e
,

720 
•ec_d©a1
, 
•ec_d©a2
)) > 0)

722  
ªsu…
;

729 
uöt8_t
 
	`ics_öfo
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics
, 
bôfûe
 *
ld
,

730 
uöt8_t
 
comm⁄_wödow
)

732 
uöt8_t
 
ªtvÆ
 = 0;

734  
	`Áad_gë1bô
(
ld


735 
	`DEBUGVAR
(1,43,"ics_info(): ics_reserved_bit"));

736 
ics
->
wödow_£quí˚
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

737 
	`DEBUGVAR
(1,44,"ics_info(): window_sequence"));

738 
ics
->
wödow_sh≠e
 = 
	`Áad_gë1bô
(
ld


739 
	`DEBUGVAR
(1,45,"ics_info(): window_shape"));

741 i‡(
ics
->
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
)

743 
ics
->
max_sfb
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

744 
	`DEBUGVAR
(1,46,"ics_info(): max_sfb (short)"));

745 
ics
->
sˇÀ_Á˘‹_groupög
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 7

746 
	`DEBUGVAR
(1,47,"ics_info(): scale_factor_grouping"));

748 
ics
->
max_sfb
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 6

749 
	`DEBUGVAR
(1,48,"ics_info(): max_sfb (long)"));

753 i‡((
ªtvÆ
 = 
	`wödow_groupög_öfo
(
hDecodî
, 
ics
)) > 0)

754  
ªtvÆ
;

758 i‡(
ics
->
max_sfb
 > ics->
num_swb
)

761 i‡(
ics
->
wödow_£quí˚
 !
EIGHT_SHORT_SEQUENCE
)

763 i‡((
ics
->
¥edi˘‹_d©a_¥e£¡
 = 
	`Áad_gë1bô
(
ld


764 
	`DEBUGVAR
(1,49,"ics_info():Öredictor_data_present"))) & 1)

766 i‡(
hDecodî
->
obje˘_ty≥
 =
MAIN
)

768 
uöt8_t
 
sfb
;

770 
uöt8_t
 
limô
 = 
	`mö
(
ics
->
max_sfb
, 
	`max_¥ed_sfb
(
hDecodî
->
sf_ödex
));

771 #ifde‡
MAIN_DEC


772 
ics
->
¥ed
.
limô
 =Üimit;

776 #ifde‡
MAIN_DEC


777 
ics
->
¥ed
.
¥edi˘‹_ª£t
 =

779 
	`Áad_gë1bô
(
ld
 
	`DEBUGVAR
(1,53,"ics_info():Öred.predictor_reset"))) & 1)

781 #ifde‡
MAIN_DEC


782 
ics
->
¥ed
.
¥edi˘‹_ª£t_group_numbî
 =

784 (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 5 
	`DEBUGVAR
(1,54,"ics_info():Öred.predictor_reset_group_number"));

787 
sfb
 = 0; sfb < 
limô
; sfb++)

789 #ifde‡
MAIN_DEC


790 
ics
->
¥ed
.
¥edi˘i⁄_u£d
[
sfb
] =

792 
	`Áad_gë1bô
(
ld
 
	`DEBUGVAR
(1,55,"ics_info():Öred.prediction_used"));

795 #ifde‡
LTP_DEC


797 i‡(
hDecodî
->
obje˘_ty≥
 < 
ER_OBJECT_START
)

799 i‡((
ics
->
…p
.
d©a_¥e£¡
 = 
	`Áad_gë1bô
(
ld


800 
	`DEBUGVAR
(1,50,"ics_info():Ütp.data_present"))) & 1)

802 i‡((
ªtvÆ
 = 
	`…p_d©a
(
hDecodî
, 
ics
, &(ics->
…p
), 
ld
)) > 0)

804  
ªtvÆ
;

807 i‡(
comm⁄_wödow
)

809 i‡((
ics
->
…p2
.
d©a_¥e£¡
 = 
	`Áad_gë1bô
(
ld


810 
	`DEBUGVAR
(1,51,"ics_info():Ütp2.data_present"))) & 1)

812 i‡((
ªtvÆ
 = 
	`…p_d©a
(
hDecodî
, 
ics
, &(ics->
…p2
), 
ld
)) > 0)

814  
ªtvÆ
;

819 #ifde‡
ERROR_RESILIENCE


820 i‡(!
comm⁄_wödow
 && (
hDecodî
->
obje˘_ty≥
 >
ER_OBJECT_START
))

822 i‡((
ics
->
…p
.
d©a_¥e£¡
 = 
	`Áad_gë1bô
(
ld


823 
	`DEBUGVAR
(1,50,"ics_info():Ütp.data_present"))) & 1)

825 
	`…p_d©a
(
hDecodî
, 
ics
, &(ics->
…p
), 
ld
);

834  
ªtvÆ
;

838 
uöt8_t
 
	`pul£_d©a
(
ic_°ªam
 *
ics
, 
pul£_öfo
 *
pul
, 
bôfûe
 *
ld
)

840 
uöt8_t
 
i
;

842 
pul
->
numbî_pul£
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

843 
	`DEBUGVAR
(1,56,"pulse_data():Çumber_pulse"));

844 
pul
->
pul£_°¨t_sfb
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 6

845 
	`DEBUGVAR
(1,57,"pulse_data():Öulse_start_sfb"));

848 i‡(
pul
->
pul£_°¨t_sfb
 > 
ics
->
num_swb
)

851 
i
 = 0; i < 
pul
->
numbî_pul£
+1; i++)

853 
pul
->
pul£_off£t
[
i
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 5

854 
	`DEBUGVAR
(1,58,"pulse_data():Öulse_offset"));

856 
	`¥ötf
("%d\n", 
pul
->
pul£_off£t
[
i
]);

858 
pul
->
pul£_amp
[
i
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

859 
	`DEBUGVAR
(1,59,"pulse_data():Öulse_amp"));

861 
	`¥ötf
("%d\n", 
pul
->
pul£_amp
[
i
]);

868 #ifde‡
COUPLING_DEC


870 
uöt8_t
 
	`cou∂ög_ch™√l_ñemít
(
NeAACDecH™dÀ
 
hDecodî
, 
bôfûe
 *
ld
)

872 
uöt8_t
 
c
, 
ªsu…
 = 0;

873 
uöt8_t
 
öd_sw_c˚_Êag
 = 0;

874 
uöt8_t
 
num_gaö_ñemít_li°s
 = 0;

875 
uöt8_t
 
num_cou∂ed_ñemíts
 = 0;

877 
ñemít
 
ñ_em±y
 = {0};

878 
ic_°ªam
 
ics_em±y
 = {0};

879 
öt16_t
 
sh_d©a
[1024];

881 
c
 = 
	`Áad_gëbôs
(
ld
, 
LEN_TAG


882 
	`DEBUGVAR
(1,900,"coupling_channel_element():Élement_instance_tag"));

884 
öd_sw_c˚_Êag
 = 
	`Áad_gë1bô
(
ld


885 
	`DEBUGVAR
(1,901,"coupling_channel_element(): ind_sw_cce_flag"));

886 
num_cou∂ed_ñemíts
 = 
	`Áad_gëbôs
(
ld
, 3

887 
	`DEBUGVAR
(1,902,"coupling_channel_element():Çum_coupled_elements"));

889 
c
 = 0; c < 
num_cou∂ed_ñemíts
 + 1; c++)

891 
uöt8_t
 
cc_èrgë_is_˝e
, 
cc_èrgë_èg_£À˘
;

893 
num_gaö_ñemít_li°s
++;

895 
cc_èrgë_is_˝e
 = 
	`Áad_gë1bô
(
ld


896 
	`DEBUGVAR
(1,903,"coupling_channel_element(): cc_target_is_cpe"));

897 
cc_èrgë_èg_£À˘
 = 
	`Áad_gëbôs
(
ld
, 4

898 
	`DEBUGVAR
(1,904,"coupling_channel_element(): cc_target_tag_select"));

900 i‡(
cc_èrgë_is_˝e
)

902 
uöt8_t
 
cc_l
 = 
	`Áad_gë1bô
(
ld


903 
	`DEBUGVAR
(1,905,"coupling_channel_element(): cc_l"));

904 
uöt8_t
 
cc_r
 = 
	`Áad_gë1bô
(
ld


905 
	`DEBUGVAR
(1,906,"coupling_channel_element(): cc_r"));

907 i‡(
cc_l
 && 
cc_r
)

908 
num_gaö_ñemít_li°s
++;

912 
	`Áad_gë1bô
(
ld


913 
	`DEBUGVAR
(1,907,"coupling_channel_element(): cc_domain"));

914 
	`Áad_gë1bô
(
ld


915 
	`DEBUGVAR
(1,908,"coupling_channel_element(): gain_element_sign"));

916 
	`Áad_gëbôs
(
ld
, 2

917 
	`DEBUGVAR
(1,909,"coupling_channel_element(): gain_element_scale"));

919 i‡((
ªsu…
 = 
	`ödividuÆ_ch™√l_°ªam
(
hDecodî
, &
ñ_em±y
, 
ld
, &
ics_em±y
,

920 0, 
sh_d©a
)) > 0)

922  
ªsu…
;

925 
c
 = 1; c < 
num_gaö_ñemít_li°s
; c++)

927 
uöt8_t
 
cge
;

929 i‡(
öd_sw_c˚_Êag
)

931 
cge
 = 1;

933 
cge
 = 
	`Áad_gë1bô
(
ld


934 
	`DEBUGVAR
(1,910,"coupling_channel_element(): common_gain_element_present"));

937 i‡(
cge
)

939 
	`huffm™_sˇÀ_Á˘‹
(
ld
);

941 
uöt8_t
 
g
, 
sfb
;

943 
g
 = 0; g < 
ics_em±y
.
num_wödow_groups
; g++)

945 
sfb
 = 0; sfb < 
ics_em±y
.
max_sfb
; sfb++)

947 i‡(
ics_em±y
.
sfb_cb
[
g
][
sfb
] !
ZERO_HCB
)

948 
	`huffm™_sˇÀ_Á˘‹
(
ld
);

959 
uöt16_t
 
	`d©a_°ªam_ñemít
(
NeAACDecH™dÀ
 
hDecodî
, 
bôfûe
 *
ld
)

961 
uöt8_t
 
byã_Æig√d
;

962 
uöt16_t
 
i
, 
cou¡
;

964  
	`Áad_gëbôs
(
ld
, 
LEN_TAG


965 
	`DEBUGVAR
(1,60,"data_stream_element():Élement_instance_tag"));

966 
byã_Æig√d
 = 
	`Áad_gë1bô
(
ld


967 
	`DEBUGVAR
(1,61,"data_stream_element(): byte_aligned"));

968 
cou¡
 = (
uöt16_t
)
	`Áad_gëbôs
(
ld
, 8

969 
	`DEBUGVAR
(1,62,"data_stream_element(): count"));

970 i‡(
cou¡
 == 255)

972 
cou¡
 +(
uöt16_t
)
	`Áad_gëbôs
(
ld
, 8

973 
	`DEBUGVAR
(1,63,"data_stream_element():Éxtra count"));

975 i‡(
byã_Æig√d
)

976 
	`Áad_byã_Æign
(
ld
);

978 
i
 = 0; i < 
cou¡
; i++)

980 
	`Áad_gëbôs
(
ld
, 
LEN_BYTE


981 
	`DEBUGVAR
(1,64,"data_stream_element(): data_stream_byte"));

984  
cou¡
;

988 
uöt8_t
 
	`fûl_ñemít
(
NeAACDecH™dÀ
 
hDecodî
, 
bôfûe
 *
ld
, 
drc_öfo
 *
drc


989 #ifde‡
SBR_DEC


990 ,
uöt8_t
 
sbr_ñe


994 
uöt16_t
 
cou¡
;

995 #ifde‡
SBR_DEC


996 
uöt8_t
 
bs_exãnsi⁄_ty≥
;

999 
cou¡
 = (
uöt16_t
)
	`Áad_gëbôs
(
ld
, 4

1000 
	`DEBUGVAR
(1,65,"fill_element(): count"));

1001 i‡(
cou¡
 == 15)

1003 
cou¡
 +(
uöt16_t
)
	`Áad_gëbôs
(
ld
, 8

1004 
	`DEBUGVAR
(1,66,"fill_element():Éxtra count")) - 1;

1007 i‡(
cou¡
 > 0)

1009 #ifde‡
SBR_DEC


1010 
bs_exãnsi⁄_ty≥
 = (
uöt8_t
)
	`Áad_showbôs
(
ld
, 4);

1012 i‡((
bs_exãnsi⁄_ty≥
 =
EXT_SBR_DATA
) ||

1013 (
bs_exãnsi⁄_ty≥
 =
EXT_SBR_DATA_CRC
))

1015 i‡(
sbr_ñe
 =
INVALID_SBR_ELEMENT
)

1018 i‡(!
hDecodî
->
sbr
[
sbr_ñe
])

1020 
hDecodî
->
sbr
[
sbr_ñe
] = 
	`sbrDecodeInô
(hDecodî->
‰ameLígth
,

1021 
hDecodî
->
ñemít_id
[
sbr_ñe
], 2*
	`gë_ßm∂e_øã
(hDecodî->
sf_ödex
),

1022 
hDecodî
->
downSam∂edSBR


1023 #ifde‡
DRM


1029 
hDecodî
->
sbr_¥e£¡_Êag
 = 1;

1032 
hDecodî
->
sbr
[
sbr_ñe
]->
ªt
 = 
	`sbr_exãnsi⁄_d©a
(
ld
, hDecodî->sbr[sbr_ñe], 
cou¡
);

1035 i‡(
hDecodî
->
sbr
[
sbr_ñe
]->
ªt
 > 0)

1037 
	`¥ötf
("%s\n", 
	`NeAACDecGëEº‹Mesßge
(
hDecodî
->
sbr
[
sbr_ñe
]->
ªt
));

1041 #i‡(
	`deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

1042 i‡(
hDecodî
->
sbr
[
sbr_ñe
]->
ps_u£d
)

1044 
hDecodî
->
ps_u£d
[
sbr_ñe
] = 1;

1047 
hDecodî
->
ps_u£d_globÆ
 = 1;

1052 
cou¡
 > 0)

1054 
cou¡
 -
	`exãnsi⁄_∑ylﬂd
(
ld
, 
drc
, count);

1056 #ifde‡
SBR_DEC


1065 #ifde‡
SSR_DEC


1066 
	`gaö_c⁄åﬁ_d©a
(
bôfûe
 *
ld
, 
ic_°ªam
 *
ics
)

1068 
uöt8_t
 
bd
, 
wd
, 
ad
;

1069 
s§_öfo
 *
s§
 = &(
ics
->ssr);

1071 
s§
->
max_b™d
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

1072 
	`DEBUGVAR
(1,1000,"gain_control_data(): max_band"));

1074 i‡(
ics
->
wödow_£quí˚
 =
ONLY_LONG_SEQUENCE
)

1076 
bd
 = 1; bd <
s§
->
max_b™d
; bd++)

1078 
wd
 = 0; wd < 1; wd++)

1080 
s§
->
adju°_num
[
bd
][
wd
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 3

1081 
	`DEBUGVAR
(1,1001,"gain_control_data():ádjust_num"));

1083 
ad
 = 0;ád < 
s§
->
adju°_num
[
bd
][
wd
];ád++)

1085 
s§
->
Æevcode
[
bd
][
wd
][
ad
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

1086 
	`DEBUGVAR
(1,1002,"gain_control_data():álevcode"));

1087 
s§
->
Æoccode
[
bd
][
wd
][
ad
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 5

1088 
	`DEBUGVAR
(1,1003,"gain_control_data():áloccode"));

1092 } i‡(
ics
->
wödow_£quí˚
 =
LONG_START_SEQUENCE
) {

1093 
bd
 = 1; bd <
s§
->
max_b™d
; bd++)

1095 
wd
 = 0; wd < 2; wd++)

1097 
s§
->
adju°_num
[
bd
][
wd
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 3

1098 
	`DEBUGVAR
(1,1001,"gain_control_data():ádjust_num"));

1100 
ad
 = 0;ád < 
s§
->
adju°_num
[
bd
][
wd
];ád++)

1102 
s§
->
Æevcode
[
bd
][
wd
][
ad
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

1103 
	`DEBUGVAR
(1,1002,"gain_control_data():álevcode"));

1104 i‡(
wd
 == 0)

1106 
s§
->
Æoccode
[
bd
][
wd
][
ad
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

1107 
	`DEBUGVAR
(1,1003,"gain_control_data():áloccode"));

1109 
s§
->
Æoccode
[
bd
][
wd
][
ad
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

1110 
	`DEBUGVAR
(1,1003,"gain_control_data():áloccode"));

1115 } i‡(
ics
->
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
) {

1116 
bd
 = 1; bd <
s§
->
max_b™d
; bd++)

1118 
wd
 = 0; wd < 8; wd++)

1120 
s§
->
adju°_num
[
bd
][
wd
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 3

1121 
	`DEBUGVAR
(1,1001,"gain_control_data():ádjust_num"));

1123 
ad
 = 0;ád < 
s§
->
adju°_num
[
bd
][
wd
];ád++)

1125 
s§
->
Æevcode
[
bd
][
wd
][
ad
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

1126 
	`DEBUGVAR
(1,1002,"gain_control_data():álevcode"));

1127 
s§
->
Æoccode
[
bd
][
wd
][
ad
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

1128 
	`DEBUGVAR
(1,1003,"gain_control_data():áloccode"));

1132 } i‡(
ics
->
wödow_£quí˚
 =
LONG_STOP_SEQUENCE
) {

1133 
bd
 = 1; bd <
s§
->
max_b™d
; bd++)

1135 
wd
 = 0; wd < 2; wd++)

1137 
s§
->
adju°_num
[
bd
][
wd
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 3

1138 
	`DEBUGVAR
(1,1001,"gain_control_data():ádjust_num"));

1140 
ad
 = 0;ád < 
s§
->
adju°_num
[
bd
][
wd
];ád++)

1142 
s§
->
Æevcode
[
bd
][
wd
][
ad
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

1143 
	`DEBUGVAR
(1,1002,"gain_control_data():álevcode"));

1145 i‡(
wd
 == 0)

1147 
s§
->
Æoccode
[
bd
][
wd
][
ad
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

1148 
	`DEBUGVAR
(1,1003,"gain_control_data():áloccode"));

1150 
s§
->
Æoccode
[
bd
][
wd
][
ad
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 5

1151 
	`DEBUGVAR
(1,1003,"gain_control_data():áloccode"));

1160 #ifde‡
SCALABLE_DEC


1162 
	`Øc_sˇœbÀ_maö_ñemít
(
NeAACDecH™dÀ
 
hDecodî
, 
NeAACDecFømeInfo
 *
hInfo
,

1163 
bôfûe
 *
ld
, 
¥ogøm_c⁄fig
 *
p˚
, 
drc_öfo
 *
drc
)

1165 
uöt8_t
 
ªtvÆ
 = 0;

1166 
uöt8_t
 
ch™√ls
 = 
hDecodî
->
‰_ch™√ls
 = 0;

1167 
uöt8_t
 
ch
;

1168 
uöt8_t
 
this_œyî_°îeo
 = (
hDecodî
->
ch™√lC⁄figuøti⁄
 > 1) ? 1 : 0;

1169 
ñemít
 
˝e
 = {0};

1170 
ic_°ªam
 *
ics1
 = &(
˝e
.ics1);

1171 
ic_°ªam
 *
ics2
 = &(
˝e
.ics2);

1172 
öt16_t
 *
•ec_d©a
;

1173 
ALIGN
 
öt16_t
 
•ec_d©a1
[1024] = {0};

1174 
ALIGN
 
öt16_t
 
•ec_d©a2
[1024] = {0};

1176 
hDecodî
->
‰_ch_ñe
 = 0;

1178 
hInfo
->
îr‹
 = 
	`Øc_sˇœbÀ_maö_hódî
(
hDecodî
, 
ics1
, 
ics2
, 
ld
, 
this_œyî_°îeo
);

1179 i‡(
hInfo
->
îr‹
 > 0)

1182 
˝e
.
comm⁄_wödow
 = 1;

1183 i‡(
this_œyî_°îeo
)

1185 
hDecodî
->
ñemít_id
[0] = 
ID_CPE
;

1186 i‡(
hDecodî
->
ñemít_ouçut_ch™√ls
[hDecodî->
‰_ch_ñe
] == 0)

1187 
hDecodî
->
ñemít_ouçut_ch™√ls
[hDecodî->
‰_ch_ñe
] = 2;

1189 
hDecodî
->
ñemít_id
[0] = 
ID_SCE
;

1192 
ch
 = 0; ch < (
this_œyî_°îeo
 ? 2 : 1); ch++)

1194 
ic_°ªam
 *
ics
;

1195 i‡(
ch
 == 0)

1197 
ics
 = 
ics1
;

1198 
•ec_d©a
 = 
•ec_d©a1
;

1200 
ics
 = 
ics2
;

1201 
•ec_d©a
 = 
•ec_d©a2
;

1204 
hInfo
->
îr‹
 = 
	`ödividuÆ_ch™√l_°ªam
(
hDecodî
, &
˝e
, 
ld
, 
ics
, 1, 
•ec_d©a
);

1205 i‡(
hInfo
->
îr‹
 > 0)

1209 #ifde‡
DRM


1210 #ifde‡
SBR_DEC


1212 i‡((
hDecodî
->
sbr_¥e£¡_Êag
 =1Ë&& (hDecodî->
obje˘_ty≥
 =
DRM_ER_LC
))

1214 
bôfûe
 
ld_sbr
 = {0};

1215 
uöt32_t
 
i
;

1216 
uöt16_t
 
cou¡
 = 0;

1217 
uöt8_t
 *
ªvbuf„r
;

1218 
uöt8_t
 *
¥evbuf°¨t
;

1219 
uöt8_t
 *
pbu„nd
;

1222 
uöt32_t
 
bôsc⁄sumed
 = 
	`Áad_gë_¥o˚s£d_bôs
(
ld
);

1223 
uöt32_t
 
buf„r_size
 = 
	`Áad_‹igbôbuf„r_size
(
ld
);

1224 
uöt8_t
 *
buf„r
 = (uöt8_t*)
	`Áad_‹igbôbuf„r
(
ld
);

1226 i‡(
bôsc⁄sumed
 + 8 > 
buf„r_size
*8)

1228 
hInfo
->
îr‹
 = 14;

1232 i‡(!
hDecodî
->
sbr
[0])

1234 
hDecodî
->
sbr
[0] = 
	`sbrDecodeInô
(hDecodî->
‰ameLígth
, hDecodî->
ñemít_id
[0],

1235 2*
	`gë_ßm∂e_øã
(
hDecodî
->
sf_ödex
), 0 , 1);

1239 
ªvbuf„r
 = (
uöt8_t
*)
	`Áad_mÆloc
(
buf„r_size
*(uint8_t));

1240 
¥evbuf°¨t
 = 
ªvbuf„r
;

1241 
pbu„nd
 = &
buf„r
[
buf„r_size
 - 1];

1242 
i
 = 0; i < 
buf„r_size
; i++)

1243 *
¥evbuf°¨t
++ = 
èbFlùbôs
[*
pbu„nd
--];

1247 
cou¡
 = (
uöt16_t
)
	`bô2byã
(
buf„r_size
*8 - 
bôsc⁄sumed
);

1248 
	`Áad_öôbôs
(&
ld_sbr
, 
ªvbuf„r
, 
cou¡
);

1250 
hDecodî
->
sbr
[0]->
ßm∂e_øã
 = 
	`gë_ßm∂e_øã
(hDecodî->
sf_ödex
);

1251 
hDecodî
->
sbr
[0]->
ßm∂e_øã
 *= 2;

1253 
	`Áad_gëbôs
(&
ld_sbr
, 8);

1255 
hDecodî
->
sbr
[0]->
ªt
 = 
	`sbr_exãnsi⁄_d©a
(&
ld_sbr
, hDecodî->sbr[0], 
cou¡
);

1256 #i‡(
	`deföed
(
PS_DEC
Ë|| deföed(
DRM_PS
))

1257 i‡(
hDecodî
->
sbr
[0]->
ps_u£d
)

1259 
hDecodî
->
ps_u£d
[0] = 1;

1260 
hDecodî
->
ps_u£d_globÆ
 = 1;

1266 i‡(
hDecodî
->
sbr
[0]->
ªt
 == 0)

1267 
hDecodî
->
sbr
[0]->
ªt
 = (
uöt8_t
)
	`Áad_check_CRC
(&
ld_sbr
, (
uöt16_t
)
	`Áad_gë_¥o˚s£d_bôs
(&ld_sbr) - 8);

1270 i‡(
hDecodî
->
sbr
[0]->
ªt
 != 0)

1272 
hDecodî
->
sbr
[0]->
hódî_cou¡
 = 0;

1275 
	`Áad_ídbôs
(&
ld_sbr
);

1277 i‡(
ªvbuf„r
)

1278 
	`Áad_‰ì
(
ªvbuf„r
);

1283 i‡(
this_œyî_°îeo
)

1285 
hInfo
->
îr‹
 = 
	`ªc⁄°ru˘_ch™√l_∑ú
(
hDecodî
, 
ics1
, 
ics2
, &
˝e
, 
•ec_d©a1
, 
•ec_d©a2
);

1286 i‡(
hInfo
->
îr‹
 > 0)

1289 
hInfo
->
îr‹
 = 
	`ªc⁄°ru˘_sögÀ_ch™√l
(
hDecodî
, 
ics1
, &
˝e
, 
•ec_d©a1
);

1290 i‡(
hInfo
->
îr‹
 > 0)

1295 i‡(
hDecodî
->
ñemít_ouçut_ch™√ls
[hDecodî->
‰_ch_ñe
] == 2)

1298 
hDecodî
->
öã∫Æ_ch™√l
[
ch™√ls
] = channels;

1299 
hDecodî
->
öã∫Æ_ch™√l
[
ch™√ls
+1] = channels+1;

1301 
hDecodî
->
öã∫Æ_ch™√l
[
ch™√ls
] = channels;

1304 
hDecodî
->
‰_ch™√ls
 +hDecodî->
ñemít_ouçut_ch™√ls
[hDecodî->
‰_ch_ñe
];

1305 
hDecodî
->
‰_ch_ñe
++;

1311 
öt8_t
 
	`Øc_sˇœbÀ_maö_hódî
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics1
, ic_°ªam *
ics2
,

1312 
bôfûe
 *
ld
, 
uöt8_t
 
this_œyî_°îeo
)

1314 
uöt8_t
 
ªtvÆ
 = 0;

1315 
uöt8_t
 
ch
;

1316 
ic_°ªam
 *
ics
;

1318  
	`Áad_gë1bô
(
ld


1319 
	`DEBUGVAR
(1,300,"aac_scalable_main_header(): ics_reserved_bits"));

1320 
ics1
->
wödow_£quí˚
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

1321 
	`DEBUGVAR
(1,301,"aac_scalable_main_header(): window_sequence"));

1322 
ics1
->
wödow_sh≠e
 = 
	`Áad_gë1bô
(
ld


1323 
	`DEBUGVAR
(1,302,"aac_scalable_main_header(): window_shape"));

1325 i‡(
ics1
->
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
)

1327 
ics1
->
max_sfb
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

1328 
	`DEBUGVAR
(1,303,"aac_scalable_main_header(): max_sfb (short)"));

1329 
ics1
->
sˇÀ_Á˘‹_groupög
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 7

1330 
	`DEBUGVAR
(1,304,"aac_scalable_main_header(): scale_factor_grouping"));

1332 
ics1
->
max_sfb
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 6

1333 
	`DEBUGVAR
(1,305,"aac_scalable_main_header(): max_sfb (long)"));

1337 i‡((
ªtvÆ
 = 
	`wödow_groupög_öfo
(
hDecodî
, 
ics1
)) > 0)

1338  
ªtvÆ
;

1342 i‡(
ics1
->
max_sfb
 > ics1->
num_swb
)

1345 i‡(
this_œyî_°îeo
)

1347 
ics1
->
ms_mask_¥e£¡
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

1348 
	`DEBUGVAR
(1,306,"aac_scalable_main_header(): ms_mask_present"));

1349 i‡(
ics1
->
ms_mask_¥e£¡
 == 1)

1351 
uöt8_t
 
g
, 
sfb
;

1352 
g
 = 0; g < 
ics1
->
num_wödow_groups
; g++)

1354 
sfb
 = 0; sfb < 
ics1
->
max_sfb
; sfb++)

1356 
ics1
->
ms_u£d
[
g
][
sfb
] = 
	`Áad_gë1bô
(
ld


1357 
	`DEBUGVAR
(1,307,"aac_scalable_main_header(): faad_get1bit"));

1362 
	`mem˝y
(
ics2
, 
ics1
, (
ic_°ªam
));

1364 
ics1
->
ms_mask_¥e£¡
 = 0;

1369 
	`Áad_gë1bô
(
ld


1370 
	`DEBUGVAR
(1,308,"aac_scalable_main_header():Åns_channel_mono_layer"));

1373 
ch
 = 0; ch < (
this_œyî_°îeo
 ? 2 : 1); ch++)

1375 i‡(
ch
 == 0)

1376 
ics
 = 
ics1
;

1378 
ics
 = 
ics2
;

1382 i‡((
ics
->
äs_d©a_¥e£¡
 = 
	`Áad_gë1bô
(
ld


1383 
	`DEBUGVAR
(1,309,"aac_scalable_main_header():Åns_data_present"))) & 1)

1385 #ifde‡
DRM


1387 i‡(
hDecodî
->
obje˘_ty≥
 !
DRM_ER_LC
)

1390 
	`äs_d©a
(
ics
, &(ics->
äs
), 
ld
);

1397 i‡((
ch
==0Ë|| ((ch==1Ë&& (
c‹e_°îeo
 || 
tvq_°îeo
))

1398 
	`diff_c⁄åﬁ_d©a
();

1399 i‡(
m⁄o_°îeo_Êag
)

1400 
	`diff_c⁄åﬁ_d©a_Ã
();

1404 #ifde‡
LTP_DEC


1405 
ics
->
…p
.
d©a_¥e£¡
 =

1407 
	`Áad_gë1bô
(
ld
 
	`DEBUGVAR
(1,310,"aac_scalable_main_header():Ütp.data_present"))) & 1)

1409 #ifde‡
LTP_DEC


1410 i‡((
ªtvÆ
 = 
	`…p_d©a
(
hDecodî
, 
ics
, &(ics->
…p
), 
ld
)) > 0)

1412  
ªtvÆ
;

1428 
uöt8_t
 
	`ödividuÆ_ch™√l_°ªam
(
NeAACDecH™dÀ
 
hDecodî
, 
ñemít
 *
ñe
,

1429 
bôfûe
 *
ld
, 
ic_°ªam
 *
ics
, 
uöt8_t
 
sˇl_Êag
,

1430 
öt16_t
 *
•ec_d©a
)

1432 
uöt8_t
 
ªsu…
;

1434 
ics
->
globÆ_gaö
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 8

1435 
	`DEBUGVAR
(1,67,"individual_channel_stream(): global_gain"));

1437 i‡(!
ñe
->
comm⁄_wödow
 && !
sˇl_Êag
)

1439 i‡((
ªsu…
 = 
	`ics_öfo
(
hDecodî
, 
ics
, 
ld
, 
ñe
->
comm⁄_wödow
)) > 0)

1440  
ªsu…
;

1443 i‡((
ªsu…
 = 
	`£˘i⁄_d©a
(
hDecodî
, 
ics
, 
ld
)) > 0)

1444  
ªsu…
;

1446 i‡((
ªsu…
 = 
	`sˇÀ_Á˘‹_d©a
(
hDecodî
, 
ics
, 
ld
)) > 0)

1447  
ªsu…
;

1449 i‡(!
sˇl_Êag
)

1457 i‡((
ics
->
pul£_d©a_¥e£¡
 = 
	`Áad_gë1bô
(
ld


1458 
	`DEBUGVAR
(1,68,"individual_channel_stream():Öulse_data_present"))) & 1)

1460 i‡((
ªsu…
 = 
	`pul£_d©a
(
ics
, &(ics->
pul
), 
ld
)) > 0)

1461  
ªsu…
;

1465 i‡((
ics
->
äs_d©a_¥e£¡
 = 
	`Áad_gë1bô
(
ld


1466 
	`DEBUGVAR
(1,69,"individual_channel_stream():Åns_data_present"))) & 1)

1468 #ifde‡
ERROR_RESILIENCE


1469 i‡(
hDecodî
->
obje˘_ty≥
 < 
ER_OBJECT_START
)

1471 
	`äs_d©a
(
ics
, &(ics->
äs
), 
ld
);

1475 i‡((
ics
->
gaö_c⁄åﬁ_d©a_¥e£¡
 = 
	`Áad_gë1bô
(
ld


1476 
	`DEBUGVAR
(1,70,"individual_channel_stream(): gain_control_data_present"))) & 1)

1478 #ifde‡
SSR_DEC


1479 i‡(
hDecodî
->
obje˘_ty≥
 !
SSR
)

1482 
	`gaö_c⁄åﬁ_d©a
(
ld
, 
ics
);

1489 #ifde‡
ERROR_RESILIENCE


1490 i‡(
hDecodî
->
ØcS≥˘ølD©aResûõn˚Fœg
)

1492 
ics
->
Àngth_of_ª‹dîed_•e˘øl_d©a
 = (
uöt16_t
)
	`Áad_gëbôs
(
ld
, 14

1493 
	`DEBUGVAR
(1,147,"individual_channel_stream():Üength_of_reordered_spectral_data"));

1495 i‡(
hDecodî
->
ch™√lC⁄figuøti⁄
 == 2)

1497 i‡(
ics
->
Àngth_of_ª‹dîed_•e˘øl_d©a
 > 6144)

1498 
ics
->
Àngth_of_ª‹dîed_•e˘øl_d©a
 = 6144;

1500 i‡(
ics
->
Àngth_of_ª‹dîed_•e˘øl_d©a
 > 12288)

1501 
ics
->
Àngth_of_ª‹dîed_•e˘øl_d©a
 = 12288;

1504 
ics
->
Àngth_of_l⁄ge°_codew‹d
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 6

1505 
	`DEBUGVAR
(1,148,"individual_channel_stream():Üength_of_longest_codeword"));

1506 i‡(
ics
->
Àngth_of_l⁄ge°_codew‹d
 >= 49)

1507 
ics
->
Àngth_of_l⁄ge°_codew‹d
 = 49;

1511 i‡(
hDecodî
->
ØcSˇÀÁ˘‹D©aResûõn˚Fœg
)

1513 i‡((
ªsu…
 = 
	`rvlc_decode_sˇÀ_Á˘‹s
(
ics
, 
ld
)) > 0)

1514  
ªsu…
;

1517 i‡(
hDecodî
->
obje˘_ty≥
 >
ER_OBJECT_START
)

1519 i‡(
ics
->
äs_d©a_¥e£¡
)

1520 
	`äs_d©a
(
ics
, &(ics->
äs
), 
ld
);

1523 #ifde‡
DRM


1525 i‡(
hDecodî
->
obje˘_ty≥
 =
DRM_ER_LC
)

1526 i‡((
ªsu…
 = (
uöt8_t
)
	`Áad_check_CRC
(
ld
, (
uöt16_t
)
	`Áad_gë_¥o˚s£d_bôs
(ld) - 8)) > 0)

1527  
ªsu…
;

1530 i‡(
hDecodî
->
ØcS≥˘ølD©aResûõn˚Fœg
)

1533 i‡((
ªsu…
 = 
	`ª‹dîed_•e˘øl_d©a
(
hDecodî
, 
ics
, 
ld
, 
•ec_d©a
)) > 0)

1535  
ªsu…
;

1540 i‡((
ªsu…
 = 
	`•e˘øl_d©a
(
hDecodî
, 
ics
, 
ld
, 
•ec_d©a
)) > 0)

1542  
ªsu…
;

1544 #ifde‡
ERROR_RESILIENCE


1549 i‡(
ics
->
pul£_d©a_¥e£¡
)

1551 i‡(
ics
->
wödow_£quí˚
 !
EIGHT_SHORT_SEQUENCE
)

1553 i‡((
ªsu…
 = 
	`pul£_decode
(
ics
, 
•ec_d©a
, 
hDecodî
->
‰ameLígth
)) > 0)

1554  
ªsu…
;

1564 
uöt8_t
 
	`£˘i⁄_d©a
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics
, 
bôfûe
 *
ld
)

1566 
uöt8_t
 
g
;

1567 
uöt8_t
 
£˘_esc_vÆ
, 
£˘_bôs
;

1569 i‡(
ics
->
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
)

1570 
£˘_bôs
 = 3;

1572 
£˘_bôs
 = 5;

1573 
£˘_esc_vÆ
 = (1<<
£˘_bôs
) - 1;

1576 
	`¥ötf
("\¡ŸÆ sfb %d\n", 
ics
->
max_sfb
);

1577 
	`¥ötf
(" sectÅop cb\n");

1580 
g
 = 0; g < 
ics
->
num_wödow_groups
; g++)

1582 
uöt8_t
 
k
 = 0;

1583 
uöt8_t
 
i
 = 0;

1585 
k
 < 
ics
->
max_sfb
)

1587 #ifde‡
ERROR_RESILIENCE


1588 
uöt8_t
 
vcb11
 = 0;

1590 
uöt8_t
 
sfb
;

1591 
uöt8_t
 
£˘_Àn_ö¸
;

1592 
uöt16_t
 
£˘_Àn
 = 0;

1593 
uöt8_t
 
£˘_cb_bôs
 = 4;

1597 i‡((
ld
->
îr‹
 !0Ë|| (ld->
no_m‹e_ªadög
))

1600 #ifde‡
ERROR_RESILIENCE


1601 i‡(
hDecodî
->
ØcSe˘i⁄D©aResûõn˚Fœg
)

1602 
£˘_cb_bôs
 = 5;

1605 
ics
->
£˘_cb
[
g
][
i
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 
£˘_cb_bôs


1606 
	`DEBUGVAR
(1,71,"section_data(): sect_cb"));

1609 
	`¥ötf
("%d\n", 
ics
->
£˘_cb
[
g
][
i
]);

1612 i‡(
ics
->
£˘_cb
[
g
][
i
] =
NOISE_HCB
)

1613 
ics
->
noi£_u£d
 = 1;

1615 #ifde‡
ERROR_RESILIENCE


1616 i‡(
hDecodî
->
ØcSe˘i⁄D©aResûõn˚Fœg
)

1618 i‡((
ics
->
£˘_cb
[
g
][
i
] == 11) ||

1619 ((
ics
->
£˘_cb
[
g
][
i
] >= 16) && (ics->sect_cb[g][i] <= 32)))

1621 
vcb11
 = 1;

1624 i‡(
vcb11
)

1626 
£˘_Àn_ö¸
 = 1;

1629 
£˘_Àn_ö¸
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 
£˘_bôs


1630 
	`DEBUGVAR
(1,72,"section_data(): sect_len_incr"));

1631 #ifde‡
ERROR_RESILIENCE


1634 (
£˘_Àn_ö¸
 =
£˘_esc_vÆ
)

1637 
£˘_Àn
 +
£˘_Àn_ö¸
;

1638 
£˘_Àn_ö¸
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 
£˘_bôs


1639 
	`DEBUGVAR
(1,72,"section_data(): sect_len_incr"));

1642 
£˘_Àn
 +
£˘_Àn_ö¸
;

1644 
ics
->
£˘_°¨t
[
g
][
i
] = 
k
;

1645 
ics
->
£˘_íd
[
g
][
i
] = 
k
 + 
£˘_Àn
;

1648 
	`¥ötf
("%d\n", 
ics
->
£˘_°¨t
[
g
][
i
]);

1651 
	`¥ötf
("%d\n", 
ics
->
£˘_íd
[
g
][
i
]);

1654 i‡(
k
 + 
£˘_Àn
 >= 8*15)

1656 i‡(
i
 >= 8*15)

1659 
sfb
 = 
k
; sfb < k + 
£˘_Àn
; sfb++)

1661 
ics
->
sfb_cb
[
g
][
sfb
] = ics->
£˘_cb
[g][
i
];

1663 
	`¥ötf
("%d\n", 
ics
->
sfb_cb
[
g
][
sfb
]);

1668 
	`¥ötf
(" %6d %6d %6d\n",

1669 
i
,

1670 
ics
->
£˘_íd
[
g
][
i
],

1671 
ics
->
£˘_cb
[
g
][
i
]);

1674 
k
 +
£˘_Àn
;

1675 
i
++;

1677 
ics
->
num_£c
[
g
] = 
i
;

1679 
	`¥ötf
("%d\n", 
ics
->
num_£c
[
g
]);

1684 
	`¥ötf
("\n");

1701 
uöt8_t
 
	`decode_sˇÀ_Á˘‹s
(
ic_°ªam
 *
ics
, 
bôfûe
 *
ld
)

1703 
uöt8_t
 
g
, 
sfb
;

1704 
öt16_t
 
t
;

1705 
öt8_t
 
noi£_pcm_Êag
 = 1;

1707 
öt16_t
 
sˇÀ_Á˘‹
 = 
ics
->
globÆ_gaö
;

1708 
öt16_t
 
is_posôi⁄
 = 0;

1709 
öt16_t
 
noi£_íîgy
 = 
ics
->
globÆ_gaö
 - 90;

1711 
g
 = 0; g < 
ics
->
num_wödow_groups
; g++)

1713 
sfb
 = 0; sfb < 
ics
->
max_sfb
; sfb++)

1715 
ics
->
sfb_cb
[
g
][
sfb
])

1717 
ZERO_HCB
:

1718 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] = 0;

1720 #ifde‡
SF_PRINT


1721 
	`¥ötf
("%d\n", 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
]);

1724 
INTENSITY_HCB
:

1725 
INTENSITY_HCB2
:

1728 
t
 = 
	`huffm™_sˇÀ_Á˘‹
(
ld
);

1729 
is_posôi⁄
 +(
t
 - 60);

1730 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] = 
is_posôi⁄
;

1731 #ifde‡
SF_PRINT


1732 
	`¥ötf
("%d\n", 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
]);

1736 
NOISE_HCB
:

1739 i‡(
noi£_pcm_Êag
)

1741 
noi£_pcm_Êag
 = 0;

1742 
t
 = (
öt16_t
)
	`Áad_gëbôs
(
ld
, 9

1743 
	`DEBUGVAR
(1,73,"scale_factor_data(): firstÇoise")) - 256;

1745 
t
 = 
	`huffm™_sˇÀ_Á˘‹
(
ld
);

1746 
t
 -= 60;

1748 
noi£_íîgy
 +
t
;

1749 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] = 
noi£_íîgy
;

1750 #ifde‡
SF_PRINT


1751 
	`¥ötf
("%d\n", 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
]);

1759 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] = 0;

1762 
t
 = 
	`huffm™_sˇÀ_Á˘‹
(
ld
);

1763 
sˇÀ_Á˘‹
 +(
t
 - 60);

1764 i‡(
sˇÀ_Á˘‹
 < 0 || scale_factor > 255)

1766 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
] = 
sˇÀ_Á˘‹
;

1767 #ifde‡
SF_PRINT


1768 
	`¥ötf
("%d\n", 
ics
->
sˇÀ_Á˘‹s
[
g
][
sfb
]);

1780 
uöt8_t
 
	`sˇÀ_Á˘‹_d©a
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics
, 
bôfûe
 *
ld
)

1782 
uöt8_t
 
ªt
 = 0;

1783 #ifde‡
PROFILE


1784 
öt64_t
 
cou¡
 = 
	`Áad_gë_ts
();

1787 #ifde‡
ERROR_RESILIENCE


1788 i‡(!
hDecodî
->
ØcSˇÀÁ˘‹D©aResûõn˚Fœg
)

1791 
ªt
 = 
	`decode_sˇÀ_Á˘‹s
(
ics
, 
ld
);

1792 #ifde‡
ERROR_RESILIENCE


1798 
ªt
 = 
	`rvlc_sˇÀ_Á˘‹_d©a
(
ics
, 
ld
);

1802 #ifde‡
PROFILE


1803 
cou¡
 = 
	`Áad_gë_ts
() - count;

1804 
hDecodî
->
sˇÀÁc_cy˛es
 +
cou¡
;

1807  
ªt
;

1811 
	`äs_d©a
(
ic_°ªam
 *
ics
, 
äs_öfo
 *
äs
, 
bôfûe
 *
ld
)

1813 
uöt8_t
 
w
, 
fût
, 
i
, 
°¨t_c€f_bôs
, 
c€f_bôs
;

1814 
uöt8_t
 
n_fût_bôs
 = 2;

1815 
uöt8_t
 
Àngth_bôs
 = 6;

1816 
uöt8_t
 
‹dî_bôs
 = 5;

1818 i‡(
ics
->
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
)

1820 
n_fût_bôs
 = 1;

1821 
Àngth_bôs
 = 4;

1822 
‹dî_bôs
 = 3;

1825 
w
 = 0; w < 
ics
->
num_wödows
; w++)

1827 
äs
->
n_fût
[
w
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 
n_fût_bôs


1828 
	`DEBUGVAR
(1,74,"tns_data():Ç_filt"));

1830 
	`¥ötf
("%d\n", 
äs
->
n_fût
[
w
]);

1833 i‡(
äs
->
n_fût
[
w
])

1835 i‡((
äs
->
c€f_ªs
[
w
] = 
	`Áad_gë1bô
(
ld


1836 
	`DEBUGVAR
(1,75,"tns_data(): coef_res"))) & 1)

1838 
°¨t_c€f_bôs
 = 4;

1840 
°¨t_c€f_bôs
 = 3;

1843 
	`¥ötf
("%d\n", 
äs
->
c€f_ªs
[
w
]);

1847 
fût
 = 0; fûà< 
äs
->
n_fût
[
w
]; filt++)

1849 
äs
->
Àngth
[
w
][
fût
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 
Àngth_bôs


1850 
	`DEBUGVAR
(1,76,"tns_data():Üength"));

1852 
	`¥ötf
("%d\n", 
äs
->
Àngth
[
w
][
fût
]);

1854 
äs
->
‹dî
[
w
][
fût
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 
‹dî_bôs


1855 
	`DEBUGVAR
(1,77,"tns_data(): order"));

1857 
	`¥ötf
("%d\n", 
äs
->
‹dî
[
w
][
fût
]);

1859 i‡(
äs
->
‹dî
[
w
][
fût
])

1861 
äs
->
dúe˘i⁄
[
w
][
fût
] = 
	`Áad_gë1bô
(
ld


1862 
	`DEBUGVAR
(1,78,"tns_data(): direction"));

1864 
	`¥ötf
("%d\n", 
äs
->
dúe˘i⁄
[
w
][
fût
]);

1866 
äs
->
c€f_com¥ess
[
w
][
fût
] = 
	`Áad_gë1bô
(
ld


1867 
	`DEBUGVAR
(1,79,"tns_data(): coef_compress"));

1869 
	`¥ötf
("%d\n", 
äs
->
c€f_com¥ess
[
w
][
fût
]);

1872 
c€f_bôs
 = 
°¨t_c€f_bôs
 - 
äs
->
c€f_com¥ess
[
w
][
fût
];

1873 
i
 = 0; i < 
äs
->
‹dî
[
w
][
fût
]; i++)

1875 
äs
->
c€f
[
w
][
fût
][
i
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 
c€f_bôs


1876 
	`DEBUGVAR
(1,80,"tns_data(): coef"));

1878 
	`¥ötf
("%d\n", 
äs
->
c€f
[
w
][
fût
][
i
]);

1886 #ifde‡
LTP_DEC


1888 
uöt8_t
 
	`…p_d©a
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics
, 
…p_öfo
 *
…p
, 
bôfûe
 *
ld
)

1890 
uöt8_t
 
sfb
, 
w
;

1892 
…p
->
œg
 = 0;

1894 #ifde‡
LD_DEC


1895 i‡(
hDecodî
->
obje˘_ty≥
 =
LD
)

1897 
…p
->
œg_upd©e
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 1

1898 
	`DEBUGVAR
(1,142,"ltp_data():Üag_update"));

1900 i‡(
…p
->
œg_upd©e
)

1902 
…p
->
œg
 = (
uöt16_t
)
	`Áad_gëbôs
(
ld
, 10

1903 
	`DEBUGVAR
(1,81,"ltp_data():Üag"));

1907 
…p
->
œg
 = (
uöt16_t
)
	`Áad_gëbôs
(
ld
, 11

1908 
	`DEBUGVAR
(1,81,"ltp_data():Üag"));

1909 #ifde‡
LD_DEC


1914 i‡(
…p
->
œg
 > (
hDecodî
->
‰ameLígth
 << 1))

1917 
…p
->
c€f
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 3

1918 
	`DEBUGVAR
(1,82,"ltp_data(): coef"));

1920 i‡(
ics
->
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
)

1922 
w
 = 0; w < 
ics
->
num_wödows
; w++)

1924 i‡((
…p
->
sh‹t_u£d
[
w
] = 
	`Áad_gë1bô
(
ld


1925 
	`DEBUGVAR
(1,83,"ltp_data(): short_used"))) & 1)

1927 
…p
->
sh‹t_œg_¥e£¡
[
w
] = 
	`Áad_gë1bô
(
ld


1928 
	`DEBUGVAR
(1,84,"ltp_data(): short_lag_present"));

1929 i‡(
…p
->
sh‹t_œg_¥e£¡
[
w
])

1931 
…p
->
sh‹t_œg
[
w
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

1932 
	`DEBUGVAR
(1,85,"ltp_data(): short_lag"));

1937 
…p
->
œ°_b™d
 = (
ics
->
max_sfb
 < 
MAX_LTP_SFB
 ? ics->max_sfb : MAX_LTP_SFB);

1939 
sfb
 = 0; sfb < 
…p
->
œ°_b™d
; sfb++)

1941 
…p
->
l⁄g_u£d
[
sfb
] = 
	`Áad_gë1bô
(
ld


1942 
	`DEBUGVAR
(1,86,"ltp_data():Üong_used"));

1951 
uöt8_t
 
	`•e˘øl_d©a
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics
, 
bôfûe
 *
ld
,

1952 
öt16_t
 *
•e˘øl_d©a
)

1954 
öt8_t
 
i
;

1955 
uöt8_t
 
g
;

1956 
uöt16_t
 
öc
, 
k
, 
p
 = 0;

1957 
uöt8_t
 
groups
 = 0;

1958 
uöt8_t
 
£˘_cb
;

1959 
uöt8_t
 
ªsu…
;

1960 
uöt16_t
 
nsh‹t
 = 
hDecodî
->
‰ameLígth
/8;

1962 #ifde‡
PROFILE


1963 
öt64_t
 
cou¡
 = 
	`Áad_gë_ts
();

1966 
g
 = 0; g < 
ics
->
num_wödow_groups
; g++)

1968 
p
 = 
groups
*
nsh‹t
;

1970 
i
 = 0; i < 
ics
->
num_£c
[
g
]; i++)

1972 
£˘_cb
 = 
ics
->£˘_cb[
g
][
i
];

1974 
öc
 = (
£˘_cb
 >
FIRST_PAIR_HCB
) ? 2 : 4;

1976 
£˘_cb
)

1978 
ZERO_HCB
:

1979 
NOISE_HCB
:

1980 
INTENSITY_HCB
:

1981 
INTENSITY_HCB2
:

1983 #ifde‡
SD_PRINT


1985 
j
;

1986 
j
 = 
ics
->
£˘_sfb_off£t
[
g
][ics->
£˘_°¨t
[g][
i
]]; j < ics->£˘_sfb_off£t[g][ics->
£˘_íd
[g][i]]; j++)

1988 
	`¥ötf
("%d\n", 0);

1993 #ifde‡
SFBO_PRINT


1994 
	`¥ötf
("%d\n", 
ics
->
£˘_sfb_off£t
[
g
][ics->
£˘_°¨t
[g][
i
]]);

1996 
p
 +(
ics
->
£˘_sfb_off£t
[
g
][ics->
£˘_íd
[g][
i
]] -

1997 
ics
->
£˘_sfb_off£t
[
g
][ics->
£˘_°¨t
[g][
i
]]);

2000 #ifde‡
SFBO_PRINT


2001 
	`¥ötf
("%d\n", 
ics
->
£˘_sfb_off£t
[
g
][ics->
£˘_°¨t
[g][
i
]]);

2003 
k
 = 
ics
->
£˘_sfb_off£t
[
g
][ics->
£˘_°¨t
[g][
i
]];

2004 
k
 < 
ics
->
£˘_sfb_off£t
[
g
][ics->
£˘_íd
[g][
i
]]; k +
öc
)

2006 i‡((
ªsu…
 = 
	`huffm™_•e˘øl_d©a
(
£˘_cb
, 
ld
, &
•e˘øl_d©a
[
p
])) > 0)

2007  
ªsu…
;

2008 #ifde‡
SD_PRINT


2010 
j
;

2011 
j
 = 
p
; j <Ö+
öc
; j++)

2013 
	`¥ötf
("%d\n", 
•e˘øl_d©a
[
j
]);

2017 
p
 +
öc
;

2022 
groups
 +
ics
->
wödow_group_Àngth
[
g
];

2025 #ifde‡
PROFILE


2026 
cou¡
 = 
	`Áad_gë_ts
() - count;

2027 
hDecodî
->
•e˘øl_cy˛es
 +
cou¡
;

2034 
uöt16_t
 
	`exãnsi⁄_∑ylﬂd
(
bôfûe
 *
ld
, 
drc_öfo
 *
drc
, uöt16_à
cou¡
)

2036 
uöt16_t
 
i
, 
n
, 
d©aEÀmítLígth
;

2037 
uöt8_t
 
d©aEÀmítLígthP¨t
;

2038 
uöt8_t
 
Æign
 = 4, 
d©a_ñemít_vîsi⁄
, 
lo›Cou¡î
;

2040 
uöt8_t
 
exãnsi⁄_ty≥
 = (uöt8_t)
	`Áad_gëbôs
(
ld
, 4

2041 
	`DEBUGVAR
(1,87,"extension_payload():Éxtension_type"));

2043 
exãnsi⁄_ty≥
)

2045 
EXT_DYNAMIC_RANGE
:

2046 
drc
->
¥e£¡
 = 1;

2047 
n
 = 
	`dy«mic_ønge_öfo
(
ld
, 
drc
);

2048  
n
;

2049 
EXT_FILL_DATA
:

2050  
	`Áad_gëbôs
(
ld
, 4

2051 
	`DEBUGVAR
(1,136,"extension_payload(): fill_nibble"));

2052 
i
 = 0; i < 
cou¡
-1; i++)

2054  
	`Áad_gëbôs
(
ld
, 8

2055 
	`DEBUGVAR
(1,88,"extension_payload(): fill_byte"));

2057  
cou¡
;

2058 
EXT_DATA_ELEMENT
:

2059 
d©a_ñemít_vîsi⁄
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

2060 
	`DEBUGVAR
(1,400,"extension_payload(): data_element_version"));

2061 
d©a_ñemít_vîsi⁄
)

2063 
ANC_DATA
:

2064 
lo›Cou¡î
 = 0;

2065 
d©aEÀmítLígth
 = 0;

2067 
d©aEÀmítLígthP¨t
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 8

2068 
	`DEBUGVAR
(1,401,"extension_payload(): dataElementLengthPart"));

2069 
d©aEÀmítLígth
 +
d©aEÀmítLígthP¨t
;

2070 
lo›Cou¡î
++;

2071 } 
d©aEÀmítLígthP¨t
 == 255);

2073 
i
 = 0; i < 
d©aEÀmítLígth
; i++)

2075  
	`Áad_gëbôs
(
ld
, 8

2076 
	`DEBUGVAR
(1,402,"extension_payload(): data_element_byte"));

2077  (
d©aEÀmítLígth
+
lo›Cou¡î
+1);

2080 
Æign
 = 0;

2082 
EXT_FIL
:

2084 
	`Áad_gëbôs
(
ld
, 
Æign


2085 
	`DEBUGVAR
(1,88,"extension_payload(): fill_nibble"));

2086 
i
 = 0; i < 
cou¡
-1; i++)

2088  
	`Áad_gëbôs
(
ld
, 8

2089 
	`DEBUGVAR
(1,89,"extension_payload(): fill_bit"));

2091  
cou¡
;

2096 
uöt8_t
 
	`dy«mic_ønge_öfo
(
bôfûe
 *
ld
, 
drc_öfo
 *
drc
)

2098 
uöt8_t
 
i
, 
n
 = 1;

2099 
uöt8_t
 
b™d_ö¸
;

2101 
drc
->
num_b™ds
 = 1;

2103 i‡(
	`Áad_gë1bô
(
ld


2104 
	`DEBUGVAR
(1,90,"dynamic_range_info(): has instance_tag")) & 1)

2106 
drc
->
p˚_ö°™˚_èg
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

2107 
	`DEBUGVAR
(1,91,"dynamic_range_info():Öce_instance_tag"));

2108  
	`Áad_gëbôs
(
ld
, 4

2109 
	`DEBUGVAR
(1,92,"dynamic_range_info(): drc_tag_reserved_bits"));

2110 
n
++;

2113 
drc
->
ex˛uded_chns_¥e£¡
 = 
	`Áad_gë1bô
(
ld


2114 
	`DEBUGVAR
(1,93,"dynamic_range_info():Éxcluded_chns_present"));

2115 i‡(
drc
->
ex˛uded_chns_¥e£¡
 == 1)

2117 
n
 +
	`ex˛uded_ch™√ls
(
ld
, 
drc
);

2120 i‡(
	`Áad_gë1bô
(
ld


2121 
	`DEBUGVAR
(1,94,"dynamic_range_info(): has bands data")) & 1)

2123 
b™d_ö¸
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

2124 
	`DEBUGVAR
(1,95,"dynamic_range_info(): band_incr"));

2125  
	`Áad_gëbôs
(
ld
, 4

2126 
	`DEBUGVAR
(1,96,"dynamic_range_info(): drc_bands_reserved_bits"));

2127 
n
++;

2128 
drc
->
num_b™ds
 +
b™d_ö¸
;

2130 
i
 = 0; i < 
drc
->
num_b™ds
; i++);

2132 
drc
->
b™d_t›
[
i
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 8

2133 
	`DEBUGVAR
(1,97,"dynamic_range_info(): band_top"));

2134 
n
++;

2138 i‡(
	`Áad_gë1bô
(
ld


2139 
	`DEBUGVAR
(1,98,"dynamic_range_info(): hasÖrog_ref_level")) & 1)

2141 
drc
->
¥og_ªf_Àvñ
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 7

2142 
	`DEBUGVAR
(1,99,"dynamic_range_info():Örog_ref_level"));

2143  
	`Áad_gë1bô
(
ld


2144 
	`DEBUGVAR
(1,100,"dynamic_range_info():Örog_ref_level_reserved_bits"));

2145 
n
++;

2148 
i
 = 0; i < 
drc
->
num_b™ds
; i++)

2150 
drc
->
dyn_∫g_sgn
[
i
] = 
	`Áad_gë1bô
(
ld


2151 
	`DEBUGVAR
(1,101,"dynamic_range_info(): dyn_rng_sgn"));

2152 
drc
->
dyn_∫g_˘l
[
i
] = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 7

2153 
	`DEBUGVAR
(1,102,"dynamic_range_info(): dyn_rng_ctl"));

2154 
n
++;

2157  
n
;

2161 
uöt8_t
 
	`ex˛uded_ch™√ls
(
bôfûe
 *
ld
, 
drc_öfo
 *
drc
)

2163 
uöt8_t
 
i
, 
n
 = 0;

2164 
uöt8_t
 
num_ex˛_ch™
 = 7;

2166 
i
 = 0; i < 7; i++)

2168 
drc
->
ex˛ude_mask
[
i
] = 
	`Áad_gë1bô
(
ld


2169 
	`DEBUGVAR
(1,103,"excluded_channels():Éxclude_mask"));

2171 
n
++;

2173 (
drc
->
addôi⁄Æ_ex˛uded_chns
[
n
-1] = 
	`Áad_gë1bô
(
ld


2174 
	`DEBUGVAR
(1,104,"excluded_channels():ádditional_excluded_chns"))) == 1)

2176 
i
 = 
num_ex˛_ch™
; i <Çum_excl_chan+7; i++)

2178 
drc
->
ex˛ude_mask
[
i
] = 
	`Áad_gë1bô
(
ld


2179 
	`DEBUGVAR
(1,105,"excluded_channels():Éxclude_mask"));

2181 
n
++;

2182 
num_ex˛_ch™
 += 7;

2185  
n
;

2191 
	`gë_adif_hódî
(
adif_hódî
 *
adif
, 
bôfûe
 *
ld
)

2193 
uöt8_t
 
i
;

2195  
	`Áad_gëbôs
(
ld
, 8

2196 
	`DEBUGVAR
(1,106,"get_adif_header():ádif_id[0]"));

2197  
	`Áad_gëbôs
(
ld
, 8

2198 
	`DEBUGVAR
(1,107,"get_adif_header():ádif_id[1]"));

2199  
	`Áad_gëbôs
(
ld
, 8

2200 
	`DEBUGVAR
(1,108,"get_adif_header():ádif_id[2]"));

2201  
	`Áad_gëbôs
(
ld
, 8

2202 
	`DEBUGVAR
(1,109,"get_adif_header():ádif_id[3]"));

2203 
adif
->
c›yright_id_¥e£¡
 = 
	`Áad_gë1bô
(
ld


2204 
	`DEBUGVAR
(1,110,"get_adif_header(): copyright_id_present"));

2205 if(
adif
->
c›yright_id_¥e£¡
)

2207 
i
 = 0; i < 72/8; i++)

2209 
adif
->
c›yright_id
[
i
] = (
öt8_t
)
	`Áad_gëbôs
(
ld
, 8

2210 
	`DEBUGVAR
(1,111,"get_adif_header(): copyright_id"));

2212 
adif
->
c›yright_id
[
i
] = 0;

2214 
adif
->
‹igöÆ_c›y
 = 
	`Áad_gë1bô
(
ld


2215 
	`DEBUGVAR
(1,112,"get_adif_header(): original_copy"));

2216 
adif
->
home
 = 
	`Áad_gë1bô
(
ld


2217 
	`DEBUGVAR
(1,113,"get_adif_header(): home"));

2218 
adif
->
bô°ªam_ty≥
 = 
	`Áad_gë1bô
(
ld


2219 
	`DEBUGVAR
(1,114,"get_adif_header(): bitstream_type"));

2220 
adif
->
bôøã
 = 
	`Áad_gëbôs
(
ld
, 23

2221 
	`DEBUGVAR
(1,115,"get_adif_header(): bitrate"));

2222 
adif
->
num_¥ogøm_c⁄fig_ñemíts
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

2223 
	`DEBUGVAR
(1,116,"get_adif_header():Çum_program_config_elements"));

2225 
i
 = 0; i < 
adif
->
num_¥ogøm_c⁄fig_ñemíts
 + 1; i++)

2227 if(
adif
->
bô°ªam_ty≥
 == 0)

2229 
adif
->
adif_buf„r_fuŒ√ss
 = 
	`Áad_gëbôs
(
ld
, 20

2230 
	`DEBUGVAR
(1,117,"get_adif_header():ádif_buffer_fullness"));

2232 
adif
->
adif_buf„r_fuŒ√ss
 = 0;

2235 
	`¥ogøm_c⁄fig_ñemít
(&
adif
->
p˚
[
i
], 
ld
);

2240 
uöt8_t
 
	`adts_‰ame
(
adts_hódî
 *
adts
, 
bôfûe
 *
ld
)

2243 i‡(
	`adts_fixed_hódî
(
adts
, 
ld
))

2245 
	`adts_v¨übÀ_hódî
(
adts
, 
ld
);

2246 
	`adts_îr‹_check
(
adts
, 
ld
);

2252 
uöt8_t
 
	`adts_fixed_hódî
(
adts_hódî
 *
adts
, 
bôfûe
 *
ld
)

2254 
uöt16_t
 
i
;

2255 
uöt8_t
 
sync_îr
 = 1;

2258 
i
 = 0; i < 768; i++)

2260 
adts
->
syncw‹d
 = (
uöt16_t
)
	`Áad_showbôs
(
ld
, 12);

2261 i‡(
adts
->
syncw‹d
 != 0xFFF)

2263 
	`Áad_gëbôs
(
ld
, 8

2264 
	`DEBUGVAR
(0,0,""));

2266 
sync_îr
 = 0;

2267 
	`Áad_gëbôs
(
ld
, 12

2268 
	`DEBUGVAR
(1,118,"adts_fixed_header(): syncword"));

2272 i‡(
sync_îr
)

2275 
adts
->
id
 = 
	`Áad_gë1bô
(
ld


2276 
	`DEBUGVAR
(1,119,"adts_fixed_header(): id"));

2277 
adts
->
œyî
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

2278 
	`DEBUGVAR
(1,120,"adts_fixed_header():Üayer"));

2279 
adts
->
¥Ÿe˘i⁄_ab£¡
 = 
	`Áad_gë1bô
(
ld


2280 
	`DEBUGVAR
(1,121,"adts_fixed_header():Örotection_absent"));

2281 
adts
->
¥ofûe
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

2282 
	`DEBUGVAR
(1,122,"adts_fixed_header():Örofile"));

2283 
adts
->
sf_ödex
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 4

2284 
	`DEBUGVAR
(1,123,"adts_fixed_header(): sf_index"));

2285 
adts
->
¥iv©e_bô
 = 
	`Áad_gë1bô
(
ld


2286 
	`DEBUGVAR
(1,124,"adts_fixed_header():Örivate_bit"));

2287 
adts
->
ch™√l_c⁄figuøti⁄
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 3

2288 
	`DEBUGVAR
(1,125,"adts_fixed_header(): channel_configuration"));

2289 
adts
->
‹igöÆ
 = 
	`Áad_gë1bô
(
ld


2290 
	`DEBUGVAR
(1,126,"adts_fixed_header(): original"));

2291 
adts
->
home
 = 
	`Áad_gë1bô
(
ld


2292 
	`DEBUGVAR
(1,127,"adts_fixed_header(): home"));

2294 i‡(
adts
->
ﬁd_f‹m©
 == 1)

2297 i‡(
adts
->
id
 == 0)

2299 
adts
->
emphasis
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

2300 
	`DEBUGVAR
(1,128,"adts_fixed_header():Émphasis"));

2308 
	`adts_v¨übÀ_hódî
(
adts_hódî
 *
adts
, 
bôfûe
 *
ld
)

2310 
adts
->
c›yright_idítifiˇti⁄_bô
 = 
	`Áad_gë1bô
(
ld


2311 
	`DEBUGVAR
(1,129,"adts_variable_header(): copyright_identification_bit"));

2312 
adts
->
c›yright_idítifiˇti⁄_°¨t
 = 
	`Áad_gë1bô
(
ld


2313 
	`DEBUGVAR
(1,130,"adts_variable_header(): copyright_identification_start"));

2314 
adts
->
Øc_‰ame_Àngth
 = (
uöt16_t
)
	`Áad_gëbôs
(
ld
, 13

2315 
	`DEBUGVAR
(1,131,"adts_variable_header():áac_frame_length"));

2316 
adts
->
adts_buf„r_fuŒ√ss
 = (
uöt16_t
)
	`Áad_gëbôs
(
ld
, 11

2317 
	`DEBUGVAR
(1,132,"adts_variable_header():ádts_buffer_fullness"));

2318 
adts
->
no_øw_d©a_blocks_ö_‰ame
 = (
uöt8_t
)
	`Áad_gëbôs
(
ld
, 2

2319 
	`DEBUGVAR
(1,133,"adts_variable_header():Ço_raw_data_blocks_in_frame"));

2323 
	`adts_îr‹_check
(
adts_hódî
 *
adts
, 
bôfûe
 *
ld
)

2325 i‡(
adts
->
¥Ÿe˘i⁄_ab£¡
 == 0)

2327 
adts
->
¸c_check
 = (
uöt16_t
)
	`Áad_gëbôs
(
ld
, 16

2328 
	`DEBUGVAR
(1,134,"adts_error_check(): crc_check"));

	@syntax.h

28 #i‚de‡
__SYNTAX_H__


29 
	#__SYNTAX_H__


	)

31 #ifde‡
__˝lu•lus


35 
	~"decodî.h
"

36 
	~"bôs.h
"

38 
	#MAIN
 1

	)

39 
	#LC
 2

	)

40 
	#SSR
 3

	)

41 
	#LTP
 4

	)

42 
	#HE_AAC
 5

	)

43 
	#LD
 23

	)

44 
	#ER_LC
 17

	)

45 
	#ER_LTP
 19

	)

46 
	#DRM_ER_LC
 27

	)

49 
	#RAW
 0

	)

50 
	#ADIF
 1

	)

51 
	#ADTS
 2

	)

54 
	#NO_SBR
 0

	)

55 
	#SBR_UPSAMPLED
 1

	)

56 
	#SBR_DOWNSAMPLED
 2

	)

57 
	#NO_SBR_UPSAMPLED
 3

	)

60 
	#DRMCH_MONO
 1

	)

61 
	#DRMCH_STEREO
 2

	)

62 
	#DRMCH_SBR_MONO
 3

	)

63 
	#DRMCH_SBR_STEREO
 4

	)

64 
	#DRMCH_SBR_PS_STEREO
 5

	)

68 
	#ER_OBJECT_START
 17

	)

72 
	#LEN_SE_ID
 3

	)

73 
	#LEN_TAG
 4

	)

74 
	#LEN_BYTE
 8

	)

76 
	#EXT_FIL
 0

	)

77 
	#EXT_FILL_DATA
 1

	)

78 
	#EXT_DATA_ELEMENT
 2

	)

79 
	#EXT_DYNAMIC_RANGE
 11

	)

80 
	#ANC_DATA
 0

	)

83 
	#ID_SCE
 0x0

	)

84 
	#ID_CPE
 0x1

	)

85 
	#ID_CCE
 0x2

	)

86 
	#ID_LFE
 0x3

	)

87 
	#ID_DSE
 0x4

	)

88 
	#ID_PCE
 0x5

	)

89 
	#ID_FIL
 0x6

	)

90 
	#ID_END
 0x7

	)

92 
	#ONLY_LONG_SEQUENCE
 0x0

	)

93 
	#LONG_START_SEQUENCE
 0x1

	)

94 
	#EIGHT_SHORT_SEQUENCE
 0x2

	)

95 
	#LONG_STOP_SEQUENCE
 0x3

	)

97 
	#ZERO_HCB
 0

	)

98 
	#FIRST_PAIR_HCB
 5

	)

99 
	#ESC_HCB
 11

	)

100 
	#QUAD_LEN
 4

	)

101 
	#PAIR_LEN
 2

	)

102 
	#NOISE_HCB
 13

	)

103 
	#INTENSITY_HCB2
 14

	)

104 
	#INTENSITY_HCB
 15

	)

106 
	#INVALID_SBR_ELEMENT
 255

	)

108 
öt8_t
 
GAS≥cificC⁄fig
(
bôfûe
 *
ld
, 
mp4AudioS≥cificC⁄fig
 *
mp4ASC
,

109 
¥ogøm_c⁄fig
 *
p˚
);

111 
uöt8_t
 
adts_‰ame
(
adts_hódî
 *
adts
, 
bôfûe
 *
ld
);

112 
gë_adif_hódî
(
adif_hódî
 *
adif
, 
bôfûe
 *
ld
);

113 
øw_d©a_block
(
NeAACDecH™dÀ
 
hDecodî
, 
NeAACDecFømeInfo
 *
hInfo
,

114 
bôfûe
 *
ld
, 
¥ogøm_c⁄fig
 *
p˚
, 
drc_öfo
 *
drc
);

115 
uöt8_t
 
ª‹dîed_•e˘øl_d©a
(
NeAACDecH™dÀ
 
hDecodî
, 
ic_°ªam
 *
ics
, 
bôfûe
 *
ld
,

116 
öt16_t
 *
•e˘øl_d©a
);

117 
Øc_sˇœbÀ_maö_ñemít
(
NeAACDecH™dÀ
 
hDecodî
, 
NeAACDecFømeInfo
 *
hInfo
,

118 
bôfûe
 *
ld
, 
¥ogøm_c⁄fig
 *
p˚
, 
drc_öfo
 *
drc
);

121 #ifde‡
__˝lu•lus


	@tns.c

28 
	~"comm⁄.h
"

29 
	~"°ru˘s.h
"

31 
	~"sy¡ax.h
"

32 
	~"äs.h
"

36 
äs_decode_c€f
(
uöt8_t
 
‹dî
, uöt8_à
c€f_ªs_bôs
, uöt8_à
c€f_com¥ess
,

37 
uöt8_t
 *
c€f
, 
ªÆ_t
 *
a
);

38 
äs_¨_fûãr
(
ªÆ_t
 *
•e˘rum
, 
uöt16_t
 
size
, 
öt8_t
 
öc
,Ñól_à*
Õc
,

39 
uöt8_t
 
‹dî
);

40 
äs_ma_fûãr
(
ªÆ_t
 *
•e˘rum
, 
uöt16_t
 
size
, 
öt8_t
 
öc
,Ñól_à*
Õc
,

41 
uöt8_t
 
‹dî
);

44 #ifde‡
_MSC_VER


45 #¥agm®
w¨nög
(
dißbÀ
:4305)

46 #¥agm®
w¨nög
(
dißbÀ
:4244)

48 
ªÆ_t
 
	gäs_c€f_0_3
[] =

50 
COEF_CONST
(0.0), COEF_CONST(0.4338837391), COEF_CONST(0.7818314825), COEF_CONST(0.9749279122),

51 
COEF_CONST
(-0.9848077530), COEF_CONST(-0.8660254038), COEF_CONST(-0.6427876097), COEF_CONST(-0.3420201433),

52 
COEF_CONST
(-0.4338837391), COEF_CONST(-0.7818314825), COEF_CONST(-0.9749279122), COEF_CONST(-0.9749279122),

53 
COEF_CONST
(-0.9848077530), COEF_CONST(-0.8660254038), COEF_CONST(-0.6427876097), COEF_CONST(-0.3420201433)

55 
ªÆ_t
 
	gäs_c€f_0_4
[] =

57 
COEF_CONST
(0.0), COEF_CONST(0.2079116908), COEF_CONST(0.4067366431), COEF_CONST(0.5877852523),

58 
COEF_CONST
(0.7431448255), COEF_CONST(0.8660254038), COEF_CONST(0.9510565163), COEF_CONST(0.9945218954),

59 
COEF_CONST
(-0.9957341763), COEF_CONST(-0.9618256432), COEF_CONST(-0.8951632914), COEF_CONST(-0.7980172273),

60 
COEF_CONST
(-0.6736956436), COEF_CONST(-0.5264321629), COEF_CONST(-0.3612416662), COEF_CONST(-0.1837495178)

62 
ªÆ_t
 
	gäs_c€f_1_3
[] =

64 
COEF_CONST
(0.0), COEF_CONST(0.4338837391), COEF_CONST(-0.6427876097), COEF_CONST(-0.3420201433),

65 
COEF_CONST
(0.9749279122), COEF_CONST(0.7818314825), COEF_CONST(-0.6427876097), COEF_CONST(-0.3420201433),

66 
COEF_CONST
(-0.4338837391), COEF_CONST(-0.7818314825), COEF_CONST(-0.6427876097), COEF_CONST(-0.3420201433),

67 
COEF_CONST
(-0.7818314825), COEF_CONST(-0.4338837391), COEF_CONST(-0.6427876097), COEF_CONST(-0.3420201433)

69 
ªÆ_t
 
	gäs_c€f_1_4
[] =

71 
COEF_CONST
(0.0), COEF_CONST(0.2079116908), COEF_CONST(0.4067366431), COEF_CONST(0.5877852523),

72 
COEF_CONST
(-0.6736956436), COEF_CONST(-0.5264321629), COEF_CONST(-0.3612416662), COEF_CONST(-0.1837495178),

73 
COEF_CONST
(0.9945218954), COEF_CONST(0.9510565163), COEF_CONST(0.8660254038), COEF_CONST(0.7431448255),

74 
COEF_CONST
(-0.6736956436), COEF_CONST(-0.5264321629), COEF_CONST(-0.3612416662), COEF_CONST(-0.1837495178)

79 
	$äs_decode_‰ame
(
ic_°ªam
 *
ics
, 
äs_öfo
 *
äs
, 
uöt8_t
 
§_ödex
,

80 
uöt8_t
 
obje˘_ty≥
, 
ªÆ_t
 *
•ec
, 
uöt16_t
 
‰ame_Àn
)

82 
uöt8_t
 
w
, 
f
, 
äs_‹dî
;

83 
öt8_t
 
öc
;

84 
öt16_t
 
size
;

85 
uöt16_t
 
bŸtom
, 
t›
, 
°¨t
, 
íd
;

86 
uöt16_t
 
nsh‹t
 = 
‰ame_Àn
/8;

87 
ªÆ_t
 
Õc
[
TNS_MAX_ORDER
+1];

89 i‡(!
ics
->
äs_d©a_¥e£¡
)

92 
w
 = 0; w < 
ics
->
num_wödows
; w++)

94 
bŸtom
 = 
ics
->
num_swb
;

96 
f
 = 0; f < 
äs
->
n_fût
[
w
]; f++)

98 
t›
 = 
bŸtom
;

99 
bŸtom
 = 
	`max
(
t›
 - 
äs
->
Àngth
[
w
][
f
], 0);

100 
äs_‹dî
 = 
	`mö
(
äs
->
‹dî
[
w
][
f
], 
TNS_MAX_ORDER
);

101 i‡(!
äs_‹dî
)

104 
	`äs_decode_c€f
(
äs_‹dî
, 
äs
->
c€f_ªs
[
w
]+3,

105 
äs
->
c€f_com¥ess
[
w
][
f
],Åns->
c€f
[w][f], 
Õc
);

107 
°¨t
 = 
	`mö
(
bŸtom
, 
	`max_äs_sfb
(
§_ödex
, 
obje˘_ty≥
, (
ics
->
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
)));

108 
°¨t
 = 
	`mö
(°¨t, 
ics
->
max_sfb
);

109 
°¨t
 = 
ics
->
swb_off£t
[start];

111 
íd
 = 
	`mö
(
t›
, 
	`max_äs_sfb
(
§_ödex
, 
obje˘_ty≥
, (
ics
->
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
)));

112 
íd
 = 
	`mö
”nd, 
ics
->
max_sfb
);

113 
íd
 = 
ics
->
swb_off£t
[end];

115 
size
 = 
íd
 - 
°¨t
;

116 i‡(
size
 <= 0)

119 i‡(
äs
->
dúe˘i⁄
[
w
][
f
])

121 
öc
 = -1;

122 
°¨t
 = 
íd
 - 1;

124 
öc
 = 1;

127 
	`äs_¨_fûãr
(&
•ec
[(
w
*
nsh‹t
)+
°¨t
], 
size
, 
öc
, 
Õc
, 
äs_‹dî
);

130 
	}
}

133 
	$äs_ícode_‰ame
(
ic_°ªam
 *
ics
, 
äs_öfo
 *
äs
, 
uöt8_t
 
§_ödex
,

134 
uöt8_t
 
obje˘_ty≥
, 
ªÆ_t
 *
•ec
, 
uöt16_t
 
‰ame_Àn
)

136 
uöt8_t
 
w
, 
f
, 
äs_‹dî
;

137 
öt8_t
 
öc
;

138 
öt16_t
 
size
;

139 
uöt16_t
 
bŸtom
, 
t›
, 
°¨t
, 
íd
;

140 
uöt16_t
 
nsh‹t
 = 
‰ame_Àn
/8;

141 
ªÆ_t
 
Õc
[
TNS_MAX_ORDER
+1];

143 i‡(!
ics
->
äs_d©a_¥e£¡
)

146 
w
 = 0; w < 
ics
->
num_wödows
; w++)

148 
bŸtom
 = 
ics
->
num_swb
;

150 
f
 = 0; f < 
äs
->
n_fût
[
w
]; f++)

152 
t›
 = 
bŸtom
;

153 
bŸtom
 = 
	`max
(
t›
 - 
äs
->
Àngth
[
w
][
f
], 0);

154 
äs_‹dî
 = 
	`mö
(
äs
->
‹dî
[
w
][
f
], 
TNS_MAX_ORDER
);

155 i‡(!
äs_‹dî
)

158 
	`äs_decode_c€f
(
äs_‹dî
, 
äs
->
c€f_ªs
[
w
]+3,

159 
äs
->
c€f_com¥ess
[
w
][
f
],Åns->
c€f
[w][f], 
Õc
);

161 
°¨t
 = 
	`mö
(
bŸtom
, 
	`max_äs_sfb
(
§_ödex
, 
obje˘_ty≥
, (
ics
->
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
)));

162 
°¨t
 = 
	`mö
(°¨t, 
ics
->
max_sfb
);

163 
°¨t
 = 
ics
->
swb_off£t
[start];

165 
íd
 = 
	`mö
(
t›
, 
	`max_äs_sfb
(
§_ödex
, 
obje˘_ty≥
, (
ics
->
wödow_£quí˚
 =
EIGHT_SHORT_SEQUENCE
)));

166 
íd
 = 
	`mö
”nd, 
ics
->
max_sfb
);

167 
íd
 = 
ics
->
swb_off£t
[end];

169 
size
 = 
íd
 - 
°¨t
;

170 i‡(
size
 <= 0)

173 i‡(
äs
->
dúe˘i⁄
[
w
][
f
])

175 
öc
 = -1;

176 
°¨t
 = 
íd
 - 1;

178 
öc
 = 1;

181 
	`äs_ma_fûãr
(&
•ec
[(
w
*
nsh‹t
)+
°¨t
], 
size
, 
öc
, 
Õc
, 
äs_‹dî
);

184 
	}
}

187 
	$äs_decode_c€f
(
uöt8_t
 
‹dî
, uöt8_à
c€f_ªs_bôs
, uöt8_à
c€f_com¥ess
,

188 
uöt8_t
 *
c€f
, 
ªÆ_t
 *
a
)

190 
uöt8_t
 
i
, 
m
;

191 
ªÆ_t
 
tmp2
[
TNS_MAX_ORDER
+1], 
b
[TNS_MAX_ORDER+1];

194 
i
 = 0; i < 
‹dî
; i++)

196 i‡(
c€f_com¥ess
 == 0)

198 i‡(
c€f_ªs_bôs
 == 3)

200 
tmp2
[
i
] = 
äs_c€f_0_3
[
c€f
[i]];

202 
tmp2
[
i
] = 
äs_c€f_0_4
[
c€f
[i]];

205 i‡(
c€f_ªs_bôs
 == 3)

207 
tmp2
[
i
] = 
äs_c€f_1_3
[
c€f
[i]];

209 
tmp2
[
i
] = 
äs_c€f_1_4
[
c€f
[i]];

215 
a
[0] = 
	`COEF_CONST
(1.0);

216 
m
 = 1; m <
‹dî
; m++)

218 
i
 = 1; i < 
m
; i++)

219 
b
[
i
] = 
a
[i] + 
	`MUL_C
(
tmp2
[
m
-1],á[m-i]);

221 
i
 = 1; i < 
m
; i++)

222 
a
[
i
] = 
b
[i];

224 
a
[
m
] = 
tmp2
[m-1];

226 
	}
}

228 
	$äs_¨_fûãr
(
ªÆ_t
 *
•e˘rum
, 
uöt16_t
 
size
, 
öt8_t
 
öc
,Ñól_à*
Õc
,

229 
uöt8_t
 
‹dî
)

240 
uöt8_t
 
j
;

241 
uöt16_t
 
i
;

242 
ªÆ_t
 
y
;

244 
ªÆ_t
 
°©e
[2*
TNS_MAX_ORDER
] = {0};

245 
öt8_t
 
°©e_ödex
 = 0;

247 
i
 = 0; i < 
size
; i++)

249 
y
 = *
•e˘rum
;

251 
j
 = 0; j < 
‹dî
; j++)

252 
y
 -
	`MUL_C
(
°©e
[
°©e_ödex
+
j
], 
Õc
[j+1]);

255 
°©e_ödex
--;

256 i‡(
°©e_ödex
 < 0)

257 
°©e_ödex
 = 
‹dî
-1;

258 
°©e
[
°©e_ödex
] = sèã[°©e_ödex + 
‹dî
] = 
y
;

260 *
•e˘rum
 = 
y
;

261 
•e˘rum
 +
öc
;

264 #ifde‡
TNS_PRINT


266 
	`¥ötf
("0x%.8X\n", 
y
);

269 
	}
}

271 
	$äs_ma_fûãr
(
ªÆ_t
 *
•e˘rum
, 
uöt16_t
 
size
, 
öt8_t
 
öc
,Ñól_à*
Õc
,

272 
uöt8_t
 
‹dî
)

283 
uöt8_t
 
j
;

284 
uöt16_t
 
i
;

285 
ªÆ_t
 
y
;

287 
ªÆ_t
 
°©e
[2*
TNS_MAX_ORDER
] = {0};

288 
öt8_t
 
°©e_ödex
 = 0;

290 
i
 = 0; i < 
size
; i++)

292 
y
 = *
•e˘rum
;

294 
j
 = 0; j < 
‹dî
; j++)

295 
y
 +
	`MUL_C
(
°©e
[
j
], 
Õc
[j+1]);

298 
°©e_ödex
--;

299 i‡(
°©e_ödex
 < 0)

300 
°©e_ödex
 = 
‹dî
-1;

301 
°©e
[
°©e_ödex
] = sèã[°©e_ödex + 
‹dî
] = *
•e˘rum
;

303 *
•e˘rum
 = 
y
;

304 
•e˘rum
 +
öc
;

306 
	}
}

	@tns.h

28 #i‚de‡
__TNS_H__


29 
	#__TNS_H__


	)

31 #ifde‡
__˝lu•lus


36 
	#TNS_MAX_ORDER
 20

	)

39 
äs_decode_‰ame
(
ic_°ªam
 *
ics
, 
äs_öfo
 *
äs
, 
uöt8_t
 
§_ödex
,

40 
uöt8_t
 
obje˘_ty≥
, 
ªÆ_t
 *
•ec
, 
uöt16_t
 
‰ame_Àn
);

41 
äs_ícode_‰ame
(
ic_°ªam
 *
ics
, 
äs_öfo
 *
äs
, 
uöt8_t
 
§_ödex
,

42 
uöt8_t
 
obje˘_ty≥
, 
ªÆ_t
 *
•ec
, 
uöt16_t
 
‰ame_Àn
);

45 #ifde‡
__˝lu•lus


	@../config.h

6 
	#DRM
 1

	)

12 
	#HAVE_ERRNO_H
 1

	)

18 
	#HAVE_FLOAT_H
 1

	)

24 
	#HAVE_INTTYPES_H
 1

	)

30 
	#HAVE_LIMITS_H
 1

	)

36 
	#HAVE_MEMCPY
 1

	)

42 
	#HAVE_STDINT_H
 1

	)

45 
	#HAVE_STDLIB_H
 1

	)

48 
	#HAVE_STRCHR
 1

	)

54 
	#HAVE_STRING_H
 1

	)

75 
	#PACKAGE
 "Áad2"

	)

78 
	#PACKAGE_BUGREPORT
 ""

	)

81 
	#PACKAGE_NAME
 ""

	)

84 
	#PACKAGE_STRING
 ""

	)

87 
	#PACKAGE_TARNAME
 ""

	)

90 
	#PACKAGE_VERSION
 ""

	)

93 
	#STDC_HEADERS
 1

	)

99 
	#VERSION
 "2.0"

	)

107 #i‚de‡
__˝lu•lus


108 
	#ölöe
 
__ölöe


	)

112 
	#off_t
 

	)

	@/usr/include/assert.h

23 #ifdef 
_ASSERT_H


25 #unde‡
_ASSERT_H


26 #unde‡
as£π


27 #unde‡
__ASSERT_VOID_CAST


29 #ifdef 
__USE_GNU


30 #unde‡
as£π_≥º‹


35 
	#_ASSERT_H
 1

	)

36 
	~<„©uªs.h
>

38 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

39 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

41 
	#__ASSERT_VOID_CAST
 ()

	)

49 #ifdef 
NDEBUG


51 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

59 #ifdef 
__USE_GNU


60 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

65 #i‚de‡
_ASSERT_H_DECLS


66 
	#_ASSERT_H_DECLS


	)

67 
__BEGIN_DECLS


70 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

71 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

72 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

75 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

76 
__löe
,

77 
__c⁄°
 *
__fun˘i⁄
)

78 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

83 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

84 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

87 
__END_DECLS


93 #i‡
	`__GNUC_PREREQ
 (3, 0)

94 
	#as£π
(
ex¥
) \

95 (
	`__ASSERT_VOID_CAST
 (
	`__buûtö_ex≥˘
 (!!(
ex¥
), 1) ? 0 : \

96 (
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, \

97 
__ASSERT_FUNCTION
), 0)))

	)

99 
	#as£π
(
ex¥
) \

100 (
	`__ASSERT_VOID_CAST
 ((
ex¥
) ? 0 : \

101 (
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, \

102 
__ASSERT_FUNCTION
), 0)))

	)

105 #ifdef 
__USE_GNU


106 #i‡
	`__GNUC_PREREQ
 (3, 0)

107 
	#as£π_≥º‹
(
î∫um
) \

108 (
	`__ASSERT_VOID_CAST
 (
	`__buûtö_ex≥˘
 (!(
î∫um
), 1) ? 0 : \

109 (
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, \

110 
__ASSERT_FUNCTION
), 0)))

	)

112 
	#as£π_≥º‹
(
î∫um
) \

113 (
	`__ASSERT_VOID_CAST
 (!(
î∫um
) ? 0 : \

114 (
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, \

115 
__ASSERT_FUNCTION
), 0)))

	)

124 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

125 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

127 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

128 
	#__ASSERT_FUNCTION
 
__func__


	)

130 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 "d"

	)

72 
	#PRIdFAST32
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 "i"

	)

88 
	#PRIiFAST32
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 "o"

	)

104 
	#PRIoFAST32
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 "u"

	)

120 
	#PRIuFAST32
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 "x"

	)

136 
	#PRIxFAST32
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 "X"

	)

152 
	#PRIXFAST32
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

327 #i‚de‡
__°πﬁ_öã∫Æ_deföed


328 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

329 **
__ª°ri˘
 
__íd±r
,

330 
__ba£
, 
__group
Ë
__THROW
;

331 
	#__°πﬁ_öã∫Æ_deföed
 1

	)

333 
__ölöe
 
ötmax_t


334 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

335 
ba£
Ë
__THROW


337  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

338 
	}
}

341 #i‚de‡
__°πoul_öã∫Æ_deföed


342 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

343 
__ª°ri˘
 
__≈å
,

344 ** 
__ª°ri˘
 
__íd±r
,

345 
__ba£
, 
__group
Ë
__THROW
;

346 
	#__°πoul_öã∫Æ_deföed
 1

	)

348 
__ölöe
 
uötmax_t


349 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

350 
ba£
Ë
__THROW


352  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

353 
	}
}

356 #i‚de‡
__wc°ﬁ_öã∫Æ_deföed


357 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

359 
__ba£
, 
__group
Ë
__THROW
;

360 
	#__wc°ﬁ_öã∫Æ_deföed
 1

	)

362 
__ölöe
 
ötmax_t


363 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
, __gwch¨_à**__ª°ri˘ 
íd±r
,

364 
ba£
Ë
__THROW


366  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

367 
	}
}

371 #i‚de‡
__wc°oul_öã∫Æ_deföed


372 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

373 
__ª°ri˘
 
__≈å
,

374 
__gwch¨_t
 **

375 
__ª°ri˘
 
__íd±r
,

376 
__ba£
, 
__group
Ë
__THROW
;

377 
	#__wc°oul_öã∫Æ_deföed
 1

	)

379 
__ölöe
 
uötmax_t


380 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
, __gwch¨_à**__ª°ri˘ 
íd±r
,

381 
ba£
Ë
__THROW


383  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

384 
	}
}

389 #i‚de‡
__°πﬁl_öã∫Æ_deföed


390 
__exãnsi⁄__


391 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

392 **
__ª°ri˘
 
__íd±r
,

393 
__ba£
, 
__group
Ë
__THROW
;

394 
	#__°πﬁl_öã∫Æ_deföed
 1

	)

396 
__ölöe
 
ötmax_t


397 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

398 
ba£
Ë
__THROW


400  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

401 
	}
}

404 #i‚de‡
__°πouŒ_öã∫Æ_deföed


405 
__exãnsi⁄__


406 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

407 
__ª°ri˘
 
__≈å
,

409 
__ª°ri˘
 
__íd±r
,

410 
__ba£
,

411 
__group
Ë
__THROW
;

412 
	#__°πouŒ_öã∫Æ_deföed
 1

	)

414 
__ölöe
 
uötmax_t


415 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

416 
ba£
Ë
__THROW


418  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

419 
	}
}

422 #i‚de‡
__wc°ﬁl_öã∫Æ_deföed


423 
__exãnsi⁄__


424 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

427 
__ba£
, 
__group
Ë
__THROW
;

428 
	#__wc°ﬁl_öã∫Æ_deföed
 1

	)

430 
__ölöe
 
ötmax_t


431 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
, __gwch¨_à**__ª°ri˘ 
íd±r
,

432 
ba£
Ë
__THROW


434  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

435 
	}
}

439 #i‚de‡
__wc°ouŒ_öã∫Æ_deföed


440 
__exãnsi⁄__


441 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

442 
__ª°ri˘
 
__≈å
,

443 
__gwch¨_t
 **

444 
__ª°ri˘
 
__íd±r
,

445 
__ba£
,

446 
__group
Ë
__THROW
;

447 
	#__wc°ouŒ_öã∫Æ_deföed
 1

	)

449 
__ölöe
 
uötmax_t


450 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
, __gwch¨_à**__ª°ri˘ 
íd±r
,

451 
ba£
Ë
__THROW


453  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

454 
	}
}

459 
__END_DECLS


	@/usr/include/math.h

24 #i‚def 
_MATH_H


25 
	#_MATH_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 
	~<bôs/huge_vÆ.h
>

36 #ifdef 
__USE_ISOC99


37 
	~<bôs/«n.h
>

40 
	~<bôs/m©hdef.h
>

48 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

49 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

50 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

51 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

52 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

53 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

54 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

55 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

56 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

57 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

58 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

59 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

61 
	#_MdoubÀ_
 

	)

62 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

63 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

64 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

65 
	~<bôs/m©hˇŒs.h
>

66 #unde‡
_MdoubÀ_


67 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


68 #unde‡
_MdoubÀ_END_NAMESPACE


69 #unde‡
__MATH_PRECNAME


71 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


77 #i‚de‡
_MÊﬂt_


78 
	#_MÊﬂt_
 

	)

80 
	#_MdoubÀ_
 
_MÊﬂt_


	)

81 #ifde‡
__STDC__


82 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

84 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

86 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

87 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

88 
	~<bôs/m©hˇŒs.h
>

89 #unde‡
_MdoubÀ_


90 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


91 #unde‡
_MdoubÀ_END_NAMESPACE


92 #unde‡
__MATH_PRECNAME


94 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0Ë&& !
deföed
 
__NO_LONG_DOUBLE_MATH


98 #i‚de‡
_Ml⁄g_doubÀ_


99 
	#_Ml⁄g_doubÀ_
 

	)

101 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

102 #ifde‡
__STDC__


103 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

105 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

107 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

108 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

109 
	~<bôs/m©hˇŒs.h
>

110 #unde‡
_MdoubÀ_


111 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


112 #unde‡
_MdoubÀ_END_NAMESPACE


113 #unde‡
__MATH_PRECNAME


118 #unde‡
__MATHDECL_1


119 #unde‡
__MATHDECL


120 #unde‡
__MATHCALL


123 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


125 
signgam
;

130 #i‡
__USE_ISOC99


168 
	mFP_NAN
,

169 
	#FP_NAN
 
FP_NAN


	)

170 
	mFP_INFINITE
,

171 
	#FP_INFINITE
 
FP_INFINITE


	)

172 
	mFP_ZERO
,

173 
	#FP_ZERO
 
FP_ZERO


	)

174 
	mFP_SUBNORMAL
,

175 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

176 
	mFP_NORMAL


177 
	#FP_NORMAL
 
FP_NORMAL


	)

181 #ifde‡
__NO_LONG_DOUBLE_MATH


182 
	#Â˛assify
(
x
) \

183 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

185 
	#Â˛assify
(
x
) \

186 ( (
x
) ==  () \

187 ? 
	`__Â˛assifyf
 (
x
) \

188 :  (
x
) ==  () \

189 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

193 #ifde‡
__NO_LONG_DOUBLE_MATH


194 
	#signbô
(
x
) \

195 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

197 
	#signbô
(
x
) \

198 ( (
x
) ==  () \

199 ? 
	`__signbôf
 (
x
) \

200 :  (
x
) ==  () \

201 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

205 #ifde‡
__NO_LONG_DOUBLE_MATH


206 
	#isföôe
(
x
) \

207 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

209 
	#isföôe
(
x
) \

210 ( (
x
) ==  () \

211 ? 
	`__föôef
 (
x
) \

212 :  (
x
) ==  () \

213 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

217 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

221 #ifde‡
__NO_LONG_DOUBLE_MATH


222 
	#i¢™
(
x
) \

223 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

225 
	#i¢™
(
x
) \

226 ( (
x
) ==  () \

227 ? 
	`__i¢™f
 (
x
) \

228 :  (
x
) ==  () \

229 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

233 #ifde‡
__NO_LONG_DOUBLE_MATH


234 
	#isöf
(
x
) \

235 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

237 
	#isöf
(
x
) \

238 ( (
x
) ==  () \

239 ? 
	`__isöff
 (
x
) \

240 :  (
x
) ==  () \

241 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

245 
	#MATH_ERRNO
 1

	)

246 
	#MATH_ERREXCEPT
 2

	)

250 #ifdef 
__USE_MISC


254 
	m_IEEE_
 = -1,

255 
	m_SVID_
,

256 
	m_XOPEN_
,

257 
	m_POSIX_
,

258 
	m_ISOC_


259 } 
	t_LIB_VERSION_TYPE
;

264 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

268 #ifde‡
__USE_SVID


274 #ifde‡
__˝lu•lus


275 
	g__ex˚±i⁄


277 
	gex˚±i⁄


280 
	gty≥
;

281 *
	g«me
;

282 
	g¨g1
;

283 
	g¨g2
;

284 
	gªtvÆ
;

287 #ifde‡
__˝lu•lus


288 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

290 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

293 
	#X_TLOSS
 1.41484755040568800000e+16

	)

296 
	#DOMAIN
 1

	)

297 
	#SING
 2

	)

298 
	#OVERFLOW
 3

	)

299 
	#UNDERFLOW
 4

	)

300 
	#TLOSS
 5

	)

301 
	#PLOSS
 6

	)

304 
	#HUGE
 3.40282347e+38F

	)

308 #ifde‡
__USE_XOPEN


310 
	#MAXFLOAT
 3.40282347e+38F

	)

317 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


318 
	#M_E
 2.7182818284590452354

	)

319 
	#M_LOG2E
 1.4426950408889634074

	)

320 
	#M_LOG10E
 0.43429448190325182765

	)

321 
	#M_LN2
 0.69314718055994530942

	)

322 
	#M_LN10
 2.30258509299404568402

	)

323 
	#M_PI
 3.14159265358979323846

	)

324 
	#M_PI_2
 1.57079632679489661923

	)

325 
	#M_PI_4
 0.78539816339744830962

	)

326 
	#M_1_PI
 0.31830988618379067154

	)

327 
	#M_2_PI
 0.63661977236758134308

	)

328 
	#M_2_SQRTPI
 1.12837916709551257390

	)

329 
	#M_SQRT2
 1.41421356237309504880

	)

330 
	#M_SQRT1_2
 0.70710678118654752440

	)

336 #ifde‡
__USE_GNU


337 
	#M_El
 2.7182818284590452353602874713526625L

	)

338 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

339 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

340 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

341 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

342 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

343 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

344 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

345 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

346 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

347 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

348 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

349 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

356 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


357 
	#__NO_MATH_INLINES
 1

	)

361 #ifde‡
__USE_EXTERN_INLINES


362 
	~<bôs/m©hölöe.h
>

366 #i‡
__USE_ISOC99


374 #i‚de‡
isgª©î


375 
	#isgª©î
(
x
, 
y
) \

376 (
__exãnsi⁄__
 \

377 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

378 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

382 #i‚de‡
isgª©îequÆ


383 
	#isgª©îequÆ
(
x
, 
y
) \

384 (
__exãnsi⁄__
 \

385 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

386 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

390 #i‚de‡
i¶ess


391 
	#i¶ess
(
x
, 
y
) \

392 (
__exãnsi⁄__
 \

393 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

394 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

398 #i‚de‡
i¶es£quÆ


399 
	#i¶es£quÆ
(
x
, 
y
) \

400 (
__exãnsi⁄__
 \

401 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

402 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

406 #i‚de‡
i¶essgª©î


407 
	#i¶essgª©î
(
x
, 
y
) \

408 (
__exãnsi⁄__
 \

409 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

410 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

414 #i‚de‡
isun‹dîed


415 
	#isun‹dîed
(
u
, 
v
) \

416 (
__exãnsi⁄__
 \

417 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

418 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

423 
	g__END_DECLS


	@/usr/include/memory.h

23 #i‚def 
_MEMORY_H


24 
	#_MEMORY_H
 1

	)

26 
	~<„©uªs.h
>

29 #i‚def 
_STRING_H


30 
	~<°rög.h
>

	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë¯## 
U


	)

301 
	#UINT16_C
(
c
Ë¯## 
U


	)

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
__BEGIN_NAMESPACE_STD


46 
_IO_FILE
 
	tFILE
;

47 
	g__END_NAMESPACE_STD


48 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

49 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

50 || 
deföed
 
__USE_POSIX2


51 
	$__USING_NAMESPACE_STD
(
FILE
)

54 
	#__FILE_deföed
 1

	)

56 #unde‡
__√ed_FILE


59 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


62 
_IO_FILE
 
	t__FILE
;

64 
	#____FILE_deföed
 1

	)

66 #unde‡
__√ed___FILE


69 #ifdef 
_STDIO_H


70 
	#_STDIO_USES_IOSTREAM


	)

72 
	~<libio.h
>

74 #ifde‡
__USE_XOPEN


75 #ifde‡
__GNUC__


76 #i‚de‡
_VA_LIST_DEFINED


77 
_G_va_li°
 
	tva_li°
;

78 
	#_VA_LIST_DEFINED


	)

81 
	~<°d¨g.h
>

86 
__BEGIN_NAMESPACE_STD


87 #i‚de‡
__USE_FILE_OFFSET64


88 
_G_Âos_t
 
	tÂos_t
;

90 
_G_Âos64_t
 
	tÂos_t
;

92 
__END_NAMESPACE_STD


93 #ifde‡
__USE_LARGEFILE64


94 
_G_Âos64_t
 
	tÂos64_t
;

98 
	#_IOFBF
 0

	)

99 
	#_IOLBF
 1

	)

100 
	#_IONBF
 2

	)

104 #i‚de‡
BUFSIZ


105 
	#BUFSIZ
 
_IO_BUFSIZ


	)

111 #i‚de‡
EOF


112 
	#EOF
 (-1)

	)

118 
	#SEEK_SET
 0

	)

119 
	#SEEK_CUR
 1

	)

120 
	#SEEK_END
 2

	)

123 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


125 
	#P_tmpdú
 "/tmp"

	)

138 
	~<bôs/°dio_lim.h
>

142 
_IO_FILE
 *
°dö
;

143 
_IO_FILE
 *
°dout
;

144 
_IO_FILE
 *
°dîr
;

146 
	#°dö
 
°dö


	)

147 
	#°dout
 
°dout


	)

148 
	#°dîr
 
°dîr


	)

150 
__BEGIN_NAMESPACE_STD


152 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

154 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

155 
__END_NAMESPACE_STD


158 
__BEGIN_NAMESPACE_STD


163 #i‚de‡
__USE_FILE_OFFSET64


164 
FILE
 *
	`tmpfûe
 ();

166 #ifde‡
__REDIRECT


167 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
);

169 
	#tmpfûe
 
tmpfûe64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
FILE
 *
	`tmpfûe64
 ();

178 *
	$tm≤am
 (*
__s
Ë
__THROW
;

179 
__END_NAMESPACE_STD


181 #ifde‡
__USE_MISC


184 *
	$tm≤am_r
 (*
__s
Ë
__THROW
;

188 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


196 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

197 
__THROW
 
__©åibuã_mÆloc__
;

201 
__BEGIN_NAMESPACE_STD


206 
	`f˛o£
 (
FILE
 *
__°ªam
);

211 
	`fÊush
 (
FILE
 *
__°ªam
);

212 
__END_NAMESPACE_STD


214 #ifde‡
__USE_MISC


221 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

224 #ifde‡
__USE_GNU


231 
	`f˛o£Æl
 ();

235 
__BEGIN_NAMESPACE_STD


236 #i‚de‡
__USE_FILE_OFFSET64


241 
FILE
 *
	`f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

242 
__c⁄°
 *
__ª°ri˘
 
__modes
);

247 
FILE
 *
	`‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

248 
__c⁄°
 *
__ª°ri˘
 
__modes
,

249 
FILE
 *
__ª°ri˘
 
__°ªam
);

251 #ifde‡
__REDIRECT


252 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

253 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
);

254 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

255 
__c⁄°
 *
__ª°ri˘
 
__modes
,

256 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
);

258 
	#f›í
 
f›í64


	)

259 
	#‰e›í
 
‰e›í64


	)

262 
__END_NAMESPACE_STD


263 #ifde‡
__USE_LARGEFILE64


264 
FILE
 *
	`f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

265 
__c⁄°
 *
__ª°ri˘
 
__modes
);

266 
FILE
 *
	`‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

267 
__c⁄°
 *
__ª°ri˘
 
__modes
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
);

271 #ifdef 
__USE_POSIX


273 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
;

276 #ifdef 
__USE_GNU


279 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
;

284 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
Ë
__THROW
;

289 
FILE
 *
	$›í_mem°ªam
 (**
__ª°ri˘
 
__buÊoc
,

290 
size_t
 *
__ª°ri˘
 
__sizñoc
Ë
__THROW
;

294 
__BEGIN_NAMESPACE_STD


297 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

301 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

302 
__modes
, 
size_t
 
__n
Ë
__THROW
;

303 
__END_NAMESPACE_STD


305 #ifdef 
__USE_BSD


308 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

309 
size_t
 
__size
Ë
__THROW
;

312 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

316 
__BEGIN_NAMESPACE_STD


321 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

322 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

327 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
	$•rötf
 (*
__ª°ri˘
 
__s
,

330 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

336 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

337 
_G_va_li°
 
__¨g
);

342 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

344 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

345 
_G_va_li°
 
__¨g
Ë
__THROW
;

346 
__END_NAMESPACE_STD


348 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


349 
__BEGIN_NAMESPACE_C99


351 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

352 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

353 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

355 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

356 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

357 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

358 
__END_NAMESPACE_C99


361 #ifde‡
__USE_GNU


364 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

365 
_G_va_li°
 
__¨g
)

366 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

367 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

368 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

369 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

370 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

371 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

372 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

380 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

381 
_G_va_li°
 
__¨g
)

382 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

383 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

384 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

388 
__BEGIN_NAMESPACE_STD


393 
	`fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

394 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

399 
	`sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

401 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

402 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

403 
__END_NAMESPACE_STD


405 #ifdef 
__USE_ISOC99


406 
__BEGIN_NAMESPACE_C99


411 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

412 
_G_va_li°
 
__¨g
)

413 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

419 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 1, 0)));

423 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

424 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

425 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

426 
__END_NAMESPACE_C99


430 
__BEGIN_NAMESPACE_STD


435 
	`fgëc
 (
FILE
 *
__°ªam
);

436 
	`gëc
 (
FILE
 *
__°ªam
);

442 
	`gëch¨
 ();

443 
__END_NAMESPACE_STD


447 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

449 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


454 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

455 
	`gëch¨_u∆ocked
 ();

458 #ifde‡
__USE_MISC


465 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

469 
__BEGIN_NAMESPACE_STD


477 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

478 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

484 
	`putch¨
 (
__c
);

485 
__END_NAMESPACE_STD


489 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

491 #ifde‡
__USE_MISC


498 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

501 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


506 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

507 
	`putch¨_u∆ocked
 (
__c
);

511 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

512 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

514 
	`gëw
 (
FILE
 *
__°ªam
);

517 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

521 
__BEGIN_NAMESPACE_STD


526 *
	`fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
);

533 *
	`gës
 (*
__s
);

534 
__END_NAMESPACE_STD


536 #ifde‡
__USE_GNU


543 *
	`fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

544 
FILE
 *
__ª°ri˘
 
__°ªam
);

548 #ifdef 
__USE_GNU


559 
_IO_ssize_t
 
	`__gëdñim
 (**
__ª°ri˘
 
__löïå
,

560 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

561 
FILE
 *
__ª°ri˘
 
__°ªam
);

562 
_IO_ssize_t
 
	`gëdñim
 (**
__ª°ri˘
 
__löïå
,

563 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

564 
FILE
 *
__ª°ri˘
 
__°ªam
);

572 
_IO_ssize_t
 
	`gëlöe
 (**
__ª°ri˘
 
__löïå
,

573 
size_t
 *
__ª°ri˘
 
__n
,

574 
FILE
 *
__ª°ri˘
 
__°ªam
);

578 
__BEGIN_NAMESPACE_STD


583 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

589 
	`puts
 (
__c⁄°
 *
__s
);

596 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

603 
size_t
 
	`‰ód
 (*
__ª°ri˘
 
__±r
, size_à
__size
,

604 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

609 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

610 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

611 
__END_NAMESPACE_STD


613 #ifde‡
__USE_GNU


620 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

621 
FILE
 *
__ª°ri˘
 
__°ªam
);

624 #ifde‡
__USE_MISC


631 
size_t
 
	`‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, size_à
__size
,

632 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

633 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

634 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

638 
__BEGIN_NAMESPACE_STD


643 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

648 
	`·ñl
 (
FILE
 *
__°ªam
);

653 
	`ªwöd
 (
FILE
 *
__°ªam
);

654 
__END_NAMESPACE_STD


661 #ifde‡
__USE_LARGEFILE


662 #i‚de‡
__USE_FILE_OFFSET64


667 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

672 
__off_t
 
	`·ñlo
 (
FILE
 *
__°ªam
);

674 #ifde‡
__REDIRECT


675 
	`__REDIRECT
 (
f£eko
,

676 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

677 
f£eko64
);

678 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

680 
	#f£eko
 
f£eko64


	)

681 
	#·ñlo
 
·ñlo64


	)

686 
__BEGIN_NAMESPACE_STD


687 #i‚de‡
__USE_FILE_OFFSET64


692 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

697 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

699 #ifde‡
__REDIRECT


700 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

701 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

702 
	`__REDIRECT
 (
f£ços
,

703 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

705 
	#fgëpos
 
fgëpos64


	)

706 
	#f£ços
 
f£ços64


	)

709 
__END_NAMESPACE_STD


711 #ifde‡
__USE_LARGEFILE64


712 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

713 
__off64_t
 
	`·ñlo64
 (
FILE
 *
__°ªam
);

714 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

715 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

718 
__BEGIN_NAMESPACE_STD


720 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

722 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
;

724 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
;

725 
__END_NAMESPACE_STD


727 #ifde‡
__USE_MISC


729 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

730 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

731 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

735 
__BEGIN_NAMESPACE_STD


740 
	`≥º‹
 (
__c⁄°
 *
__s
);

741 
__END_NAMESPACE_STD


747 
	~<bôs/sys_îæi°.h
>

750 #ifdef 
__USE_POSIX


752 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
;

755 #ifde‡
__USE_MISC


757 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

761 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

762 
deföed
 
__USE_MISC
)

767 
FILE
 *
	`p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
);

773 
	`p˛o£
 (
FILE
 *
__°ªam
);

777 #ifdef 
__USE_POSIX


779 *
	$˘îmid
 (*
__s
Ë
__THROW
;

783 #ifde‡
__USE_XOPEN


785 *
	`cu£rid
 (*
__s
);

789 #ifdef 
__USE_GNU


790 
ob°ack
;

793 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

794 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

795 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

796 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

797 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

798 
_G_va_li°
 
__¨gs
)

799 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

803 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


807 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

811 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

814 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

817 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


821 
	#__√ed_gë›t


	)

822 
	~<gë›t.h
>

827 #ifde‡
__USE_EXTERN_INLINES


828 
	~<bôs/°dio.h
>

831 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 ({ uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; } 
__u
; \

53 
__u
.
__ö
 = (
°©us
); __u.
__i
; }))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

93 
__BEGIN_NAMESPACE_STD


97 
	mquŸ
;

98 
	mªm
;

99 } 
	tdiv_t
;

102 #i‚de‡
__ldiv_t_deföed


105 
	mquŸ
;

106 
	mªm
;

107 } 
	tldiv_t
;

108 
	#__ldiv_t_deföed
 1

	)

110 
	g__END_NAMESPACE_STD


112 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


113 
__BEGIN_NAMESPACE_C99


115 
__exãnsi⁄__
 struct

117 
	mquŸ
;

118 
	mªm
;

119 } 
	tŒdiv_t
;

120 
	#__Œdiv_t_deföed
 1

	)

121 
	g__END_NAMESPACE_C99


126 
	#RAND_MAX
 2147483647

	)

131 
	#EXIT_FAILURE
 1

	)

132 
	#EXIT_SUCCESS
 0

	)

136 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

137 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
;

140 
__BEGIN_NAMESPACE_STD


142 
	$©of
 (
__c⁄°
 *
__≈å
Ë
__THROW
 
__©åibuã_puª__
;

144 
	$©oi
 (
__c⁄°
 *
__≈å
Ë
__THROW
 
__©åibuã_puª__
;

146 
	$©ﬁ
 (
__c⁄°
 *
__≈å
Ë
__THROW
 
__©åibuã_puª__
;

147 
__END_NAMESPACE_STD


149 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

150 
__BEGIN_NAMESPACE_C99


152 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

153 
__THROW
 
__©åibuã_puª__
;

154 
__END_NAMESPACE_C99


157 
__BEGIN_NAMESPACE_STD


159 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

160 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

161 
__END_NAMESPACE_STD


163 #ifdef 
__USE_ISOC99


164 
__BEGIN_NAMESPACE_C99


166 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

167 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

169 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

170 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

171 
__END_NAMESPACE_C99


174 
__BEGIN_NAMESPACE_STD


176 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

179 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

180 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

181 
__THROW
;

182 
__END_NAMESPACE_C99


184 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


186 
__exãnsi⁄__


187 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

190 
__exãnsi⁄__


191 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

192 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

193 
__THROW
;

196 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

197 
__BEGIN_NAMESPACE_C99


199 
__exãnsi⁄__


200 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

203 
__exãnsi⁄__


204 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

205 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

206 
__THROW
;

207 
__END_NAMESPACE_C99


211 #ifde‡
__USE_GNU


225 
	~<xloˇÀ.h
>

229 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

230 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

231 
__loˇÀ_t
 
__loc
Ë
__THROW
;

233 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

234 **
__ª°ri˘
 
__íd±r
,

235 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

237 
__exãnsi⁄__


238 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

239 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

240 
__loˇÀ_t
 
__loc
Ë
__THROW
;

242 
__exãnsi⁄__


243 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
;

248 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

249 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

250 
__THROW
;

252 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

253 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

255 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__loˇÀ_t
 
__loc
Ë
__THROW
;

264 
	$__°πod_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__group
)

266 
__THROW
;

267 
	$__°πof_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

268 **
__ª°ri˘
 
__íd±r
, 
__group
)

269 
__THROW
;

270 
	$__°πﬁd_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

271 **
__ª°ri˘
 
__íd±r
,

272 
__group
Ë
__THROW
;

273 #i‚de‡
__°πﬁ_öã∫Æ_deföed


274 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

275 **
__ª°ri˘
 
__íd±r
,

276 
__ba£
, 
__group
Ë
__THROW
;

277 
	#__°πﬁ_öã∫Æ_deföed
 1

	)

279 #i‚de‡
__°πoul_öã∫Æ_deföed


280 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

281 **
__ª°ri˘
 
__íd±r
,

282 
__ba£
, 
__group
Ë
__THROW
;

283 
	#__°πoul_öã∫Æ_deföed
 1

	)

285 #i‡
deföed
 
__GNUC__
 || deföed 
__USE_ISOC99


286 #i‚de‡
__°πﬁl_öã∫Æ_deföed


287 
__exãnsi⁄__


288 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

289 **
__ª°ri˘
 
__íd±r
,

290 
__ba£
, 
__group
Ë
__THROW
;

291 
	#__°πﬁl_öã∫Æ_deföed
 1

	)

293 #i‚de‡
__°πouŒ_öã∫Æ_deföed


294 
__exãnsi⁄__


295 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

296 
__ª°ri˘
 
__≈å
,

297 **
__ª°ri˘
 
__íd±r
,

298 
__ba£
, 
__group
)

299 
__THROW
;

300 
	#__°πouŒ_öã∫Æ_deföed
 1

	)

304 #ifde‡
__USE_EXTERN_INLINES


307 
__BEGIN_NAMESPACE_STD


308 
__ölöe
 

309 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
Ë
__THROW


311  
	`__°πod_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

312 
	}
}

313 
__ölöe
 

314 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

315 
__ba£
Ë
__THROW


317  
	`__°πﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

318 
	}
}

319 
__ölöe
 

320 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

321 
__ba£
Ë
__THROW


323  
	`__°πoul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

324 
	}
}

325 
__END_NAMESPACE_STD


327 #ifde‡
__USE_ISOC99


328 
__BEGIN_NAMESPACE_C99


329 
__ölöe
 

330 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
Ë
__THROW


332  
	`__°πof_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

333 
	}
}

334 
__ölöe
 

335 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
Ë
__THROW


337  
	`__°πﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

338 
	}
}

339 
__END_NAMESPACE_C99


342 #ifde‡
__USE_BSD


343 
__exãnsi⁄__
 
__ölöe
 

344 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

345 
__ba£
Ë
__THROW


347  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

348 
	}
}

349 
__exãnsi⁄__
 
__ölöe
 

350 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

351 
__ba£
Ë
__THROW


353  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

354 
	}
}

357 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


358 
__BEGIN_NAMESPACE_C99


359 
__exãnsi⁄__
 
__ölöe
 

360 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

361 
__ba£
Ë
__THROW


363  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

364 
	}
}

365 
__exãnsi⁄__
 
__ölöe
 

366 
	$°πouŒ
 (
__c⁄°
 * 
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

367 
__ba£
Ë
__THROW


369  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

370 
	}
}

371 
__END_NAMESPACE_C99


374 
__BEGIN_NAMESPACE_STD


375 
__ölöe
 

376 
	$©of
 (
__c⁄°
 *
__≈å
Ë
__THROW


378  
	`°πod
 (
__≈å
, (**Ë
NULL
);

379 
	}
}

380 
__ölöe
 

381 
	$©oi
 (
__c⁄°
 *
__≈å
Ë
__THROW


383  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

384 
	}
}

385 
__ölöe
 

386 
	$©ﬁ
 (
__c⁄°
 *
__≈å
Ë
__THROW


388  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

389 
	}
}

390 
__END_NAMESPACE_STD


392 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


393 
__BEGIN_NAMESPACE_C99


394 
__exãnsi⁄__
 
__ölöe
 

395 
	$©ﬁl
 (
__c⁄°
 *
__≈å
Ë
__THROW


397  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

398 
	}
}

399 
__END_NAMESPACE_C99


404 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


408 *
	$l64a
 (
__n
Ë
__THROW
;

411 
	$a64l
 (
__c⁄°
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

415 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


416 
	~<sys/ty≥s.h
>

423 
	$øndom
 (Ë
__THROW
;

426 
	$§™dom
 (
__£ed
Ë
__THROW
;

432 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

433 
size_t
 
__°©ñí
Ë
__THROW
;

437 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
;

440 #ifde‡
__USE_MISC


445 
	søndom_d©a


447 
öt32_t
 *
Âå
;

448 
öt32_t
 *
Ωå
;

449 
öt32_t
 *
°©e
;

450 
ønd_ty≥
;

451 
ønd_deg
;

452 
ønd_£p
;

453 
öt32_t
 *
íd_±r
;

456 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

457 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

459 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
Ë
__THROW
;

461 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

462 
size_t
 
__°©ñí
,

463 
øndom_d©a
 *
__ª°ri˘
 
__buf
Ë
__THROW
;

465 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

466 
øndom_d©a
 *
__ª°ri˘
 
__buf
Ë
__THROW
;

471 
__BEGIN_NAMESPACE_STD


473 
	$ønd
 (Ë
__THROW
;

475 
	$§™d
 (
__£ed
Ë
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_POSIX


480 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

484 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


488 
	$dønd48
 (Ë
__THROW
;

489 
	`î™d48
 (
__xsubi
[3]Ë
__THROW
;

492 
	$Ã™d48
 (Ë
__THROW
;

493 
	`ƒ™d48
 (
__xsubi
[3]Ë
__THROW
;

496 
	$mønd48
 (Ë
__THROW
;

497 
	`jønd48
 (
__xsubi
[3]Ë
__THROW
;

500 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

501 *
	`£ed48
 (
__£ed16v
[3]Ë
__THROW
;

502 
	`lc⁄g48
 (
__∑øm
[7]Ë
__THROW
;

504 #ifde‡
__USE_MISC


508 
	sdønd48_d©a


510 
__x
[3];

511 
__ﬁd_x
[3];

512 
__c
;

513 
__öô
;

514 
__a
;

518 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

519 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

520 
	`î™d48_r
 (
__xsubi
[3],

521 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

522 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

525 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

526 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

527 
	`ƒ™d48_r
 (
__xsubi
[3],

528 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

529 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

532 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

533 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

534 
	`jønd48_r
 (
__xsubi
[3],

535 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

536 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

539 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

540 
__THROW
;

542 
	`£ed48_r
 (
__£ed16v
[3],

543 
dønd48_d©a
 *
__buf„r
Ë
__THROW
;

545 
	`lc⁄g48_r
 (
__∑øm
[7],

546 
dønd48_d©a
 *
__buf„r
Ë
__THROW
;

552 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


553 
	#__mÆloc_™d_ˇŒoc_deföed


	)

554 
__BEGIN_NAMESPACE_STD


556 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
;

558 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

559 
__THROW
 
__©åibuã_mÆloc__
;

560 
__END_NAMESPACE_STD


563 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


564 
__BEGIN_NAMESPACE_STD


567 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
;

569 
	$‰ì
 (*
__±r
Ë
__THROW
;

570 
__END_NAMESPACE_STD


572 #ifdef 
__USE_MISC


574 
	$c‰ì
 (*
__±r
Ë
__THROW
;

577 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


578 
	~<Æloˇ.h
>

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


583 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
;

586 #ifde‡
__USE_XOPEN2K


588 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

589 
__THROW
 
__©åibuã_mÆloc__
;

592 
__BEGIN_NAMESPACE_STD


594 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

598 
	`©exô
 ((*
__func
Ë()Ë
__THROW
;

599 
__END_NAMESPACE_STD


601 #ifdef 
__USE_MISC


604 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

605 
__THROW
;

608 
__BEGIN_NAMESPACE_STD


612 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

613 
__END_NAMESPACE_STD


615 #ifde‡
__USE_ISOC99


616 
__BEGIN_NAMESPACE_C99


619 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

620 
__END_NAMESPACE_C99


624 
__BEGIN_NAMESPACE_STD


626 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
;

627 
__END_NAMESPACE_STD


631 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
;

633 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


637 
	$puãnv
 (*
__°rög
Ë
__THROW
;

640 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


643 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

644 
__THROW
;

647 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

650 #ifdef 
__USE_MISC


654 
	$˛óªnv
 (Ë
__THROW
;

658 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
;

673 #i‚de‡
__USE_FILE_OFFSET64


674 
	`mk°emp
 (*
__ãm∂©e
);

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
);

679 
	#mk°emp
 
mk°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	`mk°emp64
 (*
__ãm∂©e
);

687 #ifde‡
__USE_BSD


693 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
;

697 
__BEGIN_NAMESPACE_STD


702 
	`sy°em
 (
__c⁄°
 *
__comm™d
);

703 
__END_NAMESPACE_STD


706 #ifdef 
__USE_GNU


710 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
Ë
__THROW
;

713 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


720 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

721 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
;

726 #i‚de‡
__COMPAR_FN_T


727 
	#__COMPAR_FN_T


	)

728 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

730 #ifdef 
__USE_GNU


731 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

735 
__BEGIN_NAMESPACE_STD


738 *
	`b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

739 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
);

743 
	`qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

744 
__com∑r_‚_t
 
__com∑r
);

748 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

749 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

750 
__END_NAMESPACE_STD


752 #ifde‡
__USE_ISOC99


753 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

754 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

758 
__BEGIN_NAMESPACE_STD


762 
div_t
 
	$div
 (
__numî
, 
__díom
)

763 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

764 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

765 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

766 
__END_NAMESPACE_STD


768 #ifde‡
__USE_ISOC99


769 
__BEGIN_NAMESPACE_C99


770 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

771 
__díom
)

772 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

773 
__END_NAMESPACE_C99


777 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


784 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

785 *
__ª°ri˘
 
__sign
Ë
__THROW
;

790 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

791 *
__ª°ri˘
 
__sign
Ë
__THROW
;

796 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
Ë
__THROW
;

799 #ifde‡
__USE_MISC


801 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

802 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
Ë
__THROW
;

803 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

804 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
Ë
__THROW
;

805 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
Ë
__THROW
;

810 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

811 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

812 
size_t
 
__Àn
Ë
__THROW
;

813 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

814 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

815 
size_t
 
__Àn
Ë
__THROW
;

817 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

818 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

819 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

820 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

821 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

822 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

827 
__BEGIN_NAMESPACE_STD


830 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

833 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

834 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

837 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

841 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

842 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

844 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

845 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

846 
__THROW
;

847 
__END_NAMESPACE_STD


850 #ifde‡
__USE_SVID


855 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
;

859 #ifde‡
__USE_XOPEN_EXTENDED


866 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

867 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

868 **
__ª°ri˘
 
__vÆuï
Ë
__THROW
;

872 #ifde‡
__USE_XOPEN


874 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
;

880 #ifde‡
__USE_XOPEN2K


882 
	`posix_›í±
 (
__oÊag
);

885 #ifde‡
__USE_XOPEN


890 
	$gø¡±
 (
__fd
Ë
__THROW
;

894 
	$u∆ock±
 (
__fd
Ë
__THROW
;

899 *
	$±¢ame
 (
__fd
Ë
__THROW
;

902 #ifde‡
__USE_GNU


906 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
Ë
__THROW
;

909 
	`gë±
 ();

912 #ifde‡
__USE_BSD


916 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
Ë
__THROW
;

920 #unde‡
__√ed_mÆloc_™d_ˇŒoc


922 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 
__BEGIN_NAMESPACE_STD


38 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

39 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
Ë
__THROW
;

42 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

43 
__THROW
;

44 
__END_NAMESPACE_STD


49 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


50 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

51 
__c
, 
size_t
 
__n
)

52 
__THROW
;

56 
__BEGIN_NAMESPACE_STD


58 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
;

61 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

62 
__THROW
 
__©åibuã_puª__
;

65 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
;

67 
__END_NAMESPACE_STD


69 #ifde‡
__USE_GNU


72 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

75 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
__©åibuã_puª__
;

80 
__BEGIN_NAMESPACE_STD


82 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

83 
__THROW
;

85 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

86 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
Ë
__THROW
;

89 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

90 
__THROW
;

92 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

93 
size_t
 
__n
Ë
__THROW
;

96 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

97 
__THROW
 
__©åibuã_puª__
;

99 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

100 
__THROW
 
__©åibuã_puª__
;

103 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

104 
__THROW
 
__©åibuã_puª__
;

106 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

107 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
Ë
__THROW
;

108 
__END_NAMESPACE_STD


110 #ifde‡
__USE_GNU


114 
	~<xloˇÀ.h
>

117 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

118 
__THROW
 
__©åibuã_puª__
;

120 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

121 
__loˇÀ_t
 
__l
Ë
__THROW
;

124 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


126 *
	$°rdup
 (
__c⁄°
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

132 #i‡
deföed
 
__USE_GNU


133 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

134 
__THROW
 
__©åibuã_mÆloc__
;

137 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


139 
	#°rdu∑
(
s
) \

140 (
__exãnsi⁄__
 \

142 
__c⁄°
 *
__ﬁd
 = (
s
); \

143 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

144 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

145 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

146 
	}
}))

	)

149 
	#°∫du∑
(
s
, 
n
) \

150 (
__exãnsi⁄__
 \

152 
__c⁄°
 *
__ﬁd
 = (
s
); \

153 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

154 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

155 
__√w
[
__Àn
] = '\0'; \

156 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

157 }))

	)

160 
__BEGIN_NAMESPACE_STD


162 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

164 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_GNU


170 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

173 
__BEGIN_NAMESPACE_STD


176 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

177 
__THROW
 
__©åibuã_puª__
;

180 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

181 
__THROW
 
__©åibuã_puª__
;

183 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

184 
__THROW
 
__©åibuã_puª__
;

186 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

187 
__THROW
 
__©åibuã_puª__
;

191 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

192 
__THROW
;

193 
__END_NAMESPACE_STD


197 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

198 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

199 **
__ª°ri˘
 
__ßve_±r
Ë
__THROW
;

200 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


201 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

202 **
__ª°ri˘
 
__ßve_±r
Ë
__THROW
;

205 #ifde‡
__USE_GNU


207 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

208 
__THROW
 
__©åibuã_puª__
;

211 #ifde‡
__USE_GNU


215 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

216 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

217 
__THROW
 
__©åibuã_puª__
;

221 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

222 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
Ë
__THROW
;

223 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

224 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
Ë
__THROW
;

228 
__BEGIN_NAMESPACE_STD


230 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

231 
__END_NAMESPACE_STD


233 #ifdef 
__USE_GNU


236 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

237 
__THROW
 
__©åibuã_puª__
;

241 
__BEGIN_NAMESPACE_STD


243 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

244 
__END_NAMESPACE_STD


245 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


248 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
Ë
__THROW
;

253 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

255 #ifde‡
__USE_BSD


257 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

260 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

263 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

264 
__THROW
 
__©åibuã_puª__
;

267 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

270 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

274 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

278 #ifdef 
__USE_GNU


279 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

280 #ifde‡
__GNUC__


281 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

282 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

287 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

288 
__THROW
 
__©åibuã_puª__
;

291 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

292 
__THROW
 
__©åibuã_puª__
;

295 #ifdef 
__USE_GNU


298 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

299 
__loˇÀ_t
 
__loc
Ë
__THROW
 
__©åibuã_puª__
;

301 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

302 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

303 
__THROW
 
__©åibuã_puª__
;

306 #ifdef 
__USE_BSD


309 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

310 
__c⁄°
 *
__ª°ri˘
 
__dñim
Ë
__THROW
;

313 #ifdef 
__USE_GNU


315 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

316 
__THROW
 
__©åibuã_puª__
;

319 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

322 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

323 
__THROW
;

324 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

325 
__THROW
;

329 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

330 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
Ë
__THROW
;

331 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

332 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
Ë
__THROW
;

335 *
	$°r‰y
 (*
__°rög
Ë
__THROW
;

338 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

340 #i‚de‡
ba£«me


345 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

350 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

351 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

352 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


372 
	~<bôs/°rög.h
>

375 
	~<bôs/°rög2.h
>

379 
__END_DECLS


	@/usr/include/strings.h

19 #i‚def 
_STRINGS_H


20 
	#_STRINGS_H
 1

	)

25 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


27 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
__BEGIN_DECLS


34 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
;

38 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

41 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

45 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

48 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

51 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

54 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

55 
__THROW
 
__©åibuã_puª__
;

58 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

59 
__THROW
 
__©åibuã_puª__
;

61 
__END_DECLS


	@/usr/include/sys/stat.h

23 #i‚def 
_SYS_STAT_H


24 
	#_SYS_STAT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_MISC


31 #ifde‡
__USE_XOPEN


32 
	#__√ed_time_t


	)

34 #ifde‡
__USE_MISC


35 
	#__√ed_time•ec


	)

37 
	~<time.h
>

40 #ifde‡
__USE_XOPEN


43 #i‚de‡
__dev_t_deföed


44 
__dev_t
 
	tdev_t
;

45 
	#__dev_t_deföed


	)

48 #i‚de‡
__gid_t_deföed


49 
__gid_t
 
	tgid_t
;

50 
	#__gid_t_deföed


	)

53 #i‚de‡
__öo_t_deföed


54 #i‚de‡
__USE_FILE_OFFSET64


55 
__öo_t
 
	töo_t
;

57 
__öo64_t
 
	töo_t
;

59 
	#__öo_t_deföed


	)

62 #i‚de‡
__mode_t_deföed


63 
__mode_t
 
	tmode_t
;

64 
	#__mode_t_deföed


	)

67 #i‚de‡
__∆ök_t_deföed


68 
__∆ök_t
 
	t∆ök_t
;

69 
	#__∆ök_t_deföed


	)

72 #i‚de‡
__off_t_deföed


73 #i‚de‡
__USE_FILE_OFFSET64


74 
__off_t
 
	toff_t
;

76 
__off64_t
 
	toff_t
;

78 
	#__off_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

87 #ifde‡
__USE_UNIX98


88 #i‚de‡
__blk˙t_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__blk˙t_t
 
	tblk˙t_t
;

92 
__blk˙t64_t
 
	tblk˙t_t
;

94 
	#__blk˙t_t_deföed


	)

97 #i‚de‡
__blksize_t_deföed


98 
__blksize_t
 
	tblksize_t
;

99 
	#__blksize_t_deföed


	)

103 
	g__BEGIN_DECLS


105 
	~<bôs/°©.h
>

107 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


108 
	#S_IFMT
 
__S_IFMT


	)

109 
	#S_IFDIR
 
__S_IFDIR


	)

110 
	#S_IFCHR
 
__S_IFCHR


	)

111 
	#S_IFBLK
 
__S_IFBLK


	)

112 
	#S_IFREG
 
__S_IFREG


	)

113 #ifde‡
__S_IFIFO


114 
	#S_IFIFO
 
__S_IFIFO


	)

116 #ifde‡
__S_IFLNK


117 
	#S_IFLNK
 
__S_IFLNK


	)

119 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K
) \

120 && 
deföed
 
	g__S_IFSOCK


121 
	#S_IFSOCK
 
__S_IFSOCK


	)

127 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

129 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

130 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

131 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

132 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

133 #ifde‡
__S_IFIFO


134 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

136 #ifde‡
__S_IFLNK


137 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

140 #ifdef 
__USE_BSD


141 #i‚de‡
__S_IFLNK


142 
	#S_ISLNK
(
mode
Ë0

	)

144 #ifde‡
__S_IFSOCK


145 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

153 #ifdef 
__USE_POSIX199309


154 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

155 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

156 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

162 
	#S_ISUID
 
__S_ISUID


	)

163 
	#S_ISGID
 
__S_ISGID


	)

165 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


167 
	#S_ISVTX
 
__S_ISVTX


	)

170 
	#S_IRUSR
 
__S_IREAD


	)

171 
	#S_IWUSR
 
__S_IWRITE


	)

172 
	#S_IXUSR
 
__S_IEXEC


	)

174 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

176 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


177 
	#S_IREAD
 
S_IRUSR


	)

178 
	#S_IWRITE
 
S_IWUSR


	)

179 
	#S_IEXEC
 
S_IXUSR


	)

182 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

183 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

184 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

186 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

188 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

189 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

190 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

192 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

195 #ifdef 
__USE_BSD


197 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

198 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

199 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

201 
	#S_BLKSIZE
 512

	)

205 #i‚de‡
__USE_FILE_OFFSET64


207 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

208 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
;

212 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
;

214 #ifde‡
__REDIRECT


215 
	`__REDIRECT
 (
°©
,

216 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

217 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
,

218 
°©64
);

219 
	`__REDIRECT
 (
f°©
, (
__fd
, 
°©
 *
__buf
Ë
__THROW
, 
f°©64
);

221 
	#°©
 
°©64


	)

222 
	#f°©
 
f°©64


	)

225 #ifde‡
__USE_LARGEFILE64


226 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

227 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
;

228 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
;

231 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


232 #i‚de‡
__USE_FILE_OFFSET64


235 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

236 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
;

238 #ifde‡
__REDIRECT


239 
	`__REDIRECT
 (
l°©
,

240 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

241 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
,

242 
l°©64
);

244 
	#l°©
 
l°©64


	)

247 #ifde‡
__USE_LARGEFILE64


248 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

249 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
;

255 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
__THROW
;

257 #ifde‡
__USE_BSD


261 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
__THROW
;

265 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


266 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

272 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

274 #ifdef 
__USE_GNU


277 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

281 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
Ë
__THROW
;

286 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


287 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

288 
__THROW
;

293 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
Ë
__THROW
;

310 #i‚de‡
_STAT_VER


311 
	#_STAT_VER
 0

	)

313 #i‚de‡
_MKNOD_VER


314 
	#_MKNOD_VER
 0

	)

318 #i‚de‡
__USE_FILE_OFFSET64


319 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
Ë
__THROW
;

320 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

321 
°©
 *
__°©_buf
Ë
__THROW
;

322 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

323 
°©
 *
__°©_buf
Ë
__THROW
;

325 #ifde‡
__REDIRECT


326 
	`__REDIRECT
 (
__fx°©
, (
__vî
, 
__fûdes
,

327 
°©
 *
__°©_buf
Ë
__THROW
,

328 
__fx°©64
);

329 
	`__REDIRECT
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

330 
°©
 *
__°©_buf
Ë
__THROW
, 
__x°©64
);

331 
	`__REDIRECT
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

332 
°©
 *
__°©_buf
Ë
__THROW
,

333 
__lx°©64
);

336 
	#__fx°©
 
__fx°©64


	)

337 
	#__x°©
 
__x°©64


	)

338 
	#__lx°©
 
__lx°©64


	)

342 #ifde‡
__USE_LARGEFILE64


343 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

344 
__THROW
;

345 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

346 
°©64
 *
__°©_buf
Ë
__THROW
;

347 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

348 
°©64
 *
__°©_buf
Ë
__THROW
;

350 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

351 
__dev_t
 *
__dev
Ë
__THROW
;

353 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

356 
__ölöe__
 
	$°©
 (
__c⁄°
 *
__∑th
,

357 
°©
 *
__°©buf
Ë
__THROW


359  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

360 
	}
}

362 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


363 
__ölöe__
 
	$l°©
 (
__c⁄°
 *
__∑th
,

364 
°©
 *
__°©buf
Ë
__THROW


366  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

367 
	}
}

370 
__ölöe__
 
	$f°©
 (
__fd
, 
°©
 *
__°©buf
Ë
__THROW


372  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

373 
	}
}

375 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


376 
__ölöe__
 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

377 
__dev_t
 
__dev
Ë
__THROW


379  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

380 
	}
}

383 #i‡
deföed
 
__USE_LARGEFILE64
 \

384 && (! 
deföed
 
__USE_FILE_OFFSET64
 \

385 || (
deföed
 
__REDIRECT
 && deföed 
__OPTIMIZE__
))

386 
__ölöe__
 
	$°©64
 (
__c⁄°
 *
__∑th
,

387 
°©64
 *
__°©buf
Ë
__THROW


389  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

390 
	}
}

392 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


393 
__ölöe__
 
	$l°©64
 (
__c⁄°
 *
__∑th
,

394 
°©64
 *
__°©buf
Ë
__THROW


396  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

397 
	}
}

400 
__ölöe__
 
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
Ë
__THROW


402  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

403 
	}
}

408 
__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__GLIBC_HAVE_LONG_LONG


167 
__exãnsi⁄__
 
	töt64_t
;

172 
	tu_öt8_t
;

173 
	tu_öt16_t
;

174 
	tu_öt32_t
;

175 #i‡
__GLIBC_HAVE_LONG_LONG


176 
__exãnsi⁄__
 
	tu_öt64_t
;

179 
	tªgi°î_t
;

184 
	#__ötN_t
(
N
, 
MODE
) \

185 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

186 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

187 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 #i‚de‡
	t__öt8_t_deföed


190 
	t__öt8_t_deföed


	)

191 
	t__ötN_t
 (8, 
	t__QI__
);

192 
__ötN_t
 (16, 
__HI__
);

193 
__ötN_t
 (32, 
__SI__
);

194 
__ötN_t
 (64, 
__DI__
);

197 
__u_ötN_t
 (8, 
__QI__
);

198 
__u_ötN_t
 (16, 
__HI__
);

199 
__u_ötN_t
 (32, 
__SI__
);

200 
__u_ötN_t
 (64, 
__DI__
);

202 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

208 
	#__BIT_TYPES_DEFINED__
 1

	)

211 #ifdef 
__USE_BSD


213 
	~<ídün.h
>

216 
	~<sys/£À˘.h
>

219 
	~<sys/sysma¸os.h
>

223 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


224 
__blksize_t
 
	tblksize_t
;

225 
	#__blksize_t_deföed


	)

229 #i‚de‡
__USE_FILE_OFFSET64


230 #i‚de‡
__blk˙t_t_deföed


231 
__blk˙t_t
 
	tblk˙t_t
;

232 
	#__blk˙t_t_deföed


	)

234 #i‚de‡
__fsblk˙t_t_deföed


235 
__fsblk˙t_t
 
	tfsblk˙t_t
;

236 
	#__fsblk˙t_t_deföed


	)

238 #i‚de‡
__fsfû˙t_t_deföed


239 
__fsfû˙t_t
 
	tfsfû˙t_t
;

240 
	#__fsfû˙t_t_deföed


	)

243 #i‚de‡
__blk˙t_t_deföed


244 
__blk˙t64_t
 
	tblk˙t_t
;

245 
	#__blk˙t_t_deföed


	)

247 #i‚de‡
__fsblk˙t_t_deföed


248 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

249 
	#__fsblk˙t_t_deföed


	)

251 #i‚de‡
__fsfû˙t_t_deföed


252 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

253 
	#__fsfû˙t_t_deföed


	)

257 #ifde‡
__USE_LARGEFILE64


258 
__blk˙t64_t
 
	tblk˙t64_t
;

259 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

260 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

265 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


266 
	~<bôs/±hªadty≥s.h
>

269 
	g__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


34 
	#_POSIX_VERSION
 200112L

	)

40 
	#_POSIX2_VERSION
 200112L

	)

44 
	#_POSIX2_C_BIND
 200112L

	)

48 
	#_POSIX2_C_DEV
 200112L

	)

52 
	#_POSIX2_SW_DEV
 200112L

	)

56 
	#_POSIX2_LOCALEDEF
 200112L

	)

59 #ifde‡
__USE_UNIX98


60 
	#_XOPEN_VERSION
 500

	)

62 
	#_XOPEN_VERSION
 4

	)

66 
	#_XOPEN_XCU_VERSION
 4

	)

69 
	#_XOPEN_XPG2
 1

	)

70 
	#_XOPEN_XPG3
 1

	)

71 
	#_XOPEN_XPG4
 1

	)

74 
	#_XOPEN_UNIX
 1

	)

77 
	#_XOPEN_CRYPT
 1

	)

81 
	#_XOPEN_ENH_I18N
 1

	)

84 
	#_XOPEN_LEGACY
 1

	)

171 
	~<bôs/posix_›t.h
>

174 #ifde‡
__USE_UNIX98


175 
	~<bôs/ívú⁄míts.h
>

179 
	#STDIN_FILENO
 0

	)

180 
	#STDOUT_FILENO
 1

	)

181 
	#STDERR_FILENO
 2

	)

186 
	~<bôs/ty≥s.h
>

188 #i‚def 
__ssize_t_deföed


189 
__ssize_t
 
	tssize_t
;

190 
	#__ssize_t_deföed


	)

193 
	#__√ed_size_t


	)

194 
	#__√ed_NULL


	)

195 
	~<°ddef.h
>

197 #ifde‡
__USE_XOPEN


200 #i‚de‡
__gid_t_deföed


201 
__gid_t
 
	tgid_t
;

202 
	#__gid_t_deföed


	)

205 #i‚de‡
__uid_t_deföed


206 
__uid_t
 
	tuid_t
;

207 
	#__uid_t_deföed


	)

210 #i‚de‡
__off_t_deföed


211 #i‚de‡
__USE_FILE_OFFSET64


212 
__off_t
 
	toff_t
;

214 
__off64_t
 
	toff_t
;

216 
	#__off_t_deföed


	)

218 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


219 
__off64_t
 
	toff64_t
;

220 
	#__off64_t_deföed


	)

223 #i‚de‡
__u£c⁄ds_t_deföed


224 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

225 
	#__u£c⁄ds_t_deföed


	)

228 #i‚de‡
__pid_t_deföed


229 
__pid_t
 
	tpid_t
;

230 
	#__pid_t_deföed


	)

234 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


235 #i‚de‡
__öçå_t_deföed


236 
__öçå_t
 
	töçå_t
;

237 
	#__öçå_t_deföed


	)

241 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


242 #i‚de‡
__sockÀn_t_deföed


243 
__sockÀn_t
 
	tsockÀn_t
;

244 
	#__sockÀn_t_deföed


	)

250 
	#R_OK
 4

	)

251 
	#W_OK
 2

	)

252 
	#X_OK
 1

	)

253 
	#F_OK
 0

	)

256 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
;

258 #ifde‡
__USE_GNU


261 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
;

266 #i‚def 
_STDIO_H


267 
	#SEEK_SET
 0

	)

268 
	#SEEK_CUR
 1

	)

269 
	#SEEK_END
 2

	)

272 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


274 
	#L_SET
 
SEEK_SET


	)

275 
	#L_INCR
 
SEEK_CUR


	)

276 
	#L_XTND
 
SEEK_END


	)

285 #i‚de‡
__USE_FILE_OFFSET64


286 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

288 #ifde‡
__REDIRECT


289 
__off64_t
 
	`__REDIRECT
 (
l£ek
,

290 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

291 
__THROW
,

292 
l£ek64
);

294 
	#l£ek
 
l£ek64


	)

297 #ifde‡
__USE_LARGEFILE64


298 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

305 
	`˛o£
 (
__fd
);

312 
ssize_t
 
	`ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
);

318 
ssize_t
 
	`wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
);

320 #ifde‡
__USE_UNIX98


321 #i‚de‡
__USE_FILE_OFFSET64


328 
ssize_t
 
	`¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

329 
__off_t
 
__off£t
);

336 
ssize_t
 
	`pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

337 
__off_t
 
__off£t
);

339 #ifde‡
__REDIRECT


340 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

341 
__off64_t
 
__off£t
),

342 
¥ód64
);

343 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

344 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

345 
pwrôe64
);

347 
	#¥ód
 
¥ód64


	)

348 
	#pwrôe
 
pwrôe64


	)

352 #ifde‡
__USE_LARGEFILE64


356 
ssize_t
 
	`¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

357 
__off64_t
 
__off£t
);

360 
ssize_t
 
	`pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

361 
__off64_t
 
__off£t
);

369 
	`pùe
 (
__pùedes
[2]Ë
__THROW
;

378 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

390 
	`¶ìp
 (
__£c⁄ds
);

392 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


397 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

398 
__THROW
;

405 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

414 
	`∑u£
 ();

418 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

419 
__THROW
;

421 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


423 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
;

428 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

429 
__THROW
;

434 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
;

436 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


438 
	$fchdú
 (
__fd
Ë
__THROW
;

448 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
;

450 #ifdef 
__USE_GNU


454 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

457 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 *
	$gëwd
 (*
__buf
Ë
__THROW
;

466 
	$dup
 (
__fd
Ë
__THROW
;

469 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

472 **
__ívú⁄
;

473 #ifde‡
__USE_GNU


474 **
ívú⁄
;

480 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

481 *
__c⁄°
 
__ívp
[]Ë
__THROW
;

483 #ifde‡
__USE_GNU


486 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

487 
__THROW
;

492 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[]Ë
__THROW
;

496 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...Ë
__THROW
;

500 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...Ë
__THROW
;

504 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[]Ë
__THROW
;

509 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...Ë
__THROW
;

512 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


514 
	$ni˚
 (
__öc
Ë
__THROW
;

519 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

525 
	~<bôs/c⁄‚ame.h
>

528 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
Ë
__THROW
;

531 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

534 
	$sysc⁄f
 (
__«me
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 #ifdef 
__USE_POSIX2


538 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

543 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

546 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

550 #i‚de‡
__FAVOR_BSD


551 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

553 #ifde‡
__REDIRECT


554 
__pid_t
 
	`__REDIRECT
 (
gëpgΩ
, (__pid_à
__pid
Ë
__THROW
, 
__gëpgid
);

556 
	#gëpgΩ
 
__gëpgid


	)

561 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

562 #ifde‡
__USE_XOPEN_EXTENDED


563 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

570 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

572 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


583 #i‚de‡
__FAVOR_BSD


587 
	$£çgΩ
 (Ë
__THROW
;

592 #ifde‡
__REDIRECT


593 
	`__REDIRECT
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
Ë
__THROW
,

594 
£çgid
);

596 
	#£çgΩ
 
£çgid


	)

605 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

607 #ifde‡
__USE_XOPEN_EXTENDED


609 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

613 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

616 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

619 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

622 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

627 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
;

629 #ifdef 
__USE_GNU


631 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

638 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

640 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


643 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

646 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


648 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

655 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

663 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


665 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

668 #ifde‡
__USE_GNU


671 
	`gëªsuid
 (
__uid_t
 *
__euid
, __uid_à*
__ruid
, __uid_à*
__suid
);

675 
	`gëªsgid
 (
__gid_t
 *
__egid
, __gid_à*
__rgid
, __gid_à*
__sgid
);

679 
	`£åesuid
 (
__uid_t
 
__euid
, __uid_à
__ruid
, __uid_à
__suid
);

683 
	`£åesgid
 (
__gid_t
 
__egid
, __gid_à
__rgid
, __gid_à
__sgid
);

690 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


697 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

703 *
	$ây«me
 (
__fd
Ë
__THROW
;

707 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
Ë
__THROW
;

711 
	$ißây
 (
__fd
Ë
__THROW
;

713 #i‡
deföed
 
__USE_BSD
 \

714 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

717 
	$ây¶Ÿ
 (Ë
__THROW
;

722 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
Ë
__THROW
;

724 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


726 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
Ë
__THROW
;

731 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

732 
size_t
 
__Àn
Ë
__THROW
;

736 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
;

739 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
;

743 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

746 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

753 *
	`gëlogö
 ();

754 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_UNIX98


761 
	`gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
);

764 #ifdef 
__USE_BSD


766 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
;

770 #ifdef 
__USE_POSIX2


774 
	#__√ed_gë›t


	)

775 
	~<gë›t.h
>

779 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


783 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
;

787 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

790 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
Ë
__THROW
;

794 
	$£tho°id
 (
__id
Ë
__THROW
;

800 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
;

801 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
Ë
__THROW
;

807 
	$vh™gup
 (Ë
__THROW
;

810 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
;

818 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

819 
size_t
 
__off£t
, 
__sˇÀ
Ë
__THROW
;

825 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

829 *
	$gëu£rshñl
 (Ë
__THROW
;

830 
	$ídu£rshñl
 (Ë
__THROW
;

831 
	$£tu£rshñl
 (Ë
__THROW
;

837 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
;

841 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

844 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
;

848 *
	`gë∑ss
 (
__c⁄°
 *
__¥om±
);

852 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


857 
	`fsync
 (
__fd
);

861 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


864 
	`gëho°id
 ();

867 
	$sync
 (Ë
__THROW
;

872 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

876 #i‚de‡
__USE_FILE_OFFSET64


877 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
Ë
__THROW
;

879 #ifde‡
__REDIRECT


880 
	`__REDIRECT
 (
åunˇã
,

881 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
Ë
__THROW
,

882 
åunˇã64
);

884 
	#åunˇã
 
åunˇã64


	)

887 #ifde‡
__USE_LARGEFILE64


888 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
Ë
__THROW
;

892 #i‚de‡
__USE_FILE_OFFSET64


893 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
;

895 #ifde‡
__REDIRECT


896 
	`__REDIRECT
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
,

897 
·runˇã64
);

899 
	#·runˇã
 
·runˇã64


	)

902 #ifde‡
__USE_LARGEFILE64


903 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
;

909 
	$gëdèbÀsize
 (Ë
__THROW
;

914 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


918 
	$brk
 (*
__addr
Ë
__THROW
;

924 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

928 #ifde‡
__USE_MISC


939 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

944 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


956 
	#F_ULOCK
 0

	)

957 
	#F_LOCK
 1

	)

958 
	#F_TLOCK
 2

	)

959 
	#F_TEST
 3

	)

961 #i‚de‡
__USE_FILE_OFFSET64


962 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

964 #ifde‡
__REDIRECT


965 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

966 
lockf64
);

968 
	#lockf
 
lockf64


	)

971 #ifde‡
__USE_LARGEFILE64


972 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

977 #ifde‡
__USE_GNU


982 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

983 (
__exãnsi⁄__
 \

984 ({ 
__ªsu…
; \

985 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

986 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

987 
__ªsu…
; 
	}
}))

	)

990 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


993 
	$fd©async
 (
__fûdes
Ë
__THROW
;

999 #ifdef 
__USE_XOPEN


1001 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
Ë
__THROW
;

1005 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
;

1012 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1013 
ssize_t
 
__n
Ë
__THROW
;

1019 #ifde‡
__USE_XOPEN


1021 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1024 
__END_DECLS


	@codebook/hcb.h

28 #i‚de‡
__HCB_H__


29 
	#__HCB_H__


	)

31 #ifde‡
__˝lu•lus


69 
	#ZERO_HCB
 0

	)

70 
	#FIRST_PAIR_HCB
 5

	)

71 
	#ESC_HCB
 11

	)

72 
	#QUAD_LEN
 4

	)

73 
	#PAIR_LEN
 2

	)

74 
	#NOISE_HCB
 13

	)

75 
	#INTENSITY_HCB2
 14

	)

76 
	#INTENSITY_HCB
 15

	)

81 
uöt8_t
 
off£t
;

82 
uöt8_t
 
exåa_bôs
;

83 } 
	thcb
;

88 
uöt8_t
 
bôs
;

89 
öt8_t
 
x
;

90 
öt8_t
 
y
;

91 } 
	thcb_2_∑ú
;

95 
uöt8_t
 
bôs
;

96 
öt8_t
 
x
;

97 
öt8_t
 
y
;

98 
öt8_t
 
v
;

99 
öt8_t
 
w
;

100 } 
	thcb_2_quad
;

105 
uöt8_t
 
is_Àaf
;

106 
öt8_t
 
d©a
[4];

107 } 
	thcb_bö_quad
;

111 
uöt8_t
 
is_Àaf
;

112 
öt8_t
 
d©a
[2];

113 } 
	thcb_bö_∑ú
;

115 
hcb
 *
hcb_èbÀ
[];

116 
hcb_2_quad
 *
hcb_2_quad_èbÀ
[];

117 
hcb_2_∑ú
 *
hcb_2_∑ú_èbÀ
[];

118 
hcb_bö_∑ú
 *
hcb_bö_èbÀ
[];

119 
uöt8_t
 
hcbN
[];

120 
uöt8_t
 
unsig√d_cb
[];

121 
hcb_2_quad_èbÀ_size
[];

122 
hcb_2_∑ú_èbÀ_size
[];

123 
hcb_bö_èbÀ_size
[];

125 
	~"codebook/hcb_1.h
"

126 
	~"codebook/hcb_2.h
"

127 
	~"codebook/hcb_3.h
"

128 
	~"codebook/hcb_4.h
"

129 
	~"codebook/hcb_5.h
"

130 
	~"codebook/hcb_6.h
"

131 
	~"codebook/hcb_7.h
"

132 
	~"codebook/hcb_8.h
"

133 
	~"codebook/hcb_9.h
"

134 
	~"codebook/hcb_10.h
"

135 
	~"codebook/hcb_11.h
"

136 
	~"codebook/hcb_sf.h
"

139 #ifde‡
__˝lu•lus


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/confname.h

20 #i‚de‡
_UNISTD_H


27 
	m_PC_LINK_MAX
,

28 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

29 
	m_PC_MAX_CANON
,

30 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

31 
	m_PC_MAX_INPUT
,

32 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

33 
	m_PC_NAME_MAX
,

34 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

35 
	m_PC_PATH_MAX
,

36 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

37 
	m_PC_PIPE_BUF
,

38 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

39 
	m_PC_CHOWN_RESTRICTED
,

40 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

41 
	m_PC_NO_TRUNC
,

42 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

43 
	m_PC_VDISABLE
,

44 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

45 
	m_PC_SYNC_IO
,

46 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

47 
	m_PC_ASYNC_IO
,

48 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

49 
	m_PC_PRIO_IO
,

50 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

51 
	m_PC_SOCK_MAXBUF
,

52 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

53 
	m_PC_FILESIZEBITS
,

54 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

55 
	m_PC_REC_INCR_XFER_SIZE
,

56 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

57 
	m_PC_REC_MAX_XFER_SIZE
,

58 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

59 
	m_PC_REC_MIN_XFER_SIZE
,

60 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

61 
	m_PC_REC_XFER_ALIGN
,

62 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

63 
	m_PC_ALLOC_SIZE_MIN
,

64 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

65 
	m_PC_SYMLINK_MAX
,

66 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

67 
	m_PC_2_SYMLINKS


68 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

74 
	m_SC_ARG_MAX
,

75 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

76 
	m_SC_CHILD_MAX
,

77 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

78 
	m_SC_CLK_TCK
,

79 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

80 
	m_SC_NGROUPS_MAX
,

81 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

82 
	m_SC_OPEN_MAX
,

83 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

84 
	m_SC_STREAM_MAX
,

85 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

86 
	m_SC_TZNAME_MAX
,

87 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

88 
	m_SC_JOB_CONTROL
,

89 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

90 
	m_SC_SAVED_IDS
,

91 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

92 
	m_SC_REALTIME_SIGNALS
,

93 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

94 
	m_SC_PRIORITY_SCHEDULING
,

95 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

96 
	m_SC_TIMERS
,

97 
	#_SC_TIMERS
 
_SC_TIMERS


	)

98 
	m_SC_ASYNCHRONOUS_IO
,

99 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

100 
	m_SC_PRIORITIZED_IO
,

101 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

102 
	m_SC_SYNCHRONIZED_IO
,

103 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

104 
	m_SC_FSYNC
,

105 
	#_SC_FSYNC
 
_SC_FSYNC


	)

106 
	m_SC_MAPPED_FILES
,

107 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

108 
	m_SC_MEMLOCK
,

109 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

110 
	m_SC_MEMLOCK_RANGE
,

111 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

112 
	m_SC_MEMORY_PROTECTION
,

113 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

114 
	m_SC_MESSAGE_PASSING
,

115 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

116 
	m_SC_SEMAPHORES
,

117 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

118 
	m_SC_SHARED_MEMORY_OBJECTS
,

119 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

120 
	m_SC_AIO_LISTIO_MAX
,

121 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

122 
	m_SC_AIO_MAX
,

123 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

124 
	m_SC_AIO_PRIO_DELTA_MAX
,

125 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

126 
	m_SC_DELAYTIMER_MAX
,

127 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

128 
	m_SC_MQ_OPEN_MAX
,

129 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

130 
	m_SC_MQ_PRIO_MAX
,

131 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

132 
	m_SC_VERSION
,

133 
	#_SC_VERSION
 
_SC_VERSION


	)

134 
	m_SC_PAGESIZE
,

135 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

136 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

137 
	m_SC_RTSIG_MAX
,

138 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

139 
	m_SC_SEM_NSEMS_MAX
,

140 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

141 
	m_SC_SEM_VALUE_MAX
,

142 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

143 
	m_SC_SIGQUEUE_MAX
,

144 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

145 
	m_SC_TIMER_MAX
,

146 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

150 
	m_SC_BC_BASE_MAX
,

151 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

152 
	m_SC_BC_DIM_MAX
,

153 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

154 
	m_SC_BC_SCALE_MAX
,

155 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

156 
	m_SC_BC_STRING_MAX
,

157 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

158 
	m_SC_COLL_WEIGHTS_MAX
,

159 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

160 
	m_SC_EQUIV_CLASS_MAX
,

161 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

162 
	m_SC_EXPR_NEST_MAX
,

163 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

164 
	m_SC_LINE_MAX
,

165 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

166 
	m_SC_RE_DUP_MAX
,

167 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

168 
	m_SC_CHARCLASS_NAME_MAX
,

169 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

171 
	m_SC_2_VERSION
,

172 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

173 
	m_SC_2_C_BIND
,

174 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

175 
	m_SC_2_C_DEV
,

176 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

177 
	m_SC_2_FORT_DEV
,

178 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

179 
	m_SC_2_FORT_RUN
,

180 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

181 
	m_SC_2_SW_DEV
,

182 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

183 
	m_SC_2_LOCALEDEF
,

184 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

186 
	m_SC_PII
,

187 
	#_SC_PII
 
_SC_PII


	)

188 
	m_SC_PII_XTI
,

189 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

190 
	m_SC_PII_SOCKET
,

191 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

192 
	m_SC_PII_INTERNET
,

193 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

194 
	m_SC_PII_OSI
,

195 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

196 
	m_SC_POLL
,

197 
	#_SC_POLL
 
_SC_POLL


	)

198 
	m_SC_SELECT
,

199 
	#_SC_SELECT
 
_SC_SELECT


	)

200 
	m_SC_UIO_MAXIOV
,

201 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

202 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

203 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

204 
	m_SC_PII_INTERNET_STREAM
,

205 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

206 
	m_SC_PII_INTERNET_DGRAM
,

207 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

208 
	m_SC_PII_OSI_COTS
,

209 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

210 
	m_SC_PII_OSI_CLTS
,

211 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

212 
	m_SC_PII_OSI_M
,

213 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

214 
	m_SC_T_IOV_MAX
,

215 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

218 
	m_SC_THREADS
,

219 
	#_SC_THREADS
 
_SC_THREADS


	)

220 
	m_SC_THREAD_SAFE_FUNCTIONS
,

221 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

222 
	m_SC_GETGR_R_SIZE_MAX
,

223 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

224 
	m_SC_GETPW_R_SIZE_MAX
,

225 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

226 
	m_SC_LOGIN_NAME_MAX
,

227 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

228 
	m_SC_TTY_NAME_MAX
,

229 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

230 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

231 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

232 
	m_SC_THREAD_KEYS_MAX
,

233 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

234 
	m_SC_THREAD_STACK_MIN
,

235 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

236 
	m_SC_THREAD_THREADS_MAX
,

237 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

238 
	m_SC_THREAD_ATTR_STACKADDR
,

239 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

240 
	m_SC_THREAD_ATTR_STACKSIZE
,

241 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

242 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

243 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

244 
	m_SC_THREAD_PRIO_INHERIT
,

245 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

246 
	m_SC_THREAD_PRIO_PROTECT
,

247 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

248 
	m_SC_THREAD_PROCESS_SHARED
,

249 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

251 
	m_SC_NPROCESSORS_CONF
,

252 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

253 
	m_SC_NPROCESSORS_ONLN
,

254 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

255 
	m_SC_PHYS_PAGES
,

256 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

257 
	m_SC_AVPHYS_PAGES
,

258 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

259 
	m_SC_ATEXIT_MAX
,

260 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

261 
	m_SC_PASS_MAX
,

262 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

264 
	m_SC_XOPEN_VERSION
,

265 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

266 
	m_SC_XOPEN_XCU_VERSION
,

267 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

268 
	m_SC_XOPEN_UNIX
,

269 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

270 
	m_SC_XOPEN_CRYPT
,

271 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

272 
	m_SC_XOPEN_ENH_I18N
,

273 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

274 
	m_SC_XOPEN_SHM
,

275 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

277 
	m_SC_2_CHAR_TERM
,

278 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

279 
	m_SC_2_C_VERSION
,

280 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

281 
	m_SC_2_UPE
,

282 
	#_SC_2_UPE
 
_SC_2_UPE


	)

284 
	m_SC_XOPEN_XPG2
,

285 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

286 
	m_SC_XOPEN_XPG3
,

287 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

288 
	m_SC_XOPEN_XPG4
,

289 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

291 
	m_SC_CHAR_BIT
,

292 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

293 
	m_SC_CHAR_MAX
,

294 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

295 
	m_SC_CHAR_MIN
,

296 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

297 
	m_SC_INT_MAX
,

298 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

299 
	m_SC_INT_MIN
,

300 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

301 
	m_SC_LONG_BIT
,

302 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

303 
	m_SC_WORD_BIT
,

304 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

305 
	m_SC_MB_LEN_MAX
,

306 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

307 
	m_SC_NZERO
,

308 
	#_SC_NZERO
 
_SC_NZERO


	)

309 
	m_SC_SSIZE_MAX
,

310 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

311 
	m_SC_SCHAR_MAX
,

312 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

313 
	m_SC_SCHAR_MIN
,

314 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

315 
	m_SC_SHRT_MAX
,

316 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

317 
	m_SC_SHRT_MIN
,

318 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

319 
	m_SC_UCHAR_MAX
,

320 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

321 
	m_SC_UINT_MAX
,

322 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

323 
	m_SC_ULONG_MAX
,

324 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

325 
	m_SC_USHRT_MAX
,

326 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

328 
	m_SC_NL_ARGMAX
,

329 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

330 
	m_SC_NL_LANGMAX
,

331 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

332 
	m_SC_NL_MSGMAX
,

333 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

334 
	m_SC_NL_NMAX
,

335 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

336 
	m_SC_NL_SETMAX
,

337 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

338 
	m_SC_NL_TEXTMAX
,

339 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

341 
	m_SC_XBS5_ILP32_OFF32
,

342 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

343 
	m_SC_XBS5_ILP32_OFFBIG
,

344 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

345 
	m_SC_XBS5_LP64_OFF64
,

346 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

347 
	m_SC_XBS5_LPBIG_OFFBIG
,

348 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

350 
	m_SC_XOPEN_LEGACY
,

351 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

352 
	m_SC_XOPEN_REALTIME
,

353 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

354 
	m_SC_XOPEN_REALTIME_THREADS
,

355 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

357 
	m_SC_ADVISORY_INFO
,

358 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

359 
	m_SC_BARRIERS
,

360 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

361 
	m_SC_BASE
,

362 
	#_SC_BASE
 
_SC_BASE


	)

363 
	m_SC_C_LANG_SUPPORT
,

364 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

365 
	m_SC_C_LANG_SUPPORT_R
,

366 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

367 
	m_SC_CLOCK_SELECTION
,

368 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

369 
	m_SC_CPUTIME
,

370 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

371 
	m_SC_THREAD_CPUTIME
,

372 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

373 
	m_SC_DEVICE_IO
,

374 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

375 
	m_SC_DEVICE_SPECIFIC
,

376 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

377 
	m_SC_DEVICE_SPECIFIC_R
,

378 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

379 
	m_SC_FD_MGMT
,

380 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

381 
	m_SC_FIFO
,

382 
	#_SC_FIFO
 
_SC_FIFO


	)

383 
	m_SC_PIPE
,

384 
	#_SC_PIPE
 
_SC_PIPE


	)

385 
	m_SC_FILE_ATTRIBUTES
,

386 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

387 
	m_SC_FILE_LOCKING
,

388 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

389 
	m_SC_FILE_SYSTEM
,

390 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

391 
	m_SC_MONOTONIC_CLOCK
,

392 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

393 
	m_SC_MULTI_PROCESS
,

394 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

395 
	m_SC_SINGLE_PROCESS
,

396 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

397 
	m_SC_NETWORKING
,

398 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

399 
	m_SC_READER_WRITER_LOCKS
,

400 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

401 
	m_SC_SPIN_LOCKS
,

402 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

403 
	m_SC_REGEXP
,

404 
	#_SC_REGEXP
 
_SC_REGEXP


	)

405 
	m_SC_REGEX_VERSION
,

406 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

407 
	m_SC_SHELL
,

408 
	#_SC_SHELL
 
_SC_SHELL


	)

409 
	m_SC_SIGNALS
,

410 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

411 
	m_SC_SPAWN
,

412 
	#_SC_SPAWN
 
_SC_SPAWN


	)

413 
	m_SC_SPORADIC_SERVER
,

414 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

415 
	m_SC_THREAD_SPORADIC_SERVER
,

416 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

417 
	m_SC_SYSTEM_DATABASE
,

418 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

419 
	m_SC_SYSTEM_DATABASE_R
,

420 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

421 
	m_SC_TIMEOUTS
,

422 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

423 
	m_SC_TYPED_MEMORY_OBJECTS
,

424 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

425 
	m_SC_USER_GROUPS
,

426 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

427 
	m_SC_USER_GROUPS_R
,

428 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

429 
	m_SC_2_PBS
,

430 
	#_SC_2_PBS
 
_SC_2_PBS


	)

431 
	m_SC_2_PBS_ACCOUNTING
,

432 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

433 
	m_SC_2_PBS_LOCATE
,

434 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

435 
	m_SC_2_PBS_MESSAGE
,

436 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

437 
	m_SC_2_PBS_TRACK
,

438 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

439 
	m_SC_SYMLOOP_MAX
,

440 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

441 
	m_SC_STREAMS
,

442 
	#_SC_STREAMS
 
_SC_STREAMS


	)

443 
	m_SC_2_PBS_CHECKPOINT
,

444 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

446 
	m_SC_V6_ILP32_OFF32
,

447 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

448 
	m_SC_V6_ILP32_OFFBIG
,

449 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

450 
	m_SC_V6_LP64_OFF64
,

451 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

452 
	m_SC_V6_LPBIG_OFFBIG
,

453 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

455 
	m_SC_HOST_NAME_MAX
,

456 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

457 
	m_SC_TRACE
,

458 
	#_SC_TRACE
 
_SC_TRACE


	)

459 
	m_SC_TRACE_EVENT_FILTER
,

460 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

461 
	m_SC_TRACE_INHERIT
,

462 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

463 
	m_SC_TRACE_LOG


464 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

470 
	m_CS_PATH
,

471 
	#_CS_PATH
 
_CS_PATH


	)

473 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

474 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

476 
	m_CS_GNU_LIBC_VERSION
,

477 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

478 
	m_CS_GNU_LIBPTHREAD_VERSION
,

479 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

481 
	m_CS_LFS_CFLAGS
 = 1000,

482 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

483 
	m_CS_LFS_LDFLAGS
,

484 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

485 
	m_CS_LFS_LIBS
,

486 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

487 
	m_CS_LFS_LINTFLAGS
,

488 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

489 
	m_CS_LFS64_CFLAGS
,

490 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

491 
	m_CS_LFS64_LDFLAGS
,

492 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

493 
	m_CS_LFS64_LIBS
,

494 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

495 
	m_CS_LFS64_LINTFLAGS
,

496 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

498 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

499 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

500 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

501 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

502 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

503 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

504 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

505 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

506 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

507 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

508 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

509 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

510 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

511 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

512 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

513 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

514 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

515 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

516 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

517 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

518 
	m_CS_XBS5_LP64_OFF64_LIBS
,

519 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

520 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

521 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

522 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

523 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

524 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

525 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

526 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

527 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

528 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

529 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

531 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

532 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

533 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

534 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

535 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

536 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

537 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

538 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

539 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

540 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

541 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

542 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

543 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

544 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

545 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

546 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

547 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

548 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

549 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

550 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

551 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

552 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

553 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

554 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

555 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

556 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

557 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

558 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

559 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

560 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

561 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


562 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

41 #i‡
__WORDSIZE
 == 64

44 
	#_POSIX_V6_ILP32_OFF32
 -1

	)

45 
	#_POSIX_V6_ILP32_OFFBIG
 -1

	)

46 
	#_XBS5_ILP32_OFF32
 -1

	)

47 
	#_XBS5_ILP32_OFFBIG
 -1

	)

50 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

51 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

54 
	#_POSIX_V6_LP64_OFF64
 1

	)

55 
	#_XBS5_LP64_OFF64
 1

	)

61 
	#_POSIX_V6_ILP32_OFF32
 1

	)

62 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

63 
	#_XBS5_ILP32_OFF32
 1

	)

64 
	#_XBS5_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_LP64_OFF64
 -1

	)

71 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

72 
	#_XBS5_LP64_OFF64
 -1

	)

73 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

	@/usr/include/bits/huge_val.h

21 #i‚de‡
_MATH_H


25 
	~<„©uªs.h
>

29 #i‡
__GNUC_PREREQ
(2,96)

30 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

34 
	#__huge_vÆ_t
 uni⁄ { 
__c
[8]; 
__d
; }

	)

35 #ifdef 
__GNUC__


36 
	#HUGE_VAL
 (
__exãnsi⁄__
 \

37 ((
__huge_vÆ_t
Ë{ 
__c
: 
__HUGE_VAL_byãs
 }).
__d
)

	)

39 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

40 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

47 #ifde‡
__USE_ISOC99


49 #i‡
__GNUC_PREREQ
(2,96)

51 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

52 
	#HUGE_VALL
 (
__exãnsi⁄__
 0x1.0
p32767L
)

	)

56 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

58 
	#__huge_vÆf_t
 uni⁄ { 
__c
[4]; 
__f
; }

	)

59 #ifdef 
__GNUC__


60 
	#HUGE_VALF
 (
__exãnsi⁄__
 \

61 ((
__huge_vÆf_t
Ë{ 
__c
: 
__HUGE_VALF_byãs
 }).
__f
)

	)

63 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

64 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

68 
	#__HUGE_VALL_byãs
 { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }

	)

70 
	#__huge_vÆl_t
 uni⁄ { 
__c
[12]; 
__ld
; }

	)

71 #ifde‡
__GNUC__


72 
	#HUGE_VALL
 (
__exãnsi⁄__
 \

73 ((
__huge_vÆl_t
Ë{ 
__c
: 
__HUGE_VALL_byãs
 }).
__ld
)

	)

75 
__huge_vÆl_t
 
	g__huge_vÆl
 = { 
__HUGE_VALL_byãs
 };

76 
	#HUGE_VALL
 (
__huge_vÆl
.
__ld
)

	)

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #ifde‡
__USE_ISOC99


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

342 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

356 
	g__END_NAMESPACE_C99


358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


360 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

29 
	tÊﬂt_t
;

31 
	tdoubÀ_t
;

35 
	#INFINITY
 
HUGE_VALF


	)

38 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

39 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

	@/usr/include/bits/mathinline.h

21 #i‚de‡
_MATH_H


25 #ifde‡
__˝lu•lus


26 
	#__MATH_INLINE
 
__ölöe


	)

28 
	#__MATH_INLINE
 
__ölöe


	)

32 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

33 #i‡
__GNUC_PREREQ
 (2,97)

35 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
 (x, y)

	)

36 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
 (x, y)

	)

37 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
 (x, y)

	)

38 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
 (x, y)

	)

39 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
 (x, y)

	)

40 
	#isun‹dîed
(
x
, 
y
Ë
	`__buûtö_isun‹dîed
 (x, y)

	)

46 #ifde‡
__i686__


49 
	#isgª©î
(
x
, 
y
) \

50 ({ 
__ªsu…
; \

51 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

52 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

53 
__ªsu…
; })

	)

54 
	#isgª©îequÆ
(
x
, 
y
) \

55 ({ 
__ªsu…
; \

56 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

57 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

58 
__ªsu…
; })

	)

60 
	#i¶ess
(
x
, 
y
) \

61 ({ 
__ªsu…
; \

62 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

63 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

64 
__ªsu…
; })

	)

66 
	#i¶es£quÆ
(
x
, 
y
) \

67 ({ 
__ªsu…
; \

68 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

69 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

70 
__ªsu…
; })

	)

72 
	#i¶essgª©î
(
x
, 
y
) \

73 ({ 
__ªsu…
; \

74 
	`__asm__
 ("fucomip %%st(1), %%st; setne %%al" \

75 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

76 
__ªsu…
; })

	)

78 
	#isun‹dîed
(
x
, 
y
) \

79 ({ 
__ªsu…
; \

80 
	`__asm__
 ("fucomip %%st(1), %%st; setp %%al" \

81 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

82 
__ªsu…
; })

	)

85 
	#isgª©î
(
x
, 
y
) \

86 ({ 
__ªsu…
; \

87 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

88 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

89 
__ªsu…
; })

	)

91 
	#isgª©îequÆ
(
x
, 
y
) \

92 ({ 
__ªsu…
; \

93 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

94 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

95 
__ªsu…
; })

	)

97 
	#i¶ess
(
x
, 
y
) \

98 ({ 
__ªsu…
; \

99 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

100 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

101 
__ªsu…
; })

	)

103 
	#i¶es£quÆ
(
x
, 
y
) \

104 ({ 
__ªsu…
; \

105 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

106 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

107 
__ªsu…
; })

	)

109 
	#i¶essgª©î
(
x
, 
y
) \

110 ({ 
__ªsu…
; \

111 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x44, %%ah; setz %%al" \

112 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

113 
__ªsu…
; })

	)

115 
	#isun‹dîed
(
x
, 
y
) \

116 ({ 
__ªsu…
; \

117 
	`__asm__
 ("fucompp; fnstsw; sahf; setp %%al" \

118 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

119 
__ªsu…
; })

	)

125 #i‡
__GNUC_PREREQ
 (2, 8)

127 
__MATH_INLINE
 

128 
	$__signbôf
 (
__x
Ë
__THROW


130 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

131  
__u
.
__i
 < 0;

132 
	}
}

133 
__MATH_INLINE
 

134 
	$__signbô
 (
__x
Ë
__THROW


136 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

137  
__u
.
__i
[1] < 0;

138 
	}
}

139 
__MATH_INLINE
 

140 
	$__signbôl
 (
__x
Ë
__THROW


142 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

143  (
__u
.
__i
[2] & 0x8000) != 0;

144 
	}
}

151 #i‡
__GNUC_PREREQ
 (2, 8)

153 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

154 && 
deföed
 
__OPTIMIZE__
)

163 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


164 
	#__ölöe_m©h›
(
func
, 
›
) \

165 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

166 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

167 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

168 
	#__ölöe_m©h›NP
(
func
, 
›
) \

169 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

170 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

171 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

173 
	#__ölöe_m©h›
(
func
, 
›
) \

174 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

175 
	#__ölöe_m©h›NP
(
func
, 
›
) \

176 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

179 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

180 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

181 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

182 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

185 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


186 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

187 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

188 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

189 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

190 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

191 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

192 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

193 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

195 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

196 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

197 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

198 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

201 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

202 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

203 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

205 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

206 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥ 
__x
Ë
__THROW
 \

208 
Êﬂt_ty≥
 
__ªsu…
; \

209 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

210  
__ªsu…
; \

211 }

	)

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


215 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

216 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

217 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

218 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

219 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

220 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

221 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

222 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

223 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

224 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

225 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

226 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

227 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

228 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

229 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

230 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

231 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

232 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

233 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

234 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

235 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

236 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

237 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

238 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

240 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

241 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

242 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

243 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

244 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

245 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

246 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

247 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

248 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

249 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

250 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

251 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

254 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

255 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

256 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

258 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

259 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥ 
¨g
Ë
__THROW
 \

261 
code
; \

262 }

	)

265 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

266 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

267 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

269 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

270 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
Ë
__THROW
 \

272 
code
; \

273 }

	)

275 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

276 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

277 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

279 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

280 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

281 
Êﬂt_ty≥
 
¨g3
Ë
__THROW
 \

283 
code
; \

284 }

	)

288 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


291 
__ölöe_m©hcode
 (
__sgn
, 
__x
, \

292  
__x
 == 0.0 ? 0.0 : (__x > 0.0 ? 1.0 : -1.0))

295 #ifde‡
__FAST_MATH__


296 
__ölöe_m©hcode
 (
__pow2
, 
__x
, \

297 
__vÆue
; \

298 
__exp⁄ít
; \

299 
__exãnsi⁄__
 
__p
 = (Ë
__x
; \

300 i‡(
__x
 =(Ë
__p
) \

302 
__asm
 
__vﬁ©ûe__
 \

304 : "Ò" (
__vÆue
Ë: "0" (1.0), "u" (
__x
)); \

305  
__vÆue
; \

307 
__asm
 
__vﬁ©ûe__
 \

313 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

314 
__vÆue
 += 1.0; \

315 
__asm
 
__vﬁ©ûe__
 \

317 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

318  
__vÆue
)

320 #ifde‡
__USE_GNU


321 
	#__söcos_code
 \

322 
__co§
; \

323 
__sör
; \

324 
__asm
 
__vﬁ©ûe__
 \

339 : "Ò" (
__co§
), "=u" (
__sör
Ë: "0" (
__x
)); \

340 *
__söx
 = 
__sör
; \

341 *
__cosx
 = 
__co§


	)

343 
__MATH_INLINE
 

344 
	$__söcos
 (
__x
, *
__söx
, *
__cosx
Ë
__THROW


346 
__söcos_code
;

347 
	}
}

349 
__MATH_INLINE
 

350 
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
Ë
__THROW


352 
__söcos_code
;

353 
	}
}

355 
__MATH_INLINE
 

356 
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
Ë
__THROW


358 
__söcos_code
;

359 
	}
}

366 
	#__expm1_code
 \

367 
__vÆue
; \

368 
__exp⁄ít
; \

369 
__ãmp
; \

370 
__asm
 
__vﬁ©ûe__
 \

379 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

380 
__asm
 
__vﬁ©ûe__
 \

382 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

383 
__ãmp
 -= 1.0; \

384  
__ãmp
 + 
__vÆue
 ?: 
__x


	)

385 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

388 
	#__exp_code
 \

389 
__vÆue
; \

390 
__exp⁄ít
; \

391 
__asm
 
__vﬁ©ûe__
 \

399 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

400 
__vÆue
 += 1.0; \

401 
__asm
 
__vﬁ©ûe__
 \

403 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

404  
__vÆue


	)

405 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

406 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

409 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

410 
__vÆue
; \

411 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

412 
__asm
 
__vﬁ©ûe__
 \

414 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

415  
__vÆue
)

419 
	#__©™2_code
 \

420 
__vÆue
; \

421 
__asm
 
__vﬁ©ûe__
 \

423 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

424  
__vÆue


	)

425 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

426 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

429 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

430 
__vÆue
; \

431 
__asm
 
__vﬁ©ûe__
 \

436 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

437  
__vÆue
)

440 #ifde‡
__FAST_MATH__


441 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

442 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

445 #i‡
	`__GNUC_PREREQ
 (2, 8)

446 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

447 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

448 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

449 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

451 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

452 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

455 #ifde‡
__FAST_MATH__


457 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

459 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

461 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

462 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

464 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__sqπl
 (1.0 - __x * __x)))

465 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__sqπl
 (1.0 - __x * __x), __x))

468 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

470 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

471 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

472 { 
__xld
: 
__x
 
	}
}; \

473 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

474 
	g__n
.
	g__xi
[1] = 0x80000000; \

475 
	g__n
.
	g__xi
[0] = 0; \

476  
	g__n
.
	g__xld
)

479 #ifde‡
__FAST_MATH__


481 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

482 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

483  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

485 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

486 
__ex
 = 
	`__ex∂
 (
__x
); \

487  0.5 * (
__ex
 + 1.0 / __ex))

489 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

490 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

491  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

494 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

495 
__vÆue
; \

496 
__vﬁ©ûe
 
__cw
; \

497 
__vﬁ©ûe
 
__cwtmp
; \

498 
__asm
 
	`__vﬁ©ûe
 ("‚°cw %0" : "=m" (
__cw
)); \

499 
__cwtmp
 = (
__cw
 & 0xf3ff) | 0x0400; \

500 
__asm
 
	`__vﬁ©ûe
 ("Êdcw %0" : : "m" (
__cwtmp
)); \

501 
__asm
 
	`__vﬁ©ûe
 ("‰ndöt" : "Ò" (
__vÆue
Ë: "0" (
__x
)); \

502 
__asm
 
	`__vﬁ©ûe
 ("Êdcw %0" : : "m" (
__cw
)); \

503  
__vÆue
)

505 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

506 
__vÆue
; \

507 
__vﬁ©ûe
 
__cw
; \

508 
__vﬁ©ûe
 
__cwtmp
; \

509 
__asm
 
	`__vﬁ©ûe
 ("‚°cw %0" : "=m" (
__cw
)); \

510 
__cwtmp
 = (
__cw
 & 0xf3ff) | 0x0800; \

511 
__asm
 
	`__vﬁ©ûe
 ("Êdcw %0" : : "m" (
__cwtmp
)); \

512 
__asm
 
	`__vﬁ©ûe
 ("‰ndöt" : "Ò" (
__vÆue
Ë: "0" (
__x
)); \

513 
__asm
 
	`__vﬁ©ûe
 ("Êdcw %0" : : "m" (
__cw
)); \

514  
__vÆue
)

516 #ifde‡
__FAST_MATH__


517 
	#__ldexp_code
 \

518 
__vÆue
; \

519 
__asm
 
__vﬁ©ûe__
 \

521 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

522  
__vÆue


	)

524 
__MATH_INLINE
 

525 
	$ldexp
 (
__x
, 
__y
Ë
__THROW


527 
__ldexp_code
;

528 
	}
}

533 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


535 #ifde‡
__FAST_MATH__


536 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

540 
	#__M_SQRT2
 1.41421356237309504880L

	)

542 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

543 
__vÆue
; \

544 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

545 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

547 
__asm
 
__vﬁ©ûe__
 \

551 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

552  
__vÆue
)

556 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

557 
__y
 = 
	`__Áb¶
 (
__x
); \

558  (
	`log1∂
 (
__y
 * __y / (
	`__sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

559 * 
	$__sgn1l
 (
__x
)))

561 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

562  
	`logl
 (
__x
 + 
	`__sqπl
 (__x - 1.0) * __sqrtl (__x + 1.0)))

564 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

565 
__y
 = 
	`__Áb¶
 (
__x
); \

566  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

569 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,  
	`__sqπl
 (__x * __x + __y * __y))

571 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

572 
__vÆue
; \

573 
__junk
; \

574 
__asm
 
__vﬁ©ûe__
 \

576 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

577  
__vÆue
)

582 #ifde‡
__USE_ISOC99


583 #ifde‡
__FAST_MATH__


584 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

586 
__MATH_INLINE
 

587 
	$ldexpf
 (
__x
, 
__y
Ë
__THROW


589 
__ldexp_code
;

590 
	}
}

592 
__MATH_INLINE
 

593 
	$ldex∂
 (
__x
, 
__y
Ë
__THROW


595 
__ldexp_code
;

596 
	}
}

598 
__ölöe_m©hcodeNP3
 (
fma
, 
__x
, 
__y
, 
__z
,  (__x * __y) + __z)

600 
__ölöe_m©h›NP
 (
röt
, "frndint")

603 
	#__Ãöt_code
 \

604 
__Ãöåes
; \

605 
__asm__
 
__vﬁ©ûe__
 \

607 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

608  
__Ãöåes


	)

609 
__MATH_INLINE
 

610 
	$Ãötf
 (
__x
Ë
__THROW


612 
__Ãöt_code
;

613 
	}
}

614 
__MATH_INLINE
 

615 
	$Ãöt
 (
__x
Ë
__THROW


617 
__Ãöt_code
;

618 
	}
}

619 
__MATH_INLINE
 

620 
	$Ãöé
 (
__x
Ë
__THROW


622 
__Ãöt_code
;

623 
	}
}

624 #unde‡
__Ãöt_code


626 
	#__Œröt_code
 \

627 
__Œröåes
; \

628 
__asm__
 
__vﬁ©ûe__
 \

630 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

631  
__Œröåes


	)

632 
__MATH_INLINE
 

633 
	$Œrötf
 (
__x
Ë
__THROW


635 
__Œröt_code
;

636 
	}
}

637 
__MATH_INLINE
 

638 
	$Œröt
 (
__x
Ë
__THROW


640 
__Œröt_code
;

641 
	}
}

642 
__MATH_INLINE
 

643 
	$Œröé
 (
__x
Ë
__THROW


645 
__Œröt_code
;

646 
	}
}

647 #unde‡
__Œröt_code


652 #ifde‡
__USE_MISC


654 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

655 
__vÆue
; \

656 
__˛obbîed
; \

657 
__asm
 
__vﬁ©ûe__
 \

662 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

663  
__vÆue
)

667 
__MATH_INLINE
 

668 
	$__föôe
 (
__x
Ë
__THROW


670  (
__exãnsi⁄__


671 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

673 
	}
}

676 #ifde‡
__FAST_MATH__


677 
__ölöe_m©hcode
 (
__coshm1
, 
__x
, \

678 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

679  0.5 * (
__exm1
 / (__exm1 + 1.0)) * __exm1)

681 
__ölöe_m©hcode
 (
__acosh1p
, 
__x
, \

682  
log1∂
 (
__x
 + 
__sqπl
 (__x) * __sqrtl (__x + 2.0)))

688 #unde‡
__©™2_code


689 #ifde‡
__FAST_MATH__


690 #unde‡
__expm1_code


691 #unde‡
__exp_code


692 #unde‡
__söcos_code


699 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


700 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

701 
__ölöe_m©hcode2
 (
__õì754_©™2
, 
__y
, 
__x
,

702 
__vÆue
;

703 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

704 : "Ò" (
__vÆue
)

705 : "0" (
__x
), "u" (
__y
) : "st(1)");

706  
__vÆue
;)

	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #ifdef 
__GNUC__


29 
	#NAN
 \

30 (
__exãnsi⁄__
 \

31 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

32 { 
__l
: 0x7fc00000UL }).
__d
)

	)

36 
	~<ídün.h
>

38 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


39 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

41 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


42 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

45 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
	g__«n_uni⁄
 = { 
__«n_byãs
 };

46 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_POSIX_OPT_H


21 
	#_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200112L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200112L

	)

36 
	#_POSIX_FSYNC
 200112L

	)

39 
	#_POSIX_MAPPED_FILES
 200112L

	)

42 
	#_POSIX_MEMLOCK
 200112L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200112L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200112L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 1

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200112L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200112L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200112L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200112L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200112L

	)

86 
	#_POSIX_SEMAPHORES
 200112L

	)

89 
	#_POSIX_REALTIME_SIGNALS
 200112L

	)

92 
	#_POSIX_ASYNCHRONOUS_IO
 200112L

	)

93 
	#_POSIX_ASYNC_IO
 1

	)

95 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

98 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

101 
	#_LFS_LARGEFILE
 1

	)

102 
	#_LFS64_LARGEFILE
 1

	)

103 
	#_LFS64_STDIO
 1

	)

106 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200112L

	)

109 
	#_POSIX_CPUTIME
 200112L

	)

112 
	#_POSIX_THREAD_CPUTIME
 200112L

	)

115 
	#_POSIX_REGEXP
 1

	)

118 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

121 
	#_POSIX_SHELL
 1

	)

124 
	#_POSIX_TIMEOUTS
 200112L

	)

127 
	#_POSIX_SPIN_LOCKS
 200112L

	)

130 
	#_POSIX_SPAWN
 200112L

	)

133 
	#_POSIX_TIMERS
 200112L

	)

136 
	#_POSIX_BARRIERS
 200112L

	)

139 #unde‡
_POSIX_MESSAGE_PASSING


142 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

	@/usr/include/bits/pthreadtypes.h

15 #i‡!
deföed
 
_BITS_TYPES_H
 && !deföed 
_PTHREAD_H


19 #i‚de‡
_BITS_PTHREADTYPES_H


20 
	#_BITS_PTHREADTYPES_H
 1

	)

22 
	#__√ed_sched∑øm


	)

23 
	~<bôs/sched.h
>

25 
	t__©omic_lock_t
;

28 
	s_±hªad_Á°lock


30 
	m__°©us
;

31 
__©omic_lock_t
 
	m__•ölock
;

35 #i‚de‡
_PTHREAD_DESCR_DEFINED


37 
_±hªad_des¸_°ru˘
 *
	t_±hªad_des¸
;

38 
	#_PTHREAD_DESCR_DEFINED


	)

43 
	s__±hªad_©å_s


45 
	m__dëach°©e
;

46 
	m__schedpﬁicy
;

47 
__sched_∑øm
 
	m__sched∑øm
;

48 
	m__öhîôsched
;

49 
	m__sc›e
;

50 
size_t
 
	m__gu¨dsize
;

51 
	m__°ackaddr_£t
;

52 *
	m__°ackaddr
;

53 
size_t
 
	m__°acksize
;

54 } 
	t±hªad_©å_t
;

59 #ifde‡
__GLIBC_HAVE_LONG_LONG


60 
__exãnsi⁄__
 
	t__±hªad_c⁄d_Æign_t
;

62 
	t__±hªad_c⁄d_Æign_t
;

67 
_±hªad_Á°lock
 
	m__c_lock
;

68 
_±hªad_des¸
 
	m__c_waôög
;

69 
	m__∑ddög
[48 -  (
_±hªad_Á°lock
)

70 -  (
_±hªad_des¸
Ë-  (
__±hªad_c⁄d_Æign_t
)];

71 
__±hªad_c⁄d_Æign_t
 
	m__Æign
;

72 } 
	t±hªad_c⁄d_t
;

78 
	m__dummy
;

79 } 
	t±hªad_c⁄d©å_t
;

82 
	t±hªad_key_t
;

90 
	m__m_ª£rved
;

91 
	m__m_cou¡
;

92 
_±hªad_des¸
 
	m__m_ow√r
;

93 
	m__m_köd
;

94 
_±hªad_Á°lock
 
	m__m_lock
;

95 } 
	t±hªad_muãx_t
;

101 
	m__muãxköd
;

102 } 
	t±hªad_muãx©å_t
;

106 
	t±hªad_⁄˚_t
;

109 #ifde‡
__USE_UNIX98


111 
	s_±hªad_rwlock_t


113 
_±hªad_Á°lock
 
	m__rw_lock
;

114 
	m__rw_ªadîs
;

115 
_±hªad_des¸
 
	m__rw_wrôî
;

116 
_±hªad_des¸
 
	m__rw_ªad_waôög
;

117 
_±hªad_des¸
 
	m__rw_wrôe_waôög
;

118 
	m__rw_köd
;

119 
	m__rw_psh¨ed
;

120 } 
	t±hªad_rwlock_t
;

126 
	m__lockköd
;

127 
	m__psh¨ed
;

128 } 
	t±hªad_rwlock©å_t
;

131 #ifde‡
__USE_XOPEN2K


133 vﬁ©ûê
	t±hªad_•ölock_t
;

137 
_±hªad_Á°lock
 
	m__ba_lock
;

138 
	m__ba_ªquúed
;

139 
	m__ba_¥e£¡
;

140 
_±hªad_des¸
 
	m__ba_waôög
;

141 } 
	t±hªad_b¨rõr_t
;

145 
	m__psh¨ed
;

146 } 
	t±hªad_b¨rõøâr_t
;

152 
	t±hªad_t
;

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_LINUX_OLD
 1

	)

25 
	#_STAT_VER_KERNEL
 1

	)

26 
	#_STAT_VER_SVR4
 2

	)

27 
	#_STAT_VER_LINUX
 3

	)

28 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

36 
	s°©


38 
__dev_t
 
	m°_dev
;

39 
	m__∑d1
;

40 #i‚de‡
__USE_FILE_OFFSET64


41 
__öo_t
 
	m°_öo
;

43 
__öo_t
 
	m__°_öo
;

45 
__mode_t
 
	m°_mode
;

46 
__∆ök_t
 
	m°_∆ök
;

47 
__uid_t
 
	m°_uid
;

48 
__gid_t
 
	m°_gid
;

49 
__dev_t
 
	m°_rdev
;

50 
	m__∑d2
;

51 #i‚de‡
__USE_FILE_OFFSET64


52 
__off_t
 
	m°_size
;

54 
__off64_t
 
	m°_size
;

56 
__blksize_t
 
	m°_blksize
;

58 #i‚de‡
__USE_FILE_OFFSET64


59 
__blk˙t_t
 
	m°_blocks
;

61 
__blk˙t64_t
 
	m°_blocks
;

63 #ifde‡
__USE_MISC


70 
time•ec
 
	m°_©im
;

71 
time•ec
 
	m°_mtim
;

72 
time•ec
 
	m°_˘im
;

73 
	#°_©ime
 
°_©im
.
tv_£c


	)

74 
	#°_mtime
 
°_mtim
.
tv_£c


	)

75 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

77 
__time_t
 
	m°_©ime
;

78 
	m°_©imí£c
;

79 
__time_t
 
	m°_mtime
;

80 
	m°_mtimí£c
;

81 
__time_t
 
	m°_˘ime
;

82 
	m°_˘imí£c
;

84 #i‚de‡
__USE_FILE_OFFSET64


85 
	m__unu£d4
;

86 
	m__unu£d5
;

88 
__öo64_t
 
	m°_öo
;

92 #ifde‡
__USE_LARGEFILE64


93 
	s°©64


95 
__dev_t
 
	m°_dev
;

96 
	m__∑d1
;

98 
__öo_t
 
	m__°_öo
;

99 
__mode_t
 
	m°_mode
;

100 
__∆ök_t
 
	m°_∆ök
;

101 
__uid_t
 
	m°_uid
;

102 
__gid_t
 
	m°_gid
;

103 
__dev_t
 
	m°_rdev
;

104 
	m__∑d2
;

105 
__off64_t
 
	m°_size
;

106 
__blksize_t
 
	m°_blksize
;

108 
__blk˙t64_t
 
	m°_blocks
;

109 #ifde‡
__USE_MISC


116 
time•ec
 
	m°_©im
;

117 
time•ec
 
	m°_mtim
;

118 
time•ec
 
	m°_˘im
;

120 
__time_t
 
	m°_©ime
;

121 
	m°_©imí£c
;

122 
__time_t
 
	m°_mtime
;

123 
	m°_mtimí£c
;

124 
__time_t
 
	m°_˘ime
;

125 
	m°_˘imí£c
;

127 
__öo64_t
 
	m°_öo
;

132 
	#_STATBUF_ST_BLKSIZE


	)

133 
	#_STATBUF_ST_RDEV


	)

135 
	#_STATBUF_ST_NSEC


	)

139 
	#__S_IFMT
 0170000

	)

142 
	#__S_IFDIR
 0040000

	)

143 
	#__S_IFCHR
 0020000

	)

144 
	#__S_IFBLK
 0060000

	)

145 
	#__S_IFREG
 0100000

	)

146 
	#__S_IFIFO
 0010000

	)

147 
	#__S_IFLNK
 0120000

	)

148 
	#__S_IFSOCK
 0140000

	)

152 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

153 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

154 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

158 
	#__S_ISUID
 04000

	)

159 
	#__S_ISGID
 02000

	)

160 
	#__S_ISVTX
 01000

	)

161 
	#__S_IREAD
 0400

	)

162 
	#__S_IWRITE
 0200

	)

163 
	#__S_IEXEC
 0100

	)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #ifde‡
__˝lu•lus


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


33 
__STDIO_INLINE
 

34 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

36  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

37 
	}
}

40 
__STDIO_INLINE
 

41 
	$gëch¨
 ()

43  
	`_IO_gëc
 (
°dö
);

44 
	}
}

47 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


49 
__STDIO_INLINE
 

50 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

52  
	`_IO_gëc_u∆ocked
 (
__Â
);

53 
	}
}

56 
__STDIO_INLINE
 

57 
	$gëch¨_u∆ocked
 ()

59  
	`_IO_gëc_u∆ocked
 (
°dö
);

60 
	}
}

65 
__STDIO_INLINE
 

66 
	$putch¨
 (
__c
)

68  
	`_IO_putc
 (
__c
, 
°dout
);

69 
	}
}

72 #ifde‡
__USE_MISC


74 
__STDIO_INLINE
 

75 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

77  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

78 
	}
}

82 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


84 
__STDIO_INLINE
 

85 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

87  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

88 
	}
}

91 
__STDIO_INLINE
 

92 
	$putch¨_u∆ocked
 (
__c
)

94  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

95 
	}
}

99 #ifdef 
__USE_GNU


101 
__STDIO_INLINE
 
_IO_ssize_t


102 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

104  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

105 
	}
}

109 #ifde‡
__USE_MISC


111 
__STDIO_INLINE
 

112 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW


114  
	`_IO_„of_u∆ocked
 (
__°ªam
);

115 
	}
}

118 
__STDIO_INLINE
 

119 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW


121  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

122 
	}
}

128 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__


130 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

131 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

132 && (
size_t
Ë((
size
Ë* (
n
)) <= 8 && (size) != 0) \

133 ? ({ *
__±r
 = (*Ë(
±r
); \

134 
FILE
 *
__°ªam
 = (
°ªam
); \

135 
size_t
 
__˙t
; \

136 
__˙t
 = (
size
Ë* (
n
); __cnt > 0; --__cnt) \

138 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

139 i‡(
__c
 =
EOF
) \

141 *
__±r
++ = 
__c
; \

143 ((
size_t
Ë((
size
Ë* (
n
)Ë- 
__˙t
) / (size); }) \

144 : (((
	`__buûtö_c⁄°™t_p
 (
size
) && (size) == 0) \

145 || (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) == 0)) \

147 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

148 (Ë(
n
), 0) \

149 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

151 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

152 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

153 && (
size_t
Ë((
size
Ë* (
n
)) <= 8 && (size) != 0) \

154 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

155 
FILE
 *
__°ªam
 = (
°ªam
); \

156 
size_t
 
__˙t
; \

157 
__˙t
 = (
size
Ë* (
n
); __cnt > 0; --__cnt) \

158 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

160 ((
size_t
Ë((
size
Ë* (
n
)Ë- 
__˙t
) / (size); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
) && (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), 
n
) \

165 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


25 
	#_STRING_ARCH_u«lig√d
 1

	)

30 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

31 && 
deföed
 
	g__GNUC__
 && __GNUC__ >2 && !
__BOUNDED_POINTERS__


33 #i‚de‡
__STRING_INLINE


34 #ifde‡
__˝lu•lus


35 
	#__STRING_INLINE
 
ölöe


	)

37 
	#__STRING_INLINE
 
__ölöe


	)

43 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

44 
	#mem˝y
(
de°
, 
§c
, 
n
) \

45 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

46 ? 
	`__mem˝y_c
 (
de°
, 
§c
, 
n
) \

47 : 
	`mem˝y
 (
de°
, 
§c
, 
n
)))

	)

50 
__STRING_INLINE
 *
__mem˝y_c
 (*
__de°
, 
__c⁄°
 *
__§c
,

51 
size_t
 
__n
);

53 
__STRING_INLINE
 *

54 
	$__mem˝y_c
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

56 
__d0
, 
__d1
, 
__d2
;

58 
__ui
;

59 
__usi
;

60 
__uc
;

61 } *
__u
 = 
__de°
;

62 
__n
)

65  
__de°
;

67 
__u
->
__uc
 = *(c⁄° *Ë
__§c
;

68  
__de°
;

70 
__u
->
__usi
 = *(c⁄° *Ë
__§c
;

71  
__de°
;

73 
__u
->
__usi
 = *(c⁄° *Ë
__§c
;

74 
__u
 = (*) __u + 2;

75 
__u
->
__uc
 = *(2 + (c⁄° *Ë
__§c
);

76  
__de°
;

78 
__u
->
__ui
 = *(c⁄° *Ë
__§c
;

79  
__de°
;

81 
__u
->
__ui
 = *(c⁄° *Ë
__§c
;

82 
__u
 = (*) __u + 4;

83 
__u
->
__usi
 = *(2 + (c⁄° *Ë
__§c
);

84  
__de°
;

86 
__u
->
__ui
 = *(c⁄° *Ë
__§c
;

87 
__u
 = (*) __u + 4;

88 
__u
->
__ui
 = *(1 + (c⁄° *Ë
__§c
);

89  
__de°
;

91 
__u
->
__ui
 = *(c⁄° *Ë
__§c
;

92 
__u
 = (*) __u + 4;

93 
__u
->
__ui
 = *(1 + (c⁄° *Ë
__§c
);

94 
__u
 = (*) __u + 4;

95 
__u
->
__ui
 = *(2 + (c⁄° *Ë
__§c
);

96  
__de°
;

98 
__u
->
__ui
 = *(c⁄° *Ë
__§c
;

99 
__u
 = (*) __u + 4;

100 
__u
->
__ui
 = *(1 + (c⁄° *Ë
__§c
);

101 
__u
 = (*) __u + 4;

102 
__u
->
__ui
 = *(2 + (c⁄° *Ë
__§c
);

103 
__u
 = (*) __u + 4;

104 
__u
->
__ui
 = *(3 + (c⁄° *Ë
__§c
);

105  
__de°
;

107 
__u
->
__ui
 = *(c⁄° *Ë
__§c
;

108 
__u
 = (*) __u + 4;

109 
__u
->
__ui
 = *(1 + (c⁄° *Ë
__§c
);

110 
__u
 = (*) __u + 4;

111 
__u
->
__ui
 = *(2 + (c⁄° *Ë
__§c
);

112 
__u
 = (*) __u + 4;

113 
__u
->
__ui
 = *(3 + (c⁄° *Ë
__§c
);

114 
__u
 = (*) __u + 4;

115 
__u
->
__ui
 = *(4 + (c⁄° *Ë
__§c
);

116  
__de°
;

118 
	#__COMMON_CODE
(
x
) \

119 
__asm__
 
__vﬁ©ûe__
 \

122 
x
 \

123 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
) \

124 : "0" (
__n
 / 4), "1" (&
__u
->
__uc
), "2" (
__§c
) \

125 : "mem‹y");

	)

127 
__n
 % 4)

130 
	`__COMMON_CODE
 ("");

133 
	`__COMMON_CODE
 ("\n\tmovsb");

136 
	`__COMMON_CODE
 ("\n\tmovsw");

139 
	`__COMMON_CODE
 ("\n\tmovsw\n\tmovsb");

142  
__de°
;

143 #unde‡
__COMMON_CODE


144 
	}
}

149 
	#_HAVE_STRING_ARCH_memmove
 1

	)

150 #i‚de‡
_FORCE_INLINES


151 
__STRING_INLINE
 *

152 
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

154 
__d0
, 
__d1
, 
__d2
;

155 i‡(
__de°
 < 
__§c
)

156 
__asm__
 
__vﬁ©ûe__


160 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

161 : "0" (
__n
), "1" (
__§c
), "2" (
__de°
)

164 
__asm__
 
__vﬁ©ûe__


169 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

170 : "0" (
__n
), "1" (__¿- 1 + (c⁄° *Ë
__§c
),

171 "2" (
__n
 - 1 + (*Ë
__de°
)

173  
__de°
;

174 
	}
}

178 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

179 
	#_USE_STRING_ARCH_mem£t
 1

	)

180 
	#mem£t
(
s
, 
c
, 
n
) \

181 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

182 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

183 ? 
	`__mem£t_cc
 (
s
, 0x01010101UL * (Ë(
c
), 
n
) \

184 : 
	`__mem£t_cg
 (
s
, 0x01010101UL * (Ë(
c
), 
n
))\

185 : 
	`__mem£t_gg
 (
s
, 
c
, 
n
)))

	)

187 
__STRING_INLINE
 *
__mem£t_cc
 (*
__s
, 
__∑âîn
,

188 
size_t
 
__n
);

190 
__STRING_INLINE
 *

191 
	$__mem£t_cc
 (*
__s
, 
__∑âîn
, 
size_t
 
__n
)

193 
__d0
, 
__d1
;

195 
__ui
;

196 
__usi
;

197 
__uc
;

198 } *
__u
 = 
__s
;

199 
__n
)

202  
__s
;

204 
__u
->
__uc
 = 
__∑âîn
;

205  
__s
;

207 
__u
->
__usi
 = 
__∑âîn
;

208  
__s
;

210 
__u
->
__usi
 = 
__∑âîn
;

211 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

212 
__u
->
__uc
 = 
__∑âîn
;

213  
__s
;

215 
__u
->
__ui
 = 
__∑âîn
;

216  
__s
;

218 
	#__COMMON_CODE
(
x
) \

219 
__asm__
 
__vﬁ©ûe__
 \

222 
x
 \

223 : "=&c" (
__d0
), "=&D" (
__d1
) \

224 : "a" (
__∑âîn
), "0" (
__n
 / 4), "1" (&
__u
->
__uc
) \

225 : "mem‹y")

	)

227 
__n
 % 4)

230 
	`__COMMON_CODE
 ("");

233 
	`__COMMON_CODE
 ("\n\tstosb");

236 
	`__COMMON_CODE
 ("\n\tstosw");

239 
	`__COMMON_CODE
 ("\n\tstosw\n\tstosb");

242  
__s
;

243 #unde‡
__COMMON_CODE


244 
	}
}

246 
__STRING_INLINE
 *
__mem£t_cg
 (*
__s
, 
__c
, 
size_t
 
__n
);

248 
__STRING_INLINE
 *

249 
	$__mem£t_cg
 (*
__s
, 
__c
, 
size_t
 
__n
)

251 
__d0
, 
__d1
;

252 
__asm__
 
__vﬁ©ûe__


263 : "=&c" (
__d0
), "=&D" (
__d1
)

264 : "a" (
__c
), "q" (
__n
), "0" (__¿/ 4), "1" (
__s
)

266  
__s
;

267 
	}
}

269 
__STRING_INLINE
 *
__mem£t_gg
 (*
__s
, 
__c
, 
size_t
 
__n
);

271 
__STRING_INLINE
 *

272 
	$__mem£t_gg
 (*
__s
, 
__c
, 
size_t
 
__n
)

274 
__d0
, 
__d1
;

275 
__asm__
 
__vﬁ©ûe__


278 : "=&D" (
__d0
), "=&c" (
__d1
)

279 : "a" (
__c
), "0" (
__s
), "1" (
__n
)

281  
__s
;

282 
	}
}

288 
	#_HAVE_STRING_ARCH_memchr
 1

	)

289 #i‚de‡
_FORCE_INLINES


290 
__STRING_INLINE
 *

291 
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

293 
__d0
;

294 *
__ªs
;

295 i‡(
__n
 == 0)

296  
NULL
;

297 
__asm__
 
__vﬁ©ûe__


303 : "=D" (
__ªs
), "=&c" (
__d0
)

304 : "a" (
__c
), "0" (
__s
), "1" (
__n
)

306  
__ªs
 - 1;

307 
	}
}

310 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

311 #i‚de‡
_FORCE_INLINES


312 
__STRING_INLINE
 *

313 
	$__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

315 
__d0
;

316 *
__ªs
;

317 i‡(
__n
 == 0)

318  
NULL
;

319 
__asm__
 
__vﬁ©ûe__


326 : "=D" (
__ªs
), "=&c" (
__d0
)

327 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n)

329  
__ªs
;

330 
	}
}

331 #ifde‡
__USE_GNU


332 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 (s, c,Ç)

	)

337 
	#_HAVE_STRING_ARCH_°æí
 1

	)

338 #i‚de‡
_FORCE_INLINES


339 
__STRING_INLINE
 
size_t


340 
	$°æí
 (
__c⁄°
 *
__°r
)

342 
__d0
;

343 
size_t
 
__ªs
;

344 
__asm__
 
__vﬁ©ûe__


348 : "=c" (
__ªs
), "=&D" (
__d0
)

349 : "1" (
__°r
), "a" (0), "0" (0xffffffff)

351  
__ªs
 - 1;

352 
	}
}

356 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

357 #i‚de‡
_FORCE_INLINES


358 
__STRING_INLINE
 *

359 
	$°r˝y
 (*
__de°
, 
__c⁄°
 *
__§c
)

361 
__d0
, 
__d1
;

362 
__asm__
 
__vﬁ©ûe__


369 : "=&S" (
__d0
), "=&D" (
__d1
)

370 : "0" (
__§c
), "1" (
__de°
)

372  
__de°
;

373 
	}
}

377 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

378 #i‚de‡
_FORCE_INLINES


379 
__STRING_INLINE
 *

380 
	$°∫˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

382 
__d0
, 
__d1
, 
__d2
;

383 
__asm__
 
__vﬁ©ûe__


394 : "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

395 : "0" (
__§c
), "1" (
__de°
), "2" (
__n
)

397  
__de°
;

398 
	}
}

402 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

403 #i‚de‡
_FORCE_INLINES


404 
__STRING_INLINE
 *

405 
	$°rˇt
 (*
__de°
, 
__c⁄°
 *
__§c
)

407 
__d0
, 
__d1
, 
__d2
, 
__d3
;

408 
__asm__
 
__vﬁ©ûe__


417 : "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
), "=&a" (
__d3
)

418 : "0" (
__§c
), "1" (
__de°
), "2" (0xffffffff), "3" (0)

420  
__de°
;

421 
	}
}

425 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

426 #i‚de‡
_FORCE_INLINES


427 
__STRING_INLINE
 *

428 
	$°∫ˇt
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

430 
__d0
, 
__d1
, 
__d2
, 
__d3
;

431 
__asm__
 
__vﬁ©ûe__


448 : "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
), "=&a" (
__d3
)

449 : "g" (
__n
), "0" (
__§c
), "1" (
__de°
), "2" (0xffffffff), "3" (0)

451  
__de°
;

452 
	}
}

456 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

457 #i‚de‡
_FORCE_INLINES


458 
__STRING_INLINE
 

459 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

461 
__d0
, 
__d1
;

462 
__ªs
;

463 
__asm__
 
__vﬁ©ûe__


477 : "˜" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
)

478 : "1" (
__s1
), "2" (
__s2
)

480  
__ªs
;

481 
	}
}

485 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

486 #i‚de‡
_FORCE_INLINES


487 
__STRING_INLINE
 

488 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

490 
__d0
, 
__d1
, 
__d2
;

491 
__ªs
;

492 
__asm__
 
__vﬁ©ûe__


509 : "˜" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

510 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
)

512  
__ªs
;

513 
	}
}

517 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

518 
	#_USE_STRING_ARCH_°rchr
 1

	)

519 
	#°rchr
(
s
, 
c
) \

520 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

521 ? 
	`__°rchr_c
 (
s
, ((
c
) & 0xff) << 8) \

522 : 
	`__°rchr_g
 (
s
, 
c
)))

	)

524 
__STRING_INLINE
 *
__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
);

526 
__STRING_INLINE
 *

527 
	$__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
)

529 
__d0
;

530 *
__ªs
;

531 
__asm__
 
__vﬁ©ûe__


543 : "˜" (
__ªs
), "=&S" (
__d0
)

544 : "0" (
__c
), "1" (
__s
)

546  
__ªs
 - 1;

547 
	}
}

549 
__STRING_INLINE
 *
__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
);

551 
__STRING_INLINE
 *

552 
	$__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
)

554 
__d0
;

555 *
__ªs
;

556 
__asm__
 
__vﬁ©ûe__


567 : "˜" (
__ªs
), "=&S" (
__d0
)

568 : "0" (
__c
), "1" (
__s
)

570  
__ªs
 - 1;

571 
	}
}

575 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

576 
	#__°rch∫ul
(
s
, 
c
) \

577 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

578 ? ((
c
) == '\0' \

579 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

580 : 
	`__°rch∫ul_c
 (
s
, ((
c
) & 0xff) << 8)) \

581 : 
	`__°rch∫ul_g
 (
s
, 
c
)))

	)

583 
__STRING_INLINE
 *
__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
);

585 
__STRING_INLINE
 *

586 
	$__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
)

588 
__d0
;

589 *
__ªs
;

590 
__asm__
 
__vﬁ©ûe__


601 : "˜" (
__ªs
), "=&S" (
__d0
)

602 : "0" (
__c
), "1" (
__s
)

604  
__ªs
 - 1;

605 
	}
}

607 
__STRING_INLINE
 *
__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
);

609 
__STRING_INLINE
 *

610 
	$__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
)

612 
__d0
;

613 *
__ªs
;

614 
__asm__
 
__vﬁ©ûe__


624 : "˜" (
__ªs
), "=&S" (
__d0
)

625 : "0" (
__c
), "1" (
__s
)

627  
__ªs
 - 1;

628 
	}
}

629 #ifde‡
__USE_GNU


630 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 (s, c)

	)

636 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

637 #i‚de‡
_FORCE_INLINES


638 #ifde‡
__PIC__


639 
__STRING_INLINE
 
size_t


640 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

642 
__d0
, 
__d1
, 
__d2
;

643 *
__ªs
;

644 
__asm__
 
__vﬁ©ûe__


662 : "=&S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

663 : "d" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

665  (
__ªs
 - 1Ë- 
__s
;

666 
	}
}

668 
__STRING_INLINE
 
size_t


669 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

671 
__d0
, 
__d1
, 
__d2
, 
__d3
;

672 *
__ªs
;

673 
__asm__
 
__vﬁ©ûe__


689 : "=&S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

690 : "g" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

692  (
__ªs
 - 1Ë- 
__s
;

693 
	}
}

700 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

701 #i‚de‡
_FORCE_INLINES


702 #ifde‡
__PIC__


703 
__STRING_INLINE
 
size_t


704 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

706 
__d0
, 
__d1
, 
__d2
;

707 *
__ªs
;

708 
__asm__
 
__vﬁ©ûe__


726 : "=&S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

727 : "r" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

729  (
__ªs
 - 1Ë- 
__s
;

730 
	}
}

732 
__STRING_INLINE
 
size_t


733 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

735 
__d0
, 
__d1
, 
__d2
, 
__d3
;

736 *
__ªs
;

737 
__asm__
 
__vﬁ©ûe__


753 : "=&S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

754 : "g" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

756  (
__ªs
 - 1Ë- 
__s
;

757 
	}
}

763 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

764 #i‚de‡
_FORCE_INLINES


765 #ifde‡
__PIC__


766 
__STRING_INLINE
 *

767 
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

769 
__d0
, 
__d1
, 
__d2
;

770 *
__ªs
;

771 
__asm__
 
__vﬁ©ûe__


793 : "=&S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

794 : "r" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

796  
__ªs
;

797 
	}
}

799 
__STRING_INLINE
 *

800 
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

802 
__d0
, 
__d1
, 
__d2
, 
__d3
;

803 *
__ªs
;

804 
__asm__
 
__vﬁ©ûe__


824 : "=&S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

825 : "g" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

827  
__ªs
;

828 
	}
}

834 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

835 #i‚de‡
_FORCE_INLINES


836 #ifde‡
__PIC__


837 
__STRING_INLINE
 *

838 
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

840 
__d0
, 
__d1
, 
__d2
;

841 *
__ªs
;

842 
__asm__
 
__vﬁ©ûe__


863 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

864 : "r" (
__√edÀ
), "0" (0), "1" (0xffffffff), "2" (
__hay°ack
)

866  
__ªs
;

867 
	}
}

869 
__STRING_INLINE
 *

870 
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

872 
__d0
, 
__d1
, 
__d2
, 
__d3
;

873 *
__ªs
;

874 
__asm__
 
__vﬁ©ûe__


893 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

894 : "g" (
__√edÀ
), "0" (0), "1" (0xffffffff), "2" (
__hay°ack
)

896  
__ªs
;

897 
	}
}

901 #i‚de‡
_FORCE_INLINES


902 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‚de‡
_HAVE_STRING_ARCH_mem£t


98 #i‡
_STRING_ARCH_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 #i‡! 
__GNUC_PREREQ
 (3, 0)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

191 #i‡
__GNUC_PREREQ
 (2, 91)

192 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

200 #ifde‡
__USE_GNU


201 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


202 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


203 #i‡
__GNUC_PREREQ
 (3, 0)

204 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

205 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

206 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

207 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

208 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

210 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

211 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

212 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

213 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

214 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

218 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

221 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


222 #i‡
_STRING_ARCH_u«lig√d


223 #i‚de‡
_FORCE_INLINES


224 
	#__memp˝y_¨gs
(
§c
) \

225 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

226 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

227 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

228 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

229 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

230 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

232 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

233 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

234 
__uöt32_t
, 
size_t
);

235 
__STRING_INLINE
 *

236 
	$__memp˝y_smÆl
 (*
__de°1
,

237 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

238 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

239 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

240 
size_t
 
__§˛í
)

243 
__uöt32_t
 
__ui
;

244 
__uöt16_t
 
__usi
;

245 
__uc
;

246 
__c
;

247 } *
__u
 = 
__de°1
;

248 (Ë
__§˛í
)

251 
__u
->
__c
 = 
__§c0_1
;

252 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

255 
__u
->
__usi
 = 
__§c0_2
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

261 
__u
->
__c
 = 
__§c2_1
;

262 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

265 
__u
->
__ui
 = 
__§c0_4
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

271 
__u
->
__c
 = 
__§c4_1
;

272 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

275 
__u
->
__ui
 = 
__§c0_4
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

277 
__u
->
__usi
 = 
__§c4_2
;

278 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

281 
__u
->
__ui
 = 
__§c0_4
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

283 
__u
->
__usi
 = 
__§c4_2
;

284 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__c
 = 
__§c6_1
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

289 
__u
->
__ui
 = 
__§c0_4
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

291 
__u
->
__ui
 = 
__§c4_4
;

292 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295  (*Ë
__u
;

296 
	}
}

298 #i‚de‡
_FORCE_INLINES


299 
	#__memp˝y_¨gs
(
§c
) \

300 ((
__c⁄°
 *Ë(
§c
))[0], \

301 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

302 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

303 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

304 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

305 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

308 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

309 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

310 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

311 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

312 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

314 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

315 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

316 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

318 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

319 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

320 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

321 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

328 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

329 
__STRING2_COPY_ARR3
,

330 
__STRING2_COPY_ARR4
,

331 
__STRING2_COPY_ARR5
,

332 
__STRING2_COPY_ARR6
,

333 
__STRING2_COPY_ARR7
,

334 
__STRING2_COPY_ARR8
, 
size_t
);

335 
__STRING_INLINE
 *

336 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

337 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

338 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

339 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

340 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

343 
__c
;

344 
__STRING2_COPY_ARR2
 
__sˇ2
;

345 
__STRING2_COPY_ARR3
 
__sˇ3
;

346 
__STRING2_COPY_ARR4
 
__sˇ4
;

347 
__STRING2_COPY_ARR5
 
__sˇ5
;

348 
__STRING2_COPY_ARR6
 
__sˇ6
;

349 
__STRING2_COPY_ARR7
 
__sˇ7
;

350 
__STRING2_COPY_ARR8
 
__sˇ8
;

351 } *
__u
 = 
__de°
;

352 (Ë
__§˛í
)

355 
__u
->
__c
 = 
__§c1
;

358 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

361 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

364 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

367 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

370 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

373 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

376 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

379  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

380 
	}
}

388 #i‚de‡
_HAVE_STRING_ARCH_°rchr


389 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

390 
	#°rchr
(
s
, 
c
) \

391 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

392 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

393 : 
	`°rchr
 (
s
, 
c
)))

	)

398 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

399 || 
deföed
 
	g_FORCE_INLINES


400 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

401 
	#°r˝y
(
de°
, 
§c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

403 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

404 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

405 
	`°æí
 (
§c
) + 1) \

406 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

407 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

410 #i‡
_STRING_ARCH_u«lig√d


411 #i‚de‡
_FORCE_INLINES


412 
	#__°r˝y_¨gs
(
§c
) \

413 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

414 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

415 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

416 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

418 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

419 
__uöt32_t
, __uöt32_t, 
size_t
);

420 
__STRING_INLINE
 *

421 
	$__°r˝y_smÆl
 (*
__de°
,

422 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

423 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

424 
size_t
 
__§˛í
)

427 
__uöt32_t
 
__ui
;

428 
__uöt16_t
 
__usi
;

429 
__uc
;

430 } *
__u
 = (*Ë
__de°
;

431 (Ë
__§˛í
)

434 
__u
->
__uc
 = '\0';

437 
__u
->
__usi
 = 
__§c0_2
;

440 
__u
->
__usi
 = 
__§c0_2
;

441 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

442 
__u
->
__uc
 = '\0';

445 
__u
->
__ui
 = 
__§c0_4
;

448 
__u
->
__ui
 = 
__§c0_4
;

449 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

450 
__u
->
__uc
 = '\0';

453 
__u
->
__ui
 = 
__§c0_4
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

455 
__u
->
__usi
 = 
__§c4_2
;

458 
__u
->
__ui
 = 
__§c0_4
;

459 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

460 
__u
->
__usi
 = 
__§c4_2
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__ui
 = 
__§c4_4
;

470  
__de°
;

471 
	}
}

473 #i‚de‡
_FORCE_INLINES


474 
	#__°r˝y_¨gs
(
§c
) \

475 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

476 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

477 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

478 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

480 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

481 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

482 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

483 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

484 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

485 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

488 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

489 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

490 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

491 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

492 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

494 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

499 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

500 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

502 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

503 
__STRING2_COPY_ARR3
,

504 
__STRING2_COPY_ARR4
,

505 
__STRING2_COPY_ARR5
,

506 
__STRING2_COPY_ARR6
,

507 
__STRING2_COPY_ARR7
,

508 
__STRING2_COPY_ARR8
, 
size_t
);

509 
__STRING_INLINE
 *

510 
	$__°r˝y_smÆl
 (*
__de°
,

511 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

512 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

513 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

514 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

517 
__c
;

518 
__STRING2_COPY_ARR2
 
__sˇ2
;

519 
__STRING2_COPY_ARR3
 
__sˇ3
;

520 
__STRING2_COPY_ARR4
 
__sˇ4
;

521 
__STRING2_COPY_ARR5
 
__sˇ5
;

522 
__STRING2_COPY_ARR6
 
__sˇ6
;

523 
__STRING2_COPY_ARR7
 
__sˇ7
;

524 
__STRING2_COPY_ARR8
 
__sˇ8
;

525 } *
__u
 = (*Ë
__de°
;

526 (Ë
__§˛í
)

529 
__u
->
__c
 = '\0';

532 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

535 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

538 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

541 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

544 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

547 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

550 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

553  
__de°
;

554 
	}
}

560 #ifde‡
__USE_GNU


561 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


562 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


563 #i‡
__GNUC_PREREQ
 (3, 0)

564 
	#__°p˝y
(
de°
, 
§c
) \

565 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

566 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

567 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

568 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

570 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

572 
	#__°p˝y
(
de°
, 
§c
) \

573 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

574 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

575 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

576 
	`°æí
 (
§c
) + 1) \

577 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

579 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

583 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

586 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


587 #i‡
_STRING_ARCH_u«lig√d


588 #i‚de‡
_FORCE_INLINES


589 
	#__°p˝y_¨gs
(
§c
) \

590 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

591 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

592 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

593 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

595 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

596 
__uöt32_t
, __uöt32_t, 
size_t
);

597 
__STRING_INLINE
 *

598 
	$__°p˝y_smÆl
 (*
__de°
,

599 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

600 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

601 
size_t
 
__§˛í
)

604 
__ui
;

605 
__usi
;

606 
__uc
;

607 
__c
;

608 } *
__u
 = (*Ë
__de°
;

609 (Ë
__§˛í
)

612 
__u
->
__uc
 = '\0';

615 
__u
->
__usi
 = 
__§c0_2
;

616 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

619 
__u
->
__usi
 = 
__§c0_2
;

620 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

621 
__u
->
__uc
 = '\0';

624 
__u
->
__ui
 = 
__§c0_4
;

625 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

628 
__u
->
__ui
 = 
__§c0_4
;

629 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

630 
__u
->
__uc
 = '\0';

633 
__u
->
__ui
 = 
__§c0_4
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

635 
__u
->
__usi
 = 
__§c4_2
;

636 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

641 
__u
->
__usi
 = 
__§c4_2
;

642 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

643 
__u
->
__uc
 = '\0';

646 
__u
->
__ui
 = 
__§c0_4
;

647 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

648 
__u
->
__ui
 = 
__§c4_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

652  &
__u
->
__c
;

653 
	}
}

655 #i‚de‡
_FORCE_INLINES


656 
	#__°p˝y_¨gs
(
§c
) \

657 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

658 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

659 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

660 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

662 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

663 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

664 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

665 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

666 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

667 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

669 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

670 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

671 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

672 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

674 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

675 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

676 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

678 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

679 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

680 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

681 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

682 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

684 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

685 
__STRING2_COPY_ARR3
,

686 
__STRING2_COPY_ARR4
,

687 
__STRING2_COPY_ARR5
,

688 
__STRING2_COPY_ARR6
,

689 
__STRING2_COPY_ARR7
,

690 
__STRING2_COPY_ARR8
, 
size_t
);

691 
__STRING_INLINE
 *

692 
	$__°p˝y_smÆl
 (*
__de°
,

693 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

694 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

695 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

696 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

699 
__c
;

700 
__STRING2_COPY_ARR2
 
__sˇ2
;

701 
__STRING2_COPY_ARR3
 
__sˇ3
;

702 
__STRING2_COPY_ARR4
 
__sˇ4
;

703 
__STRING2_COPY_ARR5
 
__sˇ5
;

704 
__STRING2_COPY_ARR6
 
__sˇ6
;

705 
__STRING2_COPY_ARR7
 
__sˇ7
;

706 
__STRING2_COPY_ARR8
 
__sˇ8
;

707 } *
__u
 = (*Ë
__de°
;

708 (Ë
__§˛í
)

711 
__u
->
__c
 = '\0';

714 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

717 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

720 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

723 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

726 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

729 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

732 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

735  
__de°
 + 
__§˛í
 - 1;

736 
	}
}

744 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


745 #i‡
deföed
 
_USE_STRING_ARCH_mem£t
 && deföed 
_USE_STRING_ARCH_memp˝y


746 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

747 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

748 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

749 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

750 ? (*Ë
	`mem˝y
 (
__de°
, 
§c
, 
n
) \

751 : (
	`mem£t
 (
	`__memp˝y
 (
__de°
, 
§c
, 
	`°æí
 (src)), \

752 '\0', 
n
 - 
	`°æí
 (
§c
)), \

753 
__de°
)) \

754 : 
	`°∫˝y
 (
__de°
, 
§c
, 
n
); }))

	)

756 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

757 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

758 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

759 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

760 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

761 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

767 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


768 #ifde‡
_USE_STRING_ARCH_°rchr


769 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

770 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

771 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

772 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

773 ? 
	`°rˇt
 (
__de°
, 
§c
) \

774 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

775 
§c
, 
n
)Ë'\0', 
__de°
)) \

776 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

778 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

779 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

780 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

781 ? 
	`°rˇt
 (
de°
, 
§c
) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

789 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


790 
	#°rcmp
(
s1
, 
s2
) \

791 
__exãnsi⁄__
 \

792 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

793 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

794 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

795 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

796 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

797 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

798 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

799 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

800 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

801 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

802 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

803 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

804 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

805 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

806 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

807 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

808 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

809 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

811 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

812 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

813 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

814 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

815 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

817 
__ªsu…
 = (((
__c⁄°
 *) \

818 (
__c⁄°
 *Ë(
s1
))[1] \

819 - ((
__c⁄°
 *) \

820 (
__c⁄°
 *Ë(
s2
))[1]); \

821 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

823 
__ªsu…
 = \

824 (((
__c⁄°
 *) \

825 (
__c⁄°
 *Ë(
s1
))[2] \

826 - ((
__c⁄°
 *) \

827 (
__c⁄°
 *Ë(
s2
))[2]); \

828 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

829 
__ªsu…
 = \

830 (((
__c⁄°
 *) \

831 (
__c⁄°
 *Ë(
s1
))[3] \

832 - ((
__c⁄°
 *) \

833 (
__c⁄°
 *Ë(
s2
))[3]); \

836 
__ªsu…
; }))

	)

838 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

839 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

840 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

841 
__ªsu…
 = \

842 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

843 - 
__s2
[0]); \

844 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

846 
__ªsu…
 = (((
__c⁄°
 *) \

847 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

848 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

850 
__ªsu…
 = (((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

852 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = (((
__c⁄°
 *) \

854 (
__c⁄°
 *Ë(
s1
))[3] \

855 - 
__s2
[3]); \

858 
__ªsu…
; }))

	)

860 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

861 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

862 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

863 
__ªsu…
 = \

864 
__s1
[0] - ((
__c⁄°
 *) \

865 (
__c⁄°
 *Ë(
s2
))[0]; \

866 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

868 
__ªsu…
 = (
__s1
[1] \

869 - ((
__c⁄°
 *) \

870 (
__c⁄°
 *Ë(
s2
))[1]); \

871 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

873 
__ªsu…
 = \

874 (
__s1
[2] - ((
__c⁄°
 *) \

875 (
__c⁄°
 *Ë(
s2
))[2]); \

876 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = \

878 (
__s1
[3] \

879 - ((
__c⁄°
 *) \

880 (
__c⁄°
 *Ë(
s2
))[3]); \

883 
__ªsu…
; }))

	)

888 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


889 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

890 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

891 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

892 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

893 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

894 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

895 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

901 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


902 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


903 
	#°rc•n
(
s
, 
ªje˘
) \

904 
__exãnsi⁄__
 \

905 ({ 
__r0
, 
__r1
, 
__r2
; \

906 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

907 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

908 ? 
	`°æí
 (
s
) \

909 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

910 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

911 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

912 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

913 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

914 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

915 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

916 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

919 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

920 
__STRING_INLINE
 
size_t


921 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

923 
size_t
 
__ªsu…
 = 0;

924 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

925 ++
__ªsu…
;

926  
__ªsu…
;

927 
	}
}

929 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

930 
__ªje˘2
);

931 
__STRING_INLINE
 
size_t


932 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

934 
size_t
 
__ªsu…
 = 0;

935 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


936 && 
__s
[
__ªsu…
] !
__ªje˘2
)

937 ++
__ªsu…
;

938  
__ªsu…
;

939 
	}
}

941 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

942 
__ªje˘2
, 
__ªje˘3
);

943 
__STRING_INLINE
 
size_t


944 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

945 
__ªje˘3
)

947 
size_t
 
__ªsu…
 = 0;

948 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


949 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

950 ++
__ªsu…
;

951  
__ªsu…
;

952 
	}
}

958 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


959 #i‚de‡
_HAVE_STRING_ARCH_°r•n


960 
	#°r•n
(
s
, 
ac˚±
) \

961 
__exãnsi⁄__
 \

962 ({ 
__a0
, 
__a1
, 
__a2
; \

963 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

964 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

965 ? ((Ë(
s
), 0) \

966 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

967 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

968 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

969 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

970 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

971 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

972 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

973 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

976 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

977 
__STRING_INLINE
 
size_t


978 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

980 
size_t
 
__ªsu…
 = 0;

982 
__s
[
__ªsu…
] =
__ac˚±
)

983 ++
__ªsu…
;

984  
__ªsu…
;

985 
	}
}

987 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

988 
__ac˚±2
);

989 
__STRING_INLINE
 
size_t


990 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

992 
size_t
 
__ªsu…
 = 0;

994 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

995 ++
__ªsu…
;

996  
__ªsu…
;

997 
	}
}

999 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1000 
__ac˚±2
, 
__ac˚±3
);

1001 
__STRING_INLINE
 
size_t


1002 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1004 
size_t
 
__ªsu…
 = 0;

1006 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1007 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1008 ++
__ªsu…
;

1009  
__ªsu…
;

1010 
	}
}

1015 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1016 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1017 
	#°Ωbrk
(
s
, 
ac˚±
) \

1018 
__exãnsi⁄__
 \

1019 ({ 
__a0
, 
__a1
, 
__a2
; \

1020 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1021 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1022 ? ((Ë(
s
), 
NULL
) \

1023 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1024 ? 
	`°rchr
 (
s
, 
__a0
) \

1025 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1026 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1027 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1028 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1029 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1030 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1033 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1034 
__ac˚±2
);

1035 
__STRING_INLINE
 *

1036 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1039 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1040 ++
__s
;

1041  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1042 
	}
}

1044 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1045 
__ac˚±2
, 
__ac˚±3
);

1046 
__STRING_INLINE
 *

1047 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1048 
__ac˚±3
)

1051 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1052 && *
__s
 !
__ac˚±3
)

1053 ++
__s
;

1054  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1055 
	}
}

1061 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1062 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1063 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1064 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1065 ? (*Ë(
size_t
Ë(
hay°ack
) \

1066 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1067 ? 
	`°rchr
 (
hay°ack
, \

1068 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1069 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1070 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1074 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1075 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1076 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1077 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1078 ? (((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1079 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1080 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1081 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)) \

1082 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1085 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1086 
__STRING_INLINE
 *

1087 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1089 *
__ªsu…
;

1090 i‡(
__s
 =
NULL
)

1091 
__s
 = *
__√xç
;

1092 *
__s
 =
__£p
)

1093 ++
__s
;

1094 
__ªsu…
 = 
NULL
;

1095 i‡(*
__s
 != '\0')

1097 
__ªsu…
 = 
__s
++;

1098 *
__s
 != '\0')

1099 i‡(*
__s
++ =
__£p
)

1101 
__s
[-1] = '\0';

1104 *
__√xç
 = 
__s
;

1106  
__ªsu…
;

1107 
	}
}

1108 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1109 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1114 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1115 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1117 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1118 
	#__°r£p
(
s
, 
ªje˘
) \

1119 
__exãnsi⁄__
 \

1120 ({ 
__r0
, 
__r1
, 
__r2
; \

1121 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1122 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1123 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1124 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1125 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1126 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1127 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1128 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1129 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1130 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1131 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1132 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1135 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1136 
__STRING_INLINE
 *

1137 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1139 *
__ªtvÆ
 = *
__s
;

1140 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1141 *(*
__s
)++ = '\0';

1142  
__ªtvÆ
;

1143 
	}
}

1145 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1146 
__STRING_INLINE
 *

1147 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1149 *
__ªtvÆ
 = *
__s
;

1150 i‡(
__ªtvÆ
 !
NULL
)

1152 *
__˝
 = 
__ªtvÆ
;

1155 i‡(*
__˝
 == '\0')

1157 
__˝
 = 
NULL
;

1160 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1162 *
__˝
++ = '\0';

1165 ++
__˝
;

1167 *
__s
 = 
__˝
;

1169  
__ªtvÆ
;

1170 
	}
}

1172 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1173 
__ªje˘3
);

1174 
__STRING_INLINE
 *

1175 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1177 *
__ªtvÆ
 = *
__s
;

1178 i‡(
__ªtvÆ
 !
NULL
)

1180 *
__˝
 = 
__ªtvÆ
;

1183 i‡(*
__˝
 == '\0')

1185 
__˝
 = 
NULL
;

1188 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1190 *
__˝
++ = '\0';

1193 ++
__˝
;

1195 *
__s
 = 
__˝
;

1197  
__ªtvÆ
;

1198 
	}
}

1199 #ifde‡
__USE_BSD


1200 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1207 #ifde‡
__USE_MISC


1209 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1210 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1211 
	~<°dlib.h
>

1214 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1216 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1217 
	#__°rdup
(
s
) \

1218 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1219 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1220 ? (*Ë
	`ˇŒoc
 (1, 1) \

1221 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1222 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1223 i‡(
__ªtvÆ
 !
NULL
) \

1224 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1225 
__ªtvÆ
; 
	}
})) \

1226 : 
	`__°rdup
 (
s
)))

	)

1228 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1229 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1233 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1235 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1236 
__THROW
 
__©åibuã_mÆloc__
;

1237 
	#__°∫dup
(
s
, 
n
) \

1238 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1239 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1240 ? (*Ë
	`ˇŒoc
 (1, 1) \

1241 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1242 
size_t
 
__n
 = (
n
); \

1243 *
__ªtvÆ
; \

1244 i‡(
__n
 < 
__Àn
) \

1245 
__Àn
 = 
__n
 + 1; \

1246 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1247 i‡(
__ªtvÆ
 !
NULL
) \

1249 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1250 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1251 
__Àn
 - 1); \

1253 
__ªtvÆ
; 
	}
})) \

1254 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1256 #ifde‡
__USE_GNU


1257 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1263 #i‚de‡
_FORCE_INLINES


1264 #unde‡
__STRING_INLINE


	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

30 
	#__√ed_size_t


	)

31 
	~<°ddef.h
>

34 
	t__u_ch¨
;

35 
	t__u_sh‹t
;

36 
	t__u_öt
;

37 
	t__u_l⁄g
;

40 sig√d 
	t__öt8_t
;

41 
	t__uöt8_t
;

42 sig√d 
	t__öt16_t
;

43 
	t__uöt16_t
;

44 sig√d 
	t__öt32_t
;

45 
	t__uöt32_t
;

46 #i‡
__WORDSIZE
 == 64

47 sig√d 
	t__öt64_t
;

48 
	t__uöt64_t
;

49 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


50 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

51 
__exãnsi⁄__
 
	t__uöt64_t
;

55 #i‡
__WORDSIZE
 == 64

56 
	t__quad_t
;

57 
	t__u_quad_t
;

58 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


59 
__exãnsi⁄__
 
	t__quad_t
;

60 
__exãnsi⁄__
 
	t__u_quad_t
;

64 
	m__vÆ
[2];

65 } 
	t__quad_t
;

68 
__u_l⁄g
 
	m__vÆ
[2];

69 } 
	t__u_quad_t
;

102 
	#__S16_TYPE
 

	)

103 
	#__U16_TYPE
 

	)

104 
	#__S32_TYPE
 

	)

105 
	#__U32_TYPE
 

	)

106 
	#__SLONGWORD_TYPE
 

	)

107 
	#__ULONGWORD_TYPE
 

	)

108 #i‡
__WORDSIZE
 == 32

109 
	#__SQUAD_TYPE
 

	)

110 
	#__UQUAD_TYPE
 

	)

111 
	#__SWORD_TYPE
 

	)

112 
	#__UWORD_TYPE
 

	)

113 
	#__SLONG32_TYPE
 

	)

114 
	#__ULONG32_TYPE
 

	)

115 
	#__S64_TYPE
 
__quad_t


	)

116 
	#__U64_TYPE
 
__u_quad_t


	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	#__SQUAD_TYPE
 

	)

119 
	#__UQUAD_TYPE
 

	)

120 
	#__SWORD_TYPE
 

	)

121 
	#__UWORD_TYPE
 

	)

122 
	#__SLONG32_TYPE
 

	)

123 
	#__ULONG32_TYPE
 

	)

124 
	#__S64_TYPE
 

	)

125 
	#__U64_TYPE
 

	)

129 
	~<bôs/ty≥sizes.h
>

133 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

136 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

137 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

138 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

139 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

140 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

141 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

142 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

143 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

144 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

145 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

146 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

147 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

148 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

149 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

150 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

151 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

152 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

153 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

155 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

156 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

157 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

160 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

163 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

166 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

171 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

172 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

175 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

176 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

179 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

180 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

182 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

186 
__off64_t
 
	t__loff_t
;

187 
__quad_t
 *
	t__qaddr_t
;

188 *
	t__ˇddr_t
;

191 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

194 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

197 #unde‡
__STD_TYPE


	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

29 
	#__WALL
 0x40000000

	)

30 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 #ifdef 
__GNUC__


42 
	#__WIFSIGNALED
(
°©us
) \

43 (
	`__exãnsi⁄__
 ({ 
__°©us
 = (
°©us
); \

44 !
	`__WIFSTOPPED
(
__°©us
Ë&& !
	`__WIFEXITED
(__°©us); }))

	)

46 
	#__WIFSIGNALED
(
°©us
Ë(!
	`__WIFSTOPPED
(°©usË&& !
	`__WIFEXITED
(°©us))

	)

50 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__WCOREFLAG
 0x80

	)

61 #ifdef 
__USE_BSD


63 
	~<ídün.h
>

65 
	uwaô


67 
	mw_°©us
;

70 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


71 
	m__w_ãrmsig
:7;

72 
	m__w_c‹edump
:1;

73 
	m__w_ªtcode
:8;

76 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


78 
	m__w_ªtcode
:8;

79 
	m__w_c‹edump
:1;

80 
	m__w_ãrmsig
:7;

82 } 
	m__waô_ãrmö©ed
;

85 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


86 
	m__w_°›vÆ
:8;

87 
	m__w_°›sig
:8;

90 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


92 
	m__w_°›sig
:8;

93 
	m__w_°›vÆ
:8;

95 } 
	m__waô_°›≥d
;

98 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

99 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

100 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

101 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

102 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

24 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/bits/wordsize.h

19 
	#__WORDSIZE
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

86 #unde‡
__USE_ISOC99


87 #unde‡
__USE_POSIX


88 #unde‡
__USE_POSIX2


89 #unde‡
__USE_POSIX199309


90 #unde‡
__USE_POSIX199506


91 #unde‡
__USE_XOPEN


92 #unde‡
__USE_XOPEN_EXTENDED


93 #unde‡
__USE_UNIX98


94 #unde‡
__USE_XOPEN2K


95 #unde‡
__USE_LARGEFILE


96 #unde‡
__USE_LARGEFILE64


97 #unde‡
__USE_FILE_OFFSET64


98 #unde‡
__USE_BSD


99 #unde‡
__USE_SVID


100 #unde‡
__USE_MISC


101 #unde‡
__USE_GNU


102 #unde‡
__USE_REENTRANT


103 #unde‡
__FAVOR_BSD


104 #unde‡
__KERNEL_STRICT_NAMES


108 #i‚de‡
_LOOSE_KERNEL_NAMES


109 
	#__KERNEL_STRICT_NAMES


	)

113 
	#__USE_ANSI
 1

	)

117 #i‡
deföed
 
_BSD_SOURCE
 && \

118 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

119 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

120 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

121 
	#__FAVOR_BSD
 1

	)

125 #ifde‡
_GNU_SOURCE


126 #unde‡
_ISOC99_SOURCE


127 
	#_ISOC99_SOURCE
 1

	)

128 #unde‡
_POSIX_SOURCE


129 
	#_POSIX_SOURCE
 1

	)

130 #unde‡
_POSIX_C_SOURCE


131 
	#_POSIX_C_SOURCE
 199506L

	)

132 #unde‡
_XOPEN_SOURCE


133 
	#_XOPEN_SOURCE
 600

	)

134 #unde‡
_XOPEN_SOURCE_EXTENDED


135 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

136 #unde‡
_LARGEFILE64_SOURCE


137 
	#_LARGEFILE64_SOURCE
 1

	)

138 #unde‡
_BSD_SOURCE


139 
	#_BSD_SOURCE
 1

	)

140 #unde‡
_SVID_SOURCE


141 
	#_SVID_SOURCE
 1

	)

146 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

147 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

148 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

149 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

150 
	#_BSD_SOURCE
 1

	)

151 
	#_SVID_SOURCE
 1

	)

158 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

159 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

160 
	#__USE_ISOC99
 1

	)

165 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_POSIX_SOURCE
 && \

166 !
deföed
 
_POSIX_C_SOURCE
)

167 
	#_POSIX_SOURCE
 1

	)

168 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

169 
	#_POSIX_C_SOURCE
 2

	)

171 
	#_POSIX_C_SOURCE
 199506L

	)

175 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


176 
	#__USE_POSIX
 1

	)

179 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


180 
	#__USE_POSIX2
 1

	)

183 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

184 
	#__USE_POSIX199309
 1

	)

187 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

188 
	#__USE_POSIX199506
 1

	)

191 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

192 
	#__USE_XOPEN2K
 1

	)

195 #ifdef 
_XOPEN_SOURCE


196 
	#__USE_XOPEN
 1

	)

197 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

198 
	#__USE_XOPEN_EXTENDED
 1

	)

199 
	#__USE_UNIX98
 1

	)

200 #unde‡
_LARGEFILE_SOURCE


201 
	#_LARGEFILE_SOURCE
 1

	)

202 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

203 
	#__USE_XOPEN2K
 1

	)

204 #unde‡
__USE_ISOC99


205 
	#__USE_ISOC99
 1

	)

208 #ifde‡
_XOPEN_SOURCE_EXTENDED


209 
	#__USE_XOPEN_EXTENDED
 1

	)

214 #ifde‡
_LARGEFILE_SOURCE


215 
	#__USE_LARGEFILE
 1

	)

218 #ifde‡
_LARGEFILE64_SOURCE


219 
	#__USE_LARGEFILE64
 1

	)

222 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

223 
	#__USE_FILE_OFFSET64
 1

	)

226 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


227 
	#__USE_MISC
 1

	)

230 #ifdef 
_BSD_SOURCE


231 
	#__USE_BSD
 1

	)

234 #ifdef 
_SVID_SOURCE


235 
	#__USE_SVID
 1

	)

238 #ifdef 
_GNU_SOURCE


239 
	#__USE_GNU
 1

	)

242 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


243 
	#__USE_REENTRANT
 1

	)

247 
	#__STDC_IEC_559__
 1

	)

248 
	#__STDC_IEC_559_COMPLEX__
 1

	)

251 
	#__STDC_ISO_10646__
 200009L

	)

259 #unde‡
__GNU_LIBRARY__


260 
	#__GNU_LIBRARY__
 6

	)

264 
	#__GLIBC__
 2

	)

265 
	#__GLIBC_MINOR__
 3

	)

274 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


275 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

276 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

278 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

281 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

282 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

285 #i‡
deföed
 
__GNUC__
 \

286 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

287 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

288 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

289 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

293 #i‚de‡
__ASSEMBLER__


294 #i‚de‡
_SYS_CDEFS_H


295 
	~<sys/cdefs.h
>

300 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


301 
	#__USE_LARGEFILE
 1

	)

302 
	#__USE_LARGEFILE64
 1

	)

308 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

309 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__


310 
	#__USE_EXTERN_INLINES
 1

	)

318 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

20 #i‚de‡
_GETOPT_H


22 #i‚de‡
__√ed_gë›t


23 
	#_GETOPT_H
 1

	)

33 #i‡!
deföed
 
__GNU_LIBRARY__


34 
	~<˘y≥.h
>

37 #i‚de‡
__THROW


38 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

39 
	#__THROW
 
	`throw
 ()

	)

41 
	#__THROW


	)

45 #ifdef 
__˝lu•lus


55 *
›èrg
;

69 
›töd
;

74 
›ãº
;

78 
›t›t
;

80 #i‚de‡
__√ed_gë›t


102 
	s›ti⁄


104 #i‡(
deföed
 
__STDC__
 && __STDC__Ë|| deföed 
__˝lu•lus


105 c⁄° *
	g«me
;

107 *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #i‡(
deföed
 
__STDC__
 && __STDC__Ë|| deföed 
__˝lu•lus


149 #ifde‡
__GNU_LIBRARY__


153 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

154 
__THROW
;

156 
gë›t
 ();

159 #i‚de‡
__√ed_gë›t


160 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

161 c⁄° *
__sh‹t›ts
,

162 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

163 
__THROW
;

164 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

165 c⁄° *
__sh‹t›ts
,

166 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

167 
__THROW
;

170 
_gë›t_öã∫Æ
 (
___¨gc
, *c⁄° *
___¨gv
,

171 c⁄° *
__sh‹t›ts
,

172 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
,

173 
__l⁄g_⁄ly
);

176 
gë›t
 ();

177 #i‚de‡
__√ed_gë›t


178 
gë›t_l⁄g
 ();

179 
gë›t_l⁄g_⁄ly
 ();

181 
_gë›t_öã∫Æ
 ();

185 #ifdef 
__˝lu•lus


190 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

144 
	#_IO_SKIPWS
 01

	)

145 
	#_IO_LEFT
 02

	)

146 
	#_IO_RIGHT
 04

	)

147 
	#_IO_INTERNAL
 010

	)

148 
	#_IO_DEC
 020

	)

149 
	#_IO_OCT
 040

	)

150 
	#_IO_HEX
 0100

	)

151 
	#_IO_SHOWBASE
 0200

	)

152 
	#_IO_SHOWPOINT
 0400

	)

153 
	#_IO_UPPERCASE
 01000

	)

154 
	#_IO_SHOWPOS
 02000

	)

155 
	#_IO_SCIENTIFIC
 04000

	)

156 
	#_IO_FIXED
 010000

	)

157 
	#_IO_UNITBUF
 020000

	)

158 
	#_IO_STDIO
 040000

	)

159 
	#_IO_DONT_CLOSE
 0100000

	)

160 
	#_IO_BOOLALPHA
 0200000

	)

163 
_IO_jump_t
; 
	g_IO_FILE
;

166 #ifde‡
_IO_MTSAFE_IO


167 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

168 
	~<bôs/°dio-lock.h
>

173 
	t_IO_lock_t
;

179 
	s_IO_m¨kî
 {

180 
_IO_m¨kî
 *
	m_√xt
;

181 
_IO_FILE
 *
	m_sbuf
;

185 
	m_pos
;

187 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

188 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

189 
	mpublic
:

190 
°ªamm¨kî
(
°ªambuf
 *
sb
);

191 ~
°ªamm¨kî
();

192 
ßvög
(Ë{  
	m_•os
 == -2; }

193 
dñè
(
°ªamm¨kî
&);

194 
dñè
();

199 
	e__codecvt_ªsu…


201 
	m__codecvt_ok
,

202 
	m__codecvt_∑πül
,

203 
	m__codecvt_îr‹
,

204 
	m__codecvt_noc⁄v


207 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


210 
	s_IO_codecvt


212 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

213 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

214 
	m__mb°©e_t
 *,

215 c⁄° 
	mwch¨_t
 *,

216 c⁄° 
	mwch¨_t
 *,

217 c⁄° 
	mwch¨_t
 **, *,

219 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

220 
	m__mb°©e_t
 *, *,

222 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

225 c⁄° **, 
	mwch¨_t
 *,

226 
	mwch¨_t
 *, wchar_t **);

227 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

228 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

229 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

230 c⁄° *, c⁄° *, 
	m_IO_size_t
);

231 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

233 
_IO_ic⁄v_t
 
	m__cd_ö
;

234 
_IO_ic⁄v_t
 
	m__cd_out
;

238 
	s_IO_wide_d©a


240 
wch¨_t
 *
	m_IO_ªad_±r
;

241 
wch¨_t
 *
	m_IO_ªad_íd
;

242 
wch¨_t
 *
	m_IO_ªad_ba£
;

243 
wch¨_t
 *
	m_IO_wrôe_ba£
;

244 
wch¨_t
 *
	m_IO_wrôe_±r
;

245 
wch¨_t
 *
	m_IO_wrôe_íd
;

246 
wch¨_t
 *
	m_IO_buf_ba£
;

247 
wch¨_t
 *
	m_IO_buf_íd
;

249 
wch¨_t
 *
	m_IO_ßve_ba£
;

250 
wch¨_t
 *
	m_IO_backup_ba£
;

252 
wch¨_t
 *
	m_IO_ßve_íd
;

254 
__mb°©e_t
 
	m_IO_°©e
;

255 
__mb°©e_t
 
	m_IO_œ°_°©e
;

256 
_IO_codecvt
 
	m_codecvt
;

258 
wch¨_t
 
	m_sh‹tbuf
[1];

260 
_IO_jump_t
 *
	m_wide_vèbÀ
;

264 
	s_IO_FILE
 {

265 
	m_Êags
;

266 
	#_IO_fûe_Êags
 
_Êags


	)

270 * 
	m_IO_ªad_±r
;

271 * 
	m_IO_ªad_íd
;

272 * 
	m_IO_ªad_ba£
;

273 * 
	m_IO_wrôe_ba£
;

274 * 
	m_IO_wrôe_±r
;

275 * 
	m_IO_wrôe_íd
;

276 * 
	m_IO_buf_ba£
;

277 * 
	m_IO_buf_íd
;

279 *
	m_IO_ßve_ba£
;

280 *
	m_IO_backup_ba£
;

281 *
	m_IO_ßve_íd
;

283 
_IO_m¨kî
 *
	m_m¨kîs
;

285 
_IO_FILE
 *
	m_chaö
;

287 
	m_fûío
;

289 
	m_blksize
;

291 
	m_Êags2
;

293 
_IO_off_t
 
	m_ﬁd_off£t
;

295 
	#__HAVE_COLUMN


	)

297 
	m_cur_cﬁumn
;

298 sig√d 
	m_vèbÀ_off£t
;

299 
	m_sh‹tbuf
[1];

303 
_IO_lock_t
 *
	m_lock
;

304 #ifde‡
_IO_USE_OLD_IO_FILE


307 
	s_IO_FILE_com∂ëe


309 
_IO_FILE
 
	m_fûe
;

311 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

312 
_IO_off64_t
 
	m_off£t
;

313 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


315 
_IO_codecvt
 *
	m_codecvt
;

316 
_IO_wide_d©a
 *
	m_wide_d©a
;

318 *
	m__∑d1
;

319 *
	m__∑d2
;

321 
	m_mode
;

323 
	m_unu£d2
[15 *  () - 2 *  (*)];

327 #i‚de‡
__˝lu•lus


328 
_IO_FILE
 
	t_IO_FILE
;

331 
	g_IO_FILE_∂us
;

333 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

334 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

335 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

336 #i‚de‡
_LIBC


337 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

338 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

339 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

341 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

342 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

343 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

351 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

359 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

360 
	tsize_t
 
	t__n
);

368 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

371 
	t__io_˛o£_‚
 (*
	t__cookõ
);

374 #ifde‡
_GNU_SOURCE


376 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

377 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

378 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

379 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

384 
__io_ªad_‚
 *
	mªad
;

385 
__io_wrôe_‚
 *
	mwrôe
;

386 
__io_£ek_‚
 *
	m£ek
;

387 
__io_˛o£_‚
 *
	m˛o£
;

388 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

389 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

391 
	g_IO_cookõ_fûe
;

394 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

395 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

399 #ifde‡
__˝lu•lus


403 
__undîÊow
 (
_IO_FILE
 *Ë
__THROW
;

404 
__uÊow
 (
_IO_FILE
 *Ë
__THROW
;

405 
__ovîÊow
 (
_IO_FILE
 *, Ë
__THROW
;

406 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *Ë
__THROW
;

407 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *Ë
__THROW
;

408 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wöt_tË
__THROW
;

410 
	#_IO_gëc_u∆ocked
(
_Â
) \

411 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
 ? 
	`__uÊow
 (_fp) \

412 : *(*Ë(
_Â
)->
_IO_ªad_±r
++)

	)

413 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

414 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
 \

415 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

416 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

417 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

418 (((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
) \

419 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

420 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

422 
	#_IO_gëwc_u∆ocked
(
_Â
) \

423 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
 \

424 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

425 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

426 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 >(_Â)->_wide_d©a->
_IO_wrôe_íd
 \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

430 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

431 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

433 
_IO_gëc
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
Ë
__THROW
;

435 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

436 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

438 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

441 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

442 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

444 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

445 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

448 #ifde‡
_IO_MTSAFE_IO


449 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

450 
	#_IO_Êockfûe
(
_Â
) \

451 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

452 
	#_IO_fu∆ockfûe
(
_Â
) \

453 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

455 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

456 
	#_IO_Êockfûe
(
_Â
Ë

	)

457 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

458 
	#_IO_·rylockfûe
(
_Â
Ë

	)

459 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

463 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

464 
_IO_va_li°
, *
__ª°ri˘
Ë
__THROW
;

465 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

466 
_IO_va_li°
Ë
__THROW
;

467 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_tË
__THROW
;

468 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_tË
__THROW
;

470 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , Ë
__THROW
;

471 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, Ë
__THROW
;

473 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

475 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


476 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

477 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
Ë
__THROW
;

478 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

479 #i‡
__GNUC__
 >= 2

482 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


483 
	~<shlib-com∑t.h
>

484 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

485 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

486 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

487 c⁄° 
_IO_°dö_u£d
;

488 
wók_exã∫
 (
_IO_°dö_u£d
);

491 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


492 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

496 
	#_IO_fwide
(
__Â
, 
__mode
) \

497 ({ 
__ªsu…
 = (
__mode
); \

498 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

500 i‡((
__Â
)->
_mode
 == 0) \

502 (
__Â
)->
_mode
 = -1; \

503 
__ªsu…
 = (
__Â
)->
_mode
; \

505 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

506 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

508 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

509 
__ªsu…
; })

	)

512 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

513 
_IO_va_li°
, *
__ª°ri˘
Ë
__THROW
;

514 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

515 
_IO_va_li°
Ë
__THROW
;

516 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_tË
__THROW
;

517 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

520 #ifde‡
__˝lu•lus


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

27 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 
	#maj‹
(
dev
Ë(()(((devË>> 8Ë& 0xff))

	)

29 
	#mö‹
(
dev
Ë(()((devË& 0xff))

	)

30 
	#makedev
(
maj‹
, 
mö‹
) (((() (major)) << 8) \

31 | ((Ë(
mö‹
)))

	)

35 
	~<ídün.h
>

36 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


37 
	#maj‹
(
dev
Ë(((dev).
__vÆ
[1] >> 8Ë& 0xff)

	)

38 
	#mö‹
(
dev
Ë((dev).
__vÆ
[1] & 0xff)

	)

39 
	#makedev
(
maj‹
, 
mö‹
) { 0, (((() (major)) << 8) \

40 | ((Ë(
mö‹
))Ë}

	)

42 
	#maj‹
(
dev
Ë(((dev).
__vÆ
[0] >> 8Ë& 0xff)

	)

43 
	#mö‹
(
dev
Ë((dev).
__vÆ
[0] & 0xff)

	)

44 
	#makedev
(
maj‹
, 
mö‹
) { (((() (major)) << 8) \

45 | ((Ë(
mö‹
))), 0 }

	)

	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

118 
	stime•ec


120 
__time_t
 
tv_£c
;

121 
tv_n£c
;

125 #unde‡
__√ed_time•ec


128 #ifdef 
_TIME_H


129 
__BEGIN_NAMESPACE_STD


131 
	stm


133 
tm_£c
;

134 
tm_mö
;

135 
tm_hour
;

136 
tm_mday
;

137 
tm_m⁄
;

138 
tm_yór
;

139 
tm_wday
;

140 
tm_yday
;

141 
tm_isd°
;

143 #ifdef 
__USE_BSD


144 
tm_gmtoff
;

145 
__c⁄°
 *
tm_z⁄e
;

147 
__tm_gmtoff
;

148 
__c⁄°
 *
__tm_z⁄e
;

151 
__END_NAMESPACE_STD


152 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


153 
	$__USING_NAMESPACE_STD
(
tm
)

157 #ifde‡
__USE_POSIX199309


159 
	sôimî•ec


161 
time•ec
 
ô_öãrvÆ
;

162 
time•ec
 
ô_vÆue
;

166 
sigevít
;

170 #ifde‡
__USE_XOPEN2K


171 #i‚de‡
__pid_t_deföed


172 
__pid_t
 
	tpid_t
;

173 
	#__pid_t_deföed


	)

178 
__BEGIN_NAMESPACE_STD


181 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

184 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

187 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

188 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

191 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

197 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

198 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

199 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

200 
__END_NAMESPACE_STD


202 #ifde‡
__USE_XOPEN


205 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

207 
__THROW
;

210 #ifde‡
__USE_GNU


213 
	~<xloˇÀ.h
>

215 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

216 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

217 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

218 
__loˇÀ_t
 
__loc
Ë
__THROW
;

220 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

221 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

222 
__loˇÀ_t
 
__loc
Ë
__THROW
;

226 
__BEGIN_NAMESPACE_STD


229 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

233 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

234 
__END_NAMESPACE_STD


236 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


239 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

240 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

244 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

245 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
__BEGIN_NAMESPACE_STD


251 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

254 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

255 
__END_NAMESPACE_STD


257 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


262 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

263 *
__ª°ri˘
 
__buf
Ë
__THROW
;

266 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

272 *
__tz«me
[2];

273 
__daylight
;

274 
__timez⁄e
;

277 #ifdef 
__USE_POSIX


279 *
tz«me
[2];

283 
	$tz£t
 (Ë
__THROW
;

286 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


287 
daylight
;

288 
timez⁄e
;

291 #ifde‡
__USE_SVID


294 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

300 
	#__i¶óp
(
yór
) \

301 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

304 #ifde‡
__USE_MISC


309 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

312 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

315 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

319 #ifde‡
__USE_POSIX199309


324 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

325 
time•ec
 *
__ªmaöög
);

329 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

332 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

335 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

336 
__THROW
;

338 #ifde‡
__USE_XOPEN2K


343 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

344 
__c⁄°
 
time•ec
 *
__ªq
,

345 
time•ec
 *
__ªm
);

348 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

353 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

354 
sigevít
 *
__ª°ri˘
 
__evp
,

355 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

358 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

361 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

362 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

363 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

366 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

367 
__THROW
;

370 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

374 #ifde‡
__USE_XOPEN_EXTENDED


386 
gëd©e_îr
;

395 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

398 #ifde‡
__USE_GNU


409 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

410 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

413 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@codebook/hcb_1.h

36 
hcb
 
	ghcb1_1
[] = {

81 
hcb_2_quad
 
	ghcb1_2
[] = {

	@codebook/hcb_10.h

36 
hcb
 
	ghcb10_1
[] = {

118 
hcb_2_∑ú
 
	ghcb10_2
[] = {

	@codebook/hcb_11.h

36 
hcb
 
	ghcb11_1
[] = {

98 
hcb_2_∑ú
 
	ghcb11_2
[] = {

	@codebook/hcb_2.h

36 
hcb
 
	ghcb2_1
[] = {

85 
hcb_2_quad
 
	ghcb2_2
[] = {

	@codebook/hcb_3.h

31 
hcb_bö_quad
 
	ghcb3
[] = {

	@codebook/hcb_4.h

36 
hcb
 
	ghcb4_1
[] = {

88 
hcb_2_quad
 
	ghcb4_2
[] = {

	@codebook/hcb_5.h

31 
hcb_bö_∑ú
 
	ghcb5
[] = {

	@codebook/hcb_6.h

36 
hcb
 
	ghcb6_1
[] = {

86 
hcb_2_∑ú
 
	ghcb6_2
[] = {

	@codebook/hcb_7.h

31 
hcb_bö_∑ú
 
	ghcb7
[] = {

	@codebook/hcb_8.h

36 
hcb
 
	ghcb8_1
[] = {

90 
hcb_2_∑ú
 
	ghcb8_2
[] = {

	@codebook/hcb_9.h

31 
hcb_bö_∑ú
 
	ghcb9
[] = {

	@codebook/hcb_sf.h

31 
uöt8_t
 
	ghcb_sf
[][2] = {

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 
	#__√ed_wch¨_t


	)

12 
	#__√ed_wöt_t


	)

13 
	#__√ed_NULL


	)

14 
	~<°ddef.h
>

15 #i‚de‡
_WINT_T


20 
	#_WINT_T


	)

21 
	twöt_t
;

23 
	#__√ed_mb°©e_t


	)

24 
	~<wch¨.h
>

25 
	#_G_size_t
 
size_t


	)

28 
__off_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos_t
;

33 
__off64_t
 
	m__pos
;

34 
__mb°©e_t
 
	m__°©e
;

35 } 
	t_G_Âos64_t
;

36 
	#_G_ssize_t
 
__ssize_t


	)

37 
	#_G_off_t
 
__off_t


	)

38 
	#_G_off64_t
 
__off64_t


	)

39 
	#_G_pid_t
 
__pid_t


	)

40 
	#_G_uid_t
 
__uid_t


	)

41 
	#_G_wch¨_t
 
wch¨_t


	)

42 
	#_G_wöt_t
 
wöt_t


	)

43 
	#_G_°©64
 
°©64


	)

44 
	~<gc⁄v.h
>

47 
__gc⁄v_öfo
 
	m__cd
;

50 
__gc⁄v_öfo
 
	m__cd
;

51 
__gc⁄v_°ï_d©a
 
	m__d©a
;

52 } 
	m__comböed
;

53 } 
	t_G_ic⁄v_t
;

55 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

57 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

58 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

60 
	#_G_HAVE_BOOL
 1

	)

64 
	#_G_HAVE_ATEXIT
 1

	)

65 
	#_G_HAVE_SYS_CDEFS
 1

	)

66 
	#_G_HAVE_SYS_WAIT
 1

	)

67 
	#_G_NEED_STDARG_H
 1

	)

68 
	#_G_va_li°
 
__gnuc_va_li°


	)

70 
	#_G_HAVE_PRINTF_FP
 1

	)

71 
	#_G_HAVE_MMAP
 1

	)

72 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

73 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

74 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

76 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

78 
	#_G_OPEN64
 
__›í64


	)

79 
	#_G_LSEEK64
 
__l£ek64


	)

80 
	#_G_MMAP64
 
__mm≠64


	)

81 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

84 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

86 
	#_G_BUFSIZ
 8192

	)

89 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

90 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

91 
	#_G_USING_THUNKS
 1

	)

92 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

93 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

96 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


97 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

99 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_MISC


35 
	#CSIGNAL
 0x000000f‡

	)

36 
	#CLONE_VM
 0x00000100

	)

37 
	#CLONE_FS
 0x00000200

	)

38 
	#CLONE_FILES
 0x00000400

	)

39 
	#CLONE_SIGHAND
 0x00000800

	)

40 
	#CLONE_PTRACE
 0x00002000

	)

41 
	#CLONE_VFORK
 0x00004000

	)

43 
	#CLONE_PARENT
 0x00008000

	)

45 
	#CLONE_THREAD
 0x00010000

	)

46 
	#CLONE_NEWNS
 0x00020000

	)

47 
	#CLONE_SYSVSEM
 0x00040000

	)

48 
	#CLONE_SETTLS
 0x00080000

	)

49 
	#CLONE_PARENT_SETTID
 0x00100000

	)

51 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

53 
	#CLONE_DETACHED
 0x00400000

	)

54 
	#CLONE_UNTRACED
 0x00800000

	)

56 
	#CLONE_CHILD_SETTID
 0x01000000

	)

58 
	#CLONE_STOPPED
 0x02000000

	)

62 
	ssched_∑øm


64 
	m__sched_¥i‹ôy
;

67 
	g__BEGIN_DECLS


70 #ifde‡
__USE_MISC


71 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

72 
__Êags
, *
__¨g
Ë
__THROW
;

75 
__END_DECLS


79 #i‡!
deföed
 
__deföed_sched∑øm
 \

80 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

81 
	#__deföed_sched∑øm
 1

	)

83 
	s__sched_∑øm


85 
__sched_¥i‹ôy
;

87 #unde‡
__√ed_sched∑øm


91 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


92 
	#__˝u_£t_t_deföed


	)

94 
	#__CPU_SETSIZE
 1024

	)

95 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

98 
	t__˝u_mask
;

101 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

102 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

107 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

108 } 
	t˝u_£t_t
;

111 
	#__CPU_ZERO
(
˝u£ç
) \

113 
__i
; \

114 
˝u_£t_t
 *
__¨r
 = (
˝u£ç
); \

115 
__i
 = 0; __ò<  (
˝u_£t_t
Ë/  (
__˝u_mask
); ++__i) \

116 
__¨r
->
__bôs
[
__i
] = 0; \

117 
	}
} 0)

	)

118 
	#__CPU_SET
(
˝u
, 
˝u£ç
) \

119 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] |
	`__CPUMASK
 (˝u))

	)

120 
	#__CPU_CLR
(
˝u
, 
˝u£ç
) \

121 ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] &~
	`__CPUMASK
 (˝u))

	)

122 
	#__CPU_ISSET
(
˝u
, 
˝u£ç
) \

123 (((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
˝u
)] & 
	`__CPUMASK
 (˝u)Ë!0)

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


24 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

26 
	#__FD_ZERO
(
fd•
) \

28 
__d0
, 
__d1
; \

29 
__asm__
 
	`__vﬁ©ûe__
 ("cld;Ñep; stosl" \

30 : "=c" (
__d0
), "=D" (
__d1
) \

31 : "a" (0), "0" ( (
fd_£t
) \

32 /  (
__fd_mask
)), \

33 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

35 } 0)

	)

37 
	#__FD_SET
(
fd
, 
fd•
) \

38 
__asm__
 
	`__vﬁ©ûe__
 ("btsl %1,%0" \

39 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

40 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

41 : "cc","mem‹y")

	)

42 
	#__FD_CLR
(
fd
, 
fd•
) \

43 
__asm__
 
	`__vﬁ©ûe__
 ("btrl %1,%0" \

44 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

45 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

46 : "cc","mem‹y")

	)

47 
	#__FD_ISSET
(
fd
, 
fd•
) \

48 (
__exãnsi⁄__
 \

49 ({
__ªsu…
; \

50 
__asm__
 
	`__vﬁ©ûe__
 ("btl %1,%2 ; setcb %b0" \

51 : "=q" (
__ªsu…
) \

52 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
), \

53 "m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

55 
__ªsu…
; }))

	)

61 
	#__FD_ZERO
(
£t
) \

63 
__i
; \

64 
fd_£t
 *
__¨r
 = (
£t
); \

65 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

66 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

67 } 0)

	)

68 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

69 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

70 
	#__FD_ISSET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] & 
	`__FDMASK
 (d))

	)

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

104 
__sigadd£t
 (
__sig£t_t
 *, );

105 
__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

38 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

41 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

42 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

43 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

44 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

45 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

46 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

48 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


49 
	t_IO_acquúe_lock
(
	t_Â
) \

50 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

51 
	`_IO_Êockfûe
 (
_Â
)

	)

53 
	#_IO_ªÀa£_lock
(
_Â
) \

54 
	`_IO_fu∆ockfûe
 (
_Â
); \

55 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 
__S32_TYPE


	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__ölöe
 

191 
	$tﬁowî
 (
__c
Ë
__THROW


193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__ölöe
 

197 
	$touµî
 (
__c
Ë
__THROW


199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/gnu/stubs.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_lutimes


	)

20 
	#__°ub_ªvoke


	)

21 
	#__°ub_£éogö


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/sys/cdefs.h

19 #i‚def 
_SYS_CDEFS_H


20 
	#_SYS_CDEFS_H
 1

	)

23 #i‚de‡
_FEATURES_H


24 
	~<„©uªs.h
>

30 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


35 #unde‡
__P


36 #unde‡
__PMT


38 #ifde‡
__GNUC__


43 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

44 
	#__THROW
 
	`throw
 ()

	)

46 
	#__THROW


	)

48 
	#__P
(
¨gs
Ë¨g†
__THROW


	)

51 
	#__PMT
(
¨gs
Ë
	)
args

55 
	#__ölöe


	)

57 
	#__THROW


	)

58 
	#__P
(
¨gs
Ë
	)
args

59 
	#__PMT
(
¨gs
Ë
	)
args

61 
	#__c⁄°
 c⁄°

	)

62 
	#__sig√d
 sig√d

	)

63 
	#__vﬁ©ûe
 vﬁ©ûe

	)

70 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

71 
	#__STRING
(
x
Ë#x

	)

74 
	#__±r_t
 *

	)

75 
	#__l⁄g_doubÀ_t
 

	)

79 #ifdef 
__˝lu•lus


80 
	#__BEGIN_DECLS
 "C" {

	)

81 
	#__END_DECLS
 }

	)

83 
	#__BEGIN_DECLS


	)

84 
	#__END_DECLS


	)

93 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


94 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

95 
	#__END_NAMESPACE_STD
 }

	)

96 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

97 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

98 
	#__END_NAMESPACE_C99
 }

	)

99 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

104 
	#__BEGIN_NAMESPACE_STD


	)

105 
	#__END_NAMESPACE_STD


	)

106 
	#__USING_NAMESPACE_STD
(
«me
)

	)

107 
	#__BEGIN_NAMESPACE_C99


	)

108 
	#__END_NAMESPACE_C99


	)

109 
	#__USING_NAMESPACE_C99
(
«me
)

	)

114 #i‚de‡
__BOUNDED_POINTERS__


115 
	#__bounded


	)

116 
	#__unbounded


	)

117 
	#__±rvÆue


	)

122 #i‡
__GNUC_PREREQ
 (2,97)

124 
	#__Êex¨r
 []

	)

126 #ifde‡
__GNUC__


127 
	#__Êex¨r
 [0]

	)

129 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

130 
	#__Êex¨r
 []

	)

133 
	#__Êex¨r
 [1]

	)

149 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

151 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

152 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

153 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

166 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

167 
	#__©åibuã__
(
xyz
Ë

	)

173 #i‡
__GNUC_PREREQ
 (2,96)

174 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

176 
	#__©åibuã_mÆloc__


	)

182 #i‡
__GNUC_PREREQ
 (2,96)

183 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

185 
	#__©åibuã_puª__


	)

191 #i‡
__GNUC_PREREQ
 (3,1)

192 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

193 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

195 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

196 
	#__©åibuã_noölöe__


	)

200 #i‡
__GNUC_PREREQ
 (3,2)

201 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

203 
	#__©åibuã_dïªˇãd__


	)

212 #i‡
__GNUC_PREREQ
 (2,8)

213 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

215 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

222 #i‡
__GNUC_PREREQ
 (2,97)

223 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

224 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

226 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

233 #i‡!
__GNUC_PREREQ
 (2,8)

234 
	#__exãnsi⁄__


	)

238 #i‡!
__GNUC_PREREQ
 (2,92)

239 
	#__ª°ri˘


	)

245 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


246 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

248 #ifde‡
__GNUC__


249 
	#__ª°ri˘_¨r


	)

251 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

252 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

255 
	#__ª°ri˘_¨r


	)

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

26 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


27 
	~<löuxthªads/öã∫Æs.h
>

31 #i‡
deföed
(
_LIBC
Ë|| deföed(
_IO_MTSAFE_IO
)

32 
±hªad_muãx_t
 
	t__libc_lock_t
;

33 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

34 #ifde‡
__USE_UNIX98


35 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

37 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

39 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

41 
__libc_lock_›aque__
 
	t__libc_lock_t
;

42 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

43 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

47 
±hªad_key_t
 
	t__libc_key_t
;

56 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_t
 
NAME
;

	)

58 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

59 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

60 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

61 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

62 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

63 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

74 #ifde‡
__LT_INITIALIZER_NOT_ZERO


75 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_lock_t
 
NAME
;

	)

82 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

83 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

87 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

88 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

89 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

90 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

92 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

93 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

94 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

95 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

97 #i‡
deföed
 
_LIBC
 && deföed 
IS_IN_lib±hªad


98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
ËFUNC 
	)
ARGS

100 #i‡
deföed
 
__PIC__
 || (deföed 
_LIBC
 && deföed 
SHARED
)

101 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

102 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

103 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

105 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

106 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

109 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc
 && deföed 
SHARED


110 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
) \

111 ({
	`__buûtö_ex≥˘
 (
__libc_±hªad_fun˘i⁄s
.
±r_
##
FUNC
 !
NULL
, 0) \

112 ? 
__libc_±hªad_fun˘i⁄s
.
±r_
##
FUNC
 
ARGS
 : 
ELSE
; })

	)

114 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

119 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc
 && deföed 
SHARED


120 
	#__libc_lock_öô
(
NAME
) \

122 (
NAME
).
__m_cou¡
 = 0; \

123 (
NAME
).
__m_ow√r
 = 
NULL
; \

124 (
NAME
).
__m_köd
 = 
PTHREAD_MUTEX_TIMED_NP
; \

125 (
NAME
).
__m_lock
.
__°©us
 = 0; \

126 (
NAME
).
__m_lock
.
__•ölock
 = 
__LT_SPINLOCK_INIT
; \

127 0; })

	)

129 
	#__libc_lock_öô
(
NAME
) \

130 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

132 
	#__libc_rwlock_öô
(
NAME
) \

133 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

136 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc
 && deföed 
SHARED


137 
	#__libc_lock_öô_ªcursive
(
NAME
) \

139 (
NAME
).
muãx
.
__m_cou¡
 = 0; \

140 (
NAME
).
muãx
.
__m_ow√r
 = 
NULL
; \

141 (
NAME
).
muãx
.
__m_köd
 = 
PTHREAD_MUTEX_RECURSIVE_NP
; \

142 (
NAME
).
muãx
.
__m_lock
.
__°©us
 = 0; \

143 (
NAME
).
muãx
.
__m_lock
.
__•ölock
 = 
__LT_SPINLOCK_INIT
; \

144 0; })

	)

146 
	#__libc_lock_öô_ªcursive
(
NAME
) \

148 i‡(
__±hªad_muãx_öô
 !
NULL
) \

150 
±hªad_muãx©å_t
 
__©å
; \

151 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

152 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

153 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

154 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

156 } 0);

	)

158 
	#__πld_lock_öô_ªcursive
(
NAME
) \

159 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

164 
	#__libc_lock_föi
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

166 
	#__libc_rwlock_föi
(
NAME
) \

167 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

170 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

171 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

174 
	#__libc_lock_lock
(
NAME
) \

175 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

176 
	#__libc_rwlock_rdlock
(
NAME
) \

177 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

178 
	#__libc_rwlock_wæock
(
NAME
) \

179 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

182 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

185 
	#__libc_lock_åylock
(
NAME
) \

186 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

187 
	#__libc_rwlock_åyrdlock
(
NAME
) \

188 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

189 
	#__libc_rwlock_åywæock
(
NAME
) \

190 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

193 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

194 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

195 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

198 
	#__libc_lock_u∆ock
(
NAME
) \

199 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

200 
	#__libc_rwlock_u∆ock
(
NAME
) \

201 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

204 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

206 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


207 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

208 ++((
±hªad_muãx_t
 *)(
lock
))->
__m_cou¡
;

	)

210 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

211 --((
±hªad_muãx_t
 *)(
lock
))->
__m_cou¡
;

	)

213 
	#__πld_lock_lock_ªcursive
(
NAME
) \

214 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

216 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

217 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

219 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

220 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

224 #i‡
PTHREAD_ONCE_INIT
 == 0

227 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

228 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

230 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

231 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

235 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

237 i‡(
__±hªad_⁄˚
 !
NULL
) \

238 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

239 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

240 
	`INIT_FUNCTION
 (); \

241 (
ONCE_CONTROL
) = 2; \

243 } 0)

	)

247 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

248 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

249 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

250 i‡(
_avaû
) { \

251 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

252 }

	)

255 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

256 i‡(
_avaû
) { \

257 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

259 }

	)

262 
	#__libc_˛ónup_íd
(
DOIT
) \

263 i‡(
_avaû
) { \

264 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

265 }

	)

267 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

268 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

269 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

271 
	#__libc_˛ónup_p›
(
execuã
) \

272 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

273 }

	)

276 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

277 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

280 
	#__libc_gë•ecific
(
KEY
) \

281 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

284 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

285 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

289 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

290 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

295 
__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

296 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

298 
__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

300 
__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

302 
__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

304 
__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

306 
__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

308 
__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

310 
__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

311 
__köd
);

313 #ifde‡
__USE_UNIX98


314 
__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

315 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

317 
__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

319 
__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

321 
__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

323 
__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

325 
__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

327 
__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

330 
__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

331 (*
__de°r_fun˘i⁄
) (*));

333 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

334 
__c⁄°
 *
__poöãr
);

336 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

338 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

339 (*
__öô_routöe
) ());

341 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

342 (*
__∑ª¡
) (),

343 (*
__chûd
) ());

349 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


350 #ifde‡
wók_exã∫


351 #i‡
_LIBC


352 
	~<bp-sym.h
>

354 
	#BP_SYM
 (
sym
Ë
	)
sym

356 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

357 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

358 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

359 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

360 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

361 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

362 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

363 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

364 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

365 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

366 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

367 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

368 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

369 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

370 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

371 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

372 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

373 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

374 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

375 
	$wók_exã∫
 (
__±hªad_öôülize
)

376 
	$wók_exã∫
 (
__±hªad_©f‹k
)

377 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push
))

378 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›
))

379 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

380 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

382 #¥agm®
wók
 
__±hªad_muãx_öô


383 #¥agm®
wók
 
__±hªad_muãx_de°roy


384 #¥agm®
wók
 
__±hªad_muãx_lock


385 #¥agm®
wók
 
__±hªad_muãx_åylock


386 #¥agm®
wók
 
__±hªad_muãx_u∆ock


387 #¥agm®
wók
 
__±hªad_muãx©å_öô


388 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


389 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


390 #¥agm®
wók
 
__±hªad_rwlock_de°roy


391 #¥agm®
wók
 
__±hªad_rwlock_rdlock


392 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


393 #¥agm®
wók
 
__±hªad_rwlock_wæock


394 #¥agm®
wók
 
__±hªad_rwlock_åywæock


395 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


396 #¥agm®
wók
 
__±hªad_key_¸óã


397 #¥agm®
wók
 
__±hªad_£t•ecific


398 #¥agm®
wók
 
__±hªad_gë•ecific


399 #¥agm®
wók
 
__±hªad_⁄˚


400 #¥agm®
wók
 
__±hªad_öôülize


401 #¥agm®
wók
 
__±hªad_©f‹k


402 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


403 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


404 #¥agm®
wók
 
_±hªad_˛ónup_push


405 #¥agm®
wók
 
_±hªad_˛ónup_p›


411 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

63 
	g__gc⁄v_°ï
;

64 
	g__gc⁄v_°ï_d©a
;

65 
	g__gc⁄v_lﬂded_obje˘
;

66 
	g__gc⁄v_å™s_d©a
;

70 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

71 
	t__c⁄°
 **, __const *,

72 **, 
	tsize_t
 *, , );

75 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

78 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

79 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

83 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

84 
	t__gc⁄v_°ï_d©a
 *, *,

85 
	t__c⁄°
 *,

86 
	t__c⁄°
 **,

87 
	t__c⁄°
 *, **,

88 
	tsize_t
 *);

91 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

92 
	t__c⁄°
 *,

96 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

97 
	tsize_t
 *);

100 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

101 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

103 
	s__gc⁄v_å™s_d©a


106 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

107 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

108 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

109 *
__d©a
;

110 
__gc⁄v_å™s_d©a
 *
__√xt
;

115 
	s__gc⁄v_°ï


117 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

118 
__c⁄°
 *
__mod«me
;

120 
__cou¡î
;

122 *
__‰om_«me
;

123 *
__to_«me
;

125 
__gc⁄v_f˘
 
__f˘
;

126 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

127 
__gc⁄v_öô_f˘
 
__öô_f˘
;

128 
__gc⁄v_íd_f˘
 
__íd_f˘
;

132 
__mö_√eded_‰om
;

133 
__max_√eded_‰om
;

134 
__mö_√eded_to
;

135 
__max_√eded_to
;

138 
__°©eful
;

140 *
__d©a
;

145 
	s__gc⁄v_°ï_d©a


147 *
__outbuf
;

148 *
__outbu„nd
;

152 
__Êags
;

156 
__övoˇti⁄_cou¡î
;

160 
__öã∫Æ_u£
;

162 
__mb°©e_t
 *
__°©ï
;

163 
__mb°©e_t
 
__°©e
;

167 
__gc⁄v_å™s_d©a
 *
__å™s
;

172 
	s__gc⁄v_öfo


174 
size_t
 
__n°ïs
;

175 
__gc⁄v_°ï
 *
__°ïs
;

176 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

177 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‚de‡
__√ed_mb°©e_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #ifde‡
__USE_UNIX98


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

43 
	#__√ed_size_t


	)

44 
	#__√ed_wch¨_t


	)

45 
	#__√ed_NULL


	)

47 
	#__√ed_wöt_t


	)

48 
	~<°ddef.h
>

50 
	~<bôs/wch¨.h
>

54 #i‚de‡
_WINT_T


59 
	#_WINT_T


	)

60 
	twöt_t
;

64 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

65 && 
deföed
 
__WINT_TYPE__


66 
__BEGIN_NAMESPACE_STD


67 
__WINT_TYPE__
 
	twöt_t
;

68 
	g__END_NAMESPACE_STD


73 #i‚de‡
__mb°©e_t_deföed


74 
	#__mb°©e_t_deföed
 1

	)

78 
	m__cou¡
;

81 
wöt_t
 
	m__wch
;

82 
	m__wchb
[4];

83 } 
	m__vÆue
;

84 } 
	t__mb°©e_t
;

86 #unde‡
__√ed_mb°©e_t


91 #ifde‡
_WCHAR_H


93 
__BEGIN_NAMESPACE_C99


95 
__mb°©e_t
 
	tmb°©e_t
;

96 
	g__END_NAMESPACE_C99


97 #ifde‡
__USE_GNU


98 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

101 #i‚de‡
WCHAR_MIN


103 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

104 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

107 #i‚de‡
WEOF


108 
	#WEOF
 (0xffffffffu)

	)

113 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


114 
	~<w˘y≥.h
>

118 
__BEGIN_DECLS


120 
__BEGIN_NAMESPACE_STD


123 
tm
;

127 
	$__USING_NAMESPACE_STD
(
tm
)

128 
__END_NAMESPACE_STD


131 
__BEGIN_NAMESPACE_C99


133 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

134 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

136 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

137 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

138 
__THROW
;

141 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

142 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

144 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

146 
__THROW
;

149 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

150 
__THROW
 
__©åibuã_puª__
;

152 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

153 
__THROW
 
__©åibuã_puª__
;

154 
__END_NAMESPACE_C99


156 #ifde‡
__USE_GNU


158 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

161 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

162 
size_t
 
__n
Ë
__THROW
;

166 
	~<xloˇÀ.h
>

168 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

169 
__loˇÀ_t
 
__loc
Ë
__THROW
;

171 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

172 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

175 
__BEGIN_NAMESPACE_C99


178 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

182 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

184 
__END_NAMESPACE_C99


186 #ifde‡
__USE_GNU


192 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

193 
__loˇÀ_t
 
__loc
Ë
__THROW
;

198 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

199 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

202 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

205 
__BEGIN_NAMESPACE_C99


207 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

208 
__THROW
 
__©åibuã_puª__
;

210 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

211 
__THROW
 
__©åibuã_puª__
;

212 
__END_NAMESPACE_C99


214 #ifde‡
__USE_GNU


217 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

218 
__THROW
 
__©åibuã_puª__
;

221 
__BEGIN_NAMESPACE_C99


224 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

225 
__THROW
 
__©åibuã_puª__
;

228 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

229 
__THROW
 
__©åibuã_puª__
;

231 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

232 
__THROW
 
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

235 
__THROW
 
__©åibuã_puª__
;

238 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

240 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

243 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

244 
__END_NAMESPACE_C99


246 #ifde‡
__USE_XOPEN


248 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

249 
__THROW
 
__©åibuã_puª__
;

252 #ifde‡
__USE_GNU


254 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

255 
__THROW
 
__©åibuã_puª__
;

259 
__BEGIN_NAMESPACE_C99


261 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

262 
__THROW
 
__©åibuã_puª__
;

265 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

266 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

267 
__THROW
 
__©åibuã_puª__
;

270 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

271 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

275 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

276 
__THROW
;

279 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

280 
__END_NAMESPACE_C99


282 #ifde‡
__USE_GNU


285 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

286 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

287 
__THROW
;

291 
__BEGIN_NAMESPACE_C99


294 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

298 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

302 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

306 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

307 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

308 
mb°©e_t
 *
__p
Ë
__THROW
;

311 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

312 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

315 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

317 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

318 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

319 
__END_NAMESPACE_C99


321 #ifde‡
__USE_EXTERN_INLINES


323 
__ölöe
 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

324 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW


325 {  (
__ps
 !
NULL


326 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

329 
__BEGIN_NAMESPACE_C99


332 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

333 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

334 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

338 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

339 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

340 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

341 
__END_NAMESPACE_C99


344 #ifdef 
__USE_GNU


347 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

348 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

349 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

353 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

354 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

355 
size_t
 
__nwc
, size_à
__Àn
,

356 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

361 #ifde‡
__USE_XOPEN


363 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

367 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

371 
__BEGIN_NAMESPACE_C99


374 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

375 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

377 #ifde‡
__USE_ISOC99


379 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

380 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

381 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

382 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

388 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

389 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

393 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

394 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

395 
__THROW
;

397 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

400 
__exãnsi⁄__


401 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

402 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

403 
__THROW
;

407 
__exãnsi⁄__


408 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

409 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

410 
__ba£
Ë
__THROW
;

412 
__END_NAMESPACE_C99


414 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


417 
__exãnsi⁄__


418 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

419 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

420 
__THROW
;

424 
__exãnsi⁄__


425 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

426 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

427 
__ba£
Ë
__THROW
;

430 #ifde‡
__USE_GNU


444 
	~<xloˇÀ.h
>

448 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

450 
__loˇÀ_t
 
__loc
Ë
__THROW
;

452 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

453 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

454 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

456 
__exãnsi⁄__


457 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

459 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

461 
__exãnsi⁄__


462 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

464 
__ba£
, 
__loˇÀ_t
 
__loc
)

465 
__THROW
;

467 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

468 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

469 
__THROW
;

471 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

473 
__THROW
;

475 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

476 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

477 
__loˇÀ_t
 
__loc
Ë
__THROW
;

483 
	$__wc°od_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

485 
__THROW
;

486 
	$__wc°of_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

488 
__THROW
;

489 
	$__wc°ﬁd_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

490 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

491 
__group
Ë
__THROW
;

493 #i‚de‡
__wc°ﬁ_öã∫Æ_deföed


494 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

495 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

496 
__ba£
, 
__group
Ë
__THROW
;

497 
	#__wc°ﬁ_öã∫Æ_deföed
 1

	)

499 #i‚de‡
__wc°oul_öã∫Æ_deföed


500 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈t
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

502 
__ba£
, 
__group
Ë
__THROW
;

503 
	#__wc°oul_öã∫Æ_deföed
 1

	)

505 #i‚de‡
__wc°ﬁl_öã∫Æ_deföed


506 
__exãnsi⁄__


507 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
, 
__group
Ë
__THROW
;

510 
	#__wc°ﬁl_öã∫Æ_deföed
 1

	)

512 #i‚de‡
__wc°ouŒ_öã∫Æ_deföed


513 
__exãnsi⁄__


514 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *

515 
__ª°ri˘
 
__≈å
,

516 
wch¨_t
 **

517 
__ª°ri˘
 
__íd±r
,

518 
__ba£
,

519 
__group
Ë
__THROW
;

520 
	#__wc°ouŒ_öã∫Æ_deföed
 1

	)

524 #i‡
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

526 
__BEGIN_NAMESPACE_C99


528 
__ölöe
 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW


530 {  
	`__wc°od_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

531 
__ölöe
 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
Ë
__THROW


534 {  
	`__wc°ﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

535 
__ölöe
 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

536 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

537 
__ba£
Ë
__THROW


538 {  
	`__wc°oul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

539 
__END_NAMESPACE_C99


541 #ifde‡
__USE_GNU


542 
__ölöe
 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW


544 {  
	`__wc°of_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

545 
__ölöe
 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

546 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW


547 {  
	`__wc°ﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

550 
__exãnsi⁄__


551 
__ölöe
 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

553 
__ba£
Ë
__THROW


554 {  
	`__wc°ﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

555 
__exãnsi⁄__


556 
__ölöe
 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *

557 
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__ba£
Ë
__THROW


560 {  
	`__wc°ouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

565 #ifdef 
__USE_GNU


568 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

572 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

573 
__THROW
;

578 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


579 
__BEGIN_NAMESPACE_C99


582 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

589 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

590 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

596 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

600 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
__THROW
 ;

607 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

608 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

609 
__gnuc_va_li°
 
__¨g
)

615 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

616 
__gnuc_va_li°
 
__¨g
)

620 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

621 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

622 
__gnuc_va_li°
 
__¨g
)

623 
__THROW
 ;

630 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

631 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

637 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

641 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
__THROW
 ;

644 
__END_NAMESPACE_C99


647 #ifde‡
__USE_ISOC99


648 
__BEGIN_NAMESPACE_C99


654 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

656 
__gnuc_va_li°
 
__¨g
)

662 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

663 
__gnuc_va_li°
 
__¨g
)

666 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 
__gnuc_va_li°
 
__¨g
)

669 
__THROW
 ;

671 
__END_NAMESPACE_C99


675 
__BEGIN_NAMESPACE_C99


680 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

681 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

687 
wöt_t
 
	`gëwch¨
 ();

694 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

695 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

701 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

709 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

710 
__FILE
 *
__ª°ri˘
 
__°ªam
);

716 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

717 
__FILE
 *
__ª°ri˘
 
__°ªam
);

724 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

725 
__END_NAMESPACE_C99


728 #ifde‡
__USE_GNU


736 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

737 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

745 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

753 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

762 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
__BEGIN_NAMESPACE_C99


790 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

791 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

792 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

793 
__END_NAMESPACE_C99


795 #ifde‡
__USE_GNU


796 
	~<xloˇÀ.h
>

800 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

801 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

802 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

803 
__loˇÀ_t
 
__loc
Ë
__THROW
;

812 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


813 
	#__√ed_iswxxx


	)

814 
	~<w˘y≥.h
>

817 
__END_DECLS


	@/usr/include/pthread.h

15 #i‚de‡
_PTHREAD_H


16 
	#_PTHREAD_H
 1

	)

18 
	~<„©uªs.h
>

20 
	~<sched.h
>

21 
	~<time.h
>

23 
	#__√ed_sig£t_t


	)

24 
	~<sig«l.h
>

25 
	~<bôs/±hªadty≥s.h
>

26 
	~<bôs/öô•ö.h
>

29 
	g__BEGIN_DECLS


33 
	#PTHREAD_MUTEX_INITIALIZER
 \

34 {0, 0, 0, 
PTHREAD_MUTEX_TIMED_NP
, 
__LOCK_INITIALIZER
}

	)

35 #ifde‡
__USE_GNU


36 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

37 {0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__LOCK_INITIALIZER
}

	)

38 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

39 {0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__LOCK_INITIALIZER
}

	)

40 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

41 {0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__LOCK_INITIALIZER
}

	)

44 
	#PTHREAD_COND_INITIALIZER
 {
__LOCK_INITIALIZER
, 0, "", 0}

	)

46 #ifde‡
__USE_UNIX98


47 
	#PTHREAD_RWLOCK_INITIALIZER
 \

48 { 
__LOCK_INITIALIZER
, 0, 
NULL
, NULL, NULL, \

49 
PTHREAD_RWLOCK_DEFAULT_NP
, 
PTHREAD_PROCESS_PRIVATE
 }

	)

51 #ifde‡
__USE_GNU


52 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

53 { 
__LOCK_INITIALIZER
, 0, 
NULL
, NULL, NULL, \

54 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, 
PTHREAD_PROCESS_PRIVATE
 }

	)

61 
	mPTHREAD_CREATE_JOINABLE
,

62 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

63 
	mPTHREAD_CREATE_DETACHED


64 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

69 
	mPTHREAD_INHERIT_SCHED
,

70 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

71 
	mPTHREAD_EXPLICIT_SCHED


72 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

77 
	mPTHREAD_SCOPE_SYSTEM
,

78 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

79 
	mPTHREAD_SCOPE_PROCESS


80 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

85 
	mPTHREAD_MUTEX_TIMED_NP
,

86 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

87 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

88 
	mPTHREAD_MUTEX_ADAPTIVE_NP


89 #ifde‡
__USE_UNIX98


91 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

92 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

93 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

94 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


96 #ifde‡
__USE_GNU


98 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_ADAPTIVE_NP


104 
	mPTHREAD_PROCESS_PRIVATE
,

105 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

106 
	mPTHREAD_PROCESS_SHARED


107 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

110 #ifde‡
__USE_UNIX98


113 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

114 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

115 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

116 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_WRITER_NP


120 
	#PTHREAD_ONCE_INIT
 0

	)

124 #ifde‡
__USE_XOPEN2K


126 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

131 
	s_±hªad_˛ónup_buf„r


133 (*
	m__routöe
) (*);

134 *
	m__¨g
;

135 
	m__ˇn˚…y≥
;

136 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

143 
	mPTHREAD_CANCEL_ENABLE
,

144 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

145 
	mPTHREAD_CANCEL_DISABLE


146 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

150 
	mPTHREAD_CANCEL_DEFERRED
,

151 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

152 
	mPTHREAD_CANCEL_ASYNCHRONOUS


153 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

155 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

163 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__thªadp
,

164 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

165 *(*
__°¨t_routöe
) (*),

166 *
__ª°ri˘
 
__¨g
Ë
__THROW
;

169 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
;

172 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

175 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

180 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

186 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

194 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
;

197 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
;

200 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

201 
__dëach°©e
Ë
__THROW
;

204 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

205 *
__dëach°©e
Ë
__THROW
;

208 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

209 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


210 
__∑øm
Ë
__THROW
;

213 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


214 
__©å
,

215 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

216 
__THROW
;

219 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

220 
__THROW
;

223 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


224 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

225 
__THROW
;

228 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

229 
__öhîô
Ë
__THROW
;

232 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


233 
__©å
, *
__ª°ri˘
 
__öhîô
)

234 
__THROW
;

237 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

238 
__THROW
;

241 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

242 *
__ª°ri˘
 
__sc›e
Ë
__THROW
;

244 #ifde‡
__USE_UNIX98


246 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

247 
size_t
 
__gu¨dsize
Ë
__THROW
;

250 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


251 
__©å
, 
size_t
 *
__ª°ri˘
 
__gu¨dsize
)

252 
__THROW
;

259 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

260 *
__°ackaddr
Ë
__THROW
;

263 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


264 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

265 
__THROW
;

267 #ifde‡
__USE_XOPEN2K


271 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

272 
size_t
 
__°acksize
Ë
__THROW
;

275 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

276 **
__ª°ri˘
 
__°ackaddr
,

277 
size_t
 *
__ª°ri˘
 
__°acksize
Ë
__THROW
;

283 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

284 
size_t
 
__°acksize
Ë
__THROW
;

287 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


288 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

289 
__THROW
;

291 #ifde‡
__USE_GNU


295 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
Ë
__THROW
;

302 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

303 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

304 
__THROW
;

307 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

308 *
__ª°ri˘
 
__pﬁicy
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
;

312 #ifde‡
__USE_UNIX98


314 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

317 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

320 #ifde‡
__USE_GNU


325 
	$±hªad_yõld
 (Ë
__THROW
;

332 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

333 
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


334 
__muãx_©å
Ë
__THROW
;

337 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

340 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

343 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

345 #ifde‡
__USE_XOPEN2K


347 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

348 
__c⁄°
 
time•ec
 *
__ª°ri˘


349 
__ab°ime
Ë
__THROW
;

353 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

360 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
Ë
__THROW
;

363 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
Ë
__THROW
;

366 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

367 
__ª°ri˘
 
__©å
,

368 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

371 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

372 
__psh¨ed
Ë
__THROW
;

374 #ifde‡
__USE_UNIX98


378 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

379 
__THROW
;

382 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


383 
__©å
, *
__ª°ri˘
 
__köd
Ë
__THROW
;

391 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

392 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


393 
__c⁄d_©å
Ë
__THROW
;

396 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

399 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

402 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

406 
	`±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

407 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
);

413 
	`±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

414 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

415 
__c⁄°
 
time•ec
 *
__ª°ri˘


416 
__ab°ime
);

421 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
Ë
__THROW
;

424 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
Ë
__THROW
;

427 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

428 
__ª°ri˘
 
__©å
,

429 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

432 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

433 
__psh¨ed
Ë
__THROW
;

436 #ifde‡
__USE_UNIX98


441 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

442 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


443 
__©å
Ë
__THROW
;

446 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

449 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

452 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

454 #ifde‡
__USE_XOPEN2K


456 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

457 
__c⁄°
 
time•ec
 *
__ª°ri˘


458 
__ab°ime
Ë
__THROW
;

462 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

465 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

467 #ifde‡
__USE_XOPEN2K


469 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

470 
__c⁄°
 
time•ec
 *
__ª°ri˘


471 
__ab°ime
Ë
__THROW
;

475 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

481 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
Ë
__THROW
;

484 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
Ë
__THROW
;

487 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

488 
__ª°ri˘
 
__©å
,

489 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

492 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

493 
__psh¨ed
Ë
__THROW
;

496 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
,

497 *
__¥ef
Ë
__THROW
;

500 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

501 
__¥ef
Ë
__THROW
;

504 #ifde‡
__USE_XOPEN2K


510 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

511 
__THROW
;

514 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

517 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

520 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

523 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

528 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

529 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


530 
__©å
, 
__cou¡
Ë
__THROW
;

532 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
Ë
__THROW
;

534 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
Ë
__THROW
;

536 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
Ë
__THROW
;

538 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

539 
__ª°ri˘
 
__©å
,

540 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

542 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

543 
__psh¨ed
Ë
__THROW
;

545 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
Ë
__THROW
;

557 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

558 (*
__de°r_fun˘i⁄
Ë(*)Ë
__THROW
;

561 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

564 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

565 
__c⁄°
 *
__poöãr
Ë
__THROW
;

568 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

577 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

578 (*
__öô_routöe
Ë()Ë
__THROW
;

585 
	$±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
Ë
__THROW
;

589 
	$±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
Ë
__THROW
;

592 
	$±hªad_ˇn˚l
 (
±hªad_t
 
__ˇn˚…hªad
Ë
__THROW
;

597 
	$±hªad_ã°ˇn˚l
 (Ë
__THROW
;

607 
	#±hªad_˛ónup_push
(
routöe
,
¨g
) \

608 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

609 
	`_±hªad_˛ónup_push
 (&
_buf„r
, (
routöe
), (
¨g
));

	)

611 
	`_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

612 (*
__routöe
) (*),

613 *
__¨g
Ë
__THROW
;

618 
	#±hªad_˛ónup_p›
(
execuã
) \

619 
	`_±hªad_˛ónup_p›
 (&
_buf„r
, (
execuã
)); 
	}

	)
}

621 
	$_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

622 
__execuã
Ë
__THROW
;

627 #ifde‡
__USE_GNU


628 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
,
¨g
) \

629 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

630 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
routöe
), (
¨g
));

	)

632 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

633 (*
__routöe
) (*),

634 *
__¨g
Ë
__THROW
;

640 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

641 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
execuã
)); 
	}

	)
}

643 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

644 
__execuã
Ë
__THROW
;

648 #ifde‡
__USE_XOPEN2K


650 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

651 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

656 
	~<bôs/sigthªad.h
>

672 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

673 (*
__∑ª¡
) (),

674 (*
__chûd
Ë()Ë
__THROW
;

679 
	$±hªad_kûl_Ÿhî_thªads_≈
 (Ë
__THROW
;

681 
__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

34 
	#__√ed_wöt_t


	)

35 
	~<°ddef.h
>

36 #i‚de‡
_WINT_T


41 
	#_WINT_T


	)

42 
	twöt_t
;

44 #ifde‡
__USE_ISOC99


45 
	$__USING_NAMESPACE_C99
(
wöt_t
)

47 
__END_NAMESPACE_C99


52 #i‚de‡
WEOF


53 
	#WEOF
 (0xffffffffu)

	)

56 #unde‡
__√ed_iswxxx


61 #i‚de‡
__iswxxx_deföed


62 
	#__iswxxx_deföed
 1

	)

64 
__BEGIN_NAMESPACE_C99


67 
	tw˘y≥_t
;

68 
__END_NAMESPACE_C99


70 #i‚de‡
_ISwbô


75 
	~<ídün.h
>

76 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


77 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

79 
	#_ISwbô
(
bô
) \

80 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

81 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

82 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

83 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

88 
__ISwuµî
 = 0,

89 
__ISwlowî
 = 1,

90 
__ISwÆpha
 = 2,

91 
__ISwdigô
 = 3,

92 
__ISwxdigô
 = 4,

93 
__ISw•a˚
 = 5,

94 
__ISw¥öt
 = 6,

95 
__ISwgøph
 = 7,

96 
__ISwbœnk
 = 8,

97 
__ISw˙ål
 = 9,

98 
__ISwpun˘
 = 10,

99 
__ISwÆnum
 = 11,

101 
_ISwuµî
 = 
	`_ISwbô
 (
__ISwuµî
),

102 
_ISwlowî
 = 
	`_ISwbô
 (
__ISwlowî
),

103 
_ISwÆpha
 = 
	`_ISwbô
 (
__ISwÆpha
),

104 
_ISwdigô
 = 
	`_ISwbô
 (
__ISwdigô
),

105 
_ISwxdigô
 = 
	`_ISwbô
 (
__ISwxdigô
),

106 
_ISw•a˚
 = 
	`_ISwbô
 (
__ISw•a˚
),

107 
_ISw¥öt
 = 
	`_ISwbô
 (
__ISw¥öt
),

108 
_ISwgøph
 = 
	`_ISwbô
 (
__ISwgøph
),

109 
_ISwbœnk
 = 
	`_ISwbô
 (
__ISwbœnk
),

110 
_ISw˙ål
 = 
	`_ISwbô
 (
__ISw˙ål
),

111 
_ISwpun˘
 = 
	`_ISwbô
 (
__ISwpun˘
),

112 
_ISwÆnum
 = 
	`_ISwbô
 (
__ISwÆnum
)

117 
__BEGIN_DECLS


119 
__BEGIN_NAMESPACE_C99


126 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

132 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

135 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

139 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

143 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

148 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

161 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

166 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

176 #ifde‡
__USE_ISOC99


177 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

186 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

190 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

191 
__END_NAMESPACE_C99


198 
__BEGIN_NAMESPACE_C99


201 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

202 
__END_NAMESPACE_C99


203 #ifde‡
__USE_GNU


204 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

207 
__BEGIN_NAMESPACE_C99


209 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

212 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

213 
__END_NAMESPACE_C99


215 
__END_DECLS


222 #ifde‡
_WCTYPE_H


228 
__BEGIN_DECLS


230 
__BEGIN_NAMESPACE_C99


233 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

236 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

237 
__END_NAMESPACE_C99


239 #ifde‡
__USE_GNU


241 
	~<xloˇÀ.h
>

245 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

251 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

254 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

258 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

262 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

267 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

290 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

295 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

299 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

300 
__THROW
;

304 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

305 
__THROW
;

313 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

316 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

320 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

321 
__THROW
;

324 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

325 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

329 
__END_DECLS


	@/usr/include/bits/initspin.h

23 
	#__LT_SPINLOCK_INIT
 0

	)

26 
	#__LOCK_INITIALIZER
 { 0, 
__LT_SPINLOCK_INIT
 }

	)

27 
	#__ALT_LOCK_INITIALIZER
 { 0, 
__LT_SPINLOCK_INIT
 }

	)

28 
	#__ATOMIC_INITIALIZER
 { 0, 
__LT_SPINLOCK_INIT
 }

	)

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_time•ec


	)

29 
	~<time.h
>

32 
	~<bôs/sched.h
>

34 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

37 
__BEGIN_DECLS


40 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

41 
__THROW
;

44 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

47 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

48 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

51 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

54 
	$sched_yõld
 (Ë
__THROW
;

57 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

66 #ifde‡
__USE_GNU


68 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

69 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET
 (˝u, cpu£ç)

	)

70 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR
 (˝u, cpu£ç)

	)

71 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET
 (˝u, cpu£ç)

	)

72 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO
 (˝u£ç)

	)

76 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

77 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

80 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

81 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

84 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #ifde‡
__USE_XOPEN


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #i‚de‡
__uid_t_deföed


66 
__uid_t
 
	tuid_t
;

67 
	#__uid_t_deföed


	)

73 (*
	t__sigh™dÀr_t
) ();

78 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

79 
__THROW
;

80 #ifde‡
__USE_GNU


81 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

82 
__THROW
;

88 
__BEGIN_NAMESPACE_STD


89 #ifde‡
__USE_BSD


90 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
Ë
__THROW
;

93 #ifde‡
__REDIRECT


94 
__sigh™dÀr_t
 
	`__REDIRECT
 (
sig«l
,

95 (
__sig
,

96 
__sigh™dÀr_t
 
__h™dÀr
Ë
__THROW
,

97 
__sysv_sig«l
);

99 
	#sig«l
 
__sysv_sig«l


	)

102 
__END_NAMESPACE_STD


104 #ifde‡
__USE_XOPEN


107 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
Ë
__THROW
;

113 #ifde‡
__USE_POSIX


114 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

117 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


121 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

124 
__BEGIN_NAMESPACE_STD


126 
	$øi£
 (
__sig
Ë
__THROW
;

127 
__END_NAMESPACE_STD


129 #ifde‡
__USE_SVID


131 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
Ë
__THROW
;

132 
	$gsig«l
 (
__sig
Ë
__THROW
;

135 #ifde‡
__USE_MISC


137 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

149 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

151 #ifde‡
__USE_BSD


154 
	$sig∑u£
 (
__mask
Ë
__THROW
;

155 
	#sig∑u£
(
mask
Ë
	`__sig∑u£
 ((mask), 0)

	)

157 #ifde‡
__USE_XOPEN


158 #ifde‡
__GNUC__


159 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

162 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

167 #ifde‡
__USE_BSD


174 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

177 
	$sigblock
 (
__mask
Ë
__THROW
;

180 
	$sig£tmask
 (
__mask
Ë
__THROW
;

183 
	$siggëmask
 (Ë
__THROW
;

187 #ifde‡
__USE_MISC


188 
	#NSIG
 
_NSIG


	)

191 #ifde‡
__USE_GNU


192 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

196 #ifde‡
__USE_BSD


197 
__sigh™dÀr_t
 
	tsig_t
;

200 #ifde‡
__USE_POSIX


202 #ifde‡
__USE_POSIX199309


204 
	#__√ed_time•ec


	)

205 
	~<time.h
>

208 
	~<bôs/sigöfo.h
>

212 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
;

215 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
;

218 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
;

221 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
;

224 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
;

226 #ifde‡
__USE_GNU


228 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
;

231 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

232 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
;

235 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

236 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
;

241 
	~<bôs/siga˘i⁄.h
>

244 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

245 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

252 
	`sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
);

255 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

256 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

259 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
;

266 
	`sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
);

268 #ifde‡
__USE_POSIX199309


273 
	`sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

274 
sigöfo_t
 *
__ª°ri˘
 
__öfo
);

281 
	`sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

282 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

283 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
);

287 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

288 
__THROW
;

293 #ifde‡
__USE_BSD


297 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

298 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

301 
	ssigvec


303 
__sigh™dÀr_t
 
sv_h™dÀr
;

304 
sv_mask
;

306 
sv_Êags
;

307 
	#sv_⁄°ack
 
sv_Êags


	)

311 
	#SV_ONSTACK
 (1 << 0)

	)

312 
	#SV_INTERRUPT
 (1 << 1)

	)

313 
	#SV_RESETHAND
 (1 << 2)

	)

321 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

322 
sigvec
 *
__ovec
Ë
__THROW
;

326 
	~<bôs/sigc⁄ãxt.h
>

329 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

334 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


339 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

341 
	~<bôs/sig°ack.h
>

342 #ifde‡
__USE_XOPEN


344 
	~<sys/uc⁄ãxt.h
>

350 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
Ë
__THROW
;

354 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

355 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

359 #ifde‡
__USE_XOPEN_EXTENDED


363 
	$sighﬁd
 (
__sig
Ë
__THROW
;

366 
	$sigªl£
 (
__sig
Ë
__THROW
;

369 
	$sigign‹e
 (
__sig
Ë
__THROW
;

372 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

375 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


378 
	~<bôs/±hªadty≥s.h
>

379 
	~<bôs/sigthªad.h
>

386 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

388 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

392 
__END_DECLS


	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


23 #i‚de‡
sigc⁄ãxt_°ru˘


26 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

28 
	~<asm/sigc⁄ãxt.h
>

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

27 
	~<bôs/sigc⁄ãxt.h
>

31 
	tgªg_t
;

34 
	#NGREG
 19

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_GS
 = 0,

44 
	#REG_GS
 
REG_GS


	)

45 
	mREG_FS
,

46 
	#REG_FS
 
REG_FS


	)

47 
	mREG_ES
,

48 
	#REG_ES
 
REG_ES


	)

49 
	mREG_DS
,

50 
	#REG_DS
 
REG_DS


	)

51 
	mREG_EDI
,

52 
	#REG_EDI
 
REG_EDI


	)

53 
	mREG_ESI
,

54 
	#REG_ESI
 
REG_ESI


	)

55 
	mREG_EBP
,

56 
	#REG_EBP
 
REG_EBP


	)

57 
	mREG_ESP
,

58 
	#REG_ESP
 
REG_ESP


	)

59 
	mREG_EBX
,

60 
	#REG_EBX
 
REG_EBX


	)

61 
	mREG_EDX
,

62 
	#REG_EDX
 
REG_EDX


	)

63 
	mREG_ECX
,

64 
	#REG_ECX
 
REG_ECX


	)

65 
	mREG_EAX
,

66 
	#REG_EAX
 
REG_EAX


	)

67 
	mREG_TRAPNO
,

68 
	#REG_TRAPNO
 
REG_TRAPNO


	)

69 
	mREG_ERR
,

70 
	#REG_ERR
 
REG_ERR


	)

71 
	mREG_EIP
,

72 
	#REG_EIP
 
REG_EIP


	)

73 
	mREG_CS
,

74 
	#REG_CS
 
REG_CS


	)

75 
	mREG_EFL
,

76 
	#REG_EFL
 
REG_EFL


	)

77 
	mREG_UESP
,

78 
	#REG_UESP
 
REG_UESP


	)

79 
	mREG_SS


80 
	#REG_SS
 
REG_SS


	)

85 
	s_libc_Âªg


87 
	msignifiˇnd
[4];

88 
	mexp⁄ít
;

91 
	s_libc_Â°©e


93 
	mcw
;

94 
	msw
;

95 
	mèg
;

96 
	mùoff
;

97 
	mcs£l
;

98 
	md©aoff
;

99 
	md©a£l
;

100 
_libc_Âªg
 
	m_°
[8];

101 
	m°©us
;

105 
_libc_Â°©e
 *
	tÂªg£t_t
;

110 
gªg£t_t
 
	mgªgs
;

113 
Âªg£t_t
 
	mÂªgs
;

114 
	mﬁdmask
;

115 
	m¸2
;

116 } 
	tmc⁄ãxt_t
;

119 
	suc⁄ãxt


121 
	muc_Êags
;

122 
uc⁄ãxt
 *
	muc_lök
;

123 
°ack_t
 
	muc_°ack
;

124 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

125 
__sig£t_t
 
	muc_sigmask
;

126 
_libc_Â°©e
 
	m__Âªgs_mem
;

127 } 
	tuc⁄ãxt_t
;

	@/usr/include/asm/sigcontext.h

1 #i‚de‡
_ASMi386_SIGCONTEXT_H


2 
	#_ASMi386_SIGCONTEXT_H


	)

4 
	~<löux/compûî.h
>

20 
	s_Âªg
 {

21 
	msignifiˇnd
[4];

22 
	mexp⁄ít
;

25 
	s_Âxªg
 {

26 
	msignifiˇnd
[4];

27 
	mexp⁄ít
;

28 
	m∑ddög
[3];

31 
	s_xmmªg
 {

32 
	mñemít
[4];

35 
	s_Â°©e
 {

37 
	mcw
;

38 
	msw
;

39 
	mèg
;

40 
	mùoff
;

41 
	mcs£l
;

42 
	md©aoff
;

43 
	md©a£l
;

44 
_Âªg
 
	m_°
[8];

45 
	m°©us
;

46 
	mmagic
;

49 
	m_fx§_ív
[6];

50 
	mmxc§
;

51 
	mª£rved
;

52 
_Âxªg
 
	m_fx§_°
[8];

53 
_xmmªg
 
	m_xmm
[8];

54 
	m∑ddög
[56];

57 
	#X86_FXSR_MAGIC
 0x0000

	)

59 
	ssigc⁄ãxt
 {

60 
	mgs
, 
	m__gsh
;

61 
	mfs
, 
	m__fsh
;

62 
	mes
, 
	m__esh
;

63 
	mds
, 
	m__dsh
;

64 
	medi
;

65 
	mesi
;

66 
	mebp
;

67 
	me•
;

68 
	mebx
;

69 
	medx
;

70 
	mecx
;

71 
	móx
;

72 
	må≠no
;

73 
	mîr
;

74 
	meù
;

75 
	mcs
, 
	m__csh
;

76 
	meÊags
;

77 
	me•_©_sig«l
;

78 
	mss
, 
	m__ssh
;

79 
_Â°©e
 
__u£r
 * 
	mÂ°©e
;

80 
	mﬁdmask
;

81 
	m¸2
;

	@/usr/include/linux/compiler.h

1 #i‚de‡
__LINUX_COMPILER_H


2 
	#__LINUX_COMPILER_H


	)

4 #ifde‡
__CHECKER__


5 
	#__u£r
 
	`__©åibuã__
((
nodîef
, 
	`addªss_•a˚
(1)))

	)

6 
	#__kî√l


	)

8 
	#__u£r


	)

9 
	#__kî√l


	)

12 #i‡!
deföed
(
__KERNEL__
)

17 
	~<sys/cdefs.h
>

18 
	#__dïªˇãd


	)

21 #i‡
__GNUC__
 > 3

22 
	~<löux/compûî-gcc+.h
>

23 #ñi‡
__GNUC__
 == 3

24 
	~<löux/compûî-gcc3.h
>

25 #ñi‡
__GNUC__
 == 2

26 
	~<löux/compûî-gcc2.h
>

28 #îr‹ 
S‹ry
, 
your
 
compûî
 
is
 
too
 
ﬁd
/
nŸ
 
ªcognized
.

34 #ifde‡
__INTEL_COMPILER


35 
	~<löux/compûî-öãl.h
>

44 
	#likñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 1)

	)

45 
	#u∆ikñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 0)

	)

53 #i‚de‡
__dïªˇãd


54 
	#__dïªˇãd


	)

68 #i‚de‡
__©åibuã_u£d__


69 
	#__©åibuã_u£d__


	)

82 #i‚de‡
__©åibuã_puª__


83 
	#__©åibuã_puª__


	)

87 #i‚de‡
b¨rõr


88 
	#b¨rõr
(Ë
	`__mem‹y_b¨rõr
()

	)

91 #i‚de‡
RELOC_HIDE


92 
	#RELOC_HIDE
(
±r
, 
off
) \

93 ({ 
__±r
; \

94 
__±r
 = (Ë(
±r
); \

95 (
	`ty≥of
(
±r
)Ë(
__±r
 + (
off
)); })

	)

	@/usr/include/linux/compiler-gcc+.h

7 
	~<löux/compûî-gcc.h
>

9 
	#ölöe
 
__ölöe__
 
	`__©åibuã__
((
Æways_ölöe
))

	)

10 
	#__ölöe__
 
__ölöe__
 
	`__©åibuã__
((
Æways_ölöe
))

	)

11 
	#__ölöe
 
__ölöe__
 
	`__©åibuã__
((
Æways_ölöe
))

	)

12 
	#__dïªˇãd
 
	`__©åibuã__
((
dïªˇãd
))

	)

13 
	#__©åibuã_u£d__
 
	`__©åibuã__
((
__u£d__
))

	)

14 
	#__©åibuã_puª__
 
	`__©åibuã__
((
puª
))

	)

	@/usr/include/linux/compiler-gcc2.h

9 
	~<löux/compûî-gcc.h
>

11 #i‡
__GNUC_MINOR__
 < 96

12 
	#__buûtö_ex≥˘
(
x
, 
ex≥˘ed_vÆue
Ë(x)

	)

15 
	#__©åibuã_u£d__
 
	`__©åibuã__
((
__unu£d__
))

	)

21 #i‡
__GNUC_MINOR__
 >= 96

22 
	#__©åibuã_puª__
 
	`__©åibuã__
((
puª
))

	)

	@/usr/include/linux/compiler-gcc3.h

4 
	~<löux/compûî-gcc.h
>

6 #i‡
__GNUC_MINOR__
 >= 1

7 
	#ölöe
 
__ölöe__
 
	`__©åibuã__
((
Æways_ölöe
))

	)

8 
	#__ölöe__
 
__ölöe__
 
	`__©åibuã__
((
Æways_ölöe
))

	)

9 
	#__ölöe
 
__ölöe__
 
	`__©åibuã__
((
Æways_ölöe
))

	)

12 #i‡
__GNUC_MINOR__
 > 0

13 
	#__dïªˇãd
 
	`__©åibuã__
((
dïªˇãd
))

	)

16 #i‡
__GNUC_MINOR__
 >= 3

17 
	#__©åibuã_u£d__
 
	`__©åibuã__
((
__u£d__
))

	)

19 
	#__©åibuã_u£d__
 
	`__©åibuã__
((
__unu£d__
))

	)

22 
	#__©åibuã_puª__
 
	`__©åibuã__
((
puª
))

	)

	@/usr/include/linux/compiler-intel.h

3 #ifde‡
__ECC


9 
	~<asm/öåösics.h
>

14 #unde‡
b¨rõr


15 #unde‡
RELOC_HIDE


17 
	#b¨rõr
(Ë
	`__mem‹y_b¨rõr
()

	)

19 
	#RELOC_HIDE
(
±r
, 
off
) \

20 ({ 
__±r
; \

21 
__±r
 = (Ë(
±r
); \

22 (
	`ty≥of
(
±r
)Ë(
__±r
 + (
off
)); })

	)

	@/usr/include/linux/compiler-gcc.h

10 
	#b¨rõr
(Ë
__asm__
 
	`__vﬁ©ûe__
("": : :"mem‹y")

	)

14 
	#RELOC_HIDE
(
±r
, 
off
) \

15 ({ 
__±r
; \

16 
	`__asm__
 ("" : "=g"(
__±r
Ë: "0"(
±r
)); \

17 (
	`ty≥of
(
±r
)Ë(
__±r
 + (
off
)); })

	)

	@
1
.
1
/usr/include
175
3027
analysis.h
bits.c
bits.h
cfft.c
cfft.h
cfft_tab.h
common.c
common.h
common_dummy.c
decoder.c
decoder.h
drc.c
drc.h
drm_dec.c
drm_dec.h
error.c
error.h
filtbank.c
filtbank.h
fixed.h
hcr.c
huffman.c
huffman.h
ic_predict.c
ic_predict.h
iq_table.h
is.c
is.h
kbd_win.h
lt_predict.c
lt_predict.h
mdct.c
mdct.h
mdct_tab.h
mp4.c
mp4.h
ms.c
ms.h
output.c
output.h
pns.c
pns.h
ps_dec.c
ps_dec.h
ps_syntax.c
ps_tables.h
pulse.c
pulse.h
rvlc.c
rvlc.h
sbr_dct.c
sbr_dct.h
sbr_dec.c
sbr_dec.h
sbr_e_nf.c
sbr_e_nf.h
sbr_fbt.c
sbr_fbt.h
sbr_hfadj.c
sbr_hfadj.h
sbr_hfgen.c
sbr_hfgen.h
sbr_huff.c
sbr_huff.h
sbr_noise.h
sbr_qmf.c
sbr_qmf.h
sbr_qmf_c.h
sbr_syntax.c
sbr_syntax.h
sbr_tf_grid.c
sbr_tf_grid.h
sine_win.h
specrec.c
specrec.h
ssr.c
ssr.h
ssr_fb.c
ssr_fb.h
ssr_ipqf.c
ssr_ipqf.h
ssr_win.h
structs.h
syntax.c
syntax.h
tns.c
tns.h
../config.h
/usr/include/assert.h
/usr/include/inttypes.h
/usr/include/math.h
/usr/include/memory.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/stat.h
/usr/include/sys/types.h
/usr/include/unistd.h
codebook/hcb.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/huge_val.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/stat.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/xlocale.h
codebook/hcb_1.h
codebook/hcb_10.h
codebook/hcb_11.h
codebook/hcb_2.h
codebook/hcb_3.h
codebook/hcb_4.h
codebook/hcb_5.h
codebook/hcb_6.h
codebook/hcb_7.h
codebook/hcb_8.h
codebook/hcb_9.h
codebook/hcb_sf.h
/usr/include/_G_config.h
/usr/include/bits/endian.h
/usr/include/bits/sched.h
/usr/include/bits/select.h
/usr/include/bits/sigset.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/time.h
/usr/include/bits/typesizes.h
/usr/include/ctype.h
/usr/include/gnu/stubs.h
/usr/include/sys/cdefs.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/bits/initspin.h
/usr/include/bits/sigthread.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigstack.h
/usr/include/sys/ucontext.h
/usr/include/asm/sigcontext.h
/usr/include/linux/compiler.h
/usr/include/linux/compiler-gcc+.h
/usr/include/linux/compiler-gcc2.h
/usr/include/linux/compiler-gcc3.h
/usr/include/linux/compiler-intel.h
/usr/include/linux/compiler-gcc.h
